{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/177", "repository_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions", "labels_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/177/comments", "events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/177/events", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/177", "id": 225626057, "number": 177, "title": "Inbound poller breaks when file gets modified while reading", "user": {"login": "barvepan", "id": 22270384, "avatar_url": "https://avatars2.githubusercontent.com/u/22270384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barvepan", "html_url": "https://github.com/barvepan", "followers_url": "https://api.github.com/users/barvepan/followers", "following_url": "https://api.github.com/users/barvepan/following{/other_user}", "gists_url": "https://api.github.com/users/barvepan/gists{/gist_id}", "starred_url": "https://api.github.com/users/barvepan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barvepan/subscriptions", "organizations_url": "https://api.github.com/users/barvepan/orgs", "repos_url": "https://api.github.com/users/barvepan/repos", "events_url": "https://api.github.com/users/barvepan/events{/privacy}", "received_events_url": "https://api.github.com/users/barvepan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-02T08:31:38Z", "updated_at": "2017-05-02T12:42:39Z", "closed_at": null, "author_association": "NONE", "body": "we have a use case,  where we are reading the file from windows remote location with the following steps:\r\n\r\n1. Read file from windows share location say input folder.\r\n2. Usually files are very large in size ( > 100mb ) and poller takes time to download it.\r\n3. When poller is downloading files, and at the same time if user updates/modifies ( copy & paste the same file ) the source file then poller breaks and moves to next step in flow with half downloaded file.\r\n\r\nPlease see this link for more details http://stackoverflow.com/questions/43389062/spring-integration-inbound-poller-breaks-when-file-gets-modified-while-reading?noredirect=1#comment74369732_43389062", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163", "repository_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions", "labels_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163/comments", "events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163/events", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/163", "id": 164051667, "number": 163, "title": "Migrate etcd features from Spring Cloud", "user": {"login": "dsyer", "id": 124075, "avatar_url": "https://avatars1.githubusercontent.com/u/124075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsyer", "html_url": "https://github.com/dsyer", "followers_url": "https://api.github.com/users/dsyer/followers", "following_url": "https://api.github.com/users/dsyer/following{/other_user}", "gists_url": "https://api.github.com/users/dsyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsyer/subscriptions", "organizations_url": "https://api.github.com/users/dsyer/orgs", "repos_url": "https://api.github.com/users/dsyer/repos", "events_url": "https://api.github.com/users/dsyer/events{/privacy}", "received_events_url": "https://api.github.com/users/dsyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-07-06T11:06:32Z", "updated_at": "2018-02-06T19:43:09Z", "closed_at": null, "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/163", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/163", "diff_url": "https://github.com/spring-projects/spring-integration-extensions/pull/163.diff", "patch_url": "https://github.com/spring-projects/spring-integration-extensions/pull/163.patch"}, "body": null, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/158", "repository_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions", "labels_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/158/comments", "events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/158/events", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/158", "id": 133766687, "number": 158, "title": "SMPP: Autoreconnect doesn't work", "user": {"login": "ghost", "id": 10137, "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-02-15T17:02:28Z", "updated_at": "2016-02-16T20:17:33Z", "closed_at": null, "author_association": "NONE", "body": "I try to see if the reconnection to the server works, so I kill my smpp server and restart it.\nthe client never manage to restore the connection.\n\nsee the log :  \n17:52:57 INFO  o.j.s.AbstractSession - executeSendCommand\n17:52:57 INFO  o.j.s.AbstractSession - commandID:80000015 status:00000000 sequence:16\n17:53:02 INFO  o.j.s.AbstractSession - EnquireLinkSender.run() send\n17:53:02 INFO  o.j.s.AbstractSession - executeSendCommand\n17:53:02 INFO  o.j.s.AbstractSession - commandID:80000015 status:00000000 sequence:17\n17:53:07 INFO  o.j.s.AbstractSession - EnquireLinkSender.run() send\n17:53:07 INFO  o.j.s.AbstractSession - executeSendCommand\n17:53:07 INFO  o.j.s.AbstractSession - commandID:80000015 status:00000000 sequence:18\n17:53:09 WARN  o.j.s.SMPPSession - IOException while reading: null\n17:53:09 WARN  o.j.s.AbstractSession - closing enquireLinkSender Thread[EnquireLinkSender: org.jsmpp.session.SMPPSession@7b3dd80d,5,main]\n17:53:09 WARN  o.j.s.AbstractSession - closing enquireLinkSender alive:true daemon:true interrupted:false\n17:53:09 INFO  o.j.s.AbstractSession - JOINED!!!\n17:53:09 WARN  o.j.s.AbstractSession - closing enquireLinkSender Thread[EnquireLinkSender: org.jsmpp.session.SMPPSession@7b3dd80d,5,]\n17:53:09 WARN  o.j.s.AbstractSession - closing enquireLinkSender alive:false daemon:true interrupted:false\n17:53:09 INFO  o.j.s.SMPPSession - PDUReaderWorker stop\n17:53:16 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:53:23 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:53:46 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:53:53 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:54:16 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:54:23 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:54:46 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:54:53 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:55:16 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:55:23 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:55:46 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:55:53 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:56:16 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n17:56:23 ERROR o.s.i.s.s.SmppSessionFactoryBean$AutoReconnectLifecycle - Error happened when trying to connect to localhost:20775. Cause: Failed connecting\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148", "repository_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions", "labels_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148/comments", "events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148/events", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/148", "id": 93289968, "number": 148, "title": "Intext 178", "user": {"login": "nodabadri", "id": 12532706, "avatar_url": "https://avatars0.githubusercontent.com/u/12532706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodabadri", "html_url": "https://github.com/nodabadri", "followers_url": "https://api.github.com/users/nodabadri/followers", "following_url": "https://api.github.com/users/nodabadri/following{/other_user}", "gists_url": "https://api.github.com/users/nodabadri/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodabadri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodabadri/subscriptions", "organizations_url": "https://api.github.com/users/nodabadri/orgs", "repos_url": "https://api.github.com/users/nodabadri/repos", "events_url": "https://api.github.com/users/nodabadri/events{/privacy}", "received_events_url": "https://api.github.com/users/nodabadri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-06T14:15:45Z", "updated_at": "2015-08-18T00:27:17Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/148", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/148", "diff_url": "https://github.com/spring-projects/spring-integration-extensions/pull/148.diff", "patch_url": "https://github.com/spring-projects/spring-integration-extensions/pull/148.patch"}, "body": "Changes in SmesMessageSpecification.java and SmppInboundGateway.java for handling USSD operations\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11", "repository_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions", "labels_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11/comments", "events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11/events", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11", "id": 7265769, "number": 11, "title": "INTEXT-19: Push Notification adapters for Android devices", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-10-01T15:18:16Z", "updated_at": "2018-02-06T19:43:09Z", "closed_at": null, "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/11", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11", "diff_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11.diff", "patch_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11.patch"}, "body": "The PR is for adding the initial support for sending push notifications to mobile and hand held devices.\nThis is the first of the many services to be supported from Spring Integration for pushing to mobile devices from java applications.\n\nThe umbrella JIRA for this is\nhttps://jira.springsource.org/browse/INTEXT-18\n\nand the specific JIRA to support push to Android devices is https://jira.springsource.org/browse/INTEXT-19\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "11b8990daf76c36481cb70b2bed3df87edd11547", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2018-02-09T20:44:22Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2018-02-09T20:44:22Z"}, "message": "Polishing catch block in the LeaderInitiator", "tree": {"sha": "a8ad9ed91103d31a0723c151253417af420922e4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/a8ad9ed91103d31a0723c151253417af420922e4"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/11b8990daf76c36481cb70b2bed3df87edd11547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/11b8990daf76c36481cb70b2bed3df87edd11547", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/11b8990daf76c36481cb70b2bed3df87edd11547", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/11b8990daf76c36481cb70b2bed3df87edd11547/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9c7cccf7572e70b8bf47d909047919299651903", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f9c7cccf7572e70b8bf47d909047919299651903", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f9c7cccf7572e70b8bf47d909047919299651903"}]}, {"sha": "f9c7cccf7572e70b8bf47d909047919299651903", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2018-02-06T19:41:54Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2018-02-06T19:42:56Z"}, "message": "GH-183: Fix lifecycle issues in the LeaderInitiator\n\nFixes https://github.com/spring-projects/spring-integration-extensions/issues/183\n\n* Replace `Thread.sleep(Long.MAX_VALUE);` in the `LeaderSelector` main\nloop with the `heartBeatMillis` to `tryLock` against the Hazelcast\nperiodically\n* Add `busyWaitMillis` timeout in case of lost leadership or exception\nfrom the Hazelcast\n* Resubmit `LeaderSelector` in case of any exception exception\n* Upgrade to the Hazelcast-3.8.9 and SI-4.3.14", "tree": {"sha": "df14e6ff1ba64b9198e75443ded6d59b236d8d91", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/df14e6ff1ba64b9198e75443ded6d59b236d8d91"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f9c7cccf7572e70b8bf47d909047919299651903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f9c7cccf7572e70b8bf47d909047919299651903", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f9c7cccf7572e70b8bf47d909047919299651903", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f9c7cccf7572e70b8bf47d909047919299651903/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c347877d97714e7888616f2639bb76bba3fddc9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8c347877d97714e7888616f2639bb76bba3fddc9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8c347877d97714e7888616f2639bb76bba3fddc9"}]}, {"sha": "8c347877d97714e7888616f2639bb76bba3fddc9", "commit": {"author": {"name": "Jorge", "email": "jagedn@gmail.com", "date": "2017-10-23T21:32:57Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-10-23T21:32:57Z"}, "message": "ZipTransformer: Use FILENAME header if specified\n\nIf FILENAME is present at headers we must use this value as the name \r\nof zip file without conversion", "tree": {"sha": "39eb20027bfe219bc41d384eb96a25204d0c6bbf", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/39eb20027bfe219bc41d384eb96a25204d0c6bbf"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/8c347877d97714e7888616f2639bb76bba3fddc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8c347877d97714e7888616f2639bb76bba3fddc9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8c347877d97714e7888616f2639bb76bba3fddc9", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8c347877d97714e7888616f2639bb76bba3fddc9/comments", "author": {"login": "jagedn", "id": 2102730, "avatar_url": "https://avatars1.githubusercontent.com/u/2102730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jagedn", "html_url": "https://github.com/jagedn", "followers_url": "https://api.github.com/users/jagedn/followers", "following_url": "https://api.github.com/users/jagedn/following{/other_user}", "gists_url": "https://api.github.com/users/jagedn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jagedn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jagedn/subscriptions", "organizations_url": "https://api.github.com/users/jagedn/orgs", "repos_url": "https://api.github.com/users/jagedn/repos", "events_url": "https://api.github.com/users/jagedn/events{/privacy}", "received_events_url": "https://api.github.com/users/jagedn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45395e80e5d005f5f0bb3306343df552200e9d9b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/45395e80e5d005f5f0bb3306343df552200e9d9b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/45395e80e5d005f5f0bb3306343df552200e9d9b"}]}, {"sha": "45395e80e5d005f5f0bb3306343df552200e9d9b", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-07-17T19:15:16Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-07-17T19:15:16Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "5c447c4c2842e5d2dc419f893daf87845b40970f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/5c447c4c2842e5d2dc419f893daf87845b40970f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/45395e80e5d005f5f0bb3306343df552200e9d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/45395e80e5d005f5f0bb3306343df552200e9d9b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/45395e80e5d005f5f0bb3306343df552200e9d9b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/45395e80e5d005f5f0bb3306343df552200e9d9b/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca5867f64bdfa8e0707941dd40fcae97be072607", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ca5867f64bdfa8e0707941dd40fcae97be072607", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ca5867f64bdfa8e0707941dd40fcae97be072607"}]}, {"sha": "ca5867f64bdfa8e0707941dd40fcae97be072607", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-07-17T19:15:09Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-07-17T19:15:09Z"}, "message": "[artifactory-release] Release version Hazelcast 1.0.0.RELEASE", "tree": {"sha": "27bafcec0d76294f3f8d14ddd493e5668b805088", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/27bafcec0d76294f3f8d14ddd493e5668b805088"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ca5867f64bdfa8e0707941dd40fcae97be072607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ca5867f64bdfa8e0707941dd40fcae97be072607", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ca5867f64bdfa8e0707941dd40fcae97be072607", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ca5867f64bdfa8e0707941dd40fcae97be072607/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e03e6e553e76522e9a0e685ebad9156579866fd0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e03e6e553e76522e9a0e685ebad9156579866fd0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e03e6e553e76522e9a0e685ebad9156579866fd0"}]}, {"sha": "e03e6e553e76522e9a0e685ebad9156579866fd0", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-17T19:03:02Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-17T19:03:02Z"}, "message": "Document `HazelcastLockRegistry`", "tree": {"sha": "424259822845181b5f44570c0c0a369910bcb56a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/424259822845181b5f44570c0c0a369910bcb56a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e03e6e553e76522e9a0e685ebad9156579866fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e03e6e553e76522e9a0e685ebad9156579866fd0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e03e6e553e76522e9a0e685ebad9156579866fd0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e03e6e553e76522e9a0e685ebad9156579866fd0/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89e6274cc577e4a8974e171a88d44906063111b0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/89e6274cc577e4a8974e171a88d44906063111b0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/89e6274cc577e4a8974e171a88d44906063111b0"}]}, {"sha": "89e6274cc577e4a8974e171a88d44906063111b0", "commit": {"author": {"name": "Vinicius Carvalho", "email": "viniciusccarvalho@gmail.com", "date": "2017-07-14T17:29:13Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-15T01:35:50Z"}, "message": "Initial implementation of HazelcastMetadataStore\n\nHazelcastMetadataStore improvements\n - Adding ListenableMetadataStore capabilities\n - Extra tests for listeners\n\nRequested changes from review\n\n* Make `HazelcastMetadataStore.MapListener` as static class", "tree": {"sha": "cc446fac9908768a10dc65081b771fc0ad1d5cb1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/cc446fac9908768a10dc65081b771fc0ad1d5cb1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/89e6274cc577e4a8974e171a88d44906063111b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/89e6274cc577e4a8974e171a88d44906063111b0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/89e6274cc577e4a8974e171a88d44906063111b0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/89e6274cc577e4a8974e171a88d44906063111b0/comments", "author": {"login": "viniciusccarvalho", "id": 803893, "avatar_url": "https://avatars3.githubusercontent.com/u/803893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viniciusccarvalho", "html_url": "https://github.com/viniciusccarvalho", "followers_url": "https://api.github.com/users/viniciusccarvalho/followers", "following_url": "https://api.github.com/users/viniciusccarvalho/following{/other_user}", "gists_url": "https://api.github.com/users/viniciusccarvalho/gists{/gist_id}", "starred_url": "https://api.github.com/users/viniciusccarvalho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viniciusccarvalho/subscriptions", "organizations_url": "https://api.github.com/users/viniciusccarvalho/orgs", "repos_url": "https://api.github.com/users/viniciusccarvalho/repos", "events_url": "https://api.github.com/users/viniciusccarvalho/events{/privacy}", "received_events_url": "https://api.github.com/users/viniciusccarvalho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01184c1304fc62655f4bb7aa0d4367afee1b6a8a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/01184c1304fc62655f4bb7aa0d4367afee1b6a8a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/01184c1304fc62655f4bb7aa0d4367afee1b6a8a"}]}, {"sha": "01184c1304fc62655f4bb7aa0d4367afee1b6a8a", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-13T23:15:06Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-13T23:15:06Z"}, "message": "Add HazelcastLockRegistry implementation", "tree": {"sha": "aeca14057e1c849f49c22ddb45f0c27a5248551a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/aeca14057e1c849f49c22ddb45f0c27a5248551a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/01184c1304fc62655f4bb7aa0d4367afee1b6a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/01184c1304fc62655f4bb7aa0d4367afee1b6a8a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/01184c1304fc62655f4bb7aa0d4367afee1b6a8a", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/01184c1304fc62655f4bb7aa0d4367afee1b6a8a/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5511987be258e6f7dbc3818237b059a832a92e7b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5511987be258e6f7dbc3818237b059a832a92e7b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5511987be258e6f7dbc3818237b059a832a92e7b"}]}, {"sha": "5511987be258e6f7dbc3818237b059a832a92e7b", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-31T23:24:45Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-08T00:22:51Z"}, "message": "GH-172: Do not require local HZ instances\n\nFixes spring-projects/spring-integration-extensions#172\n\nSince we can have an application based on the `HazelcastClient`, we don't need to require `Hazelcast.getAllHazelcastInstances()` be presented.\n\n* Rework `HazelcastLocalInstanceRegistrar` to be able to accept external `HazelcastInstance` for `MultiMap` and `MembershipListener` registration\n* If there is on local `Hazelcast.getAllHazelcastInstances()` just log a warn that we can't register `MembershipListener`\n* Allow for `AbstractHazelcastMessageProducer` to accept events in the `CacheListeningPolicyType.SINGLE` mode when there is no local `Hazelcast.getAllHazelcastInstances()`", "tree": {"sha": "92bf18786e3edfc544b8bebfabd70892fab01b6c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/92bf18786e3edfc544b8bebfabd70892fab01b6c"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/5511987be258e6f7dbc3818237b059a832a92e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5511987be258e6f7dbc3818237b059a832a92e7b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5511987be258e6f7dbc3818237b059a832a92e7b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5511987be258e6f7dbc3818237b059a832a92e7b/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "894a60b8bb4da626023f30c2815419d3afc02097", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/894a60b8bb4da626023f30c2815419d3afc02097", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/894a60b8bb4da626023f30c2815419d3afc02097"}]}, {"sha": "894a60b8bb4da626023f30c2815419d3afc02097", "commit": {"author": {"name": "Vinicius Carvalho", "email": "viniciusccarvalho@gmail.com", "date": "2017-07-06T16:23:19Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-08T00:17:38Z"}, "message": "Add Hazelcast MessageStore implementation\n\n- Hazelcast implementation of the `MessageStore`\n- Test case uses the same tests as gemfire plus a couple of more scenarios\n* Some polishing and Docs", "tree": {"sha": "33b020126b2d2c739ca3a8efff9638726d95a85d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/33b020126b2d2c739ca3a8efff9638726d95a85d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/894a60b8bb4da626023f30c2815419d3afc02097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/894a60b8bb4da626023f30c2815419d3afc02097", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/894a60b8bb4da626023f30c2815419d3afc02097", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/894a60b8bb4da626023f30c2815419d3afc02097/comments", "author": {"login": "viniciusccarvalho", "id": 803893, "avatar_url": "https://avatars3.githubusercontent.com/u/803893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viniciusccarvalho", "html_url": "https://github.com/viniciusccarvalho", "followers_url": "https://api.github.com/users/viniciusccarvalho/followers", "following_url": "https://api.github.com/users/viniciusccarvalho/following{/other_user}", "gists_url": "https://api.github.com/users/viniciusccarvalho/gists{/gist_id}", "starred_url": "https://api.github.com/users/viniciusccarvalho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viniciusccarvalho/subscriptions", "organizations_url": "https://api.github.com/users/viniciusccarvalho/orgs", "repos_url": "https://api.github.com/users/viniciusccarvalho/repos", "events_url": "https://api.github.com/users/viniciusccarvalho/events{/privacy}", "received_events_url": "https://api.github.com/users/viniciusccarvalho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6474ce9bb6d992739d69237043ddb23035a86a54", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6474ce9bb6d992739d69237043ddb23035a86a54", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6474ce9bb6d992739d69237043ddb23035a86a54"}]}, {"sha": "6474ce9bb6d992739d69237043ddb23035a86a54", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-07T23:54:04Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-07-07T23:54:04Z"}, "message": "Upgrade to Gradle 4.0 and Checkstyle 8.0", "tree": {"sha": "4633bf3ac6d0bffe4250304807013f43f5c42ced", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4633bf3ac6d0bffe4250304807013f43f5c42ced"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/6474ce9bb6d992739d69237043ddb23035a86a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6474ce9bb6d992739d69237043ddb23035a86a54", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6474ce9bb6d992739d69237043ddb23035a86a54", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6474ce9bb6d992739d69237043ddb23035a86a54/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd7d4e198f335b6c437713d06be4f7cf9881cdd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0bd7d4e198f335b6c437713d06be4f7cf9881cdd", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0bd7d4e198f335b6c437713d06be4f7cf9881cdd"}]}, {"sha": "0bd7d4e198f335b6c437713d06be4f7cf9881cdd", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-06-21T20:50:48Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-06-21T20:50:48Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "a3fb6405108925ce16c10fbd9f53d00dc6bb95ed", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/a3fb6405108925ce16c10fbd9f53d00dc6bb95ed"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0bd7d4e198f335b6c437713d06be4f7cf9881cdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0bd7d4e198f335b6c437713d06be4f7cf9881cdd", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0bd7d4e198f335b6c437713d06be4f7cf9881cdd", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0bd7d4e198f335b6c437713d06be4f7cf9881cdd/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "410e58b9488d97f17e3de4050e2b01b5365624aa", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/410e58b9488d97f17e3de4050e2b01b5365624aa", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/410e58b9488d97f17e3de4050e2b01b5365624aa"}]}, {"sha": "410e58b9488d97f17e3de4050e2b01b5365624aa", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-06-21T20:50:43Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-06-21T20:50:43Z"}, "message": "[artifactory-release] Release version ZIP-1.0.0.RELEASE", "tree": {"sha": "a7c454fc8b3e7ab69b534f912f400eea9a6c70ef", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/a7c454fc8b3e7ab69b534f912f400eea9a6c70ef"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/410e58b9488d97f17e3de4050e2b01b5365624aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/410e58b9488d97f17e3de4050e2b01b5365624aa", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/410e58b9488d97f17e3de4050e2b01b5365624aa", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/410e58b9488d97f17e3de4050e2b01b5365624aa/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "deeeccc40b9a555ce1788adea6275e1781cd2f9c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/deeeccc40b9a555ce1788adea6275e1781cd2f9c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/deeeccc40b9a555ce1788adea6275e1781cd2f9c"}]}, {"sha": "deeeccc40b9a555ce1788adea6275e1781cd2f9c", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-06-21T20:46:22Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-06-21T20:46:22Z"}, "message": "GH-160: Optimize UnZipResultSplitter\n\nFixes spring-projects/spring-integration-extensions#160\n\n* Upgrade to `zt-zip-1.11`\n* Polish README a bit", "tree": {"sha": "3c16ef360a8b760de0ce651fff9c47d284faf514", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3c16ef360a8b760de0ce651fff9c47d284faf514"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/deeeccc40b9a555ce1788adea6275e1781cd2f9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/deeeccc40b9a555ce1788adea6275e1781cd2f9c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/deeeccc40b9a555ce1788adea6275e1781cd2f9c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/deeeccc40b9a555ce1788adea6275e1781cd2f9c/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f1b2babf6eaf63de9788f69f7db540d0beaf9ed", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6f1b2babf6eaf63de9788f69f7db540d0beaf9ed", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6f1b2babf6eaf63de9788f69f7db540d0beaf9ed"}]}, {"sha": "6f1b2babf6eaf63de9788f69f7db540d0beaf9ed", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-06-21T19:47:16Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-06-21T19:47:16Z"}, "message": "Upgrade to Gradle 4.0 and SI-4.3.10", "tree": {"sha": "4980e07fb62b01232b4f669fbaf9dd6f3c7ed4a5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4980e07fb62b01232b4f669fbaf9dd6f3c7ed4a5"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/6f1b2babf6eaf63de9788f69f7db540d0beaf9ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6f1b2babf6eaf63de9788f69f7db540d0beaf9ed", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6f1b2babf6eaf63de9788f69f7db540d0beaf9ed", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6f1b2babf6eaf63de9788f69f7db540d0beaf9ed/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfc8184993d2d6b2ee36e10f96297ff4031b65e3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cfc8184993d2d6b2ee36e10f96297ff4031b65e3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cfc8184993d2d6b2ee36e10f96297ff4031b65e3"}]}, {"sha": "cfc8184993d2d6b2ee36e10f96297ff4031b65e3", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-30T21:22:44Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2017-01-30T22:12:52Z"}, "message": "GH-173: Leaders: Warn event errors, not re-throw\n\nFixes GH-173 (https://github.com/spring-projects/spring-integration-extensions/issues/173)\n\nCurrently when an error is thrown from the event publishing the role granting is broken and we just go to the role revoking.\n\n* Since it's just an event publishing it shouldn't effect the original leader election.\n* `try...catch` event publishing in the `LeaderInitiator` and `logger.warn` an `Exception`", "tree": {"sha": "da71652c5e88617379e8797b471040c219c4c6dd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/da71652c5e88617379e8797b471040c219c4c6dd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/cfc8184993d2d6b2ee36e10f96297ff4031b65e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cfc8184993d2d6b2ee36e10f96297ff4031b65e3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cfc8184993d2d6b2ee36e10f96297ff4031b65e3", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cfc8184993d2d6b2ee36e10f96297ff4031b65e3/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "848ae2d6a0d92dedd4a65050a3f5a4d79ff69c78", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/848ae2d6a0d92dedd4a65050a3f5a4d79ff69c78", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/848ae2d6a0d92dedd4a65050a3f5a4d79ff69c78"}]}, {"sha": "848ae2d6a0d92dedd4a65050a3f5a4d79ff69c78", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-01-23T21:37:12Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-01-23T21:37:12Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "99ab08a6b3dc9c56c902e741311e26e3d551e384", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/99ab08a6b3dc9c56c902e741311e26e3d551e384"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/848ae2d6a0d92dedd4a65050a3f5a4d79ff69c78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/848ae2d6a0d92dedd4a65050a3f5a4d79ff69c78", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/848ae2d6a0d92dedd4a65050a3f5a4d79ff69c78", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/848ae2d6a0d92dedd4a65050a3f5a4d79ff69c78/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "541bea384d06cdcc05b2cc7bc1f40a98ac60967e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/541bea384d06cdcc05b2cc7bc1f40a98ac60967e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/541bea384d06cdcc05b2cc7bc1f40a98ac60967e"}]}, {"sha": "541bea384d06cdcc05b2cc7bc1f40a98ac60967e", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-01-23T21:37:08Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-01-23T21:37:08Z"}, "message": "[artifactory-release] Release version 1.0.0.M2", "tree": {"sha": "1fc1b16259dffc1b8693a052403a6d96b5e8563f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1fc1b16259dffc1b8693a052403a6d96b5e8563f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/541bea384d06cdcc05b2cc7bc1f40a98ac60967e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/541bea384d06cdcc05b2cc7bc1f40a98ac60967e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/541bea384d06cdcc05b2cc7bc1f40a98ac60967e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/541bea384d06cdcc05b2cc7bc1f40a98ac60967e/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4472a87e9c1264e50a1e3aacd061e0db19a984a8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4472a87e9c1264e50a1e3aacd061e0db19a984a8", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4472a87e9c1264e50a1e3aacd061e0db19a984a8"}]}, {"sha": "4472a87e9c1264e50a1e3aacd061e0db19a984a8", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-23T21:17:00Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-23T21:17:00Z"}, "message": "Fix `LeaderInitiatorTests` race condition\n\nhttps://build.spring.io/browse/INTEXT-SIH1-10\n\nWhen `LeaderInitiator` yields its leadership there is a good chance that it will obtain it back, so there is no guaranty that it isn't leader after revoking", "tree": {"sha": "ccb23ab28e27152e3ae9d39800657cba950c5a43", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ccb23ab28e27152e3ae9d39800657cba950c5a43"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4472a87e9c1264e50a1e3aacd061e0db19a984a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4472a87e9c1264e50a1e3aacd061e0db19a984a8", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4472a87e9c1264e50a1e3aacd061e0db19a984a8", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4472a87e9c1264e50a1e3aacd061e0db19a984a8/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e7b4cfcc72c39b100d93213665112b05668b5ff", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6e7b4cfcc72c39b100d93213665112b05668b5ff", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6e7b4cfcc72c39b100d93213665112b05668b5ff"}]}, {"sha": "6e7b4cfcc72c39b100d93213665112b05668b5ff", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-23T20:33:30Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-23T20:33:30Z"}, "message": "GH-169: Upgrade and prepare for release\n\nFixes GH-169 (https://github.com/spring-projects/spring-integration-extensions/issues/169)\n\n* Upgrade Gradle and dependencies\n* Apply Checkstyle", "tree": {"sha": "d8b9671c7c39d94e3741d1976baae658f8d83715", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d8b9671c7c39d94e3741d1976baae658f8d83715"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/6e7b4cfcc72c39b100d93213665112b05668b5ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6e7b4cfcc72c39b100d93213665112b05668b5ff", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6e7b4cfcc72c39b100d93213665112b05668b5ff", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6e7b4cfcc72c39b100d93213665112b05668b5ff/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab73b6cd2c1e21b7f4cd0bee3d106a05097d4af3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab73b6cd2c1e21b7f4cd0bee3d106a05097d4af3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ab73b6cd2c1e21b7f4cd0bee3d106a05097d4af3"}]}, {"sha": "ab73b6cd2c1e21b7f4cd0bee3d106a05097d4af3", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-01-17T22:47:25Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-01-17T22:47:25Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "8342b02c895bade443f5d592070a1213b35e7404", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8342b02c895bade443f5d592070a1213b35e7404"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ab73b6cd2c1e21b7f4cd0bee3d106a05097d4af3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab73b6cd2c1e21b7f4cd0bee3d106a05097d4af3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ab73b6cd2c1e21b7f4cd0bee3d106a05097d4af3", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab73b6cd2c1e21b7f4cd0bee3d106a05097d4af3/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "253512a44265133ae1bb0dc002116fb4f2df6fcb", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/253512a44265133ae1bb0dc002116fb4f2df6fcb", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/253512a44265133ae1bb0dc002116fb4f2df6fcb"}]}, {"sha": "253512a44265133ae1bb0dc002116fb4f2df6fcb", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-01-17T22:47:22Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2017-01-17T22:47:22Z"}, "message": "[artifactory-release] Release version 0.5.0.RELEASE", "tree": {"sha": "18e3d262262f90464acd6ac7cabf0f59668ad80f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/18e3d262262f90464acd6ac7cabf0f59668ad80f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/253512a44265133ae1bb0dc002116fb4f2df6fcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/253512a44265133ae1bb0dc002116fb4f2df6fcb", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/253512a44265133ae1bb0dc002116fb4f2df6fcb", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/253512a44265133ae1bb0dc002116fb4f2df6fcb/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f5dbaab558ee08520df70947e94f85e3a37719b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1f5dbaab558ee08520df70947e94f85e3a37719b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1f5dbaab558ee08520df70947e94f85e3a37719b"}]}, {"sha": "1f5dbaab558ee08520df70947e94f85e3a37719b", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-16T20:30:54Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2017-01-17T18:15:12Z"}, "message": "SMB: Polishing XSD according latest SI", "tree": {"sha": "c598acdb235985c90c5b24d415be224aecb52b2c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c598acdb235985c90c5b24d415be224aecb52b2c"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1f5dbaab558ee08520df70947e94f85e3a37719b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1f5dbaab558ee08520df70947e94f85e3a37719b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1f5dbaab558ee08520df70947e94f85e3a37719b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1f5dbaab558ee08520df70947e94f85e3a37719b/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c7063588ccb735e10d9887e30b5b6539284dbca", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0c7063588ccb735e10d9887e30b5b6539284dbca", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0c7063588ccb735e10d9887e30b5b6539284dbca"}]}, {"sha": "0c7063588ccb735e10d9887e30b5b6539284dbca", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-16T18:04:55Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2017-01-16T18:04:55Z"}, "message": "GH-168: Upgrade to SI-4.3.6 and others\n\nFixes GH-168 (https://github.com/spring-projects/spring-integration-extensions/issues/168)", "tree": {"sha": "49a6b76dfaf598e8240b20cce71d6e56e6339e5b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/49a6b76dfaf598e8240b20cce71d6e56e6339e5b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0c7063588ccb735e10d9887e30b5b6539284dbca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0c7063588ccb735e10d9887e30b5b6539284dbca", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0c7063588ccb735e10d9887e30b5b6539284dbca", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0c7063588ccb735e10d9887e30b5b6539284dbca/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4990eebd8ede4d2aa4e65766bd5e2fa067129d9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f4990eebd8ede4d2aa4e65766bd5e2fa067129d9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f4990eebd8ede4d2aa4e65766bd5e2fa067129d9"}]}, {"sha": "f4990eebd8ede4d2aa4e65766bd5e2fa067129d9", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-09-21T21:18:31Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-09-21T21:18:31Z"}, "message": "Downgrade to Gradle 2.14\n\nNeither Bamboo (Artifactory Gradle), nor Spring IO plugin supports Gradle 3.x", "tree": {"sha": "72ef3443b0359d90ed616f8faf084fffaaf32f21", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/72ef3443b0359d90ed616f8faf084fffaaf32f21"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f4990eebd8ede4d2aa4e65766bd5e2fa067129d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f4990eebd8ede4d2aa4e65766bd5e2fa067129d9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f4990eebd8ede4d2aa4e65766bd5e2fa067129d9", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f4990eebd8ede4d2aa4e65766bd5e2fa067129d9/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a13e41d9607517f978afdca4fa55f11a925ab4e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9a13e41d9607517f978afdca4fa55f11a925ab4e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9a13e41d9607517f978afdca4fa55f11a925ab4e"}]}, {"sha": "9a13e41d9607517f978afdca4fa55f11a925ab4e", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-09-09T18:02:51Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2016-09-21T20:54:27Z"}, "message": "GH-164: Fix `ZipTransformer` `deleteFile` Mode\n\nFixes GH-164 (https://github.com/spring-projects/spring-integration-extensions/issues/164)\n\n* Move `deleteFile` logic to the end of of `ZipTransformer#doZipTransform()`\n* Add `deleteFile = true` for the `ZipTransformerTests`\n* Add `<request-handler-advice-chain>` to the transformers XSD definitions\n* Upgrade to Gradle 3.0\n* Upgrade dependencies\n\nMove delete logic before reply message creation", "tree": {"sha": "9ffdb31e0198b69958b2c41f3be885d17be5703d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9ffdb31e0198b69958b2c41f3be885d17be5703d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/9a13e41d9607517f978afdca4fa55f11a925ab4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9a13e41d9607517f978afdca4fa55f11a925ab4e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9a13e41d9607517f978afdca4fa55f11a925ab4e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9a13e41d9607517f978afdca4fa55f11a925ab4e/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ba841416b9f7f54e29a958172ba7bb2b0e13392", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0ba841416b9f7f54e29a958172ba7bb2b0e13392", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0ba841416b9f7f54e29a958172ba7bb2b0e13392"}]}, {"sha": "0ba841416b9f7f54e29a958172ba7bb2b0e13392", "commit": {"author": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2016-07-11T09:17:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-11T09:17:08Z"}, "message": "Fix Contributing Link", "tree": {"sha": "ad9cf1ee4b36759e4179be32820f8c9dafca5729", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ad9cf1ee4b36759e4179be32820f8c9dafca5729"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0ba841416b9f7f54e29a958172ba7bb2b0e13392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0ba841416b9f7f54e29a958172ba7bb2b0e13392", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0ba841416b9f7f54e29a958172ba7bb2b0e13392", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0ba841416b9f7f54e29a958172ba7bb2b0e13392/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e0443d34bf4da296ea0a28a232c8581875ebd72", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7e0443d34bf4da296ea0a28a232c8581875ebd72", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7e0443d34bf4da296ea0a28a232c8581875ebd72"}]}, {"sha": "7e0443d34bf4da296ea0a28a232c8581875ebd72", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-07-06T21:09:19Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-07-06T21:09:19Z"}, "message": "Some upgrades and polishing", "tree": {"sha": "e15ab4cb298151bb819721223d98ee85cff3692b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e15ab4cb298151bb819721223d98ee85cff3692b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7e0443d34bf4da296ea0a28a232c8581875ebd72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7e0443d34bf4da296ea0a28a232c8581875ebd72", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7e0443d34bf4da296ea0a28a232c8581875ebd72", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7e0443d34bf4da296ea0a28a232c8581875ebd72/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92a01dbe2969dda83c662ba48d90e92a7ab8bc76", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/92a01dbe2969dda83c662ba48d90e92a7ab8bc76", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/92a01dbe2969dda83c662ba48d90e92a7ab8bc76"}]}, {"sha": "92a01dbe2969dda83c662ba48d90e92a7ab8bc76", "commit": {"author": {"name": "Dave Syer", "email": "dsyer@pivotal.io", "date": "2016-07-06T09:01:57Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-07-06T20:43:06Z"}, "message": "Migrate leader election support from Spring Cloud\n\nFix `LeaderInitiator`\n\n* Implement `SmartLifecycle` instead of just `Lifecycle`\n* Add `Assert`s\n* Rework logic from `IMap` for locks just into single `ILock`, since we require it only for the `role` as a key\n* Fix `Future.cancel(true)` logic via rescheduling\nSee https://jira.spring.io/browse/INT-4058 and its commit comments\n* Add more complex test-case to meet distributed requirements and verify several `yield()` cycles", "tree": {"sha": "9132146749b238555dfd9527e075d6b3062c352b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9132146749b238555dfd9527e075d6b3062c352b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/92a01dbe2969dda83c662ba48d90e92a7ab8bc76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/92a01dbe2969dda83c662ba48d90e92a7ab8bc76", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/92a01dbe2969dda83c662ba48d90e92a7ab8bc76", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/92a01dbe2969dda83c662ba48d90e92a7ab8bc76/comments", "author": {"login": "dsyer", "id": 124075, "avatar_url": "https://avatars1.githubusercontent.com/u/124075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsyer", "html_url": "https://github.com/dsyer", "followers_url": "https://api.github.com/users/dsyer/followers", "following_url": "https://api.github.com/users/dsyer/following{/other_user}", "gists_url": "https://api.github.com/users/dsyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsyer/subscriptions", "organizations_url": "https://api.github.com/users/dsyer/orgs", "repos_url": "https://api.github.com/users/dsyer/repos", "events_url": "https://api.github.com/users/dsyer/events{/privacy}", "received_events_url": "https://api.github.com/users/dsyer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dcca5b676f19dc0e070fd4f986311c70aa11a77", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8dcca5b676f19dc0e070fd4f986311c70aa11a77", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8dcca5b676f19dc0e070fd4f986311c70aa11a77"}]}, {"sha": "8dcca5b676f19dc0e070fd4f986311c70aa11a77", "commit": {"author": {"name": "englishman", "email": "kontiky@gmail.com", "date": "2016-04-04T21:21:16Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-04-06T14:34:41Z"}, "message": "INTEXT-219 Remain request headers after splitting\n\nJIRA: https://jira.spring.io/browse/INTEXT-219\n\nINTEXT-219: add unit test\n\nINTEXT-219: fix missed headers\n\nINTEXT-219: update file headers\n\nINTEXT-219: simplify context\n\nINTEXT-219: add test for preserving service header values\n\nINTEXT-219: rename auxiliary methods\n\nCode style polishing", "tree": {"sha": "3f09439e717261bce24479cb6f20a65cc9eab87e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3f09439e717261bce24479cb6f20a65cc9eab87e"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/8dcca5b676f19dc0e070fd4f986311c70aa11a77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8dcca5b676f19dc0e070fd4f986311c70aa11a77", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8dcca5b676f19dc0e070fd4f986311c70aa11a77", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8dcca5b676f19dc0e070fd4f986311c70aa11a77/comments", "author": {"login": "englishman", "id": 1883572, "avatar_url": "https://avatars3.githubusercontent.com/u/1883572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/englishman", "html_url": "https://github.com/englishman", "followers_url": "https://api.github.com/users/englishman/followers", "following_url": "https://api.github.com/users/englishman/following{/other_user}", "gists_url": "https://api.github.com/users/englishman/gists{/gist_id}", "starred_url": "https://api.github.com/users/englishman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/englishman/subscriptions", "organizations_url": "https://api.github.com/users/englishman/orgs", "repos_url": "https://api.github.com/users/englishman/repos", "events_url": "https://api.github.com/users/englishman/events{/privacy}", "received_events_url": "https://api.github.com/users/englishman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0efd494337d0b3a45b79a6cd65da79e585042e27", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0efd494337d0b3a45b79a6cd65da79e585042e27", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0efd494337d0b3a45b79a6cd65da79e585042e27"}]}, {"sha": "0efd494337d0b3a45b79a6cd65da79e585042e27", "commit": {"author": {"name": "erenavsarogullari", "email": "eren.avsarogullari@workday.com", "date": "2016-01-24T23:02:52Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-01-26T20:24:58Z"}, "message": "INTEXT-158: JavaConfig tests and upgrades\n\nJIRA: https://jira.spring.io/browse/INTEXT-158\n\n* Provide the test cases to demonstrate the Spring Integration Hazelcast adapters usage from the JavaConfig\n* Upgrade to Hazelcast-3.6, SI-4.2.4, Gradle-2.5\n* Fix Hazelcast-3.6 compatibility\n* Fix failing tests", "tree": {"sha": "b0229e9d8fed6d64eda09f9353aedbf1cbc027de", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b0229e9d8fed6d64eda09f9353aedbf1cbc027de"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0efd494337d0b3a45b79a6cd65da79e585042e27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0efd494337d0b3a45b79a6cd65da79e585042e27", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0efd494337d0b3a45b79a6cd65da79e585042e27", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0efd494337d0b3a45b79a6cd65da79e585042e27/comments", "author": {"login": "erenavsarogullari", "id": 1437738, "avatar_url": "https://avatars0.githubusercontent.com/u/1437738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erenavsarogullari", "html_url": "https://github.com/erenavsarogullari", "followers_url": "https://api.github.com/users/erenavsarogullari/followers", "following_url": "https://api.github.com/users/erenavsarogullari/following{/other_user}", "gists_url": "https://api.github.com/users/erenavsarogullari/gists{/gist_id}", "starred_url": "https://api.github.com/users/erenavsarogullari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erenavsarogullari/subscriptions", "organizations_url": "https://api.github.com/users/erenavsarogullari/orgs", "repos_url": "https://api.github.com/users/erenavsarogullari/repos", "events_url": "https://api.github.com/users/erenavsarogullari/events{/privacy}", "received_events_url": "https://api.github.com/users/erenavsarogullari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1759030fdaf1aca66c9ce329b11e8f50b94fbf4b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1759030fdaf1aca66c9ce329b11e8f50b94fbf4b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1759030fdaf1aca66c9ce329b11e8f50b94fbf4b"}]}, {"sha": "1759030fdaf1aca66c9ce329b11e8f50b94fbf4b", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2016-01-08T17:24:48Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2016-01-08T17:24:48Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "c3812b542b5d19452ae29c4ac91331715e526b9d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c3812b542b5d19452ae29c4ac91331715e526b9d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1759030fdaf1aca66c9ce329b11e8f50b94fbf4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1759030fdaf1aca66c9ce329b11e8f50b94fbf4b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1759030fdaf1aca66c9ce329b11e8f50b94fbf4b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1759030fdaf1aca66c9ce329b11e8f50b94fbf4b/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6c154220d558e83bf680d29d18f5142f9426a51", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6c154220d558e83bf680d29d18f5142f9426a51", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c6c154220d558e83bf680d29d18f5142f9426a51"}]}, {"sha": "c6c154220d558e83bf680d29d18f5142f9426a51", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2016-01-08T17:24:45Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2016-01-08T17:24:45Z"}, "message": "[artifactory-release] Release version 1.0.0.M1", "tree": {"sha": "9ee707fc4e294345c5aa7d4ac30c42aa81363cdf", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9ee707fc4e294345c5aa7d4ac30c42aa81363cdf"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c6c154220d558e83bf680d29d18f5142f9426a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6c154220d558e83bf680d29d18f5142f9426a51", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c6c154220d558e83bf680d29d18f5142f9426a51", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6c154220d558e83bf680d29d18f5142f9426a51/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd37ecae9a46fb94dce9dcf1e5296929cb349d67", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cd37ecae9a46fb94dce9dcf1e5296929cb349d67", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cd37ecae9a46fb94dce9dcf1e5296929cb349d67"}]}, {"sha": "cd37ecae9a46fb94dce9dcf1e5296929cb349d67", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-01-08T17:15:31Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-01-08T17:15:31Z"}, "message": "ZIP: More Polishing", "tree": {"sha": "c3812b542b5d19452ae29c4ac91331715e526b9d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c3812b542b5d19452ae29c4ac91331715e526b9d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/cd37ecae9a46fb94dce9dcf1e5296929cb349d67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cd37ecae9a46fb94dce9dcf1e5296929cb349d67", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cd37ecae9a46fb94dce9dcf1e5296929cb349d67", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cd37ecae9a46fb94dce9dcf1e5296929cb349d67/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a5fedcd7a67f9cc36f99a1dc9fa06c300f0b787", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0a5fedcd7a67f9cc36f99a1dc9fa06c300f0b787", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0a5fedcd7a67f9cc36f99a1dc9fa06c300f0b787"}]}, {"sha": "0a5fedcd7a67f9cc36f99a1dc9fa06c300f0b787", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-01-08T02:43:15Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-01-08T02:44:23Z"}, "message": "Zip: Some deep cleanup and polishing\n\n* Upgrade to Gradle-2.5, SI-4.2.4\n* Remove redundant dependencies\n* Add `slf4j-log4j12` to avoid log noise during testing\n* Add `settings.gradle` to allow Artifactory Release Management\n* Move XSD stuff to the proper place - `org\\springframework\\integration\\zip\\config`\n* Get rid of manual `enum` transformation in the `Parser`:\n  - we can't do that there because `property-placeholder` and SpEL are processed later\n  - no reason to do that at all - `enum`s are properly converted by the SF during bean population phase\n* Fix `UnZipTransformer` to `delete()` file in the `finally` block after closing the `InputStream` on file", "tree": {"sha": "57c0561630dee2f848537565895e924340c8bbbc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/57c0561630dee2f848537565895e924340c8bbbc"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0a5fedcd7a67f9cc36f99a1dc9fa06c300f0b787", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0a5fedcd7a67f9cc36f99a1dc9fa06c300f0b787", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0a5fedcd7a67f9cc36f99a1dc9fa06c300f0b787", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0a5fedcd7a67f9cc36f99a1dc9fa06c300f0b787/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7b31228c2839e2a2f77caf27bcc33c04efa4649", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f7b31228c2839e2a2f77caf27bcc33c04efa4649", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f7b31228c2839e2a2f77caf27bcc33c04efa4649"}]}, {"sha": "f7b31228c2839e2a2f77caf27bcc33c04efa4649", "commit": {"author": {"name": "Filippo Balicchia", "email": "fbalicchia@gmail.com", "date": "2015-12-16T06:43:27Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2016-01-05T17:13:10Z"}, "message": "INTEXT-215: Cassandra Namespace Support\n\nJIRA: https://jira.spring.io/browse/INTEXT-215", "tree": {"sha": "c7e8ffda4852787032850d9b07ad2dc8d5f641b6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c7e8ffda4852787032850d9b07ad2dc8d5f641b6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f7b31228c2839e2a2f77caf27bcc33c04efa4649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f7b31228c2839e2a2f77caf27bcc33c04efa4649", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f7b31228c2839e2a2f77caf27bcc33c04efa4649", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f7b31228c2839e2a2f77caf27bcc33c04efa4649/comments", "author": {"login": "fbalicchia", "id": 1023535, "avatar_url": "https://avatars3.githubusercontent.com/u/1023535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbalicchia", "html_url": "https://github.com/fbalicchia", "followers_url": "https://api.github.com/users/fbalicchia/followers", "following_url": "https://api.github.com/users/fbalicchia/following{/other_user}", "gists_url": "https://api.github.com/users/fbalicchia/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbalicchia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbalicchia/subscriptions", "organizations_url": "https://api.github.com/users/fbalicchia/orgs", "repos_url": "https://api.github.com/users/fbalicchia/repos", "events_url": "https://api.github.com/users/fbalicchia/events{/privacy}", "received_events_url": "https://api.github.com/users/fbalicchia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e9247711d72959dc1a3509451bd377e34ec1c29", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2e9247711d72959dc1a3509451bd377e34ec1c29", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2e9247711d72959dc1a3509451bd377e34ec1c29"}]}, {"sha": "2e9247711d72959dc1a3509451bd377e34ec1c29", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-09-30T18:42:54Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2015-10-28T21:16:14Z"}, "message": "INTEXT-195: Add XMPP Extension for Smack 4.1\n\nJIRA: https://jira.spring.io/browse/INTEXT-195\n\nUpgrade to Smack 4.1\n\nRework logic to the `XMPPConnection` interface\n\nRefactoring for the `XmppConnectionFactoryBean` to extract `serviceName` from the `user`.\n\nRemove redundant dependencies\n\nAdd `smack-java7` dependency and some other polishing after testing\n\nPolishing", "tree": {"sha": "ad5ed562f7c7d1b88ee127f93b6a03f59b059495", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ad5ed562f7c7d1b88ee127f93b6a03f59b059495"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2e9247711d72959dc1a3509451bd377e34ec1c29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2e9247711d72959dc1a3509451bd377e34ec1c29", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2e9247711d72959dc1a3509451bd377e34ec1c29", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2e9247711d72959dc1a3509451bd377e34ec1c29/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0867be2faf8ddabeef6549a854e7d9ed22c0aba7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0867be2faf8ddabeef6549a854e7d9ed22c0aba7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0867be2faf8ddabeef6549a854e7d9ed22c0aba7"}]}, {"sha": "0867be2faf8ddabeef6549a854e7d9ed22c0aba7", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-09-09T20:38:25Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-09-09T20:38:25Z"}, "message": "Upgrade to SI-4.2.0.RELEASE", "tree": {"sha": "bffb67b9ad9bb7c1c13f44572f0cbde86ced234c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/bffb67b9ad9bb7c1c13f44572f0cbde86ced234c"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0867be2faf8ddabeef6549a854e7d9ed22c0aba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0867be2faf8ddabeef6549a854e7d9ed22c0aba7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0867be2faf8ddabeef6549a854e7d9ed22c0aba7", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0867be2faf8ddabeef6549a854e7d9ed22c0aba7/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "573e1f301f5f3ca3a6cc8a8c89977c2e594692e1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/573e1f301f5f3ca3a6cc8a8c89977c2e594692e1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/573e1f301f5f3ca3a6cc8a8c89977c2e594692e1"}]}, {"sha": "573e1f301f5f3ca3a6cc8a8c89977c2e594692e1", "commit": {"author": {"name": "erenavsarogullari", "email": "erenavsarogullari@gmail.com", "date": "2015-06-08T19:37:46Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-07-15T17:53:32Z"}, "message": "INTEXT-167: Add Cluster Monitor Channel Adapter\n\nJIRA: https://jira.spring.io/browse/INTEXT-167\n\nSome refactorings are done.\n\nHazelcast Cluster Monitor Unit Test Refactorings are done.\n\nSome minor bug fixes are done.\n\nRedundant assert is removed.\n\nHazelcastInstance lifecycle check is added\n\nMigration Event UT Case is updated.\n\nCode style polishing and upgrade to the `spring.io.plugin-0.4.0`", "tree": {"sha": "e8cc18f3c69bb8de96b2373d1107fa4097cfa014", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e8cc18f3c69bb8de96b2373d1107fa4097cfa014"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/573e1f301f5f3ca3a6cc8a8c89977c2e594692e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/573e1f301f5f3ca3a6cc8a8c89977c2e594692e1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/573e1f301f5f3ca3a6cc8a8c89977c2e594692e1", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/573e1f301f5f3ca3a6cc8a8c89977c2e594692e1/comments", "author": {"login": "erenavsarogullari", "id": 1437738, "avatar_url": "https://avatars0.githubusercontent.com/u/1437738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erenavsarogullari", "html_url": "https://github.com/erenavsarogullari", "followers_url": "https://api.github.com/users/erenavsarogullari/followers", "following_url": "https://api.github.com/users/erenavsarogullari/following{/other_user}", "gists_url": "https://api.github.com/users/erenavsarogullari/gists{/gist_id}", "starred_url": "https://api.github.com/users/erenavsarogullari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erenavsarogullari/subscriptions", "organizations_url": "https://api.github.com/users/erenavsarogullari/orgs", "repos_url": "https://api.github.com/users/erenavsarogullari/repos", "events_url": "https://api.github.com/users/erenavsarogullari/events{/privacy}", "received_events_url": "https://api.github.com/users/erenavsarogullari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c136e45c967da58c165db3ebf553035a21dc4f4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5c136e45c967da58c165db3ebf553035a21dc4f4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5c136e45c967da58c165db3ebf553035a21dc4f4"}]}, {"sha": "5c136e45c967da58c165db3ebf553035a21dc4f4", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-06-24T00:03:53Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-06-25T14:05:49Z"}, "message": "Cassandra: Compatibility with IO-2.0", "tree": {"sha": "5bfcb0af48b441b320cabfc13b44ed32e2dc39a8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/5bfcb0af48b441b320cabfc13b44ed32e2dc39a8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/5c136e45c967da58c165db3ebf553035a21dc4f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5c136e45c967da58c165db3ebf553035a21dc4f4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5c136e45c967da58c165db3ebf553035a21dc4f4", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5c136e45c967da58c165db3ebf553035a21dc4f4/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f45e1caec529b83c91defcc3e396f7f2c64205d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8f45e1caec529b83c91defcc3e396f7f2c64205d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8f45e1caec529b83c91defcc3e396f7f2c64205d"}]}, {"sha": "8f45e1caec529b83c91defcc3e396f7f2c64205d", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-06-24T02:10:17Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-06-24T02:10:17Z"}, "message": "Hazelcast: Compatibility with IO-2.0\n\n* Add IO plugin\n* Upgrade to Gradle 2.4\n* Upgrade dependencies\n* Upgrade to Hazelcast-3.5 and therefore make compatible with IO-2.0\n* All these changes and tests make this module compatible with SI-4.2", "tree": {"sha": "8f550961689c769a7e4d4a468c7ab1d97587041d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8f550961689c769a7e4d4a468c7ab1d97587041d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/8f45e1caec529b83c91defcc3e396f7f2c64205d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8f45e1caec529b83c91defcc3e396f7f2c64205d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8f45e1caec529b83c91defcc3e396f7f2c64205d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8f45e1caec529b83c91defcc3e396f7f2c64205d/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "416cc39da4188469bdd508d992250bba4263ffd2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/416cc39da4188469bdd508d992250bba4263ffd2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/416cc39da4188469bdd508d992250bba4263ffd2"}]}, {"sha": "416cc39da4188469bdd508d992250bba4263ffd2", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@pivotal.io", "date": "2015-06-15T22:40:00Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@pivotal.io", "date": "2015-06-15T21:36:44Z"}, "message": "INTEXT-40 Add ZIP Transformer\n\n* Add zip-transformer\n* Add unzip-transformer\n* Add UnZipResultSplitter\n* Add sample\n\nFor reference see: https://jira.springsource.org/browse/INTEXT-40", "tree": {"sha": "788fbff9b4c3bb95461238da581c970385e273ef", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/788fbff9b4c3bb95461238da581c970385e273ef"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/416cc39da4188469bdd508d992250bba4263ffd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/416cc39da4188469bdd508d992250bba4263ffd2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/416cc39da4188469bdd508d992250bba4263ffd2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/416cc39da4188469bdd508d992250bba4263ffd2/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba52da8d0c808561cad4ddbd96c3990080d0d6bf", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ba52da8d0c808561cad4ddbd96c3990080d0d6bf", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ba52da8d0c808561cad4ddbd96c3990080d0d6bf"}]}, {"sha": "ba52da8d0c808561cad4ddbd96c3990080d0d6bf", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2015-06-12T00:48:20Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2015-06-12T00:48:20Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "2dd62e10112e926333ae43678866e7757ef4e8a2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2dd62e10112e926333ae43678866e7757ef4e8a2"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ba52da8d0c808561cad4ddbd96c3990080d0d6bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ba52da8d0c808561cad4ddbd96c3990080d0d6bf", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ba52da8d0c808561cad4ddbd96c3990080d0d6bf", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ba52da8d0c808561cad4ddbd96c3990080d0d6bf/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdbbd74c4e6448de07bc5ff6e612899a12cb94be", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/fdbbd74c4e6448de07bc5ff6e612899a12cb94be", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/fdbbd74c4e6448de07bc5ff6e612899a12cb94be"}]}, {"sha": "fdbbd74c4e6448de07bc5ff6e612899a12cb94be", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2015-06-12T00:48:17Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2015-06-12T00:48:17Z"}, "message": "[artifactory-release] Release version 0.5.0.RELEASE", "tree": {"sha": "40bc81e4bd2c187dbe41a52961a0bd845cfc43b7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/40bc81e4bd2c187dbe41a52961a0bd845cfc43b7"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/fdbbd74c4e6448de07bc5ff6e612899a12cb94be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/fdbbd74c4e6448de07bc5ff6e612899a12cb94be", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/fdbbd74c4e6448de07bc5ff6e612899a12cb94be", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/fdbbd74c4e6448de07bc5ff6e612899a12cb94be/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6747b0605f21df62c2a066f53d5d56dc89e8f841", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6747b0605f21df62c2a066f53d5d56dc89e8f841", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6747b0605f21df62c2a066f53d5d56dc89e8f841"}]}, {"sha": "6747b0605f21df62c2a066f53d5d56dc89e8f841", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-06-11T20:02:07Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-06-11T20:02:07Z"}, "message": "Cassandra: polishing before release", "tree": {"sha": "aa9ea143010eaef10360b7ec4ed990dc2492d73d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/aa9ea143010eaef10360b7ec4ed990dc2492d73d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/6747b0605f21df62c2a066f53d5d56dc89e8f841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6747b0605f21df62c2a066f53d5d56dc89e8f841", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6747b0605f21df62c2a066f53d5d56dc89e8f841", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6747b0605f21df62c2a066f53d5d56dc89e8f841/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bcd54cfba6b19e9b762c09ac59225c1d9b6c95c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2bcd54cfba6b19e9b762c09ac59225c1d9b6c95c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2bcd54cfba6b19e9b762c09ac59225c1d9b6c95c"}]}, {"sha": "2bcd54cfba6b19e9b762c09ac59225c1d9b6c95c", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-05-13T14:22:50Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2015-05-27T19:43:08Z"}, "message": "INTEXT-50: Cassandra Adapter Improvements\n\nJIRA: https://jira.spring.io/browse/INTEXT-50\n\nMore improvements\n\n`Void` returns handling", "tree": {"sha": "865b7b48ce6101255d278b4d664dbfd9e4e6d3d8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/865b7b48ce6101255d278b4d664dbfd9e4e6d3d8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2bcd54cfba6b19e9b762c09ac59225c1d9b6c95c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2bcd54cfba6b19e9b762c09ac59225c1d9b6c95c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2bcd54cfba6b19e9b762c09ac59225c1d9b6c95c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2bcd54cfba6b19e9b762c09ac59225c1d9b6c95c/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9089fb419b126ec3b1d5d76c1db5be77e777b13", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b9089fb419b126ec3b1d5d76c1db5be77e777b13", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b9089fb419b126ec3b1d5d76c1db5be77e777b13"}]}, {"sha": "b9089fb419b126ec3b1d5d76c1db5be77e777b13", "commit": {"author": {"name": "Soby Chacko", "email": "schacko@pivotal.io", "date": "2015-05-13T10:45:45Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-05-13T11:05:48Z"}, "message": "INTEXT-50: Add Cassandra Adapters\n\nJIRA: https://jira.spring.io/browse/INTEXT-50", "tree": {"sha": "3eeec606c878204a808e8290fd2b5336a5c34bfd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3eeec606c878204a808e8290fd2b5336a5c34bfd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b9089fb419b126ec3b1d5d76c1db5be77e777b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b9089fb419b126ec3b1d5d76c1db5be77e777b13", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b9089fb419b126ec3b1d5d76c1db5be77e777b13", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b9089fb419b126ec3b1d5d76c1db5be77e777b13/comments", "author": {"login": "sobychacko", "id": 827682, "avatar_url": "https://avatars3.githubusercontent.com/u/827682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobychacko", "html_url": "https://github.com/sobychacko", "followers_url": "https://api.github.com/users/sobychacko/followers", "following_url": "https://api.github.com/users/sobychacko/following{/other_user}", "gists_url": "https://api.github.com/users/sobychacko/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobychacko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobychacko/subscriptions", "organizations_url": "https://api.github.com/users/sobychacko/orgs", "repos_url": "https://api.github.com/users/sobychacko/repos", "events_url": "https://api.github.com/users/sobychacko/events{/privacy}", "received_events_url": "https://api.github.com/users/sobychacko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6975af37b26dc06ea6f80e008065410c664342c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6975af37b26dc06ea6f80e008065410c664342c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c6975af37b26dc06ea6f80e008065410c664342c"}]}, {"sha": "c6975af37b26dc06ea6f80e008065410c664342c", "commit": {"author": {"name": "Eren Avsarogullari", "email": "erenavsarogullari@gmail.com", "date": "2015-05-12T12:20:18Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-05-12T12:22:01Z"}, "message": "INTEXT-149: Refactor HCCacheWritingMessageHandler\n\nJIRA: https://jira.spring.io/browse/INTEXT-149\n\nSome refactorings are done.\n\nPolishing\n\n* Add `IllegalStateException` for wrong `distributedObject`\n* Add an invalid test to attempt to write to `ILock`", "tree": {"sha": "b1b008ea35081fd388c9753365ed8ec5a5d666a1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b1b008ea35081fd388c9753365ed8ec5a5d666a1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c6975af37b26dc06ea6f80e008065410c664342c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6975af37b26dc06ea6f80e008065410c664342c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c6975af37b26dc06ea6f80e008065410c664342c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6975af37b26dc06ea6f80e008065410c664342c/comments", "author": {"login": "erenavsarogullari", "id": 1437738, "avatar_url": "https://avatars0.githubusercontent.com/u/1437738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erenavsarogullari", "html_url": "https://github.com/erenavsarogullari", "followers_url": "https://api.github.com/users/erenavsarogullari/followers", "following_url": "https://api.github.com/users/erenavsarogullari/following{/other_user}", "gists_url": "https://api.github.com/users/erenavsarogullari/gists{/gist_id}", "starred_url": "https://api.github.com/users/erenavsarogullari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erenavsarogullari/subscriptions", "organizations_url": "https://api.github.com/users/erenavsarogullari/orgs", "repos_url": "https://api.github.com/users/erenavsarogullari/repos", "events_url": "https://api.github.com/users/erenavsarogullari/events{/privacy}", "received_events_url": "https://api.github.com/users/erenavsarogullari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37d70e0e8428ce90f55dcf5d118a4a311e0506c6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/37d70e0e8428ce90f55dcf5d118a4a311e0506c6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/37d70e0e8428ce90f55dcf5d118a4a311e0506c6"}]}, {"sha": "37d70e0e8428ce90f55dcf5d118a4a311e0506c6", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2015-04-20T10:15:21Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2015-04-20T10:15:21Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "7b7e61fe9452937ab369af37532e33575a8c3124", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/7b7e61fe9452937ab369af37532e33575a8c3124"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/37d70e0e8428ce90f55dcf5d118a4a311e0506c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/37d70e0e8428ce90f55dcf5d118a4a311e0506c6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/37d70e0e8428ce90f55dcf5d118a4a311e0506c6", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/37d70e0e8428ce90f55dcf5d118a4a311e0506c6/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af4583fe27ca06b6bb18c70171e43295d2b04178", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/af4583fe27ca06b6bb18c70171e43295d2b04178", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/af4583fe27ca06b6bb18c70171e43295d2b04178"}]}, {"sha": "af4583fe27ca06b6bb18c70171e43295d2b04178", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2015-04-20T10:15:08Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2015-04-20T10:15:08Z"}, "message": "[artifactory-release] Release version Hzelcast 1.0.0-M1", "tree": {"sha": "dd836645f066cb97291ce3b56066d6c23699914e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/dd836645f066cb97291ce3b56066d6c23699914e"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/af4583fe27ca06b6bb18c70171e43295d2b04178", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/af4583fe27ca06b6bb18c70171e43295d2b04178", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/af4583fe27ca06b6bb18c70171e43295d2b04178", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/af4583fe27ca06b6bb18c70171e43295d2b04178/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95f7b239f7e43854241ce52f6ebaefce55986fa7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/95f7b239f7e43854241ce52f6ebaefce55986fa7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/95f7b239f7e43854241ce52f6ebaefce55986fa7"}]}, {"sha": "95f7b239f7e43854241ce52f6ebaefce55986fa7", "commit": {"author": {"name": "Eren Avsarogullari", "email": "erenavsarogullari@yahoo.com", "date": "2015-04-15T20:57:01Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-04-15T20:59:28Z"}, "message": "INTEXT-150 Extract Hazelcast Headers and Payloads\n\nJIRA: https://jira.spring.io/browse/INTEXT-150\n\nRefactorings are committed.\n\nPolishing:\n* Add generic type to the `AbstractHazelcastEventListener` for cleaner implementors\n* Remove redundant `Assert`s\n* Polishing some code style", "tree": {"sha": "7b7e61fe9452937ab369af37532e33575a8c3124", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/7b7e61fe9452937ab369af37532e33575a8c3124"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/95f7b239f7e43854241ce52f6ebaefce55986fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/95f7b239f7e43854241ce52f6ebaefce55986fa7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/95f7b239f7e43854241ce52f6ebaefce55986fa7", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/95f7b239f7e43854241ce52f6ebaefce55986fa7/comments", "author": {"login": "erenavsarogullari", "id": 1437738, "avatar_url": "https://avatars0.githubusercontent.com/u/1437738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erenavsarogullari", "html_url": "https://github.com/erenavsarogullari", "followers_url": "https://api.github.com/users/erenavsarogullari/followers", "following_url": "https://api.github.com/users/erenavsarogullari/following{/other_user}", "gists_url": "https://api.github.com/users/erenavsarogullari/gists{/gist_id}", "starred_url": "https://api.github.com/users/erenavsarogullari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erenavsarogullari/subscriptions", "organizations_url": "https://api.github.com/users/erenavsarogullari/orgs", "repos_url": "https://api.github.com/users/erenavsarogullari/repos", "events_url": "https://api.github.com/users/erenavsarogullari/events{/privacy}", "received_events_url": "https://api.github.com/users/erenavsarogullari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20d0192fc0b476be9b0a107721288e27009a237b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/20d0192fc0b476be9b0a107721288e27009a237b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/20d0192fc0b476be9b0a107721288e27009a237b"}]}, {"sha": "20d0192fc0b476be9b0a107721288e27009a237b", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-04-13T09:09:11Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2015-04-13T09:25:08Z"}, "message": "INTEXT-163: Add JT400 Module\n\nJIRA: https://jira.spring.io/browse/INTEXT-163", "tree": {"sha": "980f417aa084a57ffa9252f7c0e2c5919a09b035", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/980f417aa084a57ffa9252f7c0e2c5919a09b035"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/20d0192fc0b476be9b0a107721288e27009a237b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/20d0192fc0b476be9b0a107721288e27009a237b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/20d0192fc0b476be9b0a107721288e27009a237b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/20d0192fc0b476be9b0a107721288e27009a237b/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ed2153a45db968a0a739464137856f998e7dbfe", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4ed2153a45db968a0a739464137856f998e7dbfe", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4ed2153a45db968a0a739464137856f998e7dbfe"}]}, {"sha": "4ed2153a45db968a0a739464137856f998e7dbfe", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-04-04T14:32:38Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-04-04T14:32:38Z"}, "message": "INTEXT-161 Add `<poller>` to the `<int-hz:o-c-a>`\n\nJIRA: https://jira.spring.io/browse/INTEXT-161", "tree": {"sha": "9fbbca5c16d5125c18d48fe6ce6709da170749d8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9fbbca5c16d5125c18d48fe6ce6709da170749d8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4ed2153a45db968a0a739464137856f998e7dbfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4ed2153a45db968a0a739464137856f998e7dbfe", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4ed2153a45db968a0a739464137856f998e7dbfe", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4ed2153a45db968a0a739464137856f998e7dbfe/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfec7640ca8b6567255a5ffbb5bcb60e55c4a287", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bfec7640ca8b6567255a5ffbb5bcb60e55c4a287", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bfec7640ca8b6567255a5ffbb5bcb60e55c4a287"}]}, {"sha": "bfec7640ca8b6567255a5ffbb5bcb60e55c4a287", "commit": {"author": {"name": "erenavsarogullari", "email": "erenavsarogullari@yahoo.com", "date": "2015-03-05T01:30:54Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2015-04-03T09:56:48Z"}, "message": "INTEXT-142: Add Spring Integration Hazelcast\n\nJIRA: https://jira.spring.io/browse/INTEXT-142", "tree": {"sha": "11d2e28b574ceea0f90351a1523b7cf4cf44afc3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/11d2e28b574ceea0f90351a1523b7cf4cf44afc3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/bfec7640ca8b6567255a5ffbb5bcb60e55c4a287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bfec7640ca8b6567255a5ffbb5bcb60e55c4a287", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bfec7640ca8b6567255a5ffbb5bcb60e55c4a287", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bfec7640ca8b6567255a5ffbb5bcb60e55c4a287/comments", "author": {"login": "erenavsarogullari", "id": 1437738, "avatar_url": "https://avatars0.githubusercontent.com/u/1437738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erenavsarogullari", "html_url": "https://github.com/erenavsarogullari", "followers_url": "https://api.github.com/users/erenavsarogullari/followers", "following_url": "https://api.github.com/users/erenavsarogullari/following{/other_user}", "gists_url": "https://api.github.com/users/erenavsarogullari/gists{/gist_id}", "starred_url": "https://api.github.com/users/erenavsarogullari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erenavsarogullari/subscriptions", "organizations_url": "https://api.github.com/users/erenavsarogullari/orgs", "repos_url": "https://api.github.com/users/erenavsarogullari/repos", "events_url": "https://api.github.com/users/erenavsarogullari/events{/privacy}", "received_events_url": "https://api.github.com/users/erenavsarogullari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fddd7e47b4f179d31c2910548da1a63a737a48e2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/fddd7e47b4f179d31c2910548da1a63a737a48e2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/fddd7e47b4f179d31c2910548da1a63a737a48e2"}]}, {"sha": "fddd7e47b4f179d31c2910548da1a63a737a48e2", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-12-05T17:39:33Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-12-05T17:39:33Z"}, "message": "INTEXT-122: Make XSD versionless from SI-core XSD\n\nJIRA: https://jira.spring.io/browse/INTEXT-122\n\nFix for SMPP. All other extensions will be fixed on demand, when they will be upgraded to SI 4.0 or higher", "tree": {"sha": "5806546046b6b63ee6fdcea62e4bd632f450897f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/5806546046b6b63ee6fdcea62e4bd632f450897f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/fddd7e47b4f179d31c2910548da1a63a737a48e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/fddd7e47b4f179d31c2910548da1a63a737a48e2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/fddd7e47b4f179d31c2910548da1a63a737a48e2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/fddd7e47b4f179d31c2910548da1a63a737a48e2/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3318a4ddeb7c69259370e91194edd64b1cc9206a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3318a4ddeb7c69259370e91194edd64b1cc9206a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3318a4ddeb7c69259370e91194edd64b1cc9206a"}]}, {"sha": "3318a4ddeb7c69259370e91194edd64b1cc9206a", "commit": {"author": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-11-19T22:50:51Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-11-19T22:54:45Z"}, "message": "INTEXT-39 Remove Experimental WebSocket Code\n\nJIRA: https://jira.spring.io/browse/INTEXT-39", "tree": {"sha": "81d55690fbf54973c38e54fcb0896fb8cc2a2003", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/81d55690fbf54973c38e54fcb0896fb8cc2a2003"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3318a4ddeb7c69259370e91194edd64b1cc9206a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3318a4ddeb7c69259370e91194edd64b1cc9206a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3318a4ddeb7c69259370e91194edd64b1cc9206a", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3318a4ddeb7c69259370e91194edd64b1cc9206a/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05b7f39f397174a84b5504993cd77be48e9a1a74", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/05b7f39f397174a84b5504993cd77be48e9a1a74", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/05b7f39f397174a84b5504993cd77be48e9a1a74"}]}, {"sha": "05b7f39f397174a84b5504993cd77be48e9a1a74", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-17T11:45:16Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-17T11:45:16Z"}, "message": "Move AWS to separate repo", "tree": {"sha": "617ae417fa43db67b9cf3de1bb386034f479c006", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/617ae417fa43db67b9cf3de1bb386034f479c006"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/05b7f39f397174a84b5504993cd77be48e9a1a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/05b7f39f397174a84b5504993cd77be48e9a1a74", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/05b7f39f397174a84b5504993cd77be48e9a1a74", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/05b7f39f397174a84b5504993cd77be48e9a1a74/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3268e0a2f798ce3f6d5b5cbb3c609691391cdc06", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3268e0a2f798ce3f6d5b5cbb3c609691391cdc06", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3268e0a2f798ce3f6d5b5cbb3c609691391cdc06"}]}, {"sha": "3268e0a2f798ce3f6d5b5cbb3c609691391cdc06", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-17T11:26:00Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-17T11:26:00Z"}, "message": "Move `Kafka` to the separate repo", "tree": {"sha": "2744e749d95d1b7afe3acebaa2a33af04e09d3a9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2744e749d95d1b7afe3acebaa2a33af04e09d3a9"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3268e0a2f798ce3f6d5b5cbb3c609691391cdc06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3268e0a2f798ce3f6d5b5cbb3c609691391cdc06", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3268e0a2f798ce3f6d5b5cbb3c609691391cdc06", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3268e0a2f798ce3f6d5b5cbb3c609691391cdc06/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b37a400d928344aa9fed3260ca539cc4e892a34", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6b37a400d928344aa9fed3260ca539cc4e892a34", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6b37a400d928344aa9fed3260ca539cc4e892a34"}]}, {"sha": "6b37a400d928344aa9fed3260ca539cc4e892a34", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-17T10:26:59Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-17T10:26:59Z"}, "message": "Move Splunk to the individual repo", "tree": {"sha": "88fccfdd96585e0eb03cb5f572ff3f2ede9c6b36", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/88fccfdd96585e0eb03cb5f572ff3f2ede9c6b36"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/6b37a400d928344aa9fed3260ca539cc4e892a34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6b37a400d928344aa9fed3260ca539cc4e892a34", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6b37a400d928344aa9fed3260ca539cc4e892a34", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6b37a400d928344aa9fed3260ca539cc4e892a34/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85334c7e90028db28511e4cf7ce5ba1bee398b32", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/85334c7e90028db28511e4cf7ce5ba1bee398b32", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/85334c7e90028db28511e4cf7ce5ba1bee398b32"}]}, {"sha": "85334c7e90028db28511e4cf7ce5ba1bee398b32", "commit": {"author": {"name": "Flemming J\u00f8nsson", "email": "flemming@joensson.org", "date": "2014-11-15T17:14:15Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-15T17:15:52Z"}, "message": "INTEXT-118: Fox for long messages with newlines\n\nJIRA: https://jira.spring.io/browse/INTEXT-118\n\nIt also tests long messages without newlines to verify that the fix works for both types of long messages.\n\nINTEXT-118: Replace regular expression split with standard substring to split message into subparts with max length.\nThe regular expression used earlier failed splitting messages that contained newlines correctly. (See SmesMessageSpecificationTest)\n\nCorrected spelling in constants\n\nPolishing", "tree": {"sha": "dc3e9119ad362d5c45686340ed2b2267d637055f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/dc3e9119ad362d5c45686340ed2b2267d637055f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/85334c7e90028db28511e4cf7ce5ba1bee398b32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/85334c7e90028db28511e4cf7ce5ba1bee398b32", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/85334c7e90028db28511e4cf7ce5ba1bee398b32", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/85334c7e90028db28511e4cf7ce5ba1bee398b32/comments", "author": {"login": "joensson", "id": 1549461, "avatar_url": "https://avatars2.githubusercontent.com/u/1549461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joensson", "html_url": "https://github.com/joensson", "followers_url": "https://api.github.com/users/joensson/followers", "following_url": "https://api.github.com/users/joensson/following{/other_user}", "gists_url": "https://api.github.com/users/joensson/gists{/gist_id}", "starred_url": "https://api.github.com/users/joensson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joensson/subscriptions", "organizations_url": "https://api.github.com/users/joensson/orgs", "repos_url": "https://api.github.com/users/joensson/repos", "events_url": "https://api.github.com/users/joensson/events{/privacy}", "received_events_url": "https://api.github.com/users/joensson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd539d1dcbface9800aa7312b0640a3e992babc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ecd539d1dcbface9800aa7312b0640a3e992babc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ecd539d1dcbface9800aa7312b0640a3e992babc"}]}, {"sha": "ecd539d1dcbface9800aa7312b0640a3e992babc", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-13T09:38:42Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-13T09:40:04Z"}, "message": "DSL: Move Java DSL to the separate repo", "tree": {"sha": "d970b2a200550075bd030614dacd2f9109fa30fb", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d970b2a200550075bd030614dacd2f9109fa30fb"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ecd539d1dcbface9800aa7312b0640a3e992babc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ecd539d1dcbface9800aa7312b0640a3e992babc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ecd539d1dcbface9800aa7312b0640a3e992babc", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ecd539d1dcbface9800aa7312b0640a3e992babc/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4caccc2ae00152ad2fa98c31ab93b8d8258c7c76", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4caccc2ae00152ad2fa98c31ab93b8d8258c7c76", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4caccc2ae00152ad2fa98c31ab93b8d8258c7c76"}]}, {"sha": "4caccc2ae00152ad2fa98c31ab93b8d8258c7c76", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-11-12T22:16:42Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-11-12T22:16:42Z"}, "message": "[artifactory-release] Kafka Next development version", "tree": {"sha": "fec0382566b988048dacfb34abe0ada4b15fa6b8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/fec0382566b988048dacfb34abe0ada4b15fa6b8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4caccc2ae00152ad2fa98c31ab93b8d8258c7c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4caccc2ae00152ad2fa98c31ab93b8d8258c7c76", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4caccc2ae00152ad2fa98c31ab93b8d8258c7c76", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4caccc2ae00152ad2fa98c31ab93b8d8258c7c76/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f4717d9f5d5c4ed87038400d04a629e27614d9a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4f4717d9f5d5c4ed87038400d04a629e27614d9a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4f4717d9f5d5c4ed87038400d04a629e27614d9a"}]}, {"sha": "4f4717d9f5d5c4ed87038400d04a629e27614d9a", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-11-12T22:16:38Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-11-12T22:16:38Z"}, "message": "[artifactory-release] Release version Kafka 1.0.0.M2 (#2)", "tree": {"sha": "8504176490b8aac4278ca98a1d525e440a0c98aa", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8504176490b8aac4278ca98a1d525e440a0c98aa"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4f4717d9f5d5c4ed87038400d04a629e27614d9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4f4717d9f5d5c4ed87038400d04a629e27614d9a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4f4717d9f5d5c4ed87038400d04a629e27614d9a", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4f4717d9f5d5c4ed87038400d04a629e27614d9a/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b899ff0ffd8b52053cb9a8ea6a24b0dca1e112da", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b899ff0ffd8b52053cb9a8ea6a24b0dca1e112da", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b899ff0ffd8b52053cb9a8ea6a24b0dca1e112da"}]}, {"sha": "b899ff0ffd8b52053cb9a8ea6a24b0dca1e112da", "commit": {"author": {"name": "Ilayaperumal Gopinathan", "email": "igopinathan@pivotal.io", "date": "2014-11-12T20:15:51Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-11-12T21:00:12Z"}, "message": "Add StringDecoder for kafka messages\n\n - Add StringDecoder for decoding kafka key/value messages\n\nRefactor StringDecoder", "tree": {"sha": "fec0382566b988048dacfb34abe0ada4b15fa6b8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/fec0382566b988048dacfb34abe0ada4b15fa6b8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b899ff0ffd8b52053cb9a8ea6a24b0dca1e112da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b899ff0ffd8b52053cb9a8ea6a24b0dca1e112da", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b899ff0ffd8b52053cb9a8ea6a24b0dca1e112da", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b899ff0ffd8b52053cb9a8ea6a24b0dca1e112da/comments", "author": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfdcd7ad1d86abb532274f6076f7285c541e11df", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bfdcd7ad1d86abb532274f6076f7285c541e11df", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bfdcd7ad1d86abb532274f6076f7285c541e11df"}]}, {"sha": "bfdcd7ad1d86abb532274f6076f7285c541e11df", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-11-12T17:23:19Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-11-12T17:23:19Z"}, "message": "[artifactory-release] Kafka Next development version", "tree": {"sha": "9b0cd0e052035c9a18b873d1e4fb1ab4a6c8723d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9b0cd0e052035c9a18b873d1e4fb1ab4a6c8723d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/bfdcd7ad1d86abb532274f6076f7285c541e11df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bfdcd7ad1d86abb532274f6076f7285c541e11df", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bfdcd7ad1d86abb532274f6076f7285c541e11df", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bfdcd7ad1d86abb532274f6076f7285c541e11df/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b28faa34d9447a78a962dc533d65e41ace2214cc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b28faa34d9447a78a962dc533d65e41ace2214cc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b28faa34d9447a78a962dc533d65e41ace2214cc"}]}, {"sha": "b28faa34d9447a78a962dc533d65e41ace2214cc", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-11-12T17:23:15Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-11-12T17:23:15Z"}, "message": "[artifactory-release] Release version Kafka 1.0.0.M2", "tree": {"sha": "54af46d2736415e7aa2d1c63a056905046e912d2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/54af46d2736415e7aa2d1c63a056905046e912d2"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b28faa34d9447a78a962dc533d65e41ace2214cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b28faa34d9447a78a962dc533d65e41ace2214cc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b28faa34d9447a78a962dc533d65e41ace2214cc", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b28faa34d9447a78a962dc533d65e41ace2214cc/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cad2be04968a2c960b67e3e7550f26ec849ea698", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cad2be04968a2c960b67e3e7550f26ec849ea698", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cad2be04968a2c960b67e3e7550f26ec849ea698"}]}, {"sha": "cad2be04968a2c960b67e3e7550f26ec849ea698", "commit": {"author": {"name": "Ilayaperumal Gopinathan", "email": "igopinathan@pivotal.io", "date": "2014-11-12T09:20:04Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-12T09:20:49Z"}, "message": "INTEXT-111: Allow PP for Kafka producer context\n\nJIRA: https://jira.spring.io/browse/INTEXT-111\n\n - Remove hard coded names for bean names at the producer context parser\n - Fix and update tests\n - Remove the use of `BeanFactory` to get the producerConfigurations in\nKakfaProducerContext and use setter to set the producerConfigurations\n - Add logic to send the message from producer configuration when there\nis no header specified for the topic and single producer configuration\nis used.\n\nAdd tests to verify placeholder values\n\nFix code review comment and formatting\n\nPolishing code style.\n\nAdd `KafkaProducerContext#theProducerConfiguration` for single `producerConfigurations` entry to avoid iterators", "tree": {"sha": "9b0cd0e052035c9a18b873d1e4fb1ab4a6c8723d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9b0cd0e052035c9a18b873d1e4fb1ab4a6c8723d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/cad2be04968a2c960b67e3e7550f26ec849ea698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cad2be04968a2c960b67e3e7550f26ec849ea698", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cad2be04968a2c960b67e3e7550f26ec849ea698", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cad2be04968a2c960b67e3e7550f26ec849ea698/comments", "author": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8d986167c1c242461f23968bda1d70173f620e2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b8d986167c1c242461f23968bda1d70173f620e2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b8d986167c1c242461f23968bda1d70173f620e2"}]}, {"sha": "b8d986167c1c242461f23968bda1d70173f620e2", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-10T16:36:36Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-10T16:36:36Z"}, "message": "DSL: O-Gs: `requiresReply=\"true\"` by default\n\nSince many `outbound-gateway`s are designed to always expect replies and XML configuration\nspecifies `requires-reply=\"true\"` for them by default, the DSL should follow with that.", "tree": {"sha": "461a7bb48138e49e500aca7bf4f308ef081b1db3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/461a7bb48138e49e500aca7bf4f308ef081b1db3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b8d986167c1c242461f23968bda1d70173f620e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b8d986167c1c242461f23968bda1d70173f620e2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b8d986167c1c242461f23968bda1d70173f620e2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b8d986167c1c242461f23968bda1d70173f620e2/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57caf41fb298271dfe4728b38849c0f5702243ba", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57caf41fb298271dfe4728b38849c0f5702243ba", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/57caf41fb298271dfe4728b38849c0f5702243ba"}]}, {"sha": "57caf41fb298271dfe4728b38849c0f5702243ba", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-10T11:04:40Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-10T11:04:40Z"}, "message": "DSL: Use generic `AppListener` from`IntFlowBPP`\n\nhttps://build.spring.io/browse/INTSAMPLES-NIGHTLY-JOB1-1189\n\nSince `spring-integration-even` is optional dependency, the usage of `ApplicationEventListeningMessageProducer` is wrong.\nChanging it to the generic `ApplicationListener` doesn't hurt for any inline components from Flow definition, when there is an interest to handle Events.", "tree": {"sha": "d6e0250cc61680c2db827b88fcb429bce200e2a4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d6e0250cc61680c2db827b88fcb429bce200e2a4"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/57caf41fb298271dfe4728b38849c0f5702243ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57caf41fb298271dfe4728b38849c0f5702243ba", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/57caf41fb298271dfe4728b38849c0f5702243ba", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57caf41fb298271dfe4728b38849c0f5702243ba/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04cdbf77f406ed669d71befac5cb1fe652ce9db", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a04cdbf77f406ed669d71befac5cb1fe652ce9db", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a04cdbf77f406ed669d71befac5cb1fe652ce9db"}]}, {"sha": "a04cdbf77f406ed669d71befac5cb1fe652ce9db", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-08T17:53:36Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-08T17:53:36Z"}, "message": "DSL: Register `AELMP` as `AL` in the `AEM`\n\nRegister `ApplicationEventListeningMessageProducer` as `ApplicationListener` in the `ApplicationEventMulticaster`\n\nSince `ApplicationContext` invokes its `registerListeners()` before the `IntegrationFlowBeanPostProcessor` does its stuff,\nthe `ApplicationEventListeningMessageProducer` hasn't been visible as an `ApplicationListener` bean, when it is defined from `IntegrationFlow`,\nhence add a logic to register it to the `ApplicationEventMulticaster` from `IntegrationFlowBeanPostProcessor`.", "tree": {"sha": "3d27755192dd12cc3f714bc3e21ef2710da6f37a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3d27755192dd12cc3f714bc3e21ef2710da6f37a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a04cdbf77f406ed669d71befac5cb1fe652ce9db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a04cdbf77f406ed669d71befac5cb1fe652ce9db", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a04cdbf77f406ed669d71befac5cb1fe652ce9db", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a04cdbf77f406ed669d71befac5cb1fe652ce9db/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b44bf47d622f6158672c1ebc3a20e360e0f79ad1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b44bf47d622f6158672c1ebc3a20e360e0f79ad1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b44bf47d622f6158672c1ebc3a20e360e0f79ad1"}]}, {"sha": "b44bf47d622f6158672c1ebc3a20e360e0f79ad1", "commit": {"author": {"name": "Christos Kapasakalidis", "email": "xkapasakal@gmail.com", "date": "2014-11-06T15:31:13Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-06T15:35:30Z"}, "message": "INTEXT-80 - FIX S3 ConnectionPoolTimeoutException\n\nJIRA: https://jira.spring.io/browse/INTEXT-80\n\nWhen synchronizing to local directory, getObject was called without\never closing the InputStream that the SDK opens causing an\n\"org.apache.http.conn.ConnectionPoolTimeoutException: Timeout waiting\nfor connection\" exception. To fix that, after synchronization, the\ninputStream of the s3Object is closed, causing the s3 client to release\nthe connection.", "tree": {"sha": "abb15f242b1c6cf0cd857849055f96edd2474cb3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/abb15f242b1c6cf0cd857849055f96edd2474cb3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b44bf47d622f6158672c1ebc3a20e360e0f79ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b44bf47d622f6158672c1ebc3a20e360e0f79ad1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b44bf47d622f6158672c1ebc3a20e360e0f79ad1", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b44bf47d622f6158672c1ebc3a20e360e0f79ad1/comments", "author": {"login": "xkapasakal", "id": 1990109, "avatar_url": "https://avatars3.githubusercontent.com/u/1990109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xkapasakal", "html_url": "https://github.com/xkapasakal", "followers_url": "https://api.github.com/users/xkapasakal/followers", "following_url": "https://api.github.com/users/xkapasakal/following{/other_user}", "gists_url": "https://api.github.com/users/xkapasakal/gists{/gist_id}", "starred_url": "https://api.github.com/users/xkapasakal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xkapasakal/subscriptions", "organizations_url": "https://api.github.com/users/xkapasakal/orgs", "repos_url": "https://api.github.com/users/xkapasakal/repos", "events_url": "https://api.github.com/users/xkapasakal/events{/privacy}", "received_events_url": "https://api.github.com/users/xkapasakal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ea2d9111c89c25bda2723e12935edce3348886", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/13ea2d9111c89c25bda2723e12935edce3348886", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/13ea2d9111c89c25bda2723e12935edce3348886"}]}, {"sha": "13ea2d9111c89c25bda2723e12935edce3348886", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-11-01T11:11:17Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-11-01T14:50:59Z"}, "message": "DSL: Fix `RouterSpec` for several subflows\n\nThe root of the issue is the order of bean registration in the beanFactory.\nIn this case the first subflows is registered correctly, but the next one has been registered after `RouterSubFlowMappingProvider`.\nIn this case the input `channel` of the next subflow hasn't been registered yet, hence `NPE` in the `this.router.setChannelMapping`\nfrom `@PostConstruct` of `RouterSubFlowMappingProvider`.\n\nMove the `RouterSubFlowMappingProvider` to end of `componentsToRegister` collection to give a chance to register all subflows before the `RouterSubFlowMappingProvider`.", "tree": {"sha": "af37d99484857a40b956d86c676733c504938364", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/af37d99484857a40b956d86c676733c504938364"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/13ea2d9111c89c25bda2723e12935edce3348886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/13ea2d9111c89c25bda2723e12935edce3348886", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/13ea2d9111c89c25bda2723e12935edce3348886", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/13ea2d9111c89c25bda2723e12935edce3348886/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e144feb1b35e8175e659a4792a6912a2e74566bf", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e144feb1b35e8175e659a4792a6912a2e74566bf", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e144feb1b35e8175e659a4792a6912a2e74566bf"}]}, {"sha": "e144feb1b35e8175e659a4792a6912a2e74566bf", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-10-31T19:07:29Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-10-31T19:07:29Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "1c777242c197d5cf13c2ad454f4f8b5d207396f8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1c777242c197d5cf13c2ad454f4f8b5d207396f8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e144feb1b35e8175e659a4792a6912a2e74566bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e144feb1b35e8175e659a4792a6912a2e74566bf", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e144feb1b35e8175e659a4792a6912a2e74566bf", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e144feb1b35e8175e659a4792a6912a2e74566bf/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "879024d97e429bcd095a0005be605dd6816f45e0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/879024d97e429bcd095a0005be605dd6816f45e0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/879024d97e429bcd095a0005be605dd6816f45e0"}]}, {"sha": "879024d97e429bcd095a0005be605dd6816f45e0", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-10-31T19:07:24Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-10-31T19:07:24Z"}, "message": "[artifactory-release] SI Java DSL release version 1.0.0.RC1", "tree": {"sha": "32543696407e59567833c134031a80d6ff950c2b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/32543696407e59567833c134031a80d6ff950c2b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/879024d97e429bcd095a0005be605dd6816f45e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/879024d97e429bcd095a0005be605dd6816f45e0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/879024d97e429bcd095a0005be605dd6816f45e0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/879024d97e429bcd095a0005be605dd6816f45e0/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3477801e6eae389c3b3065ce8e8b8b7074c2574", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c3477801e6eae389c3b3065ce8e8b8b7074c2574", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c3477801e6eae389c3b3065ce8e8b8b7074c2574"}]}, {"sha": "c3477801e6eae389c3b3065ce8e8b8b7074c2574", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-31T17:11:49Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-31T17:15:26Z"}, "message": "DSL: `.gateway()` SubFlow support", "tree": {"sha": "1c777242c197d5cf13c2ad454f4f8b5d207396f8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1c777242c197d5cf13c2ad454f4f8b5d207396f8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c3477801e6eae389c3b3065ce8e8b8b7074c2574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c3477801e6eae389c3b3065ce8e8b8b7074c2574", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c3477801e6eae389c3b3065ce8e8b8b7074c2574", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c3477801e6eae389c3b3065ce8e8b8b7074c2574/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6af7f7ebac3479fcd24202976c6828b0d0bf4dd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e6af7f7ebac3479fcd24202976c6828b0d0bf4dd", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e6af7f7ebac3479fcd24202976c6828b0d0bf4dd"}]}, {"sha": "e6af7f7ebac3479fcd24202976c6828b0d0bf4dd", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-31T11:43:26Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-31T11:43:26Z"}, "message": "DSL: RecipientListRouter: Add SubFlow support", "tree": {"sha": "3685935d313cb4f89ceed341ed176081f099701f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3685935d313cb4f89ceed341ed176081f099701f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e6af7f7ebac3479fcd24202976c6828b0d0bf4dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e6af7f7ebac3479fcd24202976c6828b0d0bf4dd", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e6af7f7ebac3479fcd24202976c6828b0d0bf4dd", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e6af7f7ebac3479fcd24202976c6828b0d0bf4dd/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be9767b8a9c7ac4c26e0f9c1c1cdb63b7665a361", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/be9767b8a9c7ac4c26e0f9c1c1cdb63b7665a361", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/be9767b8a9c7ac4c26e0f9c1c1cdb63b7665a361"}]}, {"sha": "be9767b8a9c7ac4c26e0f9c1c1cdb63b7665a361", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-29T21:50:42Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-10-30T20:57:19Z"}, "message": "DSL: Introduce `SubFlow`s\n\nAdd `subFlow` support for `router`s\nMove some tests to separate domain classes\nFix some component registrations\n\nDSL: Fix `SubFlow` registration according PR discussion\n\n* Add IO plugin\n* Fix SI 4.0 <-> 4.1 compatibility by `springIoCheck` results\n* Further divide for tests to separate domain classes\n\nDSL: Add `discardFlow` to the `.filter()`\n\nMake `.router()` `subFlow`s as `always return to the main flow`\n\nAdd `.publishSubscribeChannel()` EIP-method with `.subscriber()`\n\nto specify subscribers as `subFlow`s\n\nPolishing", "tree": {"sha": "d153165f11ab029bc538c65f996088735f2cb9c4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d153165f11ab029bc538c65f996088735f2cb9c4"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/be9767b8a9c7ac4c26e0f9c1c1cdb63b7665a361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/be9767b8a9c7ac4c26e0f9c1c1cdb63b7665a361", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/be9767b8a9c7ac4c26e0f9c1c1cdb63b7665a361", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/be9767b8a9c7ac4c26e0f9c1c1cdb63b7665a361/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74102a022daf95fea2b06cff8de0ccdad41bf711", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/74102a022daf95fea2b06cff8de0ccdad41bf711", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/74102a022daf95fea2b06cff8de0ccdad41bf711"}]}, {"sha": "74102a022daf95fea2b06cff8de0ccdad41bf711", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-29T10:43:40Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-29T10:43:40Z"}, "message": "DSL: Fix package tangles", "tree": {"sha": "ff5c7bdc7d807ce844455adadfe5f936658db9d7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ff5c7bdc7d807ce844455adadfe5f936658db9d7"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/74102a022daf95fea2b06cff8de0ccdad41bf711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/74102a022daf95fea2b06cff8de0ccdad41bf711", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/74102a022daf95fea2b06cff8de0ccdad41bf711", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/74102a022daf95fea2b06cff8de0ccdad41bf711/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4005ff874dd5b26c8f3b56a03b0f7dbaecd996a0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4005ff874dd5b26c8f3b56a03b0f7dbaecd996a0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4005ff874dd5b26c8f3b56a03b0f7dbaecd996a0"}]}, {"sha": "4005ff874dd5b26c8f3b56a03b0f7dbaecd996a0", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-07T21:19:04Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-10-28T19:14:44Z"}, "message": "Java DSL: Introduce `FunctionExpression`\n\nAdd support for `FunctionExpression` and apply it alongside with `expression`, where it is possible\nFor example:\n```\n.enrich(e -> e.requestChannel(\"enrichChannel\")\n\t\t.requestPayload(Message::getPayload)\n\t\t.shouldClonePayload(false)\n\t\t.<Map<String, String>>headerFunction(\"foo\", m -> m.getPayload().get(\"name\")))\n```\nRemove redundant functional interfaces in favor of `Function`\n\nFunctionExpression: Add JDBC Splitter sample\n\nMinor Polishing to FunctionExpression\n\nFunctionExpression: JavaDocs", "tree": {"sha": "820f6fda5df3252b63cf52edd2ca3908293dff4d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/820f6fda5df3252b63cf52edd2ca3908293dff4d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4005ff874dd5b26c8f3b56a03b0f7dbaecd996a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4005ff874dd5b26c8f3b56a03b0f7dbaecd996a0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4005ff874dd5b26c8f3b56a03b0f7dbaecd996a0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4005ff874dd5b26c8f3b56a03b0f7dbaecd996a0/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cab77b5e764988d79311cc64e8b1511a2ecee515", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cab77b5e764988d79311cc64e8b1511a2ecee515", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cab77b5e764988d79311cc64e8b1511a2ecee515"}]}, {"sha": "cab77b5e764988d79311cc64e8b1511a2ecee515", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-07T12:11:32Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-10-07T12:11:32Z"}, "message": "Java DSL: Lambdas for Namespace Factories\n\n* Add `Function` and `Consumer` copies from Java 8\n* Rework some functional interfaces to `Function` or `Consumer`\n* Introduce `Channels`, `MessageHandlers`, `MessageProducers`, `MessageSources`, `MessagingGateways`\n- some convenient wrappers for Namespace Factories to be used from Lambdas\n* Add Lambda-methods for those new wrappers\n* Provide some refactoring\n* Upgrade to Boot `1.1.7`\n\nJava DSL: Lambda_Factories\n\n* Change all `IntegrationFlows` methods to `.from()`\n* Introduce internal `Function<?, ?>` extensions for particular cases, e.g. `MessageSourcesFunction`.\nNow end-user has to cast Lambda parameter to concrete type to get desired factory, e.g.:\n```\nreturn IntegrationFlows.from((MessageProducers mp) -> mp.imap(\"imap://user:pw@host/INBOX\"))\n```\n* rename `.fromFixedMessageChannel` to `.from()` with additional boolean flag\n* Introduce `PollerFactory` Lambda for `.poller()` EIP-method on `EndpointSpec`\n* Move `Pollers` stuff to the `.core` package to fix package tangle\n* Refactoring for some code style\n* Fix some typos", "tree": {"sha": "32e9f20f8acde873de6c9b91de3112c2a66bb02e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/32e9f20f8acde873de6c9b91de3112c2a66bb02e"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/cab77b5e764988d79311cc64e8b1511a2ecee515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cab77b5e764988d79311cc64e8b1511a2ecee515", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cab77b5e764988d79311cc64e8b1511a2ecee515", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cab77b5e764988d79311cc64e8b1511a2ecee515/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db05476acf11d608098a14ff56caee1423a17397", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/db05476acf11d608098a14ff56caee1423a17397", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/db05476acf11d608098a14ff56caee1423a17397"}]}, {"sha": "db05476acf11d608098a14ff56caee1423a17397", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-09-17T12:21:16Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-09-17T12:21:16Z"}, "message": "Fix some ChannelName Late Resolution\n\nPolishing", "tree": {"sha": "5991aff58fbee808a356afee76640e25987acf4e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/5991aff58fbee808a356afee76640e25987acf4e"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/db05476acf11d608098a14ff56caee1423a17397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/db05476acf11d608098a14ff56caee1423a17397", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/db05476acf11d608098a14ff56caee1423a17397", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/db05476acf11d608098a14ff56caee1423a17397/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87745d43a13073d6cb8d982586fad67454edf1b5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/87745d43a13073d6cb8d982586fad67454edf1b5", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/87745d43a13073d6cb8d982586fad67454edf1b5"}]}, {"sha": "87745d43a13073d6cb8d982586fad67454edf1b5", "commit": {"author": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-09-10T15:55:47Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-09-10T15:55:47Z"}, "message": "DSL: MailTests - SearchTermStrategy\n\nChange lamda expression to a Method reference.", "tree": {"sha": "d6269a17e945ce4a81f23548f421f1dac25c2c70", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d6269a17e945ce4a81f23548f421f1dac25c2c70"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/87745d43a13073d6cb8d982586fad67454edf1b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/87745d43a13073d6cb8d982586fad67454edf1b5", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/87745d43a13073d6cb8d982586fad67454edf1b5", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/87745d43a13073d6cb8d982586fad67454edf1b5/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "782999f5764f26dd02e30b973eabf06e3e7a3757", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/782999f5764f26dd02e30b973eabf06e3e7a3757", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/782999f5764f26dd02e30b973eabf06e3e7a3757"}]}, {"sha": "782999f5764f26dd02e30b973eabf06e3e7a3757", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-09-08T11:46:06Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-09-08T11:46:06Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "8085aa6362bd2a5d4a9f4b93ffd8e9dc5d5718a1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8085aa6362bd2a5d4a9f4b93ffd8e9dc5d5718a1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/782999f5764f26dd02e30b973eabf06e3e7a3757", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/782999f5764f26dd02e30b973eabf06e3e7a3757", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/782999f5764f26dd02e30b973eabf06e3e7a3757", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/782999f5764f26dd02e30b973eabf06e3e7a3757/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16b363a0455431e86756ed63aeafd74b7fd95d58", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/16b363a0455431e86756ed63aeafd74b7fd95d58", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/16b363a0455431e86756ed63aeafd74b7fd95d58"}]}, {"sha": "16b363a0455431e86756ed63aeafd74b7fd95d58", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-09-08T11:46:02Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-09-08T11:46:02Z"}, "message": "[artifactory-release] SI Java DSL Release version 1.0.0.M3", "tree": {"sha": "eab0bea5134112df508d943ac8ecf0eb7db4ecfd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/eab0bea5134112df508d943ac8ecf0eb7db4ecfd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/16b363a0455431e86756ed63aeafd74b7fd95d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/16b363a0455431e86756ed63aeafd74b7fd95d58", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/16b363a0455431e86756ed63aeafd74b7fd95d58", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/16b363a0455431e86756ed63aeafd74b7fd95d58/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "070252961d833fd100fe59e3118720983487194b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/070252961d833fd100fe59e3118720983487194b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/070252961d833fd100fe59e3118720983487194b"}]}, {"sha": "070252961d833fd100fe59e3118720983487194b", "commit": {"author": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-09-07T21:28:14Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-09-07T21:28:14Z"}, "message": "DSL: Fix Tail Tests\n\nTiming problem - set end(false), don't start adapter until file\nis written.", "tree": {"sha": "8085aa6362bd2a5d4a9f4b93ffd8e9dc5d5718a1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8085aa6362bd2a5d4a9f4b93ffd8e9dc5d5718a1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/070252961d833fd100fe59e3118720983487194b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/070252961d833fd100fe59e3118720983487194b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/070252961d833fd100fe59e3118720983487194b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/070252961d833fd100fe59e3118720983487194b/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff4a229bc5c2d320c1da1dc5fe6429bd27100547", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ff4a229bc5c2d320c1da1dc5fe6429bd27100547", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ff4a229bc5c2d320c1da1dc5fe6429bd27100547"}]}, {"sha": "ff4a229bc5c2d320c1da1dc5fe6429bd27100547", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-09-04T14:35:49Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-09-07T16:37:29Z"}, "message": "INTEXT-114 Fix outputChannel population AOP issue\n\nJIRA: https://jira.spring.io/browse/INTEXT-114", "tree": {"sha": "4cb4da514aa2acf6e400dd8466a85eca932bc609", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4cb4da514aa2acf6e400dd8466a85eca932bc609"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ff4a229bc5c2d320c1da1dc5fe6429bd27100547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ff4a229bc5c2d320c1da1dc5fe6429bd27100547", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ff4a229bc5c2d320c1da1dc5fe6429bd27100547", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ff4a229bc5c2d320c1da1dc5fe6429bd27100547/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb5456f9d702ed519e843975ac5ce5932fbc6b87", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eb5456f9d702ed519e843975ac5ce5932fbc6b87", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eb5456f9d702ed519e843975ac5ce5932fbc6b87"}]}, {"sha": "eb5456f9d702ed519e843975ac5ce5932fbc6b87", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-09-05T10:01:03Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-09-05T10:02:42Z"}, "message": "Upgrade to SI 4.0.4 and Boot 1.1.6", "tree": {"sha": "b1a0f2928aad81b0f46c5f9c77ef24c3a6ad845a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b1a0f2928aad81b0f46c5f9c77ef24c3a6ad845a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/eb5456f9d702ed519e843975ac5ce5932fbc6b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eb5456f9d702ed519e843975ac5ce5932fbc6b87", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eb5456f9d702ed519e843975ac5ce5932fbc6b87", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eb5456f9d702ed519e843975ac5ce5932fbc6b87/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ff83c61d975614e6919d21bad804acd3b251090", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2ff83c61d975614e6919d21bad804acd3b251090", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2ff83c61d975614e6919d21bad804acd3b251090"}]}, {"sha": "2ff83c61d975614e6919d21bad804acd3b251090", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-09-04T08:19:54Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-09-04T08:19:54Z"}, "message": "INTEXT-113: Make `.route()` as non-last component\n\nJIRA: https://jira.spring.io/browse/INTEXT-113\n\nPreviously `router` could be configured only as last component in the `IntegrationFlow` definition.\n\n* Remove `defaultOutputChannel` options from `AbstractRouterSpec`\n* Populate `outputChannel` to the `AbstractMessageRouter.defaultOutputChannel`, when there is more EIP-methods after `.route()`\n* Rename EIP-method `.recipientListRoute()` to the `.routeToRecipients()`\n* Make compatibility with SI 4.1\n* Tested against SF 4.1", "tree": {"sha": "51a4f814f86c03e3e2fc0bfa9b55c4e0a7605a67", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/51a4f814f86c03e3e2fc0bfa9b55c4e0a7605a67"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2ff83c61d975614e6919d21bad804acd3b251090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2ff83c61d975614e6919d21bad804acd3b251090", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2ff83c61d975614e6919d21bad804acd3b251090", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2ff83c61d975614e6919d21bad804acd3b251090/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b5bbb6412420031b4cb11868d3fb4e18d504ef8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4b5bbb6412420031b4cb11868d3fb4e18d504ef8", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4b5bbb6412420031b4cb11868d3fb4e18d504ef8"}]}, {"sha": "4b5bbb6412420031b4cb11868d3fb4e18d504ef8", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-27T11:08:37Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-08-27T22:08:52Z"}, "message": "DSL: Add `enrichHeaders(Map)` EIP-method\n\n* Introduce `MapBuilder` and its custom inheritor - `MailHeadersBuilder`\n* Add `HeaderEnricherSpec.headers(MapBuilder)` and `.headers(Map)`\n* Change `MailTests` to use new `Mail.headers()` and new `IntegrationFlowDefinition.enrichHeaders(MapBuilder)`\n* Change `mailapi` dependency to the IO's `javax.mail`\n\nPolishing - Add headerExpressions()\n\nMore Polishing - Add Configurer\n\nPolishing - PR Comments\n\n- Move MapBuilderConfigurer to superclass.\n- Move PropertiesBuilderConfigurer into PropertiesBuilder.", "tree": {"sha": "bddf92a8e8c260b12af9f7915618083753268b1e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/bddf92a8e8c260b12af9f7915618083753268b1e"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4b5bbb6412420031b4cb11868d3fb4e18d504ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4b5bbb6412420031b4cb11868d3fb4e18d504ef8", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4b5bbb6412420031b4cb11868d3fb4e18d504ef8", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4b5bbb6412420031b4cb11868d3fb4e18d504ef8/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "238c1f06b994c2f80810fa4ab5c51db199cf82a0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/238c1f06b994c2f80810fa4ab5c51db199cf82a0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/238c1f06b994c2f80810fa4ab5c51db199cf82a0"}]}, {"sha": "238c1f06b994c2f80810fa4ab5c51db199cf82a0", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-26T15:35:19Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-26T15:35:19Z"}, "message": "Polishing after `rebase`", "tree": {"sha": "52b764f146df913a6545b27c69d81809bf46b378", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/52b764f146df913a6545b27c69d81809bf46b378"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/238c1f06b994c2f80810fa4ab5c51db199cf82a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/238c1f06b994c2f80810fa4ab5c51db199cf82a0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/238c1f06b994c2f80810fa4ab5c51db199cf82a0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/238c1f06b994c2f80810fa4ab5c51db199cf82a0/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0bfe4656d1ba4dcc52a5b05b318ef92492de9db", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f0bfe4656d1ba4dcc52a5b05b318ef92492de9db", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f0bfe4656d1ba4dcc52a5b05b318ef92492de9db"}]}, {"sha": "f0bfe4656d1ba4dcc52a5b05b318ef92492de9db", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-26T08:05:31Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-26T15:29:00Z"}, "message": "DSL: Add support for IntegrationFlow Lambda\n\nTo simplify a bit the `direct` integration flow definition, the `IntegrationFlow` Lambda is introduced.\n\n* Extract `IntegrationFlow` functional interface with `define(IntegrationFlowDefinition<?> flow)` method.\n* Rename existing `IntegrationFlow` class to the `StandardIntegrationFlow` and move it to the inner class within `IntegrationFlowBuilder`\n* Extract `IntegrationFlowDefinition` superclass for the `IntegrationFlowBuilder` to be used within `IntegrationFlow` Lambda\nto hide `get()` method from end-users.\n* Change `IntegrationFlowBeanPostProcessor` for a new logic around `IntegrationFlow` Lambda\n* Rename `MessagingProducerSpec` to the `MessageProducerSpec`\n\nConflicts:\n\tspring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/IntegrationFlowBuilder.java", "tree": {"sha": "dd031b25ca95557f522937b2ef120574f9daac81", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/dd031b25ca95557f522937b2ef120574f9daac81"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f0bfe4656d1ba4dcc52a5b05b318ef92492de9db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f0bfe4656d1ba4dcc52a5b05b318ef92492de9db", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f0bfe4656d1ba4dcc52a5b05b318ef92492de9db", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f0bfe4656d1ba4dcc52a5b05b318ef92492de9db/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5bb4e125f4525db6ab22093a68ec7954d24d1d4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a5bb4e125f4525db6ab22093a68ec7954d24d1d4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a5bb4e125f4525db6ab22093a68ec7954d24d1d4"}]}, {"sha": "a5bb4e125f4525db6ab22093a68ec7954d24d1d4", "commit": {"author": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-08-26T13:43:05Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-26T13:43:14Z"}, "message": "DSL: Mail - Add IMAP Idle Adapter\n\nPolish IMAP test server and update it to support IDLE.\n\nPolishing\n\nPolishing - Fix IMAP Server\n\nChanges required because receiver is now initialized.", "tree": {"sha": "1c2e951ab64b140c5945d1807322f3623bcfd9b4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1c2e951ab64b140c5945d1807322f3623bcfd9b4"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a5bb4e125f4525db6ab22093a68ec7954d24d1d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a5bb4e125f4525db6ab22093a68ec7954d24d1d4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a5bb4e125f4525db6ab22093a68ec7954d24d1d4", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a5bb4e125f4525db6ab22093a68ec7954d24d1d4/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67320e7bc59f5d882c6adc2f370d10ca9d57ff1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c67320e7bc59f5d882c6adc2f370d10ca9d57ff1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c67320e7bc59f5d882c6adc2f370d10ca9d57ff1"}]}, {"sha": "c67320e7bc59f5d882c6adc2f370d10ca9d57ff1", "commit": {"author": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-08-23T13:46:34Z"}, "committer": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-08-23T13:46:34Z"}, "message": "DSL: Mail Polish - Add SearchTerm (lambda) To Test", "tree": {"sha": "d757850d62cc84cb0b59b1f395d0a566678add65", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d757850d62cc84cb0b59b1f395d0a566678add65"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c67320e7bc59f5d882c6adc2f370d10ca9d57ff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c67320e7bc59f5d882c6adc2f370d10ca9d57ff1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c67320e7bc59f5d882c6adc2f370d10ca9d57ff1", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c67320e7bc59f5d882c6adc2f370d10ca9d57ff1/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89cb4e137d8bc227c46a033cc8eb11f6c643acb2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/89cb4e137d8bc227c46a033cc8eb11f6c643acb2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/89cb4e137d8bc227c46a033cc8eb11f6c643acb2"}]}, {"sha": "89cb4e137d8bc227c46a033cc8eb11f6c643acb2", "commit": {"author": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-08-23T07:42:04Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-23T07:42:15Z"}, "message": "DSL: Mail Inbound Adapters\n\nAdd POP3 Server for Tests\n\nPolishing; PR Comments; IMAP4 Server", "tree": {"sha": "2ed7cc2d3484673c021afa29478394d4b3cf0e7c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2ed7cc2d3484673c021afa29478394d4b3cf0e7c"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/89cb4e137d8bc227c46a033cc8eb11f6c643acb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/89cb4e137d8bc227c46a033cc8eb11f6c643acb2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/89cb4e137d8bc227c46a033cc8eb11f6c643acb2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/89cb4e137d8bc227c46a033cc8eb11f6c643acb2/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba4f52d59cede8881e4e3757b097858163d5230e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ba4f52d59cede8881e4e3757b097858163d5230e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ba4f52d59cede8881e4e3757b097858163d5230e"}]}, {"sha": "ba4f52d59cede8881e4e3757b097858163d5230e", "commit": {"author": {"name": "Gary Russell", "email": "grussell@pivotal.io", "date": "2014-08-22T13:35:53Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-22T13:37:29Z"}, "message": "DSL: Mail namespace & `MailSendingMessageHandler`\n\nDSL:Add SMTP Mail Server\n\nPolishing - PR Comments\n\nDSL: Mail: add `PropertiesConfigurer` lambda\n\n* Move `IntegrationFlowTests` to the `flows` package to avoid cross scanning for components\n* Make `MailTests` as integration test and move `Mail.outboundAdapter` to the `IntegrationFlow` `@Bean` definition", "tree": {"sha": "23200232b9a8a3bf2ab44893e489f7cc88cec0e8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/23200232b9a8a3bf2ab44893e489f7cc88cec0e8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ba4f52d59cede8881e4e3757b097858163d5230e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ba4f52d59cede8881e4e3757b097858163d5230e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ba4f52d59cede8881e4e3757b097858163d5230e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ba4f52d59cede8881e4e3757b097858163d5230e/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "325ee9a4f3c7bd57ac60a8ef6fea75aeb5fe2a87", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/325ee9a4f3c7bd57ac60a8ef6fea75aeb5fe2a87", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/325ee9a4f3c7bd57ac60a8ef6fea75aeb5fe2a87"}]}, {"sha": "325ee9a4f3c7bd57ac60a8ef6fea75aeb5fe2a87", "commit": {"author": {"name": "Ilayaperumal Gopinathan", "email": "igopinathan@pivotal.io", "date": "2014-08-20T18:10:00Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-20T18:11:08Z"}, "message": "Kafka: PP for consumer context bean\n\nJIRA: https://jira.spring.io/browse/INTEXT-112\nhttps://jira.spring.io/browse/INTEXT-111\n\n - Avoid using hardcoded bean names for consumer context\n - Remove Integer value topic streams count, instead use string value\n   - This will allow placeholder values to be used for `streams` attribute\n - Set `group-id` as a bean name for consumer configuration bean only if\n   the group id is specified explicitly. This will allow placeholder values\n   not being used as a bean name.\n - Add test cases to verify multiple consumer configurations within the\n   same consumer context.\n\nSet consumerConfigurations as propertyValue\n\nBetter handling of consumerConfigurations\n\n - Add getConsumerConfiguration(String groupId) in KafkaConsumerContext\n   - Fix tests\n - Add additional test case to check multi consumer contexts\n\nFix getConsumerConfiguration(groupId)\n\nPolishing", "tree": {"sha": "372848a8ce77417e8d6f52bf3dc7565657951e59", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/372848a8ce77417e8d6f52bf3dc7565657951e59"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/325ee9a4f3c7bd57ac60a8ef6fea75aeb5fe2a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/325ee9a4f3c7bd57ac60a8ef6fea75aeb5fe2a87", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/325ee9a4f3c7bd57ac60a8ef6fea75aeb5fe2a87", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/325ee9a4f3c7bd57ac60a8ef6fea75aeb5fe2a87/comments", "author": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f4089db0a634d5a0389a898a25f417fcdc3dbc3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5f4089db0a634d5a0389a898a25f417fcdc3dbc3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5f4089db0a634d5a0389a898a25f417fcdc3dbc3"}]}, {"sha": "5f4089db0a634d5a0389a898a25f417fcdc3dbc3", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-20T14:32:40Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-20T14:32:40Z"}, "message": "DSL-(S)FTP-Namespace-Builder-Factory\n\n**DO NOT MERGE YET**.\n\nThere is need to provide tests on the matter.\n\n(S)FTP Tests\n\n* Add test cases for (s)ftp components based on embedded (S)FtpServers\n* Upgrade some dependencies\n* Fix bug in the `IntegrationFlowBeanPostProcessor` for the registration internal (a result of `MessageSourceSpec`) as a bean in the AC", "tree": {"sha": "12cdba1528a10874413525192ccefe03e731c9ee", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/12cdba1528a10874413525192ccefe03e731c9ee"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/5f4089db0a634d5a0389a898a25f417fcdc3dbc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5f4089db0a634d5a0389a898a25f417fcdc3dbc3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5f4089db0a634d5a0389a898a25f417fcdc3dbc3", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5f4089db0a634d5a0389a898a25f417fcdc3dbc3/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b1f95c0045fde7bf028c118e962c5c0788f2a27", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b1f95c0045fde7bf028c118e962c5c0788f2a27", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1b1f95c0045fde7bf028c118e962c5c0788f2a27"}]}, {"sha": "1b1f95c0045fde7bf028c118e962c5c0788f2a27", "commit": {"author": {"name": "Tim Ysewyn", "email": "tim.ysewyn@me.com", "date": "2014-08-20T12:14:20Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-20T14:28:48Z"}, "message": "Java DSL: Fix EnricherSpec to prevent assertions\n\nFixes: https://github.com/spring-projects/spring-integration-extensions/issues/101", "tree": {"sha": "1ffcfd4f44366629c03979e4a2211758b0a42b44", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1ffcfd4f44366629c03979e4a2211758b0a42b44"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1b1f95c0045fde7bf028c118e962c5c0788f2a27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b1f95c0045fde7bf028c118e962c5c0788f2a27", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1b1f95c0045fde7bf028c118e962c5c0788f2a27", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b1f95c0045fde7bf028c118e962c5c0788f2a27/comments", "author": {"login": "TYsewyn", "id": 6283320, "avatar_url": "https://avatars0.githubusercontent.com/u/6283320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TYsewyn", "html_url": "https://github.com/TYsewyn", "followers_url": "https://api.github.com/users/TYsewyn/followers", "following_url": "https://api.github.com/users/TYsewyn/following{/other_user}", "gists_url": "https://api.github.com/users/TYsewyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/TYsewyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TYsewyn/subscriptions", "organizations_url": "https://api.github.com/users/TYsewyn/orgs", "repos_url": "https://api.github.com/users/TYsewyn/repos", "events_url": "https://api.github.com/users/TYsewyn/events{/privacy}", "received_events_url": "https://api.github.com/users/TYsewyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "501209384b7ba0cac4ad95b69a51d67e13f6875e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/501209384b7ba0cac4ad95b69a51d67e13f6875e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/501209384b7ba0cac4ad95b69a51d67e13f6875e"}]}, {"sha": "501209384b7ba0cac4ad95b69a51d67e13f6875e", "commit": {"author": {"name": "Ilayaperumal Gopinathan", "email": "igopinathan@gopivotal.com", "date": "2014-08-18T13:33:20Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-19T10:11:07Z"}, "message": "Make ConsumerContext disposable\n\n- This will allow shutting down the consumer connector for the consumer\nconfiguration when the associated context no longer exists.", "tree": {"sha": "e362cddf8dca719c04fc46bc91340e6ea4bb1e14", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e362cddf8dca719c04fc46bc91340e6ea4bb1e14"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/501209384b7ba0cac4ad95b69a51d67e13f6875e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/501209384b7ba0cac4ad95b69a51d67e13f6875e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/501209384b7ba0cac4ad95b69a51d67e13f6875e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/501209384b7ba0cac4ad95b69a51d67e13f6875e/comments", "author": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b5ba00536c8fb61bce442da1b01f52bbe1f2251", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4b5ba00536c8fb61bce442da1b01f52bbe1f2251", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4b5ba00536c8fb61bce442da1b01f52bbe1f2251"}]}, {"sha": "4b5ba00536c8fb61bce442da1b01f52bbe1f2251", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-12T19:57:50Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-19T10:07:54Z"}, "message": "Kafka-GH-92: Allow PP for the `<topic-filter>`\n\nFixes https://github.com/spring-projects/spring-integration-extensions/issues/92", "tree": {"sha": "ffbdac5d0100ddfe5fe6ad288b61902f20307c31", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ffbdac5d0100ddfe5fe6ad288b61902f20307c31"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4b5ba00536c8fb61bce442da1b01f52bbe1f2251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4b5ba00536c8fb61bce442da1b01f52bbe1f2251", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4b5ba00536c8fb61bce442da1b01f52bbe1f2251", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4b5ba00536c8fb61bce442da1b01f52bbe1f2251/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d06e8cbec345d3048ed244f9673265c79f4fb6d0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d06e8cbec345d3048ed244f9673265c79f4fb6d0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d06e8cbec345d3048ed244f9673265c79f4fb6d0"}]}, {"sha": "d06e8cbec345d3048ed244f9673265c79f4fb6d0", "commit": {"author": {"name": "Rob Harrop", "email": "rob.harrop@gmail.com", "date": "2014-08-15T09:26:23Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-15T09:27:56Z"}, "message": "AWS: Updated to spring-integration to 4.0.3\n\nMade the corresponding API changes.\n\nHad to update jacoco to latest (0.7.1.blah) to get the tests to work correctly on OSX Java 8\n\nFixed JavaDoc errors show up by the Java 8 linter. Build passes\n\nBringing dependencies inline with Spring 4.0.6\n\nUpdated mockito to 1.9.5\n\nUpdated Hamcrest to 1.3\n\nUpdated aws-sdk to 1.8.7\n\nMerge branch 'master' into integration-4.0\n\nReformatted gradle file inline with the existing standard\n\nSwitch back to using the milestone repo\n\nUpgrade Gradle version to 1.12\n\nUpdated the schema references to use un-versioned refs\n\nUpdated author tags and copyright dates\n\nAWS: SI-4.0 Polishing", "tree": {"sha": "4066c537fe520df89f39922c24d11979d8e5a8ab", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4066c537fe520df89f39922c24d11979d8e5a8ab"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d06e8cbec345d3048ed244f9673265c79f4fb6d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d06e8cbec345d3048ed244f9673265c79f4fb6d0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d06e8cbec345d3048ed244f9673265c79f4fb6d0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d06e8cbec345d3048ed244f9673265c79f4fb6d0/comments", "author": {"login": "robharrop", "id": 64684, "avatar_url": "https://avatars1.githubusercontent.com/u/64684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robharrop", "html_url": "https://github.com/robharrop", "followers_url": "https://api.github.com/users/robharrop/followers", "following_url": "https://api.github.com/users/robharrop/following{/other_user}", "gists_url": "https://api.github.com/users/robharrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/robharrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robharrop/subscriptions", "organizations_url": "https://api.github.com/users/robharrop/orgs", "repos_url": "https://api.github.com/users/robharrop/repos", "events_url": "https://api.github.com/users/robharrop/events{/privacy}", "received_events_url": "https://api.github.com/users/robharrop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cc38bc1b75294caa61d43983f8e612c1d944219", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8cc38bc1b75294caa61d43983f8e612c1d944219", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8cc38bc1b75294caa61d43983f8e612c1d944219"}]}, {"sha": "8cc38bc1b75294caa61d43983f8e612c1d944219", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-12T19:25:45Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@pivotal.io", "date": "2014-08-13T10:50:09Z"}, "message": "DSL: Add `File.` Namespace Builder Factory\n\n* Introduce `ComponentsRegistration` *marker* to extract internal components from the `IntegrationComponentSpec` to be registered as bean in the application context\n* Add `ConsumerEndpointSpec#order(int order)` for the `order` of target `AbstractMessageHandler`\n* Fix `AggregatorSpec` to use `DefaultAggregatingMessageGroupProcessor` by default\n* Fix `IntegrationFlowBeanPostProcessor#generateBeanName` to check if `instance instanceof NamedComponent` and its `beanName` has been configured\nusing `IntegrationComponentSpec#id`", "tree": {"sha": "79ca4c69359056548fe10bc3309e25b434a0faa4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/79ca4c69359056548fe10bc3309e25b434a0faa4"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/8cc38bc1b75294caa61d43983f8e612c1d944219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8cc38bc1b75294caa61d43983f8e612c1d944219", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8cc38bc1b75294caa61d43983f8e612c1d944219", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8cc38bc1b75294caa61d43983f8e612c1d944219/comments", "author": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9348c66f0ad0ab5ba913bcdd2dc2eac789c714d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c9348c66f0ad0ab5ba913bcdd2dc2eac789c714d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c9348c66f0ad0ab5ba913bcdd2dc2eac789c714d"}]}, {"sha": "c9348c66f0ad0ab5ba913bcdd2dc2eac789c714d", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2014-07-24T15:53:39Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2014-07-24T15:53:39Z"}, "message": "Splunk next development version 1.2.0.BUILD-SNAPSHOT", "tree": {"sha": "9755811b2d372bca3b8f68e396e30cec47106565", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9755811b2d372bca3b8f68e396e30cec47106565"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c9348c66f0ad0ab5ba913bcdd2dc2eac789c714d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c9348c66f0ad0ab5ba913bcdd2dc2eac789c714d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c9348c66f0ad0ab5ba913bcdd2dc2eac789c714d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c9348c66f0ad0ab5ba913bcdd2dc2eac789c714d/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0e93b4c94ea28d7d45b82ba4b7d61c4dfb66dce", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a0e93b4c94ea28d7d45b82ba4b7d61c4dfb66dce", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a0e93b4c94ea28d7d45b82ba4b7d61c4dfb66dce"}]}, {"sha": "a0e93b4c94ea28d7d45b82ba4b7d61c4dfb66dce", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-07-24T14:57:46Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2014-07-24T15:50:02Z"}, "message": "[artifactory-release] Splunk Release version 1.1.0.RELEASE", "tree": {"sha": "3b363c9c1d99aab3840e8b6be16f3903db024227", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3b363c9c1d99aab3840e8b6be16f3903db024227"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a0e93b4c94ea28d7d45b82ba4b7d61c4dfb66dce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a0e93b4c94ea28d7d45b82ba4b7d61c4dfb66dce", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a0e93b4c94ea28d7d45b82ba4b7d61c4dfb66dce", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a0e93b4c94ea28d7d45b82ba4b7d61c4dfb66dce/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d40d510e4c5be2b35876d053d2e79b9ab55098ee", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d40d510e4c5be2b35876d053d2e79b9ab55098ee", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d40d510e4c5be2b35876d053d2e79b9ab55098ee"}]}, {"sha": "d40d510e4c5be2b35876d053d2e79b9ab55098ee", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-24T14:26:34Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-24T14:26:34Z"}, "message": "Splunk: Disable real-time search (GH-#39)", "tree": {"sha": "8212708235856c6e431ea5c2216580d7547e56e7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8212708235856c6e431ea5c2216580d7547e56e7"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d40d510e4c5be2b35876d053d2e79b9ab55098ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d40d510e4c5be2b35876d053d2e79b9ab55098ee", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d40d510e4c5be2b35876d053d2e79b9ab55098ee", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d40d510e4c5be2b35876d053d2e79b9ab55098ee/comments", "author": null, "committer": null, "parents": [{"sha": "46d7567a77d4dd39845471876ee050577c326215", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46d7567a77d4dd39845471876ee050577c326215", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/46d7567a77d4dd39845471876ee050577c326215"}]}, {"sha": "46d7567a77d4dd39845471876ee050577c326215", "commit": {"author": {"name": "Soby Chacko", "email": "schacko@gopivotal.com", "date": "2014-07-23T03:44:36Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-24T07:43:07Z"}, "message": "INTEXT-104: Kafka: `order` for o-channel-adapter\n\nJIRA: https://jira.spring.io/browse/INTEXT-104\n\n`order` attribute now honored if kafka outbound adapter is connected to a subscribable channel\nunit tests and samples are updated\n\nPolishing: use `<xsd:attributeGroup ref=\"integration:channelAdapterAttributes\"/>` for adapter tags to cover `SmartLifecycle` options.", "tree": {"sha": "83d59d7c76497c294b9d8d972377b55b4c83a689", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/83d59d7c76497c294b9d8d972377b55b4c83a689"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/46d7567a77d4dd39845471876ee050577c326215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46d7567a77d4dd39845471876ee050577c326215", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/46d7567a77d4dd39845471876ee050577c326215", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46d7567a77d4dd39845471876ee050577c326215/comments", "author": null, "committer": null, "parents": [{"sha": "7b59bc5b873dfac6aa00303938fb40abaae3b13c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7b59bc5b873dfac6aa00303938fb40abaae3b13c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7b59bc5b873dfac6aa00303938fb40abaae3b13c"}]}, {"sha": "7b59bc5b873dfac6aa00303938fb40abaae3b13c", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-23T16:02:23Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-23T16:02:23Z"}, "message": "DSL: Add `targetCompatibility = 1.6`", "tree": {"sha": "20f458e31335db4c15a7541fcfb8388b0c614f5b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/20f458e31335db4c15a7541fcfb8388b0c614f5b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7b59bc5b873dfac6aa00303938fb40abaae3b13c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7b59bc5b873dfac6aa00303938fb40abaae3b13c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7b59bc5b873dfac6aa00303938fb40abaae3b13c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7b59bc5b873dfac6aa00303938fb40abaae3b13c/comments", "author": null, "committer": null, "parents": [{"sha": "07d45d69c188ba5466d1f9cddab9af336d737943", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/07d45d69c188ba5466d1f9cddab9af336d737943", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/07d45d69c188ba5466d1f9cddab9af336d737943"}]}, {"sha": "07d45d69c188ba5466d1f9cddab9af336d737943", "commit": {"author": {"name": "Soby Chacko", "email": "schacko@gopivotal.com", "date": "2014-07-22T04:42:22Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-22T15:00:29Z"}, "message": "INTEXT-110: Update Kafka version to 0.8.1.1\n\nJIRA: https://jira.spring.io/browse/INTEXT-110\n\nPerform the necessary API Changes (Partioner interface in Kafka is now non-genericized for Keys - concrete Object is the new type for Key)\nUnit test updates for an internal Kafka class (MessageMetadata)\nUpdates for the samples Kafka project to use the new M2 snapshot, Spring 4.0 Messaging changes, other build related minor changes, etc.", "tree": {"sha": "35be6f384fce75b1b6f190b85fa0b356f1added3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/35be6f384fce75b1b6f190b85fa0b356f1added3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/07d45d69c188ba5466d1f9cddab9af336d737943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/07d45d69c188ba5466d1f9cddab9af336d737943", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/07d45d69c188ba5466d1f9cddab9af336d737943", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/07d45d69c188ba5466d1f9cddab9af336d737943/comments", "author": null, "committer": null, "parents": [{"sha": "8dc41021b838363518e64127f68a9eb8df19cc8c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8dc41021b838363518e64127f68a9eb8df19cc8c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8dc41021b838363518e64127f68a9eb8df19cc8c"}]}, {"sha": "8dc41021b838363518e64127f68a9eb8df19cc8c", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-07-21T19:10:26Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-07-21T19:18:34Z"}, "message": "Update kafka to Spring Integration 4.0.3", "tree": {"sha": "18f238b76fc0463acaff073af88fa29b1396ce79", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/18f238b76fc0463acaff073af88fa29b1396ce79"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/8dc41021b838363518e64127f68a9eb8df19cc8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8dc41021b838363518e64127f68a9eb8df19cc8c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8dc41021b838363518e64127f68a9eb8df19cc8c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8dc41021b838363518e64127f68a9eb8df19cc8c/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e0068b9df862d072228c7256b325b442b3305dc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7e0068b9df862d072228c7256b325b442b3305dc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7e0068b9df862d072228c7256b325b442b3305dc"}]}, {"sha": "7e0068b9df862d072228c7256b325b442b3305dc", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-07-21T19:16:41Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-07-21T19:16:41Z"}, "message": "[artifactory-release] Next development version (kafka)", "tree": {"sha": "2fbb23e9b8bc30c7b15e330ce6242942a0f9b0a9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2fbb23e9b8bc30c7b15e330ce6242942a0f9b0a9"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7e0068b9df862d072228c7256b325b442b3305dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7e0068b9df862d072228c7256b325b442b3305dc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7e0068b9df862d072228c7256b325b442b3305dc", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7e0068b9df862d072228c7256b325b442b3305dc/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46b5cc438a302fc2269183db4d306a66e78ff59b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46b5cc438a302fc2269183db4d306a66e78ff59b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/46b5cc438a302fc2269183db4d306a66e78ff59b"}]}, {"sha": "46b5cc438a302fc2269183db4d306a66e78ff59b", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-07-21T19:16:37Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-07-21T19:16:37Z"}, "message": "[artifactory-release] Release version 1.0.0.M1 (kafka)", "tree": {"sha": "769e310670b37acc1848f2154e24e40e102400b6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/769e310670b37acc1848f2154e24e40e102400b6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/46b5cc438a302fc2269183db4d306a66e78ff59b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46b5cc438a302fc2269183db4d306a66e78ff59b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/46b5cc438a302fc2269183db4d306a66e78ff59b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46b5cc438a302fc2269183db4d306a66e78ff59b/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6c9f1305bf13a5b6fbda000b0b536583b19d09e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f6c9f1305bf13a5b6fbda000b0b536583b19d09e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f6c9f1305bf13a5b6fbda000b0b536583b19d09e"}]}, {"sha": "f6c9f1305bf13a5b6fbda000b0b536583b19d09e", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-17T11:53:17Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-17T11:53:17Z"}, "message": "DSL: Fixes and polishing after upgrade\n\n* Upgrade to SI 4.0.3 and Boot 1.1.4\n* Add `HeaderEnricherSpec#headerChannelsToString()`\n* Fix `DslRecipientListRouter` according core changes\n* Fix `Amqp` and `Jms` modules for the bug around \"All Message creators need a BeanFactory\"\nusing fake `new DefaultListableBeanFactory()` for `(Amqp)JmsChannelFactoryBean`", "tree": {"sha": "2fbb23e9b8bc30c7b15e330ce6242942a0f9b0a9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2fbb23e9b8bc30c7b15e330ce6242942a0f9b0a9"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f6c9f1305bf13a5b6fbda000b0b536583b19d09e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f6c9f1305bf13a5b6fbda000b0b536583b19d09e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f6c9f1305bf13a5b6fbda000b0b536583b19d09e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f6c9f1305bf13a5b6fbda000b0b536583b19d09e/comments", "author": null, "committer": null, "parents": [{"sha": "24e8c59878106df141a3d4b1a2643939c263cc0b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/24e8c59878106df141a3d4b1a2643939c263cc0b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/24e8c59878106df141a3d4b1a2643939c263cc0b"}]}, {"sha": "24e8c59878106df141a3d4b1a2643939c263cc0b", "commit": {"author": {"name": "Andy Wilkinson", "email": "awilkinson@gopivotal.com", "date": "2014-07-15T10:51:20Z"}, "committer": {"name": "Andy Wilkinson", "email": "awilkinson@gopivotal.com", "date": "2014-07-15T10:51:20Z"}, "message": "Add the Spring IO plugin to Splunk extension\n\nConfigure the Spring IO plugin such that it's only applied when the\nbuild is run with -PplatformVersion=<version>. This platformVersion\nproperty is used to determine the version of the Platform that will\nbe used when running the springIoCheck task. The plugin can be used\nby running a build as follows:\n\n./gradlew clean springIoCheck -PplatformVersion=1.1.0.BUILD-SNAPSHOT -PJDK7_HOME=\u2026 -PJDK8_HOME=\u2026\n\nThis will test the project on JDK7 and JDK 8 using the dependencies\ndefined in the latest snapshot of Spring IO Platform 1.1.0.", "tree": {"sha": "4b89e4fcbfe5fb6ae9d282e4b9641553f383fb12", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4b89e4fcbfe5fb6ae9d282e4b9641553f383fb12"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/24e8c59878106df141a3d4b1a2643939c263cc0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/24e8c59878106df141a3d4b1a2643939c263cc0b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/24e8c59878106df141a3d4b1a2643939c263cc0b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/24e8c59878106df141a3d4b1a2643939c263cc0b/comments", "author": {"login": "wilkinsona", "id": 914682, "avatar_url": "https://avatars3.githubusercontent.com/u/914682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilkinsona", "html_url": "https://github.com/wilkinsona", "followers_url": "https://api.github.com/users/wilkinsona/followers", "following_url": "https://api.github.com/users/wilkinsona/following{/other_user}", "gists_url": "https://api.github.com/users/wilkinsona/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilkinsona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilkinsona/subscriptions", "organizations_url": "https://api.github.com/users/wilkinsona/orgs", "repos_url": "https://api.github.com/users/wilkinsona/repos", "events_url": "https://api.github.com/users/wilkinsona/events{/privacy}", "received_events_url": "https://api.github.com/users/wilkinsona/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wilkinsona", "id": 914682, "avatar_url": "https://avatars3.githubusercontent.com/u/914682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilkinsona", "html_url": "https://github.com/wilkinsona", "followers_url": "https://api.github.com/users/wilkinsona/followers", "following_url": "https://api.github.com/users/wilkinsona/following{/other_user}", "gists_url": "https://api.github.com/users/wilkinsona/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilkinsona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilkinsona/subscriptions", "organizations_url": "https://api.github.com/users/wilkinsona/orgs", "repos_url": "https://api.github.com/users/wilkinsona/repos", "events_url": "https://api.github.com/users/wilkinsona/events{/privacy}", "received_events_url": "https://api.github.com/users/wilkinsona/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85378e52538dea5e1dbdbb748283877d8aea223b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/85378e52538dea5e1dbdbb748283877d8aea223b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/85378e52538dea5e1dbdbb748283877d8aea223b"}]}, {"sha": "85378e52538dea5e1dbdbb748283877d8aea223b", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-01T12:01:22Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-01T12:01:22Z"}, "message": "Kafka: KCCtx: return null if consumedData.isEmpty\n\nFixes: https://github.com/spring-projects/spring-integration-extensions/issues/68", "tree": {"sha": "e9cd06382b110b005b0af57eba5259bd94aa2c76", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e9cd06382b110b005b0af57eba5259bd94aa2c76"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/85378e52538dea5e1dbdbb748283877d8aea223b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/85378e52538dea5e1dbdbb748283877d8aea223b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/85378e52538dea5e1dbdbb748283877d8aea223b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/85378e52538dea5e1dbdbb748283877d8aea223b/comments", "author": null, "committer": null, "parents": [{"sha": "906880acf0fc72ca96c55db26f0027d5db475093", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/906880acf0fc72ca96c55db26f0027d5db475093", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/906880acf0fc72ca96c55db26f0027d5db475093"}]}, {"sha": "906880acf0fc72ca96c55db26f0027d5db475093", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-01T11:49:53Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-07-01T11:49:53Z"}, "message": "DSL: Use `DelayerEndpointSpec` for `.delay()`\n\nGH: https://github.com/spring-projects/spring-integration-extensions/issues/84", "tree": {"sha": "4a69c48cfe19e97df0fac68a4a1c65db3a30f651", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4a69c48cfe19e97df0fac68a4a1c65db3a30f651"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/906880acf0fc72ca96c55db26f0027d5db475093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/906880acf0fc72ca96c55db26f0027d5db475093", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/906880acf0fc72ca96c55db26f0027d5db475093", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/906880acf0fc72ca96c55db26f0027d5db475093/comments", "author": null, "committer": null, "parents": [{"sha": "c639066dafe7dd62070e676fa52da8161ee82a72", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c639066dafe7dd62070e676fa52da8161ee82a72", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c639066dafe7dd62070e676fa52da8161ee82a72"}]}, {"sha": "c639066dafe7dd62070e676fa52da8161ee82a72", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-30T07:08:07Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-30T07:08:07Z"}, "message": "Splunk: Populate `count=0` to the reader `Job`\n\nPR: https://github.com/spring-projects/spring-integration-extensions/pull/82", "tree": {"sha": "8be4f9f1737d554516eda284ba602529f2b2511b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8be4f9f1737d554516eda284ba602529f2b2511b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c639066dafe7dd62070e676fa52da8161ee82a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c639066dafe7dd62070e676fa52da8161ee82a72", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c639066dafe7dd62070e676fa52da8161ee82a72", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c639066dafe7dd62070e676fa52da8161ee82a72/comments", "author": null, "committer": null, "parents": [{"sha": "ab5073fb4d483ccf1875ba65e3e645c1c6cad263", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab5073fb4d483ccf1875ba65e3e645c1c6cad263", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ab5073fb4d483ccf1875ba65e3e645c1c6cad263"}]}, {"sha": "ab5073fb4d483ccf1875ba65e3e645c1c6cad263", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-28T11:10:48Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-28T11:10:48Z"}, "message": "AWS-S3: Close tag in the sample config\n\nPR: https://github.com/spring-projects/spring-integration-extensions/pull/85", "tree": {"sha": "fa227e64a543791d7e940a3b751932cc7ce0d63d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/fa227e64a543791d7e940a3b751932cc7ce0d63d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ab5073fb4d483ccf1875ba65e3e645c1c6cad263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab5073fb4d483ccf1875ba65e3e645c1c6cad263", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ab5073fb4d483ccf1875ba65e3e645c1c6cad263", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab5073fb4d483ccf1875ba65e3e645c1c6cad263/comments", "author": null, "committer": null, "parents": [{"sha": "c515a566fffa29452a9733fda587cb26e5b16021", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c515a566fffa29452a9733fda587cb26e5b16021", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c515a566fffa29452a9733fda587cb26e5b16021"}]}, {"sha": "c515a566fffa29452a9733fda587cb26e5b16021", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-25T15:37:36Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-25T15:37:36Z"}, "message": "[artifactory-release] SMPP Next development version", "tree": {"sha": "9d215ffc02038abf1eba154a9cc8dc1711e68fc8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9d215ffc02038abf1eba154a9cc8dc1711e68fc8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c515a566fffa29452a9733fda587cb26e5b16021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c515a566fffa29452a9733fda587cb26e5b16021", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c515a566fffa29452a9733fda587cb26e5b16021", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c515a566fffa29452a9733fda587cb26e5b16021/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "455a1ef76650a2c6f7e75a5b4eca5411c05a5acd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/455a1ef76650a2c6f7e75a5b4eca5411c05a5acd", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/455a1ef76650a2c6f7e75a5b4eca5411c05a5acd"}]}, {"sha": "455a1ef76650a2c6f7e75a5b4eca5411c05a5acd", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-25T15:37:32Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-25T15:37:32Z"}, "message": "[artifactory-release] SMPP Release version 1.0.0.RELEASE", "tree": {"sha": "68578c47f805395222137a64eb0214621b31911a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/68578c47f805395222137a64eb0214621b31911a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/455a1ef76650a2c6f7e75a5b4eca5411c05a5acd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/455a1ef76650a2c6f7e75a5b4eca5411c05a5acd", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/455a1ef76650a2c6f7e75a5b4eca5411c05a5acd", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/455a1ef76650a2c6f7e75a5b4eca5411c05a5acd/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55d9ef5d3a3260aa951fa64865c5bb45c054b353", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/55d9ef5d3a3260aa951fa64865c5bb45c054b353", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/55d9ef5d3a3260aa951fa64865c5bb45c054b353"}]}, {"sha": "55d9ef5d3a3260aa951fa64865c5bb45c054b353", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-25T15:28:52Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-25T15:28:52Z"}, "message": "Revert \"[artifactory-release] SMPP Release version 1.0.0.GA\"\n\nThis reverts commit 4519168dfc69f66c648f2b0d46ea68d296b24a38.", "tree": {"sha": "45b450fe8014bc49c1eb40245bcd2c3ff3471fad", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/45b450fe8014bc49c1eb40245bcd2c3ff3471fad"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/55d9ef5d3a3260aa951fa64865c5bb45c054b353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/55d9ef5d3a3260aa951fa64865c5bb45c054b353", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/55d9ef5d3a3260aa951fa64865c5bb45c054b353", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/55d9ef5d3a3260aa951fa64865c5bb45c054b353/comments", "author": null, "committer": null, "parents": [{"sha": "4652b04c73da8c4dcd88d6629a99309ab616e6b0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4652b04c73da8c4dcd88d6629a99309ab616e6b0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4652b04c73da8c4dcd88d6629a99309ab616e6b0"}]}, {"sha": "4652b04c73da8c4dcd88d6629a99309ab616e6b0", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-25T15:17:51Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-25T15:17:51Z"}, "message": "Revert \"[artifactory-release] SMPP Next development version\"\n\nThis reverts commit 2ed3ad747477ba4cfcea0aba824dbda78201119d.", "tree": {"sha": "0327683de70fa79f4b2c6dea43988b87c97e9204", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/0327683de70fa79f4b2c6dea43988b87c97e9204"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4652b04c73da8c4dcd88d6629a99309ab616e6b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4652b04c73da8c4dcd88d6629a99309ab616e6b0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4652b04c73da8c4dcd88d6629a99309ab616e6b0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4652b04c73da8c4dcd88d6629a99309ab616e6b0/comments", "author": null, "committer": null, "parents": [{"sha": "2ed3ad747477ba4cfcea0aba824dbda78201119d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2ed3ad747477ba4cfcea0aba824dbda78201119d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2ed3ad747477ba4cfcea0aba824dbda78201119d"}]}, {"sha": "2ed3ad747477ba4cfcea0aba824dbda78201119d", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-25T15:09:19Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-25T15:09:19Z"}, "message": "[artifactory-release] SMPP Next development version", "tree": {"sha": "9d215ffc02038abf1eba154a9cc8dc1711e68fc8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9d215ffc02038abf1eba154a9cc8dc1711e68fc8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2ed3ad747477ba4cfcea0aba824dbda78201119d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2ed3ad747477ba4cfcea0aba824dbda78201119d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2ed3ad747477ba4cfcea0aba824dbda78201119d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2ed3ad747477ba4cfcea0aba824dbda78201119d/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4519168dfc69f66c648f2b0d46ea68d296b24a38", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4519168dfc69f66c648f2b0d46ea68d296b24a38", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4519168dfc69f66c648f2b0d46ea68d296b24a38"}]}, {"sha": "4519168dfc69f66c648f2b0d46ea68d296b24a38", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-25T15:09:14Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-25T15:09:14Z"}, "message": "[artifactory-release] SMPP Release version 1.0.0.GA", "tree": {"sha": "0327683de70fa79f4b2c6dea43988b87c97e9204", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/0327683de70fa79f4b2c6dea43988b87c97e9204"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4519168dfc69f66c648f2b0d46ea68d296b24a38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4519168dfc69f66c648f2b0d46ea68d296b24a38", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4519168dfc69f66c648f2b0d46ea68d296b24a38", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4519168dfc69f66c648f2b0d46ea68d296b24a38/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1d6b068bce44c574323853d041e56269bb16bc4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d1d6b068bce44c574323853d041e56269bb16bc4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d1d6b068bce44c574323853d041e56269bb16bc4"}]}, {"sha": "d1d6b068bce44c574323853d041e56269bb16bc4", "commit": {"author": {"name": "Edge Dalmacio", "email": "edgar.dalmacio@gmail.com", "date": "2014-06-24T14:14:47Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-24T14:15:46Z"}, "message": "INTEXT-73: Sending multipart SMS messages through\n\nJIRA: https://jira.spring.io/browse/INTEXT-73\n\nminor optimization\n\nadded test for multipart messages\n\nSigned-off-by: Edge Dalmacio <edgar.dalmacio@gmail.com>\n\nINTEXT-73 Replaced String[] with List\n\nINTEXT-73 fixed test\n\nPolishing code format", "tree": {"sha": "45b450fe8014bc49c1eb40245bcd2c3ff3471fad", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/45b450fe8014bc49c1eb40245bcd2c3ff3471fad"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d1d6b068bce44c574323853d041e56269bb16bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d1d6b068bce44c574323853d041e56269bb16bc4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d1d6b068bce44c574323853d041e56269bb16bc4", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d1d6b068bce44c574323853d041e56269bb16bc4/comments", "author": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7590253871e892bf66441e1975778055b6a0f37e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7590253871e892bf66441e1975778055b6a0f37e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7590253871e892bf66441e1975778055b6a0f37e"}]}, {"sha": "7590253871e892bf66441e1975778055b6a0f37e", "commit": {"author": {"name": "Edge Dalmacio", "email": "edgar.dalmacio@gmail.com", "date": "2014-06-24T08:26:32Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-24T11:02:02Z"}, "message": "INTEXT-107 Upgrade to Spring Integration 4.0\n\nJIRA: https://jira.spring.io/browse/INTEXT-107\n\n* Upgrade to Gradle 1.12\n* Fix compile warnings\n* Fix XSD declaration\n* Get rid of `EasyMock`", "tree": {"sha": "a709974917c2d73bf459cc9b64ee9fe5fbb31fd3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/a709974917c2d73bf459cc9b64ee9fe5fbb31fd3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7590253871e892bf66441e1975778055b6a0f37e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7590253871e892bf66441e1975778055b6a0f37e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7590253871e892bf66441e1975778055b6a0f37e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7590253871e892bf66441e1975778055b6a0f37e/comments", "author": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b049dd47835c11198b153767493da72d774d64d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2b049dd47835c11198b153767493da72d774d64d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2b049dd47835c11198b153767493da72d774d64d"}]}, {"sha": "2b049dd47835c11198b153767493da72d774d64d", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-19T13:03:36Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-19T13:03:36Z"}, "message": "[artifactory-release] Next development version Java DSL", "tree": {"sha": "6e6166551f5f90671bfc50ef239c7bfd2db7f67f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/6e6166551f5f90671bfc50ef239c7bfd2db7f67f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2b049dd47835c11198b153767493da72d774d64d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2b049dd47835c11198b153767493da72d774d64d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2b049dd47835c11198b153767493da72d774d64d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2b049dd47835c11198b153767493da72d774d64d/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bb2e40ecc8fb83e622207ba272f20cbde5df0b6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bb2e40ecc8fb83e622207ba272f20cbde5df0b6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5bb2e40ecc8fb83e622207ba272f20cbde5df0b6"}]}, {"sha": "5bb2e40ecc8fb83e622207ba272f20cbde5df0b6", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-19T13:03:32Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-06-19T13:03:32Z"}, "message": "[artifactory-release] Release version Java DSL 1.0.0.M2", "tree": {"sha": "1cf0a788651d5051b8d63985edf414ef428eeec2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1cf0a788651d5051b8d63985edf414ef428eeec2"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/5bb2e40ecc8fb83e622207ba272f20cbde5df0b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bb2e40ecc8fb83e622207ba272f20cbde5df0b6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5bb2e40ecc8fb83e622207ba272f20cbde5df0b6", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bb2e40ecc8fb83e622207ba272f20cbde5df0b6/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3085f71277bafddc859e3fba2bb61e5ac38f40de", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3085f71277bafddc859e3fba2bb61e5ac38f40de", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3085f71277bafddc859e3fba2bb61e5ac38f40de"}]}, {"sha": "3085f71277bafddc859e3fba2bb61e5ac38f40de", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-13T18:20:16Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-13T18:20:16Z"}, "message": "DSL: Add `Jms.messageDriverAdapter`", "tree": {"sha": "6e6166551f5f90671bfc50ef239c7bfd2db7f67f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/6e6166551f5f90671bfc50ef239c7bfd2db7f67f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3085f71277bafddc859e3fba2bb61e5ac38f40de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3085f71277bafddc859e3fba2bb61e5ac38f40de", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3085f71277bafddc859e3fba2bb61e5ac38f40de", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3085f71277bafddc859e3fba2bb61e5ac38f40de/comments", "author": null, "committer": null, "parents": [{"sha": "989ce89feddd0f5fcaf24da60772de21b097a895", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/989ce89feddd0f5fcaf24da60772de21b097a895", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/989ce89feddd0f5fcaf24da60772de21b097a895"}]}, {"sha": "989ce89feddd0f5fcaf24da60772de21b097a895", "commit": {"author": {"name": "Jonathan Pearlin", "email": "jpearlin@newrelic.com", "date": "2014-06-12T22:07:19Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-13T16:14:43Z"}, "message": "INTEXT-106: Update to spring-integration 4.0\n\nJIRA: https://jira.spring.io/browse/INTEXT-106\n\n* Upgrade to SI 4.0 and other libs\n* Upgrade to Gradle 1.12\n* Polisihng for `build.gradle`\n* Fix compile warnings", "tree": {"sha": "ea301af9e8be8e88ae62434e1bdb40c9237396d7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ea301af9e8be8e88ae62434e1bdb40c9237396d7"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/989ce89feddd0f5fcaf24da60772de21b097a895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/989ce89feddd0f5fcaf24da60772de21b097a895", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/989ce89feddd0f5fcaf24da60772de21b097a895", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/989ce89feddd0f5fcaf24da60772de21b097a895/comments", "author": null, "committer": null, "parents": [{"sha": "1307646c3c56cbdd3d3f9386257fd23990a42415", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1307646c3c56cbdd3d3f9386257fd23990a42415", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1307646c3c56cbdd3d3f9386257fd23990a42415"}]}, {"sha": "1307646c3c56cbdd3d3f9386257fd23990a42415", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-12T15:24:12Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-12T15:24:12Z"}, "message": "DSL: Polishing for `priorityChannel` test", "tree": {"sha": "f9a9421e1f51fc353689f7ee1449c74c3a79a1e6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f9a9421e1f51fc353689f7ee1449c74c3a79a1e6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1307646c3c56cbdd3d3f9386257fd23990a42415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1307646c3c56cbdd3d3f9386257fd23990a42415", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1307646c3c56cbdd3d3f9386257fd23990a42415", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1307646c3c56cbdd3d3f9386257fd23990a42415/comments", "author": null, "committer": null, "parents": [{"sha": "a35db31e6152abcb79f631491d85a80c5940f7c9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a35db31e6152abcb79f631491d85a80c5940f7c9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a35db31e6152abcb79f631491d85a80c5940f7c9"}]}, {"sha": "a35db31e6152abcb79f631491d85a80c5940f7c9", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-12T15:16:43Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-12T15:16:43Z"}, "message": "DSL: Add `Jms.inboundGateway()` infrastructure", "tree": {"sha": "5d74d142876e4264736f9f4504fc1fbb40b7be53", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/5d74d142876e4264736f9f4504fc1fbb40b7be53"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a35db31e6152abcb79f631491d85a80c5940f7c9", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a35db31e6152abcb79f631491d85a80c5940f7c9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a35db31e6152abcb79f631491d85a80c5940f7c9", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a35db31e6152abcb79f631491d85a80c5940f7c9/comments", "author": null, "committer": null, "parents": [{"sha": "49538abbe6b068340f3542c13789d96df6cda097", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/49538abbe6b068340f3542c13789d96df6cda097", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/49538abbe6b068340f3542c13789d96df6cda097"}]}, {"sha": "49538abbe6b068340f3542c13789d96df6cda097", "commit": {"author": {"name": "Olivier Lamy", "email": "oliver.lamy@gmail.com", "date": "2014-06-12T11:06:03Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-12T11:09:28Z"}, "message": "INTEXT-105: Fix \"index\" property according to the schema\n\nJIRA: https://jira.spring.io/browse/INTEXT-105\n\nPreviously the `SplunkIndexWriter` has property `indexName`,\nhowever the XSD for `<int-splunk:index-writer/>` provides the `index` attribute\n\nRename the property and add parser test", "tree": {"sha": "86f3a34fedd313529176c0ff2add21baa4ff9ea1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/86f3a34fedd313529176c0ff2add21baa4ff9ea1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/49538abbe6b068340f3542c13789d96df6cda097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/49538abbe6b068340f3542c13789d96df6cda097", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/49538abbe6b068340f3542c13789d96df6cda097", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/49538abbe6b068340f3542c13789d96df6cda097/comments", "author": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b42e6e150304a731bb8e4dc2c415971aa8017f36", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b42e6e150304a731bb8e4dc2c415971aa8017f36", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b42e6e150304a731bb8e4dc2c415971aa8017f36"}]}, {"sha": "b42e6e150304a731bb8e4dc2c415971aa8017f36", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-11T16:16:57Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-11T16:16:57Z"}, "message": "DSL: JMS in/out adapters, outbound gateway\n\n* Others fixes, improvements and refactoring", "tree": {"sha": "ee5df06a03b4c53765763f7f77099f8c6ac01134", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ee5df06a03b4c53765763f7f77099f8c6ac01134"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b42e6e150304a731bb8e4dc2c415971aa8017f36", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b42e6e150304a731bb8e4dc2c415971aa8017f36", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b42e6e150304a731bb8e4dc2c415971aa8017f36", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b42e6e150304a731bb8e4dc2c415971aa8017f36/comments", "author": null, "committer": null, "parents": [{"sha": "7394516a2dcd7ffc3777a3e36e36acb73edc2993", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7394516a2dcd7ffc3777a3e36e36acb73edc2993", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7394516a2dcd7ffc3777a3e36e36acb73edc2993"}]}, {"sha": "7394516a2dcd7ffc3777a3e36e36acb73edc2993", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-10T15:42:23Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-10T15:42:23Z"}, "message": "DSL: Add `Jms` factory\n\n* Add `Spec` implementations for `JmsChannel`s\n* Fix the bug around `SourcePollingChannelAdapterFactoryBean` named bean registration\n* Remove unused classes\n* Add test for `Jms.pollableChannel`", "tree": {"sha": "ab7819bdfa4bbc412118485337a45482aba372a3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ab7819bdfa4bbc412118485337a45482aba372a3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7394516a2dcd7ffc3777a3e36e36acb73edc2993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7394516a2dcd7ffc3777a3e36e36acb73edc2993", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7394516a2dcd7ffc3777a3e36e36acb73edc2993", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7394516a2dcd7ffc3777a3e36e36acb73edc2993/comments", "author": null, "committer": null, "parents": [{"sha": "36063ec8f2e55e440599b6f1f909eb8b430a0f15", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/36063ec8f2e55e440599b6f1f909eb8b430a0f15", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/36063ec8f2e55e440599b6f1f909eb8b430a0f15"}]}, {"sha": "36063ec8f2e55e440599b6f1f909eb8b430a0f15", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-09T10:54:40Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-09T10:54:40Z"}, "message": "DSL: Add `Amqp.*channel()` support\n\n* Upgrade to the latest Boot snapshot\n* Polishing and workarounds for `Proxy` beans. Caused by `@EnableJmx`", "tree": {"sha": "4bf1df39128ae2d89324e5c18dd6fee9eaaa35ec", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4bf1df39128ae2d89324e5c18dd6fee9eaaa35ec"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/36063ec8f2e55e440599b6f1f909eb8b430a0f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/36063ec8f2e55e440599b6f1f909eb8b430a0f15", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/36063ec8f2e55e440599b6f1f909eb8b430a0f15", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/36063ec8f2e55e440599b6f1f909eb8b430a0f15/comments", "author": null, "committer": null, "parents": [{"sha": "bb85518449e98ac23dd9bd08216f20a818d9722a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bb85518449e98ac23dd9bd08216f20a818d9722a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bb85518449e98ac23dd9bd08216f20a818d9722a"}]}, {"sha": "bb85518449e98ac23dd9bd08216f20a818d9722a", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-06T14:32:25Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-06T14:35:29Z"}, "message": "INTEXT-94: Fix Auth bug for Splunk 6.x\n\nJIRA: https://jira.spring.io/browse/INTEXT-94\n\n* Upgrade to Splunk Client 1.3", "tree": {"sha": "bbcac93f8387012396605bdeeec27bb7e92458a7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/bbcac93f8387012396605bdeeec27bb7e92458a7"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/bb85518449e98ac23dd9bd08216f20a818d9722a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bb85518449e98ac23dd9bd08216f20a818d9722a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bb85518449e98ac23dd9bd08216f20a818d9722a", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bb85518449e98ac23dd9bd08216f20a818d9722a/comments", "author": null, "committer": null, "parents": [{"sha": "198205058cfe6c9266ea4549bf76d4dd2e8f9785", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/198205058cfe6c9266ea4549bf76d4dd2e8f9785", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/198205058cfe6c9266ea4549bf76d4dd2e8f9785"}]}, {"sha": "198205058cfe6c9266ea4549bf76d4dd2e8f9785", "commit": {"author": {"name": "Olivier Lamy", "email": "oliver.lamy@gmail.com", "date": "2014-06-06T10:43:57Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-06T10:49:32Z"}, "message": "Splunk: Servers failover\n\nupgrade versions\n\nConflicts:\n\tspring-integration-splunk/gradle.properties\n\nupgrade gradle version\n\nrevert spring integration upgrade version\n\nAdd a feature to be able to declare more than one splunk server.\nIt's a simple failover mechanism with any pooling.\nBefore give back the Service instance, the framework just try a getInfo call.\nTo preserve backward compat this check it's not activated per default but only\nif the splunk server instance is marked with testOnBorrow.\n\nSample:\n````xml\n  <int-splunk:server id=\"splunkServer\" host=\"${splunk.server.host}\" port=\"${splunk.server.port}\"\n                     username=\"${splunk.server.username}\" password=\"${splunk.server.password}\"\n                     owner=\"${splunk.server.owner}\" scheme=\"${splunk.server.scheme}\" testOnBorrow=\"true\" />\n\n  <int-splunk:server id=\"splunkServerBackup\" host=\"localhost\" port=\"9999\"\n                     username=\"${splunk.server.username}\" password=\"${splunk.server.password}\"\n                     owner=\"${splunk.server.owner}\" scheme=\"${splunk.server.scheme}\" testOnBorrow=\"true\" />\n\n  <util:list id=\"splunkServersList\">\n    <ref bean=\"splunkServer\" />\n    <ref bean=\"splunkServerBackup\" />\n  </util:list>\n\n  <bean id=\"splunkServiceFactory\" class=\"org.springframework.integration.splunk.support.SplunkServiceFactory\">\n    <constructor-arg ref=\"splunkServersList\"/>\n  </bean>\n\n  <int-splunk:inbound-channel-adapter id=\"splunk-notify-order-status-change-channel\"\n                                      auto-startup=\"true\"\n                                      search=\"\"\n                                      splunk-server-ref=\"splunkServer;splunkServerBackup\"\n                                      channel=\"notify-order-status-change-input\"\n                                      mode=\"BLOCKING\"\n                                      init-earliest-time=\"${splunk.order-status-change.init-earliest-time}\"\n                                      >\n    <int:poller fixed-rate=\"${splunk.order-status-change.pooling.rate.time}\" time-unit=\"SECONDS\"/>\n  </int-splunk:inbound-channel-adapter>\n````\n\nsome changes due to pr comments\n\nConflicts:\n\tspring-integration-splunk/gradle.properties\n\nformatting: tabs instead of spaces.....\n\nfix documentation with failover mechanism\n\nformatting\n\nformatting\n\nupgrade versions\n\nsome changes due to pr comments\n\nfix javadoc issues\n\n1.1 xsd file\n\nPolishing and upgrading", "tree": {"sha": "c8f34c32cc9b8241529845d326faa559834c57a6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c8f34c32cc9b8241529845d326faa559834c57a6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/198205058cfe6c9266ea4549bf76d4dd2e8f9785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/198205058cfe6c9266ea4549bf76d4dd2e8f9785", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/198205058cfe6c9266ea4549bf76d4dd2e8f9785", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/198205058cfe6c9266ea4549bf76d4dd2e8f9785/comments", "author": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd085c8945f67a2ac1c86c6cf8172a3f65bf06f4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/dd085c8945f67a2ac1c86c6cf8172a3f65bf06f4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/dd085c8945f67a2ac1c86c6cf8172a3f65bf06f4"}]}, {"sha": "dd085c8945f67a2ac1c86c6cf8172a3f65bf06f4", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-05T21:36:53Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-05T21:38:21Z"}, "message": "DSL: Fix `@Autowired` issue for `IntegrationFlow`s\n\n* Move DSL parser logic from `BFPP` to `BPP` as soon as the DSL doesn't populate any `BeanDefinition` - just real objects,\nwhich can be registered with `this.beanFactory.registerSingleton(beanName, component);`\n* Add more DSL for `Amqp` 'Namespace' factory and provide tests on the matter\n* Comment out `spring-integration-jdbc` and `spring-integration-jpa` dependecies because the provide `spring-jdbc` dependency,\nbut it causes an issue in Boot: https://github.com/spring-projects/spring-boot/issues/1041", "tree": {"sha": "815c095b7d70315e0b944f9564a7e135a43a2835", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/815c095b7d70315e0b944f9564a7e135a43a2835"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/dd085c8945f67a2ac1c86c6cf8172a3f65bf06f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/dd085c8945f67a2ac1c86c6cf8172a3f65bf06f4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/dd085c8945f67a2ac1c86c6cf8172a3f65bf06f4", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/dd085c8945f67a2ac1c86c6cf8172a3f65bf06f4/comments", "author": null, "committer": null, "parents": [{"sha": "5bf98b033b69ce9acc5d807fca49c668989ef634", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bf98b033b69ce9acc5d807fca49c668989ef634", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5bf98b033b69ce9acc5d807fca49c668989ef634"}]}, {"sha": "5bf98b033b69ce9acc5d807fca49c668989ef634", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-06-02T19:27:31Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-06-02T19:27:31Z"}, "message": "Remove spring-integration-mqtt from master", "tree": {"sha": "2a11497c00f7cc4a7e595ec46e41a238f5edd755", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2a11497c00f7cc4a7e595ec46e41a238f5edd755"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/5bf98b033b69ce9acc5d807fca49c668989ef634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bf98b033b69ce9acc5d807fca49c668989ef634", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5bf98b033b69ce9acc5d807fca49c668989ef634", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bf98b033b69ce9acc5d807fca49c668989ef634/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8ed4a5036dffb1a7e2b19ae022d8f3d5d57fa7b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c8ed4a5036dffb1a7e2b19ae022d8f3d5d57fa7b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c8ed4a5036dffb1a7e2b19ae022d8f3d5d57fa7b"}]}, {"sha": "c8ed4a5036dffb1a7e2b19ae022d8f3d5d57fa7b", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-03-27T03:55:37Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:04Z"}, "message": "[artifactory-release] Splunk Next development version", "tree": {"sha": "793343809af304f2dd2c776aac6ad6807dc1cb39", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/793343809af304f2dd2c776aac6ad6807dc1cb39"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c8ed4a5036dffb1a7e2b19ae022d8f3d5d57fa7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c8ed4a5036dffb1a7e2b19ae022d8f3d5d57fa7b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c8ed4a5036dffb1a7e2b19ae022d8f3d5d57fa7b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c8ed4a5036dffb1a7e2b19ae022d8f3d5d57fa7b/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4adcd74534be15f832ca0636e12ee960d637e025", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4adcd74534be15f832ca0636e12ee960d637e025", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4adcd74534be15f832ca0636e12ee960d637e025"}]}, {"sha": "4adcd74534be15f832ca0636e12ee960d637e025", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-03-27T03:55:33Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "[artifactory-release] Splunk Release version 1.1.0.M2", "tree": {"sha": "1e106fa1e82e008a8894d728fe4321d99286ccc6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1e106fa1e82e008a8894d728fe4321d99286ccc6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4adcd74534be15f832ca0636e12ee960d637e025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4adcd74534be15f832ca0636e12ee960d637e025", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4adcd74534be15f832ca0636e12ee960d637e025", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4adcd74534be15f832ca0636e12ee960d637e025/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ba75060eb5d9524466318dce01367ff6761937d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3ba75060eb5d9524466318dce01367ff6761937d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3ba75060eb5d9524466318dce01367ff6761937d"}]}, {"sha": "3ba75060eb5d9524466318dce01367ff6761937d", "commit": {"author": {"name": "Glenn Renfro", "email": "grenfro@gopivotal.com", "date": "2014-03-26T19:19:34Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "XD-1170 updted import for MessageHandlingException", "tree": {"sha": "793343809af304f2dd2c776aac6ad6807dc1cb39", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/793343809af304f2dd2c776aac6ad6807dc1cb39"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3ba75060eb5d9524466318dce01367ff6761937d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3ba75060eb5d9524466318dce01367ff6761937d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3ba75060eb5d9524466318dce01367ff6761937d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3ba75060eb5d9524466318dce01367ff6761937d/comments", "author": null, "committer": null, "parents": [{"sha": "cce7bb94b38564c553321a109cc4718700975200", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cce7bb94b38564c553321a109cc4718700975200", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cce7bb94b38564c553321a109cc4718700975200"}]}, {"sha": "cce7bb94b38564c553321a109cc4718700975200", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-12-21T14:57:11Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "6dd12bb1a4f0861fb51503eda2cbb42ee58002df", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/6dd12bb1a4f0861fb51503eda2cbb42ee58002df"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/cce7bb94b38564c553321a109cc4718700975200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cce7bb94b38564c553321a109cc4718700975200", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cce7bb94b38564c553321a109cc4718700975200", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cce7bb94b38564c553321a109cc4718700975200/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57469b39770bc8fd169ac7e5555208c99debe515", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57469b39770bc8fd169ac7e5555208c99debe515", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/57469b39770bc8fd169ac7e5555208c99debe515"}]}, {"sha": "57469b39770bc8fd169ac7e5555208c99debe515", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-12-21T14:57:07Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "[artifactory-release] Release version 1.1.0.M1", "tree": {"sha": "ed07777081488f338dd9c4590c2cedaf670a1475", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ed07777081488f338dd9c4590c2cedaf670a1475"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/57469b39770bc8fd169ac7e5555208c99debe515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57469b39770bc8fd169ac7e5555208c99debe515", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/57469b39770bc8fd169ac7e5555208c99debe515", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57469b39770bc8fd169ac7e5555208c99debe515/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aafda12a5f0cc9bbc7e84ead80df7b9d794432f2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/aafda12a5f0cc9bbc7e84ead80df7b9d794432f2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/aafda12a5f0cc9bbc7e84ead80df7b9d794432f2"}]}, {"sha": "aafda12a5f0cc9bbc7e84ead80df7b9d794432f2", "commit": {"author": {"name": "Glenn Renfro", "email": "grenfro@gopivotal.com", "date": "2013-12-20T22:33:36Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "Uses Spring 4.0 dependencies\n\nUpdated the buid version 1.1.0", "tree": {"sha": "6dd12bb1a4f0861fb51503eda2cbb42ee58002df", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/6dd12bb1a4f0861fb51503eda2cbb42ee58002df"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/aafda12a5f0cc9bbc7e84ead80df7b9d794432f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/aafda12a5f0cc9bbc7e84ead80df7b9d794432f2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/aafda12a5f0cc9bbc7e84ead80df7b9d794432f2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/aafda12a5f0cc9bbc7e84ead80df7b9d794432f2/comments", "author": null, "committer": null, "parents": [{"sha": "ae579c66863081134b3c3472800ebee3c91ff427", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ae579c66863081134b3c3472800ebee3c91ff427", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ae579c66863081134b3c3472800ebee3c91ff427"}]}, {"sha": "ae579c66863081134b3c3472800ebee3c91ff427", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-12-17T23:41:14Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "1bb1e3f09d3dad20d0a1ee8b09ac49176e2dd8a6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1bb1e3f09d3dad20d0a1ee8b09ac49176e2dd8a6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ae579c66863081134b3c3472800ebee3c91ff427", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ae579c66863081134b3c3472800ebee3c91ff427", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ae579c66863081134b3c3472800ebee3c91ff427", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ae579c66863081134b3c3472800ebee3c91ff427/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dad1a01c5aea318fae8d949069732841ad8554c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9dad1a01c5aea318fae8d949069732841ad8554c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9dad1a01c5aea318fae8d949069732841ad8554c"}]}, {"sha": "9dad1a01c5aea318fae8d949069732841ad8554c", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-12-17T23:41:10Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "[artifactory-release] Release version 4.0.0.M2", "tree": {"sha": "94fe5ce9636f59463f1bc99a83e5c4f745f35278", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/94fe5ce9636f59463f1bc99a83e5c4f745f35278"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/9dad1a01c5aea318fae8d949069732841ad8554c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9dad1a01c5aea318fae8d949069732841ad8554c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9dad1a01c5aea318fae8d949069732841ad8554c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9dad1a01c5aea318fae8d949069732841ad8554c/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cca2fbcc7485590e6c0d39ca956ca5a511d61549", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cca2fbcc7485590e6c0d39ca956ca5a511d61549", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cca2fbcc7485590e6c0d39ca956ca5a511d61549"}]}, {"sha": "cca2fbcc7485590e6c0d39ca956ca5a511d61549", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-12-17T23:25:26Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "MQTT Update to SI 4.0.0.M2, SPR 4.0.0.RELEASE\n\nConflicts:\n\tspring-integration-mqtt/build.gradle", "tree": {"sha": "1bb1e3f09d3dad20d0a1ee8b09ac49176e2dd8a6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1bb1e3f09d3dad20d0a1ee8b09ac49176e2dd8a6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/cca2fbcc7485590e6c0d39ca956ca5a511d61549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cca2fbcc7485590e6c0d39ca956ca5a511d61549", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cca2fbcc7485590e6c0d39ca956ca5a511d61549", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cca2fbcc7485590e6c0d39ca956ca5a511d61549/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2af9fb62909dc2d0c075f8a5d99f7c22d51b486", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e2af9fb62909dc2d0c075f8a5d99f7c22d51b486", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e2af9fb62909dc2d0c075f8a5d99f7c22d51b486"}]}, {"sha": "e2af9fb62909dc2d0c075f8a5d99f7c22d51b486", "commit": {"author": {"name": "Glenn Renfro", "email": "grenfro@gopivotal.com", "date": "2013-12-13T22:32:29Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "Updated MQTTMessageConverter to use new classpath\n\nConflicts:\n\tspring-integration-mqtt/build.gradle", "tree": {"sha": "ca32f4eb8e7911c07c37876ed48678cb3df02af3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ca32f4eb8e7911c07c37876ed48678cb3df02af3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e2af9fb62909dc2d0c075f8a5d99f7c22d51b486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e2af9fb62909dc2d0c075f8a5d99f7c22d51b486", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e2af9fb62909dc2d0c075f8a5d99f7c22d51b486", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e2af9fb62909dc2d0c075f8a5d99f7c22d51b486/comments", "author": null, "committer": null, "parents": [{"sha": "b1b4517f9bddbdf1860fe3659294a7d49e00d2e1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1b4517f9bddbdf1860fe3659294a7d49e00d2e1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b1b4517f9bddbdf1860fe3659294a7d49e00d2e1"}]}, {"sha": "b1b4517f9bddbdf1860fe3659294a7d49e00d2e1", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-11-08T15:59:07Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "f721f1c3752ecb5535c58eea10f3a4cdb912bf4a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f721f1c3752ecb5535c58eea10f3a4cdb912bf4a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b1b4517f9bddbdf1860fe3659294a7d49e00d2e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1b4517f9bddbdf1860fe3659294a7d49e00d2e1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b1b4517f9bddbdf1860fe3659294a7d49e00d2e1", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1b4517f9bddbdf1860fe3659294a7d49e00d2e1/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3f995967dd2497210054363444fa3fd3767b54f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b3f995967dd2497210054363444fa3fd3767b54f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b3f995967dd2497210054363444fa3fd3767b54f"}]}, {"sha": "b3f995967dd2497210054363444fa3fd3767b54f", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-11-08T15:59:02Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "[artifactory-release] Release version mqtt 4.0.0.M1", "tree": {"sha": "0c15b9489d750c15fb2cd14a6e03108603e19657", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/0c15b9489d750c15fb2cd14a6e03108603e19657"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b3f995967dd2497210054363444fa3fd3767b54f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b3f995967dd2497210054363444fa3fd3767b54f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b3f995967dd2497210054363444fa3fd3767b54f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b3f995967dd2497210054363444fa3fd3767b54f/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b22a130a87e02741f339c1e55868b01a7ad177d7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b22a130a87e02741f339c1e55868b01a7ad177d7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b22a130a87e02741f339c1e55868b01a7ad177d7"}]}, {"sha": "b22a130a87e02741f339c1e55868b01a7ad177d7", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-11-08T15:28:28Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "MQTT - Update to Spring Integration 4.0.0.M1\n\nConflicts:\n\tspring-integration-mqtt/build.gradle", "tree": {"sha": "f721f1c3752ecb5535c58eea10f3a4cdb912bf4a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f721f1c3752ecb5535c58eea10f3a4cdb912bf4a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b22a130a87e02741f339c1e55868b01a7ad177d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b22a130a87e02741f339c1e55868b01a7ad177d7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b22a130a87e02741f339c1e55868b01a7ad177d7", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b22a130a87e02741f339c1e55868b01a7ad177d7/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46cf219b448c8c56ff4209d23f766664962a4a17", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46cf219b448c8c56ff4209d23f766664962a4a17", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/46cf219b448c8c56ff4209d23f766664962a4a17"}]}, {"sha": "46cf219b448c8c56ff4209d23f766664962a4a17", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-10-15T14:47:20Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T14:24:03Z"}, "message": "MQTT - Use INT/SPR 4.0.0\n\nConflicts:\n\tspring-integration-mqtt/build.gradle", "tree": {"sha": "1518e20e6ccebf278e6a227e3c930eb8d405029b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1518e20e6ccebf278e6a227e3c930eb8d405029b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/46cf219b448c8c56ff4209d23f766664962a4a17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46cf219b448c8c56ff4209d23f766664962a4a17", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/46cf219b448c8c56ff4209d23f766664962a4a17", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/46cf219b448c8c56ff4209d23f766664962a4a17/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2dd27c5df9c70e95fda3420da9e197544242ec5e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2dd27c5df9c70e95fda3420da9e197544242ec5e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2dd27c5df9c70e95fda3420da9e197544242ec5e"}]}, {"sha": "2dd27c5df9c70e95fda3420da9e197544242ec5e", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T13:57:33Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-06-02T13:57:33Z"}, "message": "DSL: Clean up some `IntegrationFlowBuilder` API", "tree": {"sha": "1fb93feb297cfc4b86e53cacfbfe4ec354b80336", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1fb93feb297cfc4b86e53cacfbfe4ec354b80336"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2dd27c5df9c70e95fda3420da9e197544242ec5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2dd27c5df9c70e95fda3420da9e197544242ec5e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2dd27c5df9c70e95fda3420da9e197544242ec5e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2dd27c5df9c70e95fda3420da9e197544242ec5e/comments", "author": null, "committer": null, "parents": [{"sha": "f7529453b44ba9cb9054061a59b331d85c969e0f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f7529453b44ba9cb9054061a59b331d85c969e0f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f7529453b44ba9cb9054061a59b331d85c969e0f"}]}, {"sha": "f7529453b44ba9cb9054061a59b331d85c969e0f", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-29T13:01:28Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-29T13:04:51Z"}, "message": "DSL: Tests for `@Autowired` handlers", "tree": {"sha": "4f9f8fc7f347a8728a2b46da26cc0171e58df7f9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4f9f8fc7f347a8728a2b46da26cc0171e58df7f9"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f7529453b44ba9cb9054061a59b331d85c969e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f7529453b44ba9cb9054061a59b331d85c969e0f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f7529453b44ba9cb9054061a59b331d85c969e0f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f7529453b44ba9cb9054061a59b331d85c969e0f/comments", "author": null, "committer": null, "parents": [{"sha": "71dd35c0e71c8a00aa80a1efd97d4d9142efa721", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/71dd35c0e71c8a00aa80a1efd97d4d9142efa721", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/71dd35c0e71c8a00aa80a1efd97d4d9142efa721"}]}, {"sha": "71dd35c0e71c8a00aa80a1efd97d4d9142efa721", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-29T04:57:08Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-29T04:57:08Z"}, "message": "SMPP: Fix typo in README\n\nPR: https://github.com/spring-projects/spring-integration-extensions/pull/71", "tree": {"sha": "64687bad6112d1a44fb3098f5b40b40e59d12491", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/64687bad6112d1a44fb3098f5b40b40e59d12491"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/71dd35c0e71c8a00aa80a1efd97d4d9142efa721", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/71dd35c0e71c8a00aa80a1efd97d4d9142efa721", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/71dd35c0e71c8a00aa80a1efd97d4d9142efa721", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/71dd35c0e71c8a00aa80a1efd97d4d9142efa721/comments", "author": null, "committer": null, "parents": [{"sha": "7fe2845cd03bd58a06a9aca20475004ed747d6a4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7fe2845cd03bd58a06a9aca20475004ed747d6a4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7fe2845cd03bd58a06a9aca20475004ed747d6a4"}]}, {"sha": "7fe2845cd03bd58a06a9aca20475004ed747d6a4", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-28T05:46:55Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-28T05:46:55Z"}, "message": "DSL: Add `@Autowired @Lazy` test", "tree": {"sha": "193a6ad4f82269b9ba41c5d2fd3e242fb6d9873a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/193a6ad4f82269b9ba41c5d2fd3e242fb6d9873a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7fe2845cd03bd58a06a9aca20475004ed747d6a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7fe2845cd03bd58a06a9aca20475004ed747d6a4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7fe2845cd03bd58a06a9aca20475004ed747d6a4", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7fe2845cd03bd58a06a9aca20475004ed747d6a4/comments", "author": null, "committer": null, "parents": [{"sha": "3c5db06ed7265ae6095ca248409d4ce0d6f2328d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3c5db06ed7265ae6095ca248409d4ce0d6f2328d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3c5db06ed7265ae6095ca248409d4ce0d6f2328d"}]}, {"sha": "3c5db06ed7265ae6095ca248409d4ce0d6f2328d", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-26T15:33:12Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-26T15:33:12Z"}, "message": "DSL: Add `LambdaMessageProcessor`", "tree": {"sha": "06179f35fc5e6071bc5e09a0c1f6f9511fc1c178", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/06179f35fc5e6071bc5e09a0c1f6f9511fc1c178"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3c5db06ed7265ae6095ca248409d4ce0d6f2328d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3c5db06ed7265ae6095ca248409d4ce0d6f2328d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3c5db06ed7265ae6095ca248409d4ce0d6f2328d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3c5db06ed7265ae6095ca248409d4ce0d6f2328d/comments", "author": null, "committer": null, "parents": [{"sha": "2a25a1960f405503fcff93f941337dd13eedf417", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2a25a1960f405503fcff93f941337dd13eedf417", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2a25a1960f405503fcff93f941337dd13eedf417"}]}, {"sha": "2a25a1960f405503fcff93f941337dd13eedf417", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-22T17:43:38Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-22T17:43:38Z"}, "message": "DSL: add `gateway()` EIP-method\n\n* Upgrade dependencies\n* Polishing `Transformers`", "tree": {"sha": "7a8ae867c38b2daa3b9d104880ebeec8304fb8b6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/7a8ae867c38b2daa3b9d104880ebeec8304fb8b6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2a25a1960f405503fcff93f941337dd13eedf417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2a25a1960f405503fcff93f941337dd13eedf417", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2a25a1960f405503fcff93f941337dd13eedf417", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2a25a1960f405503fcff93f941337dd13eedf417/comments", "author": null, "committer": null, "parents": [{"sha": "77026e8261e9d7e756ec86cbfe54ecac96a64695", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/77026e8261e9d7e756ec86cbfe54ecac96a64695", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/77026e8261e9d7e756ec86cbfe54ecac96a64695"}]}, {"sha": "77026e8261e9d7e756ec86cbfe54ecac96a64695", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-19T17:52:51Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-19T17:52:51Z"}, "message": "DSL: Add `IntegrationFlows.from(MGSupport)`\n\n* Introduce `Amqp` components factory\n* Add `AmqpInboundGatewaySpec` builder", "tree": {"sha": "cab1fd3ffc72675173110756208d659e6a2b2b65", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/cab1fd3ffc72675173110756208d659e6a2b2b65"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/77026e8261e9d7e756ec86cbfe54ecac96a64695", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/77026e8261e9d7e756ec86cbfe54ecac96a64695", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/77026e8261e9d7e756ec86cbfe54ecac96a64695", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/77026e8261e9d7e756ec86cbfe54ecac96a64695/comments", "author": null, "committer": null, "parents": [{"sha": "38269df43765cdc7729c5c778e97ba855a09d247", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/38269df43765cdc7729c5c778e97ba855a09d247", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/38269df43765cdc7729c5c778e97ba855a09d247"}]}, {"sha": "38269df43765cdc7729c5c778e97ba855a09d247", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-15T20:06:56Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-15T20:06:56Z"}, "message": "DSL: Add fluent `Transformers` factory", "tree": {"sha": "7f45b5eff4e07c031910f772dfa17c9af7503b29", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/7f45b5eff4e07c031910f772dfa17c9af7503b29"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/38269df43765cdc7729c5c778e97ba855a09d247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/38269df43765cdc7729c5c778e97ba855a09d247", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/38269df43765cdc7729c5c778e97ba855a09d247", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/38269df43765cdc7729c5c778e97ba855a09d247/comments", "author": null, "committer": null, "parents": [{"sha": "61275dbc7e1438ebd2d9cf11c88124d902dde70d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/61275dbc7e1438ebd2d9cf11c88124d902dde70d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/61275dbc7e1438ebd2d9cf11c88124d902dde70d"}]}, {"sha": "61275dbc7e1438ebd2d9cf11c88124d902dde70d", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-11T19:57:38Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-11T19:57:38Z"}, "message": "DSL: Add `MessageProducer` support", "tree": {"sha": "f6fa3a180a82ee216d8a862f9d4201499a44b7a4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f6fa3a180a82ee216d8a862f9d4201499a44b7a4"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/61275dbc7e1438ebd2d9cf11c88124d902dde70d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/61275dbc7e1438ebd2d9cf11c88124d902dde70d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/61275dbc7e1438ebd2d9cf11c88124d902dde70d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/61275dbc7e1438ebd2d9cf11c88124d902dde70d/comments", "author": null, "committer": null, "parents": [{"sha": "54f8cd306d5b7de47ec14281dc5a336d103253eb", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/54f8cd306d5b7de47ec14281dc5a336d103253eb", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/54f8cd306d5b7de47ec14281dc5a336d103253eb"}]}, {"sha": "54f8cd306d5b7de47ec14281dc5a336d103253eb", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-05-08T18:07:21Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-05-08T18:07:21Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "0c44b9ffd3291f408007f8cd6c27279cec0ced41", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/0c44b9ffd3291f408007f8cd6c27279cec0ced41"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/54f8cd306d5b7de47ec14281dc5a336d103253eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/54f8cd306d5b7de47ec14281dc5a336d103253eb", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/54f8cd306d5b7de47ec14281dc5a336d103253eb", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/54f8cd306d5b7de47ec14281dc5a336d103253eb/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a779d7f8ffc766ea1ef35b89ca5ec92bb2af2050", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a779d7f8ffc766ea1ef35b89ca5ec92bb2af2050", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a779d7f8ffc766ea1ef35b89ca5ec92bb2af2050"}]}, {"sha": "a779d7f8ffc766ea1ef35b89ca5ec92bb2af2050", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-05-08T18:07:12Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-05-08T18:07:12Z"}, "message": "[artifactory-release] Release version 1.0.0.M1", "tree": {"sha": "007b72834f47a9ffa0daf9dde4dd7d55f75addf9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/007b72834f47a9ffa0daf9dde4dd7d55f75addf9"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a779d7f8ffc766ea1ef35b89ca5ec92bb2af2050", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a779d7f8ffc766ea1ef35b89ca5ec92bb2af2050", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a779d7f8ffc766ea1ef35b89ca5ec92bb2af2050", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a779d7f8ffc766ea1ef35b89ca5ec92bb2af2050/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aefd9129f45f47e6195986b50b59746a171b626", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4aefd9129f45f47e6195986b50b59746a171b626", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4aefd9129f45f47e6195986b50b59746a171b626"}]}, {"sha": "4aefd9129f45f47e6195986b50b59746a171b626", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-08T11:15:15Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-05-08T11:15:15Z"}, "message": "DSL: Clean up `README.md`", "tree": {"sha": "0c44b9ffd3291f408007f8cd6c27279cec0ced41", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/0c44b9ffd3291f408007f8cd6c27279cec0ced41"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4aefd9129f45f47e6195986b50b59746a171b626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4aefd9129f45f47e6195986b50b59746a171b626", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4aefd9129f45f47e6195986b50b59746a171b626", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4aefd9129f45f47e6195986b50b59746a171b626/comments", "author": null, "committer": null, "parents": [{"sha": "6664d413d4d3984fbf8561e4cc537e4d811ae671", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6664d413d4d3984fbf8561e4cc537e4d811ae671", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6664d413d4d3984fbf8561e4cc537e4d811ae671"}]}, {"sha": "6664d413d4d3984fbf8561e4cc537e4d811ae671", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-04-30T14:32:21Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-04-30T14:32:21Z"}, "message": "DSL: Upgrade to SI 4.0. RELEASE", "tree": {"sha": "01c5c73bc8d82c45877316f553c0c8171ff0d904", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/01c5c73bc8d82c45877316f553c0c8171ff0d904"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/6664d413d4d3984fbf8561e4cc537e4d811ae671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6664d413d4d3984fbf8561e4cc537e4d811ae671", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6664d413d4d3984fbf8561e4cc537e4d811ae671", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6664d413d4d3984fbf8561e4cc537e4d811ae671/comments", "author": null, "committer": null, "parents": [{"sha": "34efe4b2621a11c9fe122e53ac7d161f1bcafedf", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/34efe4b2621a11c9fe122e53ac7d161f1bcafedf", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/34efe4b2621a11c9fe122e53ac7d161f1bcafedf"}]}, {"sha": "34efe4b2621a11c9fe122e53ac7d161f1bcafedf", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-04-25T13:16:57Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-04-25T13:25:58Z"}, "message": "MQTT: Add README note: Moved to Spring Integration", "tree": {"sha": "e243d6c181668a59eb0f9832ffff9f7220535393", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e243d6c181668a59eb0f9832ffff9f7220535393"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/34efe4b2621a11c9fe122e53ac7d161f1bcafedf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/34efe4b2621a11c9fe122e53ac7d161f1bcafedf", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/34efe4b2621a11c9fe122e53ac7d161f1bcafedf", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/34efe4b2621a11c9fe122e53ac7d161f1bcafedf/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d9f01464bba95699207ece3700e3620527cb02c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2d9f01464bba95699207ece3700e3620527cb02c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2d9f01464bba95699207ece3700e3620527cb02c"}]}, {"sha": "2d9f01464bba95699207ece3700e3620527cb02c", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-04-17T11:22:07Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-04-17T11:22:07Z"}, "message": "Replace `LiteralExpression` to `ValueExpression`", "tree": {"sha": "b48d04dc99a425c6b69316fad1cad87c929ff778", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b48d04dc99a425c6b69316fad1cad87c929ff778"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2d9f01464bba95699207ece3700e3620527cb02c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2d9f01464bba95699207ece3700e3620527cb02c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2d9f01464bba95699207ece3700e3620527cb02c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2d9f01464bba95699207ece3700e3620527cb02c/comments", "author": null, "committer": null, "parents": [{"sha": "305504196b2a1fec64ed6b48843c7b1da1a09a7d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/305504196b2a1fec64ed6b48843c7b1da1a09a7d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/305504196b2a1fec64ed6b48843c7b1da1a09a7d"}]}, {"sha": "305504196b2a1fec64ed6b48843c7b1da1a09a7d", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-04-16T12:12:43Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-04-16T12:22:55Z"}, "message": "Upgrade to SI 4.0\n\n* Add new correlation endpoint options\n* Add `messageStore` to the `PriorityChannelSpec`\n* Add generic to `EnricherSpec#property`\n* Remove `type` from `EnricherSpec.headerExpression`\n* Add `initialDelay` for `PeriodicTriggerSpec`\n* Fix `IntegrationFlowBuilder` bugs, when there is no relevant the end of the flow\n* Add embedded MongoDb support for tests\n* Add `priority` test with `MongoDbChannelMessageStore`", "tree": {"sha": "9be75eb7303374ad9d82ea3514eeb1779cbe16a6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/9be75eb7303374ad9d82ea3514eeb1779cbe16a6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/305504196b2a1fec64ed6b48843c7b1da1a09a7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/305504196b2a1fec64ed6b48843c7b1da1a09a7d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/305504196b2a1fec64ed6b48843c7b1da1a09a7d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/305504196b2a1fec64ed6b48843c7b1da1a09a7d/comments", "author": null, "committer": null, "parents": [{"sha": "69bc8d602a1053ee4a56affea57ae0d9aed4569f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/69bc8d602a1053ee4a56affea57ae0d9aed4569f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/69bc8d602a1053ee4a56affea57ae0d9aed4569f"}]}, {"sha": "69bc8d602a1053ee4a56affea57ae0d9aed4569f", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-30T13:31:34Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-30T13:31:34Z"}, "message": "Add `@GlobalChannelInterceptor` test", "tree": {"sha": "97d6929647c0d19ce4b454add9e51763b3726ec5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/97d6929647c0d19ce4b454add9e51763b3726ec5"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/69bc8d602a1053ee4a56affea57ae0d9aed4569f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/69bc8d602a1053ee4a56affea57ae0d9aed4569f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/69bc8d602a1053ee4a56affea57ae0d9aed4569f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/69bc8d602a1053ee4a56affea57ae0d9aed4569f/comments", "author": null, "committer": null, "parents": [{"sha": "ec27ef2344f2c5c02ebc159b06dac8a4cd767919", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ec27ef2344f2c5c02ebc159b06dac8a4cd767919", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ec27ef2344f2c5c02ebc159b06dac8a4cd767919"}]}, {"sha": "ec27ef2344f2c5c02ebc159b06dac8a4cd767919", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-03-24T16:17:35Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-03-24T16:17:35Z"}, "message": "MQTT Reset Barrier At Start of Tests\n\n- Also remove ...java~ file.", "tree": {"sha": "41d0ba702b0f3ee7e3f56e676928cf10ce6e4079", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/41d0ba702b0f3ee7e3f56e676928cf10ce6e4079"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ec27ef2344f2c5c02ebc159b06dac8a4cd767919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ec27ef2344f2c5c02ebc159b06dac8a4cd767919", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ec27ef2344f2c5c02ebc159b06dac8a4cd767919", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ec27ef2344f2c5c02ebc159b06dac8a4cd767919/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7fd45c7ebbeb08f5c99129f515a75ce6306944a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a7fd45c7ebbeb08f5c99129f515a75ce6306944a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a7fd45c7ebbeb08f5c99129f515a75ce6306944a"}]}, {"sha": "a7fd45c7ebbeb08f5c99129f515a75ce6306944a", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-24T12:57:22Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-24T12:57:22Z"}, "message": "Add `claimCheckIn()`, `claimCheckOut` EIP-methods", "tree": {"sha": "bdd967f572fe9cdee9a303d335f0a5fafa33a229", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/bdd967f572fe9cdee9a303d335f0a5fafa33a229"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a7fd45c7ebbeb08f5c99129f515a75ce6306944a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a7fd45c7ebbeb08f5c99129f515a75ce6306944a", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a7fd45c7ebbeb08f5c99129f515a75ce6306944a", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a7fd45c7ebbeb08f5c99129f515a75ce6306944a/comments", "author": null, "committer": null, "parents": [{"sha": "59a2a378136b68075065f83d4308c1487a99c15e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/59a2a378136b68075065f83d4308c1487a99c15e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/59a2a378136b68075065f83d4308c1487a99c15e"}]}, {"sha": "59a2a378136b68075065f83d4308c1487a99c15e", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-03-21T20:54:20Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-24T12:55:00Z"}, "message": "Update README.md\n\nAdd a note about the move to the main Spring Integration project.", "tree": {"sha": "8aa7c30a7416ddb550858d2cc71d1cee67860403", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8aa7c30a7416ddb550858d2cc71d1cee67860403"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/59a2a378136b68075065f83d4308c1487a99c15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/59a2a378136b68075065f83d4308c1487a99c15e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/59a2a378136b68075065f83d4308c1487a99c15e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/59a2a378136b68075065f83d4308c1487a99c15e/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "369dca42f3a5ff39354018ed9c06e419e89ec3b7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/369dca42f3a5ff39354018ed9c06e419e89ec3b7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/369dca42f3a5ff39354018ed9c06e419e89ec3b7"}]}, {"sha": "369dca42f3a5ff39354018ed9c06e419e89ec3b7", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-03-21T20:43:07Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-24T12:55:00Z"}, "message": "MQTT Update Spring, SI Versions", "tree": {"sha": "b0b839636e0dd392b86663029b30628d45d380c6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b0b839636e0dd392b86663029b30628d45d380c6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/369dca42f3a5ff39354018ed9c06e419e89ec3b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/369dca42f3a5ff39354018ed9c06e419e89ec3b7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/369dca42f3a5ff39354018ed9c06e419e89ec3b7", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/369dca42f3a5ff39354018ed9c06e419e89ec3b7/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f322f0a579aa5d83b030cbb69a862cdb4a60328", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6f322f0a579aa5d83b030cbb69a862cdb4a60328", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6f322f0a579aa5d83b030cbb69a862cdb4a60328"}]}, {"sha": "6f322f0a579aa5d83b030cbb69a862cdb4a60328", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-03-21T19:58:15Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-24T12:55:00Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "6aa73e66105a2a4b419b33a05ea94f27cba9922a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/6aa73e66105a2a4b419b33a05ea94f27cba9922a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/6f322f0a579aa5d83b030cbb69a862cdb4a60328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6f322f0a579aa5d83b030cbb69a862cdb4a60328", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6f322f0a579aa5d83b030cbb69a862cdb4a60328", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6f322f0a579aa5d83b030cbb69a862cdb4a60328/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "012ad70fc5de62ebdb80f6eedbb5f1ec0c7a44fe", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/012ad70fc5de62ebdb80f6eedbb5f1ec0c7a44fe", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/012ad70fc5de62ebdb80f6eedbb5f1ec0c7a44fe"}]}, {"sha": "012ad70fc5de62ebdb80f6eedbb5f1ec0c7a44fe", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2014-03-21T19:58:11Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-24T12:55:00Z"}, "message": "[artifactory-release] MQTT Release 1.0.0.RC1", "tree": {"sha": "5fca18e5426d7ba656ef97e950a89a3c7979a8c0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/5fca18e5426d7ba656ef97e950a89a3c7979a8c0"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/012ad70fc5de62ebdb80f6eedbb5f1ec0c7a44fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/012ad70fc5de62ebdb80f6eedbb5f1ec0c7a44fe", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/012ad70fc5de62ebdb80f6eedbb5f1ec0c7a44fe", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/012ad70fc5de62ebdb80f6eedbb5f1ec0c7a44fe/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "592bf6808626b9cc6d80c4cfd4710df4f5609b99", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/592bf6808626b9cc6d80c4cfd4710df4f5609b99", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/592bf6808626b9cc6d80c4cfd4710df4f5609b99"}]}, {"sha": "592bf6808626b9cc6d80c4cfd4710df4f5609b99", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-03-21T19:43:59Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-24T12:55:00Z"}, "message": "INT-3336 Add error-channel to MQTT m-d-c-a\n\nJIRA: https://jira.spring.io/browse/INT-3336\n\nPreviously exceptions thrown in a flow downstream of a\nmessage-driven-channel-adapter were not logged and thrown\nback to the client, causing the connection to drop and\nreconnect.\n\nAdd `error-channel` to the adapter to allow normal\nerror handling. If no error channel, catch and log\nthe unhandled exception.\n\nAdd `adapter.stop();` in the end of 'real' tests to close the mqtt-connection.\n\nDisconnect the client after verifying the broker is available.\nChange the rule to a class level rule in DownstreamExceptionTests.", "tree": {"sha": "6aa73e66105a2a4b419b33a05ea94f27cba9922a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/6aa73e66105a2a4b419b33a05ea94f27cba9922a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/592bf6808626b9cc6d80c4cfd4710df4f5609b99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/592bf6808626b9cc6d80c4cfd4710df4f5609b99", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/592bf6808626b9cc6d80c4cfd4710df4f5609b99", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/592bf6808626b9cc6d80c4cfd4710df4f5609b99/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c583351bff5f6ea8783542031d6315c40d396474", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c583351bff5f6ea8783542031d6315c40d396474", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c583351bff5f6ea8783542031d6315c40d396474"}]}, {"sha": "c583351bff5f6ea8783542031d6315c40d396474", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-14T20:56:33Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-14T20:56:33Z"}, "message": "Add some JavaDocs", "tree": {"sha": "2705e3bcec17748ab5273d5a5bf55fcfbeb779ff", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2705e3bcec17748ab5273d5a5bf55fcfbeb779ff"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c583351bff5f6ea8783542031d6315c40d396474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c583351bff5f6ea8783542031d6315c40d396474", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c583351bff5f6ea8783542031d6315c40d396474", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c583351bff5f6ea8783542031d6315c40d396474/comments", "author": null, "committer": null, "parents": [{"sha": "1b9076ca26518469da9022a334705fae6d5e2e8b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b9076ca26518469da9022a334705fae6d5e2e8b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1b9076ca26518469da9022a334705fae6d5e2e8b"}]}, {"sha": "1b9076ca26518469da9022a334705fae6d5e2e8b", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-14T19:50:04Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-14T19:50:04Z"}, "message": "Polishing to `MessageChannelSpec`", "tree": {"sha": "fd220157b1acfb4fbfa92744b268ccf86c15c468", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/fd220157b1acfb4fbfa92744b268ccf86c15c468"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1b9076ca26518469da9022a334705fae6d5e2e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b9076ca26518469da9022a334705fae6d5e2e8b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1b9076ca26518469da9022a334705fae6d5e2e8b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b9076ca26518469da9022a334705fae6d5e2e8b/comments", "author": null, "committer": null, "parents": [{"sha": "4cf18e71c89543edfe74f42fe7dfce31c3b238e2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4cf18e71c89543edfe74f42fe7dfce31c3b238e2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4cf18e71c89543edfe74f42fe7dfce31c3b238e2"}]}, {"sha": "4cf18e71c89543edfe74f42fe7dfce31c3b238e2", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-14T11:37:31Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-14T11:39:38Z"}, "message": "Add `route()`, `recipientListRoute()` EIP-methods", "tree": {"sha": "33956b93750c5bd6743d425d14c2b9536d841233", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/33956b93750c5bd6743d425d14c2b9536d841233"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4cf18e71c89543edfe74f42fe7dfce31c3b238e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4cf18e71c89543edfe74f42fe7dfce31c3b238e2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4cf18e71c89543edfe74f42fe7dfce31c3b238e2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4cf18e71c89543edfe74f42fe7dfce31c3b238e2/comments", "author": null, "committer": null, "parents": [{"sha": "53b25dbdcfc7656db5706a62e17347ae79ce836d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/53b25dbdcfc7656db5706a62e17347ae79ce836d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/53b25dbdcfc7656db5706a62e17347ae79ce836d"}]}, {"sha": "53b25dbdcfc7656db5706a62e17347ae79ce836d", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-12T20:32:42Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-12T20:32:42Z"}, "message": "Add `controlBus()` EIP-method", "tree": {"sha": "3220a54174292707867f45e444244dae5823fd9a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3220a54174292707867f45e444244dae5823fd9a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/53b25dbdcfc7656db5706a62e17347ae79ce836d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/53b25dbdcfc7656db5706a62e17347ae79ce836d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/53b25dbdcfc7656db5706a62e17347ae79ce836d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/53b25dbdcfc7656db5706a62e17347ae79ce836d/comments", "author": null, "committer": null, "parents": [{"sha": "e7388641250c62e7ffa1bac8368e2f52c34acc08", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e7388641250c62e7ffa1bac8368e2f52c34acc08", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e7388641250c62e7ffa1bac8368e2f52c34acc08"}]}, {"sha": "e7388641250c62e7ffa1bac8368e2f52c34acc08", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-12T15:57:03Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-12T15:57:03Z"}, "message": "Add `resequence()`,`aggregate()`,`headerFilter()`\n\nPolishing for `@Copyright`", "tree": {"sha": "dec22c7fe05c89397549fae379b793af1bc732ce", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/dec22c7fe05c89397549fae379b793af1bc732ce"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e7388641250c62e7ffa1bac8368e2f52c34acc08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e7388641250c62e7ffa1bac8368e2f52c34acc08", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e7388641250c62e7ffa1bac8368e2f52c34acc08", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e7388641250c62e7ffa1bac8368e2f52c34acc08/comments", "author": null, "committer": null, "parents": [{"sha": "eee9dc41637abbdbbdbdc71ed545307318a72350", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eee9dc41637abbdbbdbdc71ed545307318a72350", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eee9dc41637abbdbbdbdc71ed545307318a72350"}]}, {"sha": "eee9dc41637abbdbbdbdc71ed545307318a72350", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-10T18:54:26Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-10T18:54:26Z"}, "message": "Add `split()` and `enrichHeaders()` EIP-methods", "tree": {"sha": "b54f978ddb5e0c7629c0a974cea97a3aed9d5f78", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b54f978ddb5e0c7629c0a974cea97a3aed9d5f78"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/eee9dc41637abbdbbdbdc71ed545307318a72350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eee9dc41637abbdbbdbdc71ed545307318a72350", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eee9dc41637abbdbbdbdc71ed545307318a72350", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eee9dc41637abbdbbdbdc71ed545307318a72350/comments", "author": null, "committer": null, "parents": [{"sha": "3d0cec9544dd95e0d84ae907daefc32974d61823", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3d0cec9544dd95e0d84ae907daefc32974d61823", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3d0cec9544dd95e0d84ae907daefc32974d61823"}]}, {"sha": "3d0cec9544dd95e0d84ae907daefc32974d61823", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-06T14:32:58Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-06T14:47:47Z"}, "message": "Add support for `FixedSubscriberChannel`", "tree": {"sha": "e14b9884d3ed62518358ebb51fcef3ae5e0776d1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e14b9884d3ed62518358ebb51fcef3ae5e0776d1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3d0cec9544dd95e0d84ae907daefc32974d61823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3d0cec9544dd95e0d84ae907daefc32974d61823", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3d0cec9544dd95e0d84ae907daefc32974d61823", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3d0cec9544dd95e0d84ae907daefc32974d61823/comments", "author": null, "committer": null, "parents": [{"sha": "feb610d92bc4d444fd36546c1b759f52a73a291f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/feb610d92bc4d444fd36546c1b759f52a73a291f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/feb610d92bc4d444fd36546c1b759f52a73a291f"}]}, {"sha": "feb610d92bc4d444fd36546c1b759f52a73a291f", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-05T18:36:51Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-03-05T18:36:51Z"}, "message": "Add `enrich()` and channel names option", "tree": {"sha": "1fd5b72e1d5c8df33ae4d5bdbef56648f6ad7d79", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1fd5b72e1d5c8df33ae4d5bdbef56648f6ad7d79"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/feb610d92bc4d444fd36546c1b759f52a73a291f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/feb610d92bc4d444fd36546c1b759f52a73a291f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/feb610d92bc4d444fd36546c1b759f52a73a291f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/feb610d92bc4d444fd36546c1b759f52a73a291f/comments", "author": null, "committer": null, "parents": [{"sha": "83fb344bd3d47adda9d05e8b974918e38403add9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/83fb344bd3d47adda9d05e8b974918e38403add9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/83fb344bd3d47adda9d05e8b974918e38403add9"}]}, {"sha": "83fb344bd3d47adda9d05e8b974918e38403add9", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-22T14:49:50Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-22T14:49:50Z"}, "message": "Add `delay()` EIP-method", "tree": {"sha": "efa1f4563fd7e294dcc56dcaf2900a5923a5805a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/efa1f4563fd7e294dcc56dcaf2900a5923a5805a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/83fb344bd3d47adda9d05e8b974918e38403add9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/83fb344bd3d47adda9d05e8b974918e38403add9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/83fb344bd3d47adda9d05e8b974918e38403add9", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/83fb344bd3d47adda9d05e8b974918e38403add9/comments", "author": null, "committer": null, "parents": [{"sha": "abab1af3d5ada37fac46eca8ade8267bb9172c1d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/abab1af3d5ada37fac46eca8ade8267bb9172c1d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/abab1af3d5ada37fac46eca8ade8267bb9172c1d"}]}, {"sha": "abab1af3d5ada37fac46eca8ade8267bb9172c1d", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-19T09:24:51Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-19T09:26:52Z"}, "message": "Support @Autowired for Configurations with DSL", "tree": {"sha": "3a84428322cec7827a9c65ba6443bb5edbe8949b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3a84428322cec7827a9c65ba6443bb5edbe8949b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/abab1af3d5ada37fac46eca8ade8267bb9172c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/abab1af3d5ada37fac46eca8ade8267bb9172c1d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/abab1af3d5ada37fac46eca8ade8267bb9172c1d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/abab1af3d5ada37fac46eca8ade8267bb9172c1d/comments", "author": null, "committer": null, "parents": [{"sha": "c161210c3ec6f070b68e55f3aba42cee0e664564", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c161210c3ec6f070b68e55f3aba42cee0e664564", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c161210c3ec6f070b68e55f3aba42cee0e664564"}]}, {"sha": "c161210c3ec6f070b68e55f3aba42cee0e664564", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-17T15:11:41Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-17T15:11:41Z"}, "message": "Introduce method-invoking `handle`\n\n* Add generic argument to `GenericEndpointSpec`.\nSince `EndpointSpec#get()` returns `Tuple` with `EndpointFactoryBean` and `MessageHandler` objects\nit is useful to get deal with specific generic for further `MessageHandler` configuration within `EndpointConfigurer` lambda\n* Change DSL-methods to get deal deal with those generics.\n* Add `FileWritingMessageHandler` test to demonstrate it.\n* Fix bug around double `MessageHandler` bean registration from `DslIntegrationConfigurationInitializer`, when handler is a reference\nto existing bean.", "tree": {"sha": "eadc5496b2b1b32d9e75b963811f3b6300694498", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/eadc5496b2b1b32d9e75b963811f3b6300694498"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c161210c3ec6f070b68e55f3aba42cee0e664564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c161210c3ec6f070b68e55f3aba42cee0e664564", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c161210c3ec6f070b68e55f3aba42cee0e664564", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c161210c3ec6f070b68e55f3aba42cee0e664564/comments", "author": null, "committer": null, "parents": [{"sha": "ac46625a8390fb9aa73ff0afe0a8e2db3bc7cfeb", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ac46625a8390fb9aa73ff0afe0a8e2db3bc7cfeb", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ac46625a8390fb9aa73ff0afe0a8e2db3bc7cfeb"}]}, {"sha": "ac46625a8390fb9aa73ff0afe0a8e2db3bc7cfeb", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-14T17:33:38Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-14T17:41:39Z"}, "message": "Introduce EIP-methods `handle()` and `bridge()`\n\n* Remove generic argument from `GenericEndpointSpec`: it isn't necessary\n* Add check for `one-way` flow in case the last component isn't `MessageProducer`", "tree": {"sha": "73110e02e7acf2922fadb7348ccb018bd3a5e470", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/73110e02e7acf2922fadb7348ccb018bd3a5e470"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ac46625a8390fb9aa73ff0afe0a8e2db3bc7cfeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ac46625a8390fb9aa73ff0afe0a8e2db3bc7cfeb", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ac46625a8390fb9aa73ff0afe0a8e2db3bc7cfeb", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ac46625a8390fb9aa73ff0afe0a8e2db3bc7cfeb/comments", "author": null, "committer": null, "parents": [{"sha": "70d0e35806641b3f6be8a8333243d10153e278e6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/70d0e35806641b3f6be8a8333243d10153e278e6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/70d0e35806641b3f6be8a8333243d10153e278e6"}]}, {"sha": "70d0e35806641b3f6be8a8333243d10153e278e6", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-14T14:24:11Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-14T14:24:11Z"}, "message": "`IntegrationComponentSpec` refactoring\n\nIntroduce `Tuple`\nApply `EndpointConfigurer` for `MessageSource<>` DSL-method", "tree": {"sha": "253d99228323303d7efa36e7ca2d02b259b2cc45", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/253d99228323303d7efa36e7ca2d02b259b2cc45"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/70d0e35806641b3f6be8a8333243d10153e278e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/70d0e35806641b3f6be8a8333243d10153e278e6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/70d0e35806641b3f6be8a8333243d10153e278e6", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/70d0e35806641b3f6be8a8333243d10153e278e6/comments", "author": null, "committer": null, "parents": [{"sha": "0baeb52b3fe98711bdd628315cde9c58f2136e80", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0baeb52b3fe98711bdd628315cde9c58f2136e80", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0baeb52b3fe98711bdd628315cde9c58f2136e80"}]}, {"sha": "0baeb52b3fe98711bdd628315cde9c58f2136e80", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-14T10:08:28Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-14T10:08:28Z"}, "message": "Revert `IntegrationFlow` processing to `BFPP`\n\nAdd test case for `@MessageEndpoint` to et deal with channel from `IntegrationFlow`\nAs far as `AbstractMethodAnnotationPostProcessor` tries to resolve `channel` on endpoint creation,\nthe `IntegrationFlow` processing can't be done in the `BPP`, because `MessagingAnnotationPostProcessor` may parse\nannotations for bean before `IntegrationFlowBeanPostProcessor` will do its stuff.", "tree": {"sha": "29192a19d89d00e07bdfc0c9b1bb75fd9e19b5bd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/29192a19d89d00e07bdfc0c9b1bb75fd9e19b5bd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0baeb52b3fe98711bdd628315cde9c58f2136e80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0baeb52b3fe98711bdd628315cde9c58f2136e80", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0baeb52b3fe98711bdd628315cde9c58f2136e80", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0baeb52b3fe98711bdd628315cde9c58f2136e80/comments", "author": null, "committer": null, "parents": [{"sha": "1e6d50d33c6c38ce55ec89dda32f6b595320a029", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1e6d50d33c6c38ce55ec89dda32f6b595320a029", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1e6d50d33c6c38ce55ec89dda32f6b595320a029"}]}, {"sha": "1e6d50d33c6c38ce55ec89dda32f6b595320a029", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-13T19:44:48Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-13T19:44:48Z"}, "message": "`Spec<?, ?>` improvements\n\n* Provide `id`-aware DSL methods for `MessageChannelSpec`\n* Rework `DslIntegrationConfigurationInitializer` to delegate to `IntegrationFlowBeanPostProcessor`\nto allow to use components from `IntegrationFlowBuilder` via `@Autowired`", "tree": {"sha": "c759ac3010db27660cbe28938c70a85ee0376665", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c759ac3010db27660cbe28938c70a85ee0376665"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1e6d50d33c6c38ce55ec89dda32f6b595320a029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1e6d50d33c6c38ce55ec89dda32f6b595320a029", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1e6d50d33c6c38ce55ec89dda32f6b595320a029", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1e6d50d33c6c38ce55ec89dda32f6b595320a029/comments", "author": null, "committer": null, "parents": [{"sha": "ae349bd5d8bec25701157fbad7b06e1b19844e3c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ae349bd5d8bec25701157fbad7b06e1b19844e3c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ae349bd5d8bec25701157fbad7b06e1b19844e3c"}]}, {"sha": "ae349bd5d8bec25701157fbad7b06e1b19844e3c", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-12T10:35:18Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-12T10:35:18Z"}, "message": "Provide `Copyright` for classes", "tree": {"sha": "911effc41d4e41602aa16f4e7625c04c5f8dabc7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/911effc41d4e41602aa16f4e7625c04c5f8dabc7"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ae349bd5d8bec25701157fbad7b06e1b19844e3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ae349bd5d8bec25701157fbad7b06e1b19844e3c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ae349bd5d8bec25701157fbad7b06e1b19844e3c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ae349bd5d8bec25701157fbad7b06e1b19844e3c/comments", "author": null, "committer": null, "parents": [{"sha": "e91b6de83c16b86d166e638c15425c10b255b663", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e91b6de83c16b86d166e638c15425c10b255b663", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e91b6de83c16b86d166e638c15425c10b255b663"}]}, {"sha": "e91b6de83c16b86d166e638c15425c10b255b663", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-02-11T23:12:55Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2014-02-11T23:12:55Z"}, "message": "Make gradlew Executable", "tree": {"sha": "b540fd22a12f7b0baaa55308cc67424a38d48a1d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b540fd22a12f7b0baaa55308cc67424a38d48a1d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e91b6de83c16b86d166e638c15425c10b255b663", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e91b6de83c16b86d166e638c15425c10b255b663", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e91b6de83c16b86d166e638c15425c10b255b663", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e91b6de83c16b86d166e638c15425c10b255b663/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d"}]}, {"sha": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-11T22:40:58Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-11T22:40:58Z"}, "message": "INTEXT-96: The Java DSL initial implementation\n\nJIRA: https://jira.springsource.org/browse/INTEXT-96\n\n* `MessageChannels` Builder\n* Configuration infrastructure\n* `Pollers` Builder\n* Initial `IntegrationFlows` Builder\n* `EndpointConfigurer` Specs\n* EIP-methods `from(MessageSource)`, `from(MessageChannel)`, `transform`, `filter`", "tree": {"sha": "b26fc41264c6b58190f785a3d14403652da55b41", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b26fc41264c6b58190f785a3d14403652da55b41"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "comment_count": 12, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d/comments", "author": null, "committer": null, "parents": [{"sha": "b0cc426d9864eb86b5f2be216146cf060e4bdbe7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b0cc426d9864eb86b5f2be216146cf060e4bdbe7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b0cc426d9864eb86b5f2be216146cf060e4bdbe7"}]}, {"sha": "b0cc426d9864eb86b5f2be216146cf060e4bdbe7", "commit": {"author": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-04T17:14:22Z"}, "committer": {"name": "Artem Bilan", "email": "abilan@gopivotal.com", "date": "2014-02-04T19:34:29Z"}, "message": "INTEXT-95: Create SI Java DSL Project\n\nJIRA: https://jira.springsource.org/browse/INTEXT-95", "tree": {"sha": "3b250554ff4de7e417f91db649b42e4c347ee445", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3b250554ff4de7e417f91db649b42e4c347ee445"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b0cc426d9864eb86b5f2be216146cf060e4bdbe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b0cc426d9864eb86b5f2be216146cf060e4bdbe7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b0cc426d9864eb86b5f2be216146cf060e4bdbe7", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b0cc426d9864eb86b5f2be216146cf060e4bdbe7/comments", "author": null, "committer": null, "parents": [{"sha": "b4a51d4cf53134bde8e859330ba2b0d777d81b39", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b4a51d4cf53134bde8e859330ba2b0d777d81b39", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b4a51d4cf53134bde8e859330ba2b0d777d81b39"}]}, {"sha": "b4a51d4cf53134bde8e859330ba2b0d777d81b39", "commit": {"author": {"name": "Rajasekar Elango", "email": "relango@saleforce.com", "date": "2013-10-29T18:41:24Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-11-19T22:12:13Z"}, "message": "INTEXT-92 Kafka: Add support for specifying any producer/consumer property\n\n* Update README.md for producer and consumer properties usage", "tree": {"sha": "ce4982d3de97648c2f62963f412c23f9b2f5212b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ce4982d3de97648c2f62963f412c23f9b2f5212b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b4a51d4cf53134bde8e859330ba2b0d777d81b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b4a51d4cf53134bde8e859330ba2b0d777d81b39", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b4a51d4cf53134bde8e859330ba2b0d777d81b39", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b4a51d4cf53134bde8e859330ba2b0d777d81b39/comments", "author": null, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab3b62e0aaec086629a6fa4d65868a1d28fbb95c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab3b62e0aaec086629a6fa4d65868a1d28fbb95c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ab3b62e0aaec086629a6fa4d65868a1d28fbb95c"}]}, {"sha": "ab3b62e0aaec086629a6fa4d65868a1d28fbb95c", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-10-28T21:08:47Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-10-28T21:08:47Z"}, "message": "Merge pull request #58 from relango/merge-master-kafka-topic-filter\n\n* relango-merge-master-kafka-topic-filter:\n  INTEXT-77 Add Kafka topic filter support for producer + consumer", "tree": {"sha": "152b681b8e241ecd868707f2ae2bb67e02c36ae8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/152b681b8e241ecd868707f2ae2bb67e02c36ae8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ab3b62e0aaec086629a6fa4d65868a1d28fbb95c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab3b62e0aaec086629a6fa4d65868a1d28fbb95c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ab3b62e0aaec086629a6fa4d65868a1d28fbb95c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ab3b62e0aaec086629a6fa4d65868a1d28fbb95c/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b588aa466784ea0c9adcbc20179c424df3fc60f9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b588aa466784ea0c9adcbc20179c424df3fc60f9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b588aa466784ea0c9adcbc20179c424df3fc60f9"}, {"sha": "3e7b7d133187ad9877341568b624b72f8976f2e1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3e7b7d133187ad9877341568b624b72f8976f2e1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3e7b7d133187ad9877341568b624b72f8976f2e1"}]}, {"sha": "3e7b7d133187ad9877341568b624b72f8976f2e1", "commit": {"author": {"name": "Rajasekar Elango", "email": "relango@saleforce.com", "date": "2013-07-19T18:32:31Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-10-28T21:06:52Z"}, "message": "INTEXT-77 Add Kafka topic filter support for producer + consumer\n\n* Add tests\n* Add samples\n* Update readme\n\nJira: https://jira.springsource.org/browse/INTEXT-77", "tree": {"sha": "152b681b8e241ecd868707f2ae2bb67e02c36ae8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/152b681b8e241ecd868707f2ae2bb67e02c36ae8"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3e7b7d133187ad9877341568b624b72f8976f2e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3e7b7d133187ad9877341568b624b72f8976f2e1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3e7b7d133187ad9877341568b624b72f8976f2e1", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3e7b7d133187ad9877341568b624b72f8976f2e1/comments", "author": null, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b588aa466784ea0c9adcbc20179c424df3fc60f9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b588aa466784ea0c9adcbc20179c424df3fc60f9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b588aa466784ea0c9adcbc20179c424df3fc60f9"}]}, {"sha": "b588aa466784ea0c9adcbc20179c424df3fc60f9", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-10-02T18:15:00Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-10-02T18:15:00Z"}, "message": "INTEXT-90 Update Paho Client to 0.4.0\n\nAdd eclipse paho repo.", "tree": {"sha": "12c6514dde15075e90ec74843bc410d5ccb05a17", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/12c6514dde15075e90ec74843bc410d5ccb05a17"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b588aa466784ea0c9adcbc20179c424df3fc60f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b588aa466784ea0c9adcbc20179c424df3fc60f9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b588aa466784ea0c9adcbc20179c424df3fc60f9", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b588aa466784ea0c9adcbc20179c424df3fc60f9/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76c65ec6db96dedbf46268a513d5091e030efaeb", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/76c65ec6db96dedbf46268a513d5091e030efaeb", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/76c65ec6db96dedbf46268a513d5091e030efaeb"}]}, {"sha": "76c65ec6db96dedbf46268a513d5091e030efaeb", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-10-02T17:44:52Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-10-02T17:44:52Z"}, "message": "INTEXT-89 Fix Inbound Stop When No Server\n\nThe reconnection task was not canceled in doStop().", "tree": {"sha": "c420c818ebcf9f202e0e72e788c7d65ea3b81690", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c420c818ebcf9f202e0e72e788c7d65ea3b81690"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/76c65ec6db96dedbf46268a513d5091e030efaeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/76c65ec6db96dedbf46268a513d5091e030efaeb", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/76c65ec6db96dedbf46268a513d5091e030efaeb", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/76c65ec6db96dedbf46268a513d5091e030efaeb/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fe0d02ef8152f7254cb8e39df692e12a8b67285", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9fe0d02ef8152f7254cb8e39df692e12a8b67285", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9fe0d02ef8152f7254cb8e39df692e12a8b67285"}]}, {"sha": "9fe0d02ef8152f7254cb8e39df692e12a8b67285", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-08-01T20:23:26Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-08-01T20:23:26Z"}, "message": "Merge pull request #56 from sobychacko/INTEXT-84\n\n* sobychacko-INTEXT-84:\n  INTEXT-84 Kafka: Enhance Avro serialization support", "tree": {"sha": "f67a488926545175d7c8bdb981848352f8bf7b79", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f67a488926545175d7c8bdb981848352f8bf7b79"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/9fe0d02ef8152f7254cb8e39df692e12a8b67285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9fe0d02ef8152f7254cb8e39df692e12a8b67285", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9fe0d02ef8152f7254cb8e39df692e12a8b67285", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9fe0d02ef8152f7254cb8e39df692e12a8b67285/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d99de8c740911362e8f0966a7f0429bf67faef75", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d99de8c740911362e8f0966a7f0429bf67faef75", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d99de8c740911362e8f0966a7f0429bf67faef75"}, {"sha": "b28bf4b06c476e6fd14f8a98c87037aacebeb3cc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b28bf4b06c476e6fd14f8a98c87037aacebeb3cc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b28bf4b06c476e6fd14f8a98c87037aacebeb3cc"}]}, {"sha": "b28bf4b06c476e6fd14f8a98c87037aacebeb3cc", "commit": {"author": {"name": "Soby Chacko", "email": "sobychacko@gmail.com", "date": "2013-07-17T02:40:28Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-08-01T20:20:24Z"}, "message": "INTEXT-84 Kafka: Enhance Avro serialization support", "tree": {"sha": "f67a488926545175d7c8bdb981848352f8bf7b79", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f67a488926545175d7c8bdb981848352f8bf7b79"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b28bf4b06c476e6fd14f8a98c87037aacebeb3cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b28bf4b06c476e6fd14f8a98c87037aacebeb3cc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b28bf4b06c476e6fd14f8a98c87037aacebeb3cc", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b28bf4b06c476e6fd14f8a98c87037aacebeb3cc/comments", "author": {"login": "sobychacko", "id": 827682, "avatar_url": "https://avatars3.githubusercontent.com/u/827682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobychacko", "html_url": "https://github.com/sobychacko", "followers_url": "https://api.github.com/users/sobychacko/followers", "following_url": "https://api.github.com/users/sobychacko/following{/other_user}", "gists_url": "https://api.github.com/users/sobychacko/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobychacko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobychacko/subscriptions", "organizations_url": "https://api.github.com/users/sobychacko/orgs", "repos_url": "https://api.github.com/users/sobychacko/repos", "events_url": "https://api.github.com/users/sobychacko/events{/privacy}", "received_events_url": "https://api.github.com/users/sobychacko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d99de8c740911362e8f0966a7f0429bf67faef75", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d99de8c740911362e8f0966a7f0429bf67faef75", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d99de8c740911362e8f0966a7f0429bf67faef75"}]}, {"sha": "d99de8c740911362e8f0966a7f0429bf67faef75", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-07-16T21:06:12Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-07-16T21:06:12Z"}, "message": "Merge pull request #55 from ghillert/INTEXT-83\n\nINTEXT-83 Update to Kafka 0.8.0-beta1", "tree": {"sha": "caafd7589b39432f501c080d9c362a7f7bf2e3cf", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/caafd7589b39432f501c080d9c362a7f7bf2e3cf"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d99de8c740911362e8f0966a7f0429bf67faef75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d99de8c740911362e8f0966a7f0429bf67faef75", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d99de8c740911362e8f0966a7f0429bf67faef75", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d99de8c740911362e8f0966a7f0429bf67faef75/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bfee927430ab5b932f09c03c3f4e9aa83bf8929", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9bfee927430ab5b932f09c03c3f4e9aa83bf8929", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9bfee927430ab5b932f09c03c3f4e9aa83bf8929"}, {"sha": "bd173c8197fb85a9678271c52f7a7f838e491700", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bd173c8197fb85a9678271c52f7a7f838e491700", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bd173c8197fb85a9678271c52f7a7f838e491700"}]}, {"sha": "bd173c8197fb85a9678271c52f7a7f838e491700", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-16T04:48:06Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-16T20:58:04Z"}, "message": "INTEXT-83 Update to Kafka 0.8.0-beta1", "tree": {"sha": "caafd7589b39432f501c080d9c362a7f7bf2e3cf", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/caafd7589b39432f501c080d9c362a7f7bf2e3cf"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/bd173c8197fb85a9678271c52f7a7f838e491700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bd173c8197fb85a9678271c52f7a7f838e491700", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bd173c8197fb85a9678271c52f7a7f838e491700", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bd173c8197fb85a9678271c52f7a7f838e491700/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bfee927430ab5b932f09c03c3f4e9aa83bf8929", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9bfee927430ab5b932f09c03c3f4e9aa83bf8929", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9bfee927430ab5b932f09c03c3f4e9aa83bf8929"}]}, {"sha": "9bfee927430ab5b932f09c03c3f4e9aa83bf8929", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-15T21:41:10Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-15T21:41:10Z"}, "message": "Merge pull request #43 from kcrimson/master\n\n* kcrimson-master:\n  INTEXT-65 Add JGroups Extension", "tree": {"sha": "2233677c6385c49ad2079d25bcde3a77286bac10", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2233677c6385c49ad2079d25bcde3a77286bac10"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/9bfee927430ab5b932f09c03c3f4e9aa83bf8929", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9bfee927430ab5b932f09c03c3f4e9aa83bf8929", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9bfee927430ab5b932f09c03c3f4e9aa83bf8929", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9bfee927430ab5b932f09c03c3f4e9aa83bf8929/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ffdabdee60081f8565ede5f0fd309520c3ec1a2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4ffdabdee60081f8565ede5f0fd309520c3ec1a2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4ffdabdee60081f8565ede5f0fd309520c3ec1a2"}, {"sha": "3931ae58269876f99893080a15d981c03ccf5a0b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3931ae58269876f99893080a15d981c03ccf5a0b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3931ae58269876f99893080a15d981c03ccf5a0b"}]}, {"sha": "3931ae58269876f99893080a15d981c03ccf5a0b", "commit": {"author": {"name": "jpalka", "email": "jpalka@gmail.com", "date": "2013-05-15T20:38:08Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-15T21:39:20Z"}, "message": "INTEXT-65 Add JGroups Extension", "tree": {"sha": "2233677c6385c49ad2079d25bcde3a77286bac10", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2233677c6385c49ad2079d25bcde3a77286bac10"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3931ae58269876f99893080a15d981c03ccf5a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3931ae58269876f99893080a15d981c03ccf5a0b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3931ae58269876f99893080a15d981c03ccf5a0b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3931ae58269876f99893080a15d981c03ccf5a0b/comments", "author": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ffdabdee60081f8565ede5f0fd309520c3ec1a2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4ffdabdee60081f8565ede5f0fd309520c3ec1a2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4ffdabdee60081f8565ede5f0fd309520c3ec1a2"}]}, {"sha": "4ffdabdee60081f8565ede5f0fd309520c3ec1a2", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-15T16:45:42Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-15T16:45:42Z"}, "message": "Merge pull request #52 from bellwethr/master\n\n* bellwethr-master:\n  INTEXT-81 Add unit tests\n  INTEXT-81 Fixing bug in decoding message streams * adding a null check on the key decoder", "tree": {"sha": "e207e97f6fb10f43d5738fbc1dfa8d68247bd824", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e207e97f6fb10f43d5738fbc1dfa8d68247bd824"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4ffdabdee60081f8565ede5f0fd309520c3ec1a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4ffdabdee60081f8565ede5f0fd309520c3ec1a2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4ffdabdee60081f8565ede5f0fd309520c3ec1a2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4ffdabdee60081f8565ede5f0fd309520c3ec1a2/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1f400e2cf329473501950fe451d0c9b6ed00159", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e1f400e2cf329473501950fe451d0c9b6ed00159", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e1f400e2cf329473501950fe451d0c9b6ed00159"}, {"sha": "7d0806c7739fc0d96363eb12d55a351bc35c1e6f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d0806c7739fc0d96363eb12d55a351bc35c1e6f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7d0806c7739fc0d96363eb12d55a351bc35c1e6f"}]}, {"sha": "7d0806c7739fc0d96363eb12d55a351bc35c1e6f", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-15T16:40:28Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-15T16:44:08Z"}, "message": "INTEXT-81 Add unit tests", "tree": {"sha": "e207e97f6fb10f43d5738fbc1dfa8d68247bd824", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e207e97f6fb10f43d5738fbc1dfa8d68247bd824"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7d0806c7739fc0d96363eb12d55a351bc35c1e6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d0806c7739fc0d96363eb12d55a351bc35c1e6f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7d0806c7739fc0d96363eb12d55a351bc35c1e6f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d0806c7739fc0d96363eb12d55a351bc35c1e6f/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86be5e1b78454ff445567badaa3e6bf20bb481e6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/86be5e1b78454ff445567badaa3e6bf20bb481e6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/86be5e1b78454ff445567badaa3e6bf20bb481e6"}]}, {"sha": "86be5e1b78454ff445567badaa3e6bf20bb481e6", "commit": {"author": {"name": "Kevin Eustice", "email": "eustice@gmail.com", "date": "2013-07-12T18:14:25Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@gopivotal.com", "date": "2013-07-15T16:43:04Z"}, "message": "INTEXT-81 Fixing bug in decoding message streams\n* adding a null check on the key decoder\n\nhttps://jira.springsource.org/browse/INTEXT-81", "tree": {"sha": "25c7bacac4afad096fd8fadfb955533063087d9b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/25c7bacac4afad096fd8fadfb955533063087d9b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/86be5e1b78454ff445567badaa3e6bf20bb481e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/86be5e1b78454ff445567badaa3e6bf20bb481e6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/86be5e1b78454ff445567badaa3e6bf20bb481e6", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/86be5e1b78454ff445567badaa3e6bf20bb481e6/comments", "author": {"login": "bellwethr", "id": 104604, "avatar_url": "https://avatars1.githubusercontent.com/u/104604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bellwethr", "html_url": "https://github.com/bellwethr", "followers_url": "https://api.github.com/users/bellwethr/followers", "following_url": "https://api.github.com/users/bellwethr/following{/other_user}", "gists_url": "https://api.github.com/users/bellwethr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bellwethr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bellwethr/subscriptions", "organizations_url": "https://api.github.com/users/bellwethr/orgs", "repos_url": "https://api.github.com/users/bellwethr/repos", "events_url": "https://api.github.com/users/bellwethr/events{/privacy}", "received_events_url": "https://api.github.com/users/bellwethr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1f400e2cf329473501950fe451d0c9b6ed00159", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e1f400e2cf329473501950fe451d0c9b6ed00159", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e1f400e2cf329473501950fe451d0c9b6ed00159"}]}, {"sha": "e1f400e2cf329473501950fe451d0c9b6ed00159", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-07-15T14:04:58Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-07-15T14:04:58Z"}, "message": "Update README.md", "tree": {"sha": "ece52d117ff653b108325ba66faed9c25981a0e7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/ece52d117ff653b108325ba66faed9c25981a0e7"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e1f400e2cf329473501950fe451d0c9b6ed00159", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e1f400e2cf329473501950fe451d0c9b6ed00159", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e1f400e2cf329473501950fe451d0c9b6ed00159", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e1f400e2cf329473501950fe451d0c9b6ed00159/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b7fba196d17a2039163111984ab3cfd0c92ffac", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9b7fba196d17a2039163111984ab3cfd0c92ffac", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9b7fba196d17a2039163111984ab3cfd0c92ffac"}]}, {"sha": "9b7fba196d17a2039163111984ab3cfd0c92ffac", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-07-15T14:02:23Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-07-15T14:02:23Z"}, "message": "Updated list of available modules", "tree": {"sha": "f3d5123bde686aac00e1448cf82ad52fa1b994d0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f3d5123bde686aac00e1448cf82ad52fa1b994d0"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/9b7fba196d17a2039163111984ab3cfd0c92ffac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9b7fba196d17a2039163111984ab3cfd0c92ffac", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9b7fba196d17a2039163111984ab3cfd0c92ffac", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9b7fba196d17a2039163111984ab3cfd0c92ffac/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9bcbdc14b3c5b74d6b2d4f9b3475c3c12508f8f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d9bcbdc14b3c5b74d6b2d4f9b3475c3c12508f8f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d9bcbdc14b3c5b74d6b2d4f9b3475c3c12508f8f"}]}, {"sha": "d9bcbdc14b3c5b74d6b2d4f9b3475c3c12508f8f", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-06-03T19:13:08Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-06-03T19:29:43Z"}, "message": "Moved Kafka Test Context Files", "tree": {"sha": "bcd902c00e862ced903e63a94e083db213f6f815", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/bcd902c00e862ced903e63a94e083db213f6f815"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d9bcbdc14b3c5b74d6b2d4f9b3475c3c12508f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d9bcbdc14b3c5b74d6b2d4f9b3475c3c12508f8f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d9bcbdc14b3c5b74d6b2d4f9b3475c3c12508f8f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d9bcbdc14b3c5b74d6b2d4f9b3475c3c12508f8f/comments", "author": null, "committer": null, "parents": [{"sha": "21bd507923976a509439c39ca5e6985ea3ea2089", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/21bd507923976a509439c39ca5e6985ea3ea2089", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/21bd507923976a509439c39ca5e6985ea3ea2089"}]}, {"sha": "21bd507923976a509439c39ca5e6985ea3ea2089", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-06-03T04:18:34Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-06-03T04:18:34Z"}, "message": "Merge pull request #42 from sobychacko/INTEXT-44\n\n* sobychacko-INTEXT-44:\n  INTEXT-44 - Polishing\n  INTEXT-44 - Add Kafka Support", "tree": {"sha": "a6f522e929d9e75323a0360b99ff8ca1ecdd6f84", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/a6f522e929d9e75323a0360b99ff8ca1ecdd6f84"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/21bd507923976a509439c39ca5e6985ea3ea2089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/21bd507923976a509439c39ca5e6985ea3ea2089", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/21bd507923976a509439c39ca5e6985ea3ea2089", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/21bd507923976a509439c39ca5e6985ea3ea2089/comments", "author": null, "committer": null, "parents": [{"sha": "0665dc9a8684e92766baff7738cb57ef3d8645e3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0665dc9a8684e92766baff7738cb57ef3d8645e3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0665dc9a8684e92766baff7738cb57ef3d8645e3"}, {"sha": "5bf4b9871e65a4616e2faa671dec4a4573cdf0f2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bf4b9871e65a4616e2faa671dec4a4573cdf0f2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5bf4b9871e65a4616e2faa671dec4a4573cdf0f2"}]}, {"sha": "5bf4b9871e65a4616e2faa671dec4a4573cdf0f2", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-06-03T04:02:47Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-06-03T04:15:14Z"}, "message": "INTEXT-44 - Polishing\n\n* Upgrade to Gradle 1.6\n* Upgrade Sonar plugin to SonarRunner\n* Upgrade a few dependencies (e.g. JUnit, Spring Integration)\n* Remove deprecations (e.g. JUnit)\n* Convert spaces to tabs\n* Add author tags\n* Add @since", "tree": {"sha": "a6f522e929d9e75323a0360b99ff8ca1ecdd6f84", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/a6f522e929d9e75323a0360b99ff8ca1ecdd6f84"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/5bf4b9871e65a4616e2faa671dec4a4573cdf0f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bf4b9871e65a4616e2faa671dec4a4573cdf0f2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5bf4b9871e65a4616e2faa671dec4a4573cdf0f2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5bf4b9871e65a4616e2faa671dec4a4573cdf0f2/comments", "author": null, "committer": null, "parents": [{"sha": "e46cbfdcb4f0fe1bcb8efa2f29454adefaa360f6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e46cbfdcb4f0fe1bcb8efa2f29454adefaa360f6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e46cbfdcb4f0fe1bcb8efa2f29454adefaa360f6"}]}, {"sha": "e46cbfdcb4f0fe1bcb8efa2f29454adefaa360f6", "commit": {"author": {"name": "Soby Chacko", "email": "sobychacko@gmail.com", "date": "2013-03-19T03:31:53Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-06-03T04:15:01Z"}, "message": "INTEXT-44 - Add Kafka Support\n\n* Add Inbound adapter\n* Add Outbound adapter\n* Add serialization\n* Initial Documentation\n* Add unit tests\n* Add async producer\n* Support Kafka 0.8\n* Add Kafka Sample\n\nSee: https://jira.springsource.org/browse/INTEXT-44", "tree": {"sha": "07c0bc08516b601552a565acb0b7b1e5bbb43479", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/07c0bc08516b601552a565acb0b7b1e5bbb43479"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e46cbfdcb4f0fe1bcb8efa2f29454adefaa360f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e46cbfdcb4f0fe1bcb8efa2f29454adefaa360f6", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e46cbfdcb4f0fe1bcb8efa2f29454adefaa360f6", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e46cbfdcb4f0fe1bcb8efa2f29454adefaa360f6/comments", "author": {"login": "sobychacko", "id": 827682, "avatar_url": "https://avatars3.githubusercontent.com/u/827682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobychacko", "html_url": "https://github.com/sobychacko", "followers_url": "https://api.github.com/users/sobychacko/followers", "following_url": "https://api.github.com/users/sobychacko/following{/other_user}", "gists_url": "https://api.github.com/users/sobychacko/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobychacko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobychacko/subscriptions", "organizations_url": "https://api.github.com/users/sobychacko/orgs", "repos_url": "https://api.github.com/users/sobychacko/repos", "events_url": "https://api.github.com/users/sobychacko/events{/privacy}", "received_events_url": "https://api.github.com/users/sobychacko/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0665dc9a8684e92766baff7738cb57ef3d8645e3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0665dc9a8684e92766baff7738cb57ef3d8645e3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0665dc9a8684e92766baff7738cb57ef3d8645e3"}]}, {"sha": "0665dc9a8684e92766baff7738cb57ef3d8645e3", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-29T04:25:41Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-29T04:25:41Z"}, "message": "SMPP - Reduce Sonar Violations - If Stmts Must Use Braces", "tree": {"sha": "8671aa1820d138e7ead34926f1d28221170e9fc9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8671aa1820d138e7ead34926f1d28221170e9fc9"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0665dc9a8684e92766baff7738cb57ef3d8645e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0665dc9a8684e92766baff7738cb57ef3d8645e3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0665dc9a8684e92766baff7738cb57ef3d8645e3", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0665dc9a8684e92766baff7738cb57ef3d8645e3/comments", "author": null, "committer": null, "parents": [{"sha": "dac93edfc420f06ac7fca61e99a3ac9002349c41", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/dac93edfc420f06ac7fca61e99a3ac9002349c41", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/dac93edfc420f06ac7fca61e99a3ac9002349c41"}]}, {"sha": "dac93edfc420f06ac7fca61e99a3ac9002349c41", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-29T03:49:53Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-29T03:49:53Z"}, "message": "Merge pull request #37 from otnateos/INTEXT-58\n\n* otnateos-INTEXT-58:\n  INTEXT-58 Support SMPP Sending Using Other Charset and udh * Remove SmppSessionFactoryBean.setMessageReceiverListeners(MessageReceiverListener... listeners) to remove Spring's warning message for ambiguous method access * Allow using DeliveryReceipt id as is if hex parsing fail (tested with HSLSMS) * Add support for session reconnection which will attempt to reconnect every 5 sec by default until the session is destroyed * If additional session state listener is configured by user, it will register it * Update build dependency with Spring Integration 2.2.2 * Update javadoc * Add support for smpp transaction time using transactionTimeout * Support 'request-handler-advice-chain' for outbound channel adapter and gateway * Support sending using data_coding * Support sending using message_payload * Support for sending long sms using UDH * Update mock smpp server to simulate real SMPP error * Change message id reading logging to DEBUG instead of WARN * Wrap SMPPSession with proxy for auto reconnection * Use ExecutorService for reconnection * Fix some code and author", "tree": {"sha": "aab68af4ef4c09aec19d5ce8d927458f4aba68e5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/aab68af4ef4c09aec19d5ce8d927458f4aba68e5"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/dac93edfc420f06ac7fca61e99a3ac9002349c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/dac93edfc420f06ac7fca61e99a3ac9002349c41", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/dac93edfc420f06ac7fca61e99a3ac9002349c41", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/dac93edfc420f06ac7fca61e99a3ac9002349c41/comments", "author": null, "committer": null, "parents": [{"sha": "506708671338a104ef56e48035c0e653914cff9d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/506708671338a104ef56e48035c0e653914cff9d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/506708671338a104ef56e48035c0e653914cff9d"}, {"sha": "f9207dae2b5a3ae34179ca3156087d5248994098", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f9207dae2b5a3ae34179ca3156087d5248994098", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f9207dae2b5a3ae34179ca3156087d5248994098"}]}, {"sha": "f9207dae2b5a3ae34179ca3156087d5248994098", "commit": {"author": {"name": "Johanes Soetanto", "email": "otnateos@gmail.com", "date": "2013-03-14T05:57:04Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-29T03:45:09Z"}, "message": "INTEXT-58 Support SMPP Sending Using Other Charset and udh\n* Remove SmppSessionFactoryBean.setMessageReceiverListeners(MessageReceiverListener... listeners) to remove Spring's warning message for ambiguous method access\n* Allow using DeliveryReceipt id as is if hex parsing fail (tested with HSLSMS)\n* Add support for session reconnection which will attempt to reconnect every 5 sec by default until the session is destroyed\n* If additional session state listener is configured by user, it will register it\n* Update build dependency with Spring Integration 2.2.2\n* Update javadoc\n* Add support for smpp transaction time using transactionTimeout\n* Support 'request-handler-advice-chain' for outbound channel adapter and gateway\n* Support sending using data_coding\n* Support sending using message_payload\n* Support for sending long sms using UDH\n* Update mock smpp server to simulate real SMPP error\n* Change message id reading logging to DEBUG instead of WARN\n* Wrap SMPPSession with proxy for auto reconnection\n* Use ExecutorService for reconnection\n* Fix some code and author", "tree": {"sha": "aab68af4ef4c09aec19d5ce8d927458f4aba68e5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/aab68af4ef4c09aec19d5ce8d927458f4aba68e5"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f9207dae2b5a3ae34179ca3156087d5248994098", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f9207dae2b5a3ae34179ca3156087d5248994098", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f9207dae2b5a3ae34179ca3156087d5248994098", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f9207dae2b5a3ae34179ca3156087d5248994098/comments", "author": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "506708671338a104ef56e48035c0e653914cff9d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/506708671338a104ef56e48035c0e653914cff9d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/506708671338a104ef56e48035c0e653914cff9d"}]}, {"sha": "506708671338a104ef56e48035c0e653914cff9d", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-05-24T20:30:15Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-05-24T20:30:15Z"}, "message": "Revert version to 1.0.0.BUILD-SNAPSHOT", "tree": {"sha": "43beab96abc8ebddd65f9fd0f6ce2d1dff2cc083", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/43beab96abc8ebddd65f9fd0f6ce2d1dff2cc083"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/506708671338a104ef56e48035c0e653914cff9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/506708671338a104ef56e48035c0e653914cff9d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/506708671338a104ef56e48035c0e653914cff9d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/506708671338a104ef56e48035c0e653914cff9d/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "793f1bf43cfb5c680a7498f8fd93323bbd60d564", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/793f1bf43cfb5c680a7498f8fd93323bbd60d564", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/793f1bf43cfb5c680a7498f8fd93323bbd60d564"}]}, {"sha": "793f1bf43cfb5c680a7498f8fd93323bbd60d564", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-05-24T20:26:24Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-05-24T20:26:24Z"}, "message": "[artifactory-release] Release version 1.0.0.M1", "tree": {"sha": "f0b6e92f3dee597412152d4f876bd517b06d73e2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f0b6e92f3dee597412152d4f876bd517b06d73e2"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/793f1bf43cfb5c680a7498f8fd93323bbd60d564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/793f1bf43cfb5c680a7498f8fd93323bbd60d564", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/793f1bf43cfb5c680a7498f8fd93323bbd60d564", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/793f1bf43cfb5c680a7498f8fd93323bbd60d564/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8d45f216376a9af384fb81c61a9bf83185da6b0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e8d45f216376a9af384fb81c61a9bf83185da6b0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e8d45f216376a9af384fb81c61a9bf83185da6b0"}]}, {"sha": "e8d45f216376a9af384fb81c61a9bf83185da6b0", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-05-24T19:16:29Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-05-24T19:16:29Z"}, "message": "INTEXT-71 Fix Typo in README", "tree": {"sha": "43beab96abc8ebddd65f9fd0f6ce2d1dff2cc083", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/43beab96abc8ebddd65f9fd0f6ce2d1dff2cc083"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e8d45f216376a9af384fb81c61a9bf83185da6b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e8d45f216376a9af384fb81c61a9bf83185da6b0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e8d45f216376a9af384fb81c61a9bf83185da6b0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e8d45f216376a9af384fb81c61a9bf83185da6b0/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8987dc3b5107bc024aed1fd7e25b5bcb57f45ccf", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8987dc3b5107bc024aed1fd7e25b5bcb57f45ccf", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8987dc3b5107bc024aed1fd7e25b5bcb57f45ccf"}]}, {"sha": "8987dc3b5107bc024aed1fd7e25b5bcb57f45ccf", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-05-24T18:54:02Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-05-24T18:54:02Z"}, "message": "INTEXT-71 Add Maven To README.md", "tree": {"sha": "fd67110cf9d2be8c2bd323717037b11b1f3733a2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/fd67110cf9d2be8c2bd323717037b11b1f3733a2"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/8987dc3b5107bc024aed1fd7e25b5bcb57f45ccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8987dc3b5107bc024aed1fd7e25b5bcb57f45ccf", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/8987dc3b5107bc024aed1fd7e25b5bcb57f45ccf", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/8987dc3b5107bc024aed1fd7e25b5bcb57f45ccf/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3eb5dbd15869ddfb14c24793c2d1ba99e38696e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d3eb5dbd15869ddfb14c24793c2d1ba99e38696e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d3eb5dbd15869ddfb14c24793c2d1ba99e38696e"}]}, {"sha": "d3eb5dbd15869ddfb14c24793c2d1ba99e38696e", "commit": {"author": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-05-24T18:36:14Z"}, "committer": {"name": "Gary Russell", "email": "grussell@gopivotal.com", "date": "2013-05-24T18:36:14Z"}, "message": "INTEXT-71 Update MQTT Extension to SI 3.0.0.M2", "tree": {"sha": "f575d9508e2c5bc8c7b95172b92913d92a161682", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f575d9508e2c5bc8c7b95172b92913d92a161682"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d3eb5dbd15869ddfb14c24793c2d1ba99e38696e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d3eb5dbd15869ddfb14c24793c2d1ba99e38696e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d3eb5dbd15869ddfb14c24793c2d1ba99e38696e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d3eb5dbd15869ddfb14c24793c2d1ba99e38696e/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7538eb4ecde61db5fb5af7592933e584b08db7e2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7538eb4ecde61db5fb5af7592933e584b08db7e2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7538eb4ecde61db5fb5af7592933e584b08db7e2"}]}, {"sha": "7538eb4ecde61db5fb5af7592933e584b08db7e2", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-05-17T16:03:31Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-05-17T16:03:31Z"}, "message": "Merge pull request #49 from ghillert/INTEXT-70\n\nINTEXT-70 - Set code coverage plugin for Sonar", "tree": {"sha": "deb632d801a0a0f0f617ffe04856960e199ab547", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/deb632d801a0a0f0f617ffe04856960e199ab547"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7538eb4ecde61db5fb5af7592933e584b08db7e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7538eb4ecde61db5fb5af7592933e584b08db7e2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7538eb4ecde61db5fb5af7592933e584b08db7e2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7538eb4ecde61db5fb5af7592933e584b08db7e2/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f30e5bb196cac89cf87296169d6ea0cfc532b5b7", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f30e5bb196cac89cf87296169d6ea0cfc532b5b7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f30e5bb196cac89cf87296169d6ea0cfc532b5b7"}, {"sha": "74aab512c99aaa5a1a1d503c76ee8ef505b34947", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/74aab512c99aaa5a1a1d503c76ee8ef505b34947", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/74aab512c99aaa5a1a1d503c76ee8ef505b34947"}]}, {"sha": "74aab512c99aaa5a1a1d503c76ee8ef505b34947", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-17T16:01:26Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-17T16:01:26Z"}, "message": "INTEXT-70 - Set code coverage plugin for Sonar\n\n* Set the Sonar code coverage plugin explicitly to `jacoco`", "tree": {"sha": "b5cd4a86538883eaecb23013d29cf5b1fad42ecd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b5cd4a86538883eaecb23013d29cf5b1fad42ecd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/74aab512c99aaa5a1a1d503c76ee8ef505b34947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/74aab512c99aaa5a1a1d503c76ee8ef505b34947", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/74aab512c99aaa5a1a1d503c76ee8ef505b34947", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/74aab512c99aaa5a1a1d503c76ee8ef505b34947/comments", "author": null, "committer": null, "parents": [{"sha": "9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9a0b591f1ddb6fccb6d69730b81fd2df3016420e"}]}, {"sha": "f30e5bb196cac89cf87296169d6ea0cfc532b5b7", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-05-16T14:42:50Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-05-16T14:42:50Z"}, "message": "Merge pull request #47 from ghillert/INTEXT-68\n\nINTEXT-68 - Update MQTT dependency", "tree": {"sha": "d06e867bf1095ea2da016ce7c5cc53a809ef488d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d06e867bf1095ea2da016ce7c5cc53a809ef488d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f30e5bb196cac89cf87296169d6ea0cfc532b5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f30e5bb196cac89cf87296169d6ea0cfc532b5b7", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f30e5bb196cac89cf87296169d6ea0cfc532b5b7", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f30e5bb196cac89cf87296169d6ea0cfc532b5b7/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9a0b591f1ddb6fccb6d69730b81fd2df3016420e"}, {"sha": "04e4ed73894a7cfa7849b68d362d77c1d7a90d5f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/04e4ed73894a7cfa7849b68d362d77c1d7a90d5f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/04e4ed73894a7cfa7849b68d362d77c1d7a90d5f"}]}, {"sha": "04e4ed73894a7cfa7849b68d362d77c1d7a90d5f", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-16T14:40:15Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-16T14:40:15Z"}, "message": "INTEXT-68 - Update MQTT dependency\n\n* Update Readme (No manual installation of the MQTT client to MavenLocal necessary any longer)", "tree": {"sha": "d06e867bf1095ea2da016ce7c5cc53a809ef488d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d06e867bf1095ea2da016ce7c5cc53a809ef488d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/04e4ed73894a7cfa7849b68d362d77c1d7a90d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/04e4ed73894a7cfa7849b68d362d77c1d7a90d5f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/04e4ed73894a7cfa7849b68d362d77c1d7a90d5f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/04e4ed73894a7cfa7849b68d362d77c1d7a90d5f/comments", "author": null, "committer": null, "parents": [{"sha": "9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9a0b591f1ddb6fccb6d69730b81fd2df3016420e"}]}, {"sha": "9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-05-16T14:23:17Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-05-16T14:23:17Z"}, "message": "Merge pull request #46 from ghillert/INTEXT-69\n\nINTEXT-69 - Splunk: XSD not bundled correctly", "tree": {"sha": "345fba650e7732f8fe12cd9daa95128b77e76cda", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/345fba650e7732f8fe12cd9daa95128b77e76cda"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9a0b591f1ddb6fccb6d69730b81fd2df3016420e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9a0b591f1ddb6fccb6d69730b81fd2df3016420e/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edeac2d709fb20c7a4c00fb6b4907df995543d78", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/edeac2d709fb20c7a4c00fb6b4907df995543d78", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/edeac2d709fb20c7a4c00fb6b4907df995543d78"}, {"sha": "ec9b053a36fb52307bfcdb071627bac24b4eb6ae", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ec9b053a36fb52307bfcdb071627bac24b4eb6ae", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ec9b053a36fb52307bfcdb071627bac24b4eb6ae"}]}, {"sha": "ec9b053a36fb52307bfcdb071627bac24b4eb6ae", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-16T14:20:08Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-16T14:20:08Z"}, "message": "INTEXT-69 - Splunk: XSD not bundled correctly", "tree": {"sha": "345fba650e7732f8fe12cd9daa95128b77e76cda", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/345fba650e7732f8fe12cd9daa95128b77e76cda"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ec9b053a36fb52307bfcdb071627bac24b4eb6ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ec9b053a36fb52307bfcdb071627bac24b4eb6ae", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ec9b053a36fb52307bfcdb071627bac24b4eb6ae", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ec9b053a36fb52307bfcdb071627bac24b4eb6ae/comments", "author": null, "committer": null, "parents": [{"sha": "edeac2d709fb20c7a4c00fb6b4907df995543d78", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/edeac2d709fb20c7a4c00fb6b4907df995543d78", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/edeac2d709fb20c7a4c00fb6b4907df995543d78"}]}, {"sha": "edeac2d709fb20c7a4c00fb6b4907df995543d78", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-05-16T03:18:11Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-05-16T03:18:11Z"}, "message": "Merge pull request #45 from ghillert/INTEXT-67\n\nINTEXT-67 - Upgrade to Sonar-Runner", "tree": {"sha": "b5b44e87cdaeb5db5bd9c289bfa359f57853e057", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b5b44e87cdaeb5db5bd9c289bfa359f57853e057"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/edeac2d709fb20c7a4c00fb6b4907df995543d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/edeac2d709fb20c7a4c00fb6b4907df995543d78", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/edeac2d709fb20c7a4c00fb6b4907df995543d78", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/edeac2d709fb20c7a4c00fb6b4907df995543d78/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d5ae68ee4febba11494693ad064a9ae71ae0e65", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d5ae68ee4febba11494693ad064a9ae71ae0e65", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7d5ae68ee4febba11494693ad064a9ae71ae0e65"}, {"sha": "c4a709011852e020a8861e7342e1e9fa8456829c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c4a709011852e020a8861e7342e1e9fa8456829c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c4a709011852e020a8861e7342e1e9fa8456829c"}]}, {"sha": "c4a709011852e020a8861e7342e1e9fa8456829c", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-16T03:15:06Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-16T03:15:06Z"}, "message": "INTEXT-67 - Upgrade to Sonar-Runner\n\n* Upgrade to Gradle 1.6\n* Upgrade from Gradle plugin sonar to sonar-runner\n* Upgrade Gradle wrapper\n* Fix several Group Ids", "tree": {"sha": "b5b44e87cdaeb5db5bd9c289bfa359f57853e057", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b5b44e87cdaeb5db5bd9c289bfa359f57853e057"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c4a709011852e020a8861e7342e1e9fa8456829c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c4a709011852e020a8861e7342e1e9fa8456829c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c4a709011852e020a8861e7342e1e9fa8456829c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c4a709011852e020a8861e7342e1e9fa8456829c/comments", "author": null, "committer": null, "parents": [{"sha": "7d5ae68ee4febba11494693ad064a9ae71ae0e65", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d5ae68ee4febba11494693ad064a9ae71ae0e65", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7d5ae68ee4febba11494693ad064a9ae71ae0e65"}]}, {"sha": "7d5ae68ee4febba11494693ad064a9ae71ae0e65", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-15T20:49:39Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-15T20:49:39Z"}, "message": "Merge pull request #40 from garyrussell/mqtt\n\n* garyrussell-mqtt:\n  INTEXT-64 - Polishing\n  INTEXT-64 MQTT Adapters", "tree": {"sha": "b427ec6b945c765834b8837a5046825b41542388", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b427ec6b945c765834b8837a5046825b41542388"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7d5ae68ee4febba11494693ad064a9ae71ae0e65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d5ae68ee4febba11494693ad064a9ae71ae0e65", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7d5ae68ee4febba11494693ad064a9ae71ae0e65", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d5ae68ee4febba11494693ad064a9ae71ae0e65/comments", "author": null, "committer": null, "parents": [{"sha": "b139943b46a82d7e3c5493b02ea6587255c63424", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b139943b46a82d7e3c5493b02ea6587255c63424", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b139943b46a82d7e3c5493b02ea6587255c63424"}, {"sha": "ac43f8e930f119bb228e466610c91e838b9a5b83", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ac43f8e930f119bb228e466610c91e838b9a5b83", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ac43f8e930f119bb228e466610c91e838b9a5b83"}]}, {"sha": "ac43f8e930f119bb228e466610c91e838b9a5b83", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-15T20:44:48Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-15T20:46:42Z"}, "message": "INTEXT-64 - Polishing\n\n* Update dependency versions\n* Add more comments/links\n* Remove DocBook usage", "tree": {"sha": "b427ec6b945c765834b8837a5046825b41542388", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b427ec6b945c765834b8837a5046825b41542388"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ac43f8e930f119bb228e466610c91e838b9a5b83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ac43f8e930f119bb228e466610c91e838b9a5b83", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ac43f8e930f119bb228e466610c91e838b9a5b83", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ac43f8e930f119bb228e466610c91e838b9a5b83/comments", "author": null, "committer": null, "parents": [{"sha": "745dd018ca58f8b4ffb06f6306a23a82afd7d1a0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/745dd018ca58f8b4ffb06f6306a23a82afd7d1a0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/745dd018ca58f8b4ffb06f6306a23a82afd7d1a0"}]}, {"sha": "745dd018ca58f8b4ffb06f6306a23a82afd7d1a0", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-04-18T22:11:56Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-05-15T20:46:42Z"}, "message": "INTEXT-64 MQTT Adapters\n\nSee README.md for more information.\n\nhttp://jira.springsource.org/browse/INTEXT-64", "tree": {"sha": "d8b7d40919eafc79ffd08018c7401dd6e6d3cf21", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/d8b7d40919eafc79ffd08018c7401dd6e6d3cf21"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/745dd018ca58f8b4ffb06f6306a23a82afd7d1a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/745dd018ca58f8b4ffb06f6306a23a82afd7d1a0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/745dd018ca58f8b4ffb06f6306a23a82afd7d1a0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/745dd018ca58f8b4ffb06f6306a23a82afd7d1a0/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b139943b46a82d7e3c5493b02ea6587255c63424", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b139943b46a82d7e3c5493b02ea6587255c63424", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b139943b46a82d7e3c5493b02ea6587255c63424"}]}, {"sha": "b139943b46a82d7e3c5493b02ea6587255c63424", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-04-04T13:59:52Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-04-04T13:59:52Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "b87a31e09117d8d24b72170daa81f407850945ff", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/b87a31e09117d8d24b72170daa81f407850945ff"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b139943b46a82d7e3c5493b02ea6587255c63424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b139943b46a82d7e3c5493b02ea6587255c63424", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b139943b46a82d7e3c5493b02ea6587255c63424", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b139943b46a82d7e3c5493b02ea6587255c63424/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "665c27022b3d4464070433fc9a282bdd45871dff", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/665c27022b3d4464070433fc9a282bdd45871dff", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/665c27022b3d4464070433fc9a282bdd45871dff"}]}, {"sha": "665c27022b3d4464070433fc9a282bdd45871dff", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-04-04T13:59:45Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-04-04T13:59:45Z"}, "message": "[artifactory-release] Release version 1.0.0.M1", "tree": {"sha": "417fab5beb45228d78f2b3ba0a8b0e4f9a1d21c4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/417fab5beb45228d78f2b3ba0a8b0e4f9a1d21c4"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/665c27022b3d4464070433fc9a282bdd45871dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/665c27022b3d4464070433fc9a282bdd45871dff", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/665c27022b3d4464070433fc9a282bdd45871dff", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/665c27022b3d4464070433fc9a282bdd45871dff/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f23fe79cce10b43c686e602ba74c72f9e3cc25b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0f23fe79cce10b43c686e602ba74c72f9e3cc25b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0f23fe79cce10b43c686e602ba74c72f9e3cc25b"}]}, {"sha": "0f23fe79cce10b43c686e602ba74c72f9e3cc25b", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-04-04T13:47:29Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-04-04T13:47:29Z"}, "message": "Merge pull request #38 from damiendallimore/master\n\nCreated \"index\" field and getter/setter", "tree": {"sha": "25aba655b2bb106c60de69ad45f81cde6925fcc0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/25aba655b2bb106c60de69ad45f81cde6925fcc0"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0f23fe79cce10b43c686e602ba74c72f9e3cc25b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0f23fe79cce10b43c686e602ba74c72f9e3cc25b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0f23fe79cce10b43c686e602ba74c72f9e3cc25b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0f23fe79cce10b43c686e602ba74c72f9e3cc25b/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2145d3806ce07b39a2782219a6636c65c51a1c47", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2145d3806ce07b39a2782219a6636c65c51a1c47", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2145d3806ce07b39a2782219a6636c65c51a1c47"}, {"sha": "cbcc0d9295c5923aa8dc6590cc6448f65d9eee70", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cbcc0d9295c5923aa8dc6590cc6448f65d9eee70", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cbcc0d9295c5923aa8dc6590cc6448f65d9eee70"}]}, {"sha": "cbcc0d9295c5923aa8dc6590cc6448f65d9eee70", "commit": {"author": {"name": "Damien Dallimore", "email": "ddallimore@splunk.com", "date": "2013-04-04T06:48:41Z"}, "committer": {"name": "Damien Dallimore", "email": "ddallimore@splunk.com", "date": "2013-04-04T06:48:41Z"}, "message": "created \"index\" field", "tree": {"sha": "25aba655b2bb106c60de69ad45f81cde6925fcc0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/25aba655b2bb106c60de69ad45f81cde6925fcc0"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/cbcc0d9295c5923aa8dc6590cc6448f65d9eee70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cbcc0d9295c5923aa8dc6590cc6448f65d9eee70", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/cbcc0d9295c5923aa8dc6590cc6448f65d9eee70", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/cbcc0d9295c5923aa8dc6590cc6448f65d9eee70/comments", "author": null, "committer": null, "parents": [{"sha": "2145d3806ce07b39a2782219a6636c65c51a1c47", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2145d3806ce07b39a2782219a6636c65c51a1c47", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2145d3806ce07b39a2782219a6636c65c51a1c47"}]}, {"sha": "2145d3806ce07b39a2782219a6636c65c51a1c47", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-04-02T20:34:46Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-04-02T20:34:46Z"}, "message": "Merge pull request #20 from lukasz-antoniak/INTEXT-36\n\n* lukasz-antoniak-INTEXT-36:\n  INTEXT-61 - Add Voldemort Sample\n  INTEXT-36 - Cleanup\n  INTEXT-36 - Add Voldemort Module", "tree": {"sha": "06c28f18b1b36691f3f116d6c840f7ea22f732a2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/06c28f18b1b36691f3f116d6c840f7ea22f732a2"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2145d3806ce07b39a2782219a6636c65c51a1c47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2145d3806ce07b39a2782219a6636c65c51a1c47", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2145d3806ce07b39a2782219a6636c65c51a1c47", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2145d3806ce07b39a2782219a6636c65c51a1c47/comments", "author": null, "committer": null, "parents": [{"sha": "3063278b0e96e89f30bd7c96f56fd75eb8176ff3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3063278b0e96e89f30bd7c96f56fd75eb8176ff3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3063278b0e96e89f30bd7c96f56fd75eb8176ff3"}, {"sha": "14995ec2f94f85139de0f106c929f6466a340d3b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/14995ec2f94f85139de0f106c929f6466a340d3b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/14995ec2f94f85139de0f106c929f6466a340d3b"}]}, {"sha": "14995ec2f94f85139de0f106c929f6466a340d3b", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-04-02T20:24:59Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-04-02T20:32:48Z"}, "message": "INTEXT-61 - Add Voldemort Sample", "tree": {"sha": "06c28f18b1b36691f3f116d6c840f7ea22f732a2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/06c28f18b1b36691f3f116d6c840f7ea22f732a2"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/14995ec2f94f85139de0f106c929f6466a340d3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/14995ec2f94f85139de0f106c929f6466a340d3b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/14995ec2f94f85139de0f106c929f6466a340d3b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/14995ec2f94f85139de0f106c929f6466a340d3b/comments", "author": null, "committer": null, "parents": [{"sha": "28759a6116a002277b2d6a9bb63d605bd1b49eec", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/28759a6116a002277b2d6a9bb63d605bd1b49eec", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/28759a6116a002277b2d6a9bb63d605bd1b49eec"}]}, {"sha": "28759a6116a002277b2d6a9bb63d605bd1b49eec", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-04-02T20:14:23Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-04-02T20:32:48Z"}, "message": "INTEXT-36 - Cleanup\n\n* Convert spaces to tabs\n* Upgrade to Gradle 1.5\n* Change Group Id to 'org.springframework.integration'\n* Add Sonar Runner plugin\n* Reduce Sonar warnings\n* Ensure ASL license header is present in all source files\n* Fix XSD documentation not showing up in STS", "tree": {"sha": "4da57bd562b77063df8528f9968fc2ce8660d604", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4da57bd562b77063df8528f9968fc2ce8660d604"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/28759a6116a002277b2d6a9bb63d605bd1b49eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/28759a6116a002277b2d6a9bb63d605bd1b49eec", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/28759a6116a002277b2d6a9bb63d605bd1b49eec", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/28759a6116a002277b2d6a9bb63d605bd1b49eec/comments", "author": null, "committer": null, "parents": [{"sha": "1d2a5b5f06f98e00bddee4f8ecb4a4eba4dc11b2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1d2a5b5f06f98e00bddee4f8ecb4a4eba4dc11b2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1d2a5b5f06f98e00bddee4f8ecb4a4eba4dc11b2"}]}, {"sha": "1d2a5b5f06f98e00bddee4f8ecb4a4eba4dc11b2", "commit": {"author": {"name": "Lukasz Antoniak", "email": "lukasz.antoniak@gmail.com", "date": "2013-01-13T19:54:25Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-04-02T20:32:12Z"}, "message": "INTEXT-36 - Add Voldemort Module", "tree": {"sha": "3e338be181c6c80ec495502af4da32eab1d1edcc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3e338be181c6c80ec495502af4da32eab1d1edcc"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1d2a5b5f06f98e00bddee4f8ecb4a4eba4dc11b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1d2a5b5f06f98e00bddee4f8ecb4a4eba4dc11b2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1d2a5b5f06f98e00bddee4f8ecb4a4eba4dc11b2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1d2a5b5f06f98e00bddee4f8ecb4a4eba4dc11b2/comments", "author": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3063278b0e96e89f30bd7c96f56fd75eb8176ff3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3063278b0e96e89f30bd7c96f56fd75eb8176ff3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3063278b0e96e89f30bd7c96f56fd75eb8176ff3"}]}, {"sha": "3063278b0e96e89f30bd7c96f56fd75eb8176ff3", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-03-29T15:01:15Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-03-29T15:01:15Z"}, "message": "Merge pull request #36 from ghillert/INTEXT-59\n\nINTEXT-59 - Add XQuery Sample", "tree": {"sha": "81f50bcb68f2ffb3b90dcca0fbb37444761b13dd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/81f50bcb68f2ffb3b90dcca0fbb37444761b13dd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3063278b0e96e89f30bd7c96f56fd75eb8176ff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3063278b0e96e89f30bd7c96f56fd75eb8176ff3", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3063278b0e96e89f30bd7c96f56fd75eb8176ff3", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3063278b0e96e89f30bd7c96f56fd75eb8176ff3/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c374ac324f20d28501fc9e90d0b43ca4898be869", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c374ac324f20d28501fc9e90d0b43ca4898be869", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c374ac324f20d28501fc9e90d0b43ca4898be869"}, {"sha": "c879ef5e5edc2e1957102df8cfd1befc8bec5900", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c879ef5e5edc2e1957102df8cfd1befc8bec5900", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c879ef5e5edc2e1957102df8cfd1befc8bec5900"}]}, {"sha": "c879ef5e5edc2e1957102df8cfd1befc8bec5900", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-29T14:35:55Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-29T14:35:55Z"}, "message": "Merge branch 'master' of /Users/hillert/dev/gitsisample/spring-integration-samples into INTEXT-59", "tree": {"sha": "81f50bcb68f2ffb3b90dcca0fbb37444761b13dd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/81f50bcb68f2ffb3b90dcca0fbb37444761b13dd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c879ef5e5edc2e1957102df8cfd1befc8bec5900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c879ef5e5edc2e1957102df8cfd1befc8bec5900", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c879ef5e5edc2e1957102df8cfd1befc8bec5900", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c879ef5e5edc2e1957102df8cfd1befc8bec5900/comments", "author": null, "committer": null, "parents": [{"sha": "c374ac324f20d28501fc9e90d0b43ca4898be869", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c374ac324f20d28501fc9e90d0b43ca4898be869", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c374ac324f20d28501fc9e90d0b43ca4898be869"}, {"sha": "0d3a075d46e5e83419f0f6b9a9c255dc7f761cb2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0d3a075d46e5e83419f0f6b9a9c255dc7f761cb2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0d3a075d46e5e83419f0f6b9a9c255dc7f761cb2"}]}, {"sha": "0d3a075d46e5e83419f0f6b9a9c255dc7f761cb2", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-29T14:24:07Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-29T14:24:07Z"}, "message": "INTSAMPLES-109 - Move XQuery Sample to SI Extensions Repo", "tree": {"sha": "e6e7a0c0a435bacd26f40e330b19037fab7570d2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/e6e7a0c0a435bacd26f40e330b19037fab7570d2"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/0d3a075d46e5e83419f0f6b9a9c255dc7f761cb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0d3a075d46e5e83419f0f6b9a9c255dc7f761cb2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/0d3a075d46e5e83419f0f6b9a9c255dc7f761cb2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/0d3a075d46e5e83419f0f6b9a9c255dc7f761cb2/comments", "author": null, "committer": null, "parents": [{"sha": "c6718af46cca7ed33fee6d5f0991c6c92106e8df", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6718af46cca7ed33fee6d5f0991c6c92106e8df", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c6718af46cca7ed33fee6d5f0991c6c92106e8df"}]}, {"sha": "c374ac324f20d28501fc9e90d0b43ca4898be869", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-03-12T04:57:22Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-03-12T04:57:22Z"}, "message": "Merge pull request #34 from ghillert/INTEXT-54\n\nINTEXT-54 - AWS Fix Failing Tests", "tree": {"sha": "68bb4a961bab8e32f59c7c2dd206ca9be8c2f444", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/68bb4a961bab8e32f59c7c2dd206ca9be8c2f444"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c374ac324f20d28501fc9e90d0b43ca4898be869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c374ac324f20d28501fc9e90d0b43ca4898be869", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c374ac324f20d28501fc9e90d0b43ca4898be869", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c374ac324f20d28501fc9e90d0b43ca4898be869/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e208afe5bbe310beb87093b7519bdd354cb42f3d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e208afe5bbe310beb87093b7519bdd354cb42f3d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e208afe5bbe310beb87093b7519bdd354cb42f3d"}, {"sha": "e2b85f21a9aa992b04f61d9b4b6d263f9377ef86", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e2b85f21a9aa992b04f61d9b4b6d263f9377ef86", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e2b85f21a9aa992b04f61d9b4b6d263f9377ef86"}]}, {"sha": "e2b85f21a9aa992b04f61d9b4b6d263f9377ef86", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-12T04:55:08Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-12T04:55:08Z"}, "message": "INTEXT-54 - AWS Fix Failing Tests\nFor reference: https://jira.springsource.org/browse/INTEXT-54", "tree": {"sha": "68bb4a961bab8e32f59c7c2dd206ca9be8c2f444", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/68bb4a961bab8e32f59c7c2dd206ca9be8c2f444"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e2b85f21a9aa992b04f61d9b4b6d263f9377ef86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e2b85f21a9aa992b04f61d9b4b6d263f9377ef86", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e2b85f21a9aa992b04f61d9b4b6d263f9377ef86", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e2b85f21a9aa992b04f61d9b4b6d263f9377ef86/comments", "author": null, "committer": null, "parents": [{"sha": "e208afe5bbe310beb87093b7519bdd354cb42f3d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e208afe5bbe310beb87093b7519bdd354cb42f3d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e208afe5bbe310beb87093b7519bdd354cb42f3d"}]}, {"sha": "e208afe5bbe310beb87093b7519bdd354cb42f3d", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-03-11T22:04:15Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-03-11T22:04:15Z"}, "message": "Merge pull request #33 from ghillert/INTEXT-34\n\nINTEXT-34 - Convert AWS Module to Gradle", "tree": {"sha": "2764c22ac5aaf867a570aca09407cf4d388af8a1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2764c22ac5aaf867a570aca09407cf4d388af8a1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e208afe5bbe310beb87093b7519bdd354cb42f3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e208afe5bbe310beb87093b7519bdd354cb42f3d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e208afe5bbe310beb87093b7519bdd354cb42f3d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e208afe5bbe310beb87093b7519bdd354cb42f3d/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66bb802d4e55c1b5dc506959337fcb853fbba663", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/66bb802d4e55c1b5dc506959337fcb853fbba663", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/66bb802d4e55c1b5dc506959337fcb853fbba663"}, {"sha": "d071bf6a434ffd0eb5ee268e045c747ad89a7788", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d071bf6a434ffd0eb5ee268e045c747ad89a7788", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d071bf6a434ffd0eb5ee268e045c747ad89a7788"}]}, {"sha": "d071bf6a434ffd0eb5ee268e045c747ad89a7788", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-11T21:38:34Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-11T21:38:34Z"}, "message": "INTEXT-34 - Convert AWS Module to Gradle\nFor reference see: https://jira.springsource.org/browse/INTEXT-34", "tree": {"sha": "2764c22ac5aaf867a570aca09407cf4d388af8a1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/2764c22ac5aaf867a570aca09407cf4d388af8a1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d071bf6a434ffd0eb5ee268e045c747ad89a7788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d071bf6a434ffd0eb5ee268e045c747ad89a7788", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d071bf6a434ffd0eb5ee268e045c747ad89a7788", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d071bf6a434ffd0eb5ee268e045c747ad89a7788/comments", "author": null, "committer": null, "parents": [{"sha": "66bb802d4e55c1b5dc506959337fcb853fbba663", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/66bb802d4e55c1b5dc506959337fcb853fbba663", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/66bb802d4e55c1b5dc506959337fcb853fbba663"}]}, {"sha": "66bb802d4e55c1b5dc506959337fcb853fbba663", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-03-06T22:47:44Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2013-03-06T22:47:44Z"}, "message": "Merge pull request #30 from ghillert/INTEXT-37\n\nINTEXT-37 - Fix SMB - Infinite Loop", "tree": {"sha": "86a7616a21f9524518a1a4e5bbf7acee73da7701", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/86a7616a21f9524518a1a4e5bbf7acee73da7701"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/66bb802d4e55c1b5dc506959337fcb853fbba663", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/66bb802d4e55c1b5dc506959337fcb853fbba663", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/66bb802d4e55c1b5dc506959337fcb853fbba663", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/66bb802d4e55c1b5dc506959337fcb853fbba663/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4426d540aa8fa7caf3d74e55056c43c6c4819ce2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4426d540aa8fa7caf3d74e55056c43c6c4819ce2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4426d540aa8fa7caf3d74e55056c43c6c4819ce2"}, {"sha": "f382418c021034ffd20f3794d8d9fa9aac0a416d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f382418c021034ffd20f3794d8d9fa9aac0a416d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f382418c021034ffd20f3794d8d9fa9aac0a416d"}]}, {"sha": "f382418c021034ffd20f3794d8d9fa9aac0a416d", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-25T05:50:50Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-06T22:46:44Z"}, "message": "INTEXT-37 - Fix SMB - Infinite Loop\nFor reference see: https://jira.springsource.org/browse/INTEXT-37\n\n* Add tests\n* Ensure we always use `StringUtils.cleanPath()`\n    - in SmbSession#createSmbFileObject\n    - in the constructor of SmbShare(String url)", "tree": {"sha": "86a7616a21f9524518a1a4e5bbf7acee73da7701", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/86a7616a21f9524518a1a4e5bbf7acee73da7701"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f382418c021034ffd20f3794d8d9fa9aac0a416d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f382418c021034ffd20f3794d8d9fa9aac0a416d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f382418c021034ffd20f3794d8d9fa9aac0a416d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f382418c021034ffd20f3794d8d9fa9aac0a416d/comments", "author": null, "committer": null, "parents": [{"sha": "4426d540aa8fa7caf3d74e55056c43c6c4819ce2", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4426d540aa8fa7caf3d74e55056c43c6c4819ce2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4426d540aa8fa7caf3d74e55056c43c6c4819ce2"}]}, {"sha": "4426d540aa8fa7caf3d74e55056c43c6c4819ce2", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-25T22:58:03Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-03-01T05:21:54Z"}, "message": "INTEXT-48 - Add sample for AWS S3 support\nFor reference see: https://jira.springsource.org/browse/INTEXT-48", "tree": {"sha": "de88d7dad243ce533194c9d87779b2570c698426", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/de88d7dad243ce533194c9d87779b2570c698426"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/4426d540aa8fa7caf3d74e55056c43c6c4819ce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4426d540aa8fa7caf3d74e55056c43c6c4819ce2", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/4426d540aa8fa7caf3d74e55056c43c6c4819ce2", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/4426d540aa8fa7caf3d74e55056c43c6c4819ce2/comments", "author": null, "committer": null, "parents": [{"sha": "57f9f0f8a47260fdb7df199e26bbda8d8c1e4d87", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57f9f0f8a47260fdb7df199e26bbda8d8c1e4d87", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/57f9f0f8a47260fdb7df199e26bbda8d8c1e4d87"}]}, {"sha": "57f9f0f8a47260fdb7df199e26bbda8d8c1e4d87", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-28T23:06:17Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-28T23:06:17Z"}, "message": "Merge pull request #29 from amolnayak311/INTEXT-5\n\n* amolnayak311-INTEXT-5:\n  INTEXT-5: Initial push for AWS core and S3 adapter For reference see: https://jira.springsource.org/browse/INTEXT-5", "tree": {"sha": "fea71c20eb9f2e9a48567bf01357174af01f4d37", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/fea71c20eb9f2e9a48567bf01357174af01f4d37"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/57f9f0f8a47260fdb7df199e26bbda8d8c1e4d87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57f9f0f8a47260fdb7df199e26bbda8d8c1e4d87", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/57f9f0f8a47260fdb7df199e26bbda8d8c1e4d87", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/57f9f0f8a47260fdb7df199e26bbda8d8c1e4d87/comments", "author": null, "committer": null, "parents": [{"sha": "1d6caa21add112a77c2aa83ccbe8b64df234274b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1d6caa21add112a77c2aa83ccbe8b64df234274b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1d6caa21add112a77c2aa83ccbe8b64df234274b"}, {"sha": "f35e755ff09b3c59b04c6a55b48b99e2da642cad", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f35e755ff09b3c59b04c6a55b48b99e2da642cad", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f35e755ff09b3c59b04c6a55b48b99e2da642cad"}]}, {"sha": "f35e755ff09b3c59b04c6a55b48b99e2da642cad", "commit": {"author": {"name": "Amol Nayak", "email": "amolnayak311@gmail.com", "date": "2012-08-31T15:09:20Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-28T23:03:47Z"}, "message": "INTEXT-5: Initial push for AWS core and S3 adapter\nFor reference see: https://jira.springsource.org/browse/INTEXT-5", "tree": {"sha": "fea71c20eb9f2e9a48567bf01357174af01f4d37", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/fea71c20eb9f2e9a48567bf01357174af01f4d37"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f35e755ff09b3c59b04c6a55b48b99e2da642cad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f35e755ff09b3c59b04c6a55b48b99e2da642cad", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f35e755ff09b3c59b04c6a55b48b99e2da642cad", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f35e755ff09b3c59b04c6a55b48b99e2da642cad/comments", "author": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d6caa21add112a77c2aa83ccbe8b64df234274b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1d6caa21add112a77c2aa83ccbe8b64df234274b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1d6caa21add112a77c2aa83ccbe8b64df234274b"}]}, {"sha": "1d6caa21add112a77c2aa83ccbe8b64df234274b", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-25T20:17:11Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-25T20:20:33Z"}, "message": "INTEXT-45 Fix INT-2936 Work Around\n\nWhen not using NIO, could get a message\n\"Max supported length exceeded\" if the\nsocket is closed abruptly.", "tree": {"sha": "7d7775acfef38bcf47dfb4d77fb6ba8b59318926", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/7d7775acfef38bcf47dfb4d77fb6ba8b59318926"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1d6caa21add112a77c2aa83ccbe8b64df234274b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1d6caa21add112a77c2aa83ccbe8b64df234274b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1d6caa21add112a77c2aa83ccbe8b64df234274b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1d6caa21add112a77c2aa83ccbe8b64df234274b/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e068031aba2f73cdc7ffed58531cc829e250c864", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e068031aba2f73cdc7ffed58531cc829e250c864", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e068031aba2f73cdc7ffed58531cc829e250c864"}]}, {"sha": "e068031aba2f73cdc7ffed58531cc829e250c864", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-24T23:01:01Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-24T23:01:01Z"}, "message": "INTEXT-47 WebSocket PING Polishing\n\nUse last receive time (instead of last send) because mostly\nwrite sockets (from the server perspective) may still time out.", "tree": {"sha": "c27562e06a291c13d5c56c431a7d69065d63d25d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c27562e06a291c13d5c56c431a7d69065d63d25d"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e068031aba2f73cdc7ffed58531cc829e250c864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e068031aba2f73cdc7ffed58531cc829e250c864", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e068031aba2f73cdc7ffed58531cc829e250c864", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e068031aba2f73cdc7ffed58531cc829e250c864/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1046c96923046b07e78387af28ba582ee0b7f66", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d1046c96923046b07e78387af28ba582ee0b7f66", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d1046c96923046b07e78387af28ba582ee0b7f66"}]}, {"sha": "d1046c96923046b07e78387af28ba582ee0b7f66", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-24T18:37:44Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-24T18:56:02Z"}, "message": "INTEXT-47 WebSocket Scheduled PINGs\n\nSend a ping every 25 seconds to all open WebSockets.\n\nConfigure interval using 'pingInterval' property on\nWebSocketTcpConnectionInterceptorFactory.\n\nSet to 0 to disable pings.", "tree": {"sha": "c90cdcb7d7c11a76f62d62bd695491cf548ffbb3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c90cdcb7d7c11a76f62d62bd695491cf548ffbb3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d1046c96923046b07e78387af28ba582ee0b7f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d1046c96923046b07e78387af28ba582ee0b7f66", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d1046c96923046b07e78387af28ba582ee0b7f66", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d1046c96923046b07e78387af28ba582ee0b7f66/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c3031346c46de1b6e009c834ebc8035982b681e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7c3031346c46de1b6e009c834ebc8035982b681e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7c3031346c46de1b6e009c834ebc8035982b681e"}]}, {"sha": "7c3031346c46de1b6e009c834ebc8035982b681e", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-02-23T22:15:09Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-02-23T22:15:09Z"}, "message": "[artifactory-release] Next development version", "tree": {"sha": "72175324d6e64ea53cf81227cb06a308544bf789", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/72175324d6e64ea53cf81227cb06a308544bf789"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7c3031346c46de1b6e009c834ebc8035982b681e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7c3031346c46de1b6e009c834ebc8035982b681e", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7c3031346c46de1b6e009c834ebc8035982b681e", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7c3031346c46de1b6e009c834ebc8035982b681e/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b914625920a26fb3a014242b522e3e4921224a58", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b914625920a26fb3a014242b522e3e4921224a58", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b914625920a26fb3a014242b522e3e4921224a58"}]}, {"sha": "b914625920a26fb3a014242b522e3e4921224a58", "commit": {"author": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-02-23T22:15:04Z"}, "committer": {"name": "Spring Buildmaster", "email": "buildmaster@springframework.org", "date": "2013-02-23T22:15:04Z"}, "message": "[artifactory-release] Release version 1.0.0.M1", "tree": {"sha": "4e350f1410fba68bfe235f2f8605093d5d4ebae5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4e350f1410fba68bfe235f2f8605093d5d4ebae5"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b914625920a26fb3a014242b522e3e4921224a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b914625920a26fb3a014242b522e3e4921224a58", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b914625920a26fb3a014242b522e3e4921224a58", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b914625920a26fb3a014242b522e3e4921224a58/comments", "author": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spring-buildmaster", "id": 1134463, "avatar_url": "https://avatars0.githubusercontent.com/u/1134463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-buildmaster", "html_url": "https://github.com/spring-buildmaster", "followers_url": "https://api.github.com/users/spring-buildmaster/followers", "following_url": "https://api.github.com/users/spring-buildmaster/following{/other_user}", "gists_url": "https://api.github.com/users/spring-buildmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-buildmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-buildmaster/subscriptions", "organizations_url": "https://api.github.com/users/spring-buildmaster/orgs", "repos_url": "https://api.github.com/users/spring-buildmaster/repos", "events_url": "https://api.github.com/users/spring-buildmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-buildmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d81ee80aba4da0b271836e032be06428662d01b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d81ee80aba4da0b271836e032be06428662d01b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7d81ee80aba4da0b271836e032be06428662d01b"}]}, {"sha": "7d81ee80aba4da0b271836e032be06428662d01b", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-22T21:34:15Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-22T21:34:15Z"}, "message": "INTEXT-45 Polishing Add CF Bean Name to Event", "tree": {"sha": "72175324d6e64ea53cf81227cb06a308544bf789", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/72175324d6e64ea53cf81227cb06a308544bf789"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/7d81ee80aba4da0b271836e032be06428662d01b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d81ee80aba4da0b271836e032be06428662d01b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/7d81ee80aba4da0b271836e032be06428662d01b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/7d81ee80aba4da0b271836e032be06428662d01b/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a49fbb4570807f9af591dbfb7acd4d0d41b8db42", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a49fbb4570807f9af591dbfb7acd4d0d41b8db42", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a49fbb4570807f9af591dbfb7acd4d0d41b8db42"}]}, {"sha": "a49fbb4570807f9af591dbfb7acd4d0d41b8db42", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-22T19:44:05Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-22T19:44:05Z"}, "message": "Merge pull request #28 from ghillert/INTEXT-35\n\n* ghillert-INTEXT-35:\n  INTEXT-35 - Add SMB Sample For reference see: https://jira.springsource.org/browse/INTEXT-35", "tree": {"sha": "35ec7de18ec057e263658f777c8cf01264873ed5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/35ec7de18ec057e263658f777c8cf01264873ed5"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a49fbb4570807f9af591dbfb7acd4d0d41b8db42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a49fbb4570807f9af591dbfb7acd4d0d41b8db42", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a49fbb4570807f9af591dbfb7acd4d0d41b8db42", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a49fbb4570807f9af591dbfb7acd4d0d41b8db42/comments", "author": null, "committer": null, "parents": [{"sha": "1c5ea0dfacbce4fa1ec236394397f2f2af407126", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1c5ea0dfacbce4fa1ec236394397f2f2af407126", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1c5ea0dfacbce4fa1ec236394397f2f2af407126"}, {"sha": "080c1e39d9fba5619b89fd7954d7ff88c353c974", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/080c1e39d9fba5619b89fd7954d7ff88c353c974", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/080c1e39d9fba5619b89fd7954d7ff88c353c974"}]}, {"sha": "080c1e39d9fba5619b89fd7954d7ff88c353c974", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-22T19:27:25Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-22T19:40:33Z"}, "message": "INTEXT-35 - Add SMB Sample\nFor reference see: https://jira.springsource.org/browse/INTEXT-35", "tree": {"sha": "35ec7de18ec057e263658f777c8cf01264873ed5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/35ec7de18ec057e263658f777c8cf01264873ed5"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/080c1e39d9fba5619b89fd7954d7ff88c353c974", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/080c1e39d9fba5619b89fd7954d7ff88c353c974", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/080c1e39d9fba5619b89fd7954d7ff88c353c974", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/080c1e39d9fba5619b89fd7954d7ff88c353c974/comments", "author": null, "committer": null, "parents": [{"sha": "1c5ea0dfacbce4fa1ec236394397f2f2af407126", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1c5ea0dfacbce4fa1ec236394397f2f2af407126", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1c5ea0dfacbce4fa1ec236394397f2f2af407126"}]}, {"sha": "1c5ea0dfacbce4fa1ec236394397f2f2af407126", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-22T17:20:31Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-22T17:20:31Z"}, "message": "Merge pull request #27 from ghillert/INTEXT-27-2\n\n* ghillert-INTEXT-27-2:\n  INTEXT-27 + INTEXT-46 Upgrade to Gradle 1.4", "tree": {"sha": "0b890e6193ad321b5044a4e12d74b746ec8c0d69", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/0b890e6193ad321b5044a4e12d74b746ec8c0d69"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1c5ea0dfacbce4fa1ec236394397f2f2af407126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1c5ea0dfacbce4fa1ec236394397f2f2af407126", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1c5ea0dfacbce4fa1ec236394397f2f2af407126", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1c5ea0dfacbce4fa1ec236394397f2f2af407126/comments", "author": null, "committer": null, "parents": [{"sha": "b1448bdc60a518d4c7dedf61addd89900fe19476", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1448bdc60a518d4c7dedf61addd89900fe19476", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b1448bdc60a518d4c7dedf61addd89900fe19476"}, {"sha": "ca708e08270ca20b88f5e26ad9aad4d2c769e8ee", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ca708e08270ca20b88f5e26ad9aad4d2c769e8ee", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ca708e08270ca20b88f5e26ad9aad4d2c769e8ee"}]}, {"sha": "ca708e08270ca20b88f5e26ad9aad4d2c769e8ee", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-22T17:04:49Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-22T17:04:49Z"}, "message": "INTEXT-27 + INTEXT-46 Upgrade to Gradle 1.4\n\n* INTEXT-46 - Make Build JDK7 Ready + Cleanup", "tree": {"sha": "0b890e6193ad321b5044a4e12d74b746ec8c0d69", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/0b890e6193ad321b5044a4e12d74b746ec8c0d69"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/ca708e08270ca20b88f5e26ad9aad4d2c769e8ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ca708e08270ca20b88f5e26ad9aad4d2c769e8ee", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/ca708e08270ca20b88f5e26ad9aad4d2c769e8ee", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/ca708e08270ca20b88f5e26ad9aad4d2c769e8ee/comments", "author": null, "committer": null, "parents": [{"sha": "b1448bdc60a518d4c7dedf61addd89900fe19476", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1448bdc60a518d4c7dedf61addd89900fe19476", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b1448bdc60a518d4c7dedf61addd89900fe19476"}]}, {"sha": "b1448bdc60a518d4c7dedf61addd89900fe19476", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-16T14:20:51Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-16T14:20:51Z"}, "message": "INTEXT-45 Add Work Around for INT-2936\n\nNeed to check for closed stream with NIO.", "tree": {"sha": "7ccc45f1bca09e416b896df85df3f7eeabd344ce", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/7ccc45f1bca09e416b896df85df3f7eeabd344ce"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b1448bdc60a518d4c7dedf61addd89900fe19476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1448bdc60a518d4c7dedf61addd89900fe19476", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b1448bdc60a518d4c7dedf61addd89900fe19476", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1448bdc60a518d4c7dedf61addd89900fe19476/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb8f24f7b2941d4d2b901317f1b0934c0ff90533", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eb8f24f7b2941d4d2b901317f1b0934c0ff90533", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eb8f24f7b2941d4d2b901317f1b0934c0ff90533"}]}, {"sha": "eb8f24f7b2941d4d2b901317f1b0934c0ff90533", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-15T21:15:33Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-15T21:15:33Z"}, "message": "Merge branch 'INTEXT-45'", "tree": {"sha": "c62f03819a35a63b520518779b1d47d68a3a11d3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c62f03819a35a63b520518779b1d47d68a3a11d3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/eb8f24f7b2941d4d2b901317f1b0934c0ff90533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eb8f24f7b2941d4d2b901317f1b0934c0ff90533", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eb8f24f7b2941d4d2b901317f1b0934c0ff90533", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eb8f24f7b2941d4d2b901317f1b0934c0ff90533/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ecf931be69fc02487394d6bdad8d03428bf4c56", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5ecf931be69fc02487394d6bdad8d03428bf4c56", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5ecf931be69fc02487394d6bdad8d03428bf4c56"}, {"sha": "870f76b58fe74db529de0cffa5dec6dd5b1c60f1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/870f76b58fe74db529de0cffa5dec6dd5b1c60f1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/870f76b58fe74db529de0cffa5dec6dd5b1c60f1"}]}, {"sha": "870f76b58fe74db529de0cffa5dec6dd5b1c60f1", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-15T18:59:39Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-15T21:14:31Z"}, "message": "INTEXT-45 SI 3.0.0.M1 - now  1.0.0.BUILD-SNAPSHOT\n\n- Use core TCP eventing for WebSocketEvents; change Type literals to enumerations\n- Use a WebSocketMessageMapper instead of rebuilding the message in the interceptor\n- Use core TCP Abstract Serializer\n- Use 3.0 API instead of reflection to get key for Deserializer state", "tree": {"sha": "c62f03819a35a63b520518779b1d47d68a3a11d3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c62f03819a35a63b520518779b1d47d68a3a11d3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/870f76b58fe74db529de0cffa5dec6dd5b1c60f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/870f76b58fe74db529de0cffa5dec6dd5b1c60f1", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/870f76b58fe74db529de0cffa5dec6dd5b1c60f1", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/870f76b58fe74db529de0cffa5dec6dd5b1c60f1/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f"}]}, {"sha": "5ecf931be69fc02487394d6bdad8d03428bf4c56", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-15T20:57:16Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-15T20:57:16Z"}, "message": "Revert \"INTEXT-45 Update to SI 3.0.0.M1\"\n\nThis reverts commit 5278aebd957653290f718c6e8ad5b38c7931f8ad.", "tree": {"sha": "3cb9178d6e775d02b753361aefb9e4e9665ca328", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3cb9178d6e775d02b753361aefb9e4e9665ca328"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/5ecf931be69fc02487394d6bdad8d03428bf4c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5ecf931be69fc02487394d6bdad8d03428bf4c56", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5ecf931be69fc02487394d6bdad8d03428bf4c56", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5ecf931be69fc02487394d6bdad8d03428bf4c56/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5278aebd957653290f718c6e8ad5b38c7931f8ad", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5278aebd957653290f718c6e8ad5b38c7931f8ad", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5278aebd957653290f718c6e8ad5b38c7931f8ad"}]}, {"sha": "5278aebd957653290f718c6e8ad5b38c7931f8ad", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-15T18:59:39Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-02-15T19:07:00Z"}, "message": "INTEXT-45 Update to SI 3.0.0.M1\n\n- Use core TCP eventing for WebSocketEvents; change Type literals to enumerations\n- Use a WebSocketMessageMapper instead of rebuilding the message in the interceptor\n- Use core TCP Abstract Serializer\n- Use 3.0 API instead of reflection to get key for Deserializer state", "tree": {"sha": "4180df32cdd43909fe3c9b52ae8e45a4bc0d06e1", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/4180df32cdd43909fe3c9b52ae8e45a4bc0d06e1"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/5278aebd957653290f718c6e8ad5b38c7931f8ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5278aebd957653290f718c6e8ad5b38c7931f8ad", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/5278aebd957653290f718c6e8ad5b38c7931f8ad", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/5278aebd957653290f718c6e8ad5b38c7931f8ad/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f"}]}, {"sha": "f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-08T16:51:47Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-08T16:51:47Z"}, "message": "Merge pull request #26 from dturanski/INTEXT-43\n\n* dturanski-INTEXT-43:\n  INTEXT-43 replaced ConnectionFactory with ServiceFactory\n  INTEXT-42 refactored SplunkEvent\n  Updated README\n  Updated README", "tree": {"sha": "3cb9178d6e775d02b753361aefb9e4e9665ca328", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3cb9178d6e775d02b753361aefb9e4e9665ca328"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f2d3a879467bb8b36b3ab7e9fc9e56b55daa200f/comments", "author": null, "committer": null, "parents": [{"sha": "978d80a9fb0db36df9d8c80aa9c81102db360af5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/978d80a9fb0db36df9d8c80aa9c81102db360af5", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/978d80a9fb0db36df9d8c80aa9c81102db360af5"}, {"sha": "885e2ebc11c6ea4d6e89f4df4ab1a3c0b59baa2b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/885e2ebc11c6ea4d6e89f4df4ab1a3c0b59baa2b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/885e2ebc11c6ea4d6e89f4df4ab1a3c0b59baa2b"}]}, {"sha": "885e2ebc11c6ea4d6e89f4df4ab1a3c0b59baa2b", "commit": {"author": {"name": "David Turanski", "email": "dturanski_at_vmware_dot_com", "date": "2013-02-05T23:23:00Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-08T16:51:05Z"}, "message": "INTEXT-43 replaced ConnectionFactory with ServiceFactory\n\n* remove trailing spaces from SplunkEventTests\n* remove trailing spaces from README.md", "tree": {"sha": "3cb9178d6e775d02b753361aefb9e4e9665ca328", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3cb9178d6e775d02b753361aefb9e4e9665ca328"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/885e2ebc11c6ea4d6e89f4df4ab1a3c0b59baa2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/885e2ebc11c6ea4d6e89f4df4ab1a3c0b59baa2b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/885e2ebc11c6ea4d6e89f4df4ab1a3c0b59baa2b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/885e2ebc11c6ea4d6e89f4df4ab1a3c0b59baa2b/comments", "author": null, "committer": null, "parents": [{"sha": "9eaed7e08ae1b4afcf4c0c07f87e35a26e24f02b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9eaed7e08ae1b4afcf4c0c07f87e35a26e24f02b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9eaed7e08ae1b4afcf4c0c07f87e35a26e24f02b"}]}, {"sha": "9eaed7e08ae1b4afcf4c0c07f87e35a26e24f02b", "commit": {"author": {"name": "David Turanski", "email": "dturanski_at_vmware_dot_com", "date": "2013-02-04T22:22:53Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-08T16:51:05Z"}, "message": "INTEXT-42 refactored SplunkEvent", "tree": {"sha": "be6880289f874ba7864527c7da2b077c9b974940", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/be6880289f874ba7864527c7da2b077c9b974940"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/9eaed7e08ae1b4afcf4c0c07f87e35a26e24f02b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9eaed7e08ae1b4afcf4c0c07f87e35a26e24f02b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9eaed7e08ae1b4afcf4c0c07f87e35a26e24f02b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9eaed7e08ae1b4afcf4c0c07f87e35a26e24f02b/comments", "author": null, "committer": null, "parents": [{"sha": "9ec12ee0105dda501b7774b8accf1573ff94ffa9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9ec12ee0105dda501b7774b8accf1573ff94ffa9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9ec12ee0105dda501b7774b8accf1573ff94ffa9"}]}, {"sha": "9ec12ee0105dda501b7774b8accf1573ff94ffa9", "commit": {"author": {"name": "David Turanski", "email": "dturanski_at_vmware_dot_com", "date": "2013-01-23T22:32:15Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-08T16:51:05Z"}, "message": "Updated README", "tree": {"sha": "6acd495600540e58035e6d5c31e77ccc84d92d6f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/6acd495600540e58035e6d5c31e77ccc84d92d6f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/9ec12ee0105dda501b7774b8accf1573ff94ffa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9ec12ee0105dda501b7774b8accf1573ff94ffa9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/9ec12ee0105dda501b7774b8accf1573ff94ffa9", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/9ec12ee0105dda501b7774b8accf1573ff94ffa9/comments", "author": null, "committer": null, "parents": [{"sha": "1adc83c1226e7d6a1b76462caedcba65fb0c76f8", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1adc83c1226e7d6a1b76462caedcba65fb0c76f8", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1adc83c1226e7d6a1b76462caedcba65fb0c76f8"}]}, {"sha": "1adc83c1226e7d6a1b76462caedcba65fb0c76f8", "commit": {"author": {"name": "David Turanski", "email": "dturanski_at_vmware_dot_com", "date": "2013-01-23T22:19:26Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-08T16:51:05Z"}, "message": "Updated README", "tree": {"sha": "a40b1fbcd22d7ad960d8eccd1e22998b7a93ed8f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/a40b1fbcd22d7ad960d8eccd1e22998b7a93ed8f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1adc83c1226e7d6a1b76462caedcba65fb0c76f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1adc83c1226e7d6a1b76462caedcba65fb0c76f8", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1adc83c1226e7d6a1b76462caedcba65fb0c76f8", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1adc83c1226e7d6a1b76462caedcba65fb0c76f8/comments", "author": null, "committer": null, "parents": [{"sha": "978d80a9fb0db36df9d8c80aa9c81102db360af5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/978d80a9fb0db36df9d8c80aa9c81102db360af5", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/978d80a9fb0db36df9d8c80aa9c81102db360af5"}]}, {"sha": "978d80a9fb0db36df9d8c80aa9c81102db360af5", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-04T19:16:54Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-04T19:16:54Z"}, "message": "Merge pull request #24 from dturanski/master\n\n* dturanski-master:\n  Add writer types to schema for Outbound Adapter and upgraded to Splunk 1.0.0 Update README", "tree": {"sha": "c2198f355e760453075a921e4d953c0d6755db2e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c2198f355e760453075a921e4d953c0d6755db2e"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/978d80a9fb0db36df9d8c80aa9c81102db360af5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/978d80a9fb0db36df9d8c80aa9c81102db360af5", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/978d80a9fb0db36df9d8c80aa9c81102db360af5", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/978d80a9fb0db36df9d8c80aa9c81102db360af5/comments", "author": null, "committer": null, "parents": [{"sha": "3dc96a7287bf6364b79054e3d68a4171852ca238", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3dc96a7287bf6364b79054e3d68a4171852ca238", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3dc96a7287bf6364b79054e3d68a4171852ca238"}, {"sha": "c9d14135cc4632b6b967942e933310d89b0b209b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c9d14135cc4632b6b967942e933310d89b0b209b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c9d14135cc4632b6b967942e933310d89b0b209b"}]}, {"sha": "c9d14135cc4632b6b967942e933310d89b0b209b", "commit": {"author": {"name": "David Turanski", "email": "dturanski_at_vmware_dot_com", "date": "2013-01-23T21:45:35Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-02-04T19:14:46Z"}, "message": "Add writer types to schema for Outbound Adapter and upgraded to Splunk 1.0.0\nUpdate README", "tree": {"sha": "c2198f355e760453075a921e4d953c0d6755db2e", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c2198f355e760453075a921e4d953c0d6755db2e"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c9d14135cc4632b6b967942e933310d89b0b209b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c9d14135cc4632b6b967942e933310d89b0b209b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c9d14135cc4632b6b967942e933310d89b0b209b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c9d14135cc4632b6b967942e933310d89b0b209b/comments", "author": null, "committer": null, "parents": [{"sha": "6584c606492a42b8d17dc7a24fd043fc808b66ef", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6584c606492a42b8d17dc7a24fd043fc808b66ef", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6584c606492a42b8d17dc7a24fd043fc808b66ef"}]}, {"sha": "3dc96a7287bf6364b79054e3d68a4171852ca238", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-22T19:39:58Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-22T19:39:58Z"}, "message": "Merge pull request #22 from otnateos/INTEXT-32\n\n* otnateos-INTEXT-32:\n  INTEXT-32 - Cleanup\n  INTEXT-32 - SMPP - Fix Failing Unit Tests - add mock smpp server for tests - enforce source address flip for inbound gateway - tidy up", "tree": {"sha": "c5fcc2d31d9374e154f45d10d30cd075480fbbce", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c5fcc2d31d9374e154f45d10d30cd075480fbbce"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/3dc96a7287bf6364b79054e3d68a4171852ca238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3dc96a7287bf6364b79054e3d68a4171852ca238", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/3dc96a7287bf6364b79054e3d68a4171852ca238", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/3dc96a7287bf6364b79054e3d68a4171852ca238/comments", "author": null, "committer": null, "parents": [{"sha": "705b0290336519b3d209c377325201ab9eb76af0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/705b0290336519b3d209c377325201ab9eb76af0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/705b0290336519b3d209c377325201ab9eb76af0"}, {"sha": "6584c606492a42b8d17dc7a24fd043fc808b66ef", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6584c606492a42b8d17dc7a24fd043fc808b66ef", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6584c606492a42b8d17dc7a24fd043fc808b66ef"}]}, {"sha": "6584c606492a42b8d17dc7a24fd043fc808b66ef", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-22T19:33:00Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-22T19:33:00Z"}, "message": "INTEXT-32 - Cleanup\n\n* Ensure ASL license headers are present\n* Add \"@since\" with \"1.0\" to the Java source files\n* Cleanup\n* The mockSmppServer server port is dynamically chosen\n* Centralize the mockSmppServer bean declaration to reduce duplication", "tree": {"sha": "c5fcc2d31d9374e154f45d10d30cd075480fbbce", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c5fcc2d31d9374e154f45d10d30cd075480fbbce"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/6584c606492a42b8d17dc7a24fd043fc808b66ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6584c606492a42b8d17dc7a24fd043fc808b66ef", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/6584c606492a42b8d17dc7a24fd043fc808b66ef", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/6584c606492a42b8d17dc7a24fd043fc808b66ef/comments", "author": null, "committer": null, "parents": [{"sha": "eaa36c6d03071d81b4a9ec1374507ea071204b58", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eaa36c6d03071d81b4a9ec1374507ea071204b58", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eaa36c6d03071d81b4a9ec1374507ea071204b58"}]}, {"sha": "eaa36c6d03071d81b4a9ec1374507ea071204b58", "commit": {"author": {"name": "Johanes Soetanto", "email": "otnateos@gmail.com", "date": "2013-01-15T01:21:07Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-18T19:35:15Z"}, "message": "INTEXT-32 - SMPP - Fix Failing Unit Tests\n- add mock smpp server for tests\n- enforce source address flip for inbound gateway\n- tidy up", "tree": {"sha": "bf1d299ba617b5ffc1788b765ee97183048f508b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/bf1d299ba617b5ffc1788b765ee97183048f508b"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/eaa36c6d03071d81b4a9ec1374507ea071204b58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eaa36c6d03071d81b4a9ec1374507ea071204b58", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eaa36c6d03071d81b4a9ec1374507ea071204b58", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/eaa36c6d03071d81b4a9ec1374507ea071204b58/comments", "author": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "705b0290336519b3d209c377325201ab9eb76af0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/705b0290336519b3d209c377325201ab9eb76af0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/705b0290336519b3d209c377325201ab9eb76af0"}]}, {"sha": "705b0290336519b3d209c377325201ab9eb76af0", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-17T22:29:00Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-17T22:30:52Z"}, "message": "Merge pull request #5 from amolnayak311/INTEXT-6\n\n* amolnayak311-INTEXT-6:\n  INTEXT-6 - Add AWS SES Samples\n  INTEXT-6: Add AWS core and SES adapter For reference see: https://jira.springsource.org/browse/INTEXT-6", "tree": {"sha": "8a266a2ce6c6a1352d9a789760542df4f183c8a3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8a266a2ce6c6a1352d9a789760542df4f183c8a3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/705b0290336519b3d209c377325201ab9eb76af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/705b0290336519b3d209c377325201ab9eb76af0", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/705b0290336519b3d209c377325201ab9eb76af0", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/705b0290336519b3d209c377325201ab9eb76af0/comments", "author": null, "committer": null, "parents": [{"sha": "a0c87a49e7db51cd60ae35f9e8a5015271174979", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a0c87a49e7db51cd60ae35f9e8a5015271174979", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a0c87a49e7db51cd60ae35f9e8a5015271174979"}, {"sha": "897fc0e9b402ef4cf7729dece281580c8aa7784b", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/897fc0e9b402ef4cf7729dece281580c8aa7784b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/897fc0e9b402ef4cf7729dece281580c8aa7784b"}]}, {"sha": "897fc0e9b402ef4cf7729dece281580c8aa7784b", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-17T22:14:54Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-17T22:26:36Z"}, "message": "INTEXT-6 - Add AWS SES Samples\n\n* Add SES JavaMailSender Sample\n* Add SES Spring Integration Sample\n* Refactor DefaultAmazonSESMailSender to implement JavaMailSender and delegate to JavaMailSenderImpl rather than extending it\n* Cleanup", "tree": {"sha": "8a266a2ce6c6a1352d9a789760542df4f183c8a3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/8a266a2ce6c6a1352d9a789760542df4f183c8a3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/897fc0e9b402ef4cf7729dece281580c8aa7784b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/897fc0e9b402ef4cf7729dece281580c8aa7784b", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/897fc0e9b402ef4cf7729dece281580c8aa7784b", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/897fc0e9b402ef4cf7729dece281580c8aa7784b/comments", "author": null, "committer": null, "parents": [{"sha": "639d4b27e0ef1a1bb309daf1b0a84c28f29bca70", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/639d4b27e0ef1a1bb309daf1b0a84c28f29bca70", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/639d4b27e0ef1a1bb309daf1b0a84c28f29bca70"}]}, {"sha": "639d4b27e0ef1a1bb309daf1b0a84c28f29bca70", "commit": {"author": {"name": "Amol Nayak", "email": "amolnayak311@gmail.com", "date": "2012-08-19T08:30:11Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-17T22:25:51Z"}, "message": "INTEXT-6: Add AWS core and SES adapter\nFor reference see: https://jira.springsource.org/browse/INTEXT-6", "tree": {"sha": "f786347484d4c4e0eac225a7f959cd70b06f0d4c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/f786347484d4c4e0eac225a7f959cd70b06f0d4c"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/639d4b27e0ef1a1bb309daf1b0a84c28f29bca70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/639d4b27e0ef1a1bb309daf1b0a84c28f29bca70", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/639d4b27e0ef1a1bb309daf1b0a84c28f29bca70", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/639d4b27e0ef1a1bb309daf1b0a84c28f29bca70/comments", "author": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b284307878b197c6322ea7b159c6d52d11081504", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b284307878b197c6322ea7b159c6d52d11081504", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b284307878b197c6322ea7b159c6d52d11081504"}]}, {"sha": "b284307878b197c6322ea7b159c6d52d11081504", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-01-14T17:26:05Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-17T22:25:50Z"}, "message": "Fix WebSocketEvent getter Visibility\n\nprotected instead of public", "tree": {"sha": "14d12c46bf9f0f4395f2f40a40b19f56191c567f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/14d12c46bf9f0f4395f2f40a40b19f56191c567f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b284307878b197c6322ea7b159c6d52d11081504", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b284307878b197c6322ea7b159c6d52d11081504", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b284307878b197c6322ea7b159c6d52d11081504", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b284307878b197c6322ea7b159c6d52d11081504/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d66b3c47947bf48b07584d9908773fde0b997dac", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d66b3c47947bf48b07584d9908773fde0b997dac", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d66b3c47947bf48b07584d9908773fde0b997dac"}]}, {"sha": "a0c87a49e7db51cd60ae35f9e8a5015271174979", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-01-14T17:26:05Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-01-14T17:28:56Z"}, "message": "Fix WebSocketEvent getter Visibility\n\nprotected instead of public", "tree": {"sha": "14d12c46bf9f0f4395f2f40a40b19f56191c567f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/14d12c46bf9f0f4395f2f40a40b19f56191c567f"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a0c87a49e7db51cd60ae35f9e8a5015271174979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a0c87a49e7db51cd60ae35f9e8a5015271174979", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a0c87a49e7db51cd60ae35f9e8a5015271174979", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a0c87a49e7db51cd60ae35f9e8a5015271174979/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50d34a60d4441f93a45c4f9eda99f996347a9a0d", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/50d34a60d4441f93a45c4f9eda99f996347a9a0d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/50d34a60d4441f93a45c4f9eda99f996347a9a0d"}]}, {"sha": "50d34a60d4441f93a45c4f9eda99f996347a9a0d", "commit": {"author": {"name": "Mark Fisher", "email": "markfisher@vmware.com", "date": "2013-01-14T17:02:39Z"}, "committer": {"name": "Mark Fisher", "email": "markfisher@vmware.com", "date": "2013-01-14T17:02:47Z"}, "message": "Merge pull request #19 from garyrussell/INTEXT-33\n\n* INTEXT-33:\n  Add WebSocket Events", "tree": {"sha": "35fa348f0cfc21f09da12907f077396a0242548a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/35fa348f0cfc21f09da12907f077396a0242548a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/50d34a60d4441f93a45c4f9eda99f996347a9a0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/50d34a60d4441f93a45c4f9eda99f996347a9a0d", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/50d34a60d4441f93a45c4f9eda99f996347a9a0d", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/50d34a60d4441f93a45c4f9eda99f996347a9a0d/comments", "author": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "873ff937a172568732d1df906366c036ef01e362", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/873ff937a172568732d1df906366c036ef01e362", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/873ff937a172568732d1df906366c036ef01e362"}, {"sha": "d66b3c47947bf48b07584d9908773fde0b997dac", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d66b3c47947bf48b07584d9908773fde0b997dac", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d66b3c47947bf48b07584d9908773fde0b997dac"}]}, {"sha": "d66b3c47947bf48b07584d9908773fde0b997dac", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-01-11T15:16:22Z"}, "committer": {"name": "Mark Fisher", "email": "markfisher@vmware.com", "date": "2013-01-14T17:00:15Z"}, "message": "Add WebSocket Events\n\nBuilding on TCP Event publishing in S.I. 3.0, add events\nfor 'HANDSHAKE_COMPLETE' and 'WEBSOCKET_CLOSED'.\n\nUpdate DemoService to consume these events.\n\nChange ws.html demo so that the service is started immediately\nand the 'command' box is now prefilled with 'stop'.\n\nWhen closing the websocket, the DemoService immediately\nremoves the connection from its map, rather than waiting for\nan exception on the write.", "tree": {"sha": "35fa348f0cfc21f09da12907f077396a0242548a", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/35fa348f0cfc21f09da12907f077396a0242548a"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/d66b3c47947bf48b07584d9908773fde0b997dac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d66b3c47947bf48b07584d9908773fde0b997dac", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/d66b3c47947bf48b07584d9908773fde0b997dac", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d66b3c47947bf48b07584d9908773fde0b997dac/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "873ff937a172568732d1df906366c036ef01e362", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/873ff937a172568732d1df906366c036ef01e362", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/873ff937a172568732d1df906366c036ef01e362"}]}, {"sha": "873ff937a172568732d1df906366c036ef01e362", "commit": {"author": {"name": "Mark Fisher", "email": "markfisher@vmware.com", "date": "2013-01-10T22:22:05Z"}, "committer": {"name": "Mark Fisher", "email": "markfisher@vmware.com", "date": "2013-01-10T22:22:11Z"}, "message": "Merge pull request #18 from garyrussell/INTEXT-33\n\n* INTEXT-33: Add Path and QueryString Headers", "tree": {"sha": "1be4546069b8bde37f478728d3a2aa96e9a01e27", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1be4546069b8bde37f478728d3a2aa96e9a01e27"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/873ff937a172568732d1df906366c036ef01e362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/873ff937a172568732d1df906366c036ef01e362", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/873ff937a172568732d1df906366c036ef01e362", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/873ff937a172568732d1df906366c036ef01e362/comments", "author": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1b0192ac5ded056cc9552eacddf8879451f57fa", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a1b0192ac5ded056cc9552eacddf8879451f57fa", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a1b0192ac5ded056cc9552eacddf8879451f57fa"}, {"sha": "1b47b546c3d8a85a80d1a35cb7581042cc9129e5", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b47b546c3d8a85a80d1a35cb7581042cc9129e5", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1b47b546c3d8a85a80d1a35cb7581042cc9129e5"}]}, {"sha": "1b47b546c3d8a85a80d1a35cb7581042cc9129e5", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-01-10T16:10:51Z"}, "committer": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2013-01-10T16:40:57Z"}, "message": "INTEXT-33 Add Path and QueryString Headers\n\nCapture the URI path and query string and provide in message\nheaders for each message received on a web socket.\n\nFix tests package name.", "tree": {"sha": "1be4546069b8bde37f478728d3a2aa96e9a01e27", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1be4546069b8bde37f478728d3a2aa96e9a01e27"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1b47b546c3d8a85a80d1a35cb7581042cc9129e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b47b546c3d8a85a80d1a35cb7581042cc9129e5", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1b47b546c3d8a85a80d1a35cb7581042cc9129e5", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1b47b546c3d8a85a80d1a35cb7581042cc9129e5/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1b0192ac5ded056cc9552eacddf8879451f57fa", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a1b0192ac5ded056cc9552eacddf8879451f57fa", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a1b0192ac5ded056cc9552eacddf8879451f57fa"}]}, {"sha": "a1b0192ac5ded056cc9552eacddf8879451f57fa", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-09T21:37:01Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-09T21:37:01Z"}, "message": "Merge pull request #16 from otnateos/INTEXT-30\n\n* otnateos-INTEXT-30:\n  INTEXT-30 - Cleanup\n  Change group id\n  INTEXT-30 - Add SMPP Support - update to version 2.2.0.BUILD-SNAPSHOT\n  INTEXT-30 - Add SMPP Support - migrate old sandbox project - add schema for channel adapters and gateways - change some package structure based on spring integration module package structure", "tree": {"sha": "41d68fc72caec68c384cd9ae1f29e32cd549ecc6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/41d68fc72caec68c384cd9ae1f29e32cd549ecc6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/a1b0192ac5ded056cc9552eacddf8879451f57fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a1b0192ac5ded056cc9552eacddf8879451f57fa", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a1b0192ac5ded056cc9552eacddf8879451f57fa", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a1b0192ac5ded056cc9552eacddf8879451f57fa/comments", "author": null, "committer": null, "parents": [{"sha": "2a9608397fd6edf2e8065cce469f0bc9502943b9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2a9608397fd6edf2e8065cce469f0bc9502943b9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2a9608397fd6edf2e8065cce469f0bc9502943b9"}, {"sha": "e4f2f8390921586afc1721976f84e335d217a2f4", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e4f2f8390921586afc1721976f84e335d217a2f4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e4f2f8390921586afc1721976f84e335d217a2f4"}]}, {"sha": "e4f2f8390921586afc1721976f84e335d217a2f4", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-09T21:32:39Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-09T21:32:39Z"}, "message": "INTEXT-30 - Cleanup", "tree": {"sha": "41d68fc72caec68c384cd9ae1f29e32cd549ecc6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/41d68fc72caec68c384cd9ae1f29e32cd549ecc6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/e4f2f8390921586afc1721976f84e335d217a2f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e4f2f8390921586afc1721976f84e335d217a2f4", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e4f2f8390921586afc1721976f84e335d217a2f4", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e4f2f8390921586afc1721976f84e335d217a2f4/comments", "author": null, "committer": null, "parents": [{"sha": "f2a0cb7cbad1af3eb763f5be412914c9b6a98100", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f2a0cb7cbad1af3eb763f5be412914c9b6a98100", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f2a0cb7cbad1af3eb763f5be412914c9b6a98100"}]}, {"sha": "f2a0cb7cbad1af3eb763f5be412914c9b6a98100", "commit": {"author": {"name": "Johanes Soetanto", "email": "otnateos@gmail.com", "date": "2012-12-19T11:17:42Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-08T21:07:42Z"}, "message": "Change group id", "tree": {"sha": "586369e58908e16cec43de3d638a302dc266d4a6", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/586369e58908e16cec43de3d638a302dc266d4a6"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/f2a0cb7cbad1af3eb763f5be412914c9b6a98100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f2a0cb7cbad1af3eb763f5be412914c9b6a98100", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/f2a0cb7cbad1af3eb763f5be412914c9b6a98100", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/f2a0cb7cbad1af3eb763f5be412914c9b6a98100/comments", "author": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0c5c0afcac5040bdea00bbeeacc4234e191276c", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c0c5c0afcac5040bdea00bbeeacc4234e191276c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c0c5c0afcac5040bdea00bbeeacc4234e191276c"}]}, {"sha": "c0c5c0afcac5040bdea00bbeeacc4234e191276c", "commit": {"author": {"name": "Johanes Soetanto", "email": "otnateos@gmail.com", "date": "2012-12-19T05:33:24Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-08T21:07:42Z"}, "message": "INTEXT-30 - Add SMPP Support\n- update to version 2.2.0.BUILD-SNAPSHOT", "tree": {"sha": "12303664203fb7626ba61207c69aba6540483e01", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/12303664203fb7626ba61207c69aba6540483e01"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c0c5c0afcac5040bdea00bbeeacc4234e191276c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c0c5c0afcac5040bdea00bbeeacc4234e191276c", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c0c5c0afcac5040bdea00bbeeacc4234e191276c", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c0c5c0afcac5040bdea00bbeeacc4234e191276c/comments", "author": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1f82c7554e21277ae2c05a2b6b64f6c56bb3acc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1f82c7554e21277ae2c05a2b6b64f6c56bb3acc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b1f82c7554e21277ae2c05a2b6b64f6c56bb3acc"}]}, {"sha": "b1f82c7554e21277ae2c05a2b6b64f6c56bb3acc", "commit": {"author": {"name": "Johanes Soetanto", "email": "otnateos@gmail.com", "date": "2012-12-19T04:43:02Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-08T21:07:42Z"}, "message": "INTEXT-30 - Add SMPP Support\n- migrate old sandbox project\n- add schema for channel adapters and gateways\n- change some package structure based on spring integration module package structure", "tree": {"sha": "72766e85cec8b8664b3efd7df6a90af8413626e0", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/72766e85cec8b8664b3efd7df6a90af8413626e0"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/b1f82c7554e21277ae2c05a2b6b64f6c56bb3acc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1f82c7554e21277ae2c05a2b6b64f6c56bb3acc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b1f82c7554e21277ae2c05a2b6b64f6c56bb3acc", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/b1f82c7554e21277ae2c05a2b6b64f6c56bb3acc/comments", "author": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a9608397fd6edf2e8065cce469f0bc9502943b9", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2a9608397fd6edf2e8065cce469f0bc9502943b9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2a9608397fd6edf2e8065cce469f0bc9502943b9"}]}, {"sha": "2a9608397fd6edf2e8065cce469f0bc9502943b9", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-07T21:37:47Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-07T21:47:31Z"}, "message": "Merge pull request #17 from garyrussell/INTEXT-24\n\n* garyrussell-INTEXT-24:\n  INTEXT-24 Lightweight WebSocket Server", "tree": {"sha": "1367e5457b62b2bd82293b48693ec3dee5ec9531", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/1367e5457b62b2bd82293b48693ec3dee5ec9531"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2a9608397fd6edf2e8065cce469f0bc9502943b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2a9608397fd6edf2e8065cce469f0bc9502943b9", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2a9608397fd6edf2e8065cce469f0bc9502943b9", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2a9608397fd6edf2e8065cce469f0bc9502943b9/comments", "author": null, "committer": null, "parents": [{"sha": "433a26e956acb1b53609c519336cc26433d45efc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/433a26e956acb1b53609c519336cc26433d45efc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/433a26e956acb1b53609c519336cc26433d45efc"}, {"sha": "2034dbb6c88967b3d459475e1dc9c0c80bc01642", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2034dbb6c88967b3d459475e1dc9c0c80bc01642", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2034dbb6c88967b3d459475e1dc9c0c80bc01642"}]}, {"sha": "2034dbb6c88967b3d459475e1dc9c0c80bc01642", "commit": {"author": {"name": "Gary Russell", "email": "grussell@vmware.com", "date": "2012-10-14T17:50:43Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2013-01-07T21:35:02Z"}, "message": "INTEXT-24 Lightweight WebSocket Server\n\n* Add Lightweight WebSocket Server Support\n* Run WebSocketServerTests and open ws.html in a browser.\n  - Sending 'start' begins sending an incrementing # once per second.\n  - 'stop' stops the stream (leaving the socket open), 'start' resumes again.\n  - Test terminates after 60 seconds.\n* Fixes and Improvements for WebSocket Server\n  - fix masking\n  - fix bytes sent\n  - add error handling to remove dead sockets\n  - create new web page instead of using vert.x example\n  - add status box\n  - automatically update message to send to start/stop appropriately\n  - update SI to 2.2.0.RELEASE\n  - change test to a main()\n* Use Interceptor for Handshake\n* Move handshake to an interceptor instead of doing it in the SI flow.\n* Add close button to web page.\n* Add code to remove state from deserializer on close.\n* Implement Orderly Close Per RFC6455\n* Rename Packages - org.springframework.integration.x.*\n* Change Version to 0.1.0.\n* Autbahn Test Suite - All Tests Pass\n  - 1.1.x tests from the Autobahn Test Suite.\n  - Autobahn 1.2.x Tests (Binary)\n  - Autobahn Test 2.* (Ping/Pong)\n  - Autobahn Tests 3.* (Reserved Bits)\n  - Autobahn Tests 4.* (Invalid Opcodes)\n  - Autobahn 5.* (Fragmentation)\n  - Autobahn 6.* (UTF-8 Handling)\n  - Autobahn Tests 7.* (Close Handling)\n* \"non-strict\" results - fast fail on bad UTF-8. We currently don't detect the bad UTF-8 until all fragments are received.\n* Run AutobahnTests.java and add the following to fuzzingclient.json...\n\n    {\"agent\": \"SIServer\", \"url\": \"ws://localhost:18080\", \"options\": {\"version\": 18}}\n\n* Remove sysout\n* Replace with logger.debug().\n* Remove SockJS Dependencies\n  - Project started as a SockJS client; WebSocket classes were incorrectly dependent on some SockJS code.\n* Extracted the WebSocket code to its own class hierarchy.\n* Test Autobahn with SSL (wss://...)\n  - Add trust store and key store.\n  - Add config to listen for wss: as well as ws: connections\n* To test Autobahn for both ws and wss - In the wstest config file use:\n\n    \"servers\": [\n        {\"agent\": \"SIServer\", \"url\": \"ws://localhost:18080\", \"options\": {\"version\": 18}},\n        {\"agent\": \"SIServerSSL\", \"url\": \"wss://localhost:28080\", \"options\": {\"version\": 18}}\n              ],\n\n* Polishing + Resequence when Using NIO\n  - Improve debug logging\n  - Clear fragments\n  - Add ResequencingMessageHandler to resequence messages when using NIO (frames can arrive on different threads, out of order; this causes issues with the Autobahn tests.\n* Reject Non WS Connections\n  - only apply Resequencer if NIO Connection factory is configured with apply-sequence.\n  - check protocol version - only 13 is supported.", "tree": {"sha": "dc881104ff295de6608df893677a881c2901a154", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/dc881104ff295de6608df893677a881c2901a154"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/2034dbb6c88967b3d459475e1dc9c0c80bc01642", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2034dbb6c88967b3d459475e1dc9c0c80bc01642", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/2034dbb6c88967b3d459475e1dc9c0c80bc01642", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/2034dbb6c88967b3d459475e1dc9c0c80bc01642/comments", "author": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbf5621326b9d3535f4c207e7b6f75de88dba42f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bbf5621326b9d3535f4c207e7b6f75de88dba42f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bbf5621326b9d3535f4c207e7b6f75de88dba42f"}]}, {"sha": "c6718af46cca7ed33fee6d5f0991c6c92106e8df", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2012-12-04T19:31:00Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2012-12-04T19:31:00Z"}, "message": "INTSAMPLES-99 Upgrade samples to SI 2.2.0.RELEASE\nFor reference see: https://jira.springsource.org/browse/INTSAMPLES-99", "tree": {"sha": "6111bf287809106aff82b6a5b7cd810f2960a4dc", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/6111bf287809106aff82b6a5b7cd810f2960a4dc"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/c6718af46cca7ed33fee6d5f0991c6c92106e8df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6718af46cca7ed33fee6d5f0991c6c92106e8df", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/c6718af46cca7ed33fee6d5f0991c6c92106e8df", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/c6718af46cca7ed33fee6d5f0991c6c92106e8df/comments", "author": null, "committer": null, "parents": [{"sha": "1eccb4c1e7d13ee058193521ec06f1f19128c169", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1eccb4c1e7d13ee058193521ec06f1f19128c169", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1eccb4c1e7d13ee058193521ec06f1f19128c169"}]}, {"sha": "1eccb4c1e7d13ee058193521ec06f1f19128c169", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2012-10-29T02:51:14Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2012-11-28T22:08:51Z"}, "message": "INTSAMPLES-89 - Upgrade to Spring Integration 2.2 RC3\n\n* Test samples\n* Polish documentation\n* Polish code\n\nFor reference see: https://jira.springsource.org/browse/INTSAMPLES-89", "tree": {"sha": "3cea4305dfe47836998647e7236d77c244977ef3", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/3cea4305dfe47836998647e7236d77c244977ef3"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/1eccb4c1e7d13ee058193521ec06f1f19128c169", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1eccb4c1e7d13ee058193521ec06f1f19128c169", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/1eccb4c1e7d13ee058193521ec06f1f19128c169", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/1eccb4c1e7d13ee058193521ec06f1f19128c169/comments", "author": null, "committer": null, "parents": [{"sha": "e5e28c3bb607f0f36f7d1b805ebe82904c5f04df", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/e5e28c3bb607f0f36f7d1b805ebe82904c5f04df", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/e5e28c3bb607f0f36f7d1b805ebe82904c5f04df"}]}, {"sha": "433a26e956acb1b53609c519336cc26433d45efc", "commit": {"author": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2012-11-08T15:53:57Z"}, "committer": {"name": "Gunnar Hillert", "email": "gunnar@hillert.com", "date": "2012-11-08T15:53:57Z"}, "message": "Merge pull request #15 from ghillert/INTEXT-27\n\nINTEXT-27 - SMB Adapter - Upgrade build to Gradle 1.2", "tree": {"sha": "c18afed999be531b88971bdcd7f21e7f42babadd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c18afed999be531b88971bdcd7f21e7f42babadd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/433a26e956acb1b53609c519336cc26433d45efc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/433a26e956acb1b53609c519336cc26433d45efc", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/433a26e956acb1b53609c519336cc26433d45efc", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/433a26e956acb1b53609c519336cc26433d45efc/comments", "author": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "063253d2830465206f4f017439efd0d35dba0b26", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/063253d2830465206f4f017439efd0d35dba0b26", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/063253d2830465206f4f017439efd0d35dba0b26"}, {"sha": "bbf5621326b9d3535f4c207e7b6f75de88dba42f", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bbf5621326b9d3535f4c207e7b6f75de88dba42f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bbf5621326b9d3535f4c207e7b6f75de88dba42f"}]}, {"sha": "bbf5621326b9d3535f4c207e7b6f75de88dba42f", "commit": {"author": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2012-11-08T15:52:07Z"}, "committer": {"name": "Gunnar Hillert", "email": "ghillert@vmware.com", "date": "2012-11-08T15:52:07Z"}, "message": "INTEXT-27 - SMB Adapter - Upgrade build to Gradle 1.2\nFor reference: https://jira.springsource.org/browse/INTEXT-27", "tree": {"sha": "c18afed999be531b88971bdcd7f21e7f42babadd", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees/c18afed999be531b88971bdcd7f21e7f42babadd"}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits/bbf5621326b9d3535f4c207e7b6f75de88dba42f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bbf5621326b9d3535f4c207e7b6f75de88dba42f", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/bbf5621326b9d3535f4c207e7b6f75de88dba42f", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/bbf5621326b9d3535f4c207e7b6f75de88dba42f/comments", "author": null, "committer": null, "parents": [{"sha": "063253d2830465206f4f017439efd0d35dba0b26", "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/063253d2830465206f4f017439efd0d35dba0b26", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/063253d2830465206f4f017439efd0d35dba0b26"}]}], "pull_requests": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/163", "id": 76414724, "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/163", "diff_url": "https://github.com/spring-projects/spring-integration-extensions/pull/163.diff", "patch_url": "https://github.com/spring-projects/spring-integration-extensions/pull/163.patch", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163", "number": 163, "state": "open", "locked": false, "title": "Migrate etcd features from Spring Cloud", "user": {"login": "dsyer", "id": 124075, "avatar_url": "https://avatars1.githubusercontent.com/u/124075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsyer", "html_url": "https://github.com/dsyer", "followers_url": "https://api.github.com/users/dsyer/followers", "following_url": "https://api.github.com/users/dsyer/following{/other_user}", "gists_url": "https://api.github.com/users/dsyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsyer/subscriptions", "organizations_url": "https://api.github.com/users/dsyer/orgs", "repos_url": "https://api.github.com/users/dsyer/repos", "events_url": "https://api.github.com/users/dsyer/events{/privacy}", "received_events_url": "https://api.github.com/users/dsyer/received_events", "type": "User", "site_admin": false}, "body": null, "created_at": "2016-07-06T11:06:32Z", "updated_at": "2018-02-06T19:43:09Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "f8d5cb301ed82cad0f27d2f2825886ac5df82a36", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/163/commits", "review_comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/163/comments", "review_comment_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163/comments", "statuses_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/77ff9b8de04c98fe0542e8f5aa923f351ad5524d", "head": {"label": "dsyer:feature/etcd", "ref": "feature/etcd", "sha": "77ff9b8de04c98fe0542e8f5aa923f351ad5524d", "user": {"login": "dsyer", "id": 124075, "avatar_url": "https://avatars1.githubusercontent.com/u/124075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsyer", "html_url": "https://github.com/dsyer", "followers_url": "https://api.github.com/users/dsyer/followers", "following_url": "https://api.github.com/users/dsyer/following{/other_user}", "gists_url": "https://api.github.com/users/dsyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsyer/subscriptions", "organizations_url": "https://api.github.com/users/dsyer/orgs", "repos_url": "https://api.github.com/users/dsyer/repos", "events_url": "https://api.github.com/users/dsyer/events{/privacy}", "received_events_url": "https://api.github.com/users/dsyer/received_events", "type": "User", "site_admin": false}, "repo": {"id": 62706857, "name": "spring-integration-extensions", "full_name": "dsyer/spring-integration-extensions", "owner": {"login": "dsyer", "id": 124075, "avatar_url": "https://avatars1.githubusercontent.com/u/124075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsyer", "html_url": "https://github.com/dsyer", "followers_url": "https://api.github.com/users/dsyer/followers", "following_url": "https://api.github.com/users/dsyer/following{/other_user}", "gists_url": "https://api.github.com/users/dsyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsyer/subscriptions", "organizations_url": "https://api.github.com/users/dsyer/orgs", "repos_url": "https://api.github.com/users/dsyer/repos", "events_url": "https://api.github.com/users/dsyer/events{/privacy}", "received_events_url": "https://api.github.com/users/dsyer/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/dsyer/spring-integration-extensions", "description": "The Spring Integration Extensions project provides extension components for Spring Integration", "fork": true, "url": "https://api.github.com/repos/dsyer/spring-integration-extensions", "forks_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/forks", "keys_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/teams", "hooks_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/hooks", "issue_events_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/issues/events{/number}", "events_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/events", "assignees_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/assignees{/user}", "branches_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/branches{/branch}", "tags_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/tags", "blobs_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/statuses/{sha}", "languages_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/languages", "stargazers_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/stargazers", "contributors_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/contributors", "subscribers_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/subscribers", "subscription_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/subscription", "commits_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/contents/{+path}", "compare_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/merges", "archive_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/downloads", "issues_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/issues{/number}", "pulls_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/pulls{/number}", "milestones_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/milestones{/number}", "notifications_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/labels{/name}", "releases_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/releases{/id}", "deployments_url": "https://api.github.com/repos/dsyer/spring-integration-extensions/deployments", "created_at": "2016-07-06T09:01:46Z", "updated_at": "2016-07-06T09:01:48Z", "pushed_at": "2016-07-07T13:35:17Z", "git_url": "git://github.com/dsyer/spring-integration-extensions.git", "ssh_url": "git@github.com:dsyer/spring-integration-extensions.git", "clone_url": "https://github.com/dsyer/spring-integration-extensions.git", "svn_url": "https://github.com/dsyer/spring-integration-extensions", "homepage": "http://www.springintegration.org/", "size": 2195, "stargazers_count": 0, "watchers_count": 0, "language": "Java", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "spring-projects:master", "ref": "master", "sha": "f9c7cccf7572e70b8bf47d909047919299651903", "user": {"login": "spring-projects", "id": 317776, "avatar_url": "https://avatars0.githubusercontent.com/u/317776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-projects", "html_url": "https://github.com/spring-projects", "followers_url": "https://api.github.com/users/spring-projects/followers", "following_url": "https://api.github.com/users/spring-projects/following{/other_user}", "gists_url": "https://api.github.com/users/spring-projects/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-projects/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-projects/subscriptions", "organizations_url": "https://api.github.com/users/spring-projects/orgs", "repos_url": "https://api.github.com/users/spring-projects/repos", "events_url": "https://api.github.com/users/spring-projects/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-projects/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 4653065, "name": "spring-integration-extensions", "full_name": "spring-projects/spring-integration-extensions", "owner": {"login": "spring-projects", "id": 317776, "avatar_url": "https://avatars0.githubusercontent.com/u/317776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-projects", "html_url": "https://github.com/spring-projects", "followers_url": "https://api.github.com/users/spring-projects/followers", "following_url": "https://api.github.com/users/spring-projects/following{/other_user}", "gists_url": "https://api.github.com/users/spring-projects/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-projects/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-projects/subscriptions", "organizations_url": "https://api.github.com/users/spring-projects/orgs", "repos_url": "https://api.github.com/users/spring-projects/repos", "events_url": "https://api.github.com/users/spring-projects/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-projects/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/spring-projects/spring-integration-extensions", "description": "The Spring Integration Extensions project provides extension components for Spring Integration", "fork": false, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions", "forks_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/forks", "keys_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/teams", "hooks_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/hooks", "issue_events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/events{/number}", "events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/events", "assignees_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/assignees{/user}", "branches_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/branches{/branch}", "tags_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/tags", "blobs_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/refs{/sha}", "trees_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/{sha}", "languages_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/languages", "stargazers_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/stargazers", "contributors_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/contributors", "subscribers_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/subscribers", "subscription_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/subscription", "commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits{/sha}", "git_commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits{/sha}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments{/number}", "issue_comment_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments{/number}", "contents_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/contents/{+path}", "compare_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/merges", "archive_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/downloads", "issues_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues{/number}", "pulls_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls{/number}", "milestones_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/milestones{/number}", "notifications_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/labels{/name}", "releases_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/releases{/id}", "deployments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/deployments", "created_at": "2012-06-13T16:05:52Z", "updated_at": "2018-02-07T18:43:20Z", "pushed_at": "2018-02-09T20:44:29Z", "git_url": "git://github.com/spring-projects/spring-integration-extensions.git", "ssh_url": "git@github.com:spring-projects/spring-integration-extensions.git", "clone_url": "https://github.com/spring-projects/spring-integration-extensions.git", "svn_url": "https://github.com/spring-projects/spring-integration-extensions", "homepage": "http://www.springintegration.org/", "size": 2375, "stargazers_count": 180, "watchers_count": 180, "language": "Java", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 208, "mirror_url": null, "archived": false, "open_issues_count": 5, "license": null, "forks": 208, "open_issues": 5, "watchers": 180, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/163"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/163"}, "issue": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163"}, "comments": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/163/comments"}, "review_comments": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/163/comments"}, "review_comment": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/163/commits"}, "statuses": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/77ff9b8de04c98fe0542e8f5aa923f351ad5524d"}}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/148", "id": 39271747, "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/148", "diff_url": "https://github.com/spring-projects/spring-integration-extensions/pull/148.diff", "patch_url": "https://github.com/spring-projects/spring-integration-extensions/pull/148.patch", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148", "number": 148, "state": "open", "locked": false, "title": "Intext 178", "user": {"login": "nodabadri", "id": 12532706, "avatar_url": "https://avatars0.githubusercontent.com/u/12532706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodabadri", "html_url": "https://github.com/nodabadri", "followers_url": "https://api.github.com/users/nodabadri/followers", "following_url": "https://api.github.com/users/nodabadri/following{/other_user}", "gists_url": "https://api.github.com/users/nodabadri/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodabadri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodabadri/subscriptions", "organizations_url": "https://api.github.com/users/nodabadri/orgs", "repos_url": "https://api.github.com/users/nodabadri/repos", "events_url": "https://api.github.com/users/nodabadri/events{/privacy}", "received_events_url": "https://api.github.com/users/nodabadri/received_events", "type": "User", "site_admin": false}, "body": "Changes in SmesMessageSpecification.java and SmppInboundGateway.java for handling USSD operations\n", "created_at": "2015-07-06T14:15:45Z", "updated_at": "2015-08-18T00:27:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "969996fb5f91c6d7d1494fc4185d183d3e14dce2", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/148/commits", "review_comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/148/comments", "review_comment_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148/comments", "statuses_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/e872928db5492430f9be81d93b4e6c9ecaaadb0f", "head": {"label": "nodabadri:INTEXT-178", "ref": "INTEXT-178", "sha": "e872928db5492430f9be81d93b4e6c9ecaaadb0f", "user": {"login": "nodabadri", "id": 12532706, "avatar_url": "https://avatars0.githubusercontent.com/u/12532706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodabadri", "html_url": "https://github.com/nodabadri", "followers_url": "https://api.github.com/users/nodabadri/followers", "following_url": "https://api.github.com/users/nodabadri/following{/other_user}", "gists_url": "https://api.github.com/users/nodabadri/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodabadri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodabadri/subscriptions", "organizations_url": "https://api.github.com/users/nodabadri/orgs", "repos_url": "https://api.github.com/users/nodabadri/repos", "events_url": "https://api.github.com/users/nodabadri/events{/privacy}", "received_events_url": "https://api.github.com/users/nodabadri/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "spring-projects:master", "ref": "master", "sha": "5c136e45c967da58c165db3ebf553035a21dc4f4", "user": {"login": "spring-projects", "id": 317776, "avatar_url": "https://avatars0.githubusercontent.com/u/317776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-projects", "html_url": "https://github.com/spring-projects", "followers_url": "https://api.github.com/users/spring-projects/followers", "following_url": "https://api.github.com/users/spring-projects/following{/other_user}", "gists_url": "https://api.github.com/users/spring-projects/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-projects/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-projects/subscriptions", "organizations_url": "https://api.github.com/users/spring-projects/orgs", "repos_url": "https://api.github.com/users/spring-projects/repos", "events_url": "https://api.github.com/users/spring-projects/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-projects/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 4653065, "name": "spring-integration-extensions", "full_name": "spring-projects/spring-integration-extensions", "owner": {"login": "spring-projects", "id": 317776, "avatar_url": "https://avatars0.githubusercontent.com/u/317776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-projects", "html_url": "https://github.com/spring-projects", "followers_url": "https://api.github.com/users/spring-projects/followers", "following_url": "https://api.github.com/users/spring-projects/following{/other_user}", "gists_url": "https://api.github.com/users/spring-projects/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-projects/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-projects/subscriptions", "organizations_url": "https://api.github.com/users/spring-projects/orgs", "repos_url": "https://api.github.com/users/spring-projects/repos", "events_url": "https://api.github.com/users/spring-projects/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-projects/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/spring-projects/spring-integration-extensions", "description": "The Spring Integration Extensions project provides extension components for Spring Integration", "fork": false, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions", "forks_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/forks", "keys_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/teams", "hooks_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/hooks", "issue_events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/events{/number}", "events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/events", "assignees_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/assignees{/user}", "branches_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/branches{/branch}", "tags_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/tags", "blobs_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/refs{/sha}", "trees_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/{sha}", "languages_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/languages", "stargazers_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/stargazers", "contributors_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/contributors", "subscribers_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/subscribers", "subscription_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/subscription", "commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits{/sha}", "git_commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits{/sha}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments{/number}", "issue_comment_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments{/number}", "contents_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/contents/{+path}", "compare_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/merges", "archive_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/downloads", "issues_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues{/number}", "pulls_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls{/number}", "milestones_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/milestones{/number}", "notifications_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/labels{/name}", "releases_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/releases{/id}", "deployments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/deployments", "created_at": "2012-06-13T16:05:52Z", "updated_at": "2018-02-07T18:43:20Z", "pushed_at": "2018-02-09T20:44:29Z", "git_url": "git://github.com/spring-projects/spring-integration-extensions.git", "ssh_url": "git@github.com:spring-projects/spring-integration-extensions.git", "clone_url": "https://github.com/spring-projects/spring-integration-extensions.git", "svn_url": "https://github.com/spring-projects/spring-integration-extensions", "homepage": "http://www.springintegration.org/", "size": 2375, "stargazers_count": 180, "watchers_count": 180, "language": "Java", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 208, "mirror_url": null, "archived": false, "open_issues_count": 5, "license": null, "forks": 208, "open_issues": 5, "watchers": 180, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/148"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/148"}, "issue": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148"}, "comments": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/148/comments"}, "review_comments": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/148/comments"}, "review_comment": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/148/commits"}, "statuses": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/e872928db5492430f9be81d93b4e6c9ecaaadb0f"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/11", "id": 2502519, "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11", "diff_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11.diff", "patch_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11.patch", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11", "number": 11, "state": "open", "locked": false, "title": "INTEXT-19: Push Notification adapters for Android devices", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "The PR is for adding the initial support for sending push notifications to mobile and hand held devices.\nThis is the first of the many services to be supported from Spring Integration for pushing to mobile devices from java applications.\n\nThe umbrella JIRA for this is\nhttps://jira.springsource.org/browse/INTEXT-18\n\nand the specific JIRA to support push to Android devices is https://jira.springsource.org/browse/INTEXT-19\n", "created_at": "2012-10-01T15:18:16Z", "updated_at": "2018-02-06T19:43:09Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "d00a908e6b67bdf3adc58bac8b2930d711fa8255", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/11/commits", "review_comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/11/comments", "review_comment_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11/comments", "statuses_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/0ada4bce94049a4239ee50f0d6d80d6cad2b8592", "head": {"label": "amolnayak311:INTEXT-19", "ref": "INTEXT-19", "sha": "0ada4bce94049a4239ee50f0d6d80d6cad2b8592", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "repo": {"id": 5344178, "name": "spring-integration-extensions", "full_name": "amolnayak311/spring-integration-extensions", "owner": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/amolnayak311/spring-integration-extensions", "description": "The Spring Integration Extensions project will serve as the repository for extension components for Spring Integration", "fork": true, "url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions", "forks_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/forks", "keys_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/teams", "hooks_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/hooks", "issue_events_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/issues/events{/number}", "events_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/events", "assignees_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/assignees{/user}", "branches_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/branches{/branch}", "tags_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/tags", "blobs_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/git/refs{/sha}", "trees_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/statuses/{sha}", "languages_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/languages", "stargazers_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/stargazers", "contributors_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/contributors", "subscribers_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/subscribers", "subscription_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/subscription", "commits_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/commits{/sha}", "git_commits_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/git/commits{/sha}", "comments_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/comments{/number}", "issue_comment_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/issues/comments{/number}", "contents_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/contents/{+path}", "compare_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/merges", "archive_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/downloads", "issues_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/issues{/number}", "pulls_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/pulls{/number}", "milestones_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/milestones{/number}", "notifications_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/labels{/name}", "releases_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/releases{/id}", "deployments_url": "https://api.github.com/repos/amolnayak311/spring-integration-extensions/deployments", "created_at": "2012-08-08T16:10:42Z", "updated_at": "2013-12-29T08:06:47Z", "pushed_at": "2013-07-23T17:39:29Z", "git_url": "git://github.com/amolnayak311/spring-integration-extensions.git", "ssh_url": "git@github.com:amolnayak311/spring-integration-extensions.git", "clone_url": "https://github.com/amolnayak311/spring-integration-extensions.git", "svn_url": "https://github.com/amolnayak311/spring-integration-extensions", "homepage": null, "size": 1447, "stargazers_count": 0, "watchers_count": 0, "language": "Java", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 1, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "spring-projects:master", "ref": "master", "sha": "f9c7cccf7572e70b8bf47d909047919299651903", "user": {"login": "spring-projects", "id": 317776, "avatar_url": "https://avatars0.githubusercontent.com/u/317776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-projects", "html_url": "https://github.com/spring-projects", "followers_url": "https://api.github.com/users/spring-projects/followers", "following_url": "https://api.github.com/users/spring-projects/following{/other_user}", "gists_url": "https://api.github.com/users/spring-projects/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-projects/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-projects/subscriptions", "organizations_url": "https://api.github.com/users/spring-projects/orgs", "repos_url": "https://api.github.com/users/spring-projects/repos", "events_url": "https://api.github.com/users/spring-projects/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-projects/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 4653065, "name": "spring-integration-extensions", "full_name": "spring-projects/spring-integration-extensions", "owner": {"login": "spring-projects", "id": 317776, "avatar_url": "https://avatars0.githubusercontent.com/u/317776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spring-projects", "html_url": "https://github.com/spring-projects", "followers_url": "https://api.github.com/users/spring-projects/followers", "following_url": "https://api.github.com/users/spring-projects/following{/other_user}", "gists_url": "https://api.github.com/users/spring-projects/gists{/gist_id}", "starred_url": "https://api.github.com/users/spring-projects/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spring-projects/subscriptions", "organizations_url": "https://api.github.com/users/spring-projects/orgs", "repos_url": "https://api.github.com/users/spring-projects/repos", "events_url": "https://api.github.com/users/spring-projects/events{/privacy}", "received_events_url": "https://api.github.com/users/spring-projects/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/spring-projects/spring-integration-extensions", "description": "The Spring Integration Extensions project provides extension components for Spring Integration", "fork": false, "url": "https://api.github.com/repos/spring-projects/spring-integration-extensions", "forks_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/forks", "keys_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/teams", "hooks_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/hooks", "issue_events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/events{/number}", "events_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/events", "assignees_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/assignees{/user}", "branches_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/branches{/branch}", "tags_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/tags", "blobs_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/refs{/sha}", "trees_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/{sha}", "languages_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/languages", "stargazers_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/stargazers", "contributors_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/contributors", "subscribers_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/subscribers", "subscription_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/subscription", "commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/commits{/sha}", "git_commits_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/git/commits{/sha}", "comments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments{/number}", "issue_comment_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments{/number}", "contents_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/contents/{+path}", "compare_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/merges", "archive_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/downloads", "issues_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues{/number}", "pulls_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls{/number}", "milestones_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/milestones{/number}", "notifications_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/labels{/name}", "releases_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/releases{/id}", "deployments_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/deployments", "created_at": "2012-06-13T16:05:52Z", "updated_at": "2018-02-07T18:43:20Z", "pushed_at": "2018-02-09T20:44:29Z", "git_url": "git://github.com/spring-projects/spring-integration-extensions.git", "ssh_url": "git@github.com:spring-projects/spring-integration-extensions.git", "clone_url": "https://github.com/spring-projects/spring-integration-extensions.git", "svn_url": "https://github.com/spring-projects/spring-integration-extensions", "homepage": "http://www.springintegration.org/", "size": 2375, "stargazers_count": 180, "watchers_count": 180, "language": "Java", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 208, "mirror_url": null, "archived": false, "open_issues_count": 5, "license": null, "forks": 208, "open_issues": 5, "watchers": 180, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/11"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/11"}, "issue": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11"}, "comments": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11/comments"}, "review_comments": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/11/comments"}, "review_comment": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/11/commits"}, "statuses": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/statuses/0ada4bce94049a4239ee50f0d6d80d6cad2b8592"}}, "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7709300", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#issuecomment-7709300", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/1", "id": 7709300, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2012-08-13T21:50:58Z", "updated_at": "2012-08-13T21:50:58Z", "author_association": "MEMBER", "body": "Would probably move some classes into slightly better packages:\n- o.s.i.xquery.XQueryExecutor --> o.s.i.xquery.core.XQueryExecutor\n- o.s.i.xquery.XQueryUtils --> o.s.i.xquery.support.XQueryUtils\n- o.s.i.xquery.AbstractXQueryResultMapper --> o.s.i.xquery.support.AbstractXQueryResultMapper\n- o.s.i.xquery.XQueryParameter --> o.s.i.xquery.support.XQueryParameter\n- o.s.i.xquery.XQueryResultMapper --> o.s.i.xquery.support.XQueryResultMapper\n\nThe contents of:\n- o.s.i.xquery.config --> o.s.i.xquery.config.xml (In case we add annotation support)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7709300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7716809", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#issuecomment-7716809", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/1", "id": 7716809, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2012-08-14T05:44:54Z", "updated_at": "2012-08-15T16:02:59Z", "author_association": "MEMBER", "body": "@amolnayak311  Just did a quick test using [mxquery](http://mxquery.org/).\n\n```\nCaused by: org.springframework.integration.MessagingException: Caught Exception while opening a connection to the datasource\n    at org.springframework.integration.xquery.XQueryExecutor.execute(XQueryExecutor.java:281)\n    at org.springframework.integration.xquery.XQueryExecutor.execute(XQueryExecutor.java:240)\n    at org.springframework.integration.xquery.transformer.XQueryTransformer.doTransform(XQueryTransformer.java:61)\n    at org.springframework.integration.transformer.AbstractTransformer.transform(AbstractTransformer.java:33)\n    ... 20 more\nCaused by: javax.xml.xquery.XQQueryException: ch.ethz.mxquery.exceptions.DynamicException: Empty string not legal prefix in a QName\n    at ch.ethz.mxquery.xqj.MXQueryXQDynamicContext.bindNode(MXQueryXQDynamicContext.java:219)\n    at org.springframework.integration.xquery.XQueryExecutor.execute(XQueryExecutor.java:263)\n    ... 23 more\n```\n\nXML:\n\n```\n<customers>\n    <customer id=\"1\">\n        <name>Foo Industries</name>\n        <industry>Chemical</industry>\n        <city>Glowing City</city>\n    </customer>\n    <customer id=\"2\">\n        <name>Bar Refreshments</name>\n        <industry>Beverage</industry>\n        <city>Desert Town</city>\n    </customer>\n    <customer id=\"3\">\n        <name>Hello World Services</name>\n        <industry>Travel</industry>\n        <city>Coral Sands</city>\n    </customer>\n</customers>\n```\n\nXQuery:\n\n```\n<customers>\n    { //customers/customer/name }\n</customers>\n```\n\nNot yet sure why this happened. Need to investigate further later this morning. The example worked fine using Saxon.\n\n**Update** - looks like the library is somewhat buggy - exceptions happened when doing:\n\n```\nexpression.bindNode(XQConstants.CONTEXT_ITEM, node, null);\n```\n\nWe should probably for now not consider testing against _mxquery_. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7716809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7752879", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#issuecomment-7752879", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/1", "id": 7752879, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2012-08-15T10:37:05Z", "updated_at": "2012-08-15T10:37:39Z", "author_association": "MEMBER", "body": "Review changes made and pushed. In XQueryExecutor I have removed direct dependency on Saxon's class and added a method for  discovery an implementation in the order Saxon then Sedna if a datasource is not provided explicitly. We can add more in this list later as we go on. Once the two jars I mentioned in the above comment are in the repo, i'll make the dependency of saxon in the pom as optional too,\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7752879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7874844", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/4#issuecomment-7874844", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/4", "id": 7874844, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2012-08-20T16:27:18Z", "updated_at": "2012-08-20T16:27:18Z", "author_association": "MEMBER", "body": "Otherwise looks good to me. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7874844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7910972", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/6#issuecomment-7910972", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/6", "id": 7910972, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2012-08-21T18:28:42Z", "updated_at": "2012-08-21T18:28:42Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/7910972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8880043", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#issuecomment-8880043", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/8", "id": 8880043, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2012-09-26T06:19:43Z", "updated_at": "2012-09-26T06:20:33Z", "author_association": "MEMBER", "body": "Hey Jarred, Thanks for the effort you have put in for this extension. We will review this and will be discussing those changes here which can take up quite some time. I had a quick look and feel you have got the samples and examples in this project too. We just want to keep the core classes for the adapter and the corresponding test cases in this project. The samples are equally important and a great way to understand the extension, all of them are present in this project https://github.com/SpringSource/spring-integration-samples. Please move the samples out of this project and keep the core only.\n\nYou need to raise a separate JIRA for this and include your samples there once this PR is merged.\n\nAlso I hope you have signed the CLA here https://support.springsource.com/spring_committer_signup. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8880043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8882258", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#issuecomment-8882258", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/8", "id": 8882258, "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "created_at": "2012-09-26T08:11:57Z", "updated_at": "2012-09-26T08:11:57Z", "author_association": "CONTRIBUTOR", "body": "Hi Amal, Thanks for your comments. I have removed sample application.\nBy the way, I have signed CLA.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8882258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8892629", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#issuecomment-8892629", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/8", "id": 8892629, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2012-09-26T14:54:48Z", "updated_at": "2012-09-26T14:54:48Z", "author_association": "MEMBER", "body": "Hello Jarred, Can you replace the test classes that use main method with junits? Apologies for bringing things up one at a time. I am tied up with some work and am not able to look at your contributions thoroughly.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8892629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8942935", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#issuecomment-8942935", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/8", "id": 8942935, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2012-09-27T16:39:54Z", "updated_at": "2012-09-27T16:40:18Z", "author_association": "MEMBER", "body": "Hi Jarred @leejianwei \n\nCan you issue a separate PR for the Samples? \n\nI think the best spot for samples right now would be:\n- https://github.com/SpringSource/spring-integration-extensions/samples/splunk\n\n**Some background information:**\n\nThe _Spring Integration Extensions_ repository itself is very new. Eventually, we may decide to move the samples into their own GitHub project e.g.  **spring-integration-extensions-samples**, and thus, having a separate samples directory might be a good idea.\n\nThanks!\n\nCheers,\n\nGunnar\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8942935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8970387", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#issuecomment-8970387", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/8", "id": 8970387, "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "created_at": "2012-09-28T10:39:37Z", "updated_at": "2012-09-28T10:39:37Z", "author_association": "CONTRIBUTOR", "body": "PR https://github.com/SpringSource/spring-integration-extensions/pull/9 is for Splunk adapter samples.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/8970387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/9001059", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/9#issuecomment-9001059", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/9", "id": 9001059, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2012-09-29T05:44:12Z", "updated_at": "2012-09-29T05:44:12Z", "author_association": "MEMBER", "body": "I am assuming its just one commit 2d86d4a74dc11d8fd979a53f34fb16244885b5a7 you intend to add in the samples but your PR has all the commits, even the ones that are still reviewed and to be merged. The easiest thing I would have done is wait till the core gets merged, then create a branch from the master and add the samples. \n\nAlso i see your samples are all *Tests.java classes which looks more like test cases to me. \nTake a look [here](https://github.com/SpringSource/spring-integration-samples). Try modelling your sample to something like these.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/9001059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/9001534", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#issuecomment-9001534", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/5", "id": 9001534, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2012-09-29T07:15:34Z", "updated_at": "2012-09-29T07:15:34Z", "author_association": "MEMBER", "body": "Pushed review changes\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/9001534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/9007163", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#issuecomment-9007163", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/8", "id": 9007163, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2012-09-29T19:16:24Z", "updated_at": "2012-09-29T19:16:24Z", "author_association": "MEMBER", "body": "Merged. Did a whole bunch of cleanup (trailing white-spaces, converted spaces to tabs etc.). For further fixes we should create a new Jira/PR. @leejianwei Thanks for the PR! One advice - For the future, please create a new branch in your personal repo per Jira. We try not to submit pull requests from master branches. For further details please see:\n- https://github.com/SpringSource/spring-integration/wiki/Contributor-Guidelines\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/9007163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/9213904", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/12#issuecomment-9213904", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/12", "id": 9213904, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2012-10-07T23:54:08Z", "updated_at": "2012-10-07T23:54:08Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/9213904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11823812", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#issuecomment-11823812", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/5", "id": 11823812, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-02T20:56:39Z", "updated_at": "2013-01-02T20:56:39Z", "author_association": "MEMBER", "body": "Please rebase against master to get the latest changes.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11823812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11824133", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#issuecomment-11824133", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/5", "id": 11824133, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-02T21:04:27Z", "updated_at": "2013-01-02T21:04:27Z", "author_association": "MEMBER", "body": "We should probably move to a gradle-based build. But I can make that change once the PR is merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11824133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11824243", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#issuecomment-11824243", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/5", "id": 11824243, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-02T21:07:21Z", "updated_at": "2013-01-02T21:07:21Z", "author_association": "MEMBER", "body": "Once the code is checked out, several tests are failing. For integration tests (Using SES directly) that require configuration, we should probably use Spring's Profile support for tests (disabled by default). All basic tests should pass without the need to make configuration changes. Mock as much as possible.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11824243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11826383", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#issuecomment-11826383", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/5", "id": 11826383, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-02T22:02:21Z", "updated_at": "2013-01-02T22:04:13Z", "author_association": "MEMBER", "body": "Add a file _/src/main/resources/META-INF/spring.tooling_\n\nThis will provide good defaults in Eclipse/STS when adding Spring Integration AWS namespace support, e.g.:\n\n```\nhttp\\://www.springframework.org/schema/integration/aws@name=integration aws Namespace\nhttp\\://www.springframework.org/schema/integration/aws@prefix=int-aws\nhttp\\://www.springframework.org/schema/integration/twitter@icon=org/springframework/integration/twitter/config/spring-integration-aws.gif\n```\n\nNot sure about the best prefix, yet - However, since this is the AWS module, I would probably like to go with **int-aws**.\n\nThis would also have implications for the naming of the SES adapters. Thus instead, of:\n\n```\n<aws-ses:outbound-channel-adapter\n```\n\nI would prefer:\n\n```\n<int-aws:ses-outbound-channel-adapter\n```\n\nThat way, we only have to deal with one namespace when adding support for additional AWS services.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11826383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11833768", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#issuecomment-11833768", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/5", "id": 11833768, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-03T03:06:28Z", "updated_at": "2013-01-03T03:06:28Z", "author_association": "MEMBER", "body": "Let me work on the changes, should be done by this weekend.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11833768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11848479", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#issuecomment-11848479", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/5", "id": 11848479, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-03T15:54:15Z", "updated_at": "2013-01-03T15:54:15Z", "author_association": "MEMBER", "body": "I wonder if we should name/prefix things (classes, methods) **AWS** instead of **AmazonWS**. That seems to be more consistent with the Amazon SDK naming strategy. Also, JetS3t uses the same naming strategy. Technically, I would rather use **Aws** but I think this would be too confusing in this context.\n\nTherefore, use **AWSCredentials** instead of **AmazonWSCredentials**.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11848479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11850336", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/16#issuecomment-11850336", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/16", "id": 11850336, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-03T16:37:35Z", "updated_at": "2013-01-03T16:37:35Z", "author_association": "MEMBER", "body": "Hi, \n\nDid you already sign the contributor license agreement (CLA)?\n\nhttps://support.springsource.com/spring_committer_signup\n\nIf not please submit the form (The Project Lead is Mark Fisher) and I will merge the PR. \n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11850336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11873303", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/16#issuecomment-11873303", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/16", "id": 11873303, "user": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-04T05:58:41Z", "updated_at": "2013-01-04T05:58:41Z", "author_association": "CONTRIBUTOR", "body": "Yes I had. My confirmation number is 39920121212012232\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11873303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11927211", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#issuecomment-11927211", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/5", "id": 11927211, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-06T11:29:58Z", "updated_at": "2013-01-06T11:29:58Z", "author_association": "MEMBER", "body": "Made the following changes\n- Use SimpleMailMessage instead of AmazonSESSimpleMailMessage\n- DefaultAmazonSESMailSender now extends JavaMailSenderImpl overriding the doSend\n- All maven artifact versions updated and moved to properties.\n- Namespace changes made to allow just one namespace for all the AWS adapters\n- The AmazonSESMessageHandler now extends MailSendingMessageHandler from spring-integration-mail. \n  This was done in order to prevent duplication of code. This is now possible as the AmazonSESMailSender is a \n  JavaMailSender.\n- Added the spring.tooling file\n- Added comments to attributes and elements in the spring-integration-aws's namespace xsd.\n- Removed the extra classes/interfaces not used anymore after the recommended changes.\n\nChanges not made\n- I'm not too sure how we are planning to use spring profiles to test the AWS tests, we can \n  talk over skype about this.The AWS tests are excluded from maven's surefire plugin so that they \n  do not execute by default. In order to execute them from maven, We can have maven build \n  profiles which doesn't skip those tests.Since we are anyways doing away with maven in favor of \n  gradle, I didnt bother to make the change.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/11927211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12068306", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/16#issuecomment-12068306", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/16", "id": 12068306, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-09T21:43:47Z", "updated_at": "2013-01-09T21:43:47Z", "author_association": "MEMBER", "body": "Unit Tests are still failing - created a separate Jira for that: https://jira.springsource.org/browse/INTEXT-32\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12068306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12121962", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/18#issuecomment-12121962", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/18", "id": 12121962, "user": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-10T22:21:57Z", "updated_at": "2013-01-10T22:21:57Z", "author_association": "MEMBER", "body": "LGTM; merging.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12121962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12228185", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/19#issuecomment-12228185", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/19", "id": 12228185, "user": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-14T17:04:31Z", "updated_at": "2013-01-14T17:04:31Z", "author_association": "MEMBER", "body": "LGTM; merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12228185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12229659", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/21#issuecomment-12229659", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/21", "id": 12229659, "user": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-14T17:35:24Z", "updated_at": "2013-01-14T17:35:24Z", "author_association": "MEMBER", "body": "LGTM; merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12229659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12267899", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-12267899", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 12267899, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-15T14:01:37Z", "updated_at": "2013-01-15T14:01:37Z", "author_association": "MEMBER", "body": "- Remove all jars from the project, these need to be a part of the dependencies and should not be placed in the repository.\n- Change the year in all the class to 2013 for the Licence in the header.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12267899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12269974", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-12269974", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 12269974, "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-15T14:42:43Z", "updated_at": "2013-01-15T14:42:43Z", "author_association": "CONTRIBUTOR", "body": "@amolnayak311: No, you cannot exclude those jar libraries. Voldemort is not build with Maven, and is not being uploaded to Maven Central Repository. Those libraries are required for integration tests to run against local Voldemort database. Otherwise, you would have to download them manually, and simple `gradle test` would not work after clean checkout.\n\nWill change the year to 2013 shortly.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12269974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12271295", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-12271295", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 12271295, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-15T15:09:50Z", "updated_at": "2013-01-15T15:09:50Z", "author_association": "MEMBER", "body": "The commons, jackson, thift, jetty and I guess all others can come from maven repo.  For voldemort jars, dont worry they can be put in Spring source's mvn repository. So eventually we will have to get the jars from the repository and none with  the project's source code.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12271295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12312112", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-12312112", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 12312112, "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-16T10:16:53Z", "updated_at": "2013-01-16T10:16:53Z", "author_association": "CONTRIBUTOR", "body": "Got your point and it makes sense. What do you think about referencing Voldemort 0.96 with something like `compile \"voldemort:voldemort:$voldemortVersion\"`, plus installing the following POM descriptor: https://gist.github.com/4546021 (all dependencies included)? I have tested it locally and everything works fine.\n\nIf you agree, could you please install Voldemort 0.96 with the given POM in Spring's Maven repository? I will test it afterwards and update build.gradle, remove libraries and .gitignore file.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12312112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12622325", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11#issuecomment-12622325", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11", "id": 12622325, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-23T21:07:10Z", "updated_at": "2013-01-23T21:49:27Z", "author_association": "MEMBER", "body": "Shouldn't we use Android API to do server push, rather than implementing our own infrastructure? (using **gcm-server.jar**)\n\n```\ncom.google.android.gcm.server.Sender sender = new Sender(senderId);\nList<String>registrationIds = new ArrayList<String>();\nids.add(\"12345\");\n\nMessage msg = new Message.Builder()\n.collapseKey(\"1\")\n.timeToLive(3)\n.delayWhileIdle(true)\n.addData(\"message\",\"This is a notification 423424234\")\n.build();\n\nsender.send(msg, ids, 1);\n```\n\nShouldn't we have an inbound adapters to handle client \"subscriptions\"?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12622325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12638203", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11#issuecomment-12638203", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11", "id": 12638203, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-24T05:37:48Z", "updated_at": "2013-01-24T05:37:48Z", "author_association": "MEMBER", "body": "The Idea is to have a common abstract service implementing the functionality like exponential retry for all implementations and delegate to the underlying service to do the actual push. Ideally we shall be having the common abstract class for all our implementations. The push part for android we have implemented is as per the specification given for GCM and there isn't much code in it. Implementing them using GCM Server should be fine as well I guess ( I had seen this when I had developed the service but intentionally decided not to use it for some reason, I am afraid I quite don't remember why I decided that :D )\n\nFor the client subscription, it is the responsibility of the handheld device to provide the application server with the registration id it received from GCM services. Now this can be send using plain TCP/IP , HTTP, use a web service etc, depending on what is the protocol between the application and its server side. To achieve either of these we can use the TCP , HTTP or WS inbound adapters and then use the JDBC or JPA adapters to store the registration id in database. That's why I think any inbound adapters for them won't make much sense and doesn't add much value. You have any other view or idea in mind?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12638203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12753927", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11#issuecomment-12753927", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11", "id": 12753927, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-27T13:13:56Z", "updated_at": "2013-01-27T13:13:56Z", "author_association": "MEMBER", "body": "Got rid of the interface and moved the constants to the implementation class. Rebased and pushed the changes\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12753927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12833377", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-12833377", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 12833377, "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-29T13:00:29Z", "updated_at": "2013-01-29T13:00:29Z", "author_association": "CONTRIBUTOR", "body": "Hello Spring Team, any recent updates?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12833377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12838617", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-12838617", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 12838617, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-29T15:03:56Z", "updated_at": "2013-01-29T15:03:56Z", "author_association": "MEMBER", "body": "Hi Lukasz,\n\nI have just added Voldemort to the SpringSource repository - `voldemort:voldemort:0.96`. \n\nCheers,\n\nGunnar\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12838617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12846539", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-12846539", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 12846539, "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "created_at": "2013-01-29T17:28:29Z", "updated_at": "2013-01-29T17:28:29Z", "author_association": "CONTRIBUTOR", "body": "Thanks Gunnar, looks good from my working directory :).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/12846539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13093082", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/24#issuecomment-13093082", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/24", "id": 13093082, "user": {"login": "dturanski", "id": 886859, "avatar_url": "https://avatars1.githubusercontent.com/u/886859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dturanski", "html_url": "https://github.com/dturanski", "followers_url": "https://api.github.com/users/dturanski/followers", "following_url": "https://api.github.com/users/dturanski/following{/other_user}", "gists_url": "https://api.github.com/users/dturanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dturanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dturanski/subscriptions", "organizations_url": "https://api.github.com/users/dturanski/orgs", "repos_url": "https://api.github.com/users/dturanski/repos", "events_url": "https://api.github.com/users/dturanski/events{/privacy}", "received_events_url": "https://api.github.com/users/dturanski/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-04T19:02:26Z", "updated_at": "2013-02-04T19:02:26Z", "author_association": "MEMBER", "body": "See https://jira.springsource.org/browse/INTEXT-31\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13093082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13244544", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/25#issuecomment-13244544", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/25", "id": 13244544, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-07T16:38:18Z", "updated_at": "2013-02-07T16:38:18Z", "author_association": "MEMBER", "body": "Just 2 minor issues: \n\nCan you remove the trailing space in SplunkEventTests?\nCan you also do another rebase with MASTER? Locally I saw Git complaining about whitespace issues.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13244544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13253717", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/25#issuecomment-13253717", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/25", "id": 13253717, "user": {"login": "dturanski", "id": 886859, "avatar_url": "https://avatars1.githubusercontent.com/u/886859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dturanski", "html_url": "https://github.com/dturanski", "followers_url": "https://api.github.com/users/dturanski/followers", "following_url": "https://api.github.com/users/dturanski/following{/other_user}", "gists_url": "https://api.github.com/users/dturanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dturanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dturanski/subscriptions", "organizations_url": "https://api.github.com/users/dturanski/orgs", "repos_url": "https://api.github.com/users/dturanski/repos", "events_url": "https://api.github.com/users/dturanski/events{/privacy}", "received_events_url": "https://api.github.com/users/dturanski/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-07T19:06:52Z", "updated_at": "2013-02-07T19:06:52Z", "author_association": "MEMBER", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13253717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13299627", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/25#issuecomment-13299627", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/25", "id": 13299627, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-08T16:54:53Z", "updated_at": "2013-02-08T16:54:53Z", "author_association": "MEMBER", "body": "Addressed with PR #26 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13299627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13487610", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-13487610", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 13487610, "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-13T11:57:15Z", "updated_at": "2013-02-13T11:57:15Z", "author_association": "CONTRIBUTOR", "body": "Hello Spring Team,\n\nIn my opinion message store cannot be easily implemented, because Voldemort does not support transactions and row locking - AP system in terms of CAP theorem. During functional testing, I faced issues with concurrent modifications of single message group by two separate message store clients. BTW, any updates regarding code review and documentation?\n\nRegards,\nLukasz\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13487610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13488328", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-13488328", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 13488328, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-13T12:18:54Z", "updated_at": "2013-02-13T12:18:54Z", "author_association": "MEMBER", "body": "Hello, Lukasz.\nAs you may know MongoDB doesn't support TX as well, however we have its `MessageStore` implementation.\nFrom other side it is anti-pattern to access to the same `MessageGroup` from different applications...\nTo achieve exclusive access to the `MessageGroup` we use `LockRegistry`: take a look into `AbstractCorrelatingMessageHandler`.\n\nCheers\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13488328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13899687", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-13899687", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 13899687, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-21T16:57:22Z", "updated_at": "2013-02-21T16:57:22Z", "author_association": "MEMBER", "body": "@lukasz-antoniak  Apologies for not getting this merged quickly. I want to go through this and review it but I am tied up with some other stuff and unable to do this. Please do not feel that your contribution is not valued :)\nIt might take some time but it should be merged. Somebody else might review too as per their convenience. \nThanks again for the contribution.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/13899687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14078112", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#issuecomment-14078112", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/29", "id": 14078112, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-25T21:50:56Z", "updated_at": "2013-02-25T21:50:56Z", "author_association": "MEMBER", "body": "As a general comment, why didn't you use the **FileTransferringMessageHandler** (Package _org.springframework.integration.file.remote.handler_)?\n\nAlso, you might have hooked into the **RemoteFileOutboundChannelAdapterParser**.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14078112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14082120", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#issuecomment-14082120", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/29", "id": 14082120, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-25T23:06:00Z", "updated_at": "2013-02-25T23:06:00Z", "author_association": "MEMBER", "body": "Please also see the Pull Request #31 which add a sample demonstrating the usage for Amazon S3.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14082120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14192692", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#issuecomment-14192692", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/29", "id": 14192692, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-27T19:09:35Z", "updated_at": "2013-02-27T19:09:35Z", "author_association": "MEMBER", "body": "Following three points \n- add **auto-create-local-directory** to inbound Adapters\n- **local-filename-generator-expression** needs to be added\n- Look at using `FileTransferringMessageHandler`\n\nAlso I'll be collating some points for enhancements based on some of the mail communications I have with people who have evaluated or used these adapters as well as the thread on the forum which has quite a lot of diccussion around S3 adapters.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14192692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14262260", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#issuecomment-14262260", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/29", "id": 14262260, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-02-28T22:39:55Z", "updated_at": "2013-02-28T22:39:55Z", "author_association": "MEMBER", "body": "Created follow-up Jira: https://jira.springsource.org/browse/INTEXT-51\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14262260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14290030", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-14290030", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 14290030, "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-01T13:52:10Z", "updated_at": "2013-03-01T13:52:10Z", "author_association": "CONTRIBUTOR", "body": "I have refactored Voldemort adapter to calculate entry key analogically to Redis module. IMO design looks better now, as there is no extra interface and all you need to code is something like `store-key-expression=\"payload.id\"`. Thank you @amolnayak311 for this suggestion. Any progress with reviewing the rest of the code?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14290030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14531191", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/32#issuecomment-14531191", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/32", "id": 14531191, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-06T22:44:38Z", "updated_at": "2013-03-06T22:44:38Z", "author_association": "MEMBER", "body": "This is an initial (crude) version of the **Zip** and **Unzip** transformers and includes basic namespace support and a sample under **/samples/zip**.\n\nThe Zip transformer is in better shape than the unzip transformer but at least the sample works. Will do more work over the following days. I envision that the transformers will be able to handle the following input payload types:\n\n### Zip transformer:\n- File\n- Byte\n- String\n- Iterable (Not fully sure yet, how to handle this best)\n- Outputstream (experimental)\n\n### Unzip transformer:\n- File\n- Byte\n- Inputstream\n\nFor both transformers, you will be able to define a ZipResultType (need to find a better name):\n- File\n- Byte Array\n- Outputstream\n- and possibly a nested Map (handling multiple zip file entries and nested directories --> Splitter downstream) \n\nAs the underlying library, I am using zt-zip [1] but I was required to also create my own utility methods but Plan on contributing those back to zt-zip.\n\n[1] https://github.com/zeroturnaround/zt-zip\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/14531191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/15591757", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-15591757", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 15591757, "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "created_at": "2013-03-28T14:36:38Z", "updated_at": "2013-03-28T14:36:38Z", "author_association": "CONTRIBUTOR", "body": "Hello Spring Team, any recent updates?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/15591757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/15757042", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/35#issuecomment-15757042", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/35", "id": 15757042, "user": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-02T06:11:42Z", "updated_at": "2013-04-02T06:11:42Z", "author_association": "CONTRIBUTOR", "body": "Auto reconnect gateway does not work really well\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/15757042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/15803583", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#issuecomment-15803583", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/20", "id": 15803583, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-02T21:24:42Z", "updated_at": "2013-04-02T21:24:42Z", "author_association": "MEMBER", "body": "Did some code cleanup:\n- Convert spaces to tabs\n- Upgrade to Gradle 1.5\n- Change Group Id to 'org.springframework.integration'\n- Add Sonar Runner plugin\n- Reduce Sonar warnings\n- Ensure ASL license header is present in all source files\n- Fix XSD documentation not showing up in STS\n\nAlso, I added a (very simple) Voldemort sample to the repo:\n- https://jira.springsource.org/browse/INTEXT-61\n\nFurthermore, I have setup the CI infrastructure:\n- https://jira.springsource.org/browse/INTEXT-62\n- https://build.springsource.org/browse/INTEXT-VOLDEMORT\n- https://build.springsource.org/browse/INTEXT-VOLDEMORTSONAR\n\nThe Sonar Analytics dashboard is here:\n- https://sonar.springsource.org/dashboard/index/org.springframework.integration:spring-integration-voldemort\n\nThe snapshot artifacts are automatically deployed to:\n- https://repo.springsource.org/simple/libs-snapshot-local/org/springframework/integration/spring-integration-voldemort/1.0.0.BUILD-SNAPSHOT\n\n**THANK YOU** for the contribution! Looking forward to new PRs!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/15803583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/15894955", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/38#issuecomment-15894955", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/38", "id": 15894955, "user": {"login": "dturanski", "id": 886859, "avatar_url": "https://avatars1.githubusercontent.com/u/886859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dturanski", "html_url": "https://github.com/dturanski", "followers_url": "https://api.github.com/users/dturanski/followers", "following_url": "https://api.github.com/users/dturanski/following{/other_user}", "gists_url": "https://api.github.com/users/dturanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dturanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dturanski/subscriptions", "organizations_url": "https://api.github.com/users/dturanski/orgs", "repos_url": "https://api.github.com/users/dturanski/repos", "events_url": "https://api.github.com/users/dturanski/events{/privacy}", "received_events_url": "https://api.github.com/users/dturanski/received_events", "type": "User", "site_admin": false}, "created_at": "2013-04-04T12:45:14Z", "updated_at": "2013-04-04T12:45:14Z", "author_association": "MEMBER", "body": "The problem is actually the name of the setter method, setIndexName() needs to be setIndex().  But LGTM. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/15894955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17965298", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/40#issuecomment-17965298", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/40", "id": 17965298, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-15T20:50:12Z", "updated_at": "2013-05-15T20:50:12Z", "author_association": "MEMBER", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17965298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17965840", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#issuecomment-17965840", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/43", "id": 17965840, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-15T20:59:58Z", "updated_at": "2013-05-15T20:59:58Z", "author_association": "MEMBER", "body": "Thanks for your contribution! Did you sign the CLA? See: https://github.com/SpringSource/spring-integration/blob/master/CONTRIBUTING.md\n\nOnce signed, I can review/merge the PR. THANKS!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17965840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17965959", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#issuecomment-17965959", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/43", "id": 17965959, "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-15T21:02:00Z", "updated_at": "2013-05-15T21:02:00Z", "author_association": "CONTRIBUTOR", "body": "Yes I have signed it already,\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17965959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17966414", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#issuecomment-17966414", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/43", "id": 17966414, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-15T21:09:27Z", "updated_at": "2013-05-15T21:09:27Z", "author_association": "MEMBER", "body": "Wonderful! I will give it a quick review and merge it by tomorrow and will setup the Bamboo build plan accordingly. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17966414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17966535", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#issuecomment-17966535", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/43", "id": 17966535, "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-15T21:11:36Z", "updated_at": "2013-05-15T21:11:36Z", "author_association": "CONTRIBUTOR", "body": "Thanks,\nI am new to gradle, so any suggestions are welcomed :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17966535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17972857", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/44#issuecomment-17972857", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/44", "id": 17972857, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-15T23:35:16Z", "updated_at": "2013-05-15T23:35:16Z", "author_association": "MEMBER", "body": "We are trying to figure out the current versioning of the Java client also as it is not clear. See also the following Paho issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=382471#c20\n\nCurrently, you need to build the jar from source code - http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.java.git/\n\nAs soon as we get more details, we will add the jar to repo.springsource.org until the Paho client is in Maven Central.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/17972857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18002176", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/44#issuecomment-18002176", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/44", "id": 18002176, "user": {"login": "andypiper", "id": 552452, "avatar_url": "https://avatars1.githubusercontent.com/u/552452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andypiper", "html_url": "https://github.com/andypiper", "followers_url": "https://api.github.com/users/andypiper/followers", "following_url": "https://api.github.com/users/andypiper/following{/other_user}", "gists_url": "https://api.github.com/users/andypiper/gists{/gist_id}", "starred_url": "https://api.github.com/users/andypiper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andypiper/subscriptions", "organizations_url": "https://api.github.com/users/andypiper/orgs", "repos_url": "https://api.github.com/users/andypiper/repos", "events_url": "https://api.github.com/users/andypiper/events{/privacy}", "received_events_url": "https://api.github.com/users/andypiper/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-16T13:52:44Z", "updated_at": "2013-05-16T13:52:44Z", "author_association": "NONE", "body": "Currently I would recommend using the v0.2.1 tag from Paho's Git repository and building from that. Unfortunately Paho is not yet in Maven Central but it is a very high priority to get it there!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18002176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18005565", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/44#issuecomment-18005565", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/44", "id": 18005565, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-16T14:45:51Z", "updated_at": "2013-05-16T14:46:06Z", "author_association": "MEMBER", "body": "Added the MQTT Client to the Spring Source repo (0.2.1) and updated `build.gradle` accordingly. See also:\n- Pull Request: https://github.com/SpringSource/spring-integration-extensions/pull/47\n- https://jira.springsource.org/browse/INTEXT-68\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18005565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18009984", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/48#issuecomment-18009984", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/48", "id": 18009984, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-16T15:50:44Z", "updated_at": "2013-05-16T15:50:44Z", "author_association": "MEMBER", "body": "Sorry - I see Gunnar already took care of this.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18009984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18410107", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11#issuecomment-18410107", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11", "id": 18410107, "user": {"login": "cdelgadob", "id": 4520338, "avatar_url": "https://avatars1.githubusercontent.com/u/4520338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdelgadob", "html_url": "https://github.com/cdelgadob", "followers_url": "https://api.github.com/users/cdelgadob/followers", "following_url": "https://api.github.com/users/cdelgadob/following{/other_user}", "gists_url": "https://api.github.com/users/cdelgadob/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdelgadob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdelgadob/subscriptions", "organizations_url": "https://api.github.com/users/cdelgadob/orgs", "repos_url": "https://api.github.com/users/cdelgadob/repos", "events_url": "https://api.github.com/users/cdelgadob/events{/privacy}", "received_events_url": "https://api.github.com/users/cdelgadob/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-24T15:00:28Z", "updated_at": "2013-05-24T15:00:28Z", "author_association": "NONE", "body": "What's the status of this development? It seems to me a very useful functionality, but it's been a while since the last update in JIRA\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18410107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18445133", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11#issuecomment-18445133", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11", "id": 18445133, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-25T10:43:30Z", "updated_at": "2013-05-25T10:43:30Z", "author_association": "MEMBER", "body": "Hello cdelgadob, its being reviewed and should merged soon. Meanwhile if possible, we would live to have your view on it too. :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18445133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18483461", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#issuecomment-18483461", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/37", "id": 18483461, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-27T05:49:59Z", "updated_at": "2013-05-27T05:49:59Z", "author_association": "CONTRIBUTOR", "body": "Hi, when would this pull request be merged to master?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18483461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18488318", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/11#issuecomment-18488318", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/11", "id": 18488318, "user": {"login": "cdelgadob", "id": 4520338, "avatar_url": "https://avatars1.githubusercontent.com/u/4520338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdelgadob", "html_url": "https://github.com/cdelgadob", "followers_url": "https://api.github.com/users/cdelgadob/followers", "following_url": "https://api.github.com/users/cdelgadob/following{/other_user}", "gists_url": "https://api.github.com/users/cdelgadob/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdelgadob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdelgadob/subscriptions", "organizations_url": "https://api.github.com/users/cdelgadob/orgs", "repos_url": "https://api.github.com/users/cdelgadob/repos", "events_url": "https://api.github.com/users/cdelgadob/events{/privacy}", "received_events_url": "https://api.github.com/users/cdelgadob/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-27T08:40:25Z", "updated_at": "2013-05-27T08:40:25Z", "author_association": "NONE", "body": "Hi Amol, thanks for your answer, that's good news. I'm happy to help and review it, just tell me where to get it from and I'll come back to you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18488318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18512312", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#issuecomment-18512312", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/43", "id": 18512312, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-27T19:44:49Z", "updated_at": "2013-05-27T19:44:49Z", "author_association": "MEMBER", "body": "For consistency, use the standard Spring Integration License Header:\n\n```\n/*\n * Copyright 2002-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n```\n\nHowever, add `@author` and `@since` tags to all source files.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18512312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18512628", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#issuecomment-18512628", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/43", "id": 18512628, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-27T19:56:29Z", "updated_at": "2013-05-27T19:56:29Z", "author_association": "MEMBER", "body": "Please also add more documentation, especially `JavaDoc`, `XSD` and maybe some introductory sentences to the `README.md`. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18512628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18534981", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#issuecomment-18534981", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/37", "id": 18534981, "user": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-28T07:26:04Z", "updated_at": "2013-05-28T07:26:04Z", "author_association": "CONTRIBUTOR", "body": "Sorry, I haven't been able to look at Sonar and fix some of the problem with the codes. But I have implemented what you discussed. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18534981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18594672", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#issuecomment-18594672", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/37", "id": 18594672, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-29T03:51:39Z", "updated_at": "2013-05-29T03:51:39Z", "author_association": "MEMBER", "body": "Merged PR\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18594672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18594775", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-18594775", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 18594775, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-29T03:55:35Z", "updated_at": "2013-05-29T03:55:35Z", "author_association": "MEMBER", "body": "Created a respective Jira ticket: https://jira.springsource.org/browse/INTEXT-72\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18594775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18606083", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#issuecomment-18606083", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/37", "id": 18606083, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-29T09:47:04Z", "updated_at": "2013-05-29T09:47:04Z", "author_association": "CONTRIBUTOR", "body": "Cool! Thanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18606083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18663451", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#issuecomment-18663451", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/37", "id": 18663451, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-30T06:17:42Z", "updated_at": "2013-05-30T06:22:33Z", "author_association": "CONTRIBUTOR", "body": "Are there any plans to support \"Sending multipart SMS messages through a SMPP provider\" using sar_msg_ref_num, sar_segment_seqnum and sar_total_segments?\n\nhttp://www.activexperts.com/xmstoolkit/sms/multipart/\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18663451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18665486", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#issuecomment-18665486", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/37", "id": 18665486, "user": {"login": "otnateos", "id": 2866570, "avatar_url": "https://avatars0.githubusercontent.com/u/2866570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otnateos", "html_url": "https://github.com/otnateos", "followers_url": "https://api.github.com/users/otnateos/followers", "following_url": "https://api.github.com/users/otnateos/following{/other_user}", "gists_url": "https://api.github.com/users/otnateos/gists{/gist_id}", "starred_url": "https://api.github.com/users/otnateos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otnateos/subscriptions", "organizations_url": "https://api.github.com/users/otnateos/orgs", "repos_url": "https://api.github.com/users/otnateos/repos", "events_url": "https://api.github.com/users/otnateos/events{/privacy}", "received_events_url": "https://api.github.com/users/otnateos/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-30T07:27:49Z", "updated_at": "2013-05-30T07:27:49Z", "author_association": "CONTRIBUTOR", "body": "I don't think there is an immediate plan to implement it. Have you tried to construct your UDH or message payload using header USE_MSG_PAYLOAD_PARAM ? If you are stuck with using SAR for concatenation, feel free to request the functionality in JIRA or maybe do PR for the enhancement :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18665486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18757768", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#issuecomment-18757768", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/37", "id": 18757768, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-31T17:03:20Z", "updated_at": "2013-05-31T17:03:20Z", "author_association": "CONTRIBUTOR", "body": "I've already tried using USE_MSG_PAYLOAD_PARAM but no luck.\n\nHere's the JIRA issue https://jira.springsource.org/browse/INTEXT-73\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18757768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18763854", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#issuecomment-18763854", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/37", "id": 18763854, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2013-05-31T18:43:05Z", "updated_at": "2013-05-31T18:43:05Z", "author_association": "CONTRIBUTOR", "body": "Here's the PR https://github.com/SpringSource/spring-integration-extensions/pull/50\n\nI've already tested this with a real SMSC and it works.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18763854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18821417", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/42#issuecomment-18821417", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/42", "id": 18821417, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-03T04:20:30Z", "updated_at": "2013-06-03T04:20:30Z", "author_association": "MEMBER", "body": "Did _VERY_ basic code review - see the polish commit. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/18821417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19294777", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19294777", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19294777, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-11T21:48:38Z", "updated_at": "2013-06-11T21:48:38Z", "author_association": "MEMBER", "body": "Hi Jon, \n\nNot an exhaustive review at all; it's late here in Europe; just thought I'd point out a couple of things that jumped out at me.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19294777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19309105", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19309105", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19309105, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-12T06:42:38Z", "updated_at": "2013-06-12T06:42:38Z", "author_association": "MEMBER", "body": "And one more general question for experts.\nWhy logback? \nLog4j2 tells that it fixes some bugs in the logback: http://logging.apache.org/log4j/2.x/.\nAnd Log4j2 uses LMAX Disruptor too for async events...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19309105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19320480", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19320480", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19320480, "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-12T11:45:13Z", "updated_at": "2013-06-12T11:45:13Z", "author_association": "NONE", "body": "@artembilan Logback is just what we've been using in Reactor (and I've used it in other projects quite a bit). It seems to be a bit of a personal preference thing. If using SLF4J, it doesn't really matter, right?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19320480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19320713", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19320713", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19320713, "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-12T11:51:15Z", "updated_at": "2013-06-12T11:51:15Z", "author_association": "NONE", "body": "@artembilan @garyrussell @markfisher made some changes to address the concerns here.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19320713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19399520", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#issuecomment-19399520", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/41", "id": 19399520, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-13T15:31:15Z", "updated_at": "2013-06-13T15:41:30Z", "author_association": "MEMBER", "body": "Hi @amolnayak311 \n\nLooks like the module does not compile right now from the command line. `AmazonS3ParserUtils` is in under `src/test/java` but used by a class in `src/main/java`. Also, `AmazonS3OutboundGatewayTests` was located under `src/main/java`. Can you please fix? THX!  \n\nWhile you at it:\n\nupdate the following dependencies:\n- Spring Integration to `2.2.4.RELEASE`\n- Mockito to `1.9.5`\n- use `junit` rather than `junit-dep` (4.11)\n- You can probably remove the hamcrest dependency as it is not used as far as I can tell\n- Maybe to be super correct declare:\n  \n  testCompile (\"org.springframework.integration:spring-integration-test:$springIntegrationVersion\") {\n      exclude group \"junit:junit-dep\"\n  }\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19399520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19408951", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19408951", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19408951, "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-13T17:29:50Z", "updated_at": "2013-06-13T17:29:50Z", "author_association": "NONE", "body": "I've tried to make this more appropriate for the role it's intended to play. How does it look now? At some point I'd also like to add a RingBufferDispatcher-backed MessageChannel implementation, so we might also discuss how that would work as it _would_ be a proper message channel.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19408951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19411312", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#issuecomment-19411312", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/41", "id": 19411312, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-13T18:00:16Z", "updated_at": "2013-06-13T18:00:16Z", "author_association": "MEMBER", "body": "Oh, thats a bad miss. I will fix that tonight or maximum by tomorrow. Thanks..\n-----Original Message-----\nFrom: Gunnar Hillert\nSent:  13/06/2013, 21:01 \nTo: SpringSource/spring-integration-extensions\nCc: Amol Nayak\nSubject: Re: [spring-integration-extensions] INTEXT-60 Add support for AWS S3 Gateway in the AWS adapters (#41)\n\nHi @amolnayak311 \n\nLooks like the module does not compile right now from the command line. `AmazonS3ParserUtils` is in under `src/test/java` but used by a class in `src/main/java`. Also, `AmazonS3OutboundGatewayTests` was located under `src/main/java`. Can you please fix? THX!  \n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/SpringSource/spring-integration-extensions/pull/41#issuecomment-19399520\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19411312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19413320", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19413320", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19413320, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-13T18:24:52Z", "updated_at": "2013-06-13T18:24:52Z", "author_association": "MEMBER", "body": "Hi, Jon!\nLooks better :smile: , but it is still IN Gateway. Why do you wait _replies_ ? This is a topic for you to think about for evening, and I think how we may implement RingBufferChannel ;-). But it will be a separate JIRA. BTW we already have similar (https://jira.springsource.org/browse/INT-1979), so it should go to the INTEXT.\nI'll review it deeply in the morning.\nHave a good time!\nAnd again: thank you, guys, for Reactor :smiley: .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19413320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19414781", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19414781", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19414781, "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-13T18:39:02Z", "updated_at": "2013-06-13T18:39:02Z", "author_association": "NONE", "body": "@artembilan what if we just changed the name to TcpServerMessagingGateway or somesuch? We probably want reply capability, don't we @smaldini ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19414781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19419745", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19419745", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19419745, "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-13T19:41:25Z", "updated_at": "2013-06-13T19:41:25Z", "author_association": "NONE", "body": "I also added a channel implementation that is pretty simple and based on `DirectChannel`. It should be a drop-in replacement for any `MessageChannel` and `SubscribableChannel`. The `Dispatcher` to use is configurable either by ref'ing a `Reactor` instance or by telling the channel what kind of `Dispatcher` you want (`ringBuffer`, `eventLoop`, `threadPoolExecutor`, `sync`, or custom-defined from the Reactor environment properties).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19419745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19424342", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19424342", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19424342, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-13T20:54:14Z", "updated_at": "2013-06-13T20:54:14Z", "author_association": "MEMBER", "body": "Again, after a very quick review...\n\nUnfortunately, we have a naming collision; subscribable chanels in SI (Direct and Pub/Sub) already have a `<dispatcher/>` child element. So a `dispatcher` attribute doesn't sound right - maybe a `<dispatcher/>` child element with a `type` would be more consistent?\n\nAside from that suggestion, I don't have a good answer for the name collision (SI dispatching is not the same as reactor dispatching) but, for consistency, the reactor channel needs to subclass `AbstractSubscribableChannel` so it can use other SI \"dispatcher\" features (such as a pluggable load balancing policy - round robin etc). \n\nWe also need a `<reactor:publish-subscribe-channel/>` in addition to the `<reactor:channel/>` (the pub/sub channel gets an SI Broadcasting dispatcher).\n\nI am not saying these functions couldn't be done with reactor features, but we need to dovetail them properly with existing SI concepts. Users will expect it to work consistently with existing endpoints (such as honoring the `order` attribute on subscribed endpoints). They should be able to drop in a reactor channel to replace an existing channel without having to change or reconfigure any other components in the flow.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19424342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19441863", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19441863", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19441863, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-14T06:48:12Z", "updated_at": "2013-06-14T06:48:12Z", "author_association": "MEMBER", "body": "After sleeping on it for a few hours, I don't like the idea of conflating the two dispatchers into the child element; I also don't like the idea of having a 'dispatcher' (reactor) attribute and a `<dispatcher/>` child element. But we have to have the latter for the reasons I stated above; how about we just pick the default reactor dispatcher implementation and if they want something else, they have to provide an externally configured Reactor using the `ref` attribute??\n\n```\n<int-r:channel id=\"foo\" ref=\"myRingBufferReactor\">\n    <int-r:dispatcher load-balancer=\"round-robin\" failover=\"false\" />\n</int-r:channel>\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19441863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19456985", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19456985", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19456985, "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-14T13:30:37Z", "updated_at": "2013-06-14T13:30:37Z", "author_association": "NONE", "body": "For the best performance, we'll want to make sure and use the load balancer's built into Reactor. I'm not sure how to achieve that other than just have a configured Reactor passed in via `ref` and leave the standard SI load-balancing configuration alone. It would work but probably be slightly less efficient that what's implemented in Reactor. Would it cause confusion to have to different load-balancing scenarios? There may be times when we can't completely meld Reactor with SI and there's just going to be some overlap. Not sure if this is one of those times...\n\nStephane's got some additions and we've moved the fork to the Reactor github org. I'm going to close this PR and open one from there.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19456985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19494701", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#issuecomment-19494701", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/51", "id": 19494701, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-15T10:52:18Z", "updated_at": "2013-06-15T10:52:18Z", "author_association": "MEMBER", "body": "I realize you've closed this, but I figured this is the best place to reply to your comments.\n\nI realize your drive is for performance, but it has to fit in the context of Spring Integration and its fundamental concepts. It's not clear to me what reactor will do when multiple endpoints subscribe to this channel - does the last one win, are they round robin'd? can the reactor's dispatching algo understand and use the Handler's `Ordered` interface? how do you limit the #of subscribers? can we switch to a different algo? What about failover (when a call to one handler fails should we fail over to the next, or not)?\n\nMaybe you can retain compatibility (and performance), by adding (sync?) reactor-based implementations of the SI `MessageDispatcher`s that might be used with this channel. That way, your main reactor dispatches to the channel, which then invokes the proper downstream handler according to SI semantics. Maybe the two reactors can be one?\n\nAnother observation - if there are no subscribers, or the message fails to be delivered to any subscriber, an error message needs to go to an error channel.\n\nAgain, this is \"free\" if you use an existing  SI dispatcher (once the message is dispatched by reactor to the channel), but would have to be added to your implementation if not.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19494701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19871248", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#issuecomment-19871248", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/43", "id": 19871248, "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "created_at": "2013-06-23T09:25:07Z", "updated_at": "2013-06-23T09:25:07Z", "author_association": "CONTRIBUTOR", "body": "Gunnar, \nI have made all changes, including docs, and gradle.build cleanup. Let me know if it looks good for you.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/19871248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20897596", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/52#issuecomment-20897596", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/52", "id": 20897596, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-12T19:04:19Z", "updated_at": "2013-07-12T19:04:19Z", "author_association": "MEMBER", "body": "Thank you so much for the PR! If you haven't done, yet, could you please sign the _contributor license agreement_ (CLA)? You can find the details and a link at:\n\nhttps://github.com/SpringSource/spring-integration/blob/master/CONTRIBUTING.md\n\nTHX!\n\nOnce signed I can merge the PR.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20897596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20897861", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/52#issuecomment-20897861", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/52", "id": 20897861, "user": {"login": "bellwethr", "id": 104604, "avatar_url": "https://avatars1.githubusercontent.com/u/104604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bellwethr", "html_url": "https://github.com/bellwethr", "followers_url": "https://api.github.com/users/bellwethr/followers", "following_url": "https://api.github.com/users/bellwethr/following{/other_user}", "gists_url": "https://api.github.com/users/bellwethr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bellwethr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bellwethr/subscriptions", "organizations_url": "https://api.github.com/users/bellwethr/orgs", "repos_url": "https://api.github.com/users/bellwethr/repos", "events_url": "https://api.github.com/users/bellwethr/events{/privacy}", "received_events_url": "https://api.github.com/users/bellwethr/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-12T19:08:43Z", "updated_at": "2013-07-12T19:08:43Z", "author_association": "CONTRIBUTOR", "body": "No problem--done!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20897861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20982946", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/52#issuecomment-20982946", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/52", "id": 20982946, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-15T16:46:41Z", "updated_at": "2013-07-15T16:46:41Z", "author_association": "MEMBER", "body": "Added 2 unit tests and merged PR. **THANK YOU!**\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20982946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20983706", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/53#issuecomment-20983706", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/53", "id": 20983706, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-15T16:58:13Z", "updated_at": "2013-07-15T16:58:13Z", "author_association": "MEMBER", "body": "Nice catch, its embarrassing I missed this in the first place:(.\nCan you add your name to the authors?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20983706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20987021", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-20987021", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 20987021, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-15T17:30:26Z", "updated_at": "2013-07-15T17:30:26Z", "author_association": "MEMBER", "body": "Could you possibly add a some unit tests? THANKS!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20987021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20996952", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#issuecomment-20996952", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/41", "id": 20996952, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-15T19:25:23Z", "updated_at": "2013-07-15T19:28:46Z", "author_association": "MEMBER", "body": "Hi @amolnayak311 \n\nLooking through the namespace of `<int-aws:s3-outbound-gateway/>`, I see a few issues. Generally, I think we should align the S3 Gateway as much with the FTP support as possible in order to provide a good (common) user-experience (UX):\n- As this is a gateway, rename `input-channel` to `request-channel`\n- Add attribute `reply-timeout`\n- Add attribute `reply-channel`\n- Add `request-handler-advice-chain` sub-element\n- Add `poller` sub-element (e.g. for polling from a Queue Channel)\n- Add attribute `filename-pattern`\n- Add attribute `filename-regex`\n- The AWS adapter uses the `temporary-directory` attribute, the _ftp:outbound-gateway_ uses the `local-directory` attribute; should we keep the attributes standardized?\n- The FTP Outbound Gateway uses the `temporary-file-suffix` attribute but the AWS Outbound Gateway uses `temporary-suffix`. Should we change that for better standardization?\n- Add attribute `auto-create-local-directory`\n- The FTP Outbound Gateway also has a `filter` attribute (_org.springframework.integration.file.filters.FileListFilter_), not sure how relevant this might be but wanted to mention it.\n\nWe should be careful with the MUTUALLY EXCLUSIVE attributes:\n- remote-command=\"\" and\n- remote-command-expression=\"\"\n\nThe FTP Outbound gateway defines: \n- command=\"\"\n- expression=\"\"\n\nBoth are REQUIRED. This feels confusing.\n\nI am not perfectly sure, yet, how to best standardize this. I am not too keen on the naming for the FTP Outbound gateway but maybe we should just go with that.\n\nIf possible, the `remote-command` or `command` attribute should provide some enum definition in the XSD such as:\n\n``` xml\n        <xsd:attribute name=\"command\" default=\"PUT\">\n            <xsd:annotation>\n                <xsd:documentation><![CDATA[\n                        ...\n                ]]></xsd:documentation>\n            </xsd:annotation>\n            <xsd:simpleType>\n                <xsd:union memberTypes=\"supportedCommands xsd:string\"/>\n            </xsd:simpleType>\n        </xsd:attribute>\n\n    <xsd:simpleType name=\"supportedCommands\">\n        <xsd:restriction base=\"xsd:token\">\n            <xsd:enumeration value=\"LIST\"/>\n            <xsd:enumeration value=\"REMOVE\"/>\n            <xsd:enumeration value=\"PUT\"/>\n            <xsd:enumeration value=\"GET\"/>\n        </xsd:restriction>\n    </xsd:simpleType>\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/20996952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21002894", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#issuecomment-21002894", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/41", "id": 21002894, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-15T20:54:22Z", "updated_at": "2013-07-15T20:54:22Z", "author_association": "MEMBER", "body": "@amolnayak311 Also several package tangles exist in the project (running `./gradlew sonarRunner`). E.g. you should move the `AmazonWSParserUtils` to a separate package as there is a circular dependency between `org.springframework.integration.aws.s3.config.xml` and `org.springframework.integration.aws.config.xml`. Maybe move `AmazonWSParserUtils` to `org.springframework.integration.aws.config.xml.support`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21002894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21006031", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#issuecomment-21006031", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/43", "id": 21006031, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-15T21:42:26Z", "updated_at": "2013-07-15T21:42:26Z", "author_association": "MEMBER", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21006031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21007803", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/54#issuecomment-21007803", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/54", "id": 21007803, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-15T22:11:23Z", "updated_at": "2013-07-15T22:11:23Z", "author_association": "MEMBER", "body": "Hi, \n\nThank you so much for the PR! Before I forget did you sign the CLA?\n- https://github.com/SpringSource/spring-integration/blob/master/CONTRIBUTING.md\n\nAlso, I did several commits earlier. If you get a chance please rebase your PR. Lastly, please add your author tag to files that you modified. \n\nCheers,\n\nGunnar\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21007803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21143686", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/54#issuecomment-21143686", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/54", "id": 21143686, "user": {"login": "relango", "id": 768040, "avatar_url": "https://avatars3.githubusercontent.com/u/768040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/relango", "html_url": "https://github.com/relango", "followers_url": "https://api.github.com/users/relango/followers", "following_url": "https://api.github.com/users/relango/following{/other_user}", "gists_url": "https://api.github.com/users/relango/gists{/gist_id}", "starred_url": "https://api.github.com/users/relango/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/relango/subscriptions", "organizations_url": "https://api.github.com/users/relango/orgs", "repos_url": "https://api.github.com/users/relango/repos", "events_url": "https://api.github.com/users/relango/events{/privacy}", "received_events_url": "https://api.github.com/users/relango/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-17T20:48:45Z", "updated_at": "2013-07-17T20:48:45Z", "author_association": "NONE", "body": "I submitted CLA and got confirmation number 59720130715032301\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21143686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21307671", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#issuecomment-21307671", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/41", "id": 21307671, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-21T09:52:03Z", "updated_at": "2013-07-21T09:52:03Z", "author_association": "MEMBER", "body": "Package tangles is something i am fixing as part of INTEXT-55. There are several more changes to fix sonar violation. This is a part of that PR. Would that be ok?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21307671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21431991", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#issuecomment-21431991", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/41", "id": 21431991, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-07-23T17:40:25Z", "updated_at": "2013-07-23T17:48:46Z", "author_association": "MEMBER", "body": "I have pushed the changes requested for the review\n\nAttribute `local-directory` is not needed as the GET operation returns the input stream to the\nobject on bucket.\n\nThere are cases where we actually desire to reuse common functionality of the SI file project. But for some challenges it is not very straight forward and hence I have no dependency on SI file and hence defined filters here. Once we refactor to use a common base from I guess we can re use the filters. If you still want me to see how easy it is to use the filter from the SI file, i can analyze, open a new JIRA and a separate PR for that change.\n\n`remote-command` and `remote-command-expression` are mutually exclusive to each other. This is something I had discussed with @garyrussell  on skype and we decided that rather than have the gateway for one command, we should also allow to specify the command expression to let the user execute a different command per incoming message.\nThis is the reason why it is named it as `remote-command` and `remote-command-expression` to avoid the confusion.\nAlso other attributes of gateway are kept consistent with the outbound adapter. Such as the `remote-directory`,\n`remote-directory-expression` etc. This actually acts as the expression attribute for the ftp and are mutually\nexclusive to each other too. To avoid the confusion I have taken the liberty to name them. Let me know if you have any other views.\n\n[INTEXT-85](https://jira.springsource.org/browse/INTEXT-85) is created for adding support for `filename-regex` and `filename-pattern` to S3 outbound gateway\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21431991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21966951", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/56#issuecomment-21966951", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/56", "id": 21966951, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-08-01T20:23:59Z", "updated_at": "2013-08-01T20:23:59Z", "author_association": "MEMBER", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/21966951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/25634061", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/54#issuecomment-25634061", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/54", "id": 25634061, "user": {"login": "relango", "id": 768040, "avatar_url": "https://avatars3.githubusercontent.com/u/768040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/relango", "html_url": "https://github.com/relango", "followers_url": "https://api.github.com/users/relango/followers", "following_url": "https://api.github.com/users/relango/following{/other_user}", "gists_url": "https://api.github.com/users/relango/gists{/gist_id}", "starred_url": "https://api.github.com/users/relango/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/relango/subscriptions", "organizations_url": "https://api.github.com/users/relango/orgs", "repos_url": "https://api.github.com/users/relango/repos", "events_url": "https://api.github.com/users/relango/events{/privacy}", "received_events_url": "https://api.github.com/users/relango/received_events", "type": "User", "site_admin": false}, "created_at": "2013-10-03T16:09:23Z", "updated_at": "2013-10-03T16:09:23Z", "author_association": "NONE", "body": "Closing this in favor of https://github.com/spring-projects/spring-integration-extensions/pull/58\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/25634061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/25812967", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/58#issuecomment-25812967", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/58", "id": 25812967, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-10-07T14:31:28Z", "updated_at": "2013-10-07T14:31:28Z", "author_association": "MEMBER", "body": "@relango Can you do me a huge favor and rebase your PR with the latest master? I ran into a few issues and as you know the code better...Thanks!!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/25812967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/25813280", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/58#issuecomment-25813280", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/58", "id": 25813280, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-10-07T14:34:45Z", "updated_at": "2013-10-07T14:34:45Z", "author_association": "MEMBER", "body": "Please also double-check that there are no trailing white-spaces and that we use tabs instead of spaces.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/25813280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/25901737", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/58#issuecomment-25901737", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/58", "id": 25901737, "user": {"login": "relango", "id": 768040, "avatar_url": "https://avatars3.githubusercontent.com/u/768040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/relango", "html_url": "https://github.com/relango", "followers_url": "https://api.github.com/users/relango/followers", "following_url": "https://api.github.com/users/relango/following{/other_user}", "gists_url": "https://api.github.com/users/relango/gists{/gist_id}", "starred_url": "https://api.github.com/users/relango/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/relango/subscriptions", "organizations_url": "https://api.github.com/users/relango/orgs", "repos_url": "https://api.github.com/users/relango/repos", "events_url": "https://api.github.com/users/relango/events{/privacy}", "received_events_url": "https://api.github.com/users/relango/received_events", "type": "User", "site_admin": false}, "created_at": "2013-10-08T15:45:00Z", "updated_at": "2013-10-08T15:45:00Z", "author_association": "NONE", "body": "Fixed formatting based on your comments and merged my changes with latest master.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/25901737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/26046246", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/59#issuecomment-26046246", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/59", "id": 26046246, "user": {"login": "ericbottard", "id": 313494, "avatar_url": "https://avatars3.githubusercontent.com/u/313494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericbottard", "html_url": "https://github.com/ericbottard", "followers_url": "https://api.github.com/users/ericbottard/followers", "following_url": "https://api.github.com/users/ericbottard/following{/other_user}", "gists_url": "https://api.github.com/users/ericbottard/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericbottard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericbottard/subscriptions", "organizations_url": "https://api.github.com/users/ericbottard/orgs", "repos_url": "https://api.github.com/users/ericbottard/repos", "events_url": "https://api.github.com/users/ericbottard/events{/privacy}", "received_events_url": "https://api.github.com/users/ericbottard/received_events", "type": "User", "site_admin": false}, "created_at": "2013-10-10T11:36:57Z", "updated_at": "2013-10-10T11:36:57Z", "author_association": "MEMBER", "body": "As a side note, one could argue that this is actually a bug in HttpURLConnection but...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/26046246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/26047743", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/59#issuecomment-26047743", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/59", "id": 26047743, "user": {"login": "ericbottard", "id": 313494, "avatar_url": "https://avatars3.githubusercontent.com/u/313494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericbottard", "html_url": "https://github.com/ericbottard", "followers_url": "https://api.github.com/users/ericbottard/followers", "following_url": "https://api.github.com/users/ericbottard/following{/other_user}", "gists_url": "https://api.github.com/users/ericbottard/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericbottard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericbottard/subscriptions", "organizations_url": "https://api.github.com/users/ericbottard/orgs", "repos_url": "https://api.github.com/users/ericbottard/repos", "events_url": "https://api.github.com/users/ericbottard/events{/privacy}", "received_events_url": "https://api.github.com/users/ericbottard/received_events", "type": "User", "site_admin": false}, "created_at": "2013-10-10T12:04:46Z", "updated_at": "2013-10-10T12:04:46Z", "author_association": "MEMBER", "body": "WOW. Correction. The sources found in http://dev.splunk.com/goto/sdk-java are correct, as is the jar you get by compiling from source.\nThe sources found in http://dev.splunk.com/goto/sdk-java-jar (the .java files inside the jar) seem to be correct as well, but THEY DO NOT CORRESPOND TO THE .CLASS FILES INSIDE THAT JAR.\n\nHow sick is that?\n\nAnyway...\n\nhttp://dev.splunk.com/view/splunk-sdk-java/SP-CAAAECN\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/26047743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/27257375", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/58#issuecomment-27257375", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/58", "id": 27257375, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-10-28T21:12:40Z", "updated_at": "2013-10-28T21:13:10Z", "author_association": "MEMBER", "body": "Merged. @relango did quite a bit of whitespace cleanup. The rebase also took quite a while and was quite tricky. Please check if everything is working as expected. It looks good know but I may have missed something. Some of the tests are still causing some warnings during compilation - may want to create a Jira for that. **Thanks for your work!!**\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/27257375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/28841582", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/60#issuecomment-28841582", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/60", "id": 28841582, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-19T22:14:41Z", "updated_at": "2013-11-19T22:14:41Z", "author_association": "MEMBER", "body": "Merged.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/28841582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/30550328", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/61#issuecomment-30550328", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/61", "id": 30550328, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-13T22:51:05Z", "updated_at": "2013-12-13T22:51:05Z", "author_association": "MEMBER", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/30550328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31047483", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/62#issuecomment-31047483", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/62", "id": 31047483, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-20T22:46:31Z", "updated_at": "2013-12-20T22:46:31Z", "author_association": "MEMBER", "body": "LGTM; merging\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31047483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31108780", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#issuecomment-31108780", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/41", "id": 31108780, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-23T08:35:48Z", "updated_at": "2013-12-23T08:35:48Z", "author_association": "MEMBER", "body": "Hi, there!\nHaven't reviewed it fully, but looks like it should be based on new `RemoteFileTemplate`.\n\nCheers\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31108780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31313243", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#issuecomment-31313243", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/41", "id": 31313243, "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "created_at": "2013-12-29T08:06:47Z", "updated_at": "2013-12-29T08:06:47Z", "author_association": "MEMBER", "body": "Hey Artem, My apologies for not being able to reply earlier. Very much tied up with the book's schedule and it will go on till May. I am very much keen to take this PR up again, include SQS support and have Dynamo DB too in my mind post May. Hope that would be fine :)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31313243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31994722", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/64#issuecomment-31994722", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/64", "id": 31994722, "user": {"login": "lorochka", "id": 5795832, "avatar_url": "https://avatars2.githubusercontent.com/u/5795832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorochka", "html_url": "https://github.com/lorochka", "followers_url": "https://api.github.com/users/lorochka/followers", "following_url": "https://api.github.com/users/lorochka/following{/other_user}", "gists_url": "https://api.github.com/users/lorochka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorochka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorochka/subscriptions", "organizations_url": "https://api.github.com/users/lorochka/orgs", "repos_url": "https://api.github.com/users/lorochka/repos", "events_url": "https://api.github.com/users/lorochka/events{/privacy}", "received_events_url": "https://api.github.com/users/lorochka/received_events", "type": "User", "site_admin": false}, "created_at": "2014-01-10T01:14:32Z", "updated_at": "2014-01-10T01:14:32Z", "author_association": "NONE", "body": "Changed nothing, but got:\n\n`\norg.springframework.integration.MessagingException: search Splunk data failed\n    at org.springframework.integration.splunk.support.SplunkExecutor.poll(SplunkExecutor.java:74)\n    at org.springframework.integration.splunk.inbound.SplunkPollingChannelAdapter.receive(SplunkPollingChannelAdapter.java:66)\n    at com.rbi.bdd.steps.SplunkVZTIntTestingStep.thenTheVZTServiceTransactionLogsShouldPresentOnSplunk(SplunkVZTIntTestingStep.java:45)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:550)\n    at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:499)\n    at org.jbehave.core.embedder.StoryRunner.runStepsWhileKeepingState(StoryRunner.java:479)\n    at org.jbehave.core.embedder.StoryRunner.runScenarioSteps(StoryRunner.java:443)\n    at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:305)\n    at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:219)\n    at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:180)\n    at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:229)\n    at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: could not connect to Splunk Server @ RBHQLKONDRATE-D:8089 - null\n    at org.springframework.integration.splunk.support.SplunkServiceFactory.getService(SplunkServiceFactory.java:81)\n    at org.springframework.integration.splunk.support.SplunkDataReader.runQuery(SplunkDataReader.java:288)\n    at org.springframework.integration.splunk.support.SplunkDataReader.nonBlockingSearch(SplunkDataReader.java:317)\n    at org.springframework.integration.splunk.support.SplunkDataReader.read(SplunkDataReader.java:188)\n    at org.springframework.integration.splunk.support.SplunkExecutor.poll(SplunkExecutor.java:70)\n    ... 19 more\nReports view generated with 1 stories (of which 0 pending) containing 1 scenarios (of which 0 pending)\n`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31994722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31994938", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/64#issuecomment-31994938", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/64", "id": 31994938, "user": {"login": "lorochka", "id": 5795832, "avatar_url": "https://avatars2.githubusercontent.com/u/5795832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorochka", "html_url": "https://github.com/lorochka", "followers_url": "https://api.github.com/users/lorochka/followers", "following_url": "https://api.github.com/users/lorochka/following{/other_user}", "gists_url": "https://api.github.com/users/lorochka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorochka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorochka/subscriptions", "organizations_url": "https://api.github.com/users/lorochka/orgs", "repos_url": "https://api.github.com/users/lorochka/repos", "events_url": "https://api.github.com/users/lorochka/events{/privacy}", "received_events_url": "https://api.github.com/users/lorochka/received_events", "type": "User", "site_admin": false}, "created_at": "2014-01-10T01:18:44Z", "updated_at": "2014-01-10T01:18:44Z", "author_association": "NONE", "body": "New exception - nothing was changed:\n\n`\norg.springframework.integration.MessagingException: search Splunk data failed\n    at org.springframework.integration.splunk.support.SplunkExecutor.poll(SplunkExecutor.java:74)\n    at org.springframework.integration.splunk.inbound.SplunkPollingChannelAdapter.receive(SplunkPollingChannelAdapter.java:66)\n    at com.rbi.bdd.steps.SplunkVZTIntTestingStep.thenTheVZTServiceTransactionLogsShouldPresentOnSplunk(SplunkVZTIntTestingStep.java:45)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:550)\n    at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:499)\n    at org.jbehave.core.embedder.StoryRunner.runStepsWhileKeepingState(StoryRunner.java:479)\n    at org.jbehave.core.embedder.StoryRunner.runScenarioSteps(StoryRunner.java:443)\n    at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:305)\n    at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:219)\n    at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:180)\n    at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:229)\n    at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: could not connect to Splunk Server @ RBHQLKONDRATE-D:8089 - java.lang.RuntimeException: Software caused connection abort: recv failed\n    at org.springframework.integration.splunk.support.SplunkServiceFactory.getService(SplunkServiceFactory.java:81)\n    at org.springframework.integration.splunk.support.SplunkDataReader.runQuery(SplunkDataReader.java:288)\n    at org.springframework.integration.splunk.support.SplunkDataReader.nonBlockingSearch(SplunkDataReader.java:317)\n    at org.springframework.integration.splunk.support.SplunkDataReader.read(SplunkDataReader.java:188)\n    at org.springframework.integration.splunk.support.SplunkExecutor.poll(SplunkExecutor.java:70)\n    ... 19 more\n`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/31994938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/32547944", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/64#issuecomment-32547944", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/64", "id": 32547944, "user": {"login": "lorochka", "id": 5795832, "avatar_url": "https://avatars2.githubusercontent.com/u/5795832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorochka", "html_url": "https://github.com/lorochka", "followers_url": "https://api.github.com/users/lorochka/followers", "following_url": "https://api.github.com/users/lorochka/following{/other_user}", "gists_url": "https://api.github.com/users/lorochka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorochka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorochka/subscriptions", "organizations_url": "https://api.github.com/users/lorochka/orgs", "repos_url": "https://api.github.com/users/lorochka/repos", "events_url": "https://api.github.com/users/lorochka/events{/privacy}", "received_events_url": "https://api.github.com/users/lorochka/received_events", "type": "User", "site_admin": false}, "created_at": "2014-01-16T21:18:02Z", "updated_at": "2014-01-16T21:18:02Z", "author_association": "NONE", "body": "It looks like nobody cares. So this issue was with Splunk 6. When I switched to Spluck 5 everything worked out.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/32547944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/32549379", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/64#issuecomment-32549379", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/64", "id": 32549379, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2014-01-16T21:34:30Z", "updated_at": "2014-01-16T21:34:30Z", "author_association": "MEMBER", "body": "@lorochka  Sorry for missing the notification on this one - I went ahead a and created a Jira for this - https://jira.springsource.org/browse/INTEXT-94\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/32549379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/32551723", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/64#issuecomment-32551723", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/64", "id": 32551723, "user": {"login": "lorochka", "id": 5795832, "avatar_url": "https://avatars2.githubusercontent.com/u/5795832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorochka", "html_url": "https://github.com/lorochka", "followers_url": "https://api.github.com/users/lorochka/followers", "following_url": "https://api.github.com/users/lorochka/following{/other_user}", "gists_url": "https://api.github.com/users/lorochka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorochka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorochka/subscriptions", "organizations_url": "https://api.github.com/users/lorochka/orgs", "repos_url": "https://api.github.com/users/lorochka/repos", "events_url": "https://api.github.com/users/lorochka/events{/privacy}", "received_events_url": "https://api.github.com/users/lorochka/received_events", "type": "User", "site_admin": false}, "created_at": "2014-01-16T22:00:35Z", "updated_at": "2014-01-16T22:00:35Z", "author_association": "NONE", "body": "Thank you, ghillert!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/32551723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/32677407", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/63#issuecomment-32677407", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/63", "id": 32677407, "user": {"login": "deeptikohli", "id": 5738648, "avatar_url": "https://avatars1.githubusercontent.com/u/5738648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deeptikohli", "html_url": "https://github.com/deeptikohli", "followers_url": "https://api.github.com/users/deeptikohli/followers", "following_url": "https://api.github.com/users/deeptikohli/following{/other_user}", "gists_url": "https://api.github.com/users/deeptikohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/deeptikohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deeptikohli/subscriptions", "organizations_url": "https://api.github.com/users/deeptikohli/orgs", "repos_url": "https://api.github.com/users/deeptikohli/repos", "events_url": "https://api.github.com/users/deeptikohli/events{/privacy}", "received_events_url": "https://api.github.com/users/deeptikohli/received_events", "type": "User", "site_admin": false}, "created_at": "2014-01-18T08:38:25Z", "updated_at": "2014-01-18T08:38:25Z", "author_association": "NONE", "body": "I am also looking for early version to try.  Meantime, I am trying to use this (https://github.com/3pillarlabs/spring-integration-aws) but not working\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/32677407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/35743137", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/65#issuecomment-35743137", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/65", "id": 35743137, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-02-21T15:55:24Z", "updated_at": "2014-02-21T15:55:24Z", "author_association": "MEMBER", "body": "Hi Esteban; to-date, we have been putting SI 4 dependent versions on the SPR40 branch.\n\nI am ok with this being on master, but we should bump the version (0.6?) so at least we could create a branch if a patch is needed for 0.5 for SI 2.x/3.x users.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/35743137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/35746039", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/65#issuecomment-35746039", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/65", "id": 35746039, "user": {"login": "st96d045", "id": 989477, "avatar_url": "https://avatars1.githubusercontent.com/u/989477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/st96d045", "html_url": "https://github.com/st96d045", "followers_url": "https://api.github.com/users/st96d045/followers", "following_url": "https://api.github.com/users/st96d045/following{/other_user}", "gists_url": "https://api.github.com/users/st96d045/gists{/gist_id}", "starred_url": "https://api.github.com/users/st96d045/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/st96d045/subscriptions", "organizations_url": "https://api.github.com/users/st96d045/orgs", "repos_url": "https://api.github.com/users/st96d045/repos", "events_url": "https://api.github.com/users/st96d045/events{/privacy}", "received_events_url": "https://api.github.com/users/st96d045/received_events", "type": "User", "site_admin": false}, "created_at": "2014-02-21T16:22:13Z", "updated_at": "2014-02-21T16:22:13Z", "author_association": "NONE", "body": "Hi Gary\nI am ok either way. SPR40 seems to be behind master, so perhaps we need to merge all the latest set of changes from master into SPR40 first and then I can make my changes on top of that. The other thing is that not all projects in the SPR40 branch have been updated to SI 4, so to make it a \"true\" SI 4-based branch, we should also go and update all projects to SI 4. I can make those changes on a separate JIRA if you think it is worth doing it. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/35746039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/35752534", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/65#issuecomment-35752534", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/65", "id": 35752534, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-02-21T17:25:53Z", "updated_at": "2014-02-21T17:25:53Z", "author_association": "MEMBER", "body": "Good point, maybe we could make a new KafkaSI4 branch from master.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/35752534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/35900480", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/65#issuecomment-35900480", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/65", "id": 35900480, "user": {"login": "st96d045", "id": 989477, "avatar_url": "https://avatars1.githubusercontent.com/u/989477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/st96d045", "html_url": "https://github.com/st96d045", "followers_url": "https://api.github.com/users/st96d045/followers", "following_url": "https://api.github.com/users/st96d045/following{/other_user}", "gists_url": "https://api.github.com/users/st96d045/gists{/gist_id}", "starred_url": "https://api.github.com/users/st96d045/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/st96d045/subscriptions", "organizations_url": "https://api.github.com/users/st96d045/orgs", "repos_url": "https://api.github.com/users/st96d045/repos", "events_url": "https://api.github.com/users/st96d045/events{/privacy}", "received_events_url": "https://api.github.com/users/st96d045/received_events", "type": "User", "site_admin": false}, "created_at": "2014-02-24T15:56:38Z", "updated_at": "2014-02-24T15:56:38Z", "author_association": "NONE", "body": "Works for me. I will just re-submit my PR to that branch once its ready.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/35900480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/38709647", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/66#issuecomment-38709647", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/66", "id": 38709647, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-03-26T16:57:09Z", "updated_at": "2014-03-26T16:57:09Z", "author_association": "MEMBER", "body": "Hi Glenn, \n\nThis needs to be done on the SPR40 branch not master - we need to keep master compatible with SI 3.0.x for now.\n\nAlso, you already have a merged PR on that branch that brought splunk up to SI 4.0.0.M2 a few months ago...\n\nhttps://github.com/spring-projects/spring-integration-extensions/pull/62\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/38709647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/38870390", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/63#issuecomment-38870390", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/63", "id": 38870390, "user": {"login": "brandon-atkinson", "id": 764157, "avatar_url": "https://avatars1.githubusercontent.com/u/764157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandon-atkinson", "html_url": "https://github.com/brandon-atkinson", "followers_url": "https://api.github.com/users/brandon-atkinson/followers", "following_url": "https://api.github.com/users/brandon-atkinson/following{/other_user}", "gists_url": "https://api.github.com/users/brandon-atkinson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandon-atkinson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandon-atkinson/subscriptions", "organizations_url": "https://api.github.com/users/brandon-atkinson/orgs", "repos_url": "https://api.github.com/users/brandon-atkinson/repos", "events_url": "https://api.github.com/users/brandon-atkinson/events{/privacy}", "received_events_url": "https://api.github.com/users/brandon-atkinson/received_events", "type": "User", "site_admin": false}, "created_at": "2014-03-27T22:44:58Z", "updated_at": "2014-03-27T22:44:58Z", "author_association": "NONE", "body": "The 3pillarlabs implementation is built on an older version of spring integration. Needs to be updated to a modern version(s?), and schema versions that track with spring integration schema versioning (so we know which version its compatible with).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/38870390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/39393386", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/68#issuecomment-39393386", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/68", "id": 39393386, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-02T22:43:21Z", "updated_at": "2014-04-02T22:43:21Z", "author_association": "MEMBER", "body": "I am not familiar with the kafka extension but after a quick look I believe your assessment is correct; polled adapters should return `null` if there's no content.\n\nIf you are interested in making a contribution, please see the guidelines in the wiki: https://github.com/spring-projects/spring-integration-extensions/wiki\n\n@sobychacko\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/39393386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41243284", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-41243284", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 41243284, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-24T05:11:18Z", "updated_at": "2014-04-24T05:11:18Z", "author_association": "MEMBER", "body": "Hi; thanks for the contribution; apologies if you already did so, but did you \"sign\" the CLA?\n\nhttps://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41243284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41244383", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-41244383", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 41244383, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-24T05:38:06Z", "updated_at": "2014-04-24T05:38:06Z", "author_association": "NONE", "body": "Yes\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41244383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41312000", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/67#issuecomment-41312000", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/67", "id": 41312000, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-24T18:00:11Z", "updated_at": "2014-04-24T18:00:11Z", "author_association": "MEMBER", "body": "merged \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41312000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41322178", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/70#issuecomment-41322178", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/70", "id": 41322178, "user": {"login": "dturanski", "id": 886859, "avatar_url": "https://avatars1.githubusercontent.com/u/886859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dturanski", "html_url": "https://github.com/dturanski", "followers_url": "https://api.github.com/users/dturanski/followers", "following_url": "https://api.github.com/users/dturanski/following{/other_user}", "gists_url": "https://api.github.com/users/dturanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dturanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dturanski/subscriptions", "organizations_url": "https://api.github.com/users/dturanski/orgs", "repos_url": "https://api.github.com/users/dturanski/repos", "events_url": "https://api.github.com/users/dturanski/events{/privacy}", "received_events_url": "https://api.github.com/users/dturanski/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-24T19:34:02Z", "updated_at": "2014-04-24T19:34:02Z", "author_association": "MEMBER", "body": "The SplunkEvent class fundamentally wraps a Map<String,String> so requires a key value pair. This code was contributed by Splunk originally and IIRC serializes naturally to a format that Splunk can natively parse. There are currently no plans to provide an alternate implementation. However community contributions are always welcome. In the mean time, you should be able to hard code the key or create a unique key for each json document, whatever is appropriate for your application. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41322178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41458675", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/70#issuecomment-41458675", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/70", "id": 41458675, "user": {"login": "kalyanvgopal", "id": 2087841, "avatar_url": "https://avatars2.githubusercontent.com/u/2087841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalyanvgopal", "html_url": "https://github.com/kalyanvgopal", "followers_url": "https://api.github.com/users/kalyanvgopal/followers", "following_url": "https://api.github.com/users/kalyanvgopal/following{/other_user}", "gists_url": "https://api.github.com/users/kalyanvgopal/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalyanvgopal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalyanvgopal/subscriptions", "organizations_url": "https://api.github.com/users/kalyanvgopal/orgs", "repos_url": "https://api.github.com/users/kalyanvgopal/repos", "events_url": "https://api.github.com/users/kalyanvgopal/events{/privacy}", "received_events_url": "https://api.github.com/users/kalyanvgopal/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-26T03:29:18Z", "updated_at": "2014-04-26T03:29:18Z", "author_association": "NONE", "body": "Thanks for response. we realized that splunk is also parsing json natively. \nThe current format <b>\"key event\" </b> suppors for a plain text events and \nthe format <b> {\"key\": json-object}.</b> works for json formatted events.\nI can contribute with an additional event type as it helps me to reuse the same adapter.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41458675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41458810", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/70#issuecomment-41458810", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/70", "id": 41458810, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-26T03:37:11Z", "updated_at": "2014-04-26T03:37:11Z", "author_association": "MEMBER", "body": "Great! Please be sure to \"sign\" to CLA as discussed under `Contributing` in the [README](https://github.com/spring-projects/spring-integration-extensions/blob/master/README.md)\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41458810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41525081", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/70#issuecomment-41525081", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/70", "id": 41525081, "user": {"login": "kalyanvgopal", "id": 2087841, "avatar_url": "https://avatars2.githubusercontent.com/u/2087841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalyanvgopal", "html_url": "https://github.com/kalyanvgopal", "followers_url": "https://api.github.com/users/kalyanvgopal/followers", "following_url": "https://api.github.com/users/kalyanvgopal/following{/other_user}", "gists_url": "https://api.github.com/users/kalyanvgopal/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalyanvgopal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalyanvgopal/subscriptions", "organizations_url": "https://api.github.com/users/kalyanvgopal/orgs", "repos_url": "https://api.github.com/users/kalyanvgopal/repos", "events_url": "https://api.github.com/users/kalyanvgopal/events{/privacy}", "received_events_url": "https://api.github.com/users/kalyanvgopal/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-28T05:51:40Z", "updated_at": "2014-04-28T05:51:40Z", "author_association": "NONE", "body": "Thanks Gary. I created the following jira to track the task.\nhttps://jira.spring.io/browse/INT-3390\nSo, i am closing this question for now.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/41525081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43169900", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-43169900", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 43169900, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-15T05:28:36Z", "updated_at": "2014-05-15T05:28:36Z", "author_association": "NONE", "body": "Is there someone around to have a look?\nCheers\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43169900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43269342", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-43269342", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 43269342, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-15T21:47:36Z", "updated_at": "2014-05-15T21:47:36Z", "author_association": "MEMBER", "body": "Sorry; we've been tied up with releases; @dturanski @ghillert  - any chance one of you can take a look at this?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43269342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43307083", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-43307083", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 43307083, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-16T08:09:14Z", "updated_at": "2014-05-16T08:09:14Z", "author_association": "MEMBER", "body": "Looks like `SplunkParserUtils` doesn't provide so much value and can be removed.\nIt doesn't hurt to use `BeanDefinitionBuilder.genericBeanDefinition(SplunkExecutor.class)` directly from parsers.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43307083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43307512", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-43307512", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 43307512, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-16T08:15:51Z", "updated_at": "2014-05-16T08:15:51Z", "author_association": "MEMBER", "body": "Thank you, Olivier, for contribution!\n\nI'm not well with Splunk and there is need review from @dturanski anyway, however I tried to provide comments as much as possible.\n\nAnd one more comment: there is need tests on the matter in any event\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43307512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43403078", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-43403078", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 43403078, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-17T10:09:48Z", "updated_at": "2014-05-17T10:09:48Z", "author_association": "MEMBER", "body": "There is still need tests on the matter and I think your commit message with description should be moved to the `README.md`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43403078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43617731", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/71#issuecomment-43617731", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/71", "id": 43617731, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-20T12:16:35Z", "updated_at": "2014-05-20T12:16:35Z", "author_association": "MEMBER", "body": "Thank you, @man8 , for fixing it. However ever for so simple (VERY) fix we should be sure that you signed CLA: https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43617731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43865346", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/72#issuecomment-43865346", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/72", "id": 43865346, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-22T09:17:50Z", "updated_at": "2014-05-22T09:17:50Z", "author_association": "MEMBER", "body": "It does not make sense. The MQTT module is now in the Core Int project: http://search.maven.org/#search|ga|1|spring-integration-mqtt\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43865346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43871649", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/72#issuecomment-43871649", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/72", "id": 43871649, "user": {"login": "bitsal", "id": 5635839, "avatar_url": "https://avatars3.githubusercontent.com/u/5635839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitsal", "html_url": "https://github.com/bitsal", "followers_url": "https://api.github.com/users/bitsal/followers", "following_url": "https://api.github.com/users/bitsal/following{/other_user}", "gists_url": "https://api.github.com/users/bitsal/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitsal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitsal/subscriptions", "organizations_url": "https://api.github.com/users/bitsal/orgs", "repos_url": "https://api.github.com/users/bitsal/repos", "events_url": "https://api.github.com/users/bitsal/events{/privacy}", "received_events_url": "https://api.github.com/users/bitsal/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-22T10:32:50Z", "updated_at": "2014-05-22T10:35:49Z", "author_association": "NONE", "body": "I'm wondering about spring-integration-core. We wanna use 4.0.0.RELEASE version but we couldn't because spring-integration-kafka (we also use it) has dependency to 2.2.4 version where there are usages of org.springframework.integration.Message, for 4.0.0 this Message was moved to spring-messaging module into other package org.springframework.messaging.Message.\n\nIt one thing that I noticed. May be there are other dependencies were broken in 4.0.0 version.\n\nWhat do you think about moving to 4.0.0 now? I think it make sense for guys who wanna use 4.0.0 spring integration.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43871649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43872522", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/72#issuecomment-43872522", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/72", "id": 43872522, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-22T10:45:28Z", "updated_at": "2014-05-22T10:45:28Z", "author_association": "MEMBER", "body": "I'm a bit confusing what you are going to achieve.\nYoy've submitted PR for MQTT module, but you worry about Kafka module.\n\nWhere is the truth?\n\nWe have a PR #65 for Kafka, but looks like it has been left without contributor attention.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43872522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43874041", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/72#issuecomment-43874041", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/72", "id": 43874041, "user": {"login": "bitsal", "id": 5635839, "avatar_url": "https://avatars3.githubusercontent.com/u/5635839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitsal", "html_url": "https://github.com/bitsal", "followers_url": "https://api.github.com/users/bitsal/followers", "following_url": "https://api.github.com/users/bitsal/following{/other_user}", "gists_url": "https://api.github.com/users/bitsal/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitsal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitsal/subscriptions", "organizations_url": "https://api.github.com/users/bitsal/orgs", "repos_url": "https://api.github.com/users/bitsal/repos", "events_url": "https://api.github.com/users/bitsal/events{/privacy}", "received_events_url": "https://api.github.com/users/bitsal/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-22T11:05:43Z", "updated_at": "2014-05-22T11:05:43Z", "author_association": "NONE", "body": "Thank you for such quick answers.\nI thought that I had created a pull request to the kafka module. I'm new on GitHub and it's my first pull request here)). Sorry for that.  \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/43874041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44244318", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/65#issuecomment-44244318", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/65", "id": 44244318, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T07:44:23Z", "updated_at": "2014-05-27T07:44:23Z", "author_association": "MEMBER", "body": "Sorry for delay.\nSo, now `SPR40` is up-to-date behind the master.\nYou can go ahead with PR for upgrading Kafka module to SF 4.0 and SI 4.0.\n\nThanks\n\nWe close this PR as one for wrong upstream\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44244318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44244655", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/57#issuecomment-44244655", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/57", "id": 44244655, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T07:49:13Z", "updated_at": "2014-05-27T07:49:13Z", "author_association": "MEMBER", "body": "MQTT module is under Core project now.\nSo I'm closing this issue as not relevant.\nIf there is need something to to fix the JIRA is for you: https://jira.spring.io/browse/INT\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44244655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44270026", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/57#issuecomment-44270026", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/57", "id": 44270026, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T12:42:43Z", "updated_at": "2014-05-27T12:42:43Z", "author_association": "MEMBER", "body": "Artem; my fault; I should have closed this; I worked with @andypiper last year to make this happen.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44270026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44326264", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/73#issuecomment-44326264", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/73", "id": 44326264, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T19:52:27Z", "updated_at": "2014-05-27T19:53:14Z", "author_association": "MEMBER", "body": "You need to add `@ComponentScan` to `MyIntegrationFlow` - Spring only looks for `@Component`s when that annotation exist. Or, if you are loading these beans from XML, use `<contexy:component-scan/>`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44326264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44327043", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/73#issuecomment-44327043", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/73", "id": 44327043, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T19:58:48Z", "updated_at": "2014-05-27T19:58:48Z", "author_association": "NONE", "body": "I am using JavaConfig. I put the @ComponentScan on MyIntegrationFlow and the service bean is still null.\n\nI also tried to change @Component to @MessagePoint but it doesn't work\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44327043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44344034", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/73#issuecomment-44344034", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/73", "id": 44344034, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T22:31:29Z", "updated_at": "2014-05-27T22:31:29Z", "author_association": "MEMBER", "body": "How are you creating your application context? The sample that uses Spring Boot works just fine...\n\nhttps://github.com/spring-projects/spring-integration-samples/tree/master/dsl\n\nI suggest you turn on DEBUG logging for `org.springframework` all the wiring will be logged, and it should become clear.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44344034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44347012", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/73#issuecomment-44347012", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/73", "id": 44347012, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T23:10:14Z", "updated_at": "2014-05-27T23:10:14Z", "author_association": "NONE", "body": "I use also spring boot. The sample doesn't implement my issue that is an autowired bean that uses another autowired bean\n\nI will try your suggestion (debug mode) \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44347012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44355869", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/73#issuecomment-44355869", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/73", "id": 44355869, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-28T01:33:01Z", "updated_at": "2014-05-28T01:34:13Z", "author_association": "NONE", "body": "I downloaded the dsl sample and I did some changes to reproduce the problem. I created two new classes and I updated the method flow as below.\n\nStart the application and you can verify the secondLevelService bean in the FirstLevelService class is null.\n\ndsl.Application.java (updated)\n\n```\n       @Autowired\n        private FirstLevelService firstLevelService; \n\n    @Bean\n    public IntegrationFlow flow() {\n        return IntegrationFlows.from(\"requestChannel\")\n                .transform(new ObjectToStringTransformer())\n                .filter((String p) -> p.startsWith(\"#spring\"),\n                        f -> f.discardChannel(\"rejected\"))\n//              .handle(twitterGate())\n//              .transform(\"payload[0]\")\n                                .transform(firstLevelService::hello)\n                .transform(new ObjectToJsonTransformer())\n                .get();\n    }\n```\n\nNew FirstLevelService (new)\n\n```\npackage dsl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.integration.annotation.Transformer;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class FirstLevelService {\n\n    @Autowired\n    private SecondLevelService secondLevelService;\n\n    @Transformer\n    public String hello(Object name) {\n        return \"hello\" + name + \" - \" + secondLevelService.world();\n    }\n}\n```\n\nNew SecondLevelService (new)\n\n```\npackage dsl;\n\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class SecondLevelService {\n\n    public String world() {\n        return \"world\";\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44355869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44367499", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/73#issuecomment-44367499", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/73", "id": 44367499, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-28T05:36:20Z", "updated_at": "2014-05-28T05:36:20Z", "author_association": "MEMBER", "body": "Since you have a cascade of `@Autowired` it is recommended to mark the \"root\" with `@Lazy`:\n\n``` java\n   @Autowired\n   @Lazy\n   private FirstLevelService firstLevelService; \n\n    @Bean\n    public IntegrationFlow flow() {\n```\n\nWe will add a note to the Docs on the matter.\n\nThank you for pointing it out!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44367499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44398275", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/73#issuecomment-44398275", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/73", "id": 44398275, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-28T12:13:06Z", "updated_at": "2014-05-28T12:13:06Z", "author_association": "NONE", "body": "It works.\n\nHowever, at this point,  I can't use @Lazy with a bean that extends AbstractReplyProducingMessageHandler. I got lazing initialization errors. I switched to a service activator and not it works\n\nThanks for your help\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44398275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44399393", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/73#issuecomment-44399393", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/73", "id": 44399393, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-28T12:26:07Z", "updated_at": "2014-05-28T12:26:07Z", "author_association": "MEMBER", "body": "Good point! Right. It is an issue, because the target object is a proxy, but we don't take care here about `user target class`.\nWill be fixed soon.\nThank you!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44399393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44420828", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/71#issuecomment-44420828", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/71", "id": 44420828, "user": {"login": "man8", "id": 160968, "avatar_url": "https://avatars0.githubusercontent.com/u/160968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/man8", "html_url": "https://github.com/man8", "followers_url": "https://api.github.com/users/man8/followers", "following_url": "https://api.github.com/users/man8/following{/other_user}", "gists_url": "https://api.github.com/users/man8/gists{/gist_id}", "starred_url": "https://api.github.com/users/man8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/man8/subscriptions", "organizations_url": "https://api.github.com/users/man8/orgs", "repos_url": "https://api.github.com/users/man8/repos", "events_url": "https://api.github.com/users/man8/events{/privacy}", "received_events_url": "https://api.github.com/users/man8/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-28T15:20:06Z", "updated_at": "2014-05-28T15:20:06Z", "author_association": "NONE", "body": "Thank you @artembilan for the advice: I've now done so.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44420828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44494549", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/71#issuecomment-44494549", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/71", "id": 44494549, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-29T04:58:27Z", "updated_at": "2014-05-29T04:58:27Z", "author_association": "MEMBER", "body": "Merged via https://github.com/spring-projects/spring-integration-extensions/commit/71dd35c0e71c8a00aa80a1efd97d4d9142efa721\n\nThank you\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44494549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44800449", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-44800449", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 44800449, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T04:02:13Z", "updated_at": "2014-06-02T04:02:13Z", "author_association": "NONE", "body": "README.md file fixed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44800449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44826746", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-44826746", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 44826746, "user": {"login": "dturanski", "id": 886859, "avatar_url": "https://avatars1.githubusercontent.com/u/886859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dturanski", "html_url": "https://github.com/dturanski", "followers_url": "https://api.github.com/users/dturanski/followers", "following_url": "https://api.github.com/users/dturanski/following{/other_user}", "gists_url": "https://api.github.com/users/dturanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dturanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dturanski/subscriptions", "organizations_url": "https://api.github.com/users/dturanski/orgs", "repos_url": "https://api.github.com/users/dturanski/repos", "events_url": "https://api.github.com/users/dturanski/events{/privacy}", "received_events_url": "https://api.github.com/users/dturanski/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T11:34:19Z", "updated_at": "2014-06-02T11:34:19Z", "author_association": "MEMBER", "body": "Looks okay other than one formatting issue. One observation from experience with similar issues with other products in production environments is configuring multiple hosts and ports for failover is more brittle this way than using a hardware load balancer with a virtual IP. That way, the concern is removed from the app configuration and doesn't need to change when servers are added or moved. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44826746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44829470", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-44829470", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 44829470, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T12:09:54Z", "updated_at": "2014-06-02T12:09:54Z", "author_association": "MEMBER", "body": "@olamy, sorry for confusing you, wouldn't you mind to move your changes to the branch based on SPR40 upstream, not master.\nSince it is a new feature we should provide it for the new version of project, which is based on Spring Framework 4.0 and Spring Integration 4.0.\nHaving that you should create a new 1.1 XSD and apply your changes there.\n\nThanks\n\nLet us know how it is comfortable for you\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44829470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44844705", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-44844705", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 44844705, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T14:37:16Z", "updated_at": "2014-06-02T14:37:16Z", "author_association": "MEMBER", "body": "@olamy, For SPR40. We've just switched `master` to the SF 4.0 and SI 4.0. \nSo, what you should here - just rebase you branch to the op-to-date master and go ahead with testing entire Splunk module.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44844705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44905641", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-44905641", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 44905641, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T23:59:11Z", "updated_at": "2014-06-02T23:59:11Z", "author_association": "NONE", "body": "@dturanski I understand and would prefer the virtual ip/load balancer solution. But my current customer doesn't want to have a load balance as a SPOF (which is understandable too :-) )\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44905641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44910434", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-44910434", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 44910434, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-03T01:23:03Z", "updated_at": "2014-06-03T01:23:03Z", "author_association": "NONE", "body": "@artembilan rebase done.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/44910434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45167082", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#issuecomment-45167082", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/69", "id": 45167082, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-04T23:58:28Z", "updated_at": "2014-06-04T23:58:28Z", "author_association": "NONE", "body": "new pr https://github.com/spring-projects/spring-integration-extensions/pull/74\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45167082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45167097", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/74#issuecomment-45167097", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/74", "id": 45167097, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-04T23:58:38Z", "updated_at": "2014-06-05T00:55:16Z", "author_association": "NONE", "body": "rework of https://github.com/spring-projects/spring-integration-extensions/pull/69\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45167097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45229375", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-45229375", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 45229375, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-05T14:54:16Z", "updated_at": "2014-06-05T14:54:16Z", "author_association": "CONTRIBUTOR", "body": "added test for multipart messages\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45229375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45235479", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-45235479", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 45235479, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-05T15:38:28Z", "updated_at": "2014-06-05T15:38:28Z", "author_association": "MEMBER", "body": "@edgedalmacio , thank you for pointing it out one more time! And, of course, thank you for any contributions.\n\nHowever woulldn't you mind to `rebase` you branch to the master, instead of `merge`?\nAfter that I'll review it quickly and if there won't be big concerns merge it!\n\nAlthough I'm sure that there is need to upgrade this project to the latest Spring Framework and Spring Integration. And maybe others dependencies. If you won't mind we can go ahead after rebasing\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45235479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45235903", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/74#issuecomment-45235903", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/74", "id": 45235903, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-05T15:41:51Z", "updated_at": "2014-06-05T15:41:51Z", "author_association": "MEMBER", "body": "@olamy , thank you!\n\nI'm going to merge it with some minor polishing, because there is an issue which we should address, too. https://jira.spring.io/browse/INTEXT-94. Do you have anything in mind on the matter? We will be appreciated for your contribution\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45235903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45324529", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/74#issuecomment-45324529", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/74", "id": 45324529, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T10:50:45Z", "updated_at": "2014-06-06T10:50:45Z", "author_association": "MEMBER", "body": "Merged via https://github.com/spring-projects/spring-integration-extensions/commit/198205058cfe6c9266ea4549bf76d4dd2e8f9785\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45324529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45327210", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/64#issuecomment-45327210", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/64", "id": 45327210, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T11:32:22Z", "updated_at": "2014-06-06T11:32:22Z", "author_association": "MEMBER", "body": "Related issue #59\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45327210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45327243", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/59#issuecomment-45327243", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/59", "id": 45327243, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T11:32:49Z", "updated_at": "2014-06-06T11:32:49Z", "author_association": "MEMBER", "body": "The JIRA on the matter: https://jira.spring.io/browse/INTEXT-94\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45327243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45343833", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/59#issuecomment-45343833", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/59", "id": 45343833, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T14:39:49Z", "updated_at": "2014-06-06T14:39:49Z", "author_association": "MEMBER", "body": "Merged #75 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45343833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45343882", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/64#issuecomment-45343882", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/64", "id": 45343882, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T14:40:18Z", "updated_at": "2014-06-06T14:40:18Z", "author_association": "MEMBER", "body": "Merged #75 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45343882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45353958", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/76#issuecomment-45353958", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/76", "id": 45353958, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T16:05:15Z", "updated_at": "2014-06-06T16:05:15Z", "author_association": "MEMBER", "body": "Any code sample on the matter? And StackTrace, please, to the studio!\nThank you\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45353958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45354214", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/76#issuecomment-45354214", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/76", "id": 45354214, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T16:07:24Z", "updated_at": "2014-06-06T16:08:17Z", "author_association": "NONE", "body": "Here is the code and after the exception\n\n``` java\n@Bean\npublic IntegrationFlow dataCollectorRouterByGroupFlow() {\n        return IntegrationFlows.from(DataCollectorChannelConstant.DATA_COLLECTOR_CHANNEL)\n                .recipientListRoute(r ->\n                        r.defaultOutputChannel(DataCollectorChannelConstant.DATA_COLLECTOR_OTHERS_GROUP_CHANNEL)\n                                .recipient(DataCollectorChannelConstant.DATA_COLLECTOR_CBP_GROUP_CHANNEL,\n                                        m -> m.getHeaders().get(GlobalHeaders.GROUP_ID) != null &&\n                                                m.getHeaders().get(GlobalHeaders.GROUP_ID).equals(Constants.CBP_GROUP_ID))\n                                .recipient(DataCollectorChannelConstant.DATA_COLLECTOR_MEC_GROUP_CHANNEL,\n                                        m -> m.getHeaders().get(GlobalHeaders.GROUP_ID) != null &&\n                                                m.getHeaders().get(GlobalHeaders.GROUP_ID).equals(Constants.MEC_GROUP_ID)))\n                .get();\n    }\n```\n\n```\n - [ERROR] org.springframework.integration.handler.LoggingHandler - org.springframework.messaging.MessageDeliveryException: no channel resolved by router and no default output channel defined\n    at org.springframework.integration.router.AbstractMessageRouter.handleMessageInternal(AbstractMessageRouter.java:194)\n    at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)\n    at org.springframework.integration.endpoint.PollingConsumer.handleMessage(PollingConsumer.java:74)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint.doPoll(AbstractPollingEndpoint.java:205)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint.access$000(AbstractPollingEndpoint.java:55)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:149)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:146)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:284)\n    at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)\n    at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)\n    at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:49)\n    at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:278)\n    at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)\n    at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:744)\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45354214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45354462", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/76#issuecomment-45354462", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/76", "id": 45354462, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T16:09:22Z", "updated_at": "2014-06-06T16:10:03Z", "author_association": "NONE", "body": "You can get it in modifying your current unit test\nin the `recipientListFlow` method you need to change `r.defaultOutputChannel(defaultOutputChannel())` to `r.defaultOutputChannel(\"defaultOutputChannel\")`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45354462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45354636", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/76#issuecomment-45354636", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/76", "id": 45354636, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T16:10:48Z", "updated_at": "2014-06-06T16:10:48Z", "author_association": "MEMBER", "body": ">  you need to change \n\nCan you get it as a workaround for now, before I'll fix it?\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45354636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45354689", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/76#issuecomment-45354689", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/76", "id": 45354689, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T16:11:17Z", "updated_at": "2014-06-06T16:11:17Z", "author_association": "NONE", "body": "Yes no problem\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45354689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45357672", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/76#issuecomment-45357672", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/76", "id": 45357672, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-06T16:38:31Z", "updated_at": "2014-06-06T16:38:31Z", "author_association": "MEMBER", "body": "It's a bug in core `RecipientListRouter`, who doesn't invoke `super.onInit();` from its `onInit()`: https://jira.spring.io/browse/INT-3431\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45357672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45704672", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/77#issuecomment-45704672", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/77", "id": 45704672, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-11T05:55:52Z", "updated_at": "2014-06-11T05:55:52Z", "author_association": "MEMBER", "body": "@olamy ,\nAs usual: thank you for contribution.\nBut wouldn't you mind to follow with Contribution rules?\nhttps://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md\n\nNow it's a bit difficult to understand what's going on without a test-case. It's not enough just to change code: it's not your own project and all community should be sure that your changes is legitimate.\n1. The JIRA ticket first with test-case to reproduce\n2. The PR only after the confirmation from project commiters\n3. The commit and changes should follow with mentioned rules for contribution and code style: https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Code-Style\n\nAll those facilities let us review and merge your commits more quickly.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45704672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45705677", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/77#issuecomment-45705677", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/77", "id": 45705677, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-11T06:14:16Z", "updated_at": "2014-06-11T06:14:16Z", "author_association": "NONE", "body": "The schema says\n\n```\n<xsd:complexType name=\"indexWriterType\">\n    <xsd:attribute name=\"index\" type=\"xsd:string\" use=\"optional\">\n            <xsd:annotation>\n                <xsd:documentation>\n                    Index to write to.\n                </xsd:documentation>\n        </xsd:annotation>\n    </xsd:attribute>\n</xsd:complexType>\n```\n\nBut there is not index property in the bean.\n\nI don't understand how this worked previously :-)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45705677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45705988", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/77#issuecomment-45705988", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/77", "id": 45705988, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-11T06:20:13Z", "updated_at": "2014-06-11T06:20:13Z", "author_association": "MEMBER", "body": "Maybe. \nBut without test-case to reproduce the issue and conviction that your change fixes it I can't apply the PR. \nLooks like it would be better, if we do it on our own - just on your report, but not commit.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45705988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45831537", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/77#issuecomment-45831537", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/77", "id": 45831537, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-12T05:29:31Z", "updated_at": "2014-06-12T05:29:31Z", "author_association": "NONE", "body": "Yup I can have a look the main issue I have is to mock splunk http exchange which I reckon is a pain due to the xml format...\nAnyway I will have a look.\nBTW more I use more I find bug as there is definitely NO test for some parts especially inbound channel\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45831537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45835404", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/77#issuecomment-45835404", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/77", "id": 45835404, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-12T06:49:48Z", "updated_at": "2014-06-12T06:49:48Z", "author_association": "MEMBER", "body": "Good (or not). \nNow I see that the issue is around XSD and parser.\nTipically we write tests only for parsers and don't do any logic.\n\nAs long as you provide some component attrbiute, you should just check if the result object has been configured with that attribute.\nI'll prepare the test-case for current issue soon.\n\nFeel free to raise JIRA tickets for all issues, which you see.\n\nAnd our apologies that we don't have test covarage yet.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45835404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45878680", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/77#issuecomment-45878680", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/77", "id": 45878680, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-12T11:05:37Z", "updated_at": "2014-06-12T11:05:37Z", "author_association": "MEMBER", "body": "@olamy , here you are the fix with test: https://github.com/artembilan/spring-integration-extensions/commit/48b725c0c3c3fd96e2e03cce83a41e34c846cc76.\nMerging...\nThank you for pointing it out\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45878680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45984704", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/78#issuecomment-45984704", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/78", "id": 45984704, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T07:52:36Z", "updated_at": "2014-06-13T07:52:36Z", "author_association": "MEMBER", "body": "Thank you for contribution.\nBut before review and (probebly) merge of your work, we should be sure that you signed the CLA: https://github.com/spring-projects/spring-integration-extensions/wiki/Contributor-Guidelines\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45984704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45997640", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-45997640", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 45997640, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T10:40:41Z", "updated_at": "2014-06-13T10:40:41Z", "author_association": "CONTRIBUTOR", "body": "Can you help me out here? \n\nI just need to push commits 69e11c3, ee1d784, d3ded03\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/45997640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46011517", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-46011517", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 46011517, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T13:36:24Z", "updated_at": "2014-06-13T13:36:24Z", "author_association": "MEMBER", "body": "All you need to do just is around Git:\n1. Switch to the `master` branch: `git checkout master`\n2. Do `git fetch -all` then `git pull upstream master`\n3. Switch to your branch: `git checkout INTEXT-73`\n4. `git rebase master --interactive`\n5. `squash` all your commits from that branch to one\n6 and push to `origin`\nHere you can find more info: https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46011517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46016217", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/78#issuecomment-46016217", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/78", "id": 46016217, "user": {"login": "jdpgrailsdev", "id": 450956, "avatar_url": "https://avatars2.githubusercontent.com/u/450956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdpgrailsdev", "html_url": "https://github.com/jdpgrailsdev", "followers_url": "https://api.github.com/users/jdpgrailsdev/followers", "following_url": "https://api.github.com/users/jdpgrailsdev/following{/other_user}", "gists_url": "https://api.github.com/users/jdpgrailsdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdpgrailsdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdpgrailsdev/subscriptions", "organizations_url": "https://api.github.com/users/jdpgrailsdev/orgs", "repos_url": "https://api.github.com/users/jdpgrailsdev/repos", "events_url": "https://api.github.com/users/jdpgrailsdev/events{/privacy}", "received_events_url": "https://api.github.com/users/jdpgrailsdev/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T14:17:19Z", "updated_at": "2014-06-13T14:17:19Z", "author_association": "NONE", "body": "I have signed the CLA (confirmation number 84320140613071640).  Please let me know if any of the formatting is not in line with what is specified in the guidelines and I can re-submit if needed.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46016217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46017395", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/78#issuecomment-46017395", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/78", "id": 46017395, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T14:26:52Z", "updated_at": "2014-06-13T14:26:52Z", "author_association": "MEMBER", "body": "Please, raise a JIRA issue (https://jira.spring.io/browse/INTEXT), create the branch with name based on JIRA ticket number and submit a new PR.\nThis one is from `master`: it isn't good.\nSince you have changes already in master, it just enough to create new one from there with any code changes.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46017395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46018442", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/78#issuecomment-46018442", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/78", "id": 46018442, "user": {"login": "jdpgrailsdev", "id": 450956, "avatar_url": "https://avatars2.githubusercontent.com/u/450956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdpgrailsdev", "html_url": "https://github.com/jdpgrailsdev", "followers_url": "https://api.github.com/users/jdpgrailsdev/followers", "following_url": "https://api.github.com/users/jdpgrailsdev/following{/other_user}", "gists_url": "https://api.github.com/users/jdpgrailsdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdpgrailsdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdpgrailsdev/subscriptions", "organizations_url": "https://api.github.com/users/jdpgrailsdev/orgs", "repos_url": "https://api.github.com/users/jdpgrailsdev/repos", "events_url": "https://api.github.com/users/jdpgrailsdev/events{/privacy}", "received_events_url": "https://api.github.com/users/jdpgrailsdev/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T14:35:20Z", "updated_at": "2014-06-13T14:35:20Z", "author_association": "NONE", "body": "Thanks.  JIRA created (https://jira.spring.io/browse/INT-3441) and PR re-submitted from branch (https://github.com/spring-projects/spring-integration-extensions/pull/79).\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46018442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46019226", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/78#issuecomment-46019226", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/78", "id": 46019226, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T14:41:36Z", "updated_at": "2014-06-13T14:41:36Z", "author_association": "MEMBER", "body": "Good.\nClosed in favor of #79 \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46019226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46019953", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/79#issuecomment-46019953", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/79", "id": 46019953, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T14:47:45Z", "updated_at": "2014-06-13T14:47:45Z", "author_association": "MEMBER", "body": "Thank for the contribution.\nNothing to complain about.\nMerging...\nHowever I'll do some polishing for the project on merge.\nAnd may be fix some bottlenecks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46019953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46021472", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/79#issuecomment-46021472", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/79", "id": 46021472, "user": {"login": "jdpgrailsdev", "id": 450956, "avatar_url": "https://avatars2.githubusercontent.com/u/450956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdpgrailsdev", "html_url": "https://github.com/jdpgrailsdev", "followers_url": "https://api.github.com/users/jdpgrailsdev/followers", "following_url": "https://api.github.com/users/jdpgrailsdev/following{/other_user}", "gists_url": "https://api.github.com/users/jdpgrailsdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdpgrailsdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdpgrailsdev/subscriptions", "organizations_url": "https://api.github.com/users/jdpgrailsdev/orgs", "repos_url": "https://api.github.com/users/jdpgrailsdev/repos", "events_url": "https://api.github.com/users/jdpgrailsdev/events{/privacy}", "received_events_url": "https://api.github.com/users/jdpgrailsdev/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T14:59:43Z", "updated_at": "2014-06-13T14:59:43Z", "author_association": "NONE", "body": "No worries.  Let me know how I can help if anything comes up.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46021472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46030743", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/79#issuecomment-46030743", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/79", "id": 46030743, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-13T16:19:13Z", "updated_at": "2014-06-13T16:19:13Z", "author_association": "MEMBER", "body": "Merged via https://github.com/spring-projects/spring-integration-extensions/commit/989ce89feddd0f5fcaf24da60772de21b097a895.\n\nI was going to upgrade to Kafka-.0.8.1.1, but looks like they change the API, especially around generics. Hance, it might be a different JIRA issue.\n\nThank you again.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46030743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46399941", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/76#issuecomment-46399941", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/76", "id": 46399941, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-18T06:20:37Z", "updated_at": "2014-06-18T06:20:37Z", "author_association": "MEMBER", "body": "The JIRA INT-3431 has been fixed. Will work as is since Spring Integration 4.0.3\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46399941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46818653", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-46818653", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 46818653, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T08:38:55Z", "updated_at": "2014-06-23T08:38:55Z", "author_association": "CONTRIBUTOR", "body": "Did I do it right?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46818653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46819179", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-46819179", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 46819179, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T08:45:24Z", "updated_at": "2014-06-23T08:45:24Z", "author_association": "MEMBER", "body": "No. Our commits have to not be there.\nLooks like your forgot to `rebase` your branch to the master\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46819179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46825300", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-46825300", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 46825300, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T09:55:06Z", "updated_at": "2014-06-23T09:55:06Z", "author_association": "CONTRIBUTOR", "body": "Can I start over? This branch is a mess.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46825300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46825530", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-46825530", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 46825530, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T09:57:52Z", "updated_at": "2014-06-23T09:57:52Z", "author_association": "MEMBER", "body": "Sure! The new brach based on `master`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46825530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46844908", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/80#issuecomment-46844908", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/80", "id": 46844908, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T13:32:14Z", "updated_at": "2014-06-23T13:32:14Z", "author_association": "MEMBER", "body": "That's true, because `.enrich()` is only for **default** implementation - `ContentEnricher`. And its purpose to avoid a creation `ContentEnricher` object manualy - avoiding `new ContentEnricher` and its setters.\nAny custom implementation might be achieved only via `.handle()` - a generic EIP-method for any `MessageHandler` custom implementation.\n\nThank you for your attention to this\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46844908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46845133", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/80#issuecomment-46845133", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/80", "id": 46845133, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T13:34:13Z", "updated_at": "2014-06-23T13:34:13Z", "author_association": "NONE", "body": "Thank for your answer\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46845133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46845359", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-46845359", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 46845359, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T13:35:59Z", "updated_at": "2014-06-23T13:35:59Z", "author_association": "CONTRIBUTOR", "body": "Should I create a new pull request?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46845359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46845859", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-46845859", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 46845859, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T13:39:52Z", "updated_at": "2014-06-23T13:39:52Z", "author_association": "MEMBER", "body": "That's true. Because this one refers to that 'bad' branch and you can't redo any existing PR.\nJust close this and link from that new one.\nHowever let me take a look to your new branch: maybe there are still some mistakes.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46845859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46849171", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#issuecomment-46849171", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/50", "id": 46849171, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T14:07:05Z", "updated_at": "2014-06-23T14:07:05Z", "author_association": "CONTRIBUTOR", "body": "Created PR https://github.com/spring-projects/spring-integration-extensions/pull/81\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46849171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46850682", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46850682", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46850682, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T14:18:41Z", "updated_at": "2014-06-23T14:18:41Z", "author_association": "MEMBER", "body": "Thank you! Looks good.\nHowever before review it we need to be sure that you signed CLA - https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46850682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46854329", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46854329", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46854329, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T14:44:35Z", "updated_at": "2014-06-23T14:44:35Z", "author_association": "CONTRIBUTOR", "body": "Should I put you under project lead?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46854329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46854570", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46854570", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46854570, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T14:46:16Z", "updated_at": "2014-06-23T14:46:16Z", "author_association": "CONTRIBUTOR", "body": "I have signed and agree to the terms of the SpringSource Individual Contributor License Agreement.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46854570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46854589", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46854589", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46854589, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T14:46:21Z", "updated_at": "2014-06-23T14:46:21Z", "author_association": "MEMBER", "body": "No. Do it like it is said in that Wiki\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46854589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46859493", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46859493", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46859493, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-23T15:22:14Z", "updated_at": "2014-06-23T15:22:14Z", "author_association": "CONTRIBUTOR", "body": "Yup. Apparently, I've signed the CLA before. Anything else you need from me?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46859493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46922768", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46922768", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46922768, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T01:32:09Z", "updated_at": "2014-06-24T07:45:34Z", "author_association": "CONTRIBUTOR", "body": "Do I create a new Jira issue to have this project use Spring 4.x?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46922768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46941137", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46941137", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46941137, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T07:46:01Z", "updated_at": "2014-06-24T07:46:01Z", "author_association": "MEMBER", "body": "True. Spring 4.0 as well as Spring Integration 4.0.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46941137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46941647", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-46941647", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 46941647, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T07:52:42Z", "updated_at": "2014-06-24T07:52:42Z", "author_association": "MEMBER", "body": "@olamy , since you are an enough active contributor, would be better, if you'd follow with with contribution process: \n*JIRA first\n- the approval for that\n- PR based on branch with JIRA ticket number\n- The correct commit message\n- Tests are required\n\nOtherwise I have to close the PR do the fix on my own.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46941647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46942928", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46942928", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46942928, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T08:06:54Z", "updated_at": "2014-06-24T08:06:54Z", "author_association": "CONTRIBUTOR", "body": "I created https://jira.spring.io/browse/INTEXT-107. Can I also work on this one?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46942928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46946460", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46946460", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46946460, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T08:47:32Z", "updated_at": "2014-06-24T08:47:32Z", "author_association": "MEMBER", "body": "Edge, you are welcome!\n\nSince you've signed the CLA there are no stops to grab JIRAs and go ahead with fixes for them, if we confirmed that the issue is valid.\n\nThank you!\n\nStarting to review the current PR, however I need some time to be aboard with the current solution.\nCome back to you soon.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46946460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46947083", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46947083", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46947083, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T08:54:37Z", "updated_at": "2014-06-24T08:54:37Z", "author_association": "MEMBER", "body": "One remark: please, follow with `commit message instructions`: \nhttps://github.com/spring-projects/spring-framework/blob/master/CONTRIBUTING.md#format-commit-messages.\nAnd include the link to JIRA issue to the commit message. \nSomething like this: https://github.com/spring-projects/spring-integration/pull/1181/commits\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46947083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46947666", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/83#issuecomment-46947666", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/83", "id": 46947666, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T09:00:59Z", "updated_at": "2014-06-24T09:00:59Z", "author_association": "MEMBER", "body": "For example here the commit message might be like this:\n\n> INTEXT-107: Upgrade to SF and SI 4.0\n> \n> JIRA: https://jira.spring.io/browse/INTEXT-107\n\nAnd really it's enough! The main concern that the headline should be <= 50 symbols length.\n\nThe code style concern: use `tabs` instead of `whitespaces` for indents\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46947666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46950217", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/83#issuecomment-46950217", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/83", "id": 46950217, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T09:29:26Z", "updated_at": "2014-06-24T09:29:26Z", "author_association": "CONTRIBUTOR", "body": "Alright, I got the commit message length. Sorry, I forgot to include the INTEXT-xxx length in the count.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46950217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46957922", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/83#issuecomment-46957922", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/83", "id": 46957922, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T11:03:15Z", "updated_at": "2014-06-24T11:03:15Z", "author_association": "MEMBER", "body": "Merged via https://github.com/spring-projects/spring-integration-extensions/commit/7590253871e892bf66441e1975778055b6a0f37e\n\nThank you very much!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46957922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46958068", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46958068", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46958068, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T11:05:04Z", "updated_at": "2014-06-24T11:05:04Z", "author_association": "MEMBER", "body": "After we merged your upgrade PR, please, rebase this one to latest master.\nAnd fix conficts, of course\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46958068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46962238", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46962238", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46962238, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T12:01:08Z", "updated_at": "2014-06-24T12:01:08Z", "author_association": "CONTRIBUTOR", "body": "rebase done. Did I do it right?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46962238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46963071", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46963071", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46963071, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T12:11:21Z", "updated_at": "2014-06-24T12:11:21Z", "author_association": "MEMBER", "body": "No, you should you Git `rebase` function, not `merge` or `pull`.\n- switch to `master`\n- `pull upstream/master`\n- switch to `INTEXT-73`\n- `rebase` will `pick all`\n\nYour commits should be on top and no one commit from master must be present here.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46963071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46965344", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46965344", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46965344, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T12:39:16Z", "updated_at": "2014-06-24T12:39:16Z", "author_association": "CONTRIBUTOR", "body": "Ok, tried it again. Did I get it this time?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46965344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46965531", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46965531", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46965531, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T12:41:23Z", "updated_at": "2014-06-24T12:41:23Z", "author_association": "MEMBER", "body": "Well done!\nPulling to review...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46965531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46968504", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46968504", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46968504, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T13:11:48Z", "updated_at": "2014-06-24T13:11:48Z", "author_association": "MEMBER", "body": "Otherwise - LGTM.\nWaiting for your polishing and merging.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46968504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46971102", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46971102", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46971102, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T13:36:03Z", "updated_at": "2014-06-24T13:36:03Z", "author_association": "CONTRIBUTOR", "body": "Alright, there you go!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46971102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46973845", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46973845", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46973845, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T13:58:32Z", "updated_at": "2014-06-24T13:58:32Z", "author_association": "MEMBER", "body": "Good.\nThe code format will be fixed on merge.\nHowever keep it in mind for the future\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46973845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46976372", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46976372", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46976372, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T14:17:10Z", "updated_at": "2014-06-24T14:17:10Z", "author_association": "MEMBER", "body": "Merged via https://github.com/spring-projects/spring-integration-extensions/commit/d1d6b068bce44c574323853d041e56269bb16bc4\n\nThank you for contribution!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46976372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46982954", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46982954", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46982954, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T15:04:11Z", "updated_at": "2014-06-24T15:04:11Z", "author_association": "CONTRIBUTOR", "body": "Thanks! Can you tell me when this will be available in central repo?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46982954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46988502", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46988502", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46988502, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T15:42:03Z", "updated_at": "2014-06-24T15:42:03Z", "author_association": "MEMBER", "body": "Just was going to ask you the same, if you need it.\nDo you mean the Maven Central or `http://repo.spring.io/libs-milestone` is enough for you ?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46988502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46995323", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46995323", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46995323, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T16:33:11Z", "updated_at": "2014-06-24T16:33:11Z", "author_association": "CONTRIBUTOR", "body": "It would be great to have it at Maven Central, but if that takes more time, milestone works as well.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46995323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46996111", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46996111", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46996111, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T16:39:46Z", "updated_at": "2014-06-24T16:39:46Z", "author_association": "CONTRIBUTOR", "body": "I'm also going to need spring-integration-cimd. Do I file a new issue and follow instructions from https://github.com/spring-projects/spring-integration-extensions/wiki/How-to-Create-New-Components\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46996111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46998331", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-46998331", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 46998331, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-24T16:57:42Z", "updated_at": "2014-06-24T16:59:17Z", "author_association": "MEMBER", "body": "True. You go right way!\n\nBTW, we have had some short internal discussion and decided that there is no stops to go ahead and release GA for SMPP to Maven Central.\nWill be done tomorrow.\n\nLooking forward for more contributions!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/46998331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47106719", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/84#issuecomment-47106719", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/84", "id": 47106719, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-25T14:19:30Z", "updated_at": "2014-06-25T14:19:30Z", "author_association": "MEMBER", "body": "I guess you mean the Java DSL.\n\nPlease, specify the project name in the future, because INTEXT repo has several different project.\n\nNow about an issue.\nIsn't this enough for you:\n\n``` java\n.delay(\"delayer\", \"200\", d -> d.get().getT2().setMessageStore(this.messageStore))\n```\n\n?\nHowever I see it is a bug: I have written `DelayerEndpointSpec` but haven't got it in the service with `.delay()` EIP-method. :smile: \n\nThank you very much!\n\nWill be fixed in the next Milestone\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47106719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47107363", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/84#issuecomment-47107363", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/84", "id": 47107363, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-25T14:24:23Z", "updated_at": "2014-06-25T14:24:23Z", "author_association": "NONE", "body": "Hi Artem,\n\nThanks for your quick answer.  It works perfectly.\n\nI will put the name of the project in the any futures questions or issues.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47107363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47108099", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/84#issuecomment-47108099", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/84", "id": 47108099, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-25T14:29:12Z", "updated_at": "2014-06-25T14:29:12Z", "author_association": "MEMBER", "body": "No, The bug is still there: leave `open`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47108099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47108283", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/84#issuecomment-47108283", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/84", "id": 47108283, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-25T14:30:31Z", "updated_at": "2014-06-25T14:30:31Z", "author_association": "MEMBER", "body": "BTW, wouldn't you mind for contributions?\nhttps://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47108283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47113415", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/84#issuecomment-47113415", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/84", "id": 47113415, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-25T15:04:41Z", "updated_at": "2014-06-25T15:04:41Z", "author_association": "NONE", "body": "Currently your solution works to set the messageStore but not the scheduler.\n\nI would like to contribute but I will see if I have time to do it.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47113415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47116282", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/84#issuecomment-47116282", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/84", "id": 47116282, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-25T15:21:42Z", "updated_at": "2014-06-25T15:21:42Z", "author_association": "MEMBER", "body": "Actually `DealyHandler` doesn't provide such an option and it only rely on that one from `ApplicationContext`. \nNo sure, if we should provide the publict setter as it was here for a long time.\nBut I think it won't hurt. Let's raise a JIRA ticket against SI Core project: https://jira.spring.io/browse/INT\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47116282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47140598", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-47140598", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 47140598, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-25T18:32:57Z", "updated_at": "2014-06-25T18:32:57Z", "author_association": "MEMBER", "body": "@edgedalmacio , the `spring-integration-smpp-1.0.0.RELEASE` is now available: http://search.maven.org/#search|ga|1|spring-integration-smpp\n\nThank you for contribution one more time!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47140598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47214757", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-47214757", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 47214757, "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-26T11:29:22Z", "updated_at": "2014-06-26T11:29:22Z", "author_association": "CONTRIBUTOR", "body": "Great! Thanks! :)\n\nShouldn't the version be 4.0.x to align with the other SI artifacts?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47214757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47215179", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#issuecomment-47215179", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/81", "id": 47215179, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-26T11:35:24Z", "updated_at": "2014-06-26T11:35:24Z", "author_association": "MEMBER", "body": "No, because it is a separete project and it has its own release time-line.\nHowever I agree: all these EXT projects should be in the separete group to track them to track easily.\n`org.springframework.integration.extension`\nCC @garyrussell \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47215179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47301053", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47301053", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 47301053, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-27T02:05:21Z", "updated_at": "2014-06-27T02:05:21Z", "author_association": "NONE", "body": "see https://jira.spring.io/browse/INT-3456\nAgain creating tests is just really hard as it's just a real pain to mock splunk!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47301053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47317726", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47317726", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 47317726, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-27T08:03:04Z", "updated_at": "2014-06-27T08:03:04Z", "author_association": "MEMBER", "body": "Note the Splunk Adapters project is located in the Spring Integration Extension Repo, so see https://jira.spring.io/browse/INTEXT-109.\n\nOK. Let it be with `mock`, but we have a `SplunkDataReaderTests`, which is based on local data file - `splunk-data.xml`.\n\nWell, I see that `SplunkDataReader#count = 0` is by default. So, if we don't populate that value to the `outputArgs`, what is the default value than for Splunk?\n\nFrom other side: is it correct to try to retrive **unlimited** result for Splunk events? \n`SplunkDataReader` just collects them to the `List<SplunkEvent>` and it looks for like memory overhead. Isn't it? I think it really was a reason do not allow to fetch all data for search.\nWDYT?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47317726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47424743", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/85#issuecomment-47424743", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/85", "id": 47424743, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-28T11:12:59Z", "updated_at": "2014-06-28T11:12:59Z", "author_association": "MEMBER", "body": "Merge via: https://github.com/spring-projects/spring-integration-extensions/commit/ab5073fb4d483ccf1875ba65e3e645c1c6cad263\n\nThank you very much!\n\nFor the future, please, follow with Contribution Guideline: https://github.com/spring-projects/spring-integration-extensions/wiki/Contributor-Guidelines\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47424743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47426124", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47426124", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 47426124, "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-28T12:24:18Z", "updated_at": "2014-06-28T14:05:54Z", "author_association": "NONE", "body": "Hi\nApologize but I'm holidays for the next 10 days with limited network.\nSo I will have a look and answer when back.\n\n## Cheers\n\nOlivier\nOn Jun 27, 2014 6:03 PM, \"Artem Bilan\" notifications@github.com wrote:\n\n> Note the Splunk Adapters project is located in the Spring Integration\n> Extension Repo, so see https://jira.spring.io/browse/INTEXT-109.\n> \n> OK. Let it be with mock, but we have a SplunkDataReaderTests, which is\n> based on local data file - splunk-data.xml.\n> \n> Well, I see that SplunkDataReader#count = 0 is by default. So, if we\n> don't populate that value to the outputArgs, what is the default value\n> than for Splunk?\n> \n> From other side: is it correct to try to retrive _unlimited_ result for\n> Splunk events?\n> SplunkDataReader just collects them to the List<SplunkEvent> and it looks\n> for like memory overhead. Isn't it? I think it really was a reason do not\n> allow to fetch all data for search.\n> WDYT?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47317726\n> .\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47426124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47450191", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47450191", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 47450191, "user": {"login": "benbramley", "id": 1832775, "avatar_url": "https://avatars1.githubusercontent.com/u/1832775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbramley", "html_url": "https://github.com/benbramley", "followers_url": "https://api.github.com/users/benbramley/followers", "following_url": "https://api.github.com/users/benbramley/following{/other_user}", "gists_url": "https://api.github.com/users/benbramley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbramley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbramley/subscriptions", "organizations_url": "https://api.github.com/users/benbramley/orgs", "repos_url": "https://api.github.com/users/benbramley/repos", "events_url": "https://api.github.com/users/benbramley/events{/privacy}", "received_events_url": "https://api.github.com/users/benbramley/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-29T09:53:05Z", "updated_at": "2014-06-29T09:53:05Z", "author_association": "NONE", "body": "Hi @artembilan - the result limit defaults to 100 if not specifically set in outputArgs (this is set on the Splunk server side). I think it's a good idea to set a limit for sure, however it's also nice to be able to set an unlimited option if needed. In this case we were trying to test the engineering limits during performance testing so we were ramping up more and more Splunk results to see how the JVM behaved and found this bug.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47450191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47463885", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47463885", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 47463885, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-29T17:58:54Z", "updated_at": "2014-06-29T17:58:54Z", "author_association": "MEMBER", "body": "Thanks, @benbramley , for the clarification, but you just end up with `OutOfMemory` and JVM will crash. \nSo, my position do not do this critical change and I'm going to close the PR as one for the potential vulnerability in the future.\n\nAny other arguments to apply it? :smile: \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47463885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47481237", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47481237", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 47481237, "user": {"login": "benbramley", "id": 1832775, "avatar_url": "https://avatars1.githubusercontent.com/u/1832775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbramley", "html_url": "https://github.com/benbramley", "followers_url": "https://api.github.com/users/benbramley/followers", "following_url": "https://api.github.com/users/benbramley/following{/other_user}", "gists_url": "https://api.github.com/users/benbramley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbramley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbramley/subscriptions", "organizations_url": "https://api.github.com/users/benbramley/orgs", "repos_url": "https://api.github.com/users/benbramley/repos", "events_url": "https://api.github.com/users/benbramley/events{/privacy}", "received_events_url": "https://api.github.com/users/benbramley/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-29T22:56:28Z", "updated_at": "2014-06-29T22:56:28Z", "author_association": "NONE", "body": "Hey,\n\nYes will eventually get outofmemory if I can generate enough data from Splunk. Same is true if I run a query on a database that returns too many results.\n\nRegardless though this behaviour is different from what is documented in the Splunk SDK (and where the confusion started):\n\n\"The maximum number of results to return. If value is set to 0, then all available results are returned.\"\n\nLink is here:\n\nhttp://docs.splunk.com/Documentation/Splunk/latest/RESTAPI/RESTsearch#GET_search.2Fjobs.2F.7Bsearch_id.7D.2Fresults\n\nShould probably document this as being different to avoid confusion in the future.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47481237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47500890", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47500890", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 47500890, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-30T07:11:05Z", "updated_at": "2014-06-30T07:11:26Z", "author_association": "MEMBER", "body": "OK. I'm convinced:smile: \n\nTo be consistent with Splunk docs and your JDBC argument we really should provide this behaviour and leave it up to the end-user how to get deal with that `OOM`\n\nMerged via https://github.com/spring-projects/spring-integration-extensions/commit/c639066dafe7dd62070e676fa52da8161ee82a72\n\nThank you very much, guys.\nLooking forward for more contribution!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47500890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47511885", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/82#issuecomment-47511885", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/82", "id": 47511885, "user": {"login": "benbramley", "id": 1832775, "avatar_url": "https://avatars1.githubusercontent.com/u/1832775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbramley", "html_url": "https://github.com/benbramley", "followers_url": "https://api.github.com/users/benbramley/followers", "following_url": "https://api.github.com/users/benbramley/following{/other_user}", "gists_url": "https://api.github.com/users/benbramley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbramley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbramley/subscriptions", "organizations_url": "https://api.github.com/users/benbramley/orgs", "repos_url": "https://api.github.com/users/benbramley/repos", "events_url": "https://api.github.com/users/benbramley/events{/privacy}", "received_events_url": "https://api.github.com/users/benbramley/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-30T09:31:12Z", "updated_at": "2014-06-30T09:31:12Z", "author_association": "NONE", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47511885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47646636", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/84#issuecomment-47646636", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/84", "id": 47646636, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-01T11:51:15Z", "updated_at": "2014-07-01T11:51:15Z", "author_association": "MEMBER", "body": "Fixed via https://github.com/spring-projects/spring-integration-extensions/commit/906880acf0fc72ca96c55db26f0027d5db475093\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47646636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47647527", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/68#issuecomment-47647527", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/68", "id": 47647527, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-01T12:02:54Z", "updated_at": "2014-07-01T12:02:54Z", "author_association": "MEMBER", "body": "Fixed via https://github.com/artembilan/spring-integration-extensions/commit/85378e52538dea5e1dbdbb748283877d8aea223b\n\nThank you for pointing it out!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47647527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47647950", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-47647950", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 47647950, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-01T12:09:02Z", "updated_at": "2014-07-01T12:09:02Z", "author_association": "MEMBER", "body": "@olamy, @benbramley, wouldn't you mind to help here a bit?\nI'm not well with Splunk and didn't write this project., so it isn't clear to me what's going on.\n\nAny your comments are very appreciated.\nThanks in advance!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47647950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47732698", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-47732698", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 47732698, "user": {"login": "benbramley", "id": 1832775, "avatar_url": "https://avatars1.githubusercontent.com/u/1832775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbramley", "html_url": "https://github.com/benbramley", "followers_url": "https://api.github.com/users/benbramley/followers", "following_url": "https://api.github.com/users/benbramley/following{/other_user}", "gists_url": "https://api.github.com/users/benbramley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbramley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbramley/subscriptions", "organizations_url": "https://api.github.com/users/benbramley/orgs", "repos_url": "https://api.github.com/users/benbramley/repos", "events_url": "https://api.github.com/users/benbramley/events{/privacy}", "received_events_url": "https://api.github.com/users/benbramley/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-02T03:01:16Z", "updated_at": "2014-07-02T03:01:16Z", "author_association": "NONE", "body": "Hi,\n\nYes the problem is that a real-time search never really ends. It is a continuous stream of data. So the line inside the runQuery method - while (!job.isDone()) won't ever end until the job is finalised by the user (which is what @zenmoto is seeing).\n\nWe will need to change the way we treat real-time searches to use while(!job.isReady()) and use an InputStream to return the results as they come through.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/47732698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/48544892", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-48544892", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 48544892, "user": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-09T22:45:49Z", "updated_at": "2014-07-09T22:45:49Z", "author_association": "MEMBER", "body": "@benbramley would you be willing to tackle that and submit a PR? (if so, and if you have not already, please sign our CLA[1]). Thanks!\n\n[1] https://github.com/spring-projects/spring-integration-extensions/wiki/Contributor-Guidelines#sign-the-contributor-license-agreement\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/48544892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/48711668", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-48711668", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 48711668, "user": {"login": "benbramley", "id": 1832775, "avatar_url": "https://avatars1.githubusercontent.com/u/1832775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbramley", "html_url": "https://github.com/benbramley", "followers_url": "https://api.github.com/users/benbramley/followers", "following_url": "https://api.github.com/users/benbramley/following{/other_user}", "gists_url": "https://api.github.com/users/benbramley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbramley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbramley/subscriptions", "organizations_url": "https://api.github.com/users/benbramley/orgs", "repos_url": "https://api.github.com/users/benbramley/repos", "events_url": "https://api.github.com/users/benbramley/events{/privacy}", "received_events_url": "https://api.github.com/users/benbramley/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-11T09:36:11Z", "updated_at": "2014-07-11T09:36:11Z", "author_association": "NONE", "body": "@markfisher yes I'll take a crack at it\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/48711668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/48711930", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-48711930", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 48711930, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-11T09:39:18Z", "updated_at": "2014-07-11T09:39:18Z", "author_association": "MEMBER", "body": "BTW we have an idea to use for this `real-search` task the `splitter` implementation. See the linked PR.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/48711930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49065404", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/88#issuecomment-49065404", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/88", "id": 49065404, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-15T17:28:39Z", "updated_at": "2014-07-15T17:28:39Z", "author_association": "MEMBER", "body": "Hi, J\u00e9r\u00f4me !\n\nAs usual: thank for attention to this stuff. \nOr you are only one person who is interested in it or it is so difficult, that other don't want to get deal with it :smile: \n\n> Not able to to that\n\nThat's true, because the `poller` is up to the `endpoint`, not channel. \nHence if you start the flow from the `PollableChannel` (independently if it just channel name, or `Spec` or real `QueueChannel` bean), you should configure the subscriber endpoint with poller:\n\n``` java\nIntegrationFlows.from(\"myChannel\")\n     .handle(myHandler(), e -> e.poller(Pollers....))\n```\n\nBecause `endpoint` is responsible to read message from the channel.\n\nActually the same we have with XML config:\n\n``` xml\n<service-activator>\n   <poller/>\n</service-activator>\n```\n\nRe. transactions. It's simple - just follow with `Pollers` API:\n\n``` java\n     .handle(myHandler(), e -> e..poller(Pollers.fixedDelay(100)\n                            .maxMessagesPerPoll(1)\n                            .transactional(this.transactionManager()))\n```\n\nIf you need more control over that transaction you should configure `TransactionInterceptor` bean and provide it to the `.advice()` method of `PollerSpec`. See `.transactional()` method source code.\n\nDon't forget: you always can configure the **default** `Poller`, as we do it from xml with `default=\"true\"` on `<poller>`, but from Java perspective we should populate appropriate bean:\n\n``` java\n@Bean(name = PollerMetadata.DEFAULT_POLLER)\npublic PollerMetadata poller() {\n    return Pollers.fixedRate(500).get();\n}\n```\n\nHTH\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49065404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49070396", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/88#issuecomment-49070396", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/88", "id": 49070396, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-15T18:08:12Z", "updated_at": "2014-07-15T18:09:00Z", "author_association": "NONE", "body": "Hi, \n\nThanks it works.\n\nI don't understand why I'am the only person who is asking questions because your work is awesome.\nCurrently, I am rewriting an application from Spring to Spring Integration and I decided to use the Java-DSL api. \n\nAnother question about a transaction. I have the following flow\n\n```\n    @Bean\n    public IntegrationFlow mailSenderFlow() {\n        return IntegrationFlows.from(SenderChannelConstant.MAIL_SENDER)\n                .handle(mailSenderHandler,\n                        c -> c.id(GlobalChannelConstant.MAIL_SENDER_CONTROL_BUS)\n                                .poller(Pollers.fixedDelay(100).maxMessagesPerPoll(1).transactional(transactionManager()))\n                                .advice(defaultRetryAdvice)\n                )\n                .get();\n    }\n```\n\nChannelQueue using messageStore\nHandler with transactional and retry (wait 1 hour between each retry)\n\nI would like to persist the RetryContextCache because once the handler retrieves the message, the message is gone from the ChannelQueue and if the server goes down, the message is lost.\n\nLet me know if the flow is supported or not.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49070396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49076811", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/88#issuecomment-49076811", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/88", "id": 49076811, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-15T18:57:32Z", "updated_at": "2014-07-15T18:57:32Z", "author_association": "MEMBER", "body": "Show your `defaultRetryAdvice` config, please.\n\nSeems for me you can't serialize `RetryContext` and persist it in some storage in case of persistence `RetryContextCache`.\nSince your retry interval is so big, how about to get rid of `RetryAdvice` and try to achieve the same with persistence `delayer` ?\nYou should conbfigure `ExpressionEvaluatingRequestHandlerAdvice` for your `mailSenderHandler` and on exception send the message to the `.delay()` flow, which will release the message to the same `mailSenderHandler` after that delay timeout.\nIn this case you don't lose massages and avoid some hard work to make `RetryContextCache` as persistence.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49076811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49077630", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/88#issuecomment-49077630", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/88", "id": 49077630, "user": {"login": "jmirc", "id": 50304, "avatar_url": "https://avatars0.githubusercontent.com/u/50304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmirc", "html_url": "https://github.com/jmirc", "followers_url": "https://api.github.com/users/jmirc/followers", "following_url": "https://api.github.com/users/jmirc/following{/other_user}", "gists_url": "https://api.github.com/users/jmirc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmirc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmirc/subscriptions", "organizations_url": "https://api.github.com/users/jmirc/orgs", "repos_url": "https://api.github.com/users/jmirc/repos", "events_url": "https://api.github.com/users/jmirc/events{/privacy}", "received_events_url": "https://api.github.com/users/jmirc/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-15T19:04:08Z", "updated_at": "2014-07-15T19:04:08Z", "author_association": "NONE", "body": "I though I was able to revert back to the queue the message if any exceptions occurs. Like JMS.\n\nIf I am implementing your solution, I just need to manage the number of retry. Thanks for your input.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49077630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49422638", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-49422638", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 49422638, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-18T11:54:29Z", "updated_at": "2014-07-18T11:54:29Z", "author_association": "MEMBER", "body": "Guys, I'm looking at this closer now and want to discuss with, since you are users of this stuff and familiar with Splunk at all.\nYour feedback is appreciated.\nSo, how about to introduce `job-duration` option to to `cancel` it and return the result which is at this time? \nSince we do `search` from a `polling` `inbound-channel-adapter` we can't process `stream` from there. It's really a component to produce one message per request to the external system.\nSince we save the `lastSuccessfulReadTime` looks like the next `poll` for the data, should move the Splunk search `range`. \nOr do we lose here events from previuos canceled real-search job, because they are out of the `lastSuccessfulReadTime` scope already ?\n\nRegarding `streaming` I really think it should be a new `event-driven` component, which receives a message with search args, starts a Splunk Job and processes `InputStream` to produce reply messages one by one for each incoming `event`.\n\nFrom other side it might be an one-way `message-driven` component, which start the Job and listens to new events from search results. \nBut will it be normal for Splunk to keep the search job always running?\n\nThanks in advance\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49422638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49634077", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-49634077", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 49634077, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-21T17:01:59Z", "updated_at": "2014-07-21T17:01:59Z", "author_association": "MEMBER", "body": "@benbramley Hi Ben, on our end we are a bit under pressure to create a release of the Spring Integration Splunk extension. Do you think you may have a PR ready by end of day tomorrow? We need to create a GA release for our upcoming Spring XD release. If not, we will temporarily remove the realtime search feature for GA, but if you have a solution you could create a PR for that would be awesome! Thanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49634077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49739202", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/89#issuecomment-49739202", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/89", "id": 49739202, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-22T13:35:53Z", "updated_at": "2014-07-22T13:35:53Z", "author_association": "MEMBER", "body": "Looks like minor issues. I'll fix them on merge and, if branch will be buildable I won't back to you.\n\nThank you very much!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49739202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49751470", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/89#issuecomment-49751470", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/89", "id": 49751470, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-22T15:04:45Z", "updated_at": "2014-07-22T15:04:45Z", "author_association": "MEMBER", "body": "Merged as: https://github.com/spring-projects/spring-integration-extensions/commit/07d45d69c188ba5466d1f9cddab9af336d737943\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49751470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49829428", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-49829428", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 49829428, "user": {"login": "benbramley", "id": 1832775, "avatar_url": "https://avatars1.githubusercontent.com/u/1832775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbramley", "html_url": "https://github.com/benbramley", "followers_url": "https://api.github.com/users/benbramley/followers", "following_url": "https://api.github.com/users/benbramley/following{/other_user}", "gists_url": "https://api.github.com/users/benbramley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbramley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbramley/subscriptions", "organizations_url": "https://api.github.com/users/benbramley/orgs", "repos_url": "https://api.github.com/users/benbramley/repos", "events_url": "https://api.github.com/users/benbramley/events{/privacy}", "received_events_url": "https://api.github.com/users/benbramley/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-23T03:35:09Z", "updated_at": "2014-07-23T03:35:09Z", "author_association": "NONE", "body": "@ghillert Hi, I updated the RT search based on the poller model but it does not work well. The RT search in Splunk is really meant to be a stream (and yes it is designed to run for long periods) so I think it's best if we move this to an event-driven model as suggested by @artembilan.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49829428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49875502", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-49875502", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 49875502, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-23T13:48:33Z", "updated_at": "2014-07-23T13:48:33Z", "author_association": "MEMBER", "body": "@benbramley , thank you for your time and attention to this.\n\nSo, to conclude and go ahead:\n1. We disable RT search for the `<int-splunk:inbound-channel-adapter>`\n2. Introduce new `event-driven` component, say `<int-splunk:splitter>`. with similar inbound behaviuor, but as a result it will `InputStream` from Job and produce results one by one to the `output-channel`.\n3. I'm not sure that we should come to a stand only with RT search, since it looks like all Splunk searches are streams.\n\nWDYT?\nAnd I go ahead with fix. \nNote, it will be based on the latest SI 4.0 SNAPSHOT. At least for now. Because the splitter streaming support has been introduced recently.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49875502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49976970", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/90#issuecomment-49976970", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/90", "id": 49976970, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-24T07:44:12Z", "updated_at": "2014-07-24T07:44:12Z", "author_association": "MEMBER", "body": "Merged as: https://github.com/spring-projects/spring-integration-extensions/commit/46d7567a77d4dd39845471876ee050577c326215\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/49976970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/50021540", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-50021540", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 50021540, "user": {"login": "markpollack", "id": 247466, "avatar_url": "https://avatars1.githubusercontent.com/u/247466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markpollack", "html_url": "https://github.com/markpollack", "followers_url": "https://api.github.com/users/markpollack/followers", "following_url": "https://api.github.com/users/markpollack/following{/other_user}", "gists_url": "https://api.github.com/users/markpollack/gists{/gist_id}", "starred_url": "https://api.github.com/users/markpollack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markpollack/subscriptions", "organizations_url": "https://api.github.com/users/markpollack/orgs", "repos_url": "https://api.github.com/users/markpollack/repos", "events_url": "https://api.github.com/users/markpollack/events{/privacy}", "received_events_url": "https://api.github.com/users/markpollack/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-24T14:02:31Z", "updated_at": "2014-07-24T14:02:31Z", "author_association": "MEMBER", "body": "We can't be based on SI 4.0 snapshot as this we need a GA release for XD's GA release.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/50021540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/50022318", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-50022318", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 50022318, "user": {"login": "markpollack", "id": 247466, "avatar_url": "https://avatars1.githubusercontent.com/u/247466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markpollack", "html_url": "https://github.com/markpollack", "followers_url": "https://api.github.com/users/markpollack/followers", "following_url": "https://api.github.com/users/markpollack/following{/other_user}", "gists_url": "https://api.github.com/users/markpollack/gists{/gist_id}", "starred_url": "https://api.github.com/users/markpollack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markpollack/subscriptions", "organizations_url": "https://api.github.com/users/markpollack/orgs", "repos_url": "https://api.github.com/users/markpollack/repos", "events_url": "https://api.github.com/users/markpollack/events{/privacy}", "received_events_url": "https://api.github.com/users/markpollack/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-24T14:07:00Z", "updated_at": "2014-07-24T14:07:00Z", "author_association": "MEMBER", "body": "So I suggest we do option 1 ASAP.    Regarding option 2, doesn't seem natural to have a 'splitter' be a source of messages, but we can discuss naming afterward as well as the general approach.  Thanks for looking into it!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/50022318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/50025145", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-50025145", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 50025145, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-24T14:28:03Z", "updated_at": "2014-07-24T14:28:03Z", "author_association": "MEMBER", "body": "Real-time search is disabled: https://github.com/spring-projects/spring-integration-extensions/commit/d40d510e4c5be2b35876d053d2e79b9ab55098ee.\n\nAll other stuff will be revised on the new release\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/50025145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/50025310", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/39#issuecomment-50025310", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/39", "id": 50025310, "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-24T14:29:22Z", "updated_at": "2014-07-24T14:29:22Z", "author_association": "MEMBER", "body": "@artembilan Awesome thanks!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/50025310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51722930", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#issuecomment-51722930", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/91", "id": 51722930, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-10T18:31:32Z", "updated_at": "2014-08-10T18:31:32Z", "author_association": "MEMBER", "body": "@kcrimson , thank you for the contribution!\n\nLet us know, if you've already signed the CLA: https://github.com/spring-projects/spring-integration-extensions/wiki/Contributor-Guidelines\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51722930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51726515", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#issuecomment-51726515", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/91", "id": 51726515, "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-10T20:39:10Z", "updated_at": "2014-08-10T20:39:10Z", "author_association": "CONTRIBUTOR", "body": "Yes, I have signed\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51726515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51774071", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#issuecomment-51774071", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/91", "id": 51774071, "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-11T12:36:55Z", "updated_at": "2014-08-11T12:36:55Z", "author_association": "CONTRIBUTOR", "body": "when you run tests it complains about missing slf4j factory implementation, that's why it was just added in test scope,\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51774071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51922069", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/92#issuecomment-51922069", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/92", "id": 51922069, "user": {"login": "andrewmilkowski", "id": 281756, "avatar_url": "https://avatars1.githubusercontent.com/u/281756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewmilkowski", "html_url": "https://github.com/andrewmilkowski", "followers_url": "https://api.github.com/users/andrewmilkowski/followers", "following_url": "https://api.github.com/users/andrewmilkowski/following{/other_user}", "gists_url": "https://api.github.com/users/andrewmilkowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewmilkowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewmilkowski/subscriptions", "organizations_url": "https://api.github.com/users/andrewmilkowski/orgs", "repos_url": "https://api.github.com/users/andrewmilkowski/repos", "events_url": "https://api.github.com/users/andrewmilkowski/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewmilkowski/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T14:33:17Z", "updated_at": "2014-08-12T14:33:17Z", "author_association": "NONE", "body": "anyway to safely disable regex validation (for now) till official patch is issued ?\n\nthanks so much!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51922069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51969610", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/93#issuecomment-51969610", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/93", "id": 51969610, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T20:07:39Z", "updated_at": "2014-08-12T20:07:39Z", "author_association": "MEMBER", "body": "@sobychacko , take a look, please, quickly.\nActually there is nothing special, but it should be the right way to go ahead to be used from XD .\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51969610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51970056", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/92#issuecomment-51970056", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/92", "id": 51970056, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T20:11:19Z", "updated_at": "2014-08-12T20:11:19Z", "author_association": "MEMBER", "body": "@andrewmilkowski, thank you very much for this issue.\nAnd it is really tipical miss that we forget to support property-placeholder and SpEL from the XML attributes. :smile: .\nWe have similar issue (https://jira.spring.io/browse/INTEXT-111) on the matter and its PR: https://github.com/spring-projects/spring-integration-extensions/pull/91\nTo address other (but not trivial) cases\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/51970056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52072537", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#issuecomment-52072537", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/95", "id": 52072537, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-13T16:22:54Z", "updated_at": "2014-08-13T16:22:54Z", "author_association": "MEMBER", "body": "Hi Rob!\nI'm glad to work with you! \nIt's really an honor for me to review your code.\n\nI haven't been familiar with AWS yet, but I think I'll study something on the matter working with you here. And somedays I will be able to help with some task.\n\nRight now, let me review it as we do for any PR to the Spring Integration.\n1. No one branch shouldn't `merge` `master`, just `rebase`\n2. The first line of the first commit must not be more than 50 symbols\n3. All affected classes should be updated to the actual year for `Copyright` and the `author list` should have your name as well\n\nSome comments I'm adding on the lines.\n\nThank you for contribution!\n\nBest regards,\nArtem\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52072537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52073699", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#issuecomment-52073699", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/95", "id": 52073699, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-13T16:31:45Z", "updated_at": "2014-08-13T16:31:45Z", "author_association": "MEMBER", "body": "All minors.\nIf you want I can do the polishing for you on merge, but `rabase` is an important part here to avoid conflicts on merge.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52073699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52180899", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#issuecomment-52180899", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/95", "id": 52180899, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-14T13:12:24Z", "updated_at": "2014-08-14T13:12:24Z", "author_association": "MEMBER", "body": "Hi Rob!\nI meant this: https://github.com/artembilan/spring-integration-extensions/commit/bcabe134f45d4a83914010c0e11fdfe7b3e28d0f\nIt is a polishing for all my concerns to the Gradle config and fixes for all compiler warns.\n\nLet me know and I merge it to master to go ahead\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52180899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52181742", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#issuecomment-52181742", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/95", "id": 52181742, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-14T13:20:30Z", "updated_at": "2014-08-14T13:20:30Z", "author_association": "MEMBER", "body": "Pay attention, please, to the `.setBeanFactory(Mockito.mock(BeanFactory.class))` in tests. It is one of SI feature, when we want to be sure that all infrastructure components are populated from the `beanFactory`. It is an `env` var from `IntegrationUtils`:\n\n```\n/**\n     * Should be set to TRUE on CI plans and framework developer systems.\n     */\n    public static final boolean fatalWhenNoBeanFactory = Boolean.valueOf(System.getenv(\"SI_FATAL_WHEN_NO_BEANFACTORY\"));\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52181742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52184080", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#issuecomment-52184080", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/95", "id": 52184080, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-14T13:41:15Z", "updated_at": "2014-08-14T13:41:38Z", "author_association": "MEMBER", "body": "@artembilan  please make an aws.0.5.x branch before merging, and bump the version for this PR to 1.0.0.BUILD-SNAPSHOT - we need to cut an 0.5.0.RELEASE for the user that requested it; thanks.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52184080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52195129", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#issuecomment-52195129", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/95", "id": 52195129, "user": {"login": "robharrop", "id": 64684, "avatar_url": "https://avatars1.githubusercontent.com/u/64684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robharrop", "html_url": "https://github.com/robharrop", "followers_url": "https://api.github.com/users/robharrop/followers", "following_url": "https://api.github.com/users/robharrop/following{/other_user}", "gists_url": "https://api.github.com/users/robharrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/robharrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robharrop/subscriptions", "organizations_url": "https://api.github.com/users/robharrop/orgs", "repos_url": "https://api.github.com/users/robharrop/repos", "events_url": "https://api.github.com/users/robharrop/events{/privacy}", "received_events_url": "https://api.github.com/users/robharrop/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-14T15:04:40Z", "updated_at": "2014-08-14T15:04:40Z", "author_association": "CONTRIBUTOR", "body": "@artembilan Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52195129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52289252", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#issuecomment-52289252", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/95", "id": 52289252, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-15T09:30:54Z", "updated_at": "2014-08-15T09:30:54Z", "author_association": "MEMBER", "body": "Merged via https://github.com/spring-projects/spring-integration-extensions/commit/d06e8cbec345d3048ed244f9673265c79f4fb6d0\n\nThank you @robharrop !\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52289252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52396762", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/96#issuecomment-52396762", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/96", "id": 52396762, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-16T15:52:50Z", "updated_at": "2014-08-16T15:52:50Z", "author_association": "MEMBER", "body": "Pushed tests.\nReady to merge\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52396762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52613756", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/93#issuecomment-52613756", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/93", "id": 52613756, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T10:09:00Z", "updated_at": "2014-08-19T10:09:00Z", "author_association": "MEMBER", "body": "Merged after rebase\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52613756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52613839", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/97#issuecomment-52613839", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/97", "id": 52613839, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T10:09:46Z", "updated_at": "2014-08-19T10:09:46Z", "author_association": "MEMBER", "body": "LGTM.\nMerging...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52613839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52614017", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/97#issuecomment-52614017", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/97", "id": 52614017, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T10:11:52Z", "updated_at": "2014-08-19T10:11:52Z", "author_association": "MEMBER", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52614017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52614439", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/98#issuecomment-52614439", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/98", "id": 52614439, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T10:16:32Z", "updated_at": "2014-08-19T10:16:32Z", "author_association": "MEMBER", "body": "Hi @ilayaperumalg !\nPlease, see https://github.com/spring-projects/spring-integration-extensions/pull/91 and its related JIRAs and discussions.\nActually I don't see the fix for PP issues.\nAt least I don't see test-case on the matter.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52614439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52648300", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/98#issuecomment-52648300", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/98", "id": 52648300, "user": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T15:09:14Z", "updated_at": "2014-08-19T15:09:14Z", "author_association": "MEMBER", "body": "Hi @artembilan, right, this PR doesn't address property placeholder issue. Instead, it only makes it easy to work with bean names when only one consumer configuration is provided by not using property placeholder. \nThe fix does this:\n- Create unique bean names using the `group_id` only if there are multiple consumer configurations\n- If there is only a single consumer configuration, then we won't use the property placeholder that uses `group_id` but uses hardcoded bean names. \n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52648300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52649786", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/98#issuecomment-52649786", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/98", "id": 52649786, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T15:18:18Z", "updated_at": "2014-08-19T15:18:18Z", "author_association": "MEMBER", "body": "Right, I see.\n\nMy thought was to get rid of explicit bean definition under those ugly names and represent a `KafkaConsumerContext` as a container for those groups of components with that provided `group_id`, when it really can be configured with `PP`. Yes, we lose here the ability to fetch concrete component as a bean, but we can do that through the `KafkaConsumerContext` with `group_id` and type. \nIf we register those internal components just as `BeanDefinition` we get the gain from `BeanFactory` infrastructure and have everything at the same place - container from the `KafkaConsumerContext`.\n\nWith my suggestion we might fix several issues at once (see open JIRAs for SI-Kafka).\n\nHope I am clear\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52649786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52676444", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/98#issuecomment-52676444", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/98", "id": 52676444, "user": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T18:20:25Z", "updated_at": "2014-08-19T18:20:25Z", "author_association": "MEMBER", "body": "sure, thanks for the suggestion @artembilan. \nClosing this PR and re-submitting with the suggested changes.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52676444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52754796", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/100#issuecomment-52754796", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/100", "id": 52754796, "user": {"login": "TYsewyn", "id": 6283320, "avatar_url": "https://avatars0.githubusercontent.com/u/6283320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TYsewyn", "html_url": "https://github.com/TYsewyn", "followers_url": "https://api.github.com/users/TYsewyn/followers", "following_url": "https://api.github.com/users/TYsewyn/following{/other_user}", "gists_url": "https://api.github.com/users/TYsewyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/TYsewyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TYsewyn/subscriptions", "organizations_url": "https://api.github.com/users/TYsewyn/orgs", "repos_url": "https://api.github.com/users/TYsewyn/repos", "events_url": "https://api.github.com/users/TYsewyn/events{/privacy}", "received_events_url": "https://api.github.com/users/TYsewyn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-20T09:47:38Z", "updated_at": "2014-08-20T09:47:38Z", "author_association": "CONTRIBUTOR", "body": "Closing this pull request to do it right ;)\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52754796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52761133", "html_url": "https://github.com/spring-projects/spring-integration-extensions/issues/101#issuecomment-52761133", "issue_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/101", "id": 52761133, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-20T11:02:30Z", "updated_at": "2014-08-20T11:02:30Z", "author_association": "MEMBER", "body": "Thank you @TYsewyn !\nIt's really a bug and what was a funny it has been easy to reproduce, if I had had a test-case on the matter before :smile: .\n\nWould you mind to PR the fix to this?\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/issues/comments/52761133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358439", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358439", "id": 5358439, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:08:41Z", "updated_at": "2014-02-12T22:09:12Z", "author_association": "MEMBER", "body": "This looks good - I like the way you keep track of real objects (channels etc) created in the flow, and then turn them back into Bean Definitions.\n\nHowever, I think we need to make the properties on the `Spec`s all Strings, so we can populate the BeanDefinition properties with placeholders etc; for example...\n\n```\nreturn IntegrationFlows.from(MessageChannels.direct().id(\"input\").setFailover(\"#{foo}\").get())...\n```\n\nWe could even throw away the original object and let Spring create a new one from the (resolved) properties.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358480", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358480", "id": 5358480, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 34, "line": 34, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/channel/MessageChannels.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:11:25Z", "updated_at": "2014-02-12T22:11:25Z", "author_association": "MEMBER", "body": "We could add some more convenience methods, such as...\n\n```\npublic static DirectChannel direct(String name) {\n    return MessageChannels.direct().id(name).get();\n}\n```\n\nwhich would allow this...\n\n```\n    @Bean\n    public IntegrationFlow uppercaseProcessor2() {\n        return IntegrationFlows.from(MessageChannels.direct(\"input\"))\n                .transform(\"payload.toUpperCase()\")\n                .channel(MessageChannels.direct(\"output\"))\n                .get();\n    }\n```\n\ninstead of ...\n\n```\n    @Bean\n    public IntegrationFlow uppercaseProcessor() {\n        return IntegrationFlows.from(MessageChannels.direct().id(\"input\").get())\n                .transform(\"payload.toUpperCase()\")\n                .channel(MessageChannels.direct().id(\"output\").get())\n                .get();\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358536", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358536", "id": 5358536, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:16:52Z", "updated_at": "2014-02-12T22:17:03Z", "author_association": "MEMBER", "body": "Perhaps the String setters could be alternatives \n\n``` java\n    public S failover(Boolean failover) {\n        return this.failover(String.valueOf(failOver));\n    }\n\n    public S failover(String failover) {\n        this.failover = failover;\n        return _this();\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358563", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358563", "id": 5358563, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "position": 34, "line": 34, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/channel/MessageChannels.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:19:32Z", "updated_at": "2014-02-12T22:19:32Z", "author_association": "MEMBER", "body": "Actually, not sure, but for simplification it would be better to provide another DSL method `channel(ChannelSpecSupport spec)`, rather than restrict with only one method and allow provide other option.\nBy I'll think what can do. There is one more idea - `channel(String id)`\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358565", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358565", "id": 5358565, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:19:38Z", "updated_at": "2014-02-12T22:19:38Z", "author_association": "MEMBER", "body": "Or\n\n``` java\n    public S failover(Boolean failover) {\n        this.attributes.put(\"failover\", failover);\n        return _this();\n    }\n```\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358608", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358608", "id": 5358608, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:23:27Z", "updated_at": "2014-02-12T22:23:27Z", "author_association": "MEMBER", "body": "Re. strings and property-placeholder - no sure too. It isn't recommended within JavaConfig.\nIt is our background that we register `BeanDefinition`s, but for end-user it looks like a single `@Bean`.\nAnd don't forget that you can use `Channels` from dirrect `@Bean` and it provides the `id` based on method name, by default...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358717", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358717", "id": 5358717, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:31:58Z", "updated_at": "2014-02-12T22:31:58Z", "author_association": "MEMBER", "body": "Then, I think this object (spec) could become our common integration layer below the XML parsers and the DSL - the current parser logic (mutually exclusive attributes etc) move to this class and then the parsers can simply load up the attributes and the validation can be done at bean creation time.\n\nPerhaps remove the `get()` and simply provide the `Spec` in methods like `IntegrationFlowBuilder.channel()`.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358758", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358758", "id": 5358758, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "position": 170, "line": 170, "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/IntegrationFlowTests.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:34:14Z", "updated_at": "2014-02-12T22:34:14Z", "author_association": "MEMBER", "body": "Pay attention, please, how it looks. :smile: reminds me Perl: a lot of squiggles and it really isn't readable. But how it is awful without lambdas...\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358841", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358841", "id": 5358841, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:39:45Z", "updated_at": "2014-02-12T22:39:45Z", "author_association": "MEMBER", "body": "Sorry didn't see your replies; thought you were sleeping :smile: \n\nThis was just my ramblings; food for thought.\n\nThe reason I mentioned placeholders (I agree they might not make sense), is that I saw that you had come up with a solution where a single `@Bean` results in a number of `BeanDefinitions` being registered. To simulate what the parsers do.\n\nClever.\n\nIt got me thinking that, if they are bean definitions, then why not allow them to be real definitions. In effect, your \"spec\" objects become a definition for a bean definition (or MetaBeanDefinition).\n\nWe could (later) change the parsers to also generate MetaBeanDefinitions and (in all cases) wait for the `DslIntegrationConfigurationInitializer` to create the actual definitions (of course, it would not be just Dsl... then.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358868", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358868", "id": 5358868, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:41:01Z", "updated_at": "2014-02-12T22:41:01Z", "author_association": "MEMBER", "body": "> could become our common integration layer below the XML parsers and the DSL\n\nMakes sense. Something similar I show in some email. What is bad: i deleted that branch today :-(. \n\n> Perhaps remove the get() and simply provide the Spec in methods like IntegrationFlowBuilder.channel().\n\nNo, we should allow to provide external channels from `@Bean`, and I'll do soon from just `id`. As I said: alternative method. You want to allow provide property-placeholder, but don't allow to use just `.channel(new DirectChannel())`. So, not agree: one more DSL method is OK.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358927", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5358927", "id": 5358927, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:43:51Z", "updated_at": "2014-02-12T22:43:51Z", "author_association": "MEMBER", "body": "ok; makes sense; let's sleep on it.\n\nGood work!!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5358927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5359066", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/eca4680f0e9cc92c660ba5713a6de4a5f2b8210d#commitcomment-5359066", "id": 5359066, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "position": 42, "line": 42, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/DslIntegrationConfigurationInitializer.java", "commit_id": "eca4680f0e9cc92c660ba5713a6de4a5f2b8210d", "created_at": "2014-02-12T22:52:34Z", "updated_at": "2014-02-12T22:52:34Z", "author_association": "MEMBER", "body": "In Spring JavaConfig people used to live with real classes via `return new BlahBlah();`. So, it would be bad to restrict them to the string values (`BeanDefinition` or as alternative methods), if they alway can read the property from `PropertySource` (palceholder) and build real value for bean property. \nAs we already have one more `Spec` layer I don't want to complicate it. \n\nThis is my 'baby' and I'll always find arguments to disagree :smile: \n\nBye! Go to sleep. Thanks for review.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/5359066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/6695694", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b42e6e150304a731bb8e4dc2c415971aa8017f36#commitcomment-6695694", "id": 6695694, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 10, "line": 76, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/core/ConsumerEndpointSpec.java", "commit_id": "b42e6e150304a731bb8e4dc2c415971aa8017f36", "created_at": "2014-06-17T13:48:22Z", "updated_at": "2014-06-17T13:48:22Z", "author_association": "MEMBER", "body": "Exception?\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/6695694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/6697018", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a35db31e6152abcb79f631491d85a80c5940f7c9#commitcomment-6697018", "id": 6697018, "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "position": 32, "line": 32, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/jms/JmsInboundGateway.java", "commit_id": "a35db31e6152abcb79f631491d85a80c5940f7c9", "created_at": "2014-06-17T14:26:30Z", "updated_at": "2014-06-17T14:31:37Z", "author_association": "MEMBER", "body": "This looks a bit smelly - it's not really a gateway in the real sense because we always delegate to the listener's `GatewayDelegate`.\n\nBut I understand why you needed it... \n\n`public static IntegrationFlowBuilder from(MessagingGatewaySupport inboundGateway)`\n\nPerhaps, in core, we should introduce a higher level abstract class `AbstractMessagingGateway` with abstract setters and have `MGS` extend `AMG`; then the `IntegrationFlowBuilder` can use `AMG`.\n\nEDIT: Nope; that won't work - darned Java single inheritance :frowning: . It would have to be an interface; ugh!\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/6697018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/6699784", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/a35db31e6152abcb79f631491d85a80c5940f7c9#commitcomment-6699784", "id": 6699784, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "position": 32, "line": 32, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/jms/JmsInboundGateway.java", "commit_id": "a35db31e6152abcb79f631491d85a80c5940f7c9", "created_at": "2014-06-17T17:13:16Z", "updated_at": "2014-06-17T17:13:16Z", "author_association": "MEMBER", "body": "Yes, I understand that it delegates to the `GatewayDelegate`. And would be better to rework `JmsMessageDrivenEndpoint` to the `MessagingGatewaySupport`. See `AmqpInboundGateway` - similar listening/replying behaviuor.\nMy position - it is a fault of design from SI abstractions perspective.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/6699784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/6699879", "html_url": "https://github.com/spring-projects/spring-integration-extensions/commit/b42e6e150304a731bb8e4dc2c415971aa8017f36#commitcomment-6699879", "id": 6699879, "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "position": 10, "line": 76, "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/core/ConsumerEndpointSpec.java", "commit_id": "b42e6e150304a731bb8e4dc2c415971aa8017f36", "created_at": "2014-06-17T17:20:10Z", "updated_at": "2014-06-17T17:20:10Z", "author_association": "MEMBER", "body": "I don't think so. It's just enough to ignore it. There is no reason to be so strict.\nE.g. we can configure a lot of attributes for `<jms:message-driven-channel-adapter>`, but not all of them are appliend for end component, because it isn't `gateway` - just one-way listener.\n", "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/comments/6699879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1369532", "pull_request_review_id": null, "id": 1369532, "diff_hunk": "@@ -0,0 +1,169 @@\n+Spring Integration XQuery Support\n+=================================\n+\n+Spring Integration has following XQuery components currently supported", "path": "spring-integration-xquery/README.md", "position": null, "original_position": 4, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "6ad1fa1bd573138e97211170516a8cf64a345ce6", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "- Need to mention [JSR 225](http://jcp.org/aboutJava/communityprocess/final/jsr225/index.html)\n- Need to mention other implementations that _should_ work with this adapter: mxquery, Zorba XQuery Engine\n- provide a section showing the declaration of respective Maven / Gradle dependencies (Task for @ghillert Setup Bamboo project/build for the Spring Integration Extensions project)\n", "created_at": "2012-08-14T05:40:42Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1369532", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1369532"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1369532"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1369532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1377619", "pull_request_review_id": null, "id": 1377619, "diff_hunk": "@@ -0,0 +1,88 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+\txmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<groupId>org.springframework.integration</groupId>\n+\t<artifactId>spring-integration-xquery</artifactId>\n+\t<version>2.2.0-SNAPSHOT</version>\n+\t<licenses>\n+\t\t<license>\n+\t\t\t<name>The Apache Software License, Version 2.0</name>\n+\t\t\t<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+\t\t\t<distribution>repo</distribution>\n+\t\t</license>\n+\t</licenses>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<source>1.5</source>\n+\t\t\t\t\t<target>1.5</target>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<includes>\n+\t\t\t\t\t\t<include>**/*Tests.java</include>\n+\t\t\t\t\t</includes>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<exclude>**/*Abstract*.java</exclude>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+\t<repositories>\n+\t\t<repository>\n+\t\t\t<id>spring-milestone</id>\n+\t\t\t<url>http://maven.springframework.org/milestone</url>\n+\t\t</repository>\n+\t\t<repository>\n+\t\t\t<id>spring-release</id>\n+\t\t\t<url>http://maven.springframework.org/release</url>\n+\t\t</repository>\n+\t\t<repository>\n+\t\t\t<id>mvnrepository</id>\n+\t\t\t<url>http://mvnrepository.com/artifact</url>\n+\t\t</repository>\n+\t</repositories>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-xml</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\t\t\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-test</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>net.sf.saxon</groupId>\n+\t\t\t<artifactId>Saxon-HE</artifactId>", "path": "spring-integration-xquery/pom.xml", "position": 99, "original_position": 77, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "6ad1fa1bd573138e97211170516a8cf64a345ce6", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Make Saxon an **Optional Dependency**. Particular when testing/running against other XQuery implementations (BaseX in that example), I experienced very strange error behavior. \n", "created_at": "2012-08-14T21:46:00Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1377619", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1377619"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1377619"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1377619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1380688", "pull_request_review_id": null, "id": 1380688, "diff_hunk": "@@ -0,0 +1,88 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+\txmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<groupId>org.springframework.integration</groupId>\n+\t<artifactId>spring-integration-xquery</artifactId>\n+\t<version>2.2.0-SNAPSHOT</version>\n+\t<licenses>\n+\t\t<license>\n+\t\t\t<name>The Apache Software License, Version 2.0</name>\n+\t\t\t<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+\t\t\t<distribution>repo</distribution>\n+\t\t</license>\n+\t</licenses>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<source>1.5</source>\n+\t\t\t\t\t<target>1.5</target>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<includes>\n+\t\t\t\t\t\t<include>**/*Tests.java</include>\n+\t\t\t\t\t</includes>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<exclude>**/*Abstract*.java</exclude>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+\t<repositories>\n+\t\t<repository>\n+\t\t\t<id>spring-milestone</id>\n+\t\t\t<url>http://maven.springframework.org/milestone</url>\n+\t\t</repository>\n+\t\t<repository>\n+\t\t\t<id>spring-release</id>\n+\t\t\t<url>http://maven.springframework.org/release</url>\n+\t\t</repository>\n+\t\t<repository>\n+\t\t\t<id>mvnrepository</id>\n+\t\t\t<url>http://mvnrepository.com/artifact</url>\n+\t\t</repository>\n+\t</repositories>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-xml</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\t\t\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-test</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>net.sf.saxon</groupId>\n+\t\t\t<artifactId>Saxon-HE</artifactId>", "path": "spring-integration-xquery/pom.xml", "position": 99, "original_position": 77, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "6ad1fa1bd573138e97211170516a8cf64a345ce6", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "We will have to add the XQJ classes/interfaces jar as a separate dependency to make this dependency optional. Currently this jar contains these classes too and hence compilation will fail when we make this optional.\n\nI'v added sedna's dependency  as optional and included a test for XQueryExecutor using the sedna's provided datasource. However there is  one jar xqj2-0.0.1.jar which is missing in our repo. Need to add that too and add it as a dependency in the sedna xqj's pom. The archive downloaded from sedna's site contains three jars. We basically need all three of them to be present in the repo (one is already there). After these two are added, i'll make saxon's dependency optional.\n", "created_at": "2012-08-15T08:26:34Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1380688", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1380688"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1380688"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1380688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383855", "pull_request_review_id": null, "id": 1383855, "diff_hunk": "@@ -0,0 +1,610 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.core;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.xquery.XQConnection;\n+import javax.xml.xquery.XQConstants;\n+import javax.xml.xquery.XQDataSource;\n+import javax.xml.xquery.XQException;\n+import javax.xml.xquery.XQItemType;\n+import javax.xml.xquery.XQPreparedExpression;\n+import javax.xml.xquery.XQResultSequence;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.BeanClassLoaderAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.xml.DefaultXmlPayloadConverter;\n+import org.springframework.integration.xml.XmlPayloadConverter;\n+import org.springframework.integration.xquery.support.AbstractXQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryParameter;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryUtils;\n+import org.springframework.util.Assert;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Node;\n+\n+/**\n+ * The common logic for performing the common xquery operations would reside in this\n+ * implementation.\n+ * The class would be instantiated with the xquery to be executed and the parameters\n+ * that would be used. It would return the result of the execution with the\n+ * {@link Message} instance passed to one of its execute methods.\n+ * Currently doesn't support advanced mapping techniques of mapping the resulting Node(s)\n+ * to a custom object type\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryExecutor implements InitializingBean,BeanClassLoaderAware {\n+\n+\n+\tprivate static final String SEDNA_XQ_DATASOURCE_CLASS = \"net.xqj.sedna.SednaXQDataSource\";\n+\n+\tprivate static final String SAXON_XQ_DATASOURCE_CLASS = \"net.sf.saxon.xqj.SaxonXQDataSource\";\n+\n+\tprivate final Log logger = LogFactory.getLog(XQueryExecutor.class);\n+\n+\t/**\n+\t * The payload converter\n+\t */\n+\tprivate XmlPayloadConverter converter = new DefaultXmlPayloadConverter();\n+\n+\t @SuppressWarnings(\"rawtypes\")\n+\tprivate volatile  Map resultMappers;\n+\n+\tprivate volatile boolean formatOutput;\n+\n+\t/**\n+\t * The xQuery that this Executor will execute\n+\t */\n+\tprivate String xQuery;\n+\n+\tprivate XQDataSource xqDataSource;\n+\n+\tprivate Map<String, XQueryParameter> xQueryParameterMap;\n+\n+\t//maintained internally and used for setting the values\n+\tprivate List<String> xQueryParameters;\n+\n+\t//The resource to the XQuery's .xq file\n+\tprivate Resource xQueryFileResource;\n+\n+\tprivate String userName;\n+\n+\tprivate String password;\n+\n+\tprivate ClassLoader classLoader = ClassUtils.getDefaultClassLoader();\n+\n+\t//TODO: Can we have a static xml resource which will be used always to execute the\n+\t//given XQuery as against the one sent in the payload. The default is to use the one in the\n+\t//payload unless one for static xml is provided\n+\n+\n+\tpublic void afterPropertiesSet() {\n+\t\tif(resultMappers == null) {\n+\t\t\tresultMappers = new HashMap<Class<?>,XQueryResultMapper<?>>();\n+\t\t}\n+\t\taddDefaultMappers();\n+\n+\t\tif(xqDataSource == null) {\n+\t\t\txqDataSource = discoverXQDataSource();//default\n+\t\t}\n+\t\tif(xQuery == null) {\n+\t\t\t//perhaps resource specified\n+\t\t\tAssert.notNull(xQueryFileResource, \"One of XQuery or the XQuery resource is mandatory\");\n+\t\t\txQuery = XQueryUtils.readXQueryFromResource(xQueryFileResource);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tXQConnection conn = getConnection();\n+\t\t\tXQPreparedExpression expression = conn.prepareExpression(xQuery);\n+\t\t\tQName[] extParameters = expression.getAllExternalVariables();\n+\t\t\tif(extParameters != null && extParameters.length > 0) {\n+\t\t\t\txQueryParameters = new ArrayList<String>();\n+\t\t\t\tfor(QName qName:extParameters) {\n+\t\t\t\t\txQueryParameters.add(qName.getLocalPart());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\texpression.close();\n+\t\t\tconn.close();\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t}\n+\n+\t\tif(xQueryParameters != null) {\n+\t\t\tif (xQueryParameterMap == null) {\n+\t\t\t\tthrow new MessagingException(\"Expecting \" + xQueryParameters.size() + \" parameters in the xquery, \" +\n+\t\t\t\t\t\t\"but none provided to the router\");\n+\t\t\t}\n+\n+\t\t\t//now check if all the parameter needed are present in the map\n+\t\t\tList<String> missingParameters = new ArrayList<String>();\n+\t\t\tfor(String xQueryParameter:xQueryParameters) {\n+\t\t\t\tif(!xQueryParameterMap.containsKey(xQueryParameter)) {\n+\t\t\t\t\tmissingParameters.add(xQueryParameter);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif(missingParameters.size() > 0) {\n+\t\t\t\tStringBuilder builder = new StringBuilder();\n+\t\t\t\tbuilder.append(\"[\").append(\"$\").append(missingParameters.get(0));\n+\t\t\t\tif(missingParameters.size() > 1) {\n+\t\t\t\t\tfor(int i = 1;i < missingParameters.size();i++) {\n+\t\t\t\t\t\tbuilder.append(\", \").append(\"$\").append(missingParameters.get(i));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbuilder.append(\"]\");\n+\t\t\t\tthrow new MessagingException(\"Missing parameter(s) \" + builder.toString());\n+\t\t\t}\n+\t\t}\n+\n+\n+\t}\n+\n+\n+\n+\tpublic void setBeanClassLoader(ClassLoader classLoader) {\n+\t\tAssert.notNull(classLoader, \"Non null class loader instance expected\");\n+\t\tthis.classLoader = classLoader;\n+\n+\t}\n+\n+\n+\t/**\n+\t * The method that finds an implementation in the classpath for some well known\n+\t * providers. This will kick into action only if an {@link XQDataSource} is not\n+\t * explicitly provided by the user by invoking {@link XQueryExecutor#setXQDataSource(XQDataSource)}\n+\t * The discovery finds for an implementation in following order\n+\t *\n+\t * 1. Saxon's net.sf.saxon.xqj.SaxonXQDataSource\n+\t * 2. Sedna's net.xqj.sedna.SednaXQDataSource\n+\t *\n+\t * @return the instantiated {@link XQDataSource}\n+\t */\n+\tprivate XQDataSource discoverXQDataSource() {\n+\t\tObject xqDataSource = null;\n+\t\ttry {\n+\t\t\tif(ClassUtils.isPresent(SAXON_XQ_DATASOURCE_CLASS, classLoader)) {\n+\t\t\t\txqDataSource = Class.forName(SAXON_XQ_DATASOURCE_CLASS).newInstance();\n+\t\t\t}\n+\t\t\telse if(ClassUtils.isPresent(SEDNA_XQ_DATASOURCE_CLASS, classLoader)) {\n+\t\t\t\txqDataSource = Class.forName(SEDNA_XQ_DATASOURCE_CLASS).newInstance();\n+\t\t\t}\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new MessagingException(\"Unable to discover/instantiate an XQDataSource, \" +\n+\t\t\t\t\t\"see nested exception for details\", e);\n+\t\t}\n+\t\tAssert.notNull(xqDataSource, \"No XQDataSource provided nor any known implementation discovered in the classpath\");", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": 199, "original_position": 203, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "5aa20483893534103cf6478a1f43adbf908c17f0", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Please also provide an _INFO_ level log message, informing the user whether the SAXON library is being used or not.\n\nNot sure whether we really need to test for the Sedna libraries being present. SAXON is probably sufficient. Also, since Sedna is an external XML database, users will have to provide more detailed XQDataSource configuration parameters anyway (username, database name etc.). Thus, you can probably only try to discover SAXON.\n", "created_at": "2012-08-15T16:14:28Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1383855", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383855"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1383855"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383861", "pull_request_review_id": null, "id": 1383861, "diff_hunk": "@@ -0,0 +1,610 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.core;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.xquery.XQConnection;\n+import javax.xml.xquery.XQConstants;\n+import javax.xml.xquery.XQDataSource;\n+import javax.xml.xquery.XQException;\n+import javax.xml.xquery.XQItemType;\n+import javax.xml.xquery.XQPreparedExpression;\n+import javax.xml.xquery.XQResultSequence;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.BeanClassLoaderAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.xml.DefaultXmlPayloadConverter;\n+import org.springframework.integration.xml.XmlPayloadConverter;\n+import org.springframework.integration.xquery.support.AbstractXQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryParameter;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryUtils;\n+import org.springframework.util.Assert;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Node;\n+\n+/**\n+ * The common logic for performing the common xquery operations would reside in this\n+ * implementation.\n+ * The class would be instantiated with the xquery to be executed and the parameters\n+ * that would be used. It would return the result of the execution with the\n+ * {@link Message} instance passed to one of its execute methods.\n+ * Currently doesn't support advanced mapping techniques of mapping the resulting Node(s)\n+ * to a custom object type\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryExecutor implements InitializingBean,BeanClassLoaderAware {\n+\n+\n+\tprivate static final String SEDNA_XQ_DATASOURCE_CLASS = \"net.xqj.sedna.SednaXQDataSource\";\n+\n+\tprivate static final String SAXON_XQ_DATASOURCE_CLASS = \"net.sf.saxon.xqj.SaxonXQDataSource\";\n+\n+\tprivate final Log logger = LogFactory.getLog(XQueryExecutor.class);\n+\n+\t/**\n+\t * The payload converter\n+\t */\n+\tprivate XmlPayloadConverter converter = new DefaultXmlPayloadConverter();\n+\n+\t @SuppressWarnings(\"rawtypes\")\n+\tprivate volatile  Map resultMappers;\n+\n+\tprivate volatile boolean formatOutput;\n+\n+\t/**\n+\t * The xQuery that this Executor will execute\n+\t */\n+\tprivate String xQuery;\n+\n+\tprivate XQDataSource xqDataSource;\n+\n+\tprivate Map<String, XQueryParameter> xQueryParameterMap;\n+\n+\t//maintained internally and used for setting the values\n+\tprivate List<String> xQueryParameters;\n+\n+\t//The resource to the XQuery's .xq file\n+\tprivate Resource xQueryFileResource;\n+\n+\tprivate String userName;\n+\n+\tprivate String password;\n+\n+\tprivate ClassLoader classLoader = ClassUtils.getDefaultClassLoader();\n+\n+\t//TODO: Can we have a static xml resource which will be used always to execute the\n+\t//given XQuery as against the one sent in the payload. The default is to use the one in the\n+\t//payload unless one for static xml is provided\n+\n+\n+\tpublic void afterPropertiesSet() {", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": null, "original_position": 109, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "5aa20483893534103cf6478a1f43adbf908c17f0", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "We can go for Java 1.6 support and thus add a _@Override_ annotation.\n", "created_at": "2012-08-15T16:15:32Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1383861", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383861"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1383861"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383865", "pull_request_review_id": null, "id": 1383865, "diff_hunk": "@@ -0,0 +1,102 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+\txmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<groupId>org.springframework.integration</groupId>\n+\t<artifactId>spring-integration-xquery</artifactId>\n+\t<version>2.2.0-SNAPSHOT</version>\n+\t<licenses>\n+\t\t<license>\n+\t\t\t<name>The Apache Software License, Version 2.0</name>\n+\t\t\t<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+\t\t\t<distribution>repo</distribution>\n+\t\t</license>\n+\t</licenses>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<source>1.5</source>", "path": "spring-integration-xquery/pom.xml", "position": null, "original_position": 23, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "5aa20483893534103cf6478a1f43adbf908c17f0", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "We can go for Java 1.6 support \n", "created_at": "2012-08-15T16:15:49Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1383865", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383865"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1383865"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1383865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385097", "pull_request_review_id": null, "id": 1385097, "diff_hunk": "@@ -0,0 +1,102 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+\txmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<groupId>org.springframework.integration</groupId>\n+\t<artifactId>spring-integration-xquery</artifactId>\n+\t<version>2.2.0-SNAPSHOT</version>\n+\t<licenses>\n+\t\t<license>\n+\t\t\t<name>The Apache Software License, Version 2.0</name>\n+\t\t\t<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+\t\t\t<distribution>repo</distribution>\n+\t\t</license>\n+\t</licenses>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<source>1.5</source>\n+\t\t\t\t\t<target>1.5</target>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<includes>\n+\t\t\t\t\t\t<include>**/*Tests.java</include>\n+\t\t\t\t\t</includes>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<exclude>**/*Abstract*.java</exclude>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<exclude>**/SednaXQueryExecutorTests.java</exclude>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+\t<repositories>", "path": "spring-integration-xquery/pom.xml", "position": 48, "original_position": 44, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Declare the following repos:\n\n```\n<repositories>\n    <repository>\n        <id>repo.springsource.org.milestone</id>\n        <name>Spring Framework Maven Milestone Repository</name>\n        <url>https://repo.springsource.org/libs-milestone</url>\n    </repository>\n    <repository>\n        <id>xqj</id>\n        <name>XQJ Maven Repository</name>\n        <url>http://xqj.net/maven</url>\n    </repository>\n</repositories>\n```\n", "created_at": "2012-08-15T18:06:40Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385097", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385097"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385097"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385182", "pull_request_review_id": null, "id": 1385182, "diff_hunk": "@@ -0,0 +1,102 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+\txmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<groupId>org.springframework.integration</groupId>\n+\t<artifactId>spring-integration-xquery</artifactId>\n+\t<version>2.2.0-SNAPSHOT</version>\n+\t<licenses>\n+\t\t<license>\n+\t\t\t<name>The Apache Software License, Version 2.0</name>\n+\t\t\t<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+\t\t\t<distribution>repo</distribution>\n+\t\t</license>\n+\t</licenses>\n+", "path": "spring-integration-xquery/pom.xml", "position": 17, "original_position": 17, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "add\n\n```\n<prerequisites>\n<maven>2.2.1</maven>\n</prerequisites>\n```\n", "created_at": "2012-08-15T18:13:05Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385182", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385182"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385182"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385207", "pull_request_review_id": null, "id": 1385207, "diff_hunk": "@@ -0,0 +1,102 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+\txmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<groupId>org.springframework.integration</groupId>\n+\t<artifactId>spring-integration-xquery</artifactId>\n+\t<version>2.2.0-SNAPSHOT</version>\n+\t<licenses>\n+\t\t<license>\n+\t\t\t<name>The Apache Software License, Version 2.0</name>\n+\t\t\t<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+\t\t\t<distribution>repo</distribution>\n+\t\t</license>\n+\t</licenses>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<source>1.5</source>\n+\t\t\t\t\t<target>1.5</target>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<includes>\n+\t\t\t\t\t\t<include>**/*Tests.java</include>\n+\t\t\t\t\t</includes>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<exclude>**/*Abstract*.java</exclude>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<exclude>**/SednaXQueryExecutorTests.java</exclude>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+\t<repositories>\n+\t\t<repository>\n+\t\t\t<id>spring-milestone</id>\n+\t\t\t<url>http://maven.springframework.org/milestone</url>\n+\t\t</repository>\n+\t\t<repository>\n+\t\t\t<id>spring-release</id>\n+\t\t\t<url>http://maven.springframework.org/release</url>\n+\t\t</repository>\n+\t\t<repository>\n+\t\t\t<id>springsource-repo</id>\n+\t\t\t<url>http://repo.springsource.org/repo/</url>\n+\t\t</repository>\n+\t\t<repository>\n+\t\t\t<id>mvnrepository</id>\n+\t\t\t<url>http://mvnrepository.com/artifact</url>\n+\t\t</repository>\n+\t</repositories>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-xml</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\t\t\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.integration</groupId>\n+\t\t\t<artifactId>spring-integration-test</artifactId>\n+\t\t\t<version>2.2.0.M3</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>net.sf.saxon</groupId>\n+\t\t\t<artifactId>Saxon-HE</artifactId>\n+\t\t\t<version>9.4</version>\t\t\t\n+\t\t</dependency>\n+\t\t\n+\t\t<dependency>\n+\t\t\t<groupId>net.xqj.sedna</groupId>\n+\t\t\t<artifactId>sedna-xqj</artifactId>\n+\t\t\t<version>1.0.0</version>\n+\t\t\t<scope>optional</scope>\t\t\t\n+\t\t</dependency>\n+\t\t\n+\t\t<dependency>\n+\t\t\t<groupId>junit</groupId>\n+\t\t\t<artifactId>junit-dep</artifactId>\n+\t\t\t<version>4.8.2</version>", "path": "spring-integration-xquery/pom.xml", "position": null, "original_position": 98, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Update version to `4.10`.\n", "created_at": "2012-08-15T18:14:38Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385207", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385207"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385207"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385261", "pull_request_review_id": null, "id": 1385261, "diff_hunk": "@@ -0,0 +1,605 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.core;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.xquery.XQConnection;\n+import javax.xml.xquery.XQConstants;\n+import javax.xml.xquery.XQDataSource;\n+import javax.xml.xquery.XQException;\n+import javax.xml.xquery.XQItemType;\n+import javax.xml.xquery.XQPreparedExpression;\n+import javax.xml.xquery.XQResultSequence;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.BeanClassLoaderAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.xml.DefaultXmlPayloadConverter;\n+import org.springframework.integration.xml.XmlPayloadConverter;\n+import org.springframework.integration.xquery.support.AbstractXQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryParameter;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryUtils;\n+import org.springframework.util.Assert;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Node;\n+\n+/**\n+ * The common logic for performing the common xquery operations would reside in this\n+ * implementation.\n+ * The class would be instantiated with the xquery to be executed and the parameters\n+ * that would be used. It would return the result of the execution with the\n+ * {@link Message} instance passed to one of its execute methods.\n+ * Currently doesn't support advanced mapping techniques of mapping the resulting Node(s)\n+ * to a custom object type\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryExecutor implements InitializingBean,BeanClassLoaderAware {\n+\n+\n+\tprivate static final String SEDNA_XQ_DATASOURCE_CLASS = \"net.xqj.sedna.SednaXQDataSource\";\n+\n+\tprivate static final String SAXON_XQ_DATASOURCE_CLASS = \"net.sf.saxon.xqj.SaxonXQDataSource\";\n+\n+\tprivate final Log logger = LogFactory.getLog(XQueryExecutor.class);\n+\n+\t/**\n+\t * The payload converter\n+\t */\n+\tprivate XmlPayloadConverter converter = new DefaultXmlPayloadConverter();\n+\n+\t @SuppressWarnings(\"rawtypes\")\n+\tprivate volatile  Map resultMappers;\n+\n+\tprivate volatile boolean formatOutput;\n+\n+\t/**\n+\t * The xQuery that this Executor will execute\n+\t */\n+\tprivate String xQuery;\n+\n+\tprivate XQDataSource xqDataSource;\n+\n+\tprivate Map<String, XQueryParameter> xQueryParameterMap;\n+\n+\t//maintained internally and used for setting the values\n+\tprivate List<String> xQueryParameters;\n+\n+\t//The resource to the XQuery's .xq file\n+\tprivate Resource xQueryFileResource;\n+\n+\tprivate String userName;\n+\n+\tprivate String password;\n+\n+\tprivate ClassLoader classLoader = ClassUtils.getDefaultClassLoader();\n+\n+\t//TODO: Can we have a static xml resource which will be used always to execute the\n+\t//given XQuery as against the one sent in the payload. The default is to use the one in the\n+\t//payload unless one for static xml is provided\n+\n+\n+\tpublic void afterPropertiesSet() {\n+\t\tif(resultMappers == null) {\n+\t\t\tresultMappers = new HashMap<Class<?>,XQueryResultMapper<?>>();\n+\t\t}\n+\t\taddDefaultMappers();\n+\n+\t\tif(xqDataSource == null) {\n+\t\t\txqDataSource = discoverXQDataSource();//default\n+\t\t}\n+\t\tif(xQuery == null) {\n+\t\t\t//perhaps resource specified\n+\t\t\tAssert.notNull(xQueryFileResource, \"One of XQuery or the XQuery resource is mandatory\");\n+\t\t\txQuery = XQueryUtils.readXQueryFromResource(xQueryFileResource);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tXQConnection conn = getConnection();\n+\t\t\tXQPreparedExpression expression = conn.prepareExpression(xQuery);\n+\t\t\tQName[] extParameters = expression.getAllExternalVariables();\n+\t\t\tif(extParameters != null && extParameters.length > 0) {\n+\t\t\t\txQueryParameters = new ArrayList<String>();\n+\t\t\t\tfor(QName qName:extParameters) {\n+\t\t\t\t\txQueryParameters.add(qName.getLocalPart());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\texpression.close();\n+\t\t\tconn.close();\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t}\n+\n+\t\tif(xQueryParameters != null) {\n+\t\t\tif (xQueryParameterMap == null) {\n+\t\t\t\tthrow new MessagingException(\"Expecting \" + xQueryParameters.size() + \" parameters in the xquery, \" +\n+\t\t\t\t\t\t\"but none provided to the router\");\n+\t\t\t}\n+\n+\t\t\t//now check if all the parameter needed are present in the map\n+\t\t\tList<String> missingParameters = new ArrayList<String>();\n+\t\t\tfor(String xQueryParameter:xQueryParameters) {\n+\t\t\t\tif(!xQueryParameterMap.containsKey(xQueryParameter)) {\n+\t\t\t\t\tmissingParameters.add(xQueryParameter);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif(missingParameters.size() > 0) {\n+\t\t\t\tStringBuilder builder = new StringBuilder();\n+\t\t\t\tbuilder.append(\"[\").append(\"$\").append(missingParameters.get(0));\n+\t\t\t\tif(missingParameters.size() > 1) {\n+\t\t\t\t\tfor(int i = 1;i < missingParameters.size();i++) {\n+\t\t\t\t\t\tbuilder.append(\", \").append(\"$\").append(missingParameters.get(i));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbuilder.append(\"]\");\n+\t\t\t\tthrow new MessagingException(\"Missing parameter(s) \" + builder.toString());\n+\t\t\t}\n+\t\t}\n+\n+\n+\t}\n+\n+\n+\n+\tpublic void setBeanClassLoader(ClassLoader classLoader) {\n+\t\tAssert.notNull(classLoader, \"Non null class loader instance expected\");\n+\t\tthis.classLoader = classLoader;\n+\n+\t}\n+\n+\n+\t/**\n+\t * The method that finds an implementation in the classpath for some well known\n+\t * providers. This will kick into action only if an {@link XQDataSource} is not\n+\t * explicitly provided by the user by invoking {@link XQueryExecutor#setXQDataSource(XQDataSource)}\n+\t * The method currently looks for Saxon's implementation only\n+\t *\n+\t * @return the instantiated {@link XQDataSource}\n+\t */\n+\tprivate XQDataSource discoverXQDataSource() {\n+\t\tObject xqDataSource = null;\n+\t\ttry {\n+\t\t\tif(ClassUtils.isPresent(SAXON_XQ_DATASOURCE_CLASS, classLoader)) {\n+\t\t\t\txqDataSource = Class.forName(SAXON_XQ_DATASOURCE_CLASS).newInstance();\n+\t\t\t}\n+\t\t\t//For now its just Saxon we will discover, we can add other implementations here later\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new MessagingException(\"Unable to discover/instantiate an XQDataSource, \" +\n+\t\t\t\t\t\"see nested exception for details\", e);\n+\t\t}\n+\t\tAssert.notNull(xqDataSource, \"No XQDataSource provided nor any known implementation discovered in the classpath\");\n+\t\treturn (XQDataSource)xqDataSource;\n+\t}\n+\n+\t/**\n+\t * Gets the connection, uses userName and password if one is set\n+\t * @return\n+\t * @throws XQException\n+\t */\n+\tprivate XQConnection getConnection() throws XQException {\n+\t\tXQConnection conn;\n+\t\tif(StringUtils.hasText(userName)) {\n+\t\t\tconn = xqDataSource.getConnection(userName,password);\n+\t\t}\n+\t\telse {\n+\t\t\tconn = xqDataSource.getConnection();\n+\t\t}\n+\t\treturn conn;\n+\t}\n+\n+\t/**\n+\t * There are some default mappers defined, those will be added if the user has not provided\n+\t * some implementations for them\n+\t */\n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void addDefaultMappers() {\n+\t\tif(!resultMappers.containsKey(String.class)) {\n+\t\t\tStringResultMapper mapper = new StringResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(String.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Boolean.class)) {\n+\t\t\tBooleanResultMapper mapper = new BooleanResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Boolean.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Number.class)) {\n+\t\t\tNumberResultMapper mapper = new NumberResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Number.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Node.class)) {\n+\t\t\tNodeResultMapper mapper = new NodeResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Node.class, mapper);\n+\t\t}\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link String}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<String> executeForString(Message<?> message) {\n+\t\treturn execute(message,String.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Boolean}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Boolean> executeForBoolean(Message<?> message) {\n+\t\treturn execute(message,Boolean.class);\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Number}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Number> executeForNumber(Message<?> message) {\n+\t\treturn execute(message,Number.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Node}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Node> executeForNode(Message<?> message) {\n+\t\treturn execute(message,Node.class);\n+\t}\n+\n+\t/**\n+\t * Execute the given XQuery and returns a {@link List} of the provided type\n+\t * @param <T>\n+\t * @param message\n+\t * @param returnType\n+\t * @return\n+\t */\n+\t@SuppressWarnings({ \"unchecked\"})\n+\tpublic <T> List<T> execute(Message<?> message,Class<T> returnType) {\n+\t\tAssert.notNull(message,\"Non null message expected\");\n+\t\tAssert.notNull(returnType,\"Non null type expected\");\n+\t\tAssert.isTrue(resultMappers.containsKey(returnType),\"No Result mapper found for the type \" + returnType.getName());\n+\t\treturn execute(message, (XQueryResultMapper<T>)resultMappers.get(returnType));\n+\t}\n+\n+\t/**\n+\t * The method that executes the actual XQuery and uses the provided mapper\n+\t * to get the result that is returned.\n+\t * @param <T>\n+\t * @param message\n+\t * @param mapper\n+\t * @return\n+\t */\n+\tpublic <T> List<T> execute(Message<?> message,XQueryResultMapper<T> mapper) {\n+\t\tNode node = converter.convertToNode(message.getPayload());\n+\n+\t\tif(node == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tXQConnection connection = null;\n+\t\tXQPreparedExpression expression = null;\n+\t\ttry {\n+\t\t\tconnection = getConnection();\n+\t\t\texpression = connection.prepareExpression(xQuery);\n+\t\t\texpression.bindNode(XQConstants.CONTEXT_ITEM, node, null);\n+\n+\t\t\t//bind the parameter values\n+\t\t\tif(xQueryParameters != null && xQueryParameters.size() > 0) {\n+\t\t\t\t//bind them one by one\n+\t\t\t\tfor(String parameter:xQueryParameters) {\n+\t\t\t\t\tXQueryParameter xQueryParam = xQueryParameterMap.get(parameter);\n+\t\t\t\t\t//TODO: Check what possible values can be supported to be set here\n+\t\t\t\t\t//Accordingly do we need to set the third parameter for XQItemType\n+\t\t\t\t\texpression.bindObject(new QName(xQueryParam.getParameterName()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\txQueryParam.evaluate(message), null);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tXQResultSequence result = expression.executeQuery();\n+\t\t\treturn mapper.mapResults(result);\n+\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t} finally {\n+\t\t\ttry {\n+\t\t\t\tif(expression != null) {\n+\t\t\t\t\texpression.close();\n+\t\t\t\t}\n+\t\t\t\tif(connection != null) {\n+\t\t\t\t\tconnection.close();\n+\t\t\t\t}\n+\t\t\t} catch (XQException e) {\n+\t\t\t\tlogger.error(\"Caught Exception while closing the XQ expression.connection\", e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Sets all the result mappers to be used by this executor.\n+\t * @param <T>\n+\t * @param mappers\n+\t */\n+\t@SuppressWarnings(\"rawtypes\")\n+\tpublic <T> void setResultMappers(Map<Class<T>, XQueryResultMapper<T>> mappers) {\n+\t\tAssert.notNull(mappers);\n+\t\tthis.resultMappers = new HashMap<Class<T>, XQueryResultMapper<T>>(mappers);\n+\t\t//not iterate through them and set the format\n+\t\tfor(Object mapper:resultMappers.values()) {\n+\t\t\tif(mapper instanceof AbstractXQueryResultMapper) {\n+\t\t\t\t((AbstractXQueryResultMapper)mapper).setFormatOutput(formatOutput);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t *Set the {@link XmlPayloadConverter} that would be used to convert the payload\n+\t * into the XML {@link Node}\n+\t *\n+\t * @param converter\n+\t */\n+\tpublic void setConverter(XmlPayloadConverter converter) {\n+\t\tAssert.notNull(converter, \"Provide a non null instance of XmlPayloadConverter\");\n+\t\tthis.converter = converter;\n+\t}\n+\n+\t/**\n+\t * The XQuery string that would be evaluated to determine the channel names\n+\t * @param xQuery\n+\t */\n+\tpublic void setXQuery(String xQuery) {\n+\t\tAssert.isTrue(xQueryFileResource == null, \"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tAssert.notNull(xQuery, \"Provide a non null XQuery\");\n+\t\tthis.xQuery = xQuery;\n+\t}\n+\n+\t/**\n+\t * Sets the XQuery's .xq file as the resource. The contents of this file will be read as xQuery\n+\t *\n+\t * @param xQueryFileResource\n+\t */\n+\tpublic void setXQueryFileResource(Resource xQueryFileResource) {\n+\t\tAssert.isTrue(xQuery == null,\"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tthis.xQueryFileResource = xQueryFileResource;\n+\t}\n+\n+\t/**\n+\t * Sets the {@link XQDataSource}\n+\t * @param xqDataSource\n+\t */\n+\tpublic void setXQDataSource(XQDataSource xqDataSource) {\n+\t\tAssert.notNull(xqDataSource, \"Provide a non null instance of the XQDatasource\");\n+\t\tthis.xqDataSource = xqDataSource;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter map where the parameter name is the key and the\n+\t * {@link XQueryParameter} instance is the value\n+\t *\n+\t * @param xQueryParameterMap\n+\t */\n+\tpublic void setXQueryParameterMap(\n+\t\t\tMap<String, XQueryParameter> xQueryParameterMap) {\n+\t\tthis.xQueryParameterMap = xQueryParameterMap;\n+\t}\n+\n+\t/**\n+\t * Convenience method to add a {@link XQueryParameter} to the map\n+\t * @param param\n+\t */\n+\tpublic void addXQueryParameter(XQueryParameter param) {\n+\t\tif(xQueryParameterMap == null) {\n+\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t}\n+\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t}\n+\n+\t/**\n+\t * Convenience method that would be used to set the parameters in the parameter\n+\t * map. Any non conflicting parameters would be retained\n+\t * @param params\n+\t */\n+\tpublic void setXQueryParameters(List<XQueryParameter> params) {\n+\t\tif(params != null && params.size() > 0) {\n+\t\t\tif(xQueryParameterMap == null)\n+\t\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t\tfor(XQueryParameter param:params) {\n+\t\t\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * If the output result is an xml, the value of this parameter will determine\n+\t * if the output xml is to be formatted or not. By default, the output will\n+\t * not be formatted\n+\t *\n+\t * @param formatOutput\n+\t */\n+\tpublic void setFormatOutput(boolean formatOutput) {\n+\t\tthis.formatOutput = formatOutput;\n+\t}\n+\n+\n+\n+\t//TODO: Support date, dateTime data types\n+\n+\n+\t/**\n+\t * Sets the user name to be used while obtaining the connection.\n+\t *\n+\t */\n+\tpublic void setUserName(String userName) {\n+\t\tthis.userName = userName;", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": null, "original_position": 475, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Add Assert.hasText(...)\n", "created_at": "2012-08-15T18:20:40Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385261", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385261"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385261"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385265", "pull_request_review_id": null, "id": 1385265, "diff_hunk": "@@ -0,0 +1,605 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.core;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.xquery.XQConnection;\n+import javax.xml.xquery.XQConstants;\n+import javax.xml.xquery.XQDataSource;\n+import javax.xml.xquery.XQException;\n+import javax.xml.xquery.XQItemType;\n+import javax.xml.xquery.XQPreparedExpression;\n+import javax.xml.xquery.XQResultSequence;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.BeanClassLoaderAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.xml.DefaultXmlPayloadConverter;\n+import org.springframework.integration.xml.XmlPayloadConverter;\n+import org.springframework.integration.xquery.support.AbstractXQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryParameter;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryUtils;\n+import org.springframework.util.Assert;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Node;\n+\n+/**\n+ * The common logic for performing the common xquery operations would reside in this\n+ * implementation.\n+ * The class would be instantiated with the xquery to be executed and the parameters\n+ * that would be used. It would return the result of the execution with the\n+ * {@link Message} instance passed to one of its execute methods.\n+ * Currently doesn't support advanced mapping techniques of mapping the resulting Node(s)\n+ * to a custom object type\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryExecutor implements InitializingBean,BeanClassLoaderAware {\n+\n+\n+\tprivate static final String SEDNA_XQ_DATASOURCE_CLASS = \"net.xqj.sedna.SednaXQDataSource\";\n+\n+\tprivate static final String SAXON_XQ_DATASOURCE_CLASS = \"net.sf.saxon.xqj.SaxonXQDataSource\";\n+\n+\tprivate final Log logger = LogFactory.getLog(XQueryExecutor.class);\n+\n+\t/**\n+\t * The payload converter\n+\t */\n+\tprivate XmlPayloadConverter converter = new DefaultXmlPayloadConverter();\n+\n+\t @SuppressWarnings(\"rawtypes\")\n+\tprivate volatile  Map resultMappers;\n+\n+\tprivate volatile boolean formatOutput;\n+\n+\t/**\n+\t * The xQuery that this Executor will execute\n+\t */\n+\tprivate String xQuery;\n+\n+\tprivate XQDataSource xqDataSource;\n+\n+\tprivate Map<String, XQueryParameter> xQueryParameterMap;\n+\n+\t//maintained internally and used for setting the values\n+\tprivate List<String> xQueryParameters;\n+\n+\t//The resource to the XQuery's .xq file\n+\tprivate Resource xQueryFileResource;\n+\n+\tprivate String userName;\n+\n+\tprivate String password;\n+\n+\tprivate ClassLoader classLoader = ClassUtils.getDefaultClassLoader();\n+\n+\t//TODO: Can we have a static xml resource which will be used always to execute the\n+\t//given XQuery as against the one sent in the payload. The default is to use the one in the\n+\t//payload unless one for static xml is provided\n+\n+\n+\tpublic void afterPropertiesSet() {\n+\t\tif(resultMappers == null) {\n+\t\t\tresultMappers = new HashMap<Class<?>,XQueryResultMapper<?>>();\n+\t\t}\n+\t\taddDefaultMappers();\n+\n+\t\tif(xqDataSource == null) {\n+\t\t\txqDataSource = discoverXQDataSource();//default\n+\t\t}\n+\t\tif(xQuery == null) {\n+\t\t\t//perhaps resource specified\n+\t\t\tAssert.notNull(xQueryFileResource, \"One of XQuery or the XQuery resource is mandatory\");\n+\t\t\txQuery = XQueryUtils.readXQueryFromResource(xQueryFileResource);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tXQConnection conn = getConnection();\n+\t\t\tXQPreparedExpression expression = conn.prepareExpression(xQuery);\n+\t\t\tQName[] extParameters = expression.getAllExternalVariables();\n+\t\t\tif(extParameters != null && extParameters.length > 0) {\n+\t\t\t\txQueryParameters = new ArrayList<String>();\n+\t\t\t\tfor(QName qName:extParameters) {\n+\t\t\t\t\txQueryParameters.add(qName.getLocalPart());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\texpression.close();\n+\t\t\tconn.close();\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t}\n+\n+\t\tif(xQueryParameters != null) {\n+\t\t\tif (xQueryParameterMap == null) {\n+\t\t\t\tthrow new MessagingException(\"Expecting \" + xQueryParameters.size() + \" parameters in the xquery, \" +\n+\t\t\t\t\t\t\"but none provided to the router\");\n+\t\t\t}\n+\n+\t\t\t//now check if all the parameter needed are present in the map\n+\t\t\tList<String> missingParameters = new ArrayList<String>();\n+\t\t\tfor(String xQueryParameter:xQueryParameters) {\n+\t\t\t\tif(!xQueryParameterMap.containsKey(xQueryParameter)) {\n+\t\t\t\t\tmissingParameters.add(xQueryParameter);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif(missingParameters.size() > 0) {\n+\t\t\t\tStringBuilder builder = new StringBuilder();\n+\t\t\t\tbuilder.append(\"[\").append(\"$\").append(missingParameters.get(0));\n+\t\t\t\tif(missingParameters.size() > 1) {\n+\t\t\t\t\tfor(int i = 1;i < missingParameters.size();i++) {\n+\t\t\t\t\t\tbuilder.append(\", \").append(\"$\").append(missingParameters.get(i));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbuilder.append(\"]\");\n+\t\t\t\tthrow new MessagingException(\"Missing parameter(s) \" + builder.toString());\n+\t\t\t}\n+\t\t}\n+\n+\n+\t}\n+\n+\n+\n+\tpublic void setBeanClassLoader(ClassLoader classLoader) {\n+\t\tAssert.notNull(classLoader, \"Non null class loader instance expected\");\n+\t\tthis.classLoader = classLoader;\n+\n+\t}\n+\n+\n+\t/**\n+\t * The method that finds an implementation in the classpath for some well known\n+\t * providers. This will kick into action only if an {@link XQDataSource} is not\n+\t * explicitly provided by the user by invoking {@link XQueryExecutor#setXQDataSource(XQDataSource)}\n+\t * The method currently looks for Saxon's implementation only\n+\t *\n+\t * @return the instantiated {@link XQDataSource}\n+\t */\n+\tprivate XQDataSource discoverXQDataSource() {\n+\t\tObject xqDataSource = null;\n+\t\ttry {\n+\t\t\tif(ClassUtils.isPresent(SAXON_XQ_DATASOURCE_CLASS, classLoader)) {\n+\t\t\t\txqDataSource = Class.forName(SAXON_XQ_DATASOURCE_CLASS).newInstance();\n+\t\t\t}\n+\t\t\t//For now its just Saxon we will discover, we can add other implementations here later\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new MessagingException(\"Unable to discover/instantiate an XQDataSource, \" +\n+\t\t\t\t\t\"see nested exception for details\", e);\n+\t\t}\n+\t\tAssert.notNull(xqDataSource, \"No XQDataSource provided nor any known implementation discovered in the classpath\");\n+\t\treturn (XQDataSource)xqDataSource;\n+\t}\n+\n+\t/**\n+\t * Gets the connection, uses userName and password if one is set\n+\t * @return\n+\t * @throws XQException\n+\t */\n+\tprivate XQConnection getConnection() throws XQException {\n+\t\tXQConnection conn;\n+\t\tif(StringUtils.hasText(userName)) {\n+\t\t\tconn = xqDataSource.getConnection(userName,password);\n+\t\t}\n+\t\telse {\n+\t\t\tconn = xqDataSource.getConnection();\n+\t\t}\n+\t\treturn conn;\n+\t}\n+\n+\t/**\n+\t * There are some default mappers defined, those will be added if the user has not provided\n+\t * some implementations for them\n+\t */\n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void addDefaultMappers() {\n+\t\tif(!resultMappers.containsKey(String.class)) {\n+\t\t\tStringResultMapper mapper = new StringResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(String.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Boolean.class)) {\n+\t\t\tBooleanResultMapper mapper = new BooleanResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Boolean.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Number.class)) {\n+\t\t\tNumberResultMapper mapper = new NumberResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Number.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Node.class)) {\n+\t\t\tNodeResultMapper mapper = new NodeResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Node.class, mapper);\n+\t\t}\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link String}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<String> executeForString(Message<?> message) {\n+\t\treturn execute(message,String.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Boolean}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Boolean> executeForBoolean(Message<?> message) {\n+\t\treturn execute(message,Boolean.class);\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Number}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Number> executeForNumber(Message<?> message) {\n+\t\treturn execute(message,Number.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Node}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Node> executeForNode(Message<?> message) {\n+\t\treturn execute(message,Node.class);\n+\t}\n+\n+\t/**\n+\t * Execute the given XQuery and returns a {@link List} of the provided type\n+\t * @param <T>\n+\t * @param message\n+\t * @param returnType\n+\t * @return\n+\t */\n+\t@SuppressWarnings({ \"unchecked\"})\n+\tpublic <T> List<T> execute(Message<?> message,Class<T> returnType) {\n+\t\tAssert.notNull(message,\"Non null message expected\");\n+\t\tAssert.notNull(returnType,\"Non null type expected\");\n+\t\tAssert.isTrue(resultMappers.containsKey(returnType),\"No Result mapper found for the type \" + returnType.getName());\n+\t\treturn execute(message, (XQueryResultMapper<T>)resultMappers.get(returnType));\n+\t}\n+\n+\t/**\n+\t * The method that executes the actual XQuery and uses the provided mapper\n+\t * to get the result that is returned.\n+\t * @param <T>\n+\t * @param message\n+\t * @param mapper\n+\t * @return\n+\t */\n+\tpublic <T> List<T> execute(Message<?> message,XQueryResultMapper<T> mapper) {\n+\t\tNode node = converter.convertToNode(message.getPayload());\n+\n+\t\tif(node == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tXQConnection connection = null;\n+\t\tXQPreparedExpression expression = null;\n+\t\ttry {\n+\t\t\tconnection = getConnection();\n+\t\t\texpression = connection.prepareExpression(xQuery);\n+\t\t\texpression.bindNode(XQConstants.CONTEXT_ITEM, node, null);\n+\n+\t\t\t//bind the parameter values\n+\t\t\tif(xQueryParameters != null && xQueryParameters.size() > 0) {\n+\t\t\t\t//bind them one by one\n+\t\t\t\tfor(String parameter:xQueryParameters) {\n+\t\t\t\t\tXQueryParameter xQueryParam = xQueryParameterMap.get(parameter);\n+\t\t\t\t\t//TODO: Check what possible values can be supported to be set here\n+\t\t\t\t\t//Accordingly do we need to set the third parameter for XQItemType\n+\t\t\t\t\texpression.bindObject(new QName(xQueryParam.getParameterName()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\txQueryParam.evaluate(message), null);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tXQResultSequence result = expression.executeQuery();\n+\t\t\treturn mapper.mapResults(result);\n+\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t} finally {\n+\t\t\ttry {\n+\t\t\t\tif(expression != null) {\n+\t\t\t\t\texpression.close();\n+\t\t\t\t}\n+\t\t\t\tif(connection != null) {\n+\t\t\t\t\tconnection.close();\n+\t\t\t\t}\n+\t\t\t} catch (XQException e) {\n+\t\t\t\tlogger.error(\"Caught Exception while closing the XQ expression.connection\", e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Sets all the result mappers to be used by this executor.\n+\t * @param <T>\n+\t * @param mappers\n+\t */\n+\t@SuppressWarnings(\"rawtypes\")\n+\tpublic <T> void setResultMappers(Map<Class<T>, XQueryResultMapper<T>> mappers) {\n+\t\tAssert.notNull(mappers);\n+\t\tthis.resultMappers = new HashMap<Class<T>, XQueryResultMapper<T>>(mappers);\n+\t\t//not iterate through them and set the format\n+\t\tfor(Object mapper:resultMappers.values()) {\n+\t\t\tif(mapper instanceof AbstractXQueryResultMapper) {\n+\t\t\t\t((AbstractXQueryResultMapper)mapper).setFormatOutput(formatOutput);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t *Set the {@link XmlPayloadConverter} that would be used to convert the payload\n+\t * into the XML {@link Node}\n+\t *\n+\t * @param converter\n+\t */\n+\tpublic void setConverter(XmlPayloadConverter converter) {\n+\t\tAssert.notNull(converter, \"Provide a non null instance of XmlPayloadConverter\");\n+\t\tthis.converter = converter;\n+\t}\n+\n+\t/**\n+\t * The XQuery string that would be evaluated to determine the channel names\n+\t * @param xQuery\n+\t */\n+\tpublic void setXQuery(String xQuery) {\n+\t\tAssert.isTrue(xQueryFileResource == null, \"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tAssert.notNull(xQuery, \"Provide a non null XQuery\");\n+\t\tthis.xQuery = xQuery;\n+\t}\n+\n+\t/**\n+\t * Sets the XQuery's .xq file as the resource. The contents of this file will be read as xQuery\n+\t *\n+\t * @param xQueryFileResource\n+\t */\n+\tpublic void setXQueryFileResource(Resource xQueryFileResource) {\n+\t\tAssert.isTrue(xQuery == null,\"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tthis.xQueryFileResource = xQueryFileResource;\n+\t}\n+\n+\t/**\n+\t * Sets the {@link XQDataSource}\n+\t * @param xqDataSource\n+\t */\n+\tpublic void setXQDataSource(XQDataSource xqDataSource) {\n+\t\tAssert.notNull(xqDataSource, \"Provide a non null instance of the XQDatasource\");\n+\t\tthis.xqDataSource = xqDataSource;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter map where the parameter name is the key and the\n+\t * {@link XQueryParameter} instance is the value\n+\t *\n+\t * @param xQueryParameterMap\n+\t */\n+\tpublic void setXQueryParameterMap(\n+\t\t\tMap<String, XQueryParameter> xQueryParameterMap) {\n+\t\tthis.xQueryParameterMap = xQueryParameterMap;\n+\t}\n+\n+\t/**\n+\t * Convenience method to add a {@link XQueryParameter} to the map\n+\t * @param param\n+\t */\n+\tpublic void addXQueryParameter(XQueryParameter param) {\n+\t\tif(xQueryParameterMap == null) {\n+\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t}\n+\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t}\n+\n+\t/**\n+\t * Convenience method that would be used to set the parameters in the parameter\n+\t * map. Any non conflicting parameters would be retained\n+\t * @param params\n+\t */\n+\tpublic void setXQueryParameters(List<XQueryParameter> params) {\n+\t\tif(params != null && params.size() > 0) {\n+\t\t\tif(xQueryParameterMap == null)\n+\t\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t\tfor(XQueryParameter param:params) {\n+\t\t\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * If the output result is an xml, the value of this parameter will determine\n+\t * if the output xml is to be formatted or not. By default, the output will\n+\t * not be formatted\n+\t *\n+\t * @param formatOutput\n+\t */\n+\tpublic void setFormatOutput(boolean formatOutput) {\n+\t\tthis.formatOutput = formatOutput;\n+\t}\n+\n+\n+\n+\t//TODO: Support date, dateTime data types\n+\n+\n+\t/**\n+\t * Sets the user name to be used while obtaining the connection.\n+\t *\n+\t */\n+\tpublic void setUserName(String userName) {\n+\t\tthis.userName = userName;\n+\t}\n+\n+\t/**\n+\t * Sets the password to be used for obtaining the connection\n+\t * The value if ignored if the userName is null\n+\t *\n+\t * @param password\n+\t */\n+\tpublic void setPassword(String password) {\n+\t\tthis.password = password;", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": null, "original_position": 485, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Add Assert.hasText(...)\n", "created_at": "2012-08-15T18:20:53Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385265", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385265"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385265"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385329", "pull_request_review_id": null, "id": 1385329, "diff_hunk": "@@ -0,0 +1,605 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.core;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.xquery.XQConnection;\n+import javax.xml.xquery.XQConstants;\n+import javax.xml.xquery.XQDataSource;\n+import javax.xml.xquery.XQException;\n+import javax.xml.xquery.XQItemType;\n+import javax.xml.xquery.XQPreparedExpression;\n+import javax.xml.xquery.XQResultSequence;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.BeanClassLoaderAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.xml.DefaultXmlPayloadConverter;\n+import org.springframework.integration.xml.XmlPayloadConverter;\n+import org.springframework.integration.xquery.support.AbstractXQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryParameter;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryUtils;\n+import org.springframework.util.Assert;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Node;\n+\n+/**\n+ * The common logic for performing the common xquery operations would reside in this\n+ * implementation.\n+ * The class would be instantiated with the xquery to be executed and the parameters\n+ * that would be used. It would return the result of the execution with the\n+ * {@link Message} instance passed to one of its execute methods.\n+ * Currently doesn't support advanced mapping techniques of mapping the resulting Node(s)\n+ * to a custom object type\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryExecutor implements InitializingBean,BeanClassLoaderAware {\n+\n+\n+\tprivate static final String SEDNA_XQ_DATASOURCE_CLASS = \"net.xqj.sedna.SednaXQDataSource\";\n+\n+\tprivate static final String SAXON_XQ_DATASOURCE_CLASS = \"net.sf.saxon.xqj.SaxonXQDataSource\";\n+\n+\tprivate final Log logger = LogFactory.getLog(XQueryExecutor.class);\n+\n+\t/**\n+\t * The payload converter\n+\t */\n+\tprivate XmlPayloadConverter converter = new DefaultXmlPayloadConverter();\n+\n+\t @SuppressWarnings(\"rawtypes\")\n+\tprivate volatile  Map resultMappers;\n+\n+\tprivate volatile boolean formatOutput;\n+\n+\t/**\n+\t * The xQuery that this Executor will execute\n+\t */\n+\tprivate String xQuery;\n+\n+\tprivate XQDataSource xqDataSource;\n+\n+\tprivate Map<String, XQueryParameter> xQueryParameterMap;\n+\n+\t//maintained internally and used for setting the values\n+\tprivate List<String> xQueryParameters;\n+\n+\t//The resource to the XQuery's .xq file\n+\tprivate Resource xQueryFileResource;\n+\n+\tprivate String userName;\n+\n+\tprivate String password;\n+\n+\tprivate ClassLoader classLoader = ClassUtils.getDefaultClassLoader();\n+\n+\t//TODO: Can we have a static xml resource which will be used always to execute the\n+\t//given XQuery as against the one sent in the payload. The default is to use the one in the\n+\t//payload unless one for static xml is provided\n+\n+\n+\tpublic void afterPropertiesSet() {\n+\t\tif(resultMappers == null) {\n+\t\t\tresultMappers = new HashMap<Class<?>,XQueryResultMapper<?>>();\n+\t\t}\n+\t\taddDefaultMappers();\n+\n+\t\tif(xqDataSource == null) {\n+\t\t\txqDataSource = discoverXQDataSource();//default\n+\t\t}\n+\t\tif(xQuery == null) {\n+\t\t\t//perhaps resource specified\n+\t\t\tAssert.notNull(xQueryFileResource, \"One of XQuery or the XQuery resource is mandatory\");\n+\t\t\txQuery = XQueryUtils.readXQueryFromResource(xQueryFileResource);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tXQConnection conn = getConnection();\n+\t\t\tXQPreparedExpression expression = conn.prepareExpression(xQuery);\n+\t\t\tQName[] extParameters = expression.getAllExternalVariables();\n+\t\t\tif(extParameters != null && extParameters.length > 0) {\n+\t\t\t\txQueryParameters = new ArrayList<String>();\n+\t\t\t\tfor(QName qName:extParameters) {\n+\t\t\t\t\txQueryParameters.add(qName.getLocalPart());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\texpression.close();\n+\t\t\tconn.close();\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t}\n+\n+\t\tif(xQueryParameters != null) {\n+\t\t\tif (xQueryParameterMap == null) {\n+\t\t\t\tthrow new MessagingException(\"Expecting \" + xQueryParameters.size() + \" parameters in the xquery, \" +\n+\t\t\t\t\t\t\"but none provided to the router\");\n+\t\t\t}\n+\n+\t\t\t//now check if all the parameter needed are present in the map\n+\t\t\tList<String> missingParameters = new ArrayList<String>();\n+\t\t\tfor(String xQueryParameter:xQueryParameters) {\n+\t\t\t\tif(!xQueryParameterMap.containsKey(xQueryParameter)) {\n+\t\t\t\t\tmissingParameters.add(xQueryParameter);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif(missingParameters.size() > 0) {\n+\t\t\t\tStringBuilder builder = new StringBuilder();\n+\t\t\t\tbuilder.append(\"[\").append(\"$\").append(missingParameters.get(0));\n+\t\t\t\tif(missingParameters.size() > 1) {\n+\t\t\t\t\tfor(int i = 1;i < missingParameters.size();i++) {\n+\t\t\t\t\t\tbuilder.append(\", \").append(\"$\").append(missingParameters.get(i));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbuilder.append(\"]\");\n+\t\t\t\tthrow new MessagingException(\"Missing parameter(s) \" + builder.toString());\n+\t\t\t}\n+\t\t}\n+\n+\n+\t}\n+\n+\n+\n+\tpublic void setBeanClassLoader(ClassLoader classLoader) {\n+\t\tAssert.notNull(classLoader, \"Non null class loader instance expected\");\n+\t\tthis.classLoader = classLoader;\n+\n+\t}\n+\n+\n+\t/**\n+\t * The method that finds an implementation in the classpath for some well known\n+\t * providers. This will kick into action only if an {@link XQDataSource} is not\n+\t * explicitly provided by the user by invoking {@link XQueryExecutor#setXQDataSource(XQDataSource)}\n+\t * The method currently looks for Saxon's implementation only\n+\t *\n+\t * @return the instantiated {@link XQDataSource}\n+\t */\n+\tprivate XQDataSource discoverXQDataSource() {\n+\t\tObject xqDataSource = null;\n+\t\ttry {\n+\t\t\tif(ClassUtils.isPresent(SAXON_XQ_DATASOURCE_CLASS, classLoader)) {\n+\t\t\t\txqDataSource = Class.forName(SAXON_XQ_DATASOURCE_CLASS).newInstance();\n+\t\t\t}\n+\t\t\t//For now its just Saxon we will discover, we can add other implementations here later\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new MessagingException(\"Unable to discover/instantiate an XQDataSource, \" +\n+\t\t\t\t\t\"see nested exception for details\", e);\n+\t\t}\n+\t\tAssert.notNull(xqDataSource, \"No XQDataSource provided nor any known implementation discovered in the classpath\");\n+\t\treturn (XQDataSource)xqDataSource;\n+\t}\n+\n+\t/**\n+\t * Gets the connection, uses userName and password if one is set\n+\t * @return\n+\t * @throws XQException\n+\t */\n+\tprivate XQConnection getConnection() throws XQException {\n+\t\tXQConnection conn;\n+\t\tif(StringUtils.hasText(userName)) {\n+\t\t\tconn = xqDataSource.getConnection(userName,password);\n+\t\t}\n+\t\telse {\n+\t\t\tconn = xqDataSource.getConnection();\n+\t\t}\n+\t\treturn conn;\n+\t}\n+\n+\t/**\n+\t * There are some default mappers defined, those will be added if the user has not provided\n+\t * some implementations for them\n+\t */\n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void addDefaultMappers() {\n+\t\tif(!resultMappers.containsKey(String.class)) {\n+\t\t\tStringResultMapper mapper = new StringResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(String.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Boolean.class)) {\n+\t\t\tBooleanResultMapper mapper = new BooleanResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Boolean.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Number.class)) {\n+\t\t\tNumberResultMapper mapper = new NumberResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Number.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Node.class)) {\n+\t\t\tNodeResultMapper mapper = new NodeResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Node.class, mapper);\n+\t\t}\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link String}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<String> executeForString(Message<?> message) {\n+\t\treturn execute(message,String.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Boolean}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Boolean> executeForBoolean(Message<?> message) {\n+\t\treturn execute(message,Boolean.class);\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Number}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Number> executeForNumber(Message<?> message) {\n+\t\treturn execute(message,Number.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Node}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Node> executeForNode(Message<?> message) {\n+\t\treturn execute(message,Node.class);\n+\t}\n+\n+\t/**\n+\t * Execute the given XQuery and returns a {@link List} of the provided type\n+\t * @param <T>\n+\t * @param message\n+\t * @param returnType\n+\t * @return\n+\t */\n+\t@SuppressWarnings({ \"unchecked\"})\n+\tpublic <T> List<T> execute(Message<?> message,Class<T> returnType) {\n+\t\tAssert.notNull(message,\"Non null message expected\");\n+\t\tAssert.notNull(returnType,\"Non null type expected\");\n+\t\tAssert.isTrue(resultMappers.containsKey(returnType),\"No Result mapper found for the type \" + returnType.getName());\n+\t\treturn execute(message, (XQueryResultMapper<T>)resultMappers.get(returnType));\n+\t}\n+\n+\t/**\n+\t * The method that executes the actual XQuery and uses the provided mapper\n+\t * to get the result that is returned.\n+\t * @param <T>\n+\t * @param message\n+\t * @param mapper\n+\t * @return\n+\t */\n+\tpublic <T> List<T> execute(Message<?> message,XQueryResultMapper<T> mapper) {\n+\t\tNode node = converter.convertToNode(message.getPayload());\n+\n+\t\tif(node == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tXQConnection connection = null;\n+\t\tXQPreparedExpression expression = null;\n+\t\ttry {\n+\t\t\tconnection = getConnection();\n+\t\t\texpression = connection.prepareExpression(xQuery);\n+\t\t\texpression.bindNode(XQConstants.CONTEXT_ITEM, node, null);\n+\n+\t\t\t//bind the parameter values\n+\t\t\tif(xQueryParameters != null && xQueryParameters.size() > 0) {\n+\t\t\t\t//bind them one by one\n+\t\t\t\tfor(String parameter:xQueryParameters) {\n+\t\t\t\t\tXQueryParameter xQueryParam = xQueryParameterMap.get(parameter);\n+\t\t\t\t\t//TODO: Check what possible values can be supported to be set here\n+\t\t\t\t\t//Accordingly do we need to set the third parameter for XQItemType\n+\t\t\t\t\texpression.bindObject(new QName(xQueryParam.getParameterName()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\txQueryParam.evaluate(message), null);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tXQResultSequence result = expression.executeQuery();\n+\t\t\treturn mapper.mapResults(result);\n+\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t} finally {\n+\t\t\ttry {\n+\t\t\t\tif(expression != null) {\n+\t\t\t\t\texpression.close();\n+\t\t\t\t}\n+\t\t\t\tif(connection != null) {\n+\t\t\t\t\tconnection.close();\n+\t\t\t\t}\n+\t\t\t} catch (XQException e) {\n+\t\t\t\tlogger.error(\"Caught Exception while closing the XQ expression.connection\", e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Sets all the result mappers to be used by this executor.\n+\t * @param <T>\n+\t * @param mappers\n+\t */\n+\t@SuppressWarnings(\"rawtypes\")\n+\tpublic <T> void setResultMappers(Map<Class<T>, XQueryResultMapper<T>> mappers) {\n+\t\tAssert.notNull(mappers);\n+\t\tthis.resultMappers = new HashMap<Class<T>, XQueryResultMapper<T>>(mappers);\n+\t\t//not iterate through them and set the format\n+\t\tfor(Object mapper:resultMappers.values()) {\n+\t\t\tif(mapper instanceof AbstractXQueryResultMapper) {\n+\t\t\t\t((AbstractXQueryResultMapper)mapper).setFormatOutput(formatOutput);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t *Set the {@link XmlPayloadConverter} that would be used to convert the payload\n+\t * into the XML {@link Node}\n+\t *\n+\t * @param converter\n+\t */\n+\tpublic void setConverter(XmlPayloadConverter converter) {\n+\t\tAssert.notNull(converter, \"Provide a non null instance of XmlPayloadConverter\");\n+\t\tthis.converter = converter;\n+\t}\n+\n+\t/**\n+\t * The XQuery string that would be evaluated to determine the channel names\n+\t * @param xQuery\n+\t */\n+\tpublic void setXQuery(String xQuery) {\n+\t\tAssert.isTrue(xQueryFileResource == null, \"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tAssert.notNull(xQuery, \"Provide a non null XQuery\");\n+\t\tthis.xQuery = xQuery;\n+\t}\n+\n+\t/**\n+\t * Sets the XQuery's .xq file as the resource. The contents of this file will be read as xQuery\n+\t *\n+\t * @param xQueryFileResource\n+\t */\n+\tpublic void setXQueryFileResource(Resource xQueryFileResource) {\n+\t\tAssert.isTrue(xQuery == null,\"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tthis.xQueryFileResource = xQueryFileResource;\n+\t}\n+\n+\t/**\n+\t * Sets the {@link XQDataSource}\n+\t * @param xqDataSource\n+\t */\n+\tpublic void setXQDataSource(XQDataSource xqDataSource) {\n+\t\tAssert.notNull(xqDataSource, \"Provide a non null instance of the XQDatasource\");\n+\t\tthis.xqDataSource = xqDataSource;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter map where the parameter name is the key and the\n+\t * {@link XQueryParameter} instance is the value\n+\t *\n+\t * @param xQueryParameterMap\n+\t */\n+\tpublic void setXQueryParameterMap(\n+\t\t\tMap<String, XQueryParameter> xQueryParameterMap) {\n+\t\tthis.xQueryParameterMap = xQueryParameterMap;\n+\t}\n+\n+\t/**\n+\t * Convenience method to add a {@link XQueryParameter} to the map\n+\t * @param param\n+\t */\n+\tpublic void addXQueryParameter(XQueryParameter param) {\n+\t\tif(xQueryParameterMap == null) {\n+\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t}\n+\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t}\n+\n+\t/**\n+\t * Convenience method that would be used to set the parameters in the parameter\n+\t * map. Any non conflicting parameters would be retained\n+\t * @param params\n+\t */\n+\tpublic void setXQueryParameters(List<XQueryParameter> params) {\n+\t\tif(params != null && params.size() > 0) {\n+\t\t\tif(xQueryParameterMap == null)\n+\t\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t\tfor(XQueryParameter param:params) {\n+\t\t\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * If the output result is an xml, the value of this parameter will determine\n+\t * if the output xml is to be formatted or not. By default, the output will\n+\t * not be formatted\n+\t *\n+\t * @param formatOutput\n+\t */\n+\tpublic void setFormatOutput(boolean formatOutput) {\n+\t\tthis.formatOutput = formatOutput;\n+\t}\n+\n+\n+\n+\t//TODO: Support date, dateTime data types\n+\n+\n+\t/**\n+\t * Sets the user name to be used while obtaining the connection.\n+\t *\n+\t */\n+\tpublic void setUserName(String userName) {\n+\t\tthis.userName = userName;\n+\t}\n+\n+\t/**\n+\t * Sets the password to be used for obtaining the connection\n+\t * The value if ignored if the userName is null\n+\t *\n+\t * @param password\n+\t */\n+\tpublic void setPassword(String password) {\n+\t\tthis.password = password;\n+\t}\n+\n+\n+\tpublic static class StringResultMapper extends AbstractXQueryResultMapper<String> {", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": null, "original_position": 489, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "As the class is already 600 lines long, move to the **support package** as that one already contains _AbstractXQueryResultMapper_.\n", "created_at": "2012-08-15T18:26:47Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385329", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385329"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385329"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385332", "pull_request_review_id": null, "id": 1385332, "diff_hunk": "@@ -0,0 +1,605 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.core;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.xquery.XQConnection;\n+import javax.xml.xquery.XQConstants;\n+import javax.xml.xquery.XQDataSource;\n+import javax.xml.xquery.XQException;\n+import javax.xml.xquery.XQItemType;\n+import javax.xml.xquery.XQPreparedExpression;\n+import javax.xml.xquery.XQResultSequence;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.BeanClassLoaderAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.xml.DefaultXmlPayloadConverter;\n+import org.springframework.integration.xml.XmlPayloadConverter;\n+import org.springframework.integration.xquery.support.AbstractXQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryParameter;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryUtils;\n+import org.springframework.util.Assert;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Node;\n+\n+/**\n+ * The common logic for performing the common xquery operations would reside in this\n+ * implementation.\n+ * The class would be instantiated with the xquery to be executed and the parameters\n+ * that would be used. It would return the result of the execution with the\n+ * {@link Message} instance passed to one of its execute methods.\n+ * Currently doesn't support advanced mapping techniques of mapping the resulting Node(s)\n+ * to a custom object type\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryExecutor implements InitializingBean,BeanClassLoaderAware {\n+\n+\n+\tprivate static final String SEDNA_XQ_DATASOURCE_CLASS = \"net.xqj.sedna.SednaXQDataSource\";\n+\n+\tprivate static final String SAXON_XQ_DATASOURCE_CLASS = \"net.sf.saxon.xqj.SaxonXQDataSource\";\n+\n+\tprivate final Log logger = LogFactory.getLog(XQueryExecutor.class);\n+\n+\t/**\n+\t * The payload converter\n+\t */\n+\tprivate XmlPayloadConverter converter = new DefaultXmlPayloadConverter();\n+\n+\t @SuppressWarnings(\"rawtypes\")\n+\tprivate volatile  Map resultMappers;\n+\n+\tprivate volatile boolean formatOutput;\n+\n+\t/**\n+\t * The xQuery that this Executor will execute\n+\t */\n+\tprivate String xQuery;\n+\n+\tprivate XQDataSource xqDataSource;\n+\n+\tprivate Map<String, XQueryParameter> xQueryParameterMap;\n+\n+\t//maintained internally and used for setting the values\n+\tprivate List<String> xQueryParameters;\n+\n+\t//The resource to the XQuery's .xq file\n+\tprivate Resource xQueryFileResource;\n+\n+\tprivate String userName;\n+\n+\tprivate String password;\n+\n+\tprivate ClassLoader classLoader = ClassUtils.getDefaultClassLoader();\n+\n+\t//TODO: Can we have a static xml resource which will be used always to execute the\n+\t//given XQuery as against the one sent in the payload. The default is to use the one in the\n+\t//payload unless one for static xml is provided\n+\n+\n+\tpublic void afterPropertiesSet() {\n+\t\tif(resultMappers == null) {\n+\t\t\tresultMappers = new HashMap<Class<?>,XQueryResultMapper<?>>();\n+\t\t}\n+\t\taddDefaultMappers();\n+\n+\t\tif(xqDataSource == null) {\n+\t\t\txqDataSource = discoverXQDataSource();//default\n+\t\t}\n+\t\tif(xQuery == null) {\n+\t\t\t//perhaps resource specified\n+\t\t\tAssert.notNull(xQueryFileResource, \"One of XQuery or the XQuery resource is mandatory\");\n+\t\t\txQuery = XQueryUtils.readXQueryFromResource(xQueryFileResource);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tXQConnection conn = getConnection();\n+\t\t\tXQPreparedExpression expression = conn.prepareExpression(xQuery);\n+\t\t\tQName[] extParameters = expression.getAllExternalVariables();\n+\t\t\tif(extParameters != null && extParameters.length > 0) {\n+\t\t\t\txQueryParameters = new ArrayList<String>();\n+\t\t\t\tfor(QName qName:extParameters) {\n+\t\t\t\t\txQueryParameters.add(qName.getLocalPart());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\texpression.close();\n+\t\t\tconn.close();\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t}\n+\n+\t\tif(xQueryParameters != null) {\n+\t\t\tif (xQueryParameterMap == null) {\n+\t\t\t\tthrow new MessagingException(\"Expecting \" + xQueryParameters.size() + \" parameters in the xquery, \" +\n+\t\t\t\t\t\t\"but none provided to the router\");\n+\t\t\t}\n+\n+\t\t\t//now check if all the parameter needed are present in the map\n+\t\t\tList<String> missingParameters = new ArrayList<String>();\n+\t\t\tfor(String xQueryParameter:xQueryParameters) {\n+\t\t\t\tif(!xQueryParameterMap.containsKey(xQueryParameter)) {\n+\t\t\t\t\tmissingParameters.add(xQueryParameter);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif(missingParameters.size() > 0) {\n+\t\t\t\tStringBuilder builder = new StringBuilder();\n+\t\t\t\tbuilder.append(\"[\").append(\"$\").append(missingParameters.get(0));\n+\t\t\t\tif(missingParameters.size() > 1) {\n+\t\t\t\t\tfor(int i = 1;i < missingParameters.size();i++) {\n+\t\t\t\t\t\tbuilder.append(\", \").append(\"$\").append(missingParameters.get(i));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbuilder.append(\"]\");\n+\t\t\t\tthrow new MessagingException(\"Missing parameter(s) \" + builder.toString());\n+\t\t\t}\n+\t\t}\n+\n+\n+\t}\n+\n+\n+\n+\tpublic void setBeanClassLoader(ClassLoader classLoader) {\n+\t\tAssert.notNull(classLoader, \"Non null class loader instance expected\");\n+\t\tthis.classLoader = classLoader;\n+\n+\t}\n+\n+\n+\t/**\n+\t * The method that finds an implementation in the classpath for some well known\n+\t * providers. This will kick into action only if an {@link XQDataSource} is not\n+\t * explicitly provided by the user by invoking {@link XQueryExecutor#setXQDataSource(XQDataSource)}\n+\t * The method currently looks for Saxon's implementation only\n+\t *\n+\t * @return the instantiated {@link XQDataSource}\n+\t */\n+\tprivate XQDataSource discoverXQDataSource() {\n+\t\tObject xqDataSource = null;\n+\t\ttry {\n+\t\t\tif(ClassUtils.isPresent(SAXON_XQ_DATASOURCE_CLASS, classLoader)) {\n+\t\t\t\txqDataSource = Class.forName(SAXON_XQ_DATASOURCE_CLASS).newInstance();\n+\t\t\t}\n+\t\t\t//For now its just Saxon we will discover, we can add other implementations here later\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new MessagingException(\"Unable to discover/instantiate an XQDataSource, \" +\n+\t\t\t\t\t\"see nested exception for details\", e);\n+\t\t}\n+\t\tAssert.notNull(xqDataSource, \"No XQDataSource provided nor any known implementation discovered in the classpath\");\n+\t\treturn (XQDataSource)xqDataSource;\n+\t}\n+\n+\t/**\n+\t * Gets the connection, uses userName and password if one is set\n+\t * @return\n+\t * @throws XQException\n+\t */\n+\tprivate XQConnection getConnection() throws XQException {\n+\t\tXQConnection conn;\n+\t\tif(StringUtils.hasText(userName)) {\n+\t\t\tconn = xqDataSource.getConnection(userName,password);\n+\t\t}\n+\t\telse {\n+\t\t\tconn = xqDataSource.getConnection();\n+\t\t}\n+\t\treturn conn;\n+\t}\n+\n+\t/**\n+\t * There are some default mappers defined, those will be added if the user has not provided\n+\t * some implementations for them\n+\t */\n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void addDefaultMappers() {\n+\t\tif(!resultMappers.containsKey(String.class)) {\n+\t\t\tStringResultMapper mapper = new StringResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(String.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Boolean.class)) {\n+\t\t\tBooleanResultMapper mapper = new BooleanResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Boolean.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Number.class)) {\n+\t\t\tNumberResultMapper mapper = new NumberResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Number.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Node.class)) {\n+\t\t\tNodeResultMapper mapper = new NodeResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Node.class, mapper);\n+\t\t}\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link String}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<String> executeForString(Message<?> message) {\n+\t\treturn execute(message,String.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Boolean}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Boolean> executeForBoolean(Message<?> message) {\n+\t\treturn execute(message,Boolean.class);\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Number}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Number> executeForNumber(Message<?> message) {\n+\t\treturn execute(message,Number.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Node}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Node> executeForNode(Message<?> message) {\n+\t\treturn execute(message,Node.class);\n+\t}\n+\n+\t/**\n+\t * Execute the given XQuery and returns a {@link List} of the provided type\n+\t * @param <T>\n+\t * @param message\n+\t * @param returnType\n+\t * @return\n+\t */\n+\t@SuppressWarnings({ \"unchecked\"})\n+\tpublic <T> List<T> execute(Message<?> message,Class<T> returnType) {\n+\t\tAssert.notNull(message,\"Non null message expected\");\n+\t\tAssert.notNull(returnType,\"Non null type expected\");\n+\t\tAssert.isTrue(resultMappers.containsKey(returnType),\"No Result mapper found for the type \" + returnType.getName());\n+\t\treturn execute(message, (XQueryResultMapper<T>)resultMappers.get(returnType));\n+\t}\n+\n+\t/**\n+\t * The method that executes the actual XQuery and uses the provided mapper\n+\t * to get the result that is returned.\n+\t * @param <T>\n+\t * @param message\n+\t * @param mapper\n+\t * @return\n+\t */\n+\tpublic <T> List<T> execute(Message<?> message,XQueryResultMapper<T> mapper) {\n+\t\tNode node = converter.convertToNode(message.getPayload());\n+\n+\t\tif(node == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tXQConnection connection = null;\n+\t\tXQPreparedExpression expression = null;\n+\t\ttry {\n+\t\t\tconnection = getConnection();\n+\t\t\texpression = connection.prepareExpression(xQuery);\n+\t\t\texpression.bindNode(XQConstants.CONTEXT_ITEM, node, null);\n+\n+\t\t\t//bind the parameter values\n+\t\t\tif(xQueryParameters != null && xQueryParameters.size() > 0) {\n+\t\t\t\t//bind them one by one\n+\t\t\t\tfor(String parameter:xQueryParameters) {\n+\t\t\t\t\tXQueryParameter xQueryParam = xQueryParameterMap.get(parameter);\n+\t\t\t\t\t//TODO: Check what possible values can be supported to be set here\n+\t\t\t\t\t//Accordingly do we need to set the third parameter for XQItemType\n+\t\t\t\t\texpression.bindObject(new QName(xQueryParam.getParameterName()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\txQueryParam.evaluate(message), null);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tXQResultSequence result = expression.executeQuery();\n+\t\t\treturn mapper.mapResults(result);\n+\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t} finally {\n+\t\t\ttry {\n+\t\t\t\tif(expression != null) {\n+\t\t\t\t\texpression.close();\n+\t\t\t\t}\n+\t\t\t\tif(connection != null) {\n+\t\t\t\t\tconnection.close();\n+\t\t\t\t}\n+\t\t\t} catch (XQException e) {\n+\t\t\t\tlogger.error(\"Caught Exception while closing the XQ expression.connection\", e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Sets all the result mappers to be used by this executor.\n+\t * @param <T>\n+\t * @param mappers\n+\t */\n+\t@SuppressWarnings(\"rawtypes\")\n+\tpublic <T> void setResultMappers(Map<Class<T>, XQueryResultMapper<T>> mappers) {\n+\t\tAssert.notNull(mappers);\n+\t\tthis.resultMappers = new HashMap<Class<T>, XQueryResultMapper<T>>(mappers);\n+\t\t//not iterate through them and set the format\n+\t\tfor(Object mapper:resultMappers.values()) {\n+\t\t\tif(mapper instanceof AbstractXQueryResultMapper) {\n+\t\t\t\t((AbstractXQueryResultMapper)mapper).setFormatOutput(formatOutput);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t *Set the {@link XmlPayloadConverter} that would be used to convert the payload\n+\t * into the XML {@link Node}\n+\t *\n+\t * @param converter\n+\t */\n+\tpublic void setConverter(XmlPayloadConverter converter) {\n+\t\tAssert.notNull(converter, \"Provide a non null instance of XmlPayloadConverter\");\n+\t\tthis.converter = converter;\n+\t}\n+\n+\t/**\n+\t * The XQuery string that would be evaluated to determine the channel names\n+\t * @param xQuery\n+\t */\n+\tpublic void setXQuery(String xQuery) {\n+\t\tAssert.isTrue(xQueryFileResource == null, \"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tAssert.notNull(xQuery, \"Provide a non null XQuery\");\n+\t\tthis.xQuery = xQuery;\n+\t}\n+\n+\t/**\n+\t * Sets the XQuery's .xq file as the resource. The contents of this file will be read as xQuery\n+\t *\n+\t * @param xQueryFileResource\n+\t */\n+\tpublic void setXQueryFileResource(Resource xQueryFileResource) {\n+\t\tAssert.isTrue(xQuery == null,\"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tthis.xQueryFileResource = xQueryFileResource;\n+\t}\n+\n+\t/**\n+\t * Sets the {@link XQDataSource}\n+\t * @param xqDataSource\n+\t */\n+\tpublic void setXQDataSource(XQDataSource xqDataSource) {\n+\t\tAssert.notNull(xqDataSource, \"Provide a non null instance of the XQDatasource\");\n+\t\tthis.xqDataSource = xqDataSource;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter map where the parameter name is the key and the\n+\t * {@link XQueryParameter} instance is the value\n+\t *\n+\t * @param xQueryParameterMap\n+\t */\n+\tpublic void setXQueryParameterMap(\n+\t\t\tMap<String, XQueryParameter> xQueryParameterMap) {\n+\t\tthis.xQueryParameterMap = xQueryParameterMap;\n+\t}\n+\n+\t/**\n+\t * Convenience method to add a {@link XQueryParameter} to the map\n+\t * @param param\n+\t */\n+\tpublic void addXQueryParameter(XQueryParameter param) {\n+\t\tif(xQueryParameterMap == null) {\n+\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t}\n+\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t}\n+\n+\t/**\n+\t * Convenience method that would be used to set the parameters in the parameter\n+\t * map. Any non conflicting parameters would be retained\n+\t * @param params\n+\t */\n+\tpublic void setXQueryParameters(List<XQueryParameter> params) {\n+\t\tif(params != null && params.size() > 0) {\n+\t\t\tif(xQueryParameterMap == null)\n+\t\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t\tfor(XQueryParameter param:params) {\n+\t\t\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * If the output result is an xml, the value of this parameter will determine\n+\t * if the output xml is to be formatted or not. By default, the output will\n+\t * not be formatted\n+\t *\n+\t * @param formatOutput\n+\t */\n+\tpublic void setFormatOutput(boolean formatOutput) {\n+\t\tthis.formatOutput = formatOutput;\n+\t}\n+\n+\n+\n+\t//TODO: Support date, dateTime data types\n+\n+\n+\t/**\n+\t * Sets the user name to be used while obtaining the connection.\n+\t *\n+\t */\n+\tpublic void setUserName(String userName) {\n+\t\tthis.userName = userName;\n+\t}\n+\n+\t/**\n+\t * Sets the password to be used for obtaining the connection\n+\t * The value if ignored if the userName is null\n+\t *\n+\t * @param password\n+\t */\n+\tpublic void setPassword(String password) {\n+\t\tthis.password = password;\n+\t}\n+\n+\n+\tpublic static class StringResultMapper extends AbstractXQueryResultMapper<String> {\n+\n+\t\tpublic List<String> mapResults(XQResultSequence result) {\n+\t\t\tList<String> results = new ArrayList<String>();\n+\t\t\ttry {\n+\t\t\t\twhile(result.next()) {\n+\t\t\t\t\tXQItemType type = result.getItemType();\n+\t\t\t\t\tString value = convertToString(type, result);\n+\t\t\t\t\tif(value == null) {\n+\t\t\t\t\t\tNumber number = convertToNumber(type, result);\n+\t\t\t\t\t\tif(number == null) {\n+\t\t\t\t\t\t\tBoolean boolValue = convertToBoolean(type, result);\n+\t\t\t\t\t\t\tif(boolValue == null) {\n+\t\t\t\t\t\t\t\tif(isNodeType(type)) {\n+\t\t\t\t\t\t\t\t\tNode n = result.getNode();\n+\t\t\t\t\t\t\t\t\tvalue = transformNodeToString(n);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\t\tvalue = boolValue.toString();\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\tvalue = number.toString();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tresults.add(value);\n+\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tthrow new MessagingException(\"Caught Exception while mapping the result sequence to string\",e);\n+\t\t\t}\n+\t\t\treturn results;\n+\t\t}\n+\t}\n+\n+\n+\tpublic static class BooleanResultMapper extends AbstractXQueryResultMapper<Boolean> {", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": null, "original_position": 526, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "As the class is already 600 lines long, move to the **support package** as that one already contains _AbstractXQueryResultMapper_.\n", "created_at": "2012-08-15T18:26:58Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385332", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385332"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385332"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385333", "pull_request_review_id": null, "id": 1385333, "diff_hunk": "@@ -0,0 +1,605 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.core;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.xquery.XQConnection;\n+import javax.xml.xquery.XQConstants;\n+import javax.xml.xquery.XQDataSource;\n+import javax.xml.xquery.XQException;\n+import javax.xml.xquery.XQItemType;\n+import javax.xml.xquery.XQPreparedExpression;\n+import javax.xml.xquery.XQResultSequence;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.BeanClassLoaderAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.xml.DefaultXmlPayloadConverter;\n+import org.springframework.integration.xml.XmlPayloadConverter;\n+import org.springframework.integration.xquery.support.AbstractXQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryParameter;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryUtils;\n+import org.springframework.util.Assert;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Node;\n+\n+/**\n+ * The common logic for performing the common xquery operations would reside in this\n+ * implementation.\n+ * The class would be instantiated with the xquery to be executed and the parameters\n+ * that would be used. It would return the result of the execution with the\n+ * {@link Message} instance passed to one of its execute methods.\n+ * Currently doesn't support advanced mapping techniques of mapping the resulting Node(s)\n+ * to a custom object type\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryExecutor implements InitializingBean,BeanClassLoaderAware {\n+\n+\n+\tprivate static final String SEDNA_XQ_DATASOURCE_CLASS = \"net.xqj.sedna.SednaXQDataSource\";\n+\n+\tprivate static final String SAXON_XQ_DATASOURCE_CLASS = \"net.sf.saxon.xqj.SaxonXQDataSource\";\n+\n+\tprivate final Log logger = LogFactory.getLog(XQueryExecutor.class);\n+\n+\t/**\n+\t * The payload converter\n+\t */\n+\tprivate XmlPayloadConverter converter = new DefaultXmlPayloadConverter();\n+\n+\t @SuppressWarnings(\"rawtypes\")\n+\tprivate volatile  Map resultMappers;\n+\n+\tprivate volatile boolean formatOutput;\n+\n+\t/**\n+\t * The xQuery that this Executor will execute\n+\t */\n+\tprivate String xQuery;\n+\n+\tprivate XQDataSource xqDataSource;\n+\n+\tprivate Map<String, XQueryParameter> xQueryParameterMap;\n+\n+\t//maintained internally and used for setting the values\n+\tprivate List<String> xQueryParameters;\n+\n+\t//The resource to the XQuery's .xq file\n+\tprivate Resource xQueryFileResource;\n+\n+\tprivate String userName;\n+\n+\tprivate String password;\n+\n+\tprivate ClassLoader classLoader = ClassUtils.getDefaultClassLoader();\n+\n+\t//TODO: Can we have a static xml resource which will be used always to execute the\n+\t//given XQuery as against the one sent in the payload. The default is to use the one in the\n+\t//payload unless one for static xml is provided\n+\n+\n+\tpublic void afterPropertiesSet() {\n+\t\tif(resultMappers == null) {\n+\t\t\tresultMappers = new HashMap<Class<?>,XQueryResultMapper<?>>();\n+\t\t}\n+\t\taddDefaultMappers();\n+\n+\t\tif(xqDataSource == null) {\n+\t\t\txqDataSource = discoverXQDataSource();//default\n+\t\t}\n+\t\tif(xQuery == null) {\n+\t\t\t//perhaps resource specified\n+\t\t\tAssert.notNull(xQueryFileResource, \"One of XQuery or the XQuery resource is mandatory\");\n+\t\t\txQuery = XQueryUtils.readXQueryFromResource(xQueryFileResource);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tXQConnection conn = getConnection();\n+\t\t\tXQPreparedExpression expression = conn.prepareExpression(xQuery);\n+\t\t\tQName[] extParameters = expression.getAllExternalVariables();\n+\t\t\tif(extParameters != null && extParameters.length > 0) {\n+\t\t\t\txQueryParameters = new ArrayList<String>();\n+\t\t\t\tfor(QName qName:extParameters) {\n+\t\t\t\t\txQueryParameters.add(qName.getLocalPart());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\texpression.close();\n+\t\t\tconn.close();\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t}\n+\n+\t\tif(xQueryParameters != null) {\n+\t\t\tif (xQueryParameterMap == null) {\n+\t\t\t\tthrow new MessagingException(\"Expecting \" + xQueryParameters.size() + \" parameters in the xquery, \" +\n+\t\t\t\t\t\t\"but none provided to the router\");\n+\t\t\t}\n+\n+\t\t\t//now check if all the parameter needed are present in the map\n+\t\t\tList<String> missingParameters = new ArrayList<String>();\n+\t\t\tfor(String xQueryParameter:xQueryParameters) {\n+\t\t\t\tif(!xQueryParameterMap.containsKey(xQueryParameter)) {\n+\t\t\t\t\tmissingParameters.add(xQueryParameter);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif(missingParameters.size() > 0) {\n+\t\t\t\tStringBuilder builder = new StringBuilder();\n+\t\t\t\tbuilder.append(\"[\").append(\"$\").append(missingParameters.get(0));\n+\t\t\t\tif(missingParameters.size() > 1) {\n+\t\t\t\t\tfor(int i = 1;i < missingParameters.size();i++) {\n+\t\t\t\t\t\tbuilder.append(\", \").append(\"$\").append(missingParameters.get(i));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbuilder.append(\"]\");\n+\t\t\t\tthrow new MessagingException(\"Missing parameter(s) \" + builder.toString());\n+\t\t\t}\n+\t\t}\n+\n+\n+\t}\n+\n+\n+\n+\tpublic void setBeanClassLoader(ClassLoader classLoader) {\n+\t\tAssert.notNull(classLoader, \"Non null class loader instance expected\");\n+\t\tthis.classLoader = classLoader;\n+\n+\t}\n+\n+\n+\t/**\n+\t * The method that finds an implementation in the classpath for some well known\n+\t * providers. This will kick into action only if an {@link XQDataSource} is not\n+\t * explicitly provided by the user by invoking {@link XQueryExecutor#setXQDataSource(XQDataSource)}\n+\t * The method currently looks for Saxon's implementation only\n+\t *\n+\t * @return the instantiated {@link XQDataSource}\n+\t */\n+\tprivate XQDataSource discoverXQDataSource() {\n+\t\tObject xqDataSource = null;\n+\t\ttry {\n+\t\t\tif(ClassUtils.isPresent(SAXON_XQ_DATASOURCE_CLASS, classLoader)) {\n+\t\t\t\txqDataSource = Class.forName(SAXON_XQ_DATASOURCE_CLASS).newInstance();\n+\t\t\t}\n+\t\t\t//For now its just Saxon we will discover, we can add other implementations here later\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new MessagingException(\"Unable to discover/instantiate an XQDataSource, \" +\n+\t\t\t\t\t\"see nested exception for details\", e);\n+\t\t}\n+\t\tAssert.notNull(xqDataSource, \"No XQDataSource provided nor any known implementation discovered in the classpath\");\n+\t\treturn (XQDataSource)xqDataSource;\n+\t}\n+\n+\t/**\n+\t * Gets the connection, uses userName and password if one is set\n+\t * @return\n+\t * @throws XQException\n+\t */\n+\tprivate XQConnection getConnection() throws XQException {\n+\t\tXQConnection conn;\n+\t\tif(StringUtils.hasText(userName)) {\n+\t\t\tconn = xqDataSource.getConnection(userName,password);\n+\t\t}\n+\t\telse {\n+\t\t\tconn = xqDataSource.getConnection();\n+\t\t}\n+\t\treturn conn;\n+\t}\n+\n+\t/**\n+\t * There are some default mappers defined, those will be added if the user has not provided\n+\t * some implementations for them\n+\t */\n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void addDefaultMappers() {\n+\t\tif(!resultMappers.containsKey(String.class)) {\n+\t\t\tStringResultMapper mapper = new StringResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(String.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Boolean.class)) {\n+\t\t\tBooleanResultMapper mapper = new BooleanResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Boolean.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Number.class)) {\n+\t\t\tNumberResultMapper mapper = new NumberResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Number.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Node.class)) {\n+\t\t\tNodeResultMapper mapper = new NodeResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Node.class, mapper);\n+\t\t}\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link String}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<String> executeForString(Message<?> message) {\n+\t\treturn execute(message,String.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Boolean}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Boolean> executeForBoolean(Message<?> message) {\n+\t\treturn execute(message,Boolean.class);\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Number}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Number> executeForNumber(Message<?> message) {\n+\t\treturn execute(message,Number.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Node}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Node> executeForNode(Message<?> message) {\n+\t\treturn execute(message,Node.class);\n+\t}\n+\n+\t/**\n+\t * Execute the given XQuery and returns a {@link List} of the provided type\n+\t * @param <T>\n+\t * @param message\n+\t * @param returnType\n+\t * @return\n+\t */\n+\t@SuppressWarnings({ \"unchecked\"})\n+\tpublic <T> List<T> execute(Message<?> message,Class<T> returnType) {\n+\t\tAssert.notNull(message,\"Non null message expected\");\n+\t\tAssert.notNull(returnType,\"Non null type expected\");\n+\t\tAssert.isTrue(resultMappers.containsKey(returnType),\"No Result mapper found for the type \" + returnType.getName());\n+\t\treturn execute(message, (XQueryResultMapper<T>)resultMappers.get(returnType));\n+\t}\n+\n+\t/**\n+\t * The method that executes the actual XQuery and uses the provided mapper\n+\t * to get the result that is returned.\n+\t * @param <T>\n+\t * @param message\n+\t * @param mapper\n+\t * @return\n+\t */\n+\tpublic <T> List<T> execute(Message<?> message,XQueryResultMapper<T> mapper) {\n+\t\tNode node = converter.convertToNode(message.getPayload());\n+\n+\t\tif(node == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tXQConnection connection = null;\n+\t\tXQPreparedExpression expression = null;\n+\t\ttry {\n+\t\t\tconnection = getConnection();\n+\t\t\texpression = connection.prepareExpression(xQuery);\n+\t\t\texpression.bindNode(XQConstants.CONTEXT_ITEM, node, null);\n+\n+\t\t\t//bind the parameter values\n+\t\t\tif(xQueryParameters != null && xQueryParameters.size() > 0) {\n+\t\t\t\t//bind them one by one\n+\t\t\t\tfor(String parameter:xQueryParameters) {\n+\t\t\t\t\tXQueryParameter xQueryParam = xQueryParameterMap.get(parameter);\n+\t\t\t\t\t//TODO: Check what possible values can be supported to be set here\n+\t\t\t\t\t//Accordingly do we need to set the third parameter for XQItemType\n+\t\t\t\t\texpression.bindObject(new QName(xQueryParam.getParameterName()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\txQueryParam.evaluate(message), null);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tXQResultSequence result = expression.executeQuery();\n+\t\t\treturn mapper.mapResults(result);\n+\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t} finally {\n+\t\t\ttry {\n+\t\t\t\tif(expression != null) {\n+\t\t\t\t\texpression.close();\n+\t\t\t\t}\n+\t\t\t\tif(connection != null) {\n+\t\t\t\t\tconnection.close();\n+\t\t\t\t}\n+\t\t\t} catch (XQException e) {\n+\t\t\t\tlogger.error(\"Caught Exception while closing the XQ expression.connection\", e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Sets all the result mappers to be used by this executor.\n+\t * @param <T>\n+\t * @param mappers\n+\t */\n+\t@SuppressWarnings(\"rawtypes\")\n+\tpublic <T> void setResultMappers(Map<Class<T>, XQueryResultMapper<T>> mappers) {\n+\t\tAssert.notNull(mappers);\n+\t\tthis.resultMappers = new HashMap<Class<T>, XQueryResultMapper<T>>(mappers);\n+\t\t//not iterate through them and set the format\n+\t\tfor(Object mapper:resultMappers.values()) {\n+\t\t\tif(mapper instanceof AbstractXQueryResultMapper) {\n+\t\t\t\t((AbstractXQueryResultMapper)mapper).setFormatOutput(formatOutput);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t *Set the {@link XmlPayloadConverter} that would be used to convert the payload\n+\t * into the XML {@link Node}\n+\t *\n+\t * @param converter\n+\t */\n+\tpublic void setConverter(XmlPayloadConverter converter) {\n+\t\tAssert.notNull(converter, \"Provide a non null instance of XmlPayloadConverter\");\n+\t\tthis.converter = converter;\n+\t}\n+\n+\t/**\n+\t * The XQuery string that would be evaluated to determine the channel names\n+\t * @param xQuery\n+\t */\n+\tpublic void setXQuery(String xQuery) {\n+\t\tAssert.isTrue(xQueryFileResource == null, \"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tAssert.notNull(xQuery, \"Provide a non null XQuery\");\n+\t\tthis.xQuery = xQuery;\n+\t}\n+\n+\t/**\n+\t * Sets the XQuery's .xq file as the resource. The contents of this file will be read as xQuery\n+\t *\n+\t * @param xQueryFileResource\n+\t */\n+\tpublic void setXQueryFileResource(Resource xQueryFileResource) {\n+\t\tAssert.isTrue(xQuery == null,\"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tthis.xQueryFileResource = xQueryFileResource;\n+\t}\n+\n+\t/**\n+\t * Sets the {@link XQDataSource}\n+\t * @param xqDataSource\n+\t */\n+\tpublic void setXQDataSource(XQDataSource xqDataSource) {\n+\t\tAssert.notNull(xqDataSource, \"Provide a non null instance of the XQDatasource\");\n+\t\tthis.xqDataSource = xqDataSource;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter map where the parameter name is the key and the\n+\t * {@link XQueryParameter} instance is the value\n+\t *\n+\t * @param xQueryParameterMap\n+\t */\n+\tpublic void setXQueryParameterMap(\n+\t\t\tMap<String, XQueryParameter> xQueryParameterMap) {\n+\t\tthis.xQueryParameterMap = xQueryParameterMap;\n+\t}\n+\n+\t/**\n+\t * Convenience method to add a {@link XQueryParameter} to the map\n+\t * @param param\n+\t */\n+\tpublic void addXQueryParameter(XQueryParameter param) {\n+\t\tif(xQueryParameterMap == null) {\n+\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t}\n+\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t}\n+\n+\t/**\n+\t * Convenience method that would be used to set the parameters in the parameter\n+\t * map. Any non conflicting parameters would be retained\n+\t * @param params\n+\t */\n+\tpublic void setXQueryParameters(List<XQueryParameter> params) {\n+\t\tif(params != null && params.size() > 0) {\n+\t\t\tif(xQueryParameterMap == null)\n+\t\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t\tfor(XQueryParameter param:params) {\n+\t\t\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * If the output result is an xml, the value of this parameter will determine\n+\t * if the output xml is to be formatted or not. By default, the output will\n+\t * not be formatted\n+\t *\n+\t * @param formatOutput\n+\t */\n+\tpublic void setFormatOutput(boolean formatOutput) {\n+\t\tthis.formatOutput = formatOutput;\n+\t}\n+\n+\n+\n+\t//TODO: Support date, dateTime data types\n+\n+\n+\t/**\n+\t * Sets the user name to be used while obtaining the connection.\n+\t *\n+\t */\n+\tpublic void setUserName(String userName) {\n+\t\tthis.userName = userName;\n+\t}\n+\n+\t/**\n+\t * Sets the password to be used for obtaining the connection\n+\t * The value if ignored if the userName is null\n+\t *\n+\t * @param password\n+\t */\n+\tpublic void setPassword(String password) {\n+\t\tthis.password = password;\n+\t}\n+\n+\n+\tpublic static class StringResultMapper extends AbstractXQueryResultMapper<String> {\n+\n+\t\tpublic List<String> mapResults(XQResultSequence result) {\n+\t\t\tList<String> results = new ArrayList<String>();\n+\t\t\ttry {\n+\t\t\t\twhile(result.next()) {\n+\t\t\t\t\tXQItemType type = result.getItemType();\n+\t\t\t\t\tString value = convertToString(type, result);\n+\t\t\t\t\tif(value == null) {\n+\t\t\t\t\t\tNumber number = convertToNumber(type, result);\n+\t\t\t\t\t\tif(number == null) {\n+\t\t\t\t\t\t\tBoolean boolValue = convertToBoolean(type, result);\n+\t\t\t\t\t\t\tif(boolValue == null) {\n+\t\t\t\t\t\t\t\tif(isNodeType(type)) {\n+\t\t\t\t\t\t\t\t\tNode n = result.getNode();\n+\t\t\t\t\t\t\t\t\tvalue = transformNodeToString(n);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\t\tvalue = boolValue.toString();\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\tvalue = number.toString();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tresults.add(value);\n+\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tthrow new MessagingException(\"Caught Exception while mapping the result sequence to string\",e);\n+\t\t\t}\n+\t\t\treturn results;\n+\t\t}\n+\t}\n+\n+\n+\tpublic static class BooleanResultMapper extends AbstractXQueryResultMapper<Boolean> {\n+\n+\t\tpublic List<Boolean> mapResults(XQResultSequence result) {\n+\t\t\tList<Boolean> results = new ArrayList<Boolean>();\n+\t\t\ttry {\n+\t\t\t\t//check for boolean or string type and convert it accordingly, if a node then get it's text\n+\t\t\t\t//content and convert to boolean\n+\t\t\t\twhile(result.next()) {\n+\t\t\t\t\tXQItemType type = result.getItemType();\n+\t\t\t\t\tBoolean value = convertToBoolean(type, result);\n+\t\t\t\t\tif(value == null) {\n+\t\t\t\t\t\tif(isNodeType(type)) {\n+\t\t\t\t\t\t\tNode n = result.getNode();\n+\t\t\t\t\t\t\tvalue = Boolean.valueOf(transformNodeToString(n));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tresults.add(value);\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tthrow new MessagingException(\"Caught Exception while mapping the result sequence to string\",e);\n+\t\t\t}\n+\t\t\treturn results;\n+\t\t}\n+\n+\t}\n+\n+\n+\tpublic static class NumberResultMapper extends AbstractXQueryResultMapper<Number> {", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": null, "original_position": 553, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "As the class is already 600 lines long, move to the **support package** as that one already contains _AbstractXQueryResultMapper_.\n", "created_at": "2012-08-15T18:27:08Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385333", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385333"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385333"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385339", "pull_request_review_id": null, "id": 1385339, "diff_hunk": "@@ -0,0 +1,605 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.core;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.namespace.QName;\n+import javax.xml.xquery.XQConnection;\n+import javax.xml.xquery.XQConstants;\n+import javax.xml.xquery.XQDataSource;\n+import javax.xml.xquery.XQException;\n+import javax.xml.xquery.XQItemType;\n+import javax.xml.xquery.XQPreparedExpression;\n+import javax.xml.xquery.XQResultSequence;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.BeanClassLoaderAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.xml.DefaultXmlPayloadConverter;\n+import org.springframework.integration.xml.XmlPayloadConverter;\n+import org.springframework.integration.xquery.support.AbstractXQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryParameter;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.integration.xquery.support.XQueryUtils;\n+import org.springframework.util.Assert;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Node;\n+\n+/**\n+ * The common logic for performing the common xquery operations would reside in this\n+ * implementation.\n+ * The class would be instantiated with the xquery to be executed and the parameters\n+ * that would be used. It would return the result of the execution with the\n+ * {@link Message} instance passed to one of its execute methods.\n+ * Currently doesn't support advanced mapping techniques of mapping the resulting Node(s)\n+ * to a custom object type\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryExecutor implements InitializingBean,BeanClassLoaderAware {\n+\n+\n+\tprivate static final String SEDNA_XQ_DATASOURCE_CLASS = \"net.xqj.sedna.SednaXQDataSource\";\n+\n+\tprivate static final String SAXON_XQ_DATASOURCE_CLASS = \"net.sf.saxon.xqj.SaxonXQDataSource\";\n+\n+\tprivate final Log logger = LogFactory.getLog(XQueryExecutor.class);\n+\n+\t/**\n+\t * The payload converter\n+\t */\n+\tprivate XmlPayloadConverter converter = new DefaultXmlPayloadConverter();\n+\n+\t @SuppressWarnings(\"rawtypes\")\n+\tprivate volatile  Map resultMappers;\n+\n+\tprivate volatile boolean formatOutput;\n+\n+\t/**\n+\t * The xQuery that this Executor will execute\n+\t */\n+\tprivate String xQuery;\n+\n+\tprivate XQDataSource xqDataSource;\n+\n+\tprivate Map<String, XQueryParameter> xQueryParameterMap;\n+\n+\t//maintained internally and used for setting the values\n+\tprivate List<String> xQueryParameters;\n+\n+\t//The resource to the XQuery's .xq file\n+\tprivate Resource xQueryFileResource;\n+\n+\tprivate String userName;\n+\n+\tprivate String password;\n+\n+\tprivate ClassLoader classLoader = ClassUtils.getDefaultClassLoader();\n+\n+\t//TODO: Can we have a static xml resource which will be used always to execute the\n+\t//given XQuery as against the one sent in the payload. The default is to use the one in the\n+\t//payload unless one for static xml is provided\n+\n+\n+\tpublic void afterPropertiesSet() {\n+\t\tif(resultMappers == null) {\n+\t\t\tresultMappers = new HashMap<Class<?>,XQueryResultMapper<?>>();\n+\t\t}\n+\t\taddDefaultMappers();\n+\n+\t\tif(xqDataSource == null) {\n+\t\t\txqDataSource = discoverXQDataSource();//default\n+\t\t}\n+\t\tif(xQuery == null) {\n+\t\t\t//perhaps resource specified\n+\t\t\tAssert.notNull(xQueryFileResource, \"One of XQuery or the XQuery resource is mandatory\");\n+\t\t\txQuery = XQueryUtils.readXQueryFromResource(xQueryFileResource);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tXQConnection conn = getConnection();\n+\t\t\tXQPreparedExpression expression = conn.prepareExpression(xQuery);\n+\t\t\tQName[] extParameters = expression.getAllExternalVariables();\n+\t\t\tif(extParameters != null && extParameters.length > 0) {\n+\t\t\t\txQueryParameters = new ArrayList<String>();\n+\t\t\t\tfor(QName qName:extParameters) {\n+\t\t\t\t\txQueryParameters.add(qName.getLocalPart());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\texpression.close();\n+\t\t\tconn.close();\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t}\n+\n+\t\tif(xQueryParameters != null) {\n+\t\t\tif (xQueryParameterMap == null) {\n+\t\t\t\tthrow new MessagingException(\"Expecting \" + xQueryParameters.size() + \" parameters in the xquery, \" +\n+\t\t\t\t\t\t\"but none provided to the router\");\n+\t\t\t}\n+\n+\t\t\t//now check if all the parameter needed are present in the map\n+\t\t\tList<String> missingParameters = new ArrayList<String>();\n+\t\t\tfor(String xQueryParameter:xQueryParameters) {\n+\t\t\t\tif(!xQueryParameterMap.containsKey(xQueryParameter)) {\n+\t\t\t\t\tmissingParameters.add(xQueryParameter);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif(missingParameters.size() > 0) {\n+\t\t\t\tStringBuilder builder = new StringBuilder();\n+\t\t\t\tbuilder.append(\"[\").append(\"$\").append(missingParameters.get(0));\n+\t\t\t\tif(missingParameters.size() > 1) {\n+\t\t\t\t\tfor(int i = 1;i < missingParameters.size();i++) {\n+\t\t\t\t\t\tbuilder.append(\", \").append(\"$\").append(missingParameters.get(i));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbuilder.append(\"]\");\n+\t\t\t\tthrow new MessagingException(\"Missing parameter(s) \" + builder.toString());\n+\t\t\t}\n+\t\t}\n+\n+\n+\t}\n+\n+\n+\n+\tpublic void setBeanClassLoader(ClassLoader classLoader) {\n+\t\tAssert.notNull(classLoader, \"Non null class loader instance expected\");\n+\t\tthis.classLoader = classLoader;\n+\n+\t}\n+\n+\n+\t/**\n+\t * The method that finds an implementation in the classpath for some well known\n+\t * providers. This will kick into action only if an {@link XQDataSource} is not\n+\t * explicitly provided by the user by invoking {@link XQueryExecutor#setXQDataSource(XQDataSource)}\n+\t * The method currently looks for Saxon's implementation only\n+\t *\n+\t * @return the instantiated {@link XQDataSource}\n+\t */\n+\tprivate XQDataSource discoverXQDataSource() {\n+\t\tObject xqDataSource = null;\n+\t\ttry {\n+\t\t\tif(ClassUtils.isPresent(SAXON_XQ_DATASOURCE_CLASS, classLoader)) {\n+\t\t\t\txqDataSource = Class.forName(SAXON_XQ_DATASOURCE_CLASS).newInstance();\n+\t\t\t}\n+\t\t\t//For now its just Saxon we will discover, we can add other implementations here later\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new MessagingException(\"Unable to discover/instantiate an XQDataSource, \" +\n+\t\t\t\t\t\"see nested exception for details\", e);\n+\t\t}\n+\t\tAssert.notNull(xqDataSource, \"No XQDataSource provided nor any known implementation discovered in the classpath\");\n+\t\treturn (XQDataSource)xqDataSource;\n+\t}\n+\n+\t/**\n+\t * Gets the connection, uses userName and password if one is set\n+\t * @return\n+\t * @throws XQException\n+\t */\n+\tprivate XQConnection getConnection() throws XQException {\n+\t\tXQConnection conn;\n+\t\tif(StringUtils.hasText(userName)) {\n+\t\t\tconn = xqDataSource.getConnection(userName,password);\n+\t\t}\n+\t\telse {\n+\t\t\tconn = xqDataSource.getConnection();\n+\t\t}\n+\t\treturn conn;\n+\t}\n+\n+\t/**\n+\t * There are some default mappers defined, those will be added if the user has not provided\n+\t * some implementations for them\n+\t */\n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void addDefaultMappers() {\n+\t\tif(!resultMappers.containsKey(String.class)) {\n+\t\t\tStringResultMapper mapper = new StringResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(String.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Boolean.class)) {\n+\t\t\tBooleanResultMapper mapper = new BooleanResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Boolean.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Number.class)) {\n+\t\t\tNumberResultMapper mapper = new NumberResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Number.class, mapper);\n+\t\t}\n+\n+\t\tif(!resultMappers.containsKey(Node.class)) {\n+\t\t\tNodeResultMapper mapper = new NodeResultMapper();\n+\t\t\tmapper.setFormatOutput(formatOutput);\n+\t\t\tresultMappers.put(Node.class, mapper);\n+\t\t}\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link String}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<String> executeForString(Message<?> message) {\n+\t\treturn execute(message,String.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Boolean}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Boolean> executeForBoolean(Message<?> message) {\n+\t\treturn execute(message,Boolean.class);\n+\t}\n+\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Number}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Number> executeForNumber(Message<?> message) {\n+\t\treturn execute(message,Number.class);\n+\t}\n+\n+\t/**\n+\t * Executes the XQuery for result and produce the result as a {@link List} of {@link Node}\n+\t * @param message the source message that would be used to derive the values of the parameters\n+\t *\n+\t * @return The {@link List} of results\n+\t */\n+\tpublic List<Node> executeForNode(Message<?> message) {\n+\t\treturn execute(message,Node.class);\n+\t}\n+\n+\t/**\n+\t * Execute the given XQuery and returns a {@link List} of the provided type\n+\t * @param <T>\n+\t * @param message\n+\t * @param returnType\n+\t * @return\n+\t */\n+\t@SuppressWarnings({ \"unchecked\"})\n+\tpublic <T> List<T> execute(Message<?> message,Class<T> returnType) {\n+\t\tAssert.notNull(message,\"Non null message expected\");\n+\t\tAssert.notNull(returnType,\"Non null type expected\");\n+\t\tAssert.isTrue(resultMappers.containsKey(returnType),\"No Result mapper found for the type \" + returnType.getName());\n+\t\treturn execute(message, (XQueryResultMapper<T>)resultMappers.get(returnType));\n+\t}\n+\n+\t/**\n+\t * The method that executes the actual XQuery and uses the provided mapper\n+\t * to get the result that is returned.\n+\t * @param <T>\n+\t * @param message\n+\t * @param mapper\n+\t * @return\n+\t */\n+\tpublic <T> List<T> execute(Message<?> message,XQueryResultMapper<T> mapper) {\n+\t\tNode node = converter.convertToNode(message.getPayload());\n+\n+\t\tif(node == null) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tXQConnection connection = null;\n+\t\tXQPreparedExpression expression = null;\n+\t\ttry {\n+\t\t\tconnection = getConnection();\n+\t\t\texpression = connection.prepareExpression(xQuery);\n+\t\t\texpression.bindNode(XQConstants.CONTEXT_ITEM, node, null);\n+\n+\t\t\t//bind the parameter values\n+\t\t\tif(xQueryParameters != null && xQueryParameters.size() > 0) {\n+\t\t\t\t//bind them one by one\n+\t\t\t\tfor(String parameter:xQueryParameters) {\n+\t\t\t\t\tXQueryParameter xQueryParam = xQueryParameterMap.get(parameter);\n+\t\t\t\t\t//TODO: Check what possible values can be supported to be set here\n+\t\t\t\t\t//Accordingly do we need to set the third parameter for XQItemType\n+\t\t\t\t\texpression.bindObject(new QName(xQueryParam.getParameterName()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\txQueryParam.evaluate(message), null);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tXQResultSequence result = expression.executeQuery();\n+\t\t\treturn mapper.mapResults(result);\n+\n+\t\t} catch (XQException e) {\n+\t\t\tthrow new MessagingException(\"Caught Exception while opening a connection to the datasource\", e);\n+\t\t} finally {\n+\t\t\ttry {\n+\t\t\t\tif(expression != null) {\n+\t\t\t\t\texpression.close();\n+\t\t\t\t}\n+\t\t\t\tif(connection != null) {\n+\t\t\t\t\tconnection.close();\n+\t\t\t\t}\n+\t\t\t} catch (XQException e) {\n+\t\t\t\tlogger.error(\"Caught Exception while closing the XQ expression.connection\", e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Sets all the result mappers to be used by this executor.\n+\t * @param <T>\n+\t * @param mappers\n+\t */\n+\t@SuppressWarnings(\"rawtypes\")\n+\tpublic <T> void setResultMappers(Map<Class<T>, XQueryResultMapper<T>> mappers) {\n+\t\tAssert.notNull(mappers);\n+\t\tthis.resultMappers = new HashMap<Class<T>, XQueryResultMapper<T>>(mappers);\n+\t\t//not iterate through them and set the format\n+\t\tfor(Object mapper:resultMappers.values()) {\n+\t\t\tif(mapper instanceof AbstractXQueryResultMapper) {\n+\t\t\t\t((AbstractXQueryResultMapper)mapper).setFormatOutput(formatOutput);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t *Set the {@link XmlPayloadConverter} that would be used to convert the payload\n+\t * into the XML {@link Node}\n+\t *\n+\t * @param converter\n+\t */\n+\tpublic void setConverter(XmlPayloadConverter converter) {\n+\t\tAssert.notNull(converter, \"Provide a non null instance of XmlPayloadConverter\");\n+\t\tthis.converter = converter;\n+\t}\n+\n+\t/**\n+\t * The XQuery string that would be evaluated to determine the channel names\n+\t * @param xQuery\n+\t */\n+\tpublic void setXQuery(String xQuery) {\n+\t\tAssert.isTrue(xQueryFileResource == null, \"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tAssert.notNull(xQuery, \"Provide a non null XQuery\");\n+\t\tthis.xQuery = xQuery;\n+\t}\n+\n+\t/**\n+\t * Sets the XQuery's .xq file as the resource. The contents of this file will be read as xQuery\n+\t *\n+\t * @param xQueryFileResource\n+\t */\n+\tpublic void setXQueryFileResource(Resource xQueryFileResource) {\n+\t\tAssert.isTrue(xQuery == null,\"Only one of XQuery resource file or XQuery may be specified\");\n+\t\tthis.xQueryFileResource = xQueryFileResource;\n+\t}\n+\n+\t/**\n+\t * Sets the {@link XQDataSource}\n+\t * @param xqDataSource\n+\t */\n+\tpublic void setXQDataSource(XQDataSource xqDataSource) {\n+\t\tAssert.notNull(xqDataSource, \"Provide a non null instance of the XQDatasource\");\n+\t\tthis.xqDataSource = xqDataSource;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter map where the parameter name is the key and the\n+\t * {@link XQueryParameter} instance is the value\n+\t *\n+\t * @param xQueryParameterMap\n+\t */\n+\tpublic void setXQueryParameterMap(\n+\t\t\tMap<String, XQueryParameter> xQueryParameterMap) {\n+\t\tthis.xQueryParameterMap = xQueryParameterMap;\n+\t}\n+\n+\t/**\n+\t * Convenience method to add a {@link XQueryParameter} to the map\n+\t * @param param\n+\t */\n+\tpublic void addXQueryParameter(XQueryParameter param) {\n+\t\tif(xQueryParameterMap == null) {\n+\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t}\n+\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t}\n+\n+\t/**\n+\t * Convenience method that would be used to set the parameters in the parameter\n+\t * map. Any non conflicting parameters would be retained\n+\t * @param params\n+\t */\n+\tpublic void setXQueryParameters(List<XQueryParameter> params) {\n+\t\tif(params != null && params.size() > 0) {\n+\t\t\tif(xQueryParameterMap == null)\n+\t\t\t\txQueryParameterMap = new HashMap<String, XQueryParameter>();\n+\t\t\tfor(XQueryParameter param:params) {\n+\t\t\t\txQueryParameterMap.put(param.getParameterName(), param);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * If the output result is an xml, the value of this parameter will determine\n+\t * if the output xml is to be formatted or not. By default, the output will\n+\t * not be formatted\n+\t *\n+\t * @param formatOutput\n+\t */\n+\tpublic void setFormatOutput(boolean formatOutput) {\n+\t\tthis.formatOutput = formatOutput;\n+\t}\n+\n+\n+\n+\t//TODO: Support date, dateTime data types\n+\n+\n+\t/**\n+\t * Sets the user name to be used while obtaining the connection.\n+\t *\n+\t */\n+\tpublic void setUserName(String userName) {\n+\t\tthis.userName = userName;\n+\t}\n+\n+\t/**\n+\t * Sets the password to be used for obtaining the connection\n+\t * The value if ignored if the userName is null\n+\t *\n+\t * @param password\n+\t */\n+\tpublic void setPassword(String password) {\n+\t\tthis.password = password;\n+\t}\n+\n+\n+\tpublic static class StringResultMapper extends AbstractXQueryResultMapper<String> {\n+\n+\t\tpublic List<String> mapResults(XQResultSequence result) {\n+\t\t\tList<String> results = new ArrayList<String>();\n+\t\t\ttry {\n+\t\t\t\twhile(result.next()) {\n+\t\t\t\t\tXQItemType type = result.getItemType();\n+\t\t\t\t\tString value = convertToString(type, result);\n+\t\t\t\t\tif(value == null) {\n+\t\t\t\t\t\tNumber number = convertToNumber(type, result);\n+\t\t\t\t\t\tif(number == null) {\n+\t\t\t\t\t\t\tBoolean boolValue = convertToBoolean(type, result);\n+\t\t\t\t\t\t\tif(boolValue == null) {\n+\t\t\t\t\t\t\t\tif(isNodeType(type)) {\n+\t\t\t\t\t\t\t\t\tNode n = result.getNode();\n+\t\t\t\t\t\t\t\t\tvalue = transformNodeToString(n);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\t\tvalue = boolValue.toString();\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\tvalue = number.toString();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tresults.add(value);\n+\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tthrow new MessagingException(\"Caught Exception while mapping the result sequence to string\",e);\n+\t\t\t}\n+\t\t\treturn results;\n+\t\t}\n+\t}\n+\n+\n+\tpublic static class BooleanResultMapper extends AbstractXQueryResultMapper<Boolean> {\n+\n+\t\tpublic List<Boolean> mapResults(XQResultSequence result) {\n+\t\t\tList<Boolean> results = new ArrayList<Boolean>();\n+\t\t\ttry {\n+\t\t\t\t//check for boolean or string type and convert it accordingly, if a node then get it's text\n+\t\t\t\t//content and convert to boolean\n+\t\t\t\twhile(result.next()) {\n+\t\t\t\t\tXQItemType type = result.getItemType();\n+\t\t\t\t\tBoolean value = convertToBoolean(type, result);\n+\t\t\t\t\tif(value == null) {\n+\t\t\t\t\t\tif(isNodeType(type)) {\n+\t\t\t\t\t\t\tNode n = result.getNode();\n+\t\t\t\t\t\t\tvalue = Boolean.valueOf(transformNodeToString(n));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tresults.add(value);\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tthrow new MessagingException(\"Caught Exception while mapping the result sequence to string\",e);\n+\t\t\t}\n+\t\t\treturn results;\n+\t\t}\n+\n+\t}\n+\n+\n+\tpublic static class NumberResultMapper extends AbstractXQueryResultMapper<Number> {\n+\n+\t\tpublic List<Number> mapResults(XQResultSequence result) {\n+\t\t\tList<Number> results = new ArrayList<Number>();\n+\t\t\ttry {\n+\t\t\t\twhile(result.next()) {\n+\n+\t\t\t\t\tXQItemType type = result.getItemType();\n+\t\t\t\t\tNumber value = convertToNumber(type, result);\n+\t\t\t\t\tif(value == null) {\n+\t\t\t\t\t\tif(isNodeType(type)) {\n+\t\t\t\t\t\t\tNode n = result.getNode();\n+\t\t\t\t\t\t\tString strValue = transformNodeToString(n);\n+\t\t\t\t\t\t\tif(StringUtils.hasText(strValue)) {\n+\t\t\t\t\t\t\t\tif(strValue.indexOf(\".\") > 0) {\n+\t\t\t\t\t\t\t\t\tvalue = Double.valueOf(strValue);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\t\t\tvalue = Long.valueOf(strValue);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tresults.add(value);\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tthrow new MessagingException(\"Caught Exception while mapping the result sequence to string\",e);\n+\t\t\t}\n+\t\t\treturn results;\n+\t\t}\n+\n+\t}\n+\n+\tpublic static class NodeResultMapper extends AbstractXQueryResultMapper<Node> {", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": null, "original_position": 586, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "As the class is already 600 lines long, move to the **support package** as that one already contains _AbstractXQueryResultMapper_.\n", "created_at": "2012-08-15T18:27:35Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385339", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385339"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385339"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385364", "pull_request_review_id": null, "id": 1385364, "diff_hunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.support;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.spel.standard.SpelExpressionParser;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The class that represents the XQuery parameter provided. It is also responsible\n+ * for the evaluation and returning the corresponding value against the given {@link Message}\n+ * instance\n+ *\n+ * @author Amol Nayak\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryParameter {\n+\n+\tprivate final String parameterName;\n+\tprivate volatile Object parameterValue;\n+\tprivate volatile String expression;\n+\tprivate volatile boolean isValueSet;\n+\t//Will be used only when an expression is set\n+\tprivate volatile ExpressionEvaluatingMessageProcessor<Object> messageProcessor;\n+\n+\t/**\n+\t * The default no argument constructor\n+\t */\n+\tpublic XQueryParameter(String parameterName) {\n+\t\tAssert.isTrue(StringUtils.hasText(parameterName), \"Non null non empty String value expected for parameter name\");", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryParameter.java", "position": null, "original_position": 47, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Change to Assert.hasText()\n", "created_at": "2012-08-15T18:29:37Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385364", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385364"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385364"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385373", "pull_request_review_id": null, "id": 1385373, "diff_hunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.support;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.spel.standard.SpelExpressionParser;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The class that represents the XQuery parameter provided. It is also responsible\n+ * for the evaluation and returning the corresponding value against the given {@link Message}\n+ * instance\n+ *\n+ * @author Amol Nayak\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryParameter {\n+\n+\tprivate final String parameterName;\n+\tprivate volatile Object parameterValue;\n+\tprivate volatile String expression;\n+\tprivate volatile boolean isValueSet;\n+\t//Will be used only when an expression is set\n+\tprivate volatile ExpressionEvaluatingMessageProcessor<Object> messageProcessor;\n+\n+\t/**\n+\t * The default no argument constructor\n+\t */\n+\tpublic XQueryParameter(String parameterName) {\n+\t\tAssert.isTrue(StringUtils.hasText(parameterName), \"Non null non empty String value expected for parameter name\");\n+\t\tthis.parameterName = parameterName;\n+\t}\n+\t/**\n+\t * The constructor that takes the parameter name and a static parameter value\n+\t *\n+\t * @param parameterName\n+\t * @param parameterValue\n+\t */\n+\tpublic XQueryParameter(String parameterName, Object parameterValue) {\n+\t\tthis(parameterName);\n+\t\tthis.parameterValue = parameterValue;", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryParameter.java", "position": null, "original_position": 58, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Add assertion for _parameterValue_.\n", "created_at": "2012-08-15T18:30:08Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385373", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385373"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385373"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385381", "pull_request_review_id": null, "id": 1385381, "diff_hunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.support;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.spel.standard.SpelExpressionParser;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The class that represents the XQuery parameter provided. It is also responsible\n+ * for the evaluation and returning the corresponding value against the given {@link Message}\n+ * instance\n+ *\n+ * @author Amol Nayak\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryParameter {\n+\n+\tprivate final String parameterName;\n+\tprivate volatile Object parameterValue;\n+\tprivate volatile String expression;\n+\tprivate volatile boolean isValueSet;\n+\t//Will be used only when an expression is set\n+\tprivate volatile ExpressionEvaluatingMessageProcessor<Object> messageProcessor;\n+\n+\t/**\n+\t * The default no argument constructor\n+\t */\n+\tpublic XQueryParameter(String parameterName) {\n+\t\tAssert.isTrue(StringUtils.hasText(parameterName), \"Non null non empty String value expected for parameter name\");\n+\t\tthis.parameterName = parameterName;\n+\t}\n+\t/**\n+\t * The constructor that takes the parameter name and a static parameter value\n+\t *\n+\t * @param parameterName\n+\t * @param parameterValue\n+\t */\n+\tpublic XQueryParameter(String parameterName, Object parameterValue) {\n+\t\tthis(parameterName);\n+\t\tthis.parameterValue = parameterValue;\n+\t\tisValueSet = true;\n+\t}\n+\n+\t/**\n+\t * The constructor that takes the parameter name and the expression that would\n+\t * be evaluated to get the value of the parameter\n+\t * @param parameterName\n+\t * @param expression\n+\t */\n+\tpublic XQueryParameter(String parameterName, String expression) {\n+\t\tthis(parameterName);\n+\t\tAssert.isTrue(StringUtils.hasText(expression), \"Non null non empty String value expected for expression\");\n+\t\tsetExpression(expression);\n+\t}\n+\n+\n+\t/**\n+\t * Gets the parameter name of this instance\n+\t * @return\n+\t */\n+\tpublic String getParameterName() {\n+\t\treturn parameterName;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter value, this is mutually exclusive with the expression\n+\t * @param parameterValue\n+\t */\n+\tpublic void setParameterValue(Object parameterValue) {\n+\t\tAssert.isTrue(!StringUtils.hasText(expression), \"The parameter value and expression are mutually \" +", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryParameter.java", "position": 90, "original_position": 89, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Assert.hasText()\n", "created_at": "2012-08-15T18:30:41Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385381", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385381"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385381"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385398", "pull_request_review_id": null, "id": 1385398, "diff_hunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.support;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.spel.standard.SpelExpressionParser;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The class that represents the XQuery parameter provided. It is also responsible\n+ * for the evaluation and returning the corresponding value against the given {@link Message}\n+ * instance\n+ *\n+ * @author Amol Nayak\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryParameter {\n+\n+\tprivate final String parameterName;\n+\tprivate volatile Object parameterValue;\n+\tprivate volatile String expression;\n+\tprivate volatile boolean isValueSet;\n+\t//Will be used only when an expression is set\n+\tprivate volatile ExpressionEvaluatingMessageProcessor<Object> messageProcessor;\n+\n+\t/**\n+\t * The default no argument constructor\n+\t */\n+\tpublic XQueryParameter(String parameterName) {\n+\t\tAssert.isTrue(StringUtils.hasText(parameterName), \"Non null non empty String value expected for parameter name\");\n+\t\tthis.parameterName = parameterName;\n+\t}\n+\t/**\n+\t * The constructor that takes the parameter name and a static parameter value\n+\t *\n+\t * @param parameterName\n+\t * @param parameterValue\n+\t */\n+\tpublic XQueryParameter(String parameterName, Object parameterValue) {\n+\t\tthis(parameterName);\n+\t\tthis.parameterValue = parameterValue;\n+\t\tisValueSet = true;\n+\t}\n+\n+\t/**\n+\t * The constructor that takes the parameter name and the expression that would\n+\t * be evaluated to get the value of the parameter\n+\t * @param parameterName\n+\t * @param expression\n+\t */\n+\tpublic XQueryParameter(String parameterName, String expression) {\n+\t\tthis(parameterName);\n+\t\tAssert.isTrue(StringUtils.hasText(expression), \"Non null non empty String value expected for expression\");\n+\t\tsetExpression(expression);\n+\t}\n+\n+\n+\t/**\n+\t * Gets the parameter name of this instance\n+\t * @return\n+\t */\n+\tpublic String getParameterName() {\n+\t\treturn parameterName;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter value, this is mutually exclusive with the expression\n+\t * @param parameterValue\n+\t */\n+\tpublic void setParameterValue(Object parameterValue) {\n+\t\tAssert.isTrue(!StringUtils.hasText(expression), \"The parameter value and expression are mutually \" +\n+\t\t\t\t\"exclusive, parameter expression already set\");\n+\t\t//TODO: Allow null values?\n+\t\tthis.parameterValue = parameterValue;", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryParameter.java", "position": null, "original_position": 92, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "IMO disallow null. Add assertion.\n", "created_at": "2012-08-15T18:31:38Z", "updated_at": "2012-08-16T20:53:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385398", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385398"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385398"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385407", "pull_request_review_id": null, "id": 1385407, "diff_hunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.support;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.spel.standard.SpelExpressionParser;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The class that represents the XQuery parameter provided. It is also responsible\n+ * for the evaluation and returning the corresponding value against the given {@link Message}\n+ * instance\n+ *\n+ * @author Amol Nayak\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryParameter {\n+\n+\tprivate final String parameterName;\n+\tprivate volatile Object parameterValue;\n+\tprivate volatile String expression;\n+\tprivate volatile boolean isValueSet;\n+\t//Will be used only when an expression is set\n+\tprivate volatile ExpressionEvaluatingMessageProcessor<Object> messageProcessor;\n+\n+\t/**\n+\t * The default no argument constructor\n+\t */\n+\tpublic XQueryParameter(String parameterName) {\n+\t\tAssert.isTrue(StringUtils.hasText(parameterName), \"Non null non empty String value expected for parameter name\");\n+\t\tthis.parameterName = parameterName;\n+\t}\n+\t/**\n+\t * The constructor that takes the parameter name and a static parameter value\n+\t *\n+\t * @param parameterName\n+\t * @param parameterValue\n+\t */\n+\tpublic XQueryParameter(String parameterName, Object parameterValue) {\n+\t\tthis(parameterName);\n+\t\tthis.parameterValue = parameterValue;\n+\t\tisValueSet = true;\n+\t}\n+\n+\t/**\n+\t * The constructor that takes the parameter name and the expression that would\n+\t * be evaluated to get the value of the parameter\n+\t * @param parameterName\n+\t * @param expression\n+\t */\n+\tpublic XQueryParameter(String parameterName, String expression) {\n+\t\tthis(parameterName);\n+\t\tAssert.isTrue(StringUtils.hasText(expression), \"Non null non empty String value expected for expression\");\n+\t\tsetExpression(expression);\n+\t}\n+\n+\n+\t/**\n+\t * Gets the parameter name of this instance\n+\t * @return\n+\t */\n+\tpublic String getParameterName() {\n+\t\treturn parameterName;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter value, this is mutually exclusive with the expression\n+\t * @param parameterValue\n+\t */\n+\tpublic void setParameterValue(Object parameterValue) {\n+\t\tAssert.isTrue(!StringUtils.hasText(expression), \"The parameter value and expression are mutually \" +\n+\t\t\t\t\"exclusive, parameter expression already set\");\n+\t\t//TODO: Allow null values?\n+\t\tthis.parameterValue = parameterValue;\n+\t\tisValueSet = true;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the expression that would be evaluated to get the parameter value\n+\t * @param expression\n+\t */\n+\tpublic void setExpression(String expression) {\n+\t\tAssert.isTrue(parameterValue == null, \"The parameter value and expression are mutually exclusive\" +\n+\t\t\t\t\", parameter value already set\");\n+\t\tAssert.isTrue(!StringUtils.hasText(this.expression), \"Expression string is already set once, cannot reset it\");\n+\t\tAssert.isTrue(StringUtils.hasText(expression), \"Please provide a non null, non empty expression string\");", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryParameter.java", "position": null, "original_position": 105, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Assert.hasText()\n", "created_at": "2012-08-15T18:32:06Z", "updated_at": "2012-08-16T20:53:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385407", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385407"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385407"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385433", "pull_request_review_id": null, "id": 1385433, "diff_hunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.support;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.net.URL;\n+\n+import org.springframework.core.io.Resource;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * The common utility class that is used to perform all common operations\n+ * amongst XQuery modules. To contain all common operations that would be used\n+ * by the router, transformer etc along with all the parsers for these components\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryUtils {\n+\n+\t/**\n+\t * Reads the XQuery string from the resource file specified\n+\t *\n+\t * @param resource the {@link Resource} instance of the file that contains the XQuery\n+\t * \t\t\tcurrently only classpath and file resources are supported\n+\t *\n+\t * @return the XQuery string from the resource specified\n+\t */\n+\tpublic static String readXQueryFromResource(Resource resource) {\n+\t\tAssert.isTrue(resource.exists(), \"Provided XQuery resource does not exist\");", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryUtils.java", "position": null, "original_position": 49, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "May want to do a null check assertion.\n", "created_at": "2012-08-15T18:34:03Z", "updated_at": "2012-08-16T20:53:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385433", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385433"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385433"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385453", "pull_request_review_id": null, "id": 1385453, "diff_hunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.transformer;\n+\n+import java.util.List;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.transformer.AbstractTransformer;\n+import org.springframework.integration.xquery.core.XQueryExecutor;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.util.Assert;\n+import org.w3c.dom.Node;\n+\n+\n+/**\n+ *The transformer that uses XQuery to transform the incoming payload\n+ *", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/transformer/XQueryTransformer.java", "position": null, "original_position": 30, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Maybe provide some details regarding default values, e.g. if no resultMapper or resultType is set, then the _XQueryTransformer_ will default to a _String_ resultType.\n", "created_at": "2012-08-15T18:36:09Z", "updated_at": "2012-08-16T20:53:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385453", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385453"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1385453"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1385453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1395231", "pull_request_review_id": null, "id": 1395231, "diff_hunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.support;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.spel.standard.SpelExpressionParser;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The class that represents the XQuery parameter provided. It is also responsible\n+ * for the evaluation and returning the corresponding value against the given {@link Message}\n+ * instance\n+ *\n+ * @author Amol Nayak\n+ * @since 2.2\n+ *\n+ */\n+public class XQueryParameter {\n+\n+\tprivate final String parameterName;\n+\tprivate volatile Object parameterValue;\n+\tprivate volatile String expression;\n+\tprivate volatile boolean isValueSet;\n+\t//Will be used only when an expression is set\n+\tprivate volatile ExpressionEvaluatingMessageProcessor<Object> messageProcessor;\n+\n+\t/**\n+\t * The default no argument constructor\n+\t */\n+\tpublic XQueryParameter(String parameterName) {\n+\t\tAssert.isTrue(StringUtils.hasText(parameterName), \"Non null non empty String value expected for parameter name\");\n+\t\tthis.parameterName = parameterName;\n+\t}\n+\t/**\n+\t * The constructor that takes the parameter name and a static parameter value\n+\t *\n+\t * @param parameterName\n+\t * @param parameterValue\n+\t */\n+\tpublic XQueryParameter(String parameterName, Object parameterValue) {\n+\t\tthis(parameterName);\n+\t\tthis.parameterValue = parameterValue;\n+\t\tisValueSet = true;\n+\t}\n+\n+\t/**\n+\t * The constructor that takes the parameter name and the expression that would\n+\t * be evaluated to get the value of the parameter\n+\t * @param parameterName\n+\t * @param expression\n+\t */\n+\tpublic XQueryParameter(String parameterName, String expression) {\n+\t\tthis(parameterName);\n+\t\tAssert.isTrue(StringUtils.hasText(expression), \"Non null non empty String value expected for expression\");\n+\t\tsetExpression(expression);\n+\t}\n+\n+\n+\t/**\n+\t * Gets the parameter name of this instance\n+\t * @return\n+\t */\n+\tpublic String getParameterName() {\n+\t\treturn parameterName;\n+\t}\n+\n+\n+\t/**\n+\t * Sets the parameter value, this is mutually exclusive with the expression\n+\t * @param parameterValue\n+\t */\n+\tpublic void setParameterValue(Object parameterValue) {\n+\t\tAssert.isTrue(!StringUtils.hasText(expression), \"The parameter value and expression are mutually \" +", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryParameter.java", "position": 90, "original_position": 89, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "I want it to fail when the expression has text\n", "created_at": "2012-08-16T17:30:48Z", "updated_at": "2012-08-16T20:53:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1395231", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1395231"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1395231"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1395231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1395592", "pull_request_review_id": null, "id": 1395592, "diff_hunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.xquery.transformer;\n+\n+import java.util.List;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.transformer.AbstractTransformer;\n+import org.springframework.integration.xquery.core.XQueryExecutor;\n+import org.springframework.integration.xquery.support.XQueryResultMapper;\n+import org.springframework.util.Assert;\n+import org.w3c.dom.Node;\n+\n+\n+/**\n+ *The transformer that uses XQuery to transform the incoming payload\n+ *", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/transformer/XQueryTransformer.java", "position": null, "original_position": 30, "commit_id": "fadf5f55c4fddd9325b91879efd1abc77a08bd62", "original_commit_id": "05db62f33dccba60ad3122c60f83b4d232b54f65", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Done, was lazy in writing enough class comments :D\n", "created_at": "2012-08-16T18:04:30Z", "updated_at": "2012-08-16T20:53:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1395592", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1395592"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/1#discussion_r1395592"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1395592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415353", "pull_request_review_id": null, "id": 1415353, "diff_hunk": "@@ -186,19 +186,19 @@ public void setBeanClassLoader(ClassLoader classLoader) {\n \t * @return the instantiated {@link XQDataSource}\n \t */\n \tprivate XQDataSource discoverXQDataSource() {\n-\t\tObject xqDataSource = null;", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": 4, "original_position": 4, "commit_id": "72ba2bcc56337b6635f30b3ba3aaf7e753af4046", "original_commit_id": "aaa51b91b2f71c2b2ef021df949796914e5c2e5f", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "I would leave it _xqDataSource_. I know that PMD complains that names are too long sometimes...\n", "created_at": "2012-08-20T16:02:21Z", "updated_at": "2012-08-20T16:52:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415353", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415353"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415353"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415388", "pull_request_review_id": null, "id": 1415388, "diff_hunk": "@@ -99,7 +99,7 @@ public void setParameterValue(Object parameterValue) {\n \t * Sets the expression that would be evaluated to get the parameter value\n \t * @param expression\n \t */\n-\tpublic void setExpression(String expression) {\n+\tpublic final void setExpression(String expression) {", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryParameter.java", "position": 5, "original_position": 5, "commit_id": "72ba2bcc56337b6635f30b3ba3aaf7e753af4046", "original_commit_id": "aaa51b91b2f71c2b2ef021df949796914e5c2e5f", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Not sure whether this should be final. as it is just an ordinary setter\n", "created_at": "2012-08-20T16:05:54Z", "updated_at": "2012-08-20T16:52:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415388", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415388"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415388"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415424", "pull_request_review_id": null, "id": 1415424, "diff_hunk": "@@ -186,19 +186,19 @@ public void setBeanClassLoader(ClassLoader classLoader) {\n \t * @return the instantiated {@link XQDataSource}\n \t */\n \tprivate XQDataSource discoverXQDataSource() {\n-\t\tObject xqDataSource = null;", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": 4, "original_position": 4, "commit_id": "72ba2bcc56337b6635f30b3ba3aaf7e753af4046", "original_commit_id": "aaa51b91b2f71c2b2ef021df949796914e5c2e5f", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Well it was hiding the class level variable.\n", "created_at": "2012-08-20T16:10:03Z", "updated_at": "2012-08-20T16:52:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415424", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415424"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415424"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415443", "pull_request_review_id": null, "id": 1415443, "diff_hunk": "@@ -99,7 +99,7 @@ public void setParameterValue(Object parameterValue) {\n \t * Sets the expression that would be evaluated to get the parameter value\n \t * @param expression\n \t */\n-\tpublic void setExpression(String expression) {\n+\tpublic final void setExpression(String expression) {", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryParameter.java", "position": 5, "original_position": 5, "commit_id": "72ba2bcc56337b6635f30b3ba3aaf7e753af4046", "original_commit_id": "aaa51b91b2f71c2b2ef021df949796914e5c2e5f", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Its invoked from constructor  and it complains with a Major violation saying, constructor calls an overirdable method\n", "created_at": "2012-08-20T16:12:13Z", "updated_at": "2012-08-20T16:52:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415443", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415443"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415443"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415558", "pull_request_review_id": null, "id": 1415558, "diff_hunk": "@@ -37,6 +39,15 @@\n  */\n public class XQueryUtils {\n \n+\tprivate static final Log logger = LogFactory.getLog(XQueryUtils.class);\n+\n+\n+\n+\tprivate XQueryUtils() {\n+\t\t//prevent instantiation", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryUtils.java", "position": 18, "original_position": 18, "commit_id": "72ba2bcc56337b6635f30b3ba3aaf7e753af4046", "original_commit_id": "aaa51b91b2f71c2b2ef021df949796914e5c2e5f", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "If you want to go perfect (see http://stackoverflow.com/questions/1844355/java-static-class) throw an AssertionError\n", "created_at": "2012-08-20T16:25:49Z", "updated_at": "2012-08-20T16:52:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415558", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415558"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415558"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415707", "pull_request_review_id": null, "id": 1415707, "diff_hunk": "@@ -37,6 +39,15 @@\n  */\n public class XQueryUtils {\n \n+\tprivate static final Log logger = LogFactory.getLog(XQueryUtils.class);\n+\n+\n+\n+\tprivate XQueryUtils() {\n+\t\t//prevent instantiation", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/support/XQueryUtils.java", "position": 18, "original_position": 18, "commit_id": "72ba2bcc56337b6635f30b3ba3aaf7e753af4046", "original_commit_id": "aaa51b91b2f71c2b2ef021df949796914e5c2e5f", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Addressed\n", "created_at": "2012-08-20T16:44:45Z", "updated_at": "2012-08-20T16:52:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415707", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415707"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415707"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415781", "pull_request_review_id": null, "id": 1415781, "diff_hunk": "@@ -186,19 +186,19 @@ public void setBeanClassLoader(ClassLoader classLoader) {\n \t * @return the instantiated {@link XQDataSource}\n \t */\n \tprivate XQDataSource discoverXQDataSource() {\n-\t\tObject xqDataSource = null;", "path": "spring-integration-xquery/src/main/java/org/springframework/integration/xquery/core/XQueryExecutor.java", "position": 4, "original_position": 4, "commit_id": "72ba2bcc56337b6635f30b3ba3aaf7e753af4046", "original_commit_id": "aaa51b91b2f71c2b2ef021df949796914e5c2e5f", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Got rid of xq and renamed variable _dataSource_. Addresses both issues ;)\n", "created_at": "2012-08-20T16:53:16Z", "updated_at": "2012-08-20T16:53:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415781", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415781"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/4#discussion_r1415781"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/4"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1415781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707291", "pull_request_review_id": null, "id": 1707291, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'\n+}\n+\n+dependencies {\n+\tcompile fileTree(dir:\"lib\", include: \"*.jar\")\n+\tcompile \"org.springframework.integration:spring-integration-core:$springIntegrationVersion\"\n+\tcompile \"org.springframework:spring-tx:$springVersion\"\n+\tcompile(\"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\", optional)\n+\tcompile(\"org.springframework.amqp:spring-rabbit:$springAmqpVersion\") {\n+\t\texclude group: 'org.springframework', module: 'spring-aop'\n+\t\texclude group: 'org.springframework', module: 'spring-beans'\n+\t\texclude group: 'org.springframework', module: 'spring-context'\n+\t\texclude group: 'org.springframework', module: 'spring-core'\n+\t\texclude group: 'org.springframework', module: 'spring-oxm'\n+\t\texclude group: 'org.springframework', module: 'spring-tx'\n+\t}\n+\tcompile \"commons-lang:commons-lang:$commonsLangVersion\"\n+\tcompile \"commons-pool:commons-pool:$commonsPoolVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-stream:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-jdbc:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework:spring-jdbc:$springVersion\"\n+\ttestCompile \"org.apache.derby:derby:$derbyVersion\"\n+\ttestCompile \"org.apache.derby:derbyclient:$derbyVersion\"\n+\ttestCompile \"commons-dbcp:commons-dbcp:$dbcpVersion\"\n+}\n+\n+\n+eclipse {\n+\tproject {\n+\t\tnatures += 'org.springframework.ide.eclipse.core.springnature'\n+\t}\n+}\n+\n+sourceSets {\n+\ttest {\n+\t\tresources {\n+\t\t\tsrcDirs = ['src/test/resources', 'src/test/java']\n+\t\t}\n+\t}\n+}\n+\n+// See http://www.gradle.org/docs/current/userguide/dependency_management.html#sub:configurations\n+// and http://www.gradle.org/docs/current/dsl/org.gradle.api.artifacts.ConfigurationContainer.html\n+configurations {\n+\tjacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo\n+}\n+\n+// dependencies that are common across all java projects\n+dependencies {\n+\ttestCompile \"cglib:cglib-nodep:$cglibVersion\"\n+\ttestCompile \"junit:junit-dep:$junitVersion\"\n+\ttestCompile \"log4j:log4j:$log4jVersion\"\n+\ttestCompile \"org.easymock:easymock:$easymockVersion\"\n+\ttestCompile \"org.easymock:easymockclassextension:$easymockVersion\"\n+\ttestCompile \"org.hamcrest:hamcrest-all:1.1\"\n+\ttestCompile \"org.mockito:mockito-all:$mockitoVersion\"\n+\ttestCompile \"org.springframework:spring-test:$springVersion\"\n+\tjacoco group: \"org.jacoco\", name: \"org.jacoco.agent\", version: \"0.5.6.201201232323\", classifier: \"runtime\"\n+}\n+\n+// enable all compiler warnings; individual projects may customize further\n+ext.xLintArg = '-Xlint:all'\n+[compileJava, compileTestJava]*.options*.compilerArgs = [xLintArg]\n+\n+test {\n+\t// suppress all console output during testing unless running `gradle -i`\n+\tlogging.captureStandardOutput(LogLevel.INFO)\n+\tjvmArgs \"-javaagent:${configurations.jacoco.asPath}=destfile=${buildDir}/jacoco.exec,includes=*\"\n+}\n+\n+task sourcesJar(type: Jar) {\n+\tclassifier = 'sources'\n+\tfrom sourceSets.main.allJava\n+}\n+\n+task javadocJar(type: Jar) {\n+\tclassifier = 'javadoc'\n+\tfrom javadoc\n+}\n+\n+artifacts {\n+\tarchives sourcesJar\n+\tarchives javadocJar\n+}\n+\n+apply plugin: 'docbook-reference'\n+\n+reference {\n+\tsourceDir = file('src/reference/docbook')\n+}\n+\n+apply plugin: 'sonar'\n+\n+sonar {\n+\n+\tif (rootProject.hasProperty('sonarHostUrl')) {\n+\t\tserver.url = rootProject.sonarHostUrl\n+\t}\n+\n+\tdatabase {\n+\t\tif (rootProject.hasProperty('sonarJdbcUrl')) {\n+\t\t\turl = rootProject.sonarJdbcUrl\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcDriver')) {\n+\t\t\tdriverClassName = rootProject.sonarJdbcDriver\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcUsername')) {\n+\t\t\tusername = rootProject.sonarJdbcUsername\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcPassword')) {\n+\t\t\tpassword = rootProject.sonarJdbcPassword\n+\t\t}\n+\t}\n+\n+\tproject {\n+\t\tdynamicAnalysis  = \"reuseReports\"\n+\t\twithProjectProperties { props ->\n+\t\t\tprops[\"sonar.core.codeCoveragePlugin\"] = \"jacoco\"\n+\t\t\tprops[\"sonar.jacoco.reportPath\"]       = \"${buildDir.name}/jacoco.exec\"\n+\t\t}\n+\t}\n+\n+\tlogger.info(\"Sonar parameters used: server.url='${server.url}'; database.url='${database.url}'; database.driverClassName='${database.driverClassName}'; database.username='${database.username}'\")\n+}\n+\n+task api(type: Javadoc) {\n+\tgroup = 'Documentation'\n+\tdescription = 'Generates aggregated Javadoc API documentation.'\n+\ttitle = \"${rootProject.description} ${version} API\"\n+\toptions.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED\n+\toptions.author = true\n+\toptions.header = rootProject.description\n+\toptions.overview = 'src/api/overview.html'\n+\tsource subprojects.collect { project ->\n+\t\tproject.sourceSets.main.allJava\n+\t}\n+\tdestinationDir = new File(buildDir, \"api\")\n+\tclasspath = files(subprojects.collect { project ->\n+\t\tproject.sourceSets.main.compileClasspath\n+\t})\n+}\n+\n+task schemaZip(type: Zip) {\n+\tgroup = 'Distribution'\n+\tclassifier = 'schema'\n+\tdescription = \"Builds -${classifier} archive containing all \" +\n+\t\t\"XSDs for deployment at static.springframework.org/schema.\"\n+\n+\tsubprojects.each { subproject ->\n+\t\tdef Properties schemas = new Properties();\n+\t\tdef shortName = subproject.name.replaceFirst(\"${rootProject.name}-\", '')\n+\t\tif (subproject.name.endsWith(\"-core\")) {\n+\t\t\tshortName = ''\n+\t\t}\n+\n+\t\tsubproject.sourceSets.main.resources.find {\n+\t\t\tit.path.endsWith('META-INF/spring.schemas')\n+\t\t}?.withInputStream { schemas.load(it) }\n+\n+\t\tfor (def key : schemas.keySet()) {\n+\t\t\tFile xsdFile = subproject.sourceSets.main.resources.find {\n+\t\t\t\tit.path.endsWith(schemas.get(key))\n+\t\t\t}\n+\t\t\tassert xsdFile != null\n+\t\t\tinto (\"integration/${shortName}\") {\n+\t\t\t\tfrom xsdFile.path\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+task docsZip(type: Zip) {\n+\t\tgroup = 'Distribution'\n+\t\tclassifier = 'docs'\n+\t\tdescription = \"Builds -${classifier} archive containing api and reference \" +\n+\t\t\t\"for deployment at static.springframework.org/spring-integration/docs.\"\n+\n+\t\tfrom('src/dist') {\n+\t\t\tinclude 'changelog.txt'\n+\t\t}\n+\n+\t\tfrom (api) {\n+\t\t\tinto 'api'\n+\t\t}\n+\n+\t\tfrom (reference) {\n+\t\t\tinto 'reference'\n+\t\t}\n+}\n+\n+task distZip(type: Zip, dependsOn: [docsZip, schemaZip]) {\n+\tgroup = 'Distribution'\n+\tclassifier = 'dist'\n+\tdescription = \"Builds -${classifier} archive, containing all jars and docs, \" +\n+\t\t\"suitable for community download page.\"\n+\n+\text.baseDir = \"${project.name}-${project.version}\";\n+\n+\tfrom('src/dist') {\n+\t\tinclude 'readme.txt'\n+\t\tinclude 'license.txt'\n+\t\tinclude 'notice.txt'\n+\t\tinto \"${baseDir}\"\n+\t}\n+\n+\tfrom(zipTree(docsZip.archivePath)) {\n+\t\tinto \"${baseDir}/docs\"\n+\t}\n+\n+\tfrom(zipTree(schemaZip.archivePath)) {\n+\t\tinto \"${baseDir}/schema\"\n+\t}\n+\n+\tsubprojects.each { subproject ->\n+\t\tinto (\"${baseDir}/libs\") {\n+\t\t\tfrom subproject.jar\n+\t\t\tfrom subproject.sourcesJar\n+\t\t\tfrom subproject.javadocJar\n+\t\t}\n+\t}\n+}\n+\n+// Create an optional \"with dependencies\" distribution.\n+// Not published by default; only for use when building from source.\n+task depsZip(type: Zip, dependsOn: distZip) { zipTask ->\n+\tgroup = 'Distribution'\n+\tclassifier = 'dist-with-deps'\n+\tdescription = \"Builds -${classifier} archive, containing everything \" +\n+\t\t\"in the -${distZip.classifier} archive plus all dependencies.\"\n+\n+\tfrom zipTree(distZip.archivePath)\n+\n+\tgradle.taskGraph.whenReady { taskGraph ->\n+\t\tif (taskGraph.hasTask(\":${zipTask.name}\")) {\n+\t\t\tdef projectNames = rootProject.subprojects*.name\n+\t\t\tdef artifacts = new HashSet()\n+\t\t\tsubprojects.each { subproject ->\n+\t\t\t\tsubproject.configurations.runtime.resolvedConfiguration.resolvedArtifacts.each { artifact ->\n+\t\t\t\t\tdef dependency = artifact.moduleVersion.id\n+\t\t\t\t\tif (!projectNames.contains(dependency.name)) {\n+\t\t\t\t\t\tartifacts << artifact.file\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tzipTask.from(artifacts) {\n+\t\t\t\tinto \"${distZip.baseDir}/deps\"\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+artifacts {\n+\tarchives distZip\n+\tarchives docsZip\n+\tarchives schemaZip\n+}\n+\n+task dist(dependsOn: assemble) {\n+\tgroup = 'Distribution'\n+\tdescription = 'Builds -dist, -docs and -schema distribution archives.'\n+}\n+\n+task wrapper(type: Wrapper) {\n+\tdescription = 'Generates gradlew[.bat] scripts'\n+\tgradleVersion = '1.0-rc-3'", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 318, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Update that to Gradle version **1.2** and also re-run:\n\n```\n$ gradle wrapper\n```\n", "created_at": "2012-09-27T14:21:49Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707291", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707291"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707291"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707392", "pull_request_review_id": null, "id": 1707392, "diff_hunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.config.xml;\n+\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.xml.ParserContext;\n+import org.springframework.integration.splunk.support.SplunkExecutor;\n+import org.springframework.util.Assert;\n+import org.w3c.dom.Element;\n+\n+/**\n+ * Contains various utility methods for parsing Splunk Adapter\n+ * specific namesspace elements as well as for the generation of the the", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkParserUtils.java", "position": null, "original_position": 27, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "the the (One too many)\n", "created_at": "2012-09-27T14:27:17Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707392", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707392"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707392"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707473", "pull_request_review_id": null, "id": 1707473, "diff_hunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.config.xml;\n+\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;\n+import org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;\n+import org.springframework.beans.factory.xml.ParserContext;\n+import org.springframework.integration.splunk.entity.SplunkServer;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Element;\n+\n+/**\n+ * Splunk server element parser.\n+ *\n+ * The XML element is like this:\n+ * <pre>\n+ * {@code\n+ * <splunk:server id=\"splunkServer\" host=\"host\" port=\"8089\" userName=\"admin\" password=\"password\" />\n+ * }\n+ *\n+ * @author Jarred Li\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkServerParser extends AbstractSimpleBeanDefinitionParser {\n+\n+\t@Override\n+\tpublic Class<?> getBeanClass(Element element) {\n+\t\treturn SplunkServer.class;\n+\t}\n+\n+\t@Override\n+\tprotected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) {\n+\t\tsuper.doParse(element, parserContext, builder);\n+\n+\t\tString scope = element.getAttribute(BeanDefinitionParserDelegate.SCOPE_ATTRIBUTE);\n+\t\tif (StringUtils.hasText(scope)) {\n+\t\t\tbuilder.setScope(scope);\n+\t\t}\n+\n+\t\tString host = element.getAttribute(\"host\");", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkServerParser.java", "position": null, "original_position": 55, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "You can change this to:\n\n```\nIntegrationNamespaceUtils.setValueIfAttributeDefined(builder, element, \"host\");\n```\n\nIf you need to do more specific validation of the value you can probably do that best in the setter of the _SplunkServer_ class\nSee for the other attributes below as well. \n", "created_at": "2012-09-27T14:32:12Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707473", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707473"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707473"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707621", "pull_request_review_id": null, "id": 1707621, "diff_hunk": "@@ -0,0 +1,2274 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.entity;\n+\n+import java.io.Serializable;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import org.apache.commons.lang.time.FastDateFormat;\n+\n+/**\n+ * Splunk data entity\n+ * \n+ * @author Jarred Li\n+ * @author Damien Dallimore damien@dtdsoftware.com\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkData implements Serializable {\n+\n+\tprivate static final long serialVersionUID = -7369254824093658523L;\n+\n+\n+\tprivate Map<String, String> eventData;\n+\n+\t/**\n+\t * Contents of the event message\n+\t */\n+\tprivate StringBuffer eventMessage;\n+\n+\t/**\n+\t * Whether or not to put quotes around values\n+\t */\n+\tprivate boolean quoteValues = true;\n+\n+\t/**\n+\t * Whether or not to add a date to the event string\n+\t */\n+\tprivate boolean useInternalDate = true;\n+\n+\t/**\n+\t * default key value delimiter\n+\t */\n+\tprivate static final String KVDELIM = \"=\";\n+\t/**\n+\t * default pair delimiter\n+\t */\n+\tprivate static final String PAIRDELIM = \" \";\n+\t/**\n+\t * default quote char\n+\t */\n+\tprivate static final char QUOTE = '\"';\n+\t/**\n+\t * default date format is using internal generated date\n+\t */\n+\tprivate static final String DATEFORMATPATTERN = \"yyyy-MM-dd HH:mm:ss:SSSZ\";\n+\t/**\n+\t * Date Formatter instance\n+\t */\n+\tprivate static FastDateFormat DATEFORMATTER = FastDateFormat.getInstance(DATEFORMATPATTERN);\n+\n+\t/**\n+\t * Event prefix fields\n+\t */\n+\tprivate static final String PREFIX_NAME = \"name\";\n+\tprivate static final String PREFIX_EVENT_ID = \"event_id\";\n+\n+\t/**\n+\t * Java Throwable type fields\n+\t */\n+\tprivate static final String THROWABLE_CLASS = \"throwable_class\";\n+\tprivate static final String THROWABLE_MESSAGE = \"throwable_message\";\n+\tprivate static final String THROWABLE_STACKTRACE_ELEMENTS = \"stacktrace_elements\";\n+\n+\t/**\n+\t * Splunk Common Information Model(CIM) Fields\n+\t */\n+\n+\t// ------------------\n+\t// Account management\n+\t// ------------------\n+\n+\t/**\n+\t * The domain containing the user that is affected by the account management\n+\t * event.\n+\t */\n+\tpublic static String AC_MANAGEMENT_DEST_NT_DOMAIN = \"dest_nt_domain\";\n+\t/**", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/entity/SplunkData.java", "position": 101, "original_position": 101, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "I wonder if all those String constants could be refactored into enum classes - e.g. one enum class per category: AccountManagement, Authentication etc. Right now there are 1000+ lines of constant definitions and String constants are just not very type-safe. \n\nNot necessary to fix prior to merging this PR but maybe something to consider.\n", "created_at": "2012-09-27T14:43:41Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707621", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707621"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707621"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707676", "pull_request_review_id": null, "id": 1707676, "diff_hunk": "@@ -0,0 +1,472 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.support;\n+\n+import java.io.InputStream;\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.integration.splunk.core.Connection;\n+import org.springframework.integration.splunk.core.ConnectionFactory;\n+import org.springframework.integration.splunk.core.DataReader;\n+import org.springframework.integration.splunk.entity.SplunkData;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+import com.splunk.Args;\n+import com.splunk.Job;\n+import com.splunk.ResultsReader;\n+import com.splunk.ResultsReaderXml;\n+import com.splunk.SavedSearch;\n+import com.splunk.SavedSearchCollection;\n+import com.splunk.Service;\n+\n+/**\n+ * Data reader to search data from Splunk.\n+ * \n+ * There are 5 ways to search data in the Splunk: saved search, blocking search, \n+ * non blocking search, realtime search, export search.", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkDataReader.java", "position": null, "original_position": 49, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "in the Splunk (?)\n", "created_at": "2012-09-27T14:47:15Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707676", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707676"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707676"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707741", "pull_request_review_id": null, "id": 1707741, "diff_hunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.support;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.springframework.integration.splunk.core.Connection;\n+import org.springframework.integration.splunk.entity.SplunkServer;\n+\n+import com.splunk.Service;\n+\n+/**\n+ * Connection to Splunk service\n+ * \n+ * @author Jarred Li\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkConnection implements Connection<Service> {\n+\n+\tprivate Service service;\n+\n+\tpublic SplunkConnection(SplunkServer splunkServer) {\n+\t\tMap<String, Object> args = new HashMap<String, Object>();\n+\t\tif (splunkServer.getHost() != null) {\n+\t\t\targs.put(\"host\", splunkServer.getHost());\n+\t\t}\n+\t\tif (splunkServer.getPort() != 0) {\n+\t\t\targs.put(\"port\", splunkServer.getPort());\n+\t\t}\n+\t\tif (splunkServer.getScheme() != null) {\n+\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n+\t\t}\n+\t\tif (splunkServer.getApp() != null) {\n+\t\t\targs.put(\"app\", splunkServer.getApp());\n+\t\t}\n+\t\tif (splunkServer.getOwner() != null) {\n+\t\t\targs.put(\"owner\", splunkServer.getOwner());\n+\t\t}\n+\n+\t\targs.put(\"username\", splunkServer.getUserName());\n+\t\targs.put(\"password\", splunkServer.getPassword());\n+\t\tservice = Service.connect(args);\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.integration.splunk.core.IService#close()\n+\t */\n+\tpublic void close() {\n+\t\tservice.logout();\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.integration.splunk.core.IService#isOpen()\n+\t */\n+\tpublic boolean isOpen() {\n+\t\tboolean result = true;\n+\t\ttry {\n+\t\t\tservice.getToken();\n+\t\t} catch (Throwable t) {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkConnection.java", "position": null, "original_position": 74, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Minor: Or code conventions typically favor this style:\n\n```\ntry {\n    ...\n}\ncatch (Throwable t) {\n    ...\n}\n```\n", "created_at": "2012-09-27T14:51:40Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707741", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707741"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707741"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707784", "pull_request_review_id": null, "id": 1707784, "diff_hunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.support;\n+\n+import java.io.OutputStream;\n+import java.io.OutputStreamWriter;\n+import java.io.Writer;\n+import java.net.Socket;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.integration.splunk.core.Connection;\n+import org.springframework.integration.splunk.core.DataWriter;\n+import org.springframework.integration.splunk.core.ConnectionFactory;\n+import org.springframework.integration.splunk.entity.SplunkData;\n+\n+import com.splunk.Args;\n+import com.splunk.Index;\n+import com.splunk.Receiver;\n+import com.splunk.Service;\n+\n+/**\n+ * Data writer to write data into Splunk. There are 3 ways to write data:\n+ * REST submit, TCP socket and HTTP stream.\n+ * \n+ * @author Jarred Li\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkDataWriter implements DataWriter, InitializingBean {\n+\n+\tprivate static final Log logger = LogFactory.getLog(SplunkDataWriter.class);\n+\n+\tprivate ConnectionFactory<Service> connectionFactory;\n+\n+\tprivate String sourceType;\n+\n+\tprivate String source;\n+\n+\tprivate String index;\n+\n+\tprivate IngestType ingest = IngestType.stream; //tcp, stream, submit\n+\n+\tprivate int tcpPort;\n+\n+\tprivate String host;\n+\n+\tprivate String hostRegex;\n+\n+\tpublic SplunkDataWriter(ConnectionFactory<Service> f) {\n+\t\tthis.connectionFactory = f;\n+\t}\n+\n+\tpublic void write(SplunkData data) throws Exception {\n+\t\tlogger.debug(\"write message to splunk:\" + data);\n+\n+\t\tConnection<Service> connection = connectionFactory.getConnection();\n+\t\tService service = connection.getTarget();\n+\t\tIndex indexObject = null;\n+\t\tReceiver receiver = null;\n+\t\tOutputStream ostream;\n+\t\tSocket socket;\n+\t\tWriter writer = null;\n+\n+\t\tArgs args = new Args();\n+\t\tif (sourceType != null) {\n+\t\t\targs.put(\"sourcetype\", sourceType);\n+\t\t}\n+\t\tif (source != null) {\n+\t\t\targs.put(\"source\", source);\n+\t\t}\n+\n+\t\tif (host != null) {\n+\t\t\targs.put(\"host\", host);\n+\t\t}\n+\n+\t\tif (hostRegex != null) {\n+\t\t\targs.put(\"host_regex\", hostRegex);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tif (index != null) {\n+\t\t\t\tindexObject = service.getIndexes().get(index);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\treceiver = service.getReceiver();\n+\t\t\t}\n+\n+\t\t\tif ((ingest.equals(IngestType.stream) || ingest.equals(IngestType.tcp))) {\n+\t\t\t\tif (ingest.equals(\"stream\")) {\n+\t\t\t\t\tif (indexObject != null)\n+\t\t\t\t\t\tsocket = indexObject.attach(args);\n+\t\t\t\t\telse\n+\t\t\t\t\t\tsocket = receiver.attach(args);\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tsocket = service.open(tcpPort);\n+\t\t\t\t}\n+\t\t\t\tostream = socket.getOutputStream();\n+\t\t\t\twriter = new OutputStreamWriter(ostream, \"UTF8\");\n+\t\t\t}\n+\n+\t\t\tif ((ingest.equals(IngestType.stream) || ingest.equals(IngestType.tcp))) {\n+\t\t\t\twriter.write(data.toString());\n+\t\t\t\twriter.flush();\n+\t\t\t\twriter.close();\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tif (index != null) {\n+\t\t\t\t\tindexObject.submit(args, data.toString());\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\treceiver.submit(args, data.toString());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} finally {\n+\t\t\tconnection.close();\n+\t\t}\n+\n+\t}\n+\n+\n+\tpublic void setSourceType(String sourceType) {\n+\t\tthis.sourceType = sourceType;\n+\t}\n+\n+\tpublic void setSource(String source) {\n+\t\tthis.source = source;\n+\t}\n+\n+\tpublic void setIndex(String index) {\n+\t\tthis.index = index;\n+\t}\n+\n+\tpublic void setIngest(IngestType ingest) {\n+\t\tthis.ingest = ingest;\n+\t}\n+\n+\tpublic void setTcpPort(int tcpPort) {\n+\t\tthis.tcpPort = tcpPort;\n+\t}\n+\n+\tpublic void setHost(String host) {\n+\t\tthis.host = host;\n+\t}\n+\n+\tpublic void setHostRegex(String hostRegex) {\n+\t\tthis.hostRegex = hostRegex;\n+\t}\n+\n+\n+\tpublic String getSourceType() {\n+\t\treturn sourceType;\n+\t}\n+\n+\tpublic String getSource() {\n+\t\treturn source;\n+\t}\n+\n+\tpublic String getIndex() {\n+\t\treturn index;\n+\t}\n+\n+\tpublic IngestType getIngest() {\n+\t\treturn ingest;\n+\t}\n+\n+\tpublic int getTcpPort() {\n+\t\treturn tcpPort;\n+\t}\n+\n+\tpublic String getHost() {\n+\t\treturn host;\n+\t}\n+\n+\tpublic String getHostRegex() {\n+\t\treturn hostRegex;\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.beans.factory.InitializingBean#afterPropertiesSet()\n+\t */\n+\tpublic void afterPropertiesSet() throws Exception {\n+\n+\t}\n+\n+\n+\tpublic static enum IngestType {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkDataWriter.java", "position": null, "original_position": 202, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Since this is a public enum class - Could IngestType be refactored into its own file? (With some JavaDoc)\n", "created_at": "2012-09-27T14:55:05Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707784", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707784"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707784"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707809", "pull_request_review_id": null, "id": 1707809, "diff_hunk": "@@ -0,0 +1,2 @@\n+http\\://www.springframework.org/schema/integration/splunk/spring-integration-splunk-2.2.xsd=org/springframework/integration/splunk/config/xml/spring-integration-splunk-2.2.xsd", "path": "spring-integration-splunk/src/main/resources/META-INF/spring.schemas", "position": null, "original_position": 1, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Since this whole adapter is versioned **1.0** - we should probably change any **2.2** references to **1.0** - e.g.:\n\n```\nspring-integration-splunk-1.0.xsd\n```\n", "created_at": "2012-09-27T14:56:54Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707809", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707809"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707809"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707831", "pull_request_review_id": null, "id": 1707831, "diff_hunk": "@@ -0,0 +1,68 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<book xmlns=\"http://docbook.org/ns/docbook\" version=\"5.0\"", "path": "spring-integration-splunk/src/reference/docbook/index.xml", "position": 2, "original_position": 2, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Since you probably favor Markdown (README.md) to provide documentation - Should we remove all docbook references/files?\n", "created_at": "2012-09-27T14:59:06Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707831", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707831"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1707831"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1707831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709003", "pull_request_review_id": null, "id": 1709003, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 33, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Remove all unnecessary version properties.\n", "created_at": "2012-09-27T16:26:20Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709003", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709003"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709003"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709010", "pull_request_review_id": null, "id": 1709010, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'\n+}", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 53, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Add the **splunkVersion** property\n", "created_at": "2012-09-27T16:26:46Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709010", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709010"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709010"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709039", "pull_request_review_id": null, "id": 1709039, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'\n+}\n+\n+dependencies {\n+\tcompile fileTree(dir:\"lib\", include: \"*.jar\")\n+\tcompile \"org.springframework.integration:spring-integration-core:$springIntegrationVersion\"\n+\tcompile \"org.springframework:spring-tx:$springVersion\"\n+\tcompile(\"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\", optional)\n+\tcompile(\"org.springframework.amqp:spring-rabbit:$springAmqpVersion\") {", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 60, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "- Remove unnecessary compile dependencies.\n- Add the Splunk dependency:\n  \n  compile(\"com.splunk:splunk:$splunkVersion\")\n", "created_at": "2012-09-27T16:28:15Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709039", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709039"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709039"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709045", "pull_request_review_id": null, "id": 1709045, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'\n+}\n+\n+dependencies {\n+\tcompile fileTree(dir:\"lib\", include: \"*.jar\")\n+\tcompile \"org.springframework.integration:spring-integration-core:$springIntegrationVersion\"\n+\tcompile \"org.springframework:spring-tx:$springVersion\"\n+\tcompile(\"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\", optional)\n+\tcompile(\"org.springframework.amqp:spring-rabbit:$springAmqpVersion\") {\n+\t\texclude group: 'org.springframework', module: 'spring-aop'\n+\t\texclude group: 'org.springframework', module: 'spring-beans'\n+\t\texclude group: 'org.springframework', module: 'spring-context'\n+\t\texclude group: 'org.springframework', module: 'spring-core'\n+\t\texclude group: 'org.springframework', module: 'spring-oxm'\n+\t\texclude group: 'org.springframework', module: 'spring-tx'\n+\t}\n+\tcompile \"commons-lang:commons-lang:$commonsLangVersion\"\n+\tcompile \"commons-pool:commons-pool:$commonsPoolVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-stream:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-jdbc:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework:spring-jdbc:$springVersion\"", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 73, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Remove unnecessary testCompile dependencies\n", "created_at": "2012-09-27T16:28:46Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709045", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709045"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709045"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709060", "pull_request_review_id": null, "id": 1709060, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 52, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Add the **splunkVersion** property: \n\n```\nsplunkVersion = '0.8.0'\n```\n", "created_at": "2012-09-27T16:29:45Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709060", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709060"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1709060"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1709060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714061", "pull_request_review_id": null, "id": 1714061, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'\n+}\n+\n+dependencies {\n+\tcompile fileTree(dir:\"lib\", include: \"*.jar\")\n+\tcompile \"org.springframework.integration:spring-integration-core:$springIntegrationVersion\"\n+\tcompile \"org.springframework:spring-tx:$springVersion\"\n+\tcompile(\"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\", optional)\n+\tcompile(\"org.springframework.amqp:spring-rabbit:$springAmqpVersion\") {\n+\t\texclude group: 'org.springframework', module: 'spring-aop'\n+\t\texclude group: 'org.springframework', module: 'spring-beans'\n+\t\texclude group: 'org.springframework', module: 'spring-context'\n+\t\texclude group: 'org.springframework', module: 'spring-core'\n+\t\texclude group: 'org.springframework', module: 'spring-oxm'\n+\t\texclude group: 'org.springframework', module: 'spring-tx'\n+\t}\n+\tcompile \"commons-lang:commons-lang:$commonsLangVersion\"\n+\tcompile \"commons-pool:commons-pool:$commonsPoolVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-stream:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-jdbc:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework:spring-jdbc:$springVersion\"\n+\ttestCompile \"org.apache.derby:derby:$derbyVersion\"\n+\ttestCompile \"org.apache.derby:derbyclient:$derbyVersion\"\n+\ttestCompile \"commons-dbcp:commons-dbcp:$dbcpVersion\"\n+}\n+\n+\n+eclipse {\n+\tproject {\n+\t\tnatures += 'org.springframework.ide.eclipse.core.springnature'\n+\t}\n+}\n+\n+sourceSets {\n+\ttest {\n+\t\tresources {\n+\t\t\tsrcDirs = ['src/test/resources', 'src/test/java']\n+\t\t}\n+\t}\n+}\n+\n+// See http://www.gradle.org/docs/current/userguide/dependency_management.html#sub:configurations\n+// and http://www.gradle.org/docs/current/dsl/org.gradle.api.artifacts.ConfigurationContainer.html\n+configurations {\n+\tjacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo\n+}\n+\n+// dependencies that are common across all java projects\n+dependencies {\n+\ttestCompile \"cglib:cglib-nodep:$cglibVersion\"\n+\ttestCompile \"junit:junit-dep:$junitVersion\"\n+\ttestCompile \"log4j:log4j:$log4jVersion\"\n+\ttestCompile \"org.easymock:easymock:$easymockVersion\"\n+\ttestCompile \"org.easymock:easymockclassextension:$easymockVersion\"\n+\ttestCompile \"org.hamcrest:hamcrest-all:1.1\"\n+\ttestCompile \"org.mockito:mockito-all:$mockitoVersion\"\n+\ttestCompile \"org.springframework:spring-test:$springVersion\"\n+\tjacoco group: \"org.jacoco\", name: \"org.jacoco.agent\", version: \"0.5.6.201201232323\", classifier: \"runtime\"\n+}\n+\n+// enable all compiler warnings; individual projects may customize further\n+ext.xLintArg = '-Xlint:all'\n+[compileJava, compileTestJava]*.options*.compilerArgs = [xLintArg]\n+\n+test {\n+\t// suppress all console output during testing unless running `gradle -i`\n+\tlogging.captureStandardOutput(LogLevel.INFO)\n+\tjvmArgs \"-javaagent:${configurations.jacoco.asPath}=destfile=${buildDir}/jacoco.exec,includes=*\"\n+}\n+\n+task sourcesJar(type: Jar) {\n+\tclassifier = 'sources'\n+\tfrom sourceSets.main.allJava\n+}\n+\n+task javadocJar(type: Jar) {\n+\tclassifier = 'javadoc'\n+\tfrom javadoc\n+}\n+\n+artifacts {\n+\tarchives sourcesJar\n+\tarchives javadocJar\n+}\n+\n+apply plugin: 'docbook-reference'\n+\n+reference {\n+\tsourceDir = file('src/reference/docbook')\n+}\n+\n+apply plugin: 'sonar'\n+\n+sonar {\n+\n+\tif (rootProject.hasProperty('sonarHostUrl')) {\n+\t\tserver.url = rootProject.sonarHostUrl\n+\t}\n+\n+\tdatabase {\n+\t\tif (rootProject.hasProperty('sonarJdbcUrl')) {\n+\t\t\turl = rootProject.sonarJdbcUrl\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcDriver')) {\n+\t\t\tdriverClassName = rootProject.sonarJdbcDriver\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcUsername')) {\n+\t\t\tusername = rootProject.sonarJdbcUsername\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcPassword')) {\n+\t\t\tpassword = rootProject.sonarJdbcPassword\n+\t\t}\n+\t}\n+\n+\tproject {\n+\t\tdynamicAnalysis  = \"reuseReports\"\n+\t\twithProjectProperties { props ->\n+\t\t\tprops[\"sonar.core.codeCoveragePlugin\"] = \"jacoco\"\n+\t\t\tprops[\"sonar.jacoco.reportPath\"]       = \"${buildDir.name}/jacoco.exec\"\n+\t\t}\n+\t}\n+\n+\tlogger.info(\"Sonar parameters used: server.url='${server.url}'; database.url='${database.url}'; database.driverClassName='${database.driverClassName}'; database.username='${database.username}'\")\n+}\n+\n+task api(type: Javadoc) {\n+\tgroup = 'Documentation'\n+\tdescription = 'Generates aggregated Javadoc API documentation.'\n+\ttitle = \"${rootProject.description} ${version} API\"\n+\toptions.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED\n+\toptions.author = true\n+\toptions.header = rootProject.description\n+\toptions.overview = 'src/api/overview.html'\n+\tsource subprojects.collect { project ->\n+\t\tproject.sourceSets.main.allJava\n+\t}\n+\tdestinationDir = new File(buildDir, \"api\")\n+\tclasspath = files(subprojects.collect { project ->\n+\t\tproject.sourceSets.main.compileClasspath\n+\t})\n+}\n+\n+task schemaZip(type: Zip) {\n+\tgroup = 'Distribution'\n+\tclassifier = 'schema'\n+\tdescription = \"Builds -${classifier} archive containing all \" +\n+\t\t\"XSDs for deployment at static.springframework.org/schema.\"\n+\n+\tsubprojects.each { subproject ->\n+\t\tdef Properties schemas = new Properties();\n+\t\tdef shortName = subproject.name.replaceFirst(\"${rootProject.name}-\", '')\n+\t\tif (subproject.name.endsWith(\"-core\")) {\n+\t\t\tshortName = ''\n+\t\t}\n+\n+\t\tsubproject.sourceSets.main.resources.find {\n+\t\t\tit.path.endsWith('META-INF/spring.schemas')\n+\t\t}?.withInputStream { schemas.load(it) }\n+\n+\t\tfor (def key : schemas.keySet()) {\n+\t\t\tFile xsdFile = subproject.sourceSets.main.resources.find {\n+\t\t\t\tit.path.endsWith(schemas.get(key))\n+\t\t\t}\n+\t\t\tassert xsdFile != null\n+\t\t\tinto (\"integration/${shortName}\") {\n+\t\t\t\tfrom xsdFile.path\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+task docsZip(type: Zip) {\n+\t\tgroup = 'Distribution'\n+\t\tclassifier = 'docs'\n+\t\tdescription = \"Builds -${classifier} archive containing api and reference \" +\n+\t\t\t\"for deployment at static.springframework.org/spring-integration/docs.\"\n+\n+\t\tfrom('src/dist') {\n+\t\t\tinclude 'changelog.txt'\n+\t\t}\n+\n+\t\tfrom (api) {\n+\t\t\tinto 'api'\n+\t\t}\n+\n+\t\tfrom (reference) {\n+\t\t\tinto 'reference'\n+\t\t}\n+}\n+\n+task distZip(type: Zip, dependsOn: [docsZip, schemaZip]) {\n+\tgroup = 'Distribution'\n+\tclassifier = 'dist'\n+\tdescription = \"Builds -${classifier} archive, containing all jars and docs, \" +\n+\t\t\"suitable for community download page.\"\n+\n+\text.baseDir = \"${project.name}-${project.version}\";\n+\n+\tfrom('src/dist') {\n+\t\tinclude 'readme.txt'\n+\t\tinclude 'license.txt'\n+\t\tinclude 'notice.txt'\n+\t\tinto \"${baseDir}\"\n+\t}\n+\n+\tfrom(zipTree(docsZip.archivePath)) {\n+\t\tinto \"${baseDir}/docs\"\n+\t}\n+\n+\tfrom(zipTree(schemaZip.archivePath)) {\n+\t\tinto \"${baseDir}/schema\"\n+\t}\n+\n+\tsubprojects.each { subproject ->\n+\t\tinto (\"${baseDir}/libs\") {\n+\t\t\tfrom subproject.jar\n+\t\t\tfrom subproject.sourcesJar\n+\t\t\tfrom subproject.javadocJar\n+\t\t}\n+\t}\n+}\n+\n+// Create an optional \"with dependencies\" distribution.\n+// Not published by default; only for use when building from source.\n+task depsZip(type: Zip, dependsOn: distZip) { zipTask ->\n+\tgroup = 'Distribution'\n+\tclassifier = 'dist-with-deps'\n+\tdescription = \"Builds -${classifier} archive, containing everything \" +\n+\t\t\"in the -${distZip.classifier} archive plus all dependencies.\"\n+\n+\tfrom zipTree(distZip.archivePath)\n+\n+\tgradle.taskGraph.whenReady { taskGraph ->\n+\t\tif (taskGraph.hasTask(\":${zipTask.name}\")) {\n+\t\t\tdef projectNames = rootProject.subprojects*.name\n+\t\t\tdef artifacts = new HashSet()\n+\t\t\tsubprojects.each { subproject ->\n+\t\t\t\tsubproject.configurations.runtime.resolvedConfiguration.resolvedArtifacts.each { artifact ->\n+\t\t\t\t\tdef dependency = artifact.moduleVersion.id\n+\t\t\t\t\tif (!projectNames.contains(dependency.name)) {\n+\t\t\t\t\t\tartifacts << artifact.file\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tzipTask.from(artifacts) {\n+\t\t\t\tinto \"${distZip.baseDir}/deps\"\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+artifacts {\n+\tarchives distZip\n+\tarchives docsZip\n+\tarchives schemaZip\n+}\n+\n+task dist(dependsOn: assemble) {\n+\tgroup = 'Distribution'\n+\tdescription = 'Builds -dist, -docs and -schema distribution archives.'\n+}\n+\n+task wrapper(type: Wrapper) {\n+\tdescription = 'Generates gradlew[.bat] scripts'\n+\tgradleVersion = '1.0-rc-3'", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 318, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2012-09-28T01:44:46Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714061", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714061"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714061"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714062", "pull_request_review_id": null, "id": 1714062, "diff_hunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.config.xml;\n+\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.xml.ParserContext;\n+import org.springframework.integration.splunk.support.SplunkExecutor;\n+import org.springframework.util.Assert;\n+import org.w3c.dom.Element;\n+\n+/**\n+ * Contains various utility methods for parsing Splunk Adapter\n+ * specific namesspace elements as well as for the generation of the the", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkParserUtils.java", "position": null, "original_position": 27, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2012-09-28T01:44:56Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714062", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714062"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714062"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714064", "pull_request_review_id": null, "id": 1714064, "diff_hunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.config.xml;\n+\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;\n+import org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;\n+import org.springframework.beans.factory.xml.ParserContext;\n+import org.springframework.integration.splunk.entity.SplunkServer;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Element;\n+\n+/**\n+ * Splunk server element parser.\n+ *\n+ * The XML element is like this:\n+ * <pre>\n+ * {@code\n+ * <splunk:server id=\"splunkServer\" host=\"host\" port=\"8089\" userName=\"admin\" password=\"password\" />\n+ * }\n+ *\n+ * @author Jarred Li\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkServerParser extends AbstractSimpleBeanDefinitionParser {\n+\n+\t@Override\n+\tpublic Class<?> getBeanClass(Element element) {\n+\t\treturn SplunkServer.class;\n+\t}\n+\n+\t@Override\n+\tprotected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) {\n+\t\tsuper.doParse(element, parserContext, builder);\n+\n+\t\tString scope = element.getAttribute(BeanDefinitionParserDelegate.SCOPE_ATTRIBUTE);\n+\t\tif (StringUtils.hasText(scope)) {\n+\t\t\tbuilder.setScope(scope);\n+\t\t}\n+\n+\t\tString host = element.getAttribute(\"host\");", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkServerParser.java", "position": null, "original_position": 55, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2012-09-28T01:45:07Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714064", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714064"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714064"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714069", "pull_request_review_id": null, "id": 1714069, "diff_hunk": "@@ -0,0 +1,472 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.support;\n+\n+import java.io.InputStream;\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.integration.splunk.core.Connection;\n+import org.springframework.integration.splunk.core.ConnectionFactory;\n+import org.springframework.integration.splunk.core.DataReader;\n+import org.springframework.integration.splunk.entity.SplunkData;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+import com.splunk.Args;\n+import com.splunk.Job;\n+import com.splunk.ResultsReader;\n+import com.splunk.ResultsReaderXml;\n+import com.splunk.SavedSearch;\n+import com.splunk.SavedSearchCollection;\n+import com.splunk.Service;\n+\n+/**\n+ * Data reader to search data from Splunk.\n+ * \n+ * There are 5 ways to search data in the Splunk: saved search, blocking search, \n+ * non blocking search, realtime search, export search.", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkDataReader.java", "position": null, "original_position": 49, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2012-09-28T01:46:03Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714069", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714069"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714069"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714107", "pull_request_review_id": null, "id": 1714107, "diff_hunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.support;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.springframework.integration.splunk.core.Connection;\n+import org.springframework.integration.splunk.entity.SplunkServer;\n+\n+import com.splunk.Service;\n+\n+/**\n+ * Connection to Splunk service\n+ * \n+ * @author Jarred Li\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkConnection implements Connection<Service> {\n+\n+\tprivate Service service;\n+\n+\tpublic SplunkConnection(SplunkServer splunkServer) {\n+\t\tMap<String, Object> args = new HashMap<String, Object>();\n+\t\tif (splunkServer.getHost() != null) {\n+\t\t\targs.put(\"host\", splunkServer.getHost());\n+\t\t}\n+\t\tif (splunkServer.getPort() != 0) {\n+\t\t\targs.put(\"port\", splunkServer.getPort());\n+\t\t}\n+\t\tif (splunkServer.getScheme() != null) {\n+\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n+\t\t}\n+\t\tif (splunkServer.getApp() != null) {\n+\t\t\targs.put(\"app\", splunkServer.getApp());\n+\t\t}\n+\t\tif (splunkServer.getOwner() != null) {\n+\t\t\targs.put(\"owner\", splunkServer.getOwner());\n+\t\t}\n+\n+\t\targs.put(\"username\", splunkServer.getUserName());\n+\t\targs.put(\"password\", splunkServer.getPassword());\n+\t\tservice = Service.connect(args);\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.integration.splunk.core.IService#close()\n+\t */\n+\tpublic void close() {\n+\t\tservice.logout();\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.integration.splunk.core.IService#isOpen()\n+\t */\n+\tpublic boolean isOpen() {\n+\t\tboolean result = true;\n+\t\ttry {\n+\t\t\tservice.getToken();\n+\t\t} catch (Throwable t) {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkConnection.java", "position": null, "original_position": 74, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Hi Gunnar, could you please explain this comment a little? I am not very clear about it.\n", "created_at": "2012-09-28T01:52:55Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714107", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714107"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714107"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714164", "pull_request_review_id": null, "id": 1714164, "diff_hunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.support;\n+\n+import java.io.OutputStream;\n+import java.io.OutputStreamWriter;\n+import java.io.Writer;\n+import java.net.Socket;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.integration.splunk.core.Connection;\n+import org.springframework.integration.splunk.core.DataWriter;\n+import org.springframework.integration.splunk.core.ConnectionFactory;\n+import org.springframework.integration.splunk.entity.SplunkData;\n+\n+import com.splunk.Args;\n+import com.splunk.Index;\n+import com.splunk.Receiver;\n+import com.splunk.Service;\n+\n+/**\n+ * Data writer to write data into Splunk. There are 3 ways to write data:\n+ * REST submit, TCP socket and HTTP stream.\n+ * \n+ * @author Jarred Li\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkDataWriter implements DataWriter, InitializingBean {\n+\n+\tprivate static final Log logger = LogFactory.getLog(SplunkDataWriter.class);\n+\n+\tprivate ConnectionFactory<Service> connectionFactory;\n+\n+\tprivate String sourceType;\n+\n+\tprivate String source;\n+\n+\tprivate String index;\n+\n+\tprivate IngestType ingest = IngestType.stream; //tcp, stream, submit\n+\n+\tprivate int tcpPort;\n+\n+\tprivate String host;\n+\n+\tprivate String hostRegex;\n+\n+\tpublic SplunkDataWriter(ConnectionFactory<Service> f) {\n+\t\tthis.connectionFactory = f;\n+\t}\n+\n+\tpublic void write(SplunkData data) throws Exception {\n+\t\tlogger.debug(\"write message to splunk:\" + data);\n+\n+\t\tConnection<Service> connection = connectionFactory.getConnection();\n+\t\tService service = connection.getTarget();\n+\t\tIndex indexObject = null;\n+\t\tReceiver receiver = null;\n+\t\tOutputStream ostream;\n+\t\tSocket socket;\n+\t\tWriter writer = null;\n+\n+\t\tArgs args = new Args();\n+\t\tif (sourceType != null) {\n+\t\t\targs.put(\"sourcetype\", sourceType);\n+\t\t}\n+\t\tif (source != null) {\n+\t\t\targs.put(\"source\", source);\n+\t\t}\n+\n+\t\tif (host != null) {\n+\t\t\targs.put(\"host\", host);\n+\t\t}\n+\n+\t\tif (hostRegex != null) {\n+\t\t\targs.put(\"host_regex\", hostRegex);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tif (index != null) {\n+\t\t\t\tindexObject = service.getIndexes().get(index);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\treceiver = service.getReceiver();\n+\t\t\t}\n+\n+\t\t\tif ((ingest.equals(IngestType.stream) || ingest.equals(IngestType.tcp))) {\n+\t\t\t\tif (ingest.equals(\"stream\")) {\n+\t\t\t\t\tif (indexObject != null)\n+\t\t\t\t\t\tsocket = indexObject.attach(args);\n+\t\t\t\t\telse\n+\t\t\t\t\t\tsocket = receiver.attach(args);\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tsocket = service.open(tcpPort);\n+\t\t\t\t}\n+\t\t\t\tostream = socket.getOutputStream();\n+\t\t\t\twriter = new OutputStreamWriter(ostream, \"UTF8\");\n+\t\t\t}\n+\n+\t\t\tif ((ingest.equals(IngestType.stream) || ingest.equals(IngestType.tcp))) {\n+\t\t\t\twriter.write(data.toString());\n+\t\t\t\twriter.flush();\n+\t\t\t\twriter.close();\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tif (index != null) {\n+\t\t\t\t\tindexObject.submit(args, data.toString());\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\treceiver.submit(args, data.toString());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} finally {\n+\t\t\tconnection.close();\n+\t\t}\n+\n+\t}\n+\n+\n+\tpublic void setSourceType(String sourceType) {\n+\t\tthis.sourceType = sourceType;\n+\t}\n+\n+\tpublic void setSource(String source) {\n+\t\tthis.source = source;\n+\t}\n+\n+\tpublic void setIndex(String index) {\n+\t\tthis.index = index;\n+\t}\n+\n+\tpublic void setIngest(IngestType ingest) {\n+\t\tthis.ingest = ingest;\n+\t}\n+\n+\tpublic void setTcpPort(int tcpPort) {\n+\t\tthis.tcpPort = tcpPort;\n+\t}\n+\n+\tpublic void setHost(String host) {\n+\t\tthis.host = host;\n+\t}\n+\n+\tpublic void setHostRegex(String hostRegex) {\n+\t\tthis.hostRegex = hostRegex;\n+\t}\n+\n+\n+\tpublic String getSourceType() {\n+\t\treturn sourceType;\n+\t}\n+\n+\tpublic String getSource() {\n+\t\treturn source;\n+\t}\n+\n+\tpublic String getIndex() {\n+\t\treturn index;\n+\t}\n+\n+\tpublic IngestType getIngest() {\n+\t\treturn ingest;\n+\t}\n+\n+\tpublic int getTcpPort() {\n+\t\treturn tcpPort;\n+\t}\n+\n+\tpublic String getHost() {\n+\t\treturn host;\n+\t}\n+\n+\tpublic String getHostRegex() {\n+\t\treturn hostRegex;\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.beans.factory.InitializingBean#afterPropertiesSet()\n+\t */\n+\tpublic void afterPropertiesSet() throws Exception {\n+\n+\t}\n+\n+\n+\tpublic static enum IngestType {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkDataWriter.java", "position": null, "original_position": 202, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2012-09-28T02:06:01Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714164", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714164"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714164"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714199", "pull_request_review_id": null, "id": 1714199, "diff_hunk": "@@ -0,0 +1,2 @@\n+http\\://www.springframework.org/schema/integration/splunk/spring-integration-splunk-2.2.xsd=org/springframework/integration/splunk/config/xml/spring-integration-splunk-2.2.xsd", "path": "spring-integration-splunk/src/main/resources/META-INF/spring.schemas", "position": null, "original_position": 1, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2012-09-28T02:20:28Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714199", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714199"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714199"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714505", "pull_request_review_id": null, "id": 1714505, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'\n+}\n+\n+dependencies {\n+\tcompile fileTree(dir:\"lib\", include: \"*.jar\")\n+\tcompile \"org.springframework.integration:spring-integration-core:$springIntegrationVersion\"\n+\tcompile \"org.springframework:spring-tx:$springVersion\"\n+\tcompile(\"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\", optional)\n+\tcompile(\"org.springframework.amqp:spring-rabbit:$springAmqpVersion\") {", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 60, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2012-09-28T04:00:49Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714505", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714505"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714505"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714506", "pull_request_review_id": null, "id": 1714506, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'\n+}\n+\n+dependencies {\n+\tcompile fileTree(dir:\"lib\", include: \"*.jar\")\n+\tcompile \"org.springframework.integration:spring-integration-core:$springIntegrationVersion\"\n+\tcompile \"org.springframework:spring-tx:$springVersion\"\n+\tcompile(\"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\", optional)\n+\tcompile(\"org.springframework.amqp:spring-rabbit:$springAmqpVersion\") {\n+\t\texclude group: 'org.springframework', module: 'spring-aop'\n+\t\texclude group: 'org.springframework', module: 'spring-beans'\n+\t\texclude group: 'org.springframework', module: 'spring-context'\n+\t\texclude group: 'org.springframework', module: 'spring-core'\n+\t\texclude group: 'org.springframework', module: 'spring-oxm'\n+\t\texclude group: 'org.springframework', module: 'spring-tx'\n+\t}\n+\tcompile \"commons-lang:commons-lang:$commonsLangVersion\"\n+\tcompile \"commons-pool:commons-pool:$commonsPoolVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-stream:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-jdbc:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"\n+\ttestCompile \"org.springframework:spring-jdbc:$springVersion\"", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 73, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2012-09-28T04:00:55Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714506", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714506"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714506"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714507", "pull_request_review_id": null, "id": 1714507, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 52, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2012-09-28T04:01:03Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714507", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714507"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714507"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714508", "pull_request_review_id": null, "id": 1714508, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'\n+\tjacksonVersion = '1.9.2'\n+\tjavaxActivationVersion = '1.1.1'\n+\tjunitVersion = '4.8.2'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion = '1.9.0'\n+\t// When changing Spring Versions - don't forget to update bundlor ranges\n+\tspringVersion = '3.1.1.RELEASE'\n+\tspringIntegrationVersion = '2.1.2.RELEASE'\n+\tspringAmqpVersion = '1.1.0.RELEASE'\n+\tspringDataMongoVersion = '1.1.0.M1'\n+\tspringDataRedisVersion = '1.0.0.RELEASE'\n+\tspringGemfireVersion = '1.1.1.RELEASE'\n+\tspringSecurityVersion = '3.1.0.RELEASE'\n+\tspringSocialTwitterVersion = '1.0.1.RELEASE'\n+\tspringWsVersion = '2.0.3.RELEASE'\n+\tcommonsLangVersion = '2.6'\n+\tcommonsPoolVersion = '1.6'\n+\tderbyVersion = '10.9.1.0'\n+\tdbcpVersion = '1.4'\n+}", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 53, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2012-09-28T04:01:15Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714508", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714508"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714508"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714509", "pull_request_review_id": null, "id": 1714509, "diff_hunk": "@@ -0,0 +1,322 @@\n+description = 'Spring Integration Splunk Adapter'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'http://repo.springsource.org/plugins-snapshot' }\n+\t}\n+\tdependencies {\n+\t\tclasspath 'org.springframework.build.gradle:docbook-reference-plugin:0.1.5'\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' } // for bundlor\n+}\n+\n+// ensure JDK 5 compatibility (GRADLE-18; INT-1578)\n+sourceCompatibility=1.5\n+targetCompatibility=1.5\n+\n+ext {\n+\taspectjVersion = '1.6.8'\n+\tcglibVersion = '2.2'\n+\tcommonsNetVersion = '3.0.1'\n+\teasymockVersion = '2.3'\n+\tgroovyVersion = '1.8.5'", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 33, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2012-09-28T04:01:22Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714509", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714509"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714509"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714531", "pull_request_review_id": null, "id": 1714531, "diff_hunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.support;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.springframework.integration.splunk.core.Connection;\n+import org.springframework.integration.splunk.entity.SplunkServer;\n+\n+import com.splunk.Service;\n+\n+/**\n+ * Connection to Splunk service\n+ * \n+ * @author Jarred Li\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkConnection implements Connection<Service> {\n+\n+\tprivate Service service;\n+\n+\tpublic SplunkConnection(SplunkServer splunkServer) {\n+\t\tMap<String, Object> args = new HashMap<String, Object>();\n+\t\tif (splunkServer.getHost() != null) {\n+\t\t\targs.put(\"host\", splunkServer.getHost());\n+\t\t}\n+\t\tif (splunkServer.getPort() != 0) {\n+\t\t\targs.put(\"port\", splunkServer.getPort());\n+\t\t}\n+\t\tif (splunkServer.getScheme() != null) {\n+\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n+\t\t}\n+\t\tif (splunkServer.getApp() != null) {\n+\t\t\targs.put(\"app\", splunkServer.getApp());\n+\t\t}\n+\t\tif (splunkServer.getOwner() != null) {\n+\t\t\targs.put(\"owner\", splunkServer.getOwner());\n+\t\t}\n+\n+\t\targs.put(\"username\", splunkServer.getUserName());\n+\t\targs.put(\"password\", splunkServer.getPassword());\n+\t\tservice = Service.connect(args);\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.integration.splunk.core.IService#close()\n+\t */\n+\tpublic void close() {\n+\t\tservice.logout();\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.integration.splunk.core.IService#isOpen()\n+\t */\n+\tpublic boolean isOpen() {\n+\t\tboolean result = true;\n+\t\ttry {\n+\t\t\tservice.getToken();\n+\t\t} catch (Throwable t) {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkConnection.java", "position": null, "original_position": 74, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Just some formatting standard we follow - The _catch_ is on a new line. Another example are if-then-else statements:\n\n```\nif {\n    ...\n}\nelse {\n    ...\n```\n\n   }\n\nFor some other conventions see:\n\nhttps://github.com/SpringSource/spring-framework/blob/master/CONTRIBUTING.md#mind-the-whitespace\n", "created_at": "2012-09-28T04:13:51Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714531", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714531"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714531"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714626", "pull_request_review_id": null, "id": 1714626, "diff_hunk": "@@ -0,0 +1,2274 @@\n+/*\n+ * Copyright 2011-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.splunk.entity;\n+\n+import java.io.Serializable;\n+import java.util.Date;\n+import java.util.Map;\n+\n+import org.apache.commons.lang.time.FastDateFormat;\n+\n+/**\n+ * Splunk data entity\n+ * \n+ * @author Jarred Li\n+ * @author Damien Dallimore damien@dtdsoftware.com\n+ * @since 1.0\n+ * \n+ */\n+public class SplunkData implements Serializable {\n+\n+\tprivate static final long serialVersionUID = -7369254824093658523L;\n+\n+\n+\tprivate Map<String, String> eventData;\n+\n+\t/**\n+\t * Contents of the event message\n+\t */\n+\tprivate StringBuffer eventMessage;\n+\n+\t/**\n+\t * Whether or not to put quotes around values\n+\t */\n+\tprivate boolean quoteValues = true;\n+\n+\t/**\n+\t * Whether or not to add a date to the event string\n+\t */\n+\tprivate boolean useInternalDate = true;\n+\n+\t/**\n+\t * default key value delimiter\n+\t */\n+\tprivate static final String KVDELIM = \"=\";\n+\t/**\n+\t * default pair delimiter\n+\t */\n+\tprivate static final String PAIRDELIM = \" \";\n+\t/**\n+\t * default quote char\n+\t */\n+\tprivate static final char QUOTE = '\"';\n+\t/**\n+\t * default date format is using internal generated date\n+\t */\n+\tprivate static final String DATEFORMATPATTERN = \"yyyy-MM-dd HH:mm:ss:SSSZ\";\n+\t/**\n+\t * Date Formatter instance\n+\t */\n+\tprivate static FastDateFormat DATEFORMATTER = FastDateFormat.getInstance(DATEFORMATPATTERN);\n+\n+\t/**\n+\t * Event prefix fields\n+\t */\n+\tprivate static final String PREFIX_NAME = \"name\";\n+\tprivate static final String PREFIX_EVENT_ID = \"event_id\";\n+\n+\t/**\n+\t * Java Throwable type fields\n+\t */\n+\tprivate static final String THROWABLE_CLASS = \"throwable_class\";\n+\tprivate static final String THROWABLE_MESSAGE = \"throwable_message\";\n+\tprivate static final String THROWABLE_STACKTRACE_ELEMENTS = \"stacktrace_elements\";\n+\n+\t/**\n+\t * Splunk Common Information Model(CIM) Fields\n+\t */\n+\n+\t// ------------------\n+\t// Account management\n+\t// ------------------\n+\n+\t/**\n+\t * The domain containing the user that is affected by the account management\n+\t * event.\n+\t */\n+\tpublic static String AC_MANAGEMENT_DEST_NT_DOMAIN = \"dest_nt_domain\";\n+\t/**", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/entity/SplunkData.java", "position": 101, "original_position": 101, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Sure. I can work with Splunk team on this code refactor later.\n", "created_at": "2012-09-28T04:49:19Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714626", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714626"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1714626"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1715443", "pull_request_review_id": null, "id": 1715443, "diff_hunk": "@@ -0,0 +1,68 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<book xmlns=\"http://docbook.org/ns/docbook\" version=\"5.0\"", "path": "spring-integration-splunk/src/reference/docbook/index.xml", "position": 2, "original_position": 2, "commit_id": "064a5e5760a177b8f15c29ecbb7a88f7a8c8f7d1", "original_commit_id": "6025d1a031472eedff3b6b1683e9ff15bcffb387", "user": {"login": "leejianwei", "id": 1008121, "avatar_url": "https://avatars1.githubusercontent.com/u/1008121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejianwei", "html_url": "https://github.com/leejianwei", "followers_url": "https://api.github.com/users/leejianwei/followers", "following_url": "https://api.github.com/users/leejianwei/following{/other_user}", "gists_url": "https://api.github.com/users/leejianwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejianwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejianwei/subscriptions", "organizations_url": "https://api.github.com/users/leejianwei/orgs", "repos_url": "https://api.github.com/users/leejianwei/repos", "events_url": "https://api.github.com/users/leejianwei/events{/privacy}", "received_events_url": "https://api.github.com/users/leejianwei/received_events", "type": "User", "site_admin": false}, "body": "Thanks for reminder. I also update the reference document.\n", "created_at": "2012-09-28T08:19:13Z", "updated_at": "2012-09-29T00:25:26Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1715443", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1715443"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/8#discussion_r1715443"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1715443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711727", "pull_request_review_id": null, "id": 1711727, "diff_hunk": "@@ -0,0 +1,212 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.springframework.integration</groupId>\n+  <artifactId>spring-integration-aws</artifactId>\n+  <version>1.0.0.BUILD-SNAPSHOT</version>\n+  <name>Spring Integration Amazon Web Services Support</name>\n+  <licenses>\n+    <license>\n+      <name>The Apache Software License, Version 2.0</name>\n+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+\t<prerequisites>\n+\t\t<maven>2.2.1</maven>\n+\t</prerequisites>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>src/main/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </resource>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </resource>\n+    </resources>\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </testResource>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </testResource>\n+    </testResources>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>1.6</source>\n+          <target>1.6</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <includes>\n+            <include>**/*Tests.java</include>\n+          </includes>\n+          <excludes>\n+            <exclude>**/*Abstract*.java</exclude>\n+            <exclude>**/*AWSTests.java</exclude>\n+          </excludes>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  <repositories>\n+    <repository>\n+\t\t<id>springsource-libs-milestone</id>\n+\t\t<name>Spring Framework Maven Milestone Repository</name>\n+\t\t<url>https://repo.springsource.org/libs-milestone</url>\n+\t</repository>\n+  </repositories>\n+  <dependencies>\n+    <dependency>\n+\t\t<groupId>com.amazonaws</groupId>\n+\t\t<artifactId>aws-java-sdk</artifactId>\n+\t\t<version>1.3.12</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>commons-codec</groupId>\n+\t\t<artifactId>commons-codec</artifactId>\n+\t\t<version>1.5</version>\n+\t\t<scope>compile</scope>\n+    </dependency>\n+\n+   <dependency>\n+\t\t<groupId>commons-logging</groupId>\n+\t\t<artifactId>commons-logging</artifactId>\n+\t\t<version>1.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <version>2.0.1</version>\n+      <scope>compile</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>javax.mail</groupId>\n+\t\t<artifactId>mail</artifactId>\n+\t\t<version>1.4.4</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.springframework.integration</groupId>\n+\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t<version>2.2.0.BUILD-SNAPSHOT</version>", "path": "spring-integration-aws/pom.xml", "position": null, "original_position": 124, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "ec5942e08b2de7a7e11af29d3445b889a6106d51", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "You can probably rely on 2.2.RC1\n", "created_at": "2012-09-27T20:39:24Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1711727", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711727"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1711727"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711731", "pull_request_review_id": null, "id": 1711731, "diff_hunk": "@@ -0,0 +1,212 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.springframework.integration</groupId>\n+  <artifactId>spring-integration-aws</artifactId>\n+  <version>1.0.0.BUILD-SNAPSHOT</version>\n+  <name>Spring Integration Amazon Web Services Support</name>\n+  <licenses>\n+    <license>\n+      <name>The Apache Software License, Version 2.0</name>\n+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+\t<prerequisites>\n+\t\t<maven>2.2.1</maven>\n+\t</prerequisites>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>src/main/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </resource>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </resource>\n+    </resources>\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </testResource>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </testResource>\n+    </testResources>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>1.6</source>\n+          <target>1.6</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <includes>\n+            <include>**/*Tests.java</include>\n+          </includes>\n+          <excludes>\n+            <exclude>**/*Abstract*.java</exclude>\n+            <exclude>**/*AWSTests.java</exclude>\n+          </excludes>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  <repositories>\n+    <repository>\n+\t\t<id>springsource-libs-milestone</id>\n+\t\t<name>Spring Framework Maven Milestone Repository</name>\n+\t\t<url>https://repo.springsource.org/libs-milestone</url>\n+\t</repository>\n+  </repositories>\n+  <dependencies>\n+    <dependency>\n+\t\t<groupId>com.amazonaws</groupId>\n+\t\t<artifactId>aws-java-sdk</artifactId>\n+\t\t<version>1.3.12</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>commons-codec</groupId>\n+\t\t<artifactId>commons-codec</artifactId>\n+\t\t<version>1.5</version>\n+\t\t<scope>compile</scope>\n+    </dependency>\n+\n+   <dependency>\n+\t\t<groupId>commons-logging</groupId>\n+\t\t<artifactId>commons-logging</artifactId>\n+\t\t<version>1.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <version>2.0.1</version>\n+      <scope>compile</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>javax.mail</groupId>\n+\t\t<artifactId>mail</artifactId>\n+\t\t<version>1.4.4</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.springframework.integration</groupId>\n+\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t<version>2.2.0.BUILD-SNAPSHOT</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+\n+\t<dependency>\n+\t    <groupId>org.codehaus.jackson</groupId>\n+\t    <artifactId>jackson-core-asl</artifactId>\n+\t    <version>1.8.3</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.codehaus.jackson</groupId>\n+\t    <artifactId>jackson-mapper-asl</artifactId>\n+\t    <version>1.8.3</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t\t<groupId>org.apache.httpcomponents</groupId>\n+\t\t<artifactId>httpclient</artifactId>\n+\t\t<version>4.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.apache.httpcomponents</groupId>\n+\t    <artifactId>httpcore</artifactId>\n+\t    <version>4.1.1</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<!-- No compile time dependency, just using the MimeMessageHelper in tests -->\n+\t<dependency>\n+\t    <groupId>org.springframework</groupId>\n+\t    <artifactId>spring-context-support</artifactId>\n+\t    <version>3.1.0.RELEASE</version>\n+\t    <scope>test</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.springframework.integration</groupId>\n+\t    <artifactId>spring-integration-test</artifactId>\n+\t    <version>2.2.0.BUILD-SNAPSHOT</version>\n+\t    <scope>test</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.hamcrest</groupId>\n+\t\t<artifactId>hamcrest-core</artifactId>\n+\t\t<version>1.1</version>\n+\t\t<scope>test</scope>\n+\t</dependency>\n+\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit-dep</artifactId>\n+      <version>4.8.2</version>\n+      <scope>test</scope>", "path": "spring-integration-aws/pom.xml", "position": null, "original_position": 183, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "ec5942e08b2de7a7e11af29d3445b889a6106d51", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Update version\n", "created_at": "2012-09-27T20:39:46Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1711731", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711731"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1711731"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711735", "pull_request_review_id": null, "id": 1711735, "diff_hunk": "@@ -0,0 +1,212 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.springframework.integration</groupId>\n+  <artifactId>spring-integration-aws</artifactId>\n+  <version>1.0.0.BUILD-SNAPSHOT</version>\n+  <name>Spring Integration Amazon Web Services Support</name>\n+  <licenses>\n+    <license>\n+      <name>The Apache Software License, Version 2.0</name>\n+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+\t<prerequisites>\n+\t\t<maven>2.2.1</maven>\n+\t</prerequisites>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>src/main/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </resource>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </resource>\n+    </resources>\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </testResource>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </testResource>\n+    </testResources>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>1.6</source>\n+          <target>1.6</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <includes>\n+            <include>**/*Tests.java</include>\n+          </includes>\n+          <excludes>\n+            <exclude>**/*Abstract*.java</exclude>\n+            <exclude>**/*AWSTests.java</exclude>\n+          </excludes>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  <repositories>\n+    <repository>\n+\t\t<id>springsource-libs-milestone</id>\n+\t\t<name>Spring Framework Maven Milestone Repository</name>\n+\t\t<url>https://repo.springsource.org/libs-milestone</url>\n+\t</repository>\n+  </repositories>\n+  <dependencies>\n+    <dependency>\n+\t\t<groupId>com.amazonaws</groupId>\n+\t\t<artifactId>aws-java-sdk</artifactId>\n+\t\t<version>1.3.12</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>commons-codec</groupId>\n+\t\t<artifactId>commons-codec</artifactId>\n+\t\t<version>1.5</version>\n+\t\t<scope>compile</scope>\n+    </dependency>\n+\n+   <dependency>\n+\t\t<groupId>commons-logging</groupId>\n+\t\t<artifactId>commons-logging</artifactId>\n+\t\t<version>1.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <version>2.0.1</version>\n+      <scope>compile</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>javax.mail</groupId>\n+\t\t<artifactId>mail</artifactId>\n+\t\t<version>1.4.4</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.springframework.integration</groupId>\n+\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t<version>2.2.0.BUILD-SNAPSHOT</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+\n+\t<dependency>\n+\t    <groupId>org.codehaus.jackson</groupId>\n+\t    <artifactId>jackson-core-asl</artifactId>\n+\t    <version>1.8.3</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.codehaus.jackson</groupId>\n+\t    <artifactId>jackson-mapper-asl</artifactId>\n+\t    <version>1.8.3</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t\t<groupId>org.apache.httpcomponents</groupId>\n+\t\t<artifactId>httpclient</artifactId>\n+\t\t<version>4.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.apache.httpcomponents</groupId>\n+\t    <artifactId>httpcore</artifactId>\n+\t    <version>4.1.1</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<!-- No compile time dependency, just using the MimeMessageHelper in tests -->\n+\t<dependency>\n+\t    <groupId>org.springframework</groupId>\n+\t    <artifactId>spring-context-support</artifactId>\n+\t    <version>3.1.0.RELEASE</version>\n+\t    <scope>test</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.springframework.integration</groupId>\n+\t    <artifactId>spring-integration-test</artifactId>\n+\t    <version>2.2.0.BUILD-SNAPSHOT</version>\n+\t    <scope>test</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.hamcrest</groupId>\n+\t\t<artifactId>hamcrest-core</artifactId>\n+\t\t<version>1.1</version>\n+\t\t<scope>test</scope>\n+\t</dependency>\n+\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit-dep</artifactId>\n+      <version>4.8.2</version>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.mockito</groupId>\n+\t\t<artifactId>mockito-all</artifactId>\n+\t\t<version>1.9.0</version>\n+\t\t<scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.mockito</groupId>\n+\t\t<artifactId>mockito-core</artifactId>\n+\t\t<version>1.9.0</version>\n+\t\t<scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.springframework</groupId>\n+\t\t<artifactId>spring-test</artifactId>\n+\t\t<version>3.1.0.RELEASE</version>\n+\t\t<scope>test</scope>", "path": "spring-integration-aws/pom.xml", "position": null, "original_position": 204, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "ec5942e08b2de7a7e11af29d3445b889a6106d51", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Update Spring version\n", "created_at": "2012-09-27T20:40:06Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1711735", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711735"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1711735"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711765", "pull_request_review_id": null, "id": 1711765, "diff_hunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.config.xml;\n+\n+\n+import static org.springframework.integration.aws.core.CommonConstants.ACCESS_KEY;\n+import static org.springframework.integration.aws.core.CommonConstants.PROPERTIES_FILE;\n+import static org.springframework.integration.aws.core.CommonConstants.SECRET_KEY;\n+\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.support.BeanDefinitionReaderUtils;\n+import org.springframework.beans.factory.xml.ParserContext;\n+import org.springframework.integration.aws.core.AmazonWSCredentials;\n+import org.springframework.integration.aws.core.BasicAWSCredentials;\n+import org.springframework.integration.aws.core.PropertiesAWSCredentials;\n+import org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Element;\n+\n+/**\n+ * The Abstract AWS inbound channel adapter parser\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public abstract class AbstractAWSInboundChannelAdapterParser extends\n+\t\tAbstractPollingInboundChannelAdapterParser {\n+\n+\t/**\n+\t * Registers the {@link AmazonWSCredentials} bean with the current ApplicationContext\n+\t * @param element\n+\t * @param parserContext\n+\t * @return\n+\t */\n+\tprotected String registerAmazonWSCredentials(Element element,ParserContext parserContext) {\n+\t\tString accessKey = element.getAttribute(ACCESS_KEY);\n+\t\tString secretKey = element.getAttribute(SECRET_KEY);", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/config/xml/AbstractAWSInboundChannelAdapterParser.java", "position": null, "original_position": 53, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "ec5942e08b2de7a7e11af29d3445b889a6106d51", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "I think, we need to refactor authentication. E.g. other adapters: Twitter has the twitterTemplate, XMPP has the xmpp-connection namespace element...\n\nMaybe we should just directly expose the **AwsCredentials** interface  \n- http://docs.amazonwebservices.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/AWSCredentials.html - Therefore users pass-in AwsCredentials via a \"credentials-ref\" attribute\n\nOtherwise users may have to pass the same information multiple times across adapter\n", "created_at": "2012-09-27T20:43:30Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1711765", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711765"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1711765"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1711765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1712786", "pull_request_review_id": null, "id": 1712786, "diff_hunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.core;\n+\n+/**\n+ * Common constants that would be used in the Project\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public interface CommonConstants {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/core/CommonConstants.java", "position": null, "original_position": 25, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "ec5942e08b2de7a7e11af29d3445b889a6106d51", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "I am not a fan if storing constants in Interfaces. We should use an Enum instead. Also, it looks like the constants are using only by the XML Parser classes - should it be better to move the constants to the respective package - eg: \n- org.springframework.integration.aws.config.xml or\n- org.springframework.integration.aws.config\n", "created_at": "2012-09-27T22:05:09Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1712786", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1712786"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1712786"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1712786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714860", "pull_request_review_id": null, "id": 1714860, "diff_hunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.config.xml;\n+\n+\n+import static org.springframework.integration.aws.core.CommonConstants.ACCESS_KEY;\n+import static org.springframework.integration.aws.core.CommonConstants.PROPERTIES_FILE;\n+import static org.springframework.integration.aws.core.CommonConstants.SECRET_KEY;\n+\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.support.BeanDefinitionReaderUtils;\n+import org.springframework.beans.factory.xml.ParserContext;\n+import org.springframework.integration.aws.core.AmazonWSCredentials;\n+import org.springframework.integration.aws.core.BasicAWSCredentials;\n+import org.springframework.integration.aws.core.PropertiesAWSCredentials;\n+import org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+import org.w3c.dom.Element;\n+\n+/**\n+ * The Abstract AWS inbound channel adapter parser\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public abstract class AbstractAWSInboundChannelAdapterParser extends\n+\t\tAbstractPollingInboundChannelAdapterParser {\n+\n+\t/**\n+\t * Registers the {@link AmazonWSCredentials} bean with the current ApplicationContext\n+\t * @param element\n+\t * @param parserContext\n+\t * @return\n+\t */\n+\tprotected String registerAmazonWSCredentials(Element element,ParserContext parserContext) {\n+\t\tString accessKey = element.getAttribute(ACCESS_KEY);\n+\t\tString secretKey = element.getAttribute(SECRET_KEY);", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/config/xml/AbstractAWSInboundChannelAdapterParser.java", "position": null, "original_position": 53, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "ec5942e08b2de7a7e11af29d3445b889a6106d51", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Agreed, will expose the setter for the credentials but will use the o.s.i.aws.core.AmazonWSCredentials instead of c.a.a.AWSCredentials. I am not exposing any AWS SDK class as we also plan to have alternate implementations for say S3 operations in which case we would need some more generic datastructure.\n", "created_at": "2012-09-28T06:11:38Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1714860", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714860"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r1714860"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/1714860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532626", "pull_request_review_id": null, "id": 2532626, "diff_hunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.core;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n+\n+import org.apache.commons.codec.binary.Base64;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+/**\n+ * The common utilities methods\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public class AmazonWSCommonUtils {\n+\n+\tprivate static final Log logger = LogFactory.getLog(AmazonWSCommonUtils.class);\n+\n+\t/**\n+\t * Generates the MD5 hash of the file provided\n+\t * @param file\n+\t * @return\n+\t */\n+\tpublic static byte[] getContentsMD5AsBytes(File file) {\n+\t\ttry {\n+\t\t\tMessageDigest digest = MessageDigest.getInstance(\"MD5\");\n+\t\t\tBufferedInputStream bin = new BufferedInputStream(new FileInputStream(file),32768);\n+\t\t\tbyte[] bytesRead = new byte[8192];\n+\t\t\tfor (int read = 0;(read = bin.read(bytesRead)) != -1;) {\n+\t\t\t\tdigest.update(bytesRead, 0, read);\n+\t\t\t}\n+\t\t\treturn digest.digest();\n+\n+\t\t} catch (NoSuchAlgorithmException e) {\n+\t\t\tlogger.error(\"Caught Exception while generating a MessageDigest instance\", e);\n+\t\t} catch (FileNotFoundException e) {\n+\t\t\tlogger.error(\"File \" + file.getName() + \" not found\",e);\n+\t\t} catch(IOException e) {\n+\t\t\tlogger.error(\"IO Exception  occurred while reading file \" + file.getName(), e);\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t/**\n+\t * Compute the MD5 hash of the provided String\n+\t * @param the String whose MD5 sun is to be computed\n+\t * @return\n+\t */\n+\tpublic static byte[] getContentsMD5AsBytes(String contents) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/core/AmazonWSCommonUtils.java", "position": null, "original_position": 73, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Not sure if we need to re-invent the wheel here: \n\nWe could use a DigestInputStream or Google's Guava libraries. See for further details: http://stackoverflow.com/questions/304268/getting-a-files-md5-checksum-in-java\n\nLooks like the method is not currently used anyway (?)\n", "created_at": "2013-01-02T20:23:50Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2532626", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532626"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2532626"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532893", "pull_request_review_id": null, "id": 2532893, "diff_hunk": "@@ -0,0 +1,204 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.ses.core;\n+\n+import java.util.List;\n+\n+\n+/**\n+ * The Class representing the Amazon SES mail message.\n+ * use  {@link AmazonSESMailSender} for sending mail messages\n+ *\n+ * @see AmazonSESMailSender\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public class AmazonSESSimpleMailMessage {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/ses/core/AmazonSESSimpleMailMessage.java", "position": null, "original_position": 32, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Shouldn't we reuse Spring's support here? E.g. SimpleMailMessage or MimeMailMessage? Or at least be based on it?\n", "created_at": "2013-01-02T20:48:12Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2532893", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532893"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2532893"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532982", "pull_request_review_id": null, "id": 2532982, "diff_hunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.ses.core;\n+\n+import javax.mail.internet.MimeMessage;\n+\n+/**\n+ * The common interface for sending the mail using Amazon Simple Email Service (SES)\n+ * for more information on Amazon SES visit\n+ * http://aws.amazon.com/ses/\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public interface AmazonSESMailSender {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/ses/core/AmazonSESMailSender.java", "position": null, "original_position": 30, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Not sure whether it may make sense to provide some basic reuse of Spring's MailSender interface\n", "created_at": "2013-01-02T20:55:29Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2532982", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532982"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2532982"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2532982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533027", "pull_request_review_id": null, "id": 2533027, "diff_hunk": "@@ -0,0 +1,212 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.springframework.integration</groupId>\n+  <artifactId>spring-integration-aws</artifactId>\n+  <version>1.0.0.BUILD-SNAPSHOT</version>\n+  <name>Spring Integration Amazon Web Services Support</name>\n+  <licenses>\n+    <license>\n+      <name>The Apache Software License, Version 2.0</name>\n+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+\t<prerequisites>\n+\t\t<maven>2.2.1</maven>\n+\t</prerequisites>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>src/main/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </resource>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </resource>\n+    </resources>\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </testResource>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </testResource>\n+    </testResources>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>1.6</source>\n+          <target>1.6</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <includes>\n+            <include>**/*Tests.java</include>\n+          </includes>\n+          <excludes>\n+            <exclude>**/*Abstract*.java</exclude>\n+            <exclude>**/*AWSTests.java</exclude>\n+          </excludes>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  <repositories>\n+    <repository>\n+\t\t<id>springsource-libs-milestone</id>\n+\t\t<name>Spring Framework Maven Milestone Repository</name>\n+\t\t<url>https://repo.springsource.org/libs-milestone</url>\n+\t</repository>\n+  </repositories>\n+  <dependencies>\n+    <dependency>\n+\t\t<groupId>com.amazonaws</groupId>\n+\t\t<artifactId>aws-java-sdk</artifactId>\n+\t\t<version>1.3.12</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>commons-codec</groupId>\n+\t\t<artifactId>commons-codec</artifactId>\n+\t\t<version>1.5</version>\n+\t\t<scope>compile</scope>\n+    </dependency>\n+\n+   <dependency>\n+\t\t<groupId>commons-logging</groupId>\n+\t\t<artifactId>commons-logging</artifactId>\n+\t\t<version>1.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <version>2.0.1</version>\n+      <scope>compile</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>javax.mail</groupId>\n+\t\t<artifactId>mail</artifactId>\n+\t\t<version>1.4.4</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.springframework.integration</groupId>\n+\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t<version>2.2.0.RC1</version>", "path": "spring-integration-aws/pom.xml", "position": null, "original_position": 124, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "- change to 2.2.0.RELEASE\n- move to property\n", "created_at": "2013-01-02T20:58:49Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533027", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533027"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533027"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533056", "pull_request_review_id": null, "id": 2533056, "diff_hunk": "@@ -0,0 +1,212 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.springframework.integration</groupId>\n+  <artifactId>spring-integration-aws</artifactId>\n+  <version>1.0.0.BUILD-SNAPSHOT</version>\n+  <name>Spring Integration Amazon Web Services Support</name>\n+  <licenses>\n+    <license>\n+      <name>The Apache Software License, Version 2.0</name>\n+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+\t<prerequisites>\n+\t\t<maven>2.2.1</maven>\n+\t</prerequisites>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>src/main/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </resource>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </resource>\n+    </resources>\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </testResource>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </testResource>\n+    </testResources>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>1.6</source>\n+          <target>1.6</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <includes>\n+            <include>**/*Tests.java</include>\n+          </includes>\n+          <excludes>\n+            <exclude>**/*Abstract*.java</exclude>\n+            <exclude>**/*AWSTests.java</exclude>\n+          </excludes>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  <repositories>\n+    <repository>\n+\t\t<id>springsource-libs-milestone</id>\n+\t\t<name>Spring Framework Maven Milestone Repository</name>\n+\t\t<url>https://repo.springsource.org/libs-milestone</url>\n+\t</repository>\n+  </repositories>\n+  <dependencies>\n+    <dependency>\n+\t\t<groupId>com.amazonaws</groupId>\n+\t\t<artifactId>aws-java-sdk</artifactId>\n+\t\t<version>1.3.12</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>commons-codec</groupId>\n+\t\t<artifactId>commons-codec</artifactId>\n+\t\t<version>1.5</version>\n+\t\t<scope>compile</scope>\n+    </dependency>\n+\n+   <dependency>\n+\t\t<groupId>commons-logging</groupId>\n+\t\t<artifactId>commons-logging</artifactId>\n+\t\t<version>1.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <version>2.0.1</version>\n+      <scope>compile</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>javax.mail</groupId>\n+\t\t<artifactId>mail</artifactId>\n+\t\t<version>1.4.4</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.springframework.integration</groupId>\n+\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t<version>2.2.0.RC1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+\n+\t<dependency>\n+\t    <groupId>org.codehaus.jackson</groupId>\n+\t    <artifactId>jackson-core-asl</artifactId>\n+\t    <version>1.8.3</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.codehaus.jackson</groupId>\n+\t    <artifactId>jackson-mapper-asl</artifactId>\n+\t    <version>1.8.3</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t\t<groupId>org.apache.httpcomponents</groupId>\n+\t\t<artifactId>httpclient</artifactId>\n+\t\t<version>4.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.apache.httpcomponents</groupId>\n+\t    <artifactId>httpcore</artifactId>\n+\t    <version>4.1.1</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<!-- No compile time dependency, just using the MimeMessageHelper in tests -->\n+\t<dependency>\n+\t    <groupId>org.springframework</groupId>\n+\t    <artifactId>spring-context-support</artifactId>\n+\t    <version>3.1.0.RELEASE</version>", "path": "spring-integration-aws/pom.xml", "position": null, "original_position": 161, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "- Change to 3.1.3.RELEASE\n- Consider using property\n", "created_at": "2013-01-02T21:01:01Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533056", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533056"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533056"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533058", "pull_request_review_id": null, "id": 2533058, "diff_hunk": "@@ -0,0 +1,212 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.springframework.integration</groupId>\n+  <artifactId>spring-integration-aws</artifactId>\n+  <version>1.0.0.BUILD-SNAPSHOT</version>\n+  <name>Spring Integration Amazon Web Services Support</name>\n+  <licenses>\n+    <license>\n+      <name>The Apache Software License, Version 2.0</name>\n+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+\t<prerequisites>\n+\t\t<maven>2.2.1</maven>\n+\t</prerequisites>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>src/main/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </resource>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </resource>\n+    </resources>\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/java</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+        <excludes>\n+          <exclude>**/*.java</exclude>\n+        </excludes>\n+      </testResource>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <includes>\n+          <include>**/*</include>\n+        </includes>\n+      </testResource>\n+    </testResources>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>1.6</source>\n+          <target>1.6</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <includes>\n+            <include>**/*Tests.java</include>\n+          </includes>\n+          <excludes>\n+            <exclude>**/*Abstract*.java</exclude>\n+            <exclude>**/*AWSTests.java</exclude>\n+          </excludes>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  <repositories>\n+    <repository>\n+\t\t<id>springsource-libs-milestone</id>\n+\t\t<name>Spring Framework Maven Milestone Repository</name>\n+\t\t<url>https://repo.springsource.org/libs-milestone</url>\n+\t</repository>\n+  </repositories>\n+  <dependencies>\n+    <dependency>\n+\t\t<groupId>com.amazonaws</groupId>\n+\t\t<artifactId>aws-java-sdk</artifactId>\n+\t\t<version>1.3.12</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>commons-codec</groupId>\n+\t\t<artifactId>commons-codec</artifactId>\n+\t\t<version>1.5</version>\n+\t\t<scope>compile</scope>\n+    </dependency>\n+\n+   <dependency>\n+\t\t<groupId>commons-logging</groupId>\n+\t\t<artifactId>commons-logging</artifactId>\n+\t\t<version>1.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <version>2.0.1</version>\n+      <scope>compile</scope>\n+    </dependency>\n+\n+    <dependency>\n+\t\t<groupId>javax.mail</groupId>\n+\t\t<artifactId>mail</artifactId>\n+\t\t<version>1.4.4</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+    <dependency>\n+\t\t<groupId>org.springframework.integration</groupId>\n+\t\t<artifactId>spring-integration-core</artifactId>\n+\t\t<version>2.2.0.RC1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+\n+\t<dependency>\n+\t    <groupId>org.codehaus.jackson</groupId>\n+\t    <artifactId>jackson-core-asl</artifactId>\n+\t    <version>1.8.3</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.codehaus.jackson</groupId>\n+\t    <artifactId>jackson-mapper-asl</artifactId>\n+\t    <version>1.8.3</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t\t<groupId>org.apache.httpcomponents</groupId>\n+\t\t<artifactId>httpclient</artifactId>\n+\t\t<version>4.1.1</version>\n+\t\t<scope>compile</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.apache.httpcomponents</groupId>\n+\t    <artifactId>httpcore</artifactId>\n+\t    <version>4.1.1</version>\n+\t    <scope>compile</scope>\n+\t</dependency>\n+\n+\t<!-- No compile time dependency, just using the MimeMessageHelper in tests -->\n+\t<dependency>\n+\t    <groupId>org.springframework</groupId>\n+\t    <artifactId>spring-context-support</artifactId>\n+\t    <version>3.1.0.RELEASE</version>\n+\t    <scope>test</scope>\n+\t</dependency>\n+\n+\t<dependency>\n+\t    <groupId>org.springframework.integration</groupId>\n+\t    <artifactId>spring-integration-test</artifactId>\n+\t    <version>2.2.0.BUILD-SNAPSHOT</version>", "path": "spring-integration-aws/pom.xml", "position": null, "original_position": 168, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "- change to 2.2.0.RELEASE\n- move to property\n", "created_at": "2013-01-02T21:01:24Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533058", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533058"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533058"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533072", "pull_request_review_id": null, "id": 2533072, "diff_hunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.ses.core;\n+\n+import java.util.Arrays;\n+import java.util.Properties;\n+\n+import javax.mail.Session;\n+import javax.mail.internet.MimeMessage;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.springframework.integration.aws.core.PropertiesAWSCredentials;\n+import org.springframework.integration.aws.ses.core.AmazonSESMailSender;\n+import org.springframework.integration.aws.ses.core.AmazonSESMailSenderImpl;\n+import org.springframework.integration.aws.ses.core.AmazonSESSimpleMailMessage;\n+import org.springframework.mail.javamail.MimeMessageHelper;\n+\n+/**\n+ *\n+ * The test class for the AmazonSESMailSenderImpl class.\n+ *\n+ * NOTE: You will have to modify the to and from email's yourselves\n+ * as you can send to verified emails only as part of the free tier\n+ * in which you may be running the test.\n+ * To run this test you need to have your AWSAccess key and Secret key in the\n+ * file awscredentials.properties in the classpath. This file is not present in the\n+ * repository and you need to add one yourselves to src/test/resources folder and have\n+ * two properties accessKey and secretKey in it containing the access and the secret key\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public class AmazonSESMailSenderImplAWSTests {\n+\n+\tprivate static AmazonSESMailSender sender;\n+\n+\n+\t@BeforeClass\n+\tpublic static final void setupSender() throws Exception {\n+\t\tPropertiesAWSCredentials credentials =\n+\t\t\tnew PropertiesAWSCredentials(\"classpath:awscredentials.properties\");\n+\t\tcredentials.afterPropertiesSet();\n+\t\tsender = new AmazonSESMailSenderImpl(credentials);\n+\t}\n+\n+\t/**\n+\t * Send a mail using {@link AmazonSESSimpleMailMessage}\n+\t */\n+\t@Test\n+\tpublic void sendAmazonSESSimpleMailMessage() {\n+\t\tAmazonSESSimpleMailMessage message = new AmazonSESSimpleMailMessage();\n+\t\tmessage.setFrom(\"amolnayak311@gmail.com\");", "path": "spring-integration-aws/src/test/java/org/springframework/integration/aws/ses/core/AmazonSESMailSenderImplAWSTests.java", "position": null, "original_position": 68, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "We should probably not use hard-coded email addresses.\n", "created_at": "2013-01-02T21:02:40Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533072", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533072"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533072"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533877", "pull_request_review_id": null, "id": 2533877, "diff_hunk": "@@ -0,0 +1,66 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<xsd:schema xmlns=\"http://www.springframework.org/schema/integration/aws/ses\"\n+\t\txmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n+\t\txmlns:beans=\"http://www.springframework.org/schema/beans\"\n+\t\txmlns:tool=\"http://www.springframework.org/schema/tool\"\n+\t\txmlns:integration=\"http://www.springframework.org/schema/integration\"\n+\t\ttargetNamespace=\"http://www.springframework.org/schema/integration/aws/ses\"\n+\t\telementFormDefault=\"qualified\"\n+\t\tattributeFormDefault=\"unqualified\">\n+\n+\t<xsd:import namespace=\"http://www.springframework.org/schema/beans\"/>\n+\t<xsd:import namespace=\"http://www.springframework.org/schema/tool\"/>\n+\t<xsd:import namespace=\"http://www.springframework.org/schema/integration\"\n+\t\tschemaLocation=\"http://www.springframework.org/schema/integration/spring-integration-2.2.xsd\"/>\n+\n+", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/ses/config/xml/spring-integration-aws-ses-1.0.xsd", "position": null, "original_position": 16, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "If possible comment all **Elements** and _Attributes__. Currently no descriptions are provided in the STS for the *_SES outbound-channel-adapter**. Particular for new users, having some documentation for the STS code completion would be nice. \n", "created_at": "2013-01-02T22:09:39Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533877", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533877"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2533877"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2533877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2534117", "pull_request_review_id": null, "id": 2534117, "diff_hunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.ses.core;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.nio.ByteBuffer;\n+\n+import javax.mail.internet.MimeMessage;\n+\n+import org.springframework.integration.aws.core.AmazonWSCredentials;\n+import org.springframework.integration.aws.core.AmazonWSOperationException;\n+\n+import com.amazonaws.auth.BasicAWSCredentials;\n+import com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient;\n+import com.amazonaws.services.simpleemail.model.Body;\n+import com.amazonaws.services.simpleemail.model.Content;\n+import com.amazonaws.services.simpleemail.model.Destination;\n+import com.amazonaws.services.simpleemail.model.Message;\n+import com.amazonaws.services.simpleemail.model.RawMessage;\n+import com.amazonaws.services.simpleemail.model.SendEmailRequest;\n+import com.amazonaws.services.simpleemail.model.SendRawEmailRequest;\n+\n+/**\n+ * The implementation class for sending mail using the Amazon SES service\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public class AmazonSESMailSenderImpl implements AmazonSESMailSender {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/ses/core/AmazonSESMailSenderImpl.java", "position": null, "original_position": 44, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Call it rather **DefaultAmazonSESMailSender**\n", "created_at": "2013-01-02T22:29:34Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2534117", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2534117"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2534117"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2534117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539712", "pull_request_review_id": null, "id": 2539712, "diff_hunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.core;\n+\n+/**\n+ * The basic implementation class holding the Access key and the secret\n+ * key for the AWS account .\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public class BasicAWSCredentials implements AmazonWSCredentials {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/core/BasicAWSCredentials.java", "position": null, "original_position": 27, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "I wonder if the implementation should just wrap Amazon's **BasicAWSCredentials**\n", "created_at": "2013-01-03T15:55:52Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2539712", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539712"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2539712"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539822", "pull_request_review_id": null, "id": 2539822, "diff_hunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.ses;\n+\n+import javax.mail.Address;\n+import javax.mail.internet.MimeMessage;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.aws.core.AmazonWSCredentials;\n+import org.springframework.integration.aws.ses.core.AmazonSESMailSendException;\n+import org.springframework.integration.aws.ses.core.AmazonSESMailSender;\n+import org.springframework.integration.aws.ses.core.AmazonSESMailSenderImpl;\n+import org.springframework.integration.aws.ses.core.AmazonSESSimpleMailMessage;\n+import org.springframework.integration.handler.AbstractMessageHandler;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * The Message handler for the SES Mail. This will be used to send email\n+ * using Amazon SES\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public class AmazonSESMessageHandler extends AbstractMessageHandler {\n+\n+\n+\t/**.\n+\t * The mail sender implementation of Amazon SES\n+\t */\n+\tprivate AmazonSESMailSender mailSender;\n+\n+\t/**\n+\t * The AWS Access key of the user account\n+\t */\n+\tprivate final String accessKey;", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/ses/AmazonSESMessageHandler.java", "position": null, "original_position": 51, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "I don't think we should care about the accessKey in the MessageHandler. The accessKey is an implementation detail of the specified mailSender implementation. \n", "created_at": "2013-01-03T16:04:49Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2539822", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539822"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2539822"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539845", "pull_request_review_id": null, "id": 2539845, "diff_hunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.ses;\n+\n+import javax.mail.Address;\n+import javax.mail.internet.MimeMessage;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.aws.core.AmazonWSCredentials;\n+import org.springframework.integration.aws.ses.core.AmazonSESMailSendException;\n+import org.springframework.integration.aws.ses.core.AmazonSESMailSender;\n+import org.springframework.integration.aws.ses.core.AmazonSESMailSenderImpl;\n+import org.springframework.integration.aws.ses.core.AmazonSESSimpleMailMessage;\n+import org.springframework.integration.handler.AbstractMessageHandler;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * The Message handler for the SES Mail. This will be used to send email\n+ * using Amazon SES\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public class AmazonSESMessageHandler extends AbstractMessageHandler {\n+\n+\n+\t/**.\n+\t * The mail sender implementation of Amazon SES\n+\t */\n+\tprivate AmazonSESMailSender mailSender;\n+\n+\t/**\n+\t * The AWS Access key of the user account\n+\t */\n+\tprivate final String accessKey;\n+\n+\tpublic AmazonSESMessageHandler(AmazonWSCredentials credentials) {\n+\t\tAssert.notNull(credentials, \"'credentials' cannot be null\");\n+\t\taccessKey = credentials.getAccessKey();\n+\t\tmailSender = new AmazonSESMailSenderImpl(credentials);\n+\t}\n+\n+\t/* (non-Javadoc)\n+\t * @see org.springframework.integration.handler.AbstractMessageHandler#handleMessageInternal(org.springframework.integration.Message)\n+\t */\n+\n+\tpublic AmazonSESMessageHandler() {\n+\t\t//the default constructor\n+\t\taccessKey = null;\n+\t}\n+\n+\n+\t@Override\n+\tprotected void handleMessageInternal(Message<?> message) throws Exception {\n+\t\tObject payload = message.getPayload();\n+\t\tif(payload instanceof MimeMessage) {\n+\t\t\tMimeMessage mimeMessage = (MimeMessage)payload;\n+\t\t\tAddress[] addresses = mimeMessage.getAllRecipients();\n+\t\t\tif(addresses.length == 0)\n+\t\t\t\tthrow new AmazonSESMailSendException(accessKey,\"Mime mesage should contain to/from/bcc email id\",null);\n+\t\t\tAddress[] fromAddresses = mimeMessage.getFrom();\n+\t\t\tif(fromAddresses.length == 0)\n+\t\t\t\tthrow new AmazonSESMailSendException(accessKey,\"Mime mesage should contain a from email id\",null);\n+\n+\t\t\tmailSender.send(mimeMessage);\n+\t\t} else {\n+\t\t\tAmazonSESSimpleMailMessage mailMsg = convertMessageToSESMailMessage(message);\n+\t\t\tif(mailMsg != null)\n+\t\t\t\tmailSender.send(mailMsg);\n+\t\t}\n+\n+\t}\n+\n+\t/**.\n+\t * Convert the incoming {@link Message} into a {@link AmazonSESSimpleMailMessage} to be sent\n+\t * @param message\n+\t * @return\n+\t */\n+\tprivate AmazonSESSimpleMailMessage convertMessageToSESMailMessage(Message<?> message) {\n+\t\tObject payload = message.getPayload();\n+\t\tif(payload instanceof AmazonSESSimpleMailMessage)\n+\t\t\treturn (AmazonSESSimpleMailMessage)payload;\n+\t\tMessageHeaders headers = message.getHeaders();\n+\n+\t\t//Get the subject\n+\t\tObject value = headers.get(AmazonSESMailHeaders.SUBJECT);\n+\t\tString subject = null;\n+\n+\t\tif(value != null) {\n+\t\t\tif(value instanceof String)\n+\t\t\t\tsubject = (String)value;\n+\t\t\telse\n+\t\t\t\tthrow new AmazonSESMailSendException(accessKey,\n+\t\t\t\t\t\t\"\\\"\" + AmazonSESMailHeaders.SUBJECT + \"\\\" header is expected to be String, found \"\n+\t\t\t\t\t\t+ value.getClass().getCanonicalName(),\n+\t\t\t\t\t\tnull, null);\n+\t\t}\n+\n+\t\t//Currently only String body is supported\n+\t\tvalue = message.getPayload();\n+\t\tString body = null;\n+\t\tif(value != null) {\n+\t\t\tif(value instanceof String)\n+\t\t\t\tbody = (String)value;\n+\t\t\telse\n+\t\t\t\tthrow new AmazonSESMailSendException(accessKey,\n+\t\t\t\t\t\t\"Body is expected to be String, found \"\n+\t\t\t\t\t\t+ value.getClass().getCanonicalName(),\n+\t\t\t\t\t\tnull, null);\n+\t\t}\n+\n+\n+\n+\t\t// construct the mail message\n+\t\tAmazonSESSimpleMailMessage mailMessage =\n+\t\t\tAmazonSESMailMessageBuilder\n+\t\t\t.newBuilder(accessKey)", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/ses/AmazonSESMessageHandler.java", "position": null, "original_position": 133, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Don't think we need to be aware of the accessKey here.\n", "created_at": "2013-01-03T16:06:26Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2539845", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539845"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2539845"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539919", "pull_request_review_id": null, "id": 2539919, "diff_hunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.ses;\n+\n+/**\n+ * All the pre defined Amazon SES Mail headers\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public interface AmazonSESMailHeaders {\n+\n+\tpublic static final String FROM_EMAIL_ID \t\t= \t\"fromEmailId\";\n+\tpublic static final String TO_EMAIL_ID \t\t\t= \t\"toEmailId\";\n+\tpublic static final String BCC_EMAIL_ID\t\t\t=\t\"bccEmailId\";\n+\tpublic static final String CC_EMAIL_ID\t\t\t=\t\"ccEmailId\";\n+\tpublic static final String REPLYTO_EMAIL_ID\t\t=\t\"ccEmailId\";\n+\tpublic static final String HTML_FORMAT\t\t\t=\t\"htmlFormat\";\n+\tpublic static final String SUBJECT\t\t\t\t=\t\"subject\";", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/ses/AmazonSESMailHeaders.java", "position": null, "original_position": 34, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Check whitespace vs tabs here. May want to use whitespace only to separate `FROM_EMAIL_ID       =   \"fromEmailId\"`\n", "created_at": "2013-01-03T16:11:08Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2539919", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539919"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2539919"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2539919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2559593", "pull_request_review_id": null, "id": 2559593, "diff_hunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2002-2012 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.core;\n+\n+/**\n+ * The basic implementation class holding the Access key and the secret\n+ * key for the AWS account .\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 1.0\n+ *\n+ */\n+public class BasicAWSCredentials implements AmazonWSCredentials {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/core/BasicAWSCredentials.java", "position": null, "original_position": 27, "commit_id": "4f5bd4a083ed917231d1cda5bb6c8b3d09b852bf", "original_commit_id": "d429de20da52d462fa4780c1efd0c3589a30a239", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Didn't want to do that as that would mandate a dependency on AWS Client libraries. In case of S3 which is coming up, if we provide alternate implementations like JetS3, we would not like to have AWS Client jars in classpath too just for one class. Let me know if you have any other view.\n", "created_at": "2013-01-06T07:11:34Z", "updated_at": "2013-01-06T10:44:54Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2559593", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2559593"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/5#discussion_r2559593"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/2559593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138494", "pull_request_review_id": null, "id": 3138494, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": 34, "original_position": 34, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "indicate the default charset\n", "created_at": "2013-02-25T17:13:58Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138494", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138494"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138494"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138742", "pull_request_review_id": null, "id": 3138742, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 44, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "In order to provide more clarity - Maybe change it to:\n\nUsing 'Amazon Multipart Upload' you can upload data as a set of parts using parallel threads. This non-negative integer value (representing bytes) is used to provide the threshold after which the upload to the S3 bucket will be done using 'Amazon Multipart Upload'. Amazon recommends the size to be 100 MB. The minimum threshold for 'Amazon Multipart Upload' is 5120 bytes.\n\nFurther questions:\n- What is the default value? \n- What is the max value?\n", "created_at": "2013-02-25T17:29:48Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138742", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138742"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138742"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138769", "pull_request_review_id": null, "id": 3138769, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": 207, "original_position": 137, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "space: bean with\n", "created_at": "2013-02-25T17:31:41Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138769", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138769"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138769"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138814", "pull_request_review_id": null, "id": 3138814, "diff_hunk": "@@ -0,0 +1,355 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3.core;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ThreadPoolExecutor;\n+\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.core.AbstractAWSClientFactory;\n+import org.springframework.util.Assert;\n+\n+import com.amazonaws.auth.BasicAWSCredentials;\n+import com.amazonaws.services.s3.AmazonS3Client;\n+import com.amazonaws.services.s3.model.AccessControlList;\n+import com.amazonaws.services.s3.model.AmazonS3Exception;\n+import com.amazonaws.services.s3.model.CanonicalGrantee;\n+import com.amazonaws.services.s3.model.EmailAddressGrantee;\n+import com.amazonaws.services.s3.model.GetObjectRequest;\n+import com.amazonaws.services.s3.model.GroupGrantee;\n+import com.amazonaws.services.s3.model.ListObjectsRequest;\n+import com.amazonaws.services.s3.model.ObjectListing;\n+import com.amazonaws.services.s3.model.ObjectMetadata;\n+import com.amazonaws.services.s3.model.Permission;\n+import com.amazonaws.services.s3.model.PutObjectRequest;\n+import com.amazonaws.services.s3.model.S3Object;\n+import com.amazonaws.services.s3.transfer.TransferManager;\n+import com.amazonaws.services.s3.transfer.TransferManagerConfiguration;\n+import com.amazonaws.services.s3.transfer.Upload;\n+\n+\n+/**\n+ * The default, out of the box implementation of the {@link AmazonS3Operations} that is implemented\n+ * using AWS SDK.\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3OperationsImpl extends AbstractAmazonS3Operations {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/core/AmazonS3OperationsImpl.java", "position": null, "original_position": 57, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Will be better to change to **DefaultAmazonS3Operations**.\n", "created_at": "2013-02-25T17:34:29Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138814", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138814"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138814"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138839", "pull_request_review_id": null, "id": 3138839, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 142, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "which uses the AWS SDK.\n", "created_at": "2013-02-25T17:35:48Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138839", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138839"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3138839"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3138839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3140724", "pull_request_review_id": null, "id": 3140724, "diff_hunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import java.io.File;\n+import java.io.InputStream;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.integration.aws.s3.core.AmazonS3Object;\n+import org.springframework.integration.aws.s3.core.AmazonS3ObjectACL;\n+import org.springframework.integration.aws.s3.core.Grantee;\n+import org.springframework.integration.aws.s3.core.GranteeType;\n+import org.springframework.integration.aws.s3.core.ObjectGrant;\n+import org.springframework.integration.aws.s3.core.ObjectPermissions;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The convenience builder class for building {@link AmazonS3Object}\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3ObjectBuilder {\n+\n+\tprivate final Log logger = LogFactory.getLog(getClass());\n+\n+\tprivate File file;\n+\tprivate InputStream in;\n+\tprivate Map<String, Object> metaData;\n+\tprivate Map<String, String> userMetaData;\n+\tprivate AmazonS3ObjectACL objectACL;\n+\tprivate final Pattern validEmailId = Pattern.compile(\"^[_A-Za-z0-9-]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\");", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3ObjectBuilder.java", "position": null, "original_position": 52, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "I would be very careful doing any sophisticated email validation. See Hibernate's EmailValidator for why:\n- http://www.docjar.com/html/api/org/hibernate/validator/EmailValidator.java.html\n- http://docs.jboss.org/hibernate/validator/4.2/api/org/hibernate/validator/constraints/impl/EmailValidator.html\n\nMaybe better to not validate at all?\n", "created_at": "2013-02-25T19:14:15Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3140724", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3140724"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3140724"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3140724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3142984", "pull_request_review_id": null, "id": 3142984, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t</xsd:complexType>\n+\t</xsd:element>\n+\t<xsd:element name=\"s3-inbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines the inbound channel adapter for Amazon S3. The component is used to synchronize\n+\t\t\t\t\tthe objects in an S3 bucket with the file system.\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n+\t\t\t\t<xsd:element ref=\"integration:poller\"/>\n+\t\t\t</xsd:sequence>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix files will use while the are being written to the local file system.\n+\t\t\t\t\t\tA file present with this suffix on the local file system denotes that the file\n+\t\t\t\t\t\tis not completely received from the s3 bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis is the sub folder if any on the remote bucket that would be synchronized\n+\t\t\t\t\t\twith the local directory. Useful if a part of the bucket is to be synchronized.\n+\t\t\t\t\t\tIf none specified, the entire bucket will be synchronized with the local directory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory\" type=\"xsd:string\">", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 226, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "This attribute should probably be named: **local-directory**\n", "created_at": "2013-02-25T21:27:55Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3142984", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3142984"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3142984"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3142984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143019", "pull_request_review_id": null, "id": 3143019, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t</xsd:complexType>\n+\t</xsd:element>\n+\t<xsd:element name=\"s3-inbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines the inbound channel adapter for Amazon S3. The component is used to synchronize\n+\t\t\t\t\tthe objects in an S3 bucket with the file system.\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n+\t\t\t\t<xsd:element ref=\"integration:poller\"/>\n+\t\t\t</xsd:sequence>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix files will use while the are being written to the local file system.\n+\t\t\t\t\t\tA file present with this suffix on the local file system denotes that the file\n+\t\t\t\t\t\tis not completely received from the s3 bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis is the sub folder if any on the remote bucket that would be synchronized\n+\t\t\t\t\t\twith the local directory. Useful if a part of the bucket is to be synchronized.\n+\t\t\t\t\t\tIf none specified, the entire bucket will be synchronized with the local directory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe attribute specifying the directory on the local file system where\n+\t\t\t\t\t\tthe objects from S3 bucket would be synchronized to. Either of directory\n+\t\t\t\t\t\tor the directory-expression are mandatory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory-expression\" type=\"xsd:string\">", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 235, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Do we need this? May not be needed for the inbound adapter.\n", "created_at": "2013-02-25T21:30:19Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3143019", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143019"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3143019"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143044", "pull_request_review_id": null, "id": 3143044, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t</xsd:complexType>\n+\t</xsd:element>\n+\t<xsd:element name=\"s3-inbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines the inbound channel adapter for Amazon S3. The component is used to synchronize\n+\t\t\t\t\tthe objects in an S3 bucket with the file system.\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n+\t\t\t\t<xsd:element ref=\"integration:poller\"/>\n+\t\t\t</xsd:sequence>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix files will use while the are being written to the local file system.\n+\t\t\t\t\t\tA file present with this suffix on the local file system denotes that the file\n+\t\t\t\t\t\tis not completely received from the s3 bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis is the sub folder if any on the remote bucket that would be synchronized\n+\t\t\t\t\t\twith the local directory. Useful if a part of the bucket is to be synchronized.\n+\t\t\t\t\t\tIf none specified, the entire bucket will be synchronized with the local directory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory\" type=\"xsd:string\">", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 226, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Similar to the _FTP Inbound Channel Adapter_ - where is the attribute **auto-create-local-directory**? \n", "created_at": "2013-02-25T21:31:27Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3143044", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143044"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3143044"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143092", "pull_request_review_id": null, "id": 3143092, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t</xsd:complexType>\n+\t</xsd:element>\n+\t<xsd:element name=\"s3-inbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines the inbound channel adapter for Amazon S3. The component is used to synchronize\n+\t\t\t\t\tthe objects in an S3 bucket with the file system.\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n+\t\t\t\t<xsd:element ref=\"integration:poller\"/>\n+\t\t\t</xsd:sequence>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix files will use while the are being written to the local file system.\n+\t\t\t\t\t\tA file present with this suffix on the local file system denotes that the file\n+\t\t\t\t\t\tis not completely received from the s3 bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis is the sub folder if any on the remote bucket that would be synchronized\n+\t\t\t\t\t\twith the local directory. Useful if a part of the bucket is to be synchronized.\n+\t\t\t\t\t\tIf none specified, the entire bucket will be synchronized with the local directory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory\" type=\"xsd:string\">", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 226, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Also, not sure if needed for the first iteration - but should we have an attribute **local-filename-generator-expression**?\n", "created_at": "2013-02-25T21:34:30Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3143092", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143092"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3143092"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143960", "pull_request_review_id": null, "id": 3143960, "diff_hunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import java.io.File;\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.BlockingQueue;\n+\n+import org.springframework.beans.factory.BeanFactory;\n+import org.springframework.context.expression.BeanFactoryResolver;\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.spel.support.StandardEvaluationContext;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.s3.core.AbstractAmazonS3Operations;\n+import org.springframework.integration.aws.s3.core.AmazonS3Operations;\n+import org.springframework.integration.aws.s3.core.AmazonS3OperationsImpl;\n+import org.springframework.integration.context.IntegrationObjectSupport;\n+import org.springframework.integration.core.MessageSource;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The message source used to receive the File instances stored on the local file system\n+ * synchronized from the S3\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3InboundSynchronizationMessageSource extends\n+\t\tIntegrationObjectSupport implements MessageSource<File>,FileEventHandler {\n+\n+\n+\tprivate volatile InboundFileSynchronizer synchronizer;\n+\tprivate volatile String bucket;\n+\tprivate volatile String remoteDirectory;\n+\tprivate volatile File directory;\n+\tprivate volatile AWSCredentials credentials;\n+\tprivate volatile String temporarySuffix;\n+\tprivate volatile int maxObjectsPerBatch;\n+\tprivate volatile String fileNameWildcard;\n+\tprivate volatile String fileNameRegex;\n+\tprivate volatile BlockingQueue<File> filesQueue;\n+\tprivate volatile AmazonS3Operations s3Operations;\n+\tprivate volatile boolean acceptSubFolders;\n+\tprivate volatile String awsEndpoint;\n+\t//We will hard code the queue capacity here\n+\tprivate final int QUEUE_CAPACITY = 1024;\n+\tprivate volatile StandardEvaluationContext ctx;\n+\tprivate volatile Expression directoryExpression;\n+\n+\n+\tpublic Message<File> receive() {\n+\t\tFile headElement = filesQueue.poll();\n+\t\tif(headElement == null) {\n+\t\t\tsynchronizer.synchronizeToLocalDirectory(directory, bucket, remoteDirectory);\n+\t\t\t//Now check the queue again\n+\t\t\theadElement = filesQueue.poll();\n+\t\t}\n+\t\tif(headElement != null) {\n+\t\t\treturn MessageBuilder.withPayload(headElement).build();\n+\t\t}\n+\t\telse {\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\n+\t@Override\n+\tprotected void onInit() throws Exception {\n+\t\tAssert.notNull(directoryExpression, \"Local directory to synchronize to is not set\");\n+\n+\t\tctx = new StandardEvaluationContext();\n+\t\tBeanFactory factory = getBeanFactory();\n+\t\tif(factory != null) {\n+\t\t\tctx.setBeanResolver(new BeanFactoryResolver(factory));\n+\t\t}\n+\t\tString directoryPath = directoryExpression.getValue(ctx,String.class);\n+\t\tdirectory = new File(directoryPath);\n+\n+\t\tAssert.isTrue(directory != null && directory.exists() && directory.isDirectory(),\n+\t\t\"Please provide a valid local directory to synchronize the remote files\");", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3InboundSynchronizationMessageSource.java", "position": null, "original_position": 98, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Too generic - if you have an invalid directory specified, we should tell the user **why** the directory is invalid. E.g. the directory does not exist, the specified directory points to a file etc.\n", "created_at": "2013-02-25T22:22:19Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3143960", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143960"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3143960"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3143960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3144017", "pull_request_review_id": null, "id": 3144017, "diff_hunk": "@@ -0,0 +1,510 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3.core;\n+\n+import static org.springframework.integration.aws.core.AWSCommonUtils.encodeHex;\n+import static org.springframework.integration.aws.core.AWSCommonUtils.getContentsMD5AsBytes;\n+\n+import java.io.BufferedInputStream;\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.UnsupportedEncodingException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * The common super class for any implementation of {@link AmazonS3Operations}. The sub class\n+ * has to implement all the functionality for performing the actual work to add, remove, update\n+ * delete, list the objects in an S3 bucket\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 0.5\n+ *\n+ */\n+public abstract class AbstractAmazonS3Operations implements AmazonS3Operations,InitializingBean {\n+\n+\tprotected final Log logger = LogFactory.getLog(getClass());\n+\n+\tprivate volatile long multipartUploadThreshold;\n+\n+\tprivate volatile File temporaryDirectory = new  File(System.getProperty(\"java.io.tmpdir\"));\n+\n+\tprivate volatile String temporaryFileSuffix = \".writing\";\n+\n+\tpublic final String PATH_SEPARATOR = \"/\";\n+\n+\tprivate final AWSCredentials credentials;\n+\n+\tprivate String awsEndpoint;\n+\n+\n+\n+\t/**\n+\t * The constructor that accepts the {@link AmazonWSCredentials}\n+\t * @param credentials\n+\t */\n+\tprotected AbstractAmazonS3Operations(AWSCredentials credentials) {\n+\t\tAssert.notNull(credentials,\"null 'credentials' provided\");\n+\t\tthis.credentials = credentials;\n+\t}\n+\n+\n+\t/**\n+\t * Get the threshold value in bytes above which multi part upload will be used\n+\t * @return\n+\t */\n+\tpublic long getMultipartUploadThreshold() {\n+\t\treturn multipartUploadThreshold;\n+\t}\n+\n+\n+\t/**\n+\t * The threshold value in bytes above which the service will use multi part upload.\n+\t * All the uploads below this value will be uploaded in a single thread\n+\t * Minimum value for the threshold is 5120 Bytes (5 KB).\n+\t * It is recommended by Amazon to use Multi part uploads for all the uploads\n+\t * above 100 MB\n+\t * If the value is set to a number above Integer.MAX_VALUE, the value will be\n+\t * set to  Integer.MAX_VALUE.\n+\t *\n+\t * @param multipartUploadThreshold\n+\t */\n+\tpublic void setMultipartUploadThreshold(long multipartUploadThreshold) {\n+\t\tAssert.isTrue(multipartUploadThreshold >= 5120,\n+\t\t\t\t\"Minimum threshold for multipart upload is 5120 bytes\");\n+\t\tthis.multipartUploadThreshold = multipartUploadThreshold;\n+\t}\n+\n+\n+\t/**\n+\t * Gets the temporary directory\n+\t * @return\n+\t */\n+\tpublic File getTemporaryDirectory() {\n+\t\treturn temporaryDirectory;\n+\t}\n+\n+\t/**\n+\t * The temporary directory that will be used to write the files received over stream\n+\t * @param temporaryDirectory\n+\t */\n+\tpublic void setTemporaryDirectory(File temporaryDirectory) {\n+\t\tAssert.notNull(temporaryDirectory, \"Provided temporaryDirectory is null\");\n+\t\tAssert.isTrue(temporaryDirectory.exists(),\"The given temporary directory does not exist\");\n+\t\tAssert.isTrue(temporaryDirectory.isDirectory(), \"The given temporary directory path has to be a directory\");\n+\t\tthis.temporaryDirectory = temporaryDirectory;\n+\t}\n+\n+\n+\t/**\n+\t * The temporary directory that will be used to write the files received over stream\n+\t * @param temporaryDirectory\n+\t */\n+\tpublic void setTemporaryDirectory(String temporaryDirectory) {\n+\t\tAssert.hasText(temporaryDirectory,\"Provided temporary directory string is null or empty string\");\n+\t\tsetTemporaryDirectory(new File(temporaryDirectory));\n+\t}\n+\n+\n+\t/**\n+\t * Gets the temporary file suffix that is appended to the file while writing to\n+\t * the temporary directory\n+\t * @return\n+\t */\n+\tpublic String getTemporaryFileSuffix() {\n+\t\treturn temporaryFileSuffix;\n+\t}\n+\n+\n+\t/**\n+\t * Gets the temporary file suffix\n+\t * @param temporaryFileSuffix\n+\t */\n+\tpublic void setTemporaryFileSuffix(String temporaryFileSuffix) {\n+\t\tAssert.hasText(temporaryFileSuffix, \"Temporary file suffix provided is non null, non empty\");", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/core/AbstractAmazonS3Operations.java", "position": null, "original_position": 149, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Change to **The temporary file suffix must not be null or empty**\n", "created_at": "2013-02-25T22:26:30Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3144017", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3144017"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3144017"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3144017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3144165", "pull_request_review_id": null, "id": 3144165, "diff_hunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import java.io.File;\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.BlockingQueue;\n+\n+import org.springframework.beans.factory.BeanFactory;\n+import org.springframework.context.expression.BeanFactoryResolver;\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.spel.support.StandardEvaluationContext;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.s3.core.AbstractAmazonS3Operations;\n+import org.springframework.integration.aws.s3.core.AmazonS3Operations;\n+import org.springframework.integration.aws.s3.core.AmazonS3OperationsImpl;\n+import org.springframework.integration.context.IntegrationObjectSupport;\n+import org.springframework.integration.core.MessageSource;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The message source used to receive the File instances stored on the local file system\n+ * synchronized from the S3\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3InboundSynchronizationMessageSource extends\n+\t\tIntegrationObjectSupport implements MessageSource<File>,FileEventHandler {\n+\n+\n+\tprivate volatile InboundFileSynchronizer synchronizer;\n+\tprivate volatile String bucket;\n+\tprivate volatile String remoteDirectory;\n+\tprivate volatile File directory;\n+\tprivate volatile AWSCredentials credentials;\n+\tprivate volatile String temporarySuffix;\n+\tprivate volatile int maxObjectsPerBatch;\n+\tprivate volatile String fileNameWildcard;\n+\tprivate volatile String fileNameRegex;\n+\tprivate volatile BlockingQueue<File> filesQueue;\n+\tprivate volatile AmazonS3Operations s3Operations;\n+\tprivate volatile boolean acceptSubFolders;\n+\tprivate volatile String awsEndpoint;\n+\t//We will hard code the queue capacity here\n+\tprivate final int QUEUE_CAPACITY = 1024;\n+\tprivate volatile StandardEvaluationContext ctx;\n+\tprivate volatile Expression directoryExpression;\n+\n+\n+\tpublic Message<File> receive() {\n+\t\tFile headElement = filesQueue.poll();\n+\t\tif(headElement == null) {\n+\t\t\tsynchronizer.synchronizeToLocalDirectory(directory, bucket, remoteDirectory);\n+\t\t\t//Now check the queue again\n+\t\t\theadElement = filesQueue.poll();\n+\t\t}\n+\t\tif(headElement != null) {\n+\t\t\treturn MessageBuilder.withPayload(headElement).build();\n+\t\t}\n+\t\telse {\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\n+\t@Override\n+\tprotected void onInit() throws Exception {\n+\t\tAssert.notNull(directoryExpression, \"Local directory to synchronize to is not set\");\n+\n+\t\tctx = new StandardEvaluationContext();\n+\t\tBeanFactory factory = getBeanFactory();\n+\t\tif(factory != null) {\n+\t\t\tctx.setBeanResolver(new BeanFactoryResolver(factory));\n+\t\t}\n+\t\tString directoryPath = directoryExpression.getValue(ctx,String.class);\n+\t\tdirectory = new File(directoryPath);\n+\n+\t\tAssert.isTrue(directory != null && directory.exists() && directory.isDirectory(),\n+\t\t\"Please provide a valid local directory to synchronize the remote files\");\n+\n+\n+\t\t//instantiate the S3Operations instance\n+\t\tif(s3Operations == null) {\n+\t\t\ts3Operations = new AmazonS3OperationsImpl(credentials);\n+\t\t}\n+\n+\t\tif(AbstractAmazonS3Operations.class.isAssignableFrom(s3Operations.getClass())) {\n+\t\t\tAbstractAmazonS3Operations abstractOperation = (AbstractAmazonS3Operations)s3Operations;\n+\t\t\tabstractOperation.setTemporaryFileSuffix(temporarySuffix);", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3InboundSynchronizationMessageSource.java", "position": 111, "original_position": 108, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "**temporarySuffix** may actually be null - and cause an Assertion Exception in the setter **setTemporaryFileSuffix**. We should have a default.\n\nAs mentioned earlier, we should probably look into relying on the **FileTransferringMessageHandler**, ensuring some common default behavior across the various file transferring _Spring Integration_ adapters.\n", "created_at": "2013-02-25T22:35:13Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3144165", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3144165"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3144165"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3144165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175274", "pull_request_review_id": null, "id": 3175274, "diff_hunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import java.io.File;\n+import java.io.InputStream;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.integration.aws.s3.core.AmazonS3Object;\n+import org.springframework.integration.aws.s3.core.AmazonS3ObjectACL;\n+import org.springframework.integration.aws.s3.core.Grantee;\n+import org.springframework.integration.aws.s3.core.GranteeType;\n+import org.springframework.integration.aws.s3.core.ObjectGrant;\n+import org.springframework.integration.aws.s3.core.ObjectPermissions;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The convenience builder class for building {@link AmazonS3Object}\n+ *\n+ * @author Amol Nayak\n+ *\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3ObjectBuilder {\n+\n+\tprivate final Log logger = LogFactory.getLog(getClass());\n+\n+\tprivate File file;\n+\tprivate InputStream in;\n+\tprivate Map<String, Object> metaData;\n+\tprivate Map<String, String> userMetaData;\n+\tprivate AmazonS3ObjectACL objectACL;\n+\tprivate final Pattern validEmailId = Pattern.compile(\"^[_A-Za-z0-9-]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\");", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3ObjectBuilder.java", "position": null, "original_position": 52, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Not checking the email id for now, let us add it in one of the enhancement JIRA if needed.\n", "created_at": "2013-02-27T18:19:36Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3175274", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175274"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3175274"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175470", "pull_request_review_id": null, "id": 3175470, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t</xsd:complexType>\n+\t</xsd:element>\n+\t<xsd:element name=\"s3-inbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines the inbound channel adapter for Amazon S3. The component is used to synchronize\n+\t\t\t\t\tthe objects in an S3 bucket with the file system.\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n+\t\t\t\t<xsd:element ref=\"integration:poller\"/>\n+\t\t\t</xsd:sequence>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix files will use while the are being written to the local file system.\n+\t\t\t\t\t\tA file present with this suffix on the local file system denotes that the file\n+\t\t\t\t\t\tis not completely received from the s3 bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis is the sub folder if any on the remote bucket that would be synchronized\n+\t\t\t\t\t\twith the local directory. Useful if a part of the bucket is to be synchronized.\n+\t\t\t\t\t\tIf none specified, the entire bucket will be synchronized with the local directory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory\" type=\"xsd:string\">", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 226, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "For **auto-create-local-directory**, I will include this in the JIRA for enhancements. Currently it creates the required structure by default\nThe **local-filename-generator-expression** will be added to the JIRA of enhancements\n", "created_at": "2013-02-27T18:31:37Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3175470", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175470"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3175470"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175575", "pull_request_review_id": null, "id": 3175575, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t</xsd:complexType>\n+\t</xsd:element>\n+\t<xsd:element name=\"s3-inbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines the inbound channel adapter for Amazon S3. The component is used to synchronize\n+\t\t\t\t\tthe objects in an S3 bucket with the file system.\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n+\t\t\t\t<xsd:element ref=\"integration:poller\"/>\n+\t\t\t</xsd:sequence>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix files will use while the are being written to the local file system.\n+\t\t\t\t\t\tA file present with this suffix on the local file system denotes that the file\n+\t\t\t\t\t\tis not completely received from the s3 bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis is the sub folder if any on the remote bucket that would be synchronized\n+\t\t\t\t\t\twith the local directory. Useful if a part of the bucket is to be synchronized.\n+\t\t\t\t\t\tIf none specified, the entire bucket will be synchronized with the local directory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe attribute specifying the directory on the local file system where\n+\t\t\t\t\t\tthe objects from S3 bucket would be synchronized to. Either of directory\n+\t\t\t\t\t\tor the directory-expression are mandatory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory-expression\" type=\"xsd:string\">", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 235, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "This is an alternative to the local-directory attribute where the local directory's value will be evaluated at runtime, but only on startup.\n", "created_at": "2013-02-27T18:38:15Z", "updated_at": "2013-02-27T19:04:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3175575", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175575"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3175575"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3175575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3176067", "pull_request_review_id": null, "id": 3176067, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t</xsd:complexType>\n+\t</xsd:element>\n+\t<xsd:element name=\"s3-inbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines the inbound channel adapter for Amazon S3. The component is used to synchronize\n+\t\t\t\t\tthe objects in an S3 bucket with the file system.\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n+\t\t\t\t<xsd:element ref=\"integration:poller\"/>\n+\t\t\t</xsd:sequence>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix files will use while the are being written to the local file system.\n+\t\t\t\t\t\tA file present with this suffix on the local file system denotes that the file\n+\t\t\t\t\t\tis not completely received from the s3 bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis is the sub folder if any on the remote bucket that would be synchronized\n+\t\t\t\t\t\twith the local directory. Useful if a part of the bucket is to be synchronized.\n+\t\t\t\t\t\tIf none specified, the entire bucket will be synchronized with the local directory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe attribute specifying the directory on the local file system where\n+\t\t\t\t\t\tthe objects from S3 bucket would be synchronized to. Either of directory\n+\t\t\t\t\t\tor the directory-expression are mandatory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory-expression\" type=\"xsd:string\">", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 235, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Keep in mind to rename **directory** to **local-directory**.\n", "created_at": "2013-02-27T19:04:27Z", "updated_at": "2013-02-27T19:04:27Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3176067", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3176067"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3176067"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3176067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3176214", "pull_request_review_id": null, "id": 3176214, "diff_hunk": "@@ -104,4 +104,283 @@\n \t\t\t</xsd:attribute>\n \t\t</xsd:complexType>\n \t</xsd:element>\n+\t<xsd:element name=\"s3-outbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines an outbound S3 Channel Adapter for Uploading files to Amazon S3\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tRelevant only when the payload of the message to the outbound adapter is of\n+\t\t\t\t\t\ttype java.lang.String.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"multipart-upload-threshold\" type=\"xsd:integer\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tAWS S3 provides a facility to upload the file in multipart in parallel\n+\t\t\t\t\t\tthreads.  This integer value is used to provide the threshold after which\n+\t\t\t\t\t\tthe uploads to the S3 bucket will be done in multi part. Amazon recommends\n+\t\t\t\t\t\tthe size to to 100 MB.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tIf the payload of the message is an InputStream, byte[] or String\n+\t\t\t\t\t\tthe contents are written to a temporary file in the provided temporary directory\n+\t\t\t\t\t\tlocation before being uploaded to the S3. In absence of this attribute, the\n+\t\t\t\t\t\tvalue is defaulted to the value of the system property \"java.io.tmpdir\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix for the files if a temporary file is to be generated. The value\n+\t\t\t\t\t\tdefaults to \".writing\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"thread-pool-executor\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.ThreadPoolExecutor\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\t\tThe thread pool executor to be used for multi part uploads.\n+\t\t\t\t\t\t\tIf none is provided, the default one used by the underlying SDK\n+\t\t\t\t\t\t\tor library will be used.\n+\t\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String literal that gives the remote folder in the provided bucket where\n+\t\t\t\t\t\tthe files will be uploaded. This attribute is mutually exclusive to\n+\t\t\t\t\t\tremote-directory-expression\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis attribute is mutually exclusive with the remote-directory attribute\n+\t\t\t\t\t\tand is used to provide an expression that would be evaluated against the incoming\n+\t\t\t\t\t\tmessage to derive the remote directory name in the given bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generator\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.FileNameGenerationStrategy\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe instance that would be used to generate the name of the file that would be\n+\t\t\t\t\t\tstored in S3. If none is specified then\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.DefaultFileNameGenerationStrategy would be used.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"file-name-generation-expression\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe filename generation expression that is mutually exclusive to the\n+\t\t\t\t\t\tfile-name-generator attribute. The default expression is \"headers['file_name']\"\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"auto-startup\" type=\"xsd:string\" default=\"true\"/>\n+\t\t\t<xsd:attribute name=\"order\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSpecifies the order for invocation when this endpoint is connected as a\n+\t\t\t\t\t\tsubscriber to a SubscribableChannel.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t</xsd:complexType>\n+\t</xsd:element>\n+\t<xsd:element name=\"s3-inbound-channel-adapter\">\n+\t\t<xsd:complexType>\n+\t\t\t<xsd:annotation>\n+\t\t\t\t<xsd:documentation>\n+\t\t\t\t\tDefines the inbound channel adapter for Amazon S3. The component is used to synchronize\n+\t\t\t\t\tthe objects in an S3 bucket with the file system.\n+\t\t\t\t</xsd:documentation>\n+\t\t\t</xsd:annotation>\n+\t\t\t<xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n+\t\t\t\t<xsd:element ref=\"integration:poller\"/>\n+\t\t\t</xsd:sequence>\n+\t\t\t<xsd:attribute name=\"id\" type=\"xsd:string\"/>\n+\t\t\t<xsd:attribute name=\"channel\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:annotation kind=\"ref\">\n+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.core.MessageChannel\"/>\n+\t\t\t\t\t\t</tool:annotation>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attributeGroup ref=\"awsAdaptersCommonAttributes\"/>\n+\t\t\t<xsd:attribute name=\"bucket\" type=\"xsd:string\" use=\"required\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe mandatory attribute that would be used to provide the AWS bucket to which\n+\t\t\t\t\t\tthe objects needs to be uploaded.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"temporary-suffix\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe suffix files will use while the are being written to the local file system.\n+\t\t\t\t\t\tA file present with this suffix on the local file system denotes that the file\n+\t\t\t\t\t\tis not completely received from the s3 bucket.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"s3-operations\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:appinfo>\n+\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.integration.aws.s3.core.AmazonS3Operations\"/>\n+\t\t\t\t\t</xsd:appinfo>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tReference to the beanwith an implementation of org.springframework.integration.aws.s3.core.AmazonS3Operations\n+\t\t\t\t\t\tthat would be used to perform the operations on the S3 bucket. If not provided, the\n+\t\t\t\t\t\tdefault implementation used is\n+\t\t\t\t\t\torg.springframework.integration.aws.s3.core.AmazonS3OperationsImpl which is the\n+\t\t\t\t\t\timplementation using the AWS SDK.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"aws-endpoint\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe String that gives the endpoint to use for the adapter, if none is\n+\t\t\t\t\t\tspecified the default used is s3.amazonaws.com.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"remote-directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThis is the sub folder if any on the remote bucket that would be synchronized\n+\t\t\t\t\t\twith the local directory. Useful if a part of the bucket is to be synchronized.\n+\t\t\t\t\t\tIf none specified, the entire bucket will be synchronized with the local directory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory\" type=\"xsd:string\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tThe attribute specifying the directory on the local file system where\n+\t\t\t\t\t\tthe objects from S3 bucket would be synchronized to. Either of directory\n+\t\t\t\t\t\tor the directory-expression are mandatory.\n+\t\t\t\t\t</xsd:documentation>\n+\t\t\t\t</xsd:annotation>\n+\t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"directory-expression\" type=\"xsd:string\">", "path": "spring-integration-aws/src/main/resources/org/springframework/integration/aws/config/xml/spring-integration-aws-1.0.xsd", "position": null, "original_position": 235, "commit_id": "eb519f81c73b930053c811c0423fab6410f302e3", "original_commit_id": "c965842d69a2aabc8574bcd0f9a56dcdc13161a7", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Done. Some changes pushed.\n", "created_at": "2013-02-27T19:11:14Z", "updated_at": "2013-02-27T19:11:14Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3176214", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3176214"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/29#discussion_r3176214"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/29"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3176214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3002326", "pull_request_review_id": null, "id": 3002326, "diff_hunk": "@@ -0,0 +1,54 @@\n+/*\r\n+ * Copyright 2002-2013 the original author or authors.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.springframework.integration.voldemort.convert;\r\n+\r\n+import org.springframework.integration.Message;\r\n+import org.springframework.integration.support.MessageBuilder;\r\n+import voldemort.versioning.Versioned;\r\n+\r\n+/**\r\n+ * Converter allowing to transform Spring Integration message to Voldemort record with desired key and value\r\n+ * representation.\r\n+ *\r\n+ * @param <K> Voldemort key type.\r\n+ * @param <V> Voldemort value type.\r\n+ * @param <P> Spring Integration payload type.\r\n+ *\r\n+ * @author Lukasz Antoniak\r\n+ * @since 1.0\r\n+ */\r\n+public interface VoldemortConverter<K, V, P> {\r", "path": "spring-integration-voldemort/src/main/java/org/springframework/integration/voldemort/convert/VoldemortConverter.java", "position": null, "original_position": 33, "commit_id": "7ac636ea312edf324daa908b752df68cc8d52a96", "original_commit_id": "3b0d81b51b75f4b76ed38661ae7afd2093b64660", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Any reason for introducing this new interface and not using **_o.s.i.s.c.MessageConverter**_ instead?\n", "created_at": "2013-02-13T20:05:36Z", "updated_at": "2013-03-01T13:46:20Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#discussion_r3002326", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/20", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3002326"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/20#discussion_r3002326"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/20"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3002326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3009238", "pull_request_review_id": null, "id": 3009238, "diff_hunk": "@@ -0,0 +1,54 @@\n+/*\r\n+ * Copyright 2002-2013 the original author or authors.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.springframework.integration.voldemort.convert;\r\n+\r\n+import org.springframework.integration.Message;\r\n+import org.springframework.integration.support.MessageBuilder;\r\n+import voldemort.versioning.Versioned;\r\n+\r\n+/**\r\n+ * Converter allowing to transform Spring Integration message to Voldemort record with desired key and value\r\n+ * representation.\r\n+ *\r\n+ * @param <K> Voldemort key type.\r\n+ * @param <V> Voldemort value type.\r\n+ * @param <P> Spring Integration payload type.\r\n+ *\r\n+ * @author Lukasz Antoniak\r\n+ * @since 1.0\r\n+ */\r\n+public interface VoldemortConverter<K, V, P> {\r", "path": "spring-integration-voldemort/src/main/java/org/springframework/integration/voldemort/convert/VoldemortConverter.java", "position": null, "original_position": 33, "commit_id": "7ac636ea312edf324daa908b752df68cc8d52a96", "original_commit_id": "3b0d81b51b75f4b76ed38661ae7afd2093b64660", "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "body": "The main reason standing behind this decision was type safety and clarity. I didn't want user to realize in runtime (or while reading documentation) that the object he receives in `MessageConverter#toMessage(Object)` method is actually `KeyValue<K, Versioned<V>>` wrapper, and that I expect him to return `KeyValue<K, V>` in `MessageConverter#fromMessage(Message<P>)`. If you can think of any better solution or using `MessageConverter` is preferred, I'll be happy to alter this part of code. I can see that spring-integration-mongodb module also uses MongoDB specific converter.\n", "created_at": "2013-02-14T07:07:51Z", "updated_at": "2013-03-01T13:46:20Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#discussion_r3009238", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/20", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3009238"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/20#discussion_r3009238"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/20"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3009238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3010710", "pull_request_review_id": null, "id": 3010710, "diff_hunk": "@@ -0,0 +1,54 @@\n+/*\r\n+ * Copyright 2002-2013 the original author or authors.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.springframework.integration.voldemort.convert;\r\n+\r\n+import org.springframework.integration.Message;\r\n+import org.springframework.integration.support.MessageBuilder;\r\n+import voldemort.versioning.Versioned;\r\n+\r\n+/**\r\n+ * Converter allowing to transform Spring Integration message to Voldemort record with desired key and value\r\n+ * representation.\r\n+ *\r\n+ * @param <K> Voldemort key type.\r\n+ * @param <V> Voldemort value type.\r\n+ * @param <P> Spring Integration payload type.\r\n+ *\r\n+ * @author Lukasz Antoniak\r\n+ * @since 1.0\r\n+ */\r\n+public interface VoldemortConverter<K, V, P> {\r", "path": "spring-integration-voldemort/src/main/java/org/springframework/integration/voldemort/convert/VoldemortConverter.java", "position": null, "original_position": 33, "commit_id": "7ac636ea312edf324daa908b752df68cc8d52a96", "original_commit_id": "3b0d81b51b75f4b76ed38661ae7afd2093b64660", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "What you say makes sense and yes, Mongo adapters do use a custom converter, but that comes from spring data mongo and is used to instantiate the MongoTemplate if one is not provided.\nI am comparing this more to the Redis's **_o.s.i.r.oRedisStoreWritingMessageHandler**_ as that would be a better comparison.\nMerging in a way you have implemented shouldn't be a issue in my opinion as we can anytime change things in future to accommodate the changes.But do take a look at the way Redis's adapters are implemented and let us know your views.\n", "created_at": "2013-02-14T10:15:27Z", "updated_at": "2013-03-01T13:46:20Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#discussion_r3010710", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/20", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3010710"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/20#discussion_r3010710"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/20"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3010710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3116208", "pull_request_review_id": null, "id": 3116208, "diff_hunk": "@@ -0,0 +1,54 @@\n+/*\r\n+ * Copyright 2002-2013 the original author or authors.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.springframework.integration.voldemort.convert;\r\n+\r\n+import org.springframework.integration.Message;\r\n+import org.springframework.integration.support.MessageBuilder;\r\n+import voldemort.versioning.Versioned;\r\n+\r\n+/**\r\n+ * Converter allowing to transform Spring Integration message to Voldemort record with desired key and value\r\n+ * representation.\r\n+ *\r\n+ * @param <K> Voldemort key type.\r\n+ * @param <V> Voldemort value type.\r\n+ * @param <P> Spring Integration payload type.\r\n+ *\r\n+ * @author Lukasz Antoniak\r\n+ * @since 1.0\r\n+ */\r\n+public interface VoldemortConverter<K, V, P> {\r", "path": "spring-integration-voldemort/src/main/java/org/springframework/integration/voldemort/convert/VoldemortConverter.java", "position": null, "original_position": 33, "commit_id": "7ac636ea312edf324daa908b752df68cc8d52a96", "original_commit_id": "3b0d81b51b75f4b76ed38661ae7afd2093b64660", "user": {"login": "lukasz-antoniak", "id": 681307, "avatar_url": "https://avatars3.githubusercontent.com/u/681307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-antoniak", "html_url": "https://github.com/lukasz-antoniak", "followers_url": "https://api.github.com/users/lukasz-antoniak/followers", "following_url": "https://api.github.com/users/lukasz-antoniak/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-antoniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-antoniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-antoniak/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-antoniak/orgs", "repos_url": "https://api.github.com/users/lukasz-antoniak/repos", "events_url": "https://api.github.com/users/lukasz-antoniak/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-antoniak/received_events", "type": "User", "site_admin": false}, "body": "`VoldemortConverter` allows user to store chosen part of message payload. After quick skip through the implementation of `RedisStoreWritingMessageHandler`, I guess that it can persist only complete payload objects. Currently I think that payload transformation could be processed by `@Transformer` outside of Voldemort adapter, so let's omit this issue. More important design decision is the way of determining object's key. This is achieved programmatically in `VoldemortConverter`, while Redis adapter looks up concrete message header (`RedisHeaders.KEY`) or evaluates `key-expression`.\n\nWhat would be the preferred way of passing/calculating object's key in your opinion? In case it's Redis' approach, I will change Voldemort adapter to work similarly. IMO +1 for Redis.\n", "created_at": "2013-02-22T14:18:10Z", "updated_at": "2013-03-01T13:46:20Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/20#discussion_r3116208", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/20", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3116208"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/20#discussion_r3116208"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/20"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/3116208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404219", "pull_request_review_id": null, "id": 4404219, "diff_hunk": "@@ -325,46 +407,149 @@ public void start() {\n \t\t\t\tsession.connectAndBind(host, port, bindType, systemId, password, systemType, addrTon, addrNpi, addressRange, timeout);\n \t\t\t\tthis.running = true;\n \t\t\t} catch (IOException e) {\n-\t\t\t\tlog.error(\"something happened when trying to connect\", e);\n+                if (log.isDebugEnabled())\n+\t\t\t\t    log.error(\"Error happened when trying to connect to \" + host + \":\" + port, e);\n+                else\n+                    log.error(\"Error happened when trying to connect to \" + host + \":\" + port + \". Cause: \"\n+                            + e.getMessage());\n \t\t\t}\n \t\t}\n \t}\n-}\n-\n-/*    private void reconnectAfter(final long timeInMillis) {\n-        new Thread() {\n-            @Override\n-            public void run() {\n-                logger.info(\"Schedule reconnect after \" + timeInMillis + \" millis\");\n-                try {\n-                    Thread.sleep(timeInMillis);\n-                } catch (InterruptedException e) {\n-                }\n \n-                int attempt = 0;\n-                while (session == null || session.getSessionState().equals(SessionState.CLOSED)) {\n+    /**\n+     * Lifecycle implementation that will try to re-establish connection with specific interval. At the start of the\n+     * connection.\n+     *\n+     * @author Johanes Soetanto\n+     */\n+    private class AutoReconnectLifecycle implements Lifecycle {\n+\n+        private final Logger log = LoggerFactory.getLogger(AutoReconnectLifecycle.class);\n+        private final SMPPSession session;\n+        private volatile boolean running;\n+\n+        /**\n+         * Creating auto reconnect lifecycle using SMPP session and reconnect interval in milliseconds\n+         * @param smppSession reference to SMPP session\n+         */\n+        private AutoReconnectLifecycle(SMPPSession smppSession) {\n+            this.session = smppSession;\n+        }\n+\n+        @Override\n+        public boolean isRunning() {\n+            return this.running;\n+        }\n+\n+        @Override\n+        public void stop() {\n+            if (session != null) {\n+                if (session.getSessionState().isBound()) {\n                     try {\n-                        logger.info(\"Reconnecting attempt #\" + (++attempt) + \"...\");\n-                        session = newSession();\n-                    } catch (IOException e) {\n-                        logger.error(\"Failed opening connection and bind to \" + remoteIpAddress + \":\" + remotePort, e);\n-                        // wait for a second\n-                        try { Thread.sleep(1000); } catch (InterruptedException ee) {}\n+                        session.unbindAndClose();\n+                    } catch (Throwable t) {\n+                        log.warn(\"Couldn't close and unbind the session\", t);\n                     }\n                 }\n+            } else {\n+                log.warn(\"The smppSession given to close is null\");\n             }\n-        }.start();\n-    }\n+        }\n+\n+        @Override\n+        public void start() {\n+            connect();\n+\n+            if (!running) {\n+                log.debug(\"Try to connect at later time. The delay is {}ms\", reconnectInterval);\n+                scheduleReconnect();\n+            } else {\n+                registerSessionCloseListener();\n+            }\n+        }\n \n+        /**\n+         * Register session state listener to reconnect when session is closed by server.\n+         */\n+        private void registerSessionCloseListener() {\n+            log.debug(\"Registering session close listener\");\n+            session.addSessionStateListener(new SessionStateListener() {\n+                @Override\n+                public void onStateChange(SessionState newState, SessionState oldState, Object source) {\n+                    // when session is closed but client session has not been destroyed can indicates client\n+                    // lose connection to server\n+                    if (newState.equals(SessionState.CLOSED)) {\n+                        running = false;\n+                        if (!destroyed) {\n+                            log.info(\"Session to {}:{} has been closed. Try to reconnect later\", host, port);\n+\n+                            final SMPPSession newSession = createNewSession();\n+                            newSession.setMessageReceiverListener(product.getDelegateMessageListener());\n+                            if (sessionStateListener != null) {\n+                                session.addSessionStateListener(sessionStateListener);\n+                            }\n+                            sessionFactoryBean.setTarget(newSession);\n+\n+                            scheduleReconnect();\n+                        }\n+                    }\n+                }\n+            });\n+        }\n \n-     private class SessionStateListenerImpl implements SessionStateListener {\n-        public void onStateChange(SessionState newState, SessionState oldState,\n-                Object source) {\n-            if (newState.equals(SessionState.CLOSED)) {\n-                logger.info(\"Session closed\");\n-                reconnectAfter(reconnectInterval);\n+        /**\n+         * Perform connection logic.\n+         */\n+        private void connect() {\n+            try {\n+                session.connectAndBind(host, port, bindType, systemId, password, systemType,\n+                        addrTon, addrNpi, addressRange, timeout);\n+                this.running = true;\n+\n+            } catch (IOException e) {\n+                if (log.isDebugEnabled())\n+                    log.error(\"Error happened when trying to connect to \" + host + \":\" + port, e);\n+                else\n+                    log.error(\"Error happened when trying to connect to {}:{}. Cause: {}\",\n+                            new Object[]{host, port, e.getMessage()});\n             }\n         }\n+\n+        /**\n+         * Schedule a session reconnection.\n+         */\n+        private void scheduleReconnect() {\n+\n+            new Thread() {", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/session/SmppSessionFactoryBean.java", "position": null, "original_position": 404, "commit_id": "023db665b68aeb2799b8b70ab68ba5bd88fc44ce", "original_commit_id": "b82add89a0ea7188b1aa016f5367d8874afb9b82", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "This should probably use Spring's TaskExecutor [1] support.\n\n[1] - http://static.springsource.org/spring/docs/current/spring-framework-reference/html/scheduling.html  \n", "created_at": "2013-05-27T20:06:22Z", "updated_at": "2013-05-28T07:18:25Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#discussion_r4404219", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/37", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404219"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/37#discussion_r4404219"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/37"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404263", "pull_request_review_id": null, "id": 4404263, "diff_hunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.smpp.core;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.UnsupportedEncodingException;\n+\n+/**\n+ * This is specification for data coding based on SMPP API and Java charset.\n+ *\n+ * @author Johanes Soetanto\n+ * @since 1.0\n+ */\n+public class DataCodingSpecification {\n+\n+    private static final Logger log = LoggerFactory.getLogger(DataCodingSpecification.class);\n+    public static final String US_ASCII = \"US-ASCII\";\n+    public static final String ISO_8859_1 = \"ISO-8859-1\";\n+    public static final String ISO_8859_5 = \"ISO-8859-5\";\n+    public static final String ISO_8859_8 = \"ISO-8859-8\";\n+    public static final String UTF_16 = \"UTF-16\";\n+    public static final String UTF_8 = \"UTF-8\";\n+    public static final String EUC_KR = \"EUC-KR\";\n+    public static final String EUC_JP = \"EUC-JP\";\n+\n+    /**\n+     * Get maximum characters for data coding. Returns\n+     * <ul>\n+     *     <li>160 for data coding 0/1</li>\n+     *     <li>70 for data coding 5/8/10/13/14</li>\n+     *     <li>140 for others</li>\n+     * </ul>\n+     *\n+     * @param dataCoding data coding\n+     * @return maximum characters can be used for the text with specified data coding\n+     */\n+    // reference https://www.cisco.com/en/US/docs/voice_ip_comm/connection/7x/administration/guide/7xcucsag200.pdf\n+    public static int getMaxCharacters(byte dataCoding) {\n+        switch (dataCoding) {\n+            case 0:case 1: return 160; // these are 7bit, return full length\n+            // JP and KR are suppose to use multi-byte character. This is probably needed to be tested once we get more\n+            // people using those charset so they can maximize their allowed number of characters in single message.\n+            // For now assume it is the same one as double byte characters\n+            case 5:case 10:case 13: // just to be safe for japanese\n+            case 8:\n+            case 14: // just to be safe for korean\n+                return 70;\n+            default: return 140;\n+        }\n+    }\n+\n+    /**\n+     * Get charset name based on data coding. Returns:\n+     * <ul>\n+     *     <li>US-ASCII for data coding 1</li>\n+     *     <li>ISO-8859-1 for data coding 3</li>\n+     *     <li>ISO-8859-5 for data coding 6</li>\n+     *     <li>ISO-8859-8 for data coding 7</li>\n+     *     <li>UTF-16 for data coding 8</li>\n+     *     <li>EUC-KR for data coding 14</li>\n+     *     <li>EUC-JP for data coding 5/10/13</li>\n+     *     <li>UTF-8 for others</li>\n+     * </ul>\n+     *\n+     * @param dataCoding data coding\n+     * @return charset name related to the data coding\n+     */\n+    public static String getCharsetName(byte dataCoding) {\n+        switch (dataCoding) {\n+            case 1: return US_ASCII;\n+            case 3: return ISO_8859_1;\n+            case 6: return ISO_8859_5;\n+            case 7: return ISO_8859_8;\n+            case 8: return UTF_16;\n+            case 14: return EUC_KR;\n+            case 5: case 10: case 13: return EUC_JP;\n+            case 2: case 4: // since both 2 and 4 is unspecified binary, use UTF-8 encoding\n+            case 0: // since dataCoding 0 is gsm 7bit, it is quite safe to use UTF-8\n+            default: return UTF_8;\n+        }\n+    }\n+\n+    /**\n+     * Get message in bytes. This will use {@link #getCharsetName(byte)} to get the message in bytes.\n+     * @param message short message\n+     * @param dataCoding data coding\n+     * @return message in bytes based on the data coding\n+     */\n+    public static byte[] getMessageInBytes(String message, byte dataCoding) {\n+        final String charsetName = getCharsetName(dataCoding);\n+        if (!charsetName.equals(UTF_8)) {\n+            try {\n+                return message.getBytes(charsetName);\n+            } catch (UnsupportedEncodingException e) {", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/DataCodingSpecification.java", "position": null, "original_position": 109, "commit_id": "023db665b68aeb2799b8b70ab68ba5bd88fc44ce", "original_commit_id": "b82add89a0ea7188b1aa016f5367d8874afb9b82", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Style - \n\n``` java\ntry {\n...\n}\ncatch (UnsupportedEncodingException e) {\n...\n}\n```\n", "created_at": "2013-05-27T20:12:54Z", "updated_at": "2013-05-28T07:18:25Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#discussion_r4404263", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/37", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404263"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/37#discussion_r4404263"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/37"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404276", "pull_request_review_id": null, "id": 4404276, "diff_hunk": "@@ -242,7 +300,11 @@ public DeliveryReceiptTask(SMPPServerSession session,\n \n \t\tpublic void run() {\n \t\t\ttry {\n-\t\t\t\tThread.sleep(1000);\n+                if (new String(shortMessage).equals(Agreement.DELAY_DELIVERY_RECEIPT)) {\n+                    logger.debug(\"Receive request to delay sending of delivery receipt\");\n+                    Thread.sleep(messageDelay);\n+                } else", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/MockSmppServer.java", "position": 135, "original_position": 131, "commit_id": "023db665b68aeb2799b8b70ab68ba5bd88fc44ce", "original_commit_id": "b82add89a0ea7188b1aa016f5367d8874afb9b82", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Prefer explicit curly braces\n", "created_at": "2013-05-27T20:15:04Z", "updated_at": "2013-05-28T07:18:25Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#discussion_r4404276", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/37", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404276"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/37#discussion_r4404276"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/37"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404282", "pull_request_review_id": null, "id": 4404282, "diff_hunk": "@@ -0,0 +1,75 @@\n+/* Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.smpp;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.core.MessagingTemplate;\n+import org.springframework.integration.smpp.core.SmppConstants;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+/**\n+ * exercises the outbound adapter.\n+ *\n+ * @author Josh Long", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/TestSmppOutboundChannelAdapterWithChain.java", "position": null, "original_position": 33, "commit_id": "023db665b68aeb2799b8b70ab68ba5bd88fc44ce", "original_commit_id": "b82add89a0ea7188b1aa016f5367d8874afb9b82", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Should probably be your name here.\n", "created_at": "2013-05-27T20:15:39Z", "updated_at": "2013-05-28T07:18:25Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/37#discussion_r4404282", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/37", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404282"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/37#discussion_r4404282"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/37"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645787", "pull_request_review_id": null, "id": 4645787, "diff_hunk": "@@ -0,0 +1,155 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT> extends AbstractEndpoint implements SubscribableChannel {", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 33, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "adfcfa466bcea8874368c5f4e841c16f9e67fcfb", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Inbound adapters dont't 'implement SubscribableChannel' - it tightly couples the consumer to the producer - you can't change the implementation with configuration.\n\nInstead, these \"message-driven\" adapters extend `MessageProducerSupport` (a subclass of `AbstractEndpoint`) that gets an outputChannel injected which is invoked by `super.sendMessage()`.\n", "created_at": "2013-06-11T21:44:28Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4645787", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645787"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4645787"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645816", "pull_request_review_id": null, "id": 4645816, "diff_hunk": "@@ -0,0 +1,155 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT> extends AbstractEndpoint implements SubscribableChannel {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 47, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "adfcfa466bcea8874368c5f4e841c16f9e67fcfb", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "This doesn't belong here; just add a `<bean/>` of type `IdGenerator` to the context and SI will automatically wire it in.\n", "created_at": "2013-06-11T21:45:55Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4645816", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645816"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4645816"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645860", "pull_request_review_id": null, "id": 4645860, "diff_hunk": "@@ -0,0 +1,256 @@\n+description = 'Spring Integration Reactor Support'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'https://repo.springsource.org/plugins-snapshot' }\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmavenLocal()\n+\tmavenCentral()\n+\tmaven { url 'https://repo.springsource.org/libs-snapshot' }\n+}\n+\n+sourceCompatibility=1.6\n+targetCompatibility=1.6\n+\n+ext {\n+\tslf4jVersion = '1.7.5'\n+\tlogbackVersion = '1.0.11'\n+\tjunitVersion = '4.11'\n+\tspringVersion = '3.2.3.RELEASE'\n+\tspringIntegrationVersion = '3.0.0.M2'\n+\treactorVersion = '1.0.0.BUILD-SNAPSHOT'\n+\n+\tidPrefix = 'reactor'\n+\n+\tlinkHomepage = 'https://github.com/SpringSource/spring-integration-extensions'\n+\tlinkCi       = 'https://build.springsource.org/browse/INTEXT'\n+\tlinkIssue    = 'https://jira.springsource.org/browse/INTEXT'\n+\tlinkScmUrl           = 'https://github.com/SpringSource/spring-integration-extensions'\n+\tlinkScmConnection    = 'https://github.com/SpringSource/spring-integration-extensions.git'\n+\tlinkScmDevConnection = 'git@github.com:SpringSource/spring-integration-extensions.git'\n+\n+}\n+\n+eclipse {\n+\tproject {\n+\t\tnatures += 'org.springframework.ide.eclipse.core.springnature'\n+\t}\n+}\n+\n+sourceSets {\n+\ttest {\n+\t\tresources {\n+\t\t\tsrcDirs = ['src/test/resources', 'src/test/java']\n+\t\t}\n+\t}\n+}\n+\n+// See http://www.gradle.org/docs/current/userguide/dependency_management.html#sub:configurations\n+// and http://www.gradle.org/docs/current/dsl/org.gradle.api.artifacts.ConfigurationContainer.html\n+configurations {\n+\tjacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo\n+}\n+\n+dependencies {\n+\tcompile \"org.springframework:spring-beans:$springVersion\"\n+\tcompile \"org.springframework:spring-context:$springVersion\"\n+\tcompile \"org.springframework:spring-expression:$springVersion\"", "path": "spring-integration-reactor/build.gradle", "position": null, "original_position": 67, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "adfcfa466bcea8874368c5f4e841c16f9e67fcfb", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "We typically pull in core spring versions transitively, through Spring Integration; are you using Spring 3.2 features? \n", "created_at": "2013-06-11T21:47:41Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4645860", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645860"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4645860"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4645860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649039", "pull_request_review_id": null, "id": 4649039, "diff_hunk": "@@ -0,0 +1,155 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT> extends AbstractEndpoint implements SubscribableChannel {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 47, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "adfcfa466bcea8874368c5f4e841c16f9e67fcfb", "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "body": "I was aware of the bean declaration convention but besides requiring an extra bean definition for this to work OOTB, if that's already been set, my own bean declaration will have no effect. Because the randomUUID() call is so expensive and because performance is critical here, I want to make sure beyond all doubt that a fast UUID generator is in use, no matter what might already have been set.\n\nI've tried to find an alternative but MessageHeaders is very limiting and it's declared final, so the only way around the randomUUID() is by that static IdGenerator field.\n", "created_at": "2013-06-12T01:29:51Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4649039", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649039"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4649039"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649054", "pull_request_review_id": null, "id": 4649054, "diff_hunk": "@@ -0,0 +1,256 @@\n+description = 'Spring Integration Reactor Support'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'https://repo.springsource.org/plugins-snapshot' }\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmavenLocal()\n+\tmavenCentral()\n+\tmaven { url 'https://repo.springsource.org/libs-snapshot' }\n+}\n+\n+sourceCompatibility=1.6\n+targetCompatibility=1.6\n+\n+ext {\n+\tslf4jVersion = '1.7.5'\n+\tlogbackVersion = '1.0.11'\n+\tjunitVersion = '4.11'\n+\tspringVersion = '3.2.3.RELEASE'\n+\tspringIntegrationVersion = '3.0.0.M2'\n+\treactorVersion = '1.0.0.BUILD-SNAPSHOT'\n+\n+\tidPrefix = 'reactor'\n+\n+\tlinkHomepage = 'https://github.com/SpringSource/spring-integration-extensions'\n+\tlinkCi       = 'https://build.springsource.org/browse/INTEXT'\n+\tlinkIssue    = 'https://jira.springsource.org/browse/INTEXT'\n+\tlinkScmUrl           = 'https://github.com/SpringSource/spring-integration-extensions'\n+\tlinkScmConnection    = 'https://github.com/SpringSource/spring-integration-extensions.git'\n+\tlinkScmDevConnection = 'git@github.com:SpringSource/spring-integration-extensions.git'\n+\n+}\n+\n+eclipse {\n+\tproject {\n+\t\tnatures += 'org.springframework.ide.eclipse.core.springnature'\n+\t}\n+}\n+\n+sourceSets {\n+\ttest {\n+\t\tresources {\n+\t\t\tsrcDirs = ['src/test/resources', 'src/test/java']\n+\t\t}\n+\t}\n+}\n+\n+// See http://www.gradle.org/docs/current/userguide/dependency_management.html#sub:configurations\n+// and http://www.gradle.org/docs/current/dsl/org.gradle.api.artifacts.ConfigurationContainer.html\n+configurations {\n+\tjacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo\n+}\n+\n+dependencies {\n+\tcompile \"org.springframework:spring-beans:$springVersion\"\n+\tcompile \"org.springframework:spring-context:$springVersion\"\n+\tcompile \"org.springframework:spring-expression:$springVersion\"", "path": "spring-integration-reactor/build.gradle", "position": null, "original_position": 67, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "adfcfa466bcea8874368c5f4e841c16f9e67fcfb", "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "body": "I'll give it a try without them.\n", "created_at": "2013-06-12T01:31:12Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4649054", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649054"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4649054"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649195", "pull_request_review_id": null, "id": 4649195, "diff_hunk": "@@ -0,0 +1,155 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT> extends AbstractEndpoint implements SubscribableChannel {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 47, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "adfcfa466bcea8874368c5f4e841c16f9e67fcfb", "user": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "body": "Let's open an issue against Spring Integration 3.0 to switch the default IdGenerator away from randomUUID() so that this customization would not be needed in the first place.\n", "created_at": "2013-06-12T02:08:48Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4649195", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649195"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4649195"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4649195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650901", "pull_request_review_id": null, "id": 4650901, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(MessageBuilder.withPayload(ev.getData()).build());", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 90, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Hi, Jon!\nI'm not well yet with Reactor. My respect for this excellent foundation!\nBut I'm well with SI, so let me review it a bit. :smile: \n\nUsually in the SI we send to the `errorChannel` an `ErrorMessage`: e.g. `MessagePublishingErrorHandler.handleError`.\n", "created_at": "2013-06-12T06:21:40Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4650901", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650901"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4650901"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650932", "pull_request_review_id": null, "id": 4650932, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(MessageBuilder.withPayload(ev.getData()).build());\n+\t\t\t\t} else {\n+\t\t\t\t\tlog.error(ev.getData().getMessage(), ev.getData());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\n+\t\tthis.connectionConsumer = new Consumer<TcpConnection<IN, OUT>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(final TcpConnection<IN, OUT> connection) {\n+\t\t\t\tfinal MessageChannel replies = new AbstractMessageChannel() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\t\t\t\t\tconnection.send((OUT) message.getPayload());\n+\t\t\t\t\t\treturn false;", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 105, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Why do you return in all `send` implementations **null**? It will determined as a message producer issue in the SI:\n`MessagingTemplate.doSend`\n", "created_at": "2013-06-12T06:25:44Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4650932", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650932"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4650932"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650961", "pull_request_review_id": null, "id": 4650961, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(MessageBuilder.withPayload(ev.getData()).build());\n+\t\t\t\t} else {\n+\t\t\t\t\tlog.error(ev.getData().getMessage(), ev.getData());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\n+\t\tthis.connectionConsumer = new Consumer<TcpConnection<IN, OUT>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(final TcpConnection<IN, OUT> connection) {\n+\t\t\t\tfinal MessageChannel replies = new AbstractMessageChannel() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\t\t\t\t\tconnection.send((OUT) message.getPayload());\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t};\n+\n+\t\t\t\teventsReactor.on(outgoing.getT1(), new Consumer<Event<Message<?>>>() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void accept(Event<Message<?>> ev) {\n+\t\t\t\t\t\tconnection.send((OUT) ev.getData());\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\n+\t\t\t\tconnection.consume(new Consumer<IN>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void accept(IN in) {\n+\t\t\t\t\t\tMessage<IN> msg = MessageBuilder.withPayload(in)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.setErrorChannel(errorChannel)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.setReplyChannel(replies)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build();\n+\t\t\t\t\t\tif (shouldTrack) {\n+\t\t\t\t\t\t\tmsg = MessageHistory.write(msg, TcpServerInboundChannelAdapter.this);\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\toutputChannel.send(msg);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tpublic void setOutputChannel(MessageChannel outputChannel) {\n+\t\tthis.outputChannel = outputChannel;\n+\t}\n+\n+\tpublic void setErrorChannel(MessageChannel errorChannel) {\n+\t\tthis.errorChannel = errorChannel;\n+\t}\n+\n+\t@Override\n+\tpublic void setShouldTrack(boolean shouldTrack) {\n+\t\tthis.shouldTrack = shouldTrack;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() throws Exception {\n+\t\tthis.server = new TcpServer.Spec<IN, OUT>(NettyTcpServer.class)\n+\t\t\t\t.using(env)\n+\t\t\t\t.using(eventsReactor)\n+\t\t\t\t.listen(bindAddress.getHostString(), bindAddress.getPort())\n+\t\t\t\t.codec(codec)\n+\t\t\t\t.consume(connectionConsumer)\n+\t\t\t\t.get();\n+\t\tsuper.onInit();\n+\t}\n+\n+\t@Override\n+\tprotected void doStart() {\n+\t\tserver.start();\n+\t}\n+\n+\t@Override\n+\tprotected void doStop() {\n+\t\tserver.shutdown();\n+\t}\n+\n+\t@Override\n+\tpublic boolean subscribe(MessageHandler handler) {\n+\t\teventsReactor.on(incoming.getT1(), new MessageHandlerConsumer(handler));\n+\t\treturn false;", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 174, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Should be **true** and in the `unsubscribe` too.\n", "created_at": "2013-06-12T06:29:50Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4650961", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650961"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4650961"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4650961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4651147", "pull_request_review_id": null, "id": 4651147, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 30, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Where is this class located?\n", "created_at": "2013-06-12T06:57:33Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4651147", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4651147"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4651147"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4651147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654420", "pull_request_review_id": null, "id": 4654420, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(MessageBuilder.withPayload(ev.getData()).build());\n+\t\t\t\t} else {\n+\t\t\t\t\tlog.error(ev.getData().getMessage(), ev.getData());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\n+\t\tthis.connectionConsumer = new Consumer<TcpConnection<IN, OUT>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(final TcpConnection<IN, OUT> connection) {\n+\t\t\t\tfinal MessageChannel replies = new AbstractMessageChannel() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\t\t\t\t\tconnection.send((OUT) message.getPayload());\n+\t\t\t\t\t\treturn false;", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 105, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "body": "This might be just a documentation issue, but I looked all over for some javadoc that explained what the boolean returned from doSend is supposed to signify. Does `true` mean \"successfully sent\"?\n", "created_at": "2013-06-12T11:32:02Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654420", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654420"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654420"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654425", "pull_request_review_id": null, "id": 4654425, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(MessageBuilder.withPayload(ev.getData()).build());", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 90, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "body": "Good point. That's easy enough to fix.\n", "created_at": "2013-06-12T11:32:32Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654425", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654425"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654425"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654439", "pull_request_review_id": null, "id": 4654439, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 30, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "body": "I deleted it last night from reactor snapshots and needed to add it here. Unfortunately I was tired and didn't get to it before going to bed.  :)\n", "created_at": "2013-06-12T11:33:47Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654439", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654439"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654439"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654450", "pull_request_review_id": null, "id": 4654450, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(MessageBuilder.withPayload(ev.getData()).build());\n+\t\t\t\t} else {\n+\t\t\t\t\tlog.error(ev.getData().getMessage(), ev.getData());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\n+\t\tthis.connectionConsumer = new Consumer<TcpConnection<IN, OUT>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(final TcpConnection<IN, OUT> connection) {\n+\t\t\t\tfinal MessageChannel replies = new AbstractMessageChannel() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\t\t\t\t\tconnection.send((OUT) message.getPayload());\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t};\n+\n+\t\t\t\teventsReactor.on(outgoing.getT1(), new Consumer<Event<Message<?>>>() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void accept(Event<Message<?>> ev) {\n+\t\t\t\t\t\tconnection.send((OUT) ev.getData());\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\n+\t\t\t\tconnection.consume(new Consumer<IN>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void accept(IN in) {\n+\t\t\t\t\t\tMessage<IN> msg = MessageBuilder.withPayload(in)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.setErrorChannel(errorChannel)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.setReplyChannel(replies)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build();\n+\t\t\t\t\t\tif (shouldTrack) {\n+\t\t\t\t\t\t\tmsg = MessageHistory.write(msg, TcpServerInboundChannelAdapter.this);\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\toutputChannel.send(msg);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tpublic void setOutputChannel(MessageChannel outputChannel) {\n+\t\tthis.outputChannel = outputChannel;\n+\t}\n+\n+\tpublic void setErrorChannel(MessageChannel errorChannel) {\n+\t\tthis.errorChannel = errorChannel;\n+\t}\n+\n+\t@Override\n+\tpublic void setShouldTrack(boolean shouldTrack) {\n+\t\tthis.shouldTrack = shouldTrack;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() throws Exception {\n+\t\tthis.server = new TcpServer.Spec<IN, OUT>(NettyTcpServer.class)\n+\t\t\t\t.using(env)\n+\t\t\t\t.using(eventsReactor)\n+\t\t\t\t.listen(bindAddress.getHostString(), bindAddress.getPort())\n+\t\t\t\t.codec(codec)\n+\t\t\t\t.consume(connectionConsumer)\n+\t\t\t\t.get();\n+\t\tsuper.onInit();\n+\t}\n+\n+\t@Override\n+\tprotected void doStart() {\n+\t\tserver.start();\n+\t}\n+\n+\t@Override\n+\tprotected void doStop() {\n+\t\tserver.shutdown();\n+\t}\n+\n+\t@Override\n+\tpublic boolean subscribe(MessageHandler handler) {\n+\t\teventsReactor.on(incoming.getT1(), new MessageHandlerConsumer(handler));\n+\t\treturn false;", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 174, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "body": "Where is the return value documented? I couldn't find any references to what this is supposed to return and what the significance of it is.\n", "created_at": "2013-06-12T11:34:48Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654450", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654450"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654450"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654575", "pull_request_review_id": null, "id": 4654575, "diff_hunk": "@@ -0,0 +1,211 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.MessageHeaders;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.channel.PublishSubscribeChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.GenericMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.util.ReflectionUtils;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.spring.integration.support.Type1UUIDMessageIdGenerator;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.lang.reflect.Field;\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate static Field ID_GEN;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\tID_GEN = MessageHeaders.class.getDeclaredField(\"idGenerator\");\n+\t\t\tReflectionUtils.makeAccessible(ID_GEN);\n+\t\t\tID_GEN.set(null, new Type1UUIDMessageIdGenerator());\n+\t\t} catch (NoSuchFieldException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t} catch (IllegalAccessException e) {\n+\t\t\tthrow new IllegalStateException(e);\n+\t\t}\n+\t}\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(MessageBuilder.withPayload(ev.getData()).build());\n+\t\t\t\t} else {\n+\t\t\t\t\tlog.error(ev.getData().getMessage(), ev.getData());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\n+\t\tthis.connectionConsumer = new Consumer<TcpConnection<IN, OUT>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(final TcpConnection<IN, OUT> connection) {\n+\t\t\t\tfinal MessageChannel replies = new AbstractMessageChannel() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\t\t\t\t\tconnection.send((OUT) message.getPayload());\n+\t\t\t\t\t\treturn false;", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 105, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "053e22fc37f2ee3ffcc9971f798526c3a0e4e5fa", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "> Does true mean \"successfully sent\"?\n\nRight.\nThat's why I show you `MessagingTemplate.doSend` where the Message comes on reply.\n", "created_at": "2013-06-12T11:48:00Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654575", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654575"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654575"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654909", "pull_request_review_id": null, "id": 4654909, "diff_hunk": "@@ -0,0 +1,192 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.ErrorMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * Reactor TcpServer-based Inbound Channel Adapter implementation.\n+ *\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 42, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "4767499ab52d44461f053f43946ad4d79a8f95a1", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "There are many breaking concerns: this component is declared as `Inbpund Channel Adapter`,which should be one-way IN by definition from EIP.\nBut you made as IN-Gateway and furthermore it is a `MessageChannel`(!).\nCan you explain, please, a reason to do so much in one (at a glance) simple adapter?\nBTW, it mustn't be a `MessageChannel` at all.\n", "created_at": "2013-06-12T12:17:43Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654909", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654909"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4654909"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4654909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4656195", "pull_request_review_id": null, "id": 4656195, "diff_hunk": "@@ -0,0 +1,192 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.ErrorMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * Reactor TcpServer-based Inbound Channel Adapter implementation.\n+ *\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(new ErrorMessage(ev.getData()));\n+\t\t\t\t} else {\n+\t\t\t\t\tlog.error(ev.getData().getMessage(), ev.getData());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\n+\t\tthis.connectionConsumer = new Consumer<TcpConnection<IN, OUT>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(final TcpConnection<IN, OUT> connection) {\n+\t\t\t\tfinal MessageChannel replies = new AbstractMessageChannel() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\t\t\t\t\tconnection.send((OUT) message.getPayload());\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\t\t\t\t};\n+\n+\t\t\t\teventsReactor.on(outgoing.getT1(), new Consumer<Event<Message<?>>>() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void accept(Event<Message<?>> ev) {\n+\t\t\t\t\t\tconnection.send((OUT) ev.getData());\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\n+\t\t\t\tconnection.consume(new Consumer<IN>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void accept(IN in) {\n+\t\t\t\t\t\tMessage<IN> msg = MessageBuilder.withPayload(in)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.setErrorChannel(errorChannel)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.setReplyChannel(replies)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build();\n+\t\t\t\t\t\tif (shouldTrack) {\n+\t\t\t\t\t\t\tmsg = MessageHistory.write(msg, TcpServerInboundChannelAdapter.this);\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\toutputChannel.send(msg);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tpublic void setOutputChannel(MessageChannel outputChannel) {\n+\t\tthis.outputChannel = outputChannel;\n+\t}\n+\n+\tpublic void setErrorChannel(MessageChannel errorChannel) {\n+\t\tthis.errorChannel = errorChannel;\n+\t}\n+\n+\t@Override\n+\tpublic void setShouldTrack(boolean shouldTrack) {\n+\t\tthis.shouldTrack = shouldTrack;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() throws Exception {\n+\t\tthis.server = new TcpServer.Spec<IN, OUT>(NettyTcpServer.class)\n+\t\t\t\t.using(env)\n+\t\t\t\t.using(eventsReactor)\n+\t\t\t\t.listen(bindAddress.getHostString(), bindAddress.getPort())\n+\t\t\t\t.codec(codec)\n+\t\t\t\t.consume(connectionConsumer)\n+\t\t\t\t.get();\n+\t\tsuper.onInit();\n+\t}\n+\n+\t@Override\n+\tprotected void doStart() {\n+\t\tserver.start();\n+\t}\n+\n+\t@Override\n+\tprotected void doStop() {\n+\t\tserver.shutdown();\n+\t}\n+\n+\t@Override\n+\tpublic boolean subscribe(MessageHandler handler) {\n+\t\teventsReactor.on(incoming.getT1(), new MessageHandlerConsumer(handler));", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 154, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "4767499ab52d44461f053f43946ad4d79a8f95a1", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Well, it's good point to have full `ReactorMessageDispatcher` for SI Channels, or furthermore `ReactorMessageChannel`...\n", "created_at": "2013-06-12T13:33:53Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4656195", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4656195"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4656195"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4656195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4661779", "pull_request_review_id": null, "id": 4661779, "diff_hunk": "@@ -0,0 +1,192 @@\n+package org.springframework.integration.reactor.tcp;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessageChannel;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.MessageProducer;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.integration.endpoint.AbstractEndpoint;\n+import org.springframework.integration.history.MessageHistory;\n+import org.springframework.integration.history.TrackableComponent;\n+import org.springframework.integration.message.ErrorMessage;\n+import org.springframework.integration.support.MessageBuilder;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.registry.Registration;\n+import reactor.fn.selector.Selector;\n+import reactor.fn.tuples.Tuple2;\n+import reactor.io.Buffer;\n+import reactor.tcp.TcpConnection;\n+import reactor.tcp.TcpServer;\n+import reactor.tcp.encoding.Codec;\n+import reactor.tcp.netty.NettyTcpServer;\n+\n+import java.net.InetSocketAddress;\n+\n+import static reactor.fn.Functions.$;\n+import static reactor.fn.Functions.T;\n+\n+/**\n+ * Reactor TcpServer-based Inbound Channel Adapter implementation.\n+ *\n+ * @author Jon Brisbin\n+ */\n+public class TcpServerInboundChannelAdapter<IN, OUT>\n+\t\textends AbstractEndpoint\n+\t\timplements MessageProducer, SubscribableChannel, TrackableComponent {\n+\n+\tprivate final Logger                   log      = LoggerFactory.getLogger(getClass());\n+\tprivate final Tuple2<Selector, Object> incoming = $();\n+\tprivate final Tuple2<Selector, Object> outgoing = $();\n+\tprivate final    Environment                      env;\n+\tprivate final    InetSocketAddress                bindAddress;\n+\tprivate final    Codec<Buffer, IN, OUT>           codec;\n+\tprivate final    Reactor                          eventsReactor;\n+\tprivate final    Consumer<TcpConnection<IN, OUT>> connectionConsumer;\n+\tprivate volatile MessageChannel                   outputChannel;\n+\tprivate volatile MessageChannel                   errorChannel;\n+\tprivate volatile boolean shouldTrack = false;\n+\tprivate volatile TcpServer<IN, OUT> server;\n+\n+\tpublic TcpServerInboundChannelAdapter(Environment env,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInetSocketAddress bindAddress,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString eventsDispatcher,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCodec<Buffer, IN, OUT> codec) {\n+\t\tsuper();\n+\t\tthis.env = env;\n+\t\tthis.bindAddress = bindAddress;\n+\t\tthis.codec = codec;\n+\n+\t\tthis.eventsReactor = R.reactor().using(env).dispatcher(eventsDispatcher).get();\n+\t\tthis.eventsReactor.on(T(Throwable.class), new Consumer<Event<Throwable>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(Event<Throwable> ev) {\n+\t\t\t\tif (null != errorChannel) {\n+\t\t\t\t\terrorChannel.send(new ErrorMessage(ev.getData()));\n+\t\t\t\t} else {\n+\t\t\t\t\tlog.error(ev.getData().getMessage(), ev.getData());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n+\n+\t\tthis.connectionConsumer = new Consumer<TcpConnection<IN, OUT>>() {\n+\t\t\t@Override\n+\t\t\tpublic void accept(final TcpConnection<IN, OUT> connection) {\n+\t\t\t\tfinal MessageChannel replies = new AbstractMessageChannel() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\t\t\t\t\tconnection.send((OUT) message.getPayload());\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\t\t\t\t};\n+\n+\t\t\t\teventsReactor.on(outgoing.getT1(), new Consumer<Event<Message<?>>>() {\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void accept(Event<Message<?>> ev) {\n+\t\t\t\t\t\tconnection.send((OUT) ev.getData());\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\n+\t\t\t\tconnection.consume(new Consumer<IN>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void accept(IN in) {\n+\t\t\t\t\t\tMessage<IN> msg = MessageBuilder.withPayload(in)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.setErrorChannel(errorChannel)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.setReplyChannel(replies)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build();\n+\t\t\t\t\t\tif (shouldTrack) {\n+\t\t\t\t\t\t\tmsg = MessageHistory.write(msg, TcpServerInboundChannelAdapter.this);\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\toutputChannel.send(msg);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\t@Override\n+\tpublic void setOutputChannel(MessageChannel outputChannel) {\n+\t\tthis.outputChannel = outputChannel;\n+\t}\n+\n+\tpublic void setErrorChannel(MessageChannel errorChannel) {\n+\t\tthis.errorChannel = errorChannel;\n+\t}\n+\n+\t@Override\n+\tpublic void setShouldTrack(boolean shouldTrack) {\n+\t\tthis.shouldTrack = shouldTrack;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() throws Exception {\n+\t\tthis.server = new TcpServer.Spec<IN, OUT>(NettyTcpServer.class)\n+\t\t\t\t.using(env)\n+\t\t\t\t.using(eventsReactor)\n+\t\t\t\t.listen(bindAddress.getHostString(), bindAddress.getPort())\n+\t\t\t\t.codec(codec)\n+\t\t\t\t.consume(connectionConsumer)\n+\t\t\t\t.get();\n+\t\tsuper.onInit();\n+\t}\n+\n+\t@Override\n+\tprotected void doStart() {\n+\t\tserver.start();\n+\t}\n+\n+\t@Override\n+\tprotected void doStop() {\n+\t\tserver.shutdown();\n+\t}\n+\n+\t@Override\n+\tpublic boolean subscribe(MessageHandler handler) {\n+\t\teventsReactor.on(incoming.getT1(), new MessageHandlerConsumer(handler));", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/tcp/TcpServerInboundChannelAdapter.java", "position": null, "original_position": 154, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "4767499ab52d44461f053f43946ad4d79a8f95a1", "user": {"login": "smaldini", "id": 76718, "avatar_url": "https://avatars2.githubusercontent.com/u/76718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaldini", "html_url": "https://github.com/smaldini", "followers_url": "https://api.github.com/users/smaldini/followers", "following_url": "https://api.github.com/users/smaldini/following{/other_user}", "gists_url": "https://api.github.com/users/smaldini/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaldini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaldini/subscriptions", "organizations_url": "https://api.github.com/users/smaldini/orgs", "repos_url": "https://api.github.com/users/smaldini/repos", "events_url": "https://api.github.com/users/smaldini/events{/privacy}", "received_events_url": "https://api.github.com/users/smaldini/received_events", "type": "User", "site_admin": false}, "body": "This is indeed a plan, we do need this for several use cases.\n", "created_at": "2013-06-12T17:27:37Z", "updated_at": "2013-06-13T19:36:34Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4661779", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4661779"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4661779"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4661779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4696426", "pull_request_review_id": null, "id": 4696426, "diff_hunk": "@@ -0,0 +1,77 @@\n+package org.springframework.integration.reactor;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.util.Assert;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.dispatch.SynchronousDispatcher;\n+import reactor.fn.registry.Registration;\n+\n+/**\n+ * Simple {@link Reactor}-based {@link SubscribableChannel} implementation.\n+ *\n+ * @author Jon Brisbin\n+ */\n+public class ReactorChannel extends AbstractMessageChannel implements SubscribableChannel {\n+\n+\tprivate final Reactor reactor;\n+\n+\tpublic ReactorChannel(Environment env, Reactor reactor, String dispatcher) {\n+\t\tAssert.notNull(env, \"Reactor Environment cannot be null.\");\n+\t\tif (null == reactor) {\n+\t\t\tReactor.Spec rspec = R.reactor().using(env);\n+\t\t\tif (null != dispatcher) {\n+\t\t\t\tif (\"sync\".equals(dispatcher)) {\n+\t\t\t\t\trspec.using(SynchronousDispatcher.INSTANCE);\n+\t\t\t\t} else {\n+\t\t\t\t\trspec.dispatcher(dispatcher);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tthis.reactor = rspec.get();\n+\t\t} else {\n+\t\t\tthis.reactor = reactor;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\treactor.notify(Event.wrap(message));", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/ReactorChannel.java", "position": 44, "original_position": 44, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Hi, all!\nGary is more familiar with `MessageChannel` architecture (I haven't wrote any one yet ;-)), so he can more effectively lead you, Jon, in this direction.\nBut want to pay your attention from perspective of Reactor.\nHere you _notify_ and _subscribe_ to the `defaultKey` from `Reactor`, so, if `reactor` is shared one from application context and we're referencing it from different channels we may end up with unexpected results. Isn't it?\n", "created_at": "2013-06-14T06:59:29Z", "updated_at": "2013-06-14T06:59:29Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4696426", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4696426"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4696426"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4696426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4700926", "pull_request_review_id": null, "id": 4700926, "diff_hunk": "@@ -0,0 +1,77 @@\n+package org.springframework.integration.reactor;\n+\n+import org.springframework.integration.Message;\n+import org.springframework.integration.channel.AbstractMessageChannel;\n+import org.springframework.integration.core.MessageHandler;\n+import org.springframework.integration.core.SubscribableChannel;\n+import org.springframework.util.Assert;\n+import reactor.R;\n+import reactor.core.Environment;\n+import reactor.core.Reactor;\n+import reactor.fn.Consumer;\n+import reactor.fn.Event;\n+import reactor.fn.dispatch.SynchronousDispatcher;\n+import reactor.fn.registry.Registration;\n+\n+/**\n+ * Simple {@link Reactor}-based {@link SubscribableChannel} implementation.\n+ *\n+ * @author Jon Brisbin\n+ */\n+public class ReactorChannel extends AbstractMessageChannel implements SubscribableChannel {\n+\n+\tprivate final Reactor reactor;\n+\n+\tpublic ReactorChannel(Environment env, Reactor reactor, String dispatcher) {\n+\t\tAssert.notNull(env, \"Reactor Environment cannot be null.\");\n+\t\tif (null == reactor) {\n+\t\t\tReactor.Spec rspec = R.reactor().using(env);\n+\t\t\tif (null != dispatcher) {\n+\t\t\t\tif (\"sync\".equals(dispatcher)) {\n+\t\t\t\t\trspec.using(SynchronousDispatcher.INSTANCE);\n+\t\t\t\t} else {\n+\t\t\t\t\trspec.dispatcher(dispatcher);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tthis.reactor = rspec.get();\n+\t\t} else {\n+\t\t\tthis.reactor = reactor;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tprotected boolean doSend(Message<?> message, long timeout) {\n+\t\treactor.notify(Event.wrap(message));", "path": "spring-integration-reactor/src/main/java/org/springframework/integration/reactor/ReactorChannel.java", "position": 44, "original_position": 44, "commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "original_commit_id": "782364c7a5037a175fd087d28ea3497be7a3fa58", "user": {"login": "jbrisbin", "id": 55797, "avatar_url": "https://avatars3.githubusercontent.com/u/55797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrisbin", "html_url": "https://github.com/jbrisbin", "followers_url": "https://api.github.com/users/jbrisbin/followers", "following_url": "https://api.github.com/users/jbrisbin/following{/other_user}", "gists_url": "https://api.github.com/users/jbrisbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrisbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrisbin/subscriptions", "organizations_url": "https://api.github.com/users/jbrisbin/orgs", "repos_url": "https://api.github.com/users/jbrisbin/repos", "events_url": "https://api.github.com/users/jbrisbin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrisbin/received_events", "type": "User", "site_admin": false}, "body": "Stephane's got some changes/additions/and a fix for this in the fork on the reactor github org. So I'm going to close this one and open one from there.\n", "created_at": "2013-06-14T13:27:36Z", "updated_at": "2013-06-14T13:27:36Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4700926", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4700926"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/51#discussion_r4700926"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4700926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4403997", "pull_request_review_id": null, "id": 4403997, "diff_hunk": "@@ -0,0 +1,275 @@\n+description = 'Spring Integration JGroups Support'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'https://repo.springsource.org/plugins-snapshot' }\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmavenCentral()\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' }\n+}\n+\n+sourceCompatibility=1.6\n+targetCompatibility=1.6\n+\n+// See http://www.gradle.org/docs/current/userguide/dependency_management.html#sub:configurations\n+// and http://www.gradle.org/docs/current/dsl/org.gradle.api.artifacts.ConfigurationContainer.html\n+configurations {\n+\tjacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo\n+}\n+\n+ext {\n+\tapacheHttpclientVersion='4.1.1'\n+\tawsSdkVersion='1.3.32'\n+\tcommonsCodecVersion='1.5'\n+\tcommonsIoVersion='2.0.1'\n+\tjavaMailVersion='1.4.4'\n+\tjacksonVersion='1.9.11'\n+\tjunitVersion='4.11'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion='1.9.0'\n+\tspringIntegrationVersion = '2.2.2.RELEASE'\n+\tspringVersion = '3.1.4.RELEASE'\n+\n+\tidPrefix = 'jgroups'\n+\n+}\n+\n+dependencies {\n+\n+\tcompile \"org.springframework.integration:spring-integration-core:$springIntegrationVersion\"\n+\tcompile \"org.jgroups:jgroups:3.2.8.Final\"\n+\t\n+\ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"\n+\ttestCompile \"junit:junit:$junitVersion\"\n+\ttestCompile \"pl.pragmatists:JUnitParams:1.0.1\"\n+\ttestCompile \"org.easytesting:fest-assert:1.4\"\n+\ttestCompile \"org.mockito:mockito-all:$mockitoVersion\"\n+\ttestCompile \"org.springframework:spring-test:$springVersion\"\n+\ttestCompile \"log4j:log4j:$log4jVersion\"\n+\n+\tjacoco group: \"org.jacoco\", name: \"org.jacoco.agent\", version: \"0.6.2.201302030002\", classifier: \"runtime\"\n+\n+}\n+\n+eclipse {\n+\tproject {\n+\t\tnatures += 'org.springframework.ide.eclipse.core.springnature'\n+\t}\n+}\n+\n+javadoc {\n+\tgroup = 'Documentation'\n+\tdescription = 'Generates the Javadoc API documentation.'\n+\ttitle = \"${rootProject.description} ${version} API\"\n+\n+\toptions.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED\n+\toptions.author = true\n+\toptions.header = project.description\n+\toptions.overview = 'src/api/overview.html'\n+\toptions.stylesheetFile = file(\"src/api/stylesheet.css\")\n+\toptions.splitIndex = true\n+\n+\tsource = sourceSets.main.allJava\n+\tclasspath = project.sourceSets.main.compileClasspath\n+\tdestinationDir = new File(buildDir, \"api\")\n+\n+\t// suppress warnings due to cross-module @see and @link references;\n+\t// note that global 'api' task does display all warnings.\n+\tlogging.captureStandardError LogLevel.INFO\n+\tlogging.captureStandardOutput LogLevel.INFO // suppress \"## warnings\" message\n+}\n+\n+sourceSets {\n+\ttest {\n+\t\tresources {\n+\t\t\tsrcDirs = ['src/test/resources', 'src/test/java']\n+\t\t}\n+\t}\n+}\n+\n+// enable all compiler warnings; individual projects may customize further\n+ext.xLintArg = '-Xlint:all'\n+[compileJava, compileTestJava]*.options*.compilerArgs = [xLintArg]\n+\n+test {\n+\t// suppress all console output during testing unless running `gradle -i`\n+\tlogging.captureStandardOutput(LogLevel.INFO)\n+\tjvmArgs \"-javaagent:${configurations.jacoco.asPath}=destfile=${buildDir}/jacoco.exec,includes=*\"\n+}\n+\n+task sourcesJar(type: Jar) {\n+\tclassifier = 'sources'\n+\tfrom sourceSets.main.allJava\n+}\n+\n+task javadocJar(type: Jar) {\n+\tclassifier = 'javadoc'\n+\tfrom javadoc\n+}\n+\n+artifacts {\n+\tarchives sourcesJar\n+\tarchives javadocJar\n+}\n+\n+apply plugin: 'sonar'\n+apply plugin: 'sonar-runner' //New for Gradle 1.5\n+\n+sonar {\n+\n+\tif (rootProject.hasProperty('sonarHostUrl')) {\n+\t\tserver.url = rootProject.sonarHostUrl\n+\t}\n+\n+\tdatabase {\n+\t\tif (rootProject.hasProperty('sonarJdbcUrl')) {\n+\t\t\turl = rootProject.sonarJdbcUrl\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcDriver')) {\n+\t\t\tdriverClassName = rootProject.sonarJdbcDriver\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcUsername')) {\n+\t\t\tusername = rootProject.sonarJdbcUsername\n+\t\t}\n+\t\tif (rootProject.hasProperty('sonarJdbcPassword')) {\n+\t\t\tpassword = rootProject.sonarJdbcPassword\n+\t\t}\n+\t}\n+\n+\tproject {\n+\t\tdynamicAnalysis  = \"reuseReports\"\n+\t\twithProjectProperties { props ->\n+\t\t\tprops[\"sonar.core.codeCoveragePlugin\"] = \"jacoco\"\n+\t\t\tprops[\"sonar.jacoco.reportPath\"]       = \"${buildDir.name}/jacoco.exec\"\n+\t\t}\n+\t}\n+\n+\tlogger.info(\"Sonar parameters used: server.url='${server.url}'; database.url='${database.url}'; database.driverClassName='${database.driverClassName}'; database.username='${database.username}'\")\n+}\n+\n+task schemaZip(type: Zip) {\n+\tgroup = 'Distribution'\n+\tclassifier = 'schema'\n+\tdescription = \"Builds -${classifier} archive containing all \" +\n+\t\t\"XSDs for deployment at static.springframework.org/schema.\"\n+\n+\tdef Properties schemas = new Properties();\n+\tdef shortName = idPrefix.replaceFirst(\"${idPrefix}-\", '')\n+\n+\tproject.sourceSets.main.resources.find {\n+\t\tit.path.endsWith('META-INF/spring.schemas')\n+\t}?.withInputStream { schemas.load(it) }\n+\n+\tfor (def key : schemas.keySet()) {\n+\t\tFile xsdFile = project.sourceSets.main.resources.find {\n+\t\t\tit.path.endsWith(schemas.get(key))\n+\t\t}\n+\t\tassert xsdFile != null\n+\t\tinto (\"integration/${shortName}\") {\n+\t\t\tfrom xsdFile.path\n+\t\t}\n+\t}\n+\n+}\n+\n+task docsZip(type: Zip) {\n+\t\tgroup = 'Distribution'\n+\t\tclassifier = 'docs'\n+\t\tdescription = \"Builds -${classifier} archive containing the JavaDoc api \" +\n+\t\t\t\"for deployment at static.springframework.org/spring-integration/docs.\"\n+\n+\t\tfrom('.') {\n+\t\t\tinclude 'README.md'\n+\t\t}\n+\n+\t\tfrom (javadoc) {\n+\t\t\tinto 'api'\n+\t\t}\n+\n+}\n+\n+task distZip(type: Zip, dependsOn: [docsZip, schemaZip]) {\n+\tgroup = 'Distribution'\n+\tclassifier = 'dist'\n+\tdescription = \"Builds -${classifier} archive, containing all jars and docs, \" +\n+\t\t\"suitable for community download page.\"\n+\n+\text.baseDir = \"${project.name}-${project.version}\";\n+\n+\tfrom('src/dist') {\n+\t\tinclude 'license.txt'\n+\t\tinclude 'notice.txt'\n+\t\tinto \"${baseDir}\"\n+\t}\n+\n+\tfrom('.') {\n+\t\tinclude 'README.md'\n+\t\tinto \"${baseDir}\"\n+\t}\n+\n+\tfrom(zipTree(schemaZip.archivePath)) {\n+\t\tinto \"${baseDir}/schema\"\n+\t}\n+\n+\tinto (\"${baseDir}/libs\") {\n+\t\tfrom project.jar\n+\t\tfrom project.sourcesJar\n+\t\tfrom project.javadocJar\n+\t}\n+}\n+\n+// Create an optional \"with dependencies\" distribution.\n+// Not published by default; only for use when building from source.\n+task depsZip(type: Zip, dependsOn: distZip) { zipTask ->\n+\tgroup = 'Distribution'\n+\tclassifier = 'dist-with-deps'\n+\tdescription = \"Builds -${classifier} archive, containing everything \" +\n+\t\t\"in the -${distZip.classifier} archive plus all dependencies.\"\n+\n+\tfrom zipTree(distZip.archivePath)\n+\n+\tgradle.taskGraph.whenReady { taskGraph ->\n+\t\tif (taskGraph.hasTask(\":${zipTask.name}\")) {\n+\t\t\tdef projectName = rootProject.name\n+\t\t\tdef artifacts = new HashSet()\n+\n+\t\t\trootProject.configurations.runtime.resolvedConfiguration.resolvedArtifacts.each { artifact ->\n+\t\t\t\tdef dependency = artifact.moduleVersion.id\n+\t\t\t\tif (!projectName.equals(dependency.name)) {\n+\t\t\t\t\tartifacts << artifact.file\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tzipTask.from(artifacts) {\n+\t\t\t\tinto \"${distZip.baseDir}/deps\"\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+artifacts {\n+\tarchives distZip\n+\tarchives docsZip\n+\tarchives schemaZip\n+}\n+\n+task dist(dependsOn: assemble) {\n+\tgroup = 'Distribution'\n+\tdescription = 'Builds -dist, -docs and -schema distribution archives.'\n+}\n+\n+task wrapper(type: Wrapper) {\n+\tdescription = 'Generates gradlew[.bat] scripts'\n+\tgradleVersion = '1.5-rc-1'", "path": "spring-integration-jgroups/build.gradle", "position": null, "original_position": 274, "commit_id": "a5a16ccca21723da6eb6f2659371781c9d9354bb", "original_commit_id": "7edfdfa7829d1cb03ae545cfba627228ef94fe43", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Upgrade to Gradle 1.6\n", "created_at": "2013-05-27T19:40:47Z", "updated_at": "2013-06-23T09:21:09Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#discussion_r4403997", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/43", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4403997"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/43#discussion_r4403997"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/43"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4403997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404008", "pull_request_review_id": null, "id": 4404008, "diff_hunk": "@@ -0,0 +1,275 @@\n+description = 'Spring Integration JGroups Support'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'https://repo.springsource.org/plugins-snapshot' }\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmavenCentral()\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' }\n+}\n+\n+sourceCompatibility=1.6\n+targetCompatibility=1.6\n+\n+// See http://www.gradle.org/docs/current/userguide/dependency_management.html#sub:configurations\n+// and http://www.gradle.org/docs/current/dsl/org.gradle.api.artifacts.ConfigurationContainer.html\n+configurations {\n+\tjacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo\n+}\n+\n+ext {\n+\tapacheHttpclientVersion='4.1.1'\n+\tawsSdkVersion='1.3.32'\n+\tcommonsCodecVersion='1.5'\n+\tcommonsIoVersion='2.0.1'\n+\tjavaMailVersion='1.4.4'\n+\tjacksonVersion='1.9.11'\n+\tjunitVersion='4.11'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion='1.9.0'\n+\tspringIntegrationVersion = '2.2.2.RELEASE'\n+\tspringVersion = '3.1.4.RELEASE'\n+\n+\tidPrefix = 'jgroups'\n+\n+}\n+\n+dependencies {\n+\n+\tcompile \"org.springframework.integration:spring-integration-core:$springIntegrationVersion\"\n+\tcompile \"org.jgroups:jgroups:3.2.8.Final\"\n+\t\n+\ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"\n+\ttestCompile \"junit:junit:$junitVersion\"\n+\ttestCompile \"pl.pragmatists:JUnitParams:1.0.1\"\n+\ttestCompile \"org.easytesting:fest-assert:1.4\"\n+\ttestCompile \"org.mockito:mockito-all:$mockitoVersion\"\n+\ttestCompile \"org.springframework:spring-test:$springVersion\"\n+\ttestCompile \"log4j:log4j:$log4jVersion\"\n+\n+\tjacoco group: \"org.jacoco\", name: \"org.jacoco.agent\", version: \"0.6.2.201302030002\", classifier: \"runtime\"\n+\n+}\n+\n+eclipse {\n+\tproject {\n+\t\tnatures += 'org.springframework.ide.eclipse.core.springnature'\n+\t}\n+}\n+\n+javadoc {\n+\tgroup = 'Documentation'\n+\tdescription = 'Generates the Javadoc API documentation.'\n+\ttitle = \"${rootProject.description} ${version} API\"\n+\n+\toptions.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED\n+\toptions.author = true\n+\toptions.header = project.description\n+\toptions.overview = 'src/api/overview.html'\n+\toptions.stylesheetFile = file(\"src/api/stylesheet.css\")\n+\toptions.splitIndex = true\n+\n+\tsource = sourceSets.main.allJava\n+\tclasspath = project.sourceSets.main.compileClasspath\n+\tdestinationDir = new File(buildDir, \"api\")\n+\n+\t// suppress warnings due to cross-module @see and @link references;\n+\t// note that global 'api' task does display all warnings.\n+\tlogging.captureStandardError LogLevel.INFO\n+\tlogging.captureStandardOutput LogLevel.INFO // suppress \"## warnings\" message\n+}\n+\n+sourceSets {\n+\ttest {\n+\t\tresources {\n+\t\t\tsrcDirs = ['src/test/resources', 'src/test/java']\n+\t\t}\n+\t}\n+}\n+\n+// enable all compiler warnings; individual projects may customize further\n+ext.xLintArg = '-Xlint:all'\n+[compileJava, compileTestJava]*.options*.compilerArgs = [xLintArg]\n+\n+test {\n+\t// suppress all console output during testing unless running `gradle -i`\n+\tlogging.captureStandardOutput(LogLevel.INFO)\n+\tjvmArgs \"-javaagent:${configurations.jacoco.asPath}=destfile=${buildDir}/jacoco.exec,includes=*\"\n+}\n+\n+task sourcesJar(type: Jar) {\n+\tclassifier = 'sources'\n+\tfrom sourceSets.main.allJava\n+}\n+\n+task javadocJar(type: Jar) {\n+\tclassifier = 'javadoc'\n+\tfrom javadoc\n+}\n+\n+artifacts {\n+\tarchives sourcesJar\n+\tarchives javadocJar\n+}\n+\n+apply plugin: 'sonar'", "path": "spring-integration-jgroups/build.gradle", "position": null, "original_position": 126, "commit_id": "a5a16ccca21723da6eb6f2659371781c9d9354bb", "original_commit_id": "7edfdfa7829d1cb03ae545cfba627228ef94fe43", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Remove Sonar Plugin, Sonar Runner is the only one needed - see e.g. the Spring Integration Voldemort Extension for reference.\n", "created_at": "2013-05-27T19:42:19Z", "updated_at": "2013-06-23T09:21:09Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#discussion_r4404008", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/43", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404008"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/43#discussion_r4404008"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/43"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404047", "pull_request_review_id": null, "id": 4404047, "diff_hunk": "@@ -0,0 +1,275 @@\n+description = 'Spring Integration JGroups Support'\n+\n+buildscript {\n+\trepositories {\n+\t\tmaven { url 'https://repo.springsource.org/plugins-snapshot' }\n+\t}\n+}\n+\n+apply plugin: 'java'\n+apply from:   \"${rootProject.projectDir}/publish-maven.gradle\"\n+apply plugin: 'eclipse'\n+apply plugin: 'idea'\n+\n+group = 'org.springframework.integration'\n+\n+repositories {\n+\tmavenCentral()\n+\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/plugins-release' }\n+}\n+\n+sourceCompatibility=1.6\n+targetCompatibility=1.6\n+\n+// See http://www.gradle.org/docs/current/userguide/dependency_management.html#sub:configurations\n+// and http://www.gradle.org/docs/current/dsl/org.gradle.api.artifacts.ConfigurationContainer.html\n+configurations {\n+\tjacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo\n+}\n+\n+ext {\n+\tapacheHttpclientVersion='4.1.1'\n+\tawsSdkVersion='1.3.32'\n+\tcommonsCodecVersion='1.5'\n+\tcommonsIoVersion='2.0.1'\n+\tjavaMailVersion='1.4.4'\n+\tjacksonVersion='1.9.11'\n+\tjunitVersion='4.11'\n+\tlog4jVersion = '1.2.12'\n+\tmockitoVersion='1.9.0'\n+\tspringIntegrationVersion = '2.2.2.RELEASE'\n+\tspringVersion = '3.1.4.RELEASE'\n+", "path": "spring-integration-jgroups/build.gradle", "position": 37, "original_position": 43, "commit_id": "a5a16ccca21723da6eb6f2659371781c9d9354bb", "original_commit_id": "7edfdfa7829d1cb03ae545cfba627228ef94fe43", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "Some of the dependencies may not be need, e.g. `javaMailVersion` (?)\n", "created_at": "2013-05-27T19:46:03Z", "updated_at": "2013-06-23T09:21:09Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#discussion_r4404047", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/43", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404047"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/43#discussion_r4404047"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/43"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404078", "pull_request_review_id": null, "id": 4404078, "diff_hunk": "@@ -0,0 +1,22 @@\n+<html>\n+<body>\n+This document is the API specification for the Spring Integration AWS Extension", "path": "spring-integration-jgroups/src/api/overview.html", "position": null, "original_position": 3, "commit_id": "a5a16ccca21723da6eb6f2659371781c9d9354bb", "original_commit_id": "7edfdfa7829d1cb03ae545cfba627228ef94fe43", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "JGroups Extension (?)\n", "created_at": "2013-05-27T19:49:05Z", "updated_at": "2013-06-23T09:21:09Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/43#discussion_r4404078", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/43", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404078"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/43#discussion_r4404078"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/43"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4404078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5194755", "pull_request_review_id": null, "id": 5194755, "diff_hunk": "@@ -140,11 +140,20 @@ public void synchronizeToLocalDirectory(File localDirectory, String bucketName,\n \t\t\t\t\t\tif(!filter.accept(key))\n \t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\t//The folder is the root as the key is relative to bucket\n-\t\t\t\t\t\tAmazonS3Object s3Object = client.getObject(bucketName, \"/\", key);\n-\t\t\t\t\t\tsynchronizeObjectWithFile(localDirectory,summary,s3Object);\n+\t\t\t\t\t\tAmazonS3Object s3Object = null;\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\ts3Object = client.getObject(bucketName, \"/\", key);\n+\t\t\t\t\t\t\tsynchronizeObjectWithFile(localDirectory,summary,s3Object);\n+\t\t\t\t\t\t} finally {\n+\t\t\t\t\t\t\tif(s3Object.getInputStream() != null) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/InboundFileSynchronizationImpl.java", "position": null, "original_position": 11, "commit_id": "c6062988475a74e8a55bda09fec86d16cec4c4be", "original_commit_id": "b225333021791000568d10043a31a08d936aa906", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "How about a null check on s3Object before getting the input stream. Though chances are slim, getObject returns null on invalid key which will cause NPE in this case.\n", "created_at": "2013-07-15T16:59:49Z", "updated_at": "2013-07-16T23:29:10Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/53#discussion_r5194755", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/53", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5194755"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/53#discussion_r5194755"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/53"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5194755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5195021", "pull_request_review_id": null, "id": 5195021, "diff_hunk": "@@ -140,11 +140,20 @@ public void synchronizeToLocalDirectory(File localDirectory, String bucketName,\n \t\t\t\t\t\tif(!filter.accept(key))\n \t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\t//The folder is the root as the key is relative to bucket\n-\t\t\t\t\t\tAmazonS3Object s3Object = client.getObject(bucketName, \"/\", key);\n-\t\t\t\t\t\tsynchronizeObjectWithFile(localDirectory,summary,s3Object);\n+\t\t\t\t\t\tAmazonS3Object s3Object = null;\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\ts3Object = client.getObject(bucketName, \"/\", key);\n+\t\t\t\t\t\t\tsynchronizeObjectWithFile(localDirectory,summary,s3Object);\n+\t\t\t\t\t\t} finally {\n+\t\t\t\t\t\t\tif(s3Object.getInputStream() != null) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/InboundFileSynchronizationImpl.java", "position": null, "original_position": 11, "commit_id": "c6062988475a74e8a55bda09fec86d16cec4c4be", "original_commit_id": "b225333021791000568d10043a31a08d936aa906", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Just noticed that the original implementation of synchronizeObjectWithFile doesn't handle null objects too. I will raise a JIRA and fix that too. You can take care of the above comment?\n", "created_at": "2013-07-15T17:09:56Z", "updated_at": "2013-07-16T23:29:10Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/53#discussion_r5195021", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/53", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5195021"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/53#discussion_r5195021"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/53"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5195021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4261441", "pull_request_review_id": null, "id": 4261441, "diff_hunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.getObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.listObjects;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.putObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.removeObject;\n+import static org.springframework.util.Assert.hasText;\n+import static org.springframework.util.Assert.isTrue;\n+import static org.springframework.util.Assert.notNull;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.s3.core.AmazonS3Operations;\n+import org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.integration.handler.MessageProcessor;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The outbound gateway implementation for performing operations like upload an object,\n+ * delete an object, remove and object and list objects in a bucket.\n+ *\n+ * @author Amol Nayak\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3OutboundGateway extends AbstractReplyProducingMessageHandler {\n+\n+\tprivate final AWSCredentials credentials;\n+\tprivate volatile MessageProcessor<String> remoteDirectoryProcessor;\n+\tprivate volatile MessageProcessor<String> remoteCommandProcessor;\n+\tprivate final AmazonS3Operations s3Operations;\n+\tprivate volatile String bucket;\n+\tprivate volatile String charset = \"UTF-8\";\n+\tprivate volatile FileNameGenerationStrategy fileNameGenerator = new DefaultFileNameGenerationStrategy();\n+\tprivate volatile Expression remoteDirectoryExpression;\n+\tprivate volatile Expression remoteCommandExpression;\n+\n+\t/**\n+\t * Command to be issued to list the contents of folder in the bucket\n+\t */\n+\tpublic static final String COMMAND_LIST = \"list\";\n+\n+\t/**\n+\t * Command to be used to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_REMOVE = \"remove\";\n+\n+\t/**\n+\t * Command issued to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_PUT = \"put\";\n+\n+\t/**\n+\t * Command to be issued to get the contents of an object in the bucket\n+\t */\n+\tpublic static final String COMMAND_GET = \"get\";\n+\n+\n+\tpublic AmazonS3OutboundGateway(\n+\t\t\tAWSCredentials credentials,\n+\t\t\tAmazonS3Operations s3Operations) {\n+\t\tnotNull(credentials, \"credentials must not be null\");\n+\t\tnotNull(s3Operations, \"s3Operations instance must not be null\");\n+\t\tthis.credentials = credentials;\n+\t\tthis.s3Operations = s3Operations;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\thasText(bucket, \"bucket name can not be null or empty string\");\n+\t\tnotNull(remoteDirectoryExpression == null && remoteDirectoryProcessor == null,\n+\t\t\t\t\"both remote directory expression and processor can not be null\");\n+\t\tnotNull(remoteCommandExpression == null && remoteCommandProcessor == null,\n+\t\t\t\t\"both remote command expression and processor can not be null\");\n+\t\tisTrue(remoteDirectoryExpression != null ^ remoteDirectoryProcessor != null,\n+\t\t\t\t\"can not specify both remore directory expression and processor\");\n+\t\tisTrue(remoteCommandExpression != null ^ remoteCommandProcessor != null,\n+\t\t\t\t\"can not specify both remote command expression and processor\");\n+\t\tif(remoteDirectoryExpression != null) {\n+\t\t\tthis.remoteDirectoryProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteDirectoryExpression);\n+\t\t}\n+\t\tif(remoteCommandExpression != null) {\n+\t\t\tthis.remoteCommandProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteCommandExpression);\n+\t\t}\n+\t}\n+\n+\n+\t@Override\n+\tprotected Object handleRequestMessage(Message<?> requestMessage) {\n+\t\tString command = remoteCommandProcessor.processMessage(requestMessage);\n+\t\tif(!StringUtils.hasText(command)) {\n+\t\t\tthrow new MessagingException(requestMessage, \"Message evaluated to a null command\");\n+\t\t}\n+\n+\t\tif(COMMAND_LIST.equalsIgnoreCase(command)) {\n+\t\t\treturn listObjects(s3Operations,\n+\t\t\t\t\tbucket,\n+\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\trequestMessage);\n+\t\t}\n+\t\telse if(COMMAND_REMOVE.equalsIgnoreCase(command)) {\n+\t\t\tremoveObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(COMMAND_PUT.equalsIgnoreCase(command)) {\n+\t\t\ttry {\n+\t\t\t\tputObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tcharset,\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\tfileNameGenerator,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\t\treturn true;\n+\t\t\t} catch (Exception e) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3OutboundGateway.java", "position": 139, "original_position": 138, "commit_id": "54963b37f82a7bffcf1009720495c22a046999de", "original_commit_id": "51420c11578ca1034b0e892e9b7ecf3a59a652df", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Hi Amol,\n\nWe recently changed the abstract remote outbound gateway in the `file` module to use an enum for commands, and a switch statement; it looks a lot cleaner (https://github.com/garyrussell/spring-integration/blob/master/spring-integration-file/src/main/java/org/springframework/integration/file/remote/gateway/AbstractRemoteFileOutboundGateway.java)\n\nI also wonder if this class should really be a subclass of that or, perhaps if you think it wouldn't reuse much of the code, we should consider doing some more refactoring there, to make reuse easier.\n\n??\n", "created_at": "2013-05-16T18:30:12Z", "updated_at": "2013-07-23T17:39:30Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4261441", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4261441"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4261441"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4261441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4282473", "pull_request_review_id": null, "id": 4282473, "diff_hunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.getObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.listObjects;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.putObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.removeObject;\n+import static org.springframework.util.Assert.hasText;\n+import static org.springframework.util.Assert.isTrue;\n+import static org.springframework.util.Assert.notNull;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.s3.core.AmazonS3Operations;\n+import org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.integration.handler.MessageProcessor;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The outbound gateway implementation for performing operations like upload an object,\n+ * delete an object, remove and object and list objects in a bucket.\n+ *\n+ * @author Amol Nayak\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3OutboundGateway extends AbstractReplyProducingMessageHandler {\n+\n+\tprivate final AWSCredentials credentials;\n+\tprivate volatile MessageProcessor<String> remoteDirectoryProcessor;\n+\tprivate volatile MessageProcessor<String> remoteCommandProcessor;\n+\tprivate final AmazonS3Operations s3Operations;\n+\tprivate volatile String bucket;\n+\tprivate volatile String charset = \"UTF-8\";\n+\tprivate volatile FileNameGenerationStrategy fileNameGenerator = new DefaultFileNameGenerationStrategy();\n+\tprivate volatile Expression remoteDirectoryExpression;\n+\tprivate volatile Expression remoteCommandExpression;\n+\n+\t/**\n+\t * Command to be issued to list the contents of folder in the bucket\n+\t */\n+\tpublic static final String COMMAND_LIST = \"list\";\n+\n+\t/**\n+\t * Command to be used to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_REMOVE = \"remove\";\n+\n+\t/**\n+\t * Command issued to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_PUT = \"put\";\n+\n+\t/**\n+\t * Command to be issued to get the contents of an object in the bucket\n+\t */\n+\tpublic static final String COMMAND_GET = \"get\";\n+\n+\n+\tpublic AmazonS3OutboundGateway(\n+\t\t\tAWSCredentials credentials,\n+\t\t\tAmazonS3Operations s3Operations) {\n+\t\tnotNull(credentials, \"credentials must not be null\");\n+\t\tnotNull(s3Operations, \"s3Operations instance must not be null\");\n+\t\tthis.credentials = credentials;\n+\t\tthis.s3Operations = s3Operations;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\thasText(bucket, \"bucket name can not be null or empty string\");\n+\t\tnotNull(remoteDirectoryExpression == null && remoteDirectoryProcessor == null,\n+\t\t\t\t\"both remote directory expression and processor can not be null\");\n+\t\tnotNull(remoteCommandExpression == null && remoteCommandProcessor == null,\n+\t\t\t\t\"both remote command expression and processor can not be null\");\n+\t\tisTrue(remoteDirectoryExpression != null ^ remoteDirectoryProcessor != null,\n+\t\t\t\t\"can not specify both remore directory expression and processor\");\n+\t\tisTrue(remoteCommandExpression != null ^ remoteCommandProcessor != null,\n+\t\t\t\t\"can not specify both remote command expression and processor\");\n+\t\tif(remoteDirectoryExpression != null) {\n+\t\t\tthis.remoteDirectoryProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteDirectoryExpression);\n+\t\t}\n+\t\tif(remoteCommandExpression != null) {\n+\t\t\tthis.remoteCommandProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteCommandExpression);\n+\t\t}\n+\t}\n+\n+\n+\t@Override\n+\tprotected Object handleRequestMessage(Message<?> requestMessage) {\n+\t\tString command = remoteCommandProcessor.processMessage(requestMessage);\n+\t\tif(!StringUtils.hasText(command)) {\n+\t\t\tthrow new MessagingException(requestMessage, \"Message evaluated to a null command\");\n+\t\t}\n+\n+\t\tif(COMMAND_LIST.equalsIgnoreCase(command)) {\n+\t\t\treturn listObjects(s3Operations,\n+\t\t\t\t\tbucket,\n+\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\trequestMessage);\n+\t\t}\n+\t\telse if(COMMAND_REMOVE.equalsIgnoreCase(command)) {\n+\t\t\tremoveObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(COMMAND_PUT.equalsIgnoreCase(command)) {\n+\t\t\ttry {\n+\t\t\t\tputObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tcharset,\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\tfileNameGenerator,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\t\treturn true;\n+\t\t\t} catch (Exception e) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3OutboundGateway.java", "position": 139, "original_position": 138, "commit_id": "54963b37f82a7bffcf1009720495c22a046999de", "original_commit_id": "51420c11578ca1034b0e892e9b7ecf3a59a652df", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "Hello Gary,\n  You are right. Gunnar too in fact had suggested this earlier for the adapters PR. The problem I saw was with the Session, the abstraction we should use doesn't fit too well for the buckets. Following are the problems. \n\nThe list/listNames operations for instance here(AWS) needs something like a next marker to support listing buckets with a large number of objects and paginating the list operations. The return value of the list operation too cannot simply be a List of S3 Objects because we also need to return the marker that would be used for the next list operation. To sum up, the problem is fitting paginated list operations in Session which isn't possible currently. Other operations doesn't look difficult to implement. I just didn't want to compromise to let go of the paginated list operation on a cloud service.\nI can however re work on this class to implement it in a style similar to the one in ARFOG. I am not sure if modifying the Session class to start supporting paginating list operations makes sense. Or does it? :)\n", "created_at": "2013-05-17T18:53:54Z", "updated_at": "2013-07-23T17:39:30Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4282473", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4282473"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4282473"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4282473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4284787", "pull_request_review_id": null, "id": 4284787, "diff_hunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.getObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.listObjects;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.putObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.removeObject;\n+import static org.springframework.util.Assert.hasText;\n+import static org.springframework.util.Assert.isTrue;\n+import static org.springframework.util.Assert.notNull;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.s3.core.AmazonS3Operations;\n+import org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.integration.handler.MessageProcessor;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The outbound gateway implementation for performing operations like upload an object,\n+ * delete an object, remove and object and list objects in a bucket.\n+ *\n+ * @author Amol Nayak\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3OutboundGateway extends AbstractReplyProducingMessageHandler {\n+\n+\tprivate final AWSCredentials credentials;\n+\tprivate volatile MessageProcessor<String> remoteDirectoryProcessor;\n+\tprivate volatile MessageProcessor<String> remoteCommandProcessor;\n+\tprivate final AmazonS3Operations s3Operations;\n+\tprivate volatile String bucket;\n+\tprivate volatile String charset = \"UTF-8\";\n+\tprivate volatile FileNameGenerationStrategy fileNameGenerator = new DefaultFileNameGenerationStrategy();\n+\tprivate volatile Expression remoteDirectoryExpression;\n+\tprivate volatile Expression remoteCommandExpression;\n+\n+\t/**\n+\t * Command to be issued to list the contents of folder in the bucket\n+\t */\n+\tpublic static final String COMMAND_LIST = \"list\";\n+\n+\t/**\n+\t * Command to be used to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_REMOVE = \"remove\";\n+\n+\t/**\n+\t * Command issued to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_PUT = \"put\";\n+\n+\t/**\n+\t * Command to be issued to get the contents of an object in the bucket\n+\t */\n+\tpublic static final String COMMAND_GET = \"get\";\n+\n+\n+\tpublic AmazonS3OutboundGateway(\n+\t\t\tAWSCredentials credentials,\n+\t\t\tAmazonS3Operations s3Operations) {\n+\t\tnotNull(credentials, \"credentials must not be null\");\n+\t\tnotNull(s3Operations, \"s3Operations instance must not be null\");\n+\t\tthis.credentials = credentials;\n+\t\tthis.s3Operations = s3Operations;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\thasText(bucket, \"bucket name can not be null or empty string\");\n+\t\tnotNull(remoteDirectoryExpression == null && remoteDirectoryProcessor == null,\n+\t\t\t\t\"both remote directory expression and processor can not be null\");\n+\t\tnotNull(remoteCommandExpression == null && remoteCommandProcessor == null,\n+\t\t\t\t\"both remote command expression and processor can not be null\");\n+\t\tisTrue(remoteDirectoryExpression != null ^ remoteDirectoryProcessor != null,\n+\t\t\t\t\"can not specify both remore directory expression and processor\");\n+\t\tisTrue(remoteCommandExpression != null ^ remoteCommandProcessor != null,\n+\t\t\t\t\"can not specify both remote command expression and processor\");\n+\t\tif(remoteDirectoryExpression != null) {\n+\t\t\tthis.remoteDirectoryProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteDirectoryExpression);\n+\t\t}\n+\t\tif(remoteCommandExpression != null) {\n+\t\t\tthis.remoteCommandProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteCommandExpression);\n+\t\t}\n+\t}\n+\n+\n+\t@Override\n+\tprotected Object handleRequestMessage(Message<?> requestMessage) {\n+\t\tString command = remoteCommandProcessor.processMessage(requestMessage);\n+\t\tif(!StringUtils.hasText(command)) {\n+\t\t\tthrow new MessagingException(requestMessage, \"Message evaluated to a null command\");\n+\t\t}\n+\n+\t\tif(COMMAND_LIST.equalsIgnoreCase(command)) {\n+\t\t\treturn listObjects(s3Operations,\n+\t\t\t\t\tbucket,\n+\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\trequestMessage);\n+\t\t}\n+\t\telse if(COMMAND_REMOVE.equalsIgnoreCase(command)) {\n+\t\t\tremoveObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(COMMAND_PUT.equalsIgnoreCase(command)) {\n+\t\t\ttry {\n+\t\t\t\tputObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tcharset,\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\tfileNameGenerator,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\t\treturn true;\n+\t\t\t} catch (Exception e) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3OutboundGateway.java", "position": 139, "original_position": 138, "commit_id": "54963b37f82a7bffcf1009720495c22a046999de", "original_commit_id": "51420c11578ca1034b0e892e9b7ecf3a59a652df", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "No I agree. Thanks!\n", "created_at": "2013-05-17T21:22:53Z", "updated_at": "2013-07-23T17:39:30Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4284787", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4284787"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4284787"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4284787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4297318", "pull_request_review_id": null, "id": 4297318, "diff_hunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.getObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.listObjects;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.putObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.removeObject;\n+import static org.springframework.util.Assert.hasText;\n+import static org.springframework.util.Assert.isTrue;\n+import static org.springframework.util.Assert.notNull;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.s3.core.AmazonS3Operations;\n+import org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.integration.handler.MessageProcessor;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The outbound gateway implementation for performing operations like upload an object,\n+ * delete an object, remove and object and list objects in a bucket.\n+ *\n+ * @author Amol Nayak\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3OutboundGateway extends AbstractReplyProducingMessageHandler {\n+\n+\tprivate final AWSCredentials credentials;\n+\tprivate volatile MessageProcessor<String> remoteDirectoryProcessor;\n+\tprivate volatile MessageProcessor<String> remoteCommandProcessor;\n+\tprivate final AmazonS3Operations s3Operations;\n+\tprivate volatile String bucket;\n+\tprivate volatile String charset = \"UTF-8\";\n+\tprivate volatile FileNameGenerationStrategy fileNameGenerator = new DefaultFileNameGenerationStrategy();\n+\tprivate volatile Expression remoteDirectoryExpression;\n+\tprivate volatile Expression remoteCommandExpression;\n+\n+\t/**\n+\t * Command to be issued to list the contents of folder in the bucket\n+\t */\n+\tpublic static final String COMMAND_LIST = \"list\";\n+\n+\t/**\n+\t * Command to be used to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_REMOVE = \"remove\";\n+\n+\t/**\n+\t * Command issued to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_PUT = \"put\";\n+\n+\t/**\n+\t * Command to be issued to get the contents of an object in the bucket\n+\t */\n+\tpublic static final String COMMAND_GET = \"get\";\n+\n+\n+\tpublic AmazonS3OutboundGateway(\n+\t\t\tAWSCredentials credentials,\n+\t\t\tAmazonS3Operations s3Operations) {\n+\t\tnotNull(credentials, \"credentials must not be null\");\n+\t\tnotNull(s3Operations, \"s3Operations instance must not be null\");\n+\t\tthis.credentials = credentials;\n+\t\tthis.s3Operations = s3Operations;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\thasText(bucket, \"bucket name can not be null or empty string\");\n+\t\tnotNull(remoteDirectoryExpression == null && remoteDirectoryProcessor == null,\n+\t\t\t\t\"both remote directory expression and processor can not be null\");\n+\t\tnotNull(remoteCommandExpression == null && remoteCommandProcessor == null,\n+\t\t\t\t\"both remote command expression and processor can not be null\");\n+\t\tisTrue(remoteDirectoryExpression != null ^ remoteDirectoryProcessor != null,\n+\t\t\t\t\"can not specify both remore directory expression and processor\");\n+\t\tisTrue(remoteCommandExpression != null ^ remoteCommandProcessor != null,\n+\t\t\t\t\"can not specify both remote command expression and processor\");\n+\t\tif(remoteDirectoryExpression != null) {\n+\t\t\tthis.remoteDirectoryProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteDirectoryExpression);\n+\t\t}\n+\t\tif(remoteCommandExpression != null) {\n+\t\t\tthis.remoteCommandProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteCommandExpression);\n+\t\t}\n+\t}\n+\n+\n+\t@Override\n+\tprotected Object handleRequestMessage(Message<?> requestMessage) {\n+\t\tString command = remoteCommandProcessor.processMessage(requestMessage);\n+\t\tif(!StringUtils.hasText(command)) {\n+\t\t\tthrow new MessagingException(requestMessage, \"Message evaluated to a null command\");\n+\t\t}\n+\n+\t\tif(COMMAND_LIST.equalsIgnoreCase(command)) {\n+\t\t\treturn listObjects(s3Operations,\n+\t\t\t\t\tbucket,\n+\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\trequestMessage);\n+\t\t}\n+\t\telse if(COMMAND_REMOVE.equalsIgnoreCase(command)) {\n+\t\t\tremoveObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(COMMAND_PUT.equalsIgnoreCase(command)) {\n+\t\t\ttry {\n+\t\t\t\tputObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tcharset,\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\tfileNameGenerator,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\t\treturn true;\n+\t\t\t} catch (Exception e) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3OutboundGateway.java", "position": 139, "original_position": 138, "commit_id": "54963b37f82a7bffcf1009720495c22a046999de", "original_commit_id": "51420c11578ca1034b0e892e9b7ecf3a59a652df", "user": {"login": "amolnayak311", "id": 1028064, "avatar_url": "https://avatars1.githubusercontent.com/u/1028064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amolnayak311", "html_url": "https://github.com/amolnayak311", "followers_url": "https://api.github.com/users/amolnayak311/followers", "following_url": "https://api.github.com/users/amolnayak311/following{/other_user}", "gists_url": "https://api.github.com/users/amolnayak311/gists{/gist_id}", "starred_url": "https://api.github.com/users/amolnayak311/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amolnayak311/subscriptions", "organizations_url": "https://api.github.com/users/amolnayak311/orgs", "repos_url": "https://api.github.com/users/amolnayak311/repos", "events_url": "https://api.github.com/users/amolnayak311/events{/privacy}", "received_events_url": "https://api.github.com/users/amolnayak311/received_events", "type": "User", "site_admin": false}, "body": "So I will update the gateway to use Enums and switch. Once the AWS goes GA we can then look at refactoring ARFOG (Session in particular) in a separate JIRA to let s3 gateway extend from it. WDYT?\n", "created_at": "2013-05-20T14:00:37Z", "updated_at": "2013-07-23T17:39:30Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4297318", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4297318"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4297318"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4297318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4340194", "pull_request_review_id": null, "id": 4340194, "diff_hunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.getObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.listObjects;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.putObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.removeObject;\n+import static org.springframework.util.Assert.hasText;\n+import static org.springframework.util.Assert.isTrue;\n+import static org.springframework.util.Assert.notNull;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.s3.core.AmazonS3Operations;\n+import org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.integration.handler.MessageProcessor;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The outbound gateway implementation for performing operations like upload an object,\n+ * delete an object, remove and object and list objects in a bucket.\n+ *\n+ * @author Amol Nayak\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3OutboundGateway extends AbstractReplyProducingMessageHandler {\n+\n+\tprivate final AWSCredentials credentials;\n+\tprivate volatile MessageProcessor<String> remoteDirectoryProcessor;\n+\tprivate volatile MessageProcessor<String> remoteCommandProcessor;\n+\tprivate final AmazonS3Operations s3Operations;\n+\tprivate volatile String bucket;\n+\tprivate volatile String charset = \"UTF-8\";\n+\tprivate volatile FileNameGenerationStrategy fileNameGenerator = new DefaultFileNameGenerationStrategy();\n+\tprivate volatile Expression remoteDirectoryExpression;\n+\tprivate volatile Expression remoteCommandExpression;\n+\n+\t/**\n+\t * Command to be issued to list the contents of folder in the bucket\n+\t */\n+\tpublic static final String COMMAND_LIST = \"list\";\n+\n+\t/**\n+\t * Command to be used to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_REMOVE = \"remove\";\n+\n+\t/**\n+\t * Command issued to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_PUT = \"put\";\n+\n+\t/**\n+\t * Command to be issued to get the contents of an object in the bucket\n+\t */\n+\tpublic static final String COMMAND_GET = \"get\";\n+\n+\n+\tpublic AmazonS3OutboundGateway(\n+\t\t\tAWSCredentials credentials,\n+\t\t\tAmazonS3Operations s3Operations) {\n+\t\tnotNull(credentials, \"credentials must not be null\");\n+\t\tnotNull(s3Operations, \"s3Operations instance must not be null\");\n+\t\tthis.credentials = credentials;\n+\t\tthis.s3Operations = s3Operations;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\thasText(bucket, \"bucket name can not be null or empty string\");\n+\t\tnotNull(remoteDirectoryExpression == null && remoteDirectoryProcessor == null,\n+\t\t\t\t\"both remote directory expression and processor can not be null\");\n+\t\tnotNull(remoteCommandExpression == null && remoteCommandProcessor == null,\n+\t\t\t\t\"both remote command expression and processor can not be null\");\n+\t\tisTrue(remoteDirectoryExpression != null ^ remoteDirectoryProcessor != null,\n+\t\t\t\t\"can not specify both remore directory expression and processor\");\n+\t\tisTrue(remoteCommandExpression != null ^ remoteCommandProcessor != null,\n+\t\t\t\t\"can not specify both remote command expression and processor\");\n+\t\tif(remoteDirectoryExpression != null) {\n+\t\t\tthis.remoteDirectoryProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteDirectoryExpression);\n+\t\t}\n+\t\tif(remoteCommandExpression != null) {\n+\t\t\tthis.remoteCommandProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteCommandExpression);\n+\t\t}\n+\t}\n+\n+\n+\t@Override\n+\tprotected Object handleRequestMessage(Message<?> requestMessage) {\n+\t\tString command = remoteCommandProcessor.processMessage(requestMessage);\n+\t\tif(!StringUtils.hasText(command)) {\n+\t\t\tthrow new MessagingException(requestMessage, \"Message evaluated to a null command\");\n+\t\t}\n+\n+\t\tif(COMMAND_LIST.equalsIgnoreCase(command)) {\n+\t\t\treturn listObjects(s3Operations,\n+\t\t\t\t\tbucket,\n+\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\trequestMessage);\n+\t\t}\n+\t\telse if(COMMAND_REMOVE.equalsIgnoreCase(command)) {\n+\t\t\tremoveObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(COMMAND_PUT.equalsIgnoreCase(command)) {\n+\t\t\ttry {\n+\t\t\t\tputObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tcharset,\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\tfileNameGenerator,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\t\treturn true;\n+\t\t\t} catch (Exception e) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3OutboundGateway.java", "position": 139, "original_position": 138, "commit_id": "54963b37f82a7bffcf1009720495c22a046999de", "original_commit_id": "51420c11578ca1034b0e892e9b7ecf3a59a652df", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Sounds good!\n", "created_at": "2013-05-22T14:57:35Z", "updated_at": "2013-07-23T17:39:30Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4340194", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4340194"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r4340194"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/4340194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5199700", "pull_request_review_id": null, "id": 5199700, "diff_hunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.aws.s3;\n+\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.getObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.listObjects;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.putObject;\n+import static org.springframework.integration.aws.s3.AmazonS3OperationUtils.removeObject;\n+import static org.springframework.util.Assert.hasText;\n+import static org.springframework.util.Assert.isTrue;\n+import static org.springframework.util.Assert.notNull;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.Message;\n+import org.springframework.integration.MessagingException;\n+import org.springframework.integration.aws.core.AWSCredentials;\n+import org.springframework.integration.aws.s3.core.AmazonS3Operations;\n+import org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n+import org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor;\n+import org.springframework.integration.handler.MessageProcessor;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * The outbound gateway implementation for performing operations like upload an object,\n+ * delete an object, remove and object and list objects in a bucket.\n+ *\n+ * @author Amol Nayak\n+ * @since 0.5\n+ *\n+ */\n+public class AmazonS3OutboundGateway extends AbstractReplyProducingMessageHandler {\n+\n+\tprivate final AWSCredentials credentials;\n+\tprivate volatile MessageProcessor<String> remoteDirectoryProcessor;\n+\tprivate volatile MessageProcessor<String> remoteCommandProcessor;\n+\tprivate final AmazonS3Operations s3Operations;\n+\tprivate volatile String bucket;\n+\tprivate volatile String charset = \"UTF-8\";\n+\tprivate volatile FileNameGenerationStrategy fileNameGenerator = new DefaultFileNameGenerationStrategy();\n+\tprivate volatile Expression remoteDirectoryExpression;\n+\tprivate volatile Expression remoteCommandExpression;\n+\n+\t/**\n+\t * Command to be issued to list the contents of folder in the bucket\n+\t */\n+\tpublic static final String COMMAND_LIST = \"list\";\n+\n+\t/**\n+\t * Command to be used to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_REMOVE = \"remove\";\n+\n+\t/**\n+\t * Command issued to remove an object from the bucket\n+\t */\n+\tpublic static final String COMMAND_PUT = \"put\";\n+\n+\t/**\n+\t * Command to be issued to get the contents of an object in the bucket\n+\t */\n+\tpublic static final String COMMAND_GET = \"get\";\n+\n+\n+\tpublic AmazonS3OutboundGateway(\n+\t\t\tAWSCredentials credentials,\n+\t\t\tAmazonS3Operations s3Operations) {\n+\t\tnotNull(credentials, \"credentials must not be null\");\n+\t\tnotNull(s3Operations, \"s3Operations instance must not be null\");\n+\t\tthis.credentials = credentials;\n+\t\tthis.s3Operations = s3Operations;\n+\t}\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\thasText(bucket, \"bucket name can not be null or empty string\");\n+\t\tnotNull(remoteDirectoryExpression == null && remoteDirectoryProcessor == null,\n+\t\t\t\t\"both remote directory expression and processor can not be null\");\n+\t\tnotNull(remoteCommandExpression == null && remoteCommandProcessor == null,\n+\t\t\t\t\"both remote command expression and processor can not be null\");\n+\t\tisTrue(remoteDirectoryExpression != null ^ remoteDirectoryProcessor != null,\n+\t\t\t\t\"can not specify both remore directory expression and processor\");\n+\t\tisTrue(remoteCommandExpression != null ^ remoteCommandProcessor != null,\n+\t\t\t\t\"can not specify both remote command expression and processor\");\n+\t\tif(remoteDirectoryExpression != null) {\n+\t\t\tthis.remoteDirectoryProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteDirectoryExpression);\n+\t\t}\n+\t\tif(remoteCommandExpression != null) {\n+\t\t\tthis.remoteCommandProcessor = new ExpressionEvaluatingMessageProcessor<String>(remoteCommandExpression);\n+\t\t}\n+\t}\n+\n+\n+\t@Override\n+\tprotected Object handleRequestMessage(Message<?> requestMessage) {\n+\t\tString command = remoteCommandProcessor.processMessage(requestMessage);\n+\t\tif(!StringUtils.hasText(command)) {\n+\t\t\tthrow new MessagingException(requestMessage, \"Message evaluated to a null command\");\n+\t\t}\n+\n+\t\tif(COMMAND_LIST.equalsIgnoreCase(command)) {\n+\t\t\treturn listObjects(s3Operations,\n+\t\t\t\t\tbucket,\n+\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\trequestMessage);\n+\t\t}\n+\t\telse if(COMMAND_REMOVE.equalsIgnoreCase(command)) {\n+\t\t\tremoveObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(COMMAND_PUT.equalsIgnoreCase(command)) {\n+\t\t\ttry {\n+\t\t\t\tputObject(s3Operations,\n+\t\t\t\t\t\t\tbucket,\n+\t\t\t\t\t\t\tcredentials.getAccessKey(),\n+\t\t\t\t\t\t\tcharset,\n+\t\t\t\t\t\t\tremoteDirectoryProcessor,\n+\t\t\t\t\t\t\tfileNameGenerator,\n+\t\t\t\t\t\t\trequestMessage);\n+\t\t\t\treturn true;\n+\t\t\t} catch (Exception e) {", "path": "spring-integration-aws/src/main/java/org/springframework/integration/aws/s3/AmazonS3OutboundGateway.java", "position": 139, "original_position": 138, "commit_id": "54963b37f82a7bffcf1009720495c22a046999de", "original_commit_id": "51420c11578ca1034b0e892e9b7ecf3a59a652df", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "I had mentioned this earlier as Amol stated. It would be super-nice to find some common ground using the `AbstractRemoteFileOutboundGateway`. Interestingly, the `AbstractRemoteFileOutboundGateway` does not currently support PUTS - I went ahead and created:\n- https://jira.springsource.org/browse/INT-3088\n", "created_at": "2013-07-15T19:49:42Z", "updated_at": "2013-07-23T17:39:30Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r5199700", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5199700"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/41#discussion_r5199700"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/41"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5199700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798336", "pull_request_review_id": null, "id": 6798336, "diff_hunk": "@@ -180,14 +175,42 @@ private void getPayload(final List<MessageAndMetadata<K,V>> messageAndMetadatas,\n \t\t}\n \t}\n \n+    private Collection<List<KafkaStream<K, V>>> createConsumerMessageStreams() {\n+\t    if (consumerMessageStreams == null){\n+\t        if (!(consumerMetadata.getTopicStreamMap() == null || consumerMetadata.getTopicStreamMap().isEmpty())){\n+\t            consumerMessageStreams = createMessageStreamsForTopic().values();\n+\t        }\n+\t        else{", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/support/ConsumerConfiguration.java", "position": null, "original_position": 73, "commit_id": "1f13078e4c0f39033e52486b110aca531d17c05b", "original_commit_id": "0d8fefd88c8bbdcf3fb7db7ecff178c70cddd460", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "space after else\n", "created_at": "2013-10-07T14:32:19Z", "updated_at": "2013-10-08T15:42:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/58#discussion_r6798336", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/58", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798336"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/58#discussion_r6798336"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/58"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798345", "pull_request_review_id": null, "id": 6798345, "diff_hunk": "@@ -180,14 +175,42 @@ private void getPayload(final List<MessageAndMetadata<K,V>> messageAndMetadatas,\n \t\t}\n \t}\n \n+    private Collection<List<KafkaStream<K, V>>> createConsumerMessageStreams() {\n+\t    if (consumerMessageStreams == null){\n+\t        if (!(consumerMetadata.getTopicStreamMap() == null || consumerMetadata.getTopicStreamMap().isEmpty())){\n+\t            consumerMessageStreams = createMessageStreamsForTopic().values();\n+\t        }\n+\t        else{\n+\t            consumerMessageStreams = new ArrayList<List<KafkaStream<K, V>>>();\n+\t            \n+\t            consumerMessageStreams.add(createMessageStreamsForTopicFilter());\n+\t        }\n+\t    }\n+\t    return consumerMessageStreams;\n+\t}\n+\t\n \t@SuppressWarnings(\"unchecked\")\n-\tpublic Map<String, List<KafkaStream<K,V>>> getConsumerMapWithMessageStreams() {\n-\t\treturn getConsumerConnector().createMessageStreams(\n-\t\t\t\tconsumerMetadata.getTopicStreamMap(),\n-\t\t\t\tconsumerMetadata.getKeyDecoder(),\n-\t\t\t\tconsumerMetadata.getValueDecoder());\n+    public Map<String, List<KafkaStream<K, V>>> createMessageStreamsForTopic() {\n+        return getConsumerConnector().createMessageStreams(\n+\t\t\t\t\tconsumerMetadata.getTopicStreamMap(),\n+\t\t\t\t\tconsumerMetadata.getKeyDecoder(),\n+\t\t\t\t\tconsumerMetadata.getValueDecoder());\n \t}\n-\n+\t\n+    public List<KafkaStream<K, V>> createMessageStreamsForTopicFilter() {\n+        List<KafkaStream<K, V>> messageStream = new ArrayList<KafkaStream<K, V>>();\n+\t\tTopicFilterConfiguration topicFilterConfiguration = consumerMetadata.getTopicFilterConfiguration();\n+\t\tif (topicFilterConfiguration != null){\n+            messageStream = getConsumerConnector().createMessageStreamsByFilter(\n+                    topicFilterConfiguration.getTopicFilter(), topicFilterConfiguration.getNumberOfStreams(),\n+                    consumerMetadata.getKeyDecoder(), consumerMetadata.getValueDecoder());\n+\t\t}else{", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/support/ConsumerConfiguration.java", "position": null, "original_position": 103, "commit_id": "1f13078e4c0f39033e52486b110aca531d17c05b", "original_commit_id": "0d8fefd88c8bbdcf3fb7db7ecff178c70cddd460", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "else on new line. Space after else\n", "created_at": "2013-10-07T14:32:40Z", "updated_at": "2013-10-08T15:42:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/58#discussion_r6798345", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/58", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798345"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/58#discussion_r6798345"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/58"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798353", "pull_request_review_id": null, "id": 6798353, "diff_hunk": "@@ -46,10 +46,11 @@ public ProducerConfiguration(final ProducerMetadata<K, V> producerMetadata, fina\n \tpublic void send(final Message<?> message) throws Exception {\n \t\tfinal V v = getPayload(message);\n \n+\t\tString topic = message.getHeaders().get(\"topic\", String.class);\n \t\tif (message.getHeaders().containsKey(\"messageKey\")) {\n-\t\t\tproducer.send(new KeyedMessage<K, V>(producerMetadata.getTopic(), getKey(message), v));\n+\t\t\tproducer.send(new KeyedMessage<K, V>(topic, getKey(message), v));\n \t\t} else {", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/support/ProducerConfiguration.java", "position": null, "original_position": 32, "commit_id": "1f13078e4c0f39033e52486b110aca531d17c05b", "original_commit_id": "0d8fefd88c8bbdcf3fb7db7ecff178c70cddd460", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "else on new line\n", "created_at": "2013-10-07T14:33:02Z", "updated_at": "2013-10-08T15:42:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/58#discussion_r6798353", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/58", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798353"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/58#discussion_r6798353"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/58"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798361", "pull_request_review_id": null, "id": 6798361, "diff_hunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.kafka.support;\n+\n+import kafka.consumer.Blacklist;\n+import kafka.consumer.TopicFilter;\n+import kafka.consumer.Whitelist;\n+\n+/**\n+ * @author Rajasekar Elango\n+ * @since 0.5\n+ */\n+public class TopicFilterConfiguration {\n+\t\n+\tprivate int numberOfStreams;\n+\tprivate TopicFilter topicFilter;\n+\t\n+\tpublic TopicFilterConfiguration(final String pattern, final int numberOfStreams, final boolean exclude){\n+\t\tthis.numberOfStreams = numberOfStreams;\n+\t\tif (exclude){\n+\t\t\ttopicFilter = new Blacklist(pattern);\n+\t\t}else{", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/support/TopicFilterConfiguration.java", "position": null, "original_position": 35, "commit_id": "1f13078e4c0f39033e52486b110aca531d17c05b", "original_commit_id": "0d8fefd88c8bbdcf3fb7db7ecff178c70cddd460", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "else on new line. Space after else\n", "created_at": "2013-10-07T14:33:21Z", "updated_at": "2013-10-08T15:42:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/58#discussion_r6798361", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/58", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798361"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/58#discussion_r6798361"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/58"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/6798361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727608", "pull_request_review_id": null, "id": 12727608, "diff_hunk": "@@ -255,7 +255,7 @@ task dist(dependsOn: assemble) {\n \n task wrapper(type: Wrapper) {\n \tdescription = 'Generates gradlew[.bat] scripts'\n-\tgradleVersion = '1.6'\n+\tgradleVersion = '1.10'", "path": "spring-integration-splunk/build.gradle", "position": null, "original_position": 5, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "`1.12` is current Gradle version\nand also add this line:\n\n```\ndistributionUrl = \"http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip\"\n```\n\nWrapper configure `distributionUrl` as `bin` by default\nAnd also would be better to run `wrapper` task locally to generate actual Gradle artifacts and push them to PR.\n", "created_at": "2014-05-16T07:32:27Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727608", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727608"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727608"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727636", "pull_request_review_id": null, "id": 12727636, "diff_hunk": "@@ -1,6 +1,6 @@\n junitVersion=4.8.2\n jodaTimeVersion=2.1\n-springVersion=3.1.3.RELEASE\n+springVersion=4.0.3.RELEASE", "path": "spring-integration-splunk/gradle.properties", "position": null, "original_position": 4, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "I suggest to revise all versions and use the latest ones.\nI agree that for SI 4.0 we should provide separete branch\n", "created_at": "2014-05-16T07:33:49Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727636", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727636"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727636"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727666", "pull_request_review_id": null, "id": 12727666, "diff_hunk": "@@ -17,17 +17,25 @@\n \n import org.springframework.beans.BeanMetadataElement;\n import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.beans.factory.config.ListFactoryBean;\n+import org.springframework.beans.factory.config.RuntimeBeanReference;\n import org.springframework.beans.factory.parsing.BeanComponentDefinition;\n import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.beans.factory.support.ManagedList;\n import org.springframework.beans.factory.xml.ParserContext;\n import org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n import org.springframework.integration.config.xml.IntegrationNamespaceUtils;\n import org.springframework.integration.splunk.inbound.SplunkPollingChannelAdapter;\n import org.springframework.integration.splunk.support.SplunkDataReader;\n+import org.springframework.integration.splunk.support.SplunkServer;\n import org.springframework.integration.splunk.support.SplunkServiceFactory;\n import org.springframework.util.StringUtils;\n import org.w3c.dom.Element;\n \n+import java.util.ArrayList;\n+import java.util.List;", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 21, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Revise, please, imports - `unused` some of them. They should be presented\n", "created_at": "2014-05-16T07:34:46Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727666", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727666"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727666"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727691", "pull_request_review_id": null, "id": 12727691, "diff_hunk": "@@ -60,14 +69,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 42, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "tabs, not whitespaces\n", "created_at": "2014-05-16T07:35:54Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727691", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727691"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727691"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727726", "pull_request_review_id": null, "id": 12727726, "diff_hunk": "@@ -60,14 +69,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {\n+            BeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n \n-\t\tString splunkServerBeanName = element.getAttribute(\"splunk-server-ref\");\n-\t\tif (StringUtils.hasText(splunkServerBeanName)) {\n-\t\t\tserviceFactoryBuilder.addConstructorArgReference(splunkServerBeanName);\n-\t\t}\n+            String splunkServerBeanNames = element.getAttribute( \"splunk-server-ref\" );\n+            if ( StringUtils.hasText( splunkServerBeanNames ) )\n+            {\n+\n+                ManagedList<RuntimeBeanReference> splunkServersList = new ManagedList<RuntimeBeanReference>( );\n \n-\t\tsplunkDataReaderBuilder.addConstructorArgValue(serviceFactoryBuilder.getBeanDefinition());\n+                for(String splunkServerBeanName : StringUtils.delimitedListToStringArray( splunkServerBeanNames, \";\" ))", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 56, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Why not comma ? I have never seen that Spring suggests semicolon separator...\n", "created_at": "2014-05-16T07:38:07Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727726", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727726"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727726"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727785", "pull_request_review_id": null, "id": 12727785, "diff_hunk": "@@ -60,14 +69,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {\n+            BeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n \n-\t\tString splunkServerBeanName = element.getAttribute(\"splunk-server-ref\");\n-\t\tif (StringUtils.hasText(splunkServerBeanName)) {\n-\t\t\tserviceFactoryBuilder.addConstructorArgReference(splunkServerBeanName);\n-\t\t}\n+            String splunkServerBeanNames = element.getAttribute( \"splunk-server-ref\" );\n+            if ( StringUtils.hasText( splunkServerBeanNames ) )\n+            {\n+\n+                ManagedList<RuntimeBeanReference> splunkServersList = new ManagedList<RuntimeBeanReference>( );\n \n-\t\tsplunkDataReaderBuilder.addConstructorArgValue(serviceFactoryBuilder.getBeanDefinition());\n+                for(String splunkServerBeanName : StringUtils.delimitedListToStringArray( splunkServerBeanNames, \";\" ))\n+                {\n+                    splunkServersList.add( new RuntimeBeanReference( splunkServerBeanName ) );\n+                }\n+                serviceFactoryBuilder.addConstructorArgValue( splunkServersList );\n+                splunkDataReaderBuilder.addConstructorArgValue( serviceFactoryBuilder.getBeanDefinition() );\n+            }\n+        }", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 63, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Shouldn't we have logic, when `splunk-server-ref` is empty ? However would be better to encapsulate it in the `SplunkServiceFactory`\n", "created_at": "2014-05-16T07:40:57Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727785", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727785"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12727785"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12727785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728427", "pull_request_review_id": null, "id": 12728427, "diff_hunk": "@@ -57,6 +57,7 @@ protected void doParse(Element element, ParserContext parserContext, BeanDefinit\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(builder, element, \"username\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(builder, element, \"password\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(builder, element, \"timeout\");\n+        IntegrationNamespaceUtils.setValueIfAttributeDefined( builder, element, \"testOnBorrow\" );", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkServerParser.java", "position": null, "original_position": 4, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Again tabs.\nAnd I don't like this name - maybe `checkServiceOnBorrow` ?\n", "created_at": "2014-05-16T07:45:32Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728427", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728427"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728427"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728454", "pull_request_review_id": null, "id": 12728454, "diff_hunk": "@@ -12,75 +12,149 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    /*public SplunkServiceFactory(SplunkServer[] splunkServers) {\n+        this.splunkServers = Arrays.asList( splunkServers );\n+    }*/", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 90, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "This is good ctor with vararg, though\n", "created_at": "2014-05-16T07:47:03Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728454", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728454"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728454"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728474", "pull_request_review_id": null, "id": 12728474, "diff_hunk": "@@ -12,75 +12,149 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    /*public SplunkServiceFactory(SplunkServer[] splunkServers) {\n+        this.splunkServers = Arrays.asList( splunkServers );\n+    }*/\n+\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = splunkServers;", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 93, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Need to reinstate list, to avoid mutations in case of reference\n", "created_at": "2014-05-16T07:48:03Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728474", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728474"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728474"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728715", "pull_request_review_id": null, "id": 12728715, "diff_hunk": "@@ -12,75 +12,149 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    /*public SplunkServiceFactory(SplunkServer[] splunkServers) {\n+        this.splunkServers = Arrays.asList( splunkServers );\n+    }*/\n+\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = splunkServers;\n+    }\n+\n+    @Override\n+    public synchronized Service getService() {\n+        return getServiceInternal();\n+    }\n+\n+\tprivate Service getServiceInternal() {\n+\n+        for (SplunkServer splunkServer : splunkServers)\n+        {\n+            Service service = servicePerServer.get( splunkServer );\n+            // service already exist and no test on borrow it so simply use it\n+            if ( service != null && !splunkServer.isTestOnBorrow() )\n+            {\n+                return service;\n+            }\n+\n+            if (service!=null && splunkServer.isTestOnBorrow()){\n+                if (pingService( service )){\n+                    return service;\n+                } else {\n+                    // fail so try next server\n+                    continue;\n+                }\n+            }\n+\n+            ExecutorService executor = Executors.newSingleThreadExecutor();\n+\n+            Callable<Service> callable = buildServiceCallable( splunkServer );\n+\n+            Future<Service> future = executor.submit( callable );\n+\n+            try\n+            {\n+                if ( splunkServer.getTimeout() > 0 )\n+                {\n+                    service = future.get( splunkServer.getTimeout(), TimeUnit.MILLISECONDS );\n+                }\n+                else\n+                {\n+                    service = future.get();", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 135, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "What is the reson of `Callable` from separete Thread, if you anyway wait this `Future`?\nDoesn't Splunk support `connectTimeout` ?\n", "created_at": "2014-05-16T07:58:42Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728715", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728715"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728715"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728774", "pull_request_review_id": null, "id": 12728774, "diff_hunk": "@@ -123,6 +123,18 @@ Indicates the connection timeout in ms.\n \t\t\t\t\t</xsd:appinfo>\n \t\t\t\t</xsd:annotation>\n \t\t\t</xsd:attribute>\n+      <xsd:attribute name=\"testOnBorrow\" type=\"xsd:boolean\" use=\"optional\">", "path": "spring-integration-splunk/src/main/resources/org/springframework/integration/splunk/config/xml/spring-integration-splunk-1.0.xsd", "position": null, "original_position": 4, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Remove `type`, please, to allow to use it with property-placeholder, too\n", "created_at": "2014-05-16T08:01:21Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728774", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728774"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728774"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728883", "pull_request_review_id": null, "id": 12728883, "diff_hunk": "@@ -12,75 +12,149 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    /*public SplunkServiceFactory(SplunkServer[] splunkServers) {\n+        this.splunkServers = Arrays.asList( splunkServers );\n+    }*/\n+\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = splunkServers;\n+    }\n+\n+    @Override\n+    public synchronized Service getService() {\n+        return getServiceInternal();\n+    }\n+\n+\tprivate Service getServiceInternal() {\n+\n+        for (SplunkServer splunkServer : splunkServers)\n+        {\n+            Service service = servicePerServer.get( splunkServer );\n+            // service already exist and no test on borrow it so simply use it\n+            if ( service != null && !splunkServer.isTestOnBorrow() )\n+            {\n+                return service;\n+            }\n+\n+            if (service!=null && splunkServer.isTestOnBorrow()){\n+                if (pingService( service )){\n+                    return service;\n+                } else {\n+                    // fail so try next server\n+                    continue;\n+                }\n+            }", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 119, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Can be simplified:\n\n``` java\nif (service != null) {\n       if (!splunkServer.isTestOnBorrow() || pingService(service)) {\n        return service;\n    }\n    else {\n        // fail so try next server\n        continue;\n    }\n}\n```\n", "created_at": "2014-05-16T08:07:03Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728883", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728883"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12728883"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12728883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733307", "pull_request_review_id": null, "id": 12733307, "diff_hunk": "@@ -60,14 +69,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 42, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "no I don't think so.\nThe code I added use whitespaces. All the previous code use tabs.\nAnd I don't want to generate a non readable pr due to too much formatting.\n", "created_at": "2014-05-16T11:00:43Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733307", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733307"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733307"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733357", "pull_request_review_id": null, "id": 12733357, "diff_hunk": "@@ -60,14 +69,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {\n+            BeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n \n-\t\tString splunkServerBeanName = element.getAttribute(\"splunk-server-ref\");\n-\t\tif (StringUtils.hasText(splunkServerBeanName)) {\n-\t\t\tserviceFactoryBuilder.addConstructorArgReference(splunkServerBeanName);\n-\t\t}\n+            String splunkServerBeanNames = element.getAttribute( \"splunk-server-ref\" );\n+            if ( StringUtils.hasText( splunkServerBeanNames ) )\n+            {\n+\n+                ManagedList<RuntimeBeanReference> splunkServersList = new ManagedList<RuntimeBeanReference>( );\n \n-\t\tsplunkDataReaderBuilder.addConstructorArgValue(serviceFactoryBuilder.getBeanDefinition());\n+                for(String splunkServerBeanName : StringUtils.delimitedListToStringArray( splunkServerBeanNames, \";\" ))\n+                {\n+                    splunkServersList.add( new RuntimeBeanReference( splunkServerBeanName ) );\n+                }\n+                serviceFactoryBuilder.addConstructorArgValue( splunkServersList );\n+                splunkDataReaderBuilder.addConstructorArgValue( serviceFactoryBuilder.getBeanDefinition() );\n+            }\n+        }", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 63, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "if empty then exception?\n", "created_at": "2014-05-16T11:02:31Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733357", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733357"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733357"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733376", "pull_request_review_id": null, "id": 12733376, "diff_hunk": "@@ -57,6 +57,7 @@ protected void doParse(Element element, ParserContext parserContext, BeanDefinit\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(builder, element, \"username\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(builder, element, \"password\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(builder, element, \"timeout\");\n+        IntegrationNamespaceUtils.setValueIfAttributeDefined( builder, element, \"testOnBorrow\" );", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkServerParser.java", "position": null, "original_position": 4, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "Again I believe you're wrong :-)\nAll the code is plenty of tabs and my changes are spaces only\n", "created_at": "2014-05-16T11:03:29Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733376", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733376"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733376"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733416", "pull_request_review_id": null, "id": 12733416, "diff_hunk": "@@ -12,75 +12,149 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    /*public SplunkServiceFactory(SplunkServer[] splunkServers) {\n+        this.splunkServers = Arrays.asList( splunkServers );\n+    }*/", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 90, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "I will remove comments\n", "created_at": "2014-05-16T11:05:33Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733416", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733416"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733416"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733440", "pull_request_review_id": null, "id": 12733440, "diff_hunk": "@@ -12,75 +12,149 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    /*public SplunkServiceFactory(SplunkServer[] splunkServers) {\n+        this.splunkServers = Arrays.asList( splunkServers );\n+    }*/\n+\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = splunkServers;\n+    }\n+\n+    @Override\n+    public synchronized Service getService() {\n+        return getServiceInternal();\n+    }\n+\n+\tprivate Service getServiceInternal() {\n+\n+        for (SplunkServer splunkServer : splunkServers)\n+        {\n+            Service service = servicePerServer.get( splunkServer );\n+            // service already exist and no test on borrow it so simply use it\n+            if ( service != null && !splunkServer.isTestOnBorrow() )\n+            {\n+                return service;\n+            }\n+\n+            if (service!=null && splunkServer.isTestOnBorrow()){\n+                if (pingService( service )){\n+                    return service;\n+                } else {\n+                    // fail so try next server\n+                    continue;\n+                }\n+            }", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 119, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "good catch\n", "created_at": "2014-05-16T11:07:02Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733440", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733440"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733440"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733472", "pull_request_review_id": null, "id": 12733472, "diff_hunk": "@@ -12,75 +12,149 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    /*public SplunkServiceFactory(SplunkServer[] splunkServers) {\n+        this.splunkServers = Arrays.asList( splunkServers );\n+    }*/\n+\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = splunkServers;\n+    }\n+\n+    @Override\n+    public synchronized Service getService() {\n+        return getServiceInternal();\n+    }\n+\n+\tprivate Service getServiceInternal() {\n+\n+        for (SplunkServer splunkServer : splunkServers)\n+        {\n+            Service service = servicePerServer.get( splunkServer );\n+            // service already exist and no test on borrow it so simply use it\n+            if ( service != null && !splunkServer.isTestOnBorrow() )\n+            {\n+                return service;\n+            }\n+\n+            if (service!=null && splunkServer.isTestOnBorrow()){\n+                if (pingService( service )){\n+                    return service;\n+                } else {\n+                    // fail so try next server\n+                    continue;\n+                }\n+            }\n+\n+            ExecutorService executor = Executors.newSingleThreadExecutor();\n+\n+            Callable<Service> callable = buildServiceCallable( splunkServer );\n+\n+            Future<Service> future = executor.submit( callable );\n+\n+            try\n+            {\n+                if ( splunkServer.getTimeout() > 0 )\n+                {\n+                    service = future.get( splunkServer.getTimeout(), TimeUnit.MILLISECONDS );\n+                }\n+                else\n+                {\n+                    service = future.get();", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 135, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "Honestly due to lack of unit tests, I didn't want to touch too much the code so leave it as before.\nAgree that's a bit lazy but I only need a small feature and don't want to go in too much change.\nAnd I don't see timeout for Splunk core sdk.\n", "created_at": "2014-05-16T11:08:34Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733472", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733472"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12733472"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12733472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734108", "pull_request_review_id": null, "id": 12734108, "diff_hunk": "@@ -60,14 +69,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 42, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Right. Our formitting is tabs, not whitespaces. You should configure your IDE appropriatelly: \nhttps://github.com/spring-projects/spring-framework/tree/master/src/eclipse\nhttps://github.com/spring-projects/spring-framework/tree/master/src/idea\n", "created_at": "2014-05-16T11:28:19Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12734108", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734108"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12734108"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734146", "pull_request_review_id": null, "id": 12734146, "diff_hunk": "@@ -60,14 +69,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {\n+            BeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n \n-\t\tString splunkServerBeanName = element.getAttribute(\"splunk-server-ref\");\n-\t\tif (StringUtils.hasText(splunkServerBeanName)) {\n-\t\t\tserviceFactoryBuilder.addConstructorArgReference(splunkServerBeanName);\n-\t\t}\n+            String splunkServerBeanNames = element.getAttribute( \"splunk-server-ref\" );\n+            if ( StringUtils.hasText( splunkServerBeanNames ) )\n+            {\n+\n+                ManagedList<RuntimeBeanReference> splunkServersList = new ManagedList<RuntimeBeanReference>( );\n \n-\t\tsplunkDataReaderBuilder.addConstructorArgValue(serviceFactoryBuilder.getBeanDefinition());\n+                for(String splunkServerBeanName : StringUtils.delimitedListToStringArray( splunkServerBeanNames, \";\" ))\n+                {\n+                    splunkServersList.add( new RuntimeBeanReference( splunkServerBeanName ) );\n+                }\n+                serviceFactoryBuilder.addConstructorArgValue( splunkServersList );\n+                splunkDataReaderBuilder.addConstructorArgValue( serviceFactoryBuilder.getBeanDefinition() );\n+            }\n+        }", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 63, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Right, but it should be a part of `SplunkServiceFactory`, when I might provide an empty list:\n`Assert.notEmpty(splunkServer)` from ctor\n", "created_at": "2014-05-16T11:29:58Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12734146", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734146"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12734146"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734175", "pull_request_review_id": null, "id": 12734175, "diff_hunk": "@@ -12,75 +12,149 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    /*public SplunkServiceFactory(SplunkServer[] splunkServers) {\n+        this.splunkServers = Arrays.asList( splunkServers );\n+    }*/\n+\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = splunkServers;\n+    }\n+\n+    @Override\n+    public synchronized Service getService() {\n+        return getServiceInternal();\n+    }\n+\n+\tprivate Service getServiceInternal() {\n+\n+        for (SplunkServer splunkServer : splunkServers)\n+        {\n+            Service service = servicePerServer.get( splunkServer );\n+            // service already exist and no test on borrow it so simply use it\n+            if ( service != null && !splunkServer.isTestOnBorrow() )\n+            {\n+                return service;\n+            }\n+\n+            if (service!=null && splunkServer.isTestOnBorrow()){\n+                if (pingService( service )){\n+                    return service;\n+                } else {\n+                    // fail so try next server\n+                    continue;\n+                }\n+            }\n+\n+            ExecutorService executor = Executors.newSingleThreadExecutor();\n+\n+            Callable<Service> callable = buildServiceCallable( splunkServer );\n+\n+            Future<Service> future = executor.submit( callable );\n+\n+            try\n+            {\n+                if ( splunkServer.getTimeout() > 0 )\n+                {\n+                    service = future.get( splunkServer.getTimeout(), TimeUnit.MILLISECONDS );\n+                }\n+                else\n+                {\n+                    service = future.get();", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 135, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Got it. Sorry: now I see it isn't your code. So. nevermind. We can come back to this another time.\n", "created_at": "2014-05-16T11:31:26Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12734175", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734175"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12734175"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12734175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12764142", "pull_request_review_id": null, "id": 12764142, "diff_hunk": "@@ -60,14 +69,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 42, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "9ddf22dd132c5653abdec22b983eaf49857c1174", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "Doh weird first time of my opensource life I see folks using tabs!\nBut as I don't want to start any holy war I will try to fix that later\n", "created_at": "2014-05-17T00:00:07Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12764142", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12764142"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12764142"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12764142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767701", "pull_request_review_id": null, "id": 12767701, "diff_hunk": "@@ -60,14 +63,24 @@ protected BeanMetadataElement parseSource(Element element, ParserContext parserC\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"earliest-time\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(splunkDataReaderBuilder, element, \"latest-time\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        // initialize splunk servers references\n+        {\n+            BeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n \n-\t\tString splunkServerBeanName = element.getAttribute(\"splunk-server-ref\");\n-\t\tif (StringUtils.hasText(splunkServerBeanName)) {\n-\t\t\tserviceFactoryBuilder.addConstructorArgReference(splunkServerBeanName);\n-\t\t}\n+            String splunkServerBeanNames = element.getAttribute( \"splunk-server-ref\" );\n+            if ( StringUtils.hasText( splunkServerBeanNames ) )\n+            {\n+\n+                ManagedList<RuntimeBeanReference> splunkServersList = new ManagedList<RuntimeBeanReference>( );\n \n-\t\tsplunkDataReaderBuilder.addConstructorArgValue(serviceFactoryBuilder.getBeanDefinition());\n+                for(String splunkServerBeanName : StringUtils.delimitedListToStringArray( splunkServerBeanNames, \",\" ))", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkInboundChannelAdapterParser.java", "position": null, "original_position": 41, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "18d26a3c99ab6f22caef8eee2fc693566affe6c6", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "`,` is the default delimiter for `StringUtils.commaDelimitedListToStringArray`. \nMinor and can be polished on merge - just for info to know\n", "created_at": "2014-05-17T09:56:25Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767701", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767701"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767701"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767743", "pull_request_review_id": null, "id": 12767743, "diff_hunk": "@@ -12,75 +12,146 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 89, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "18d26a3c99ab6f22caef8eee2fc693566affe6c6", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "As I said `Assert.notEmpty(splunkServers)`. It doesn't make sense to allow create `SplunkServiceFactory` without any server. However, from other side, we can think about dynamic `add/remove` failover `SplukServers` at runtime.\nWDYT?\n", "created_at": "2014-05-17T10:02:48Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767743", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767743"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767743"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767745", "pull_request_review_id": null, "id": 12767745, "diff_hunk": "@@ -12,75 +12,146 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 40, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "18d26a3c99ab6f22caef8eee2fc693566affe6c6", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "The same is here - `Assert.notNull(splunkServer)`\n", "created_at": "2014-05-17T10:03:15Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767745", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767745"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767745"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767748", "pull_request_review_id": null, "id": 12767748, "diff_hunk": "@@ -12,75 +12,146 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = new ArrayList<SplunkServer>( splunkServers );\n+    }\n+\n+    @Override\n+    public synchronized Service getService() {\n+        return getServiceInternal();\n+    }\n+\n+\tprivate Service getServiceInternal() {\n+\n+        for (SplunkServer splunkServer : splunkServers)\n+        {\n+            Service service = servicePerServer.get( splunkServer );\n+            // service already exist and no test on borrow it so simply use it\n+\n+            if ( service != null )\n+            {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 106, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "18d26a3c99ab6f22caef8eee2fc693566affe6c6", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "I don't know which code style requires Apache, but in Spring we prefer this: https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Code-Style\n", "created_at": "2014-05-17T10:04:58Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767748", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767748"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767748"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767755", "pull_request_review_id": null, "id": 12767755, "diff_hunk": "@@ -34,6 +34,10 @@\n \tprivate String username;\n \tprivate String password;\n \tprivate int timeout;\n+    /**\n+     * if <code> will test i", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServer.java", "position": null, "original_position": 5, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "18d26a3c99ab6f22caef8eee2fc693566affe6c6", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "??? \nThis JavaDoc doesn't say for me anything useful\n", "created_at": "2014-05-17T10:06:50Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767755", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767755"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767755"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767760", "pull_request_review_id": null, "id": 12767760, "diff_hunk": "@@ -12,75 +12,146 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 36, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "18d26a3c99ab6f22caef8eee2fc693566affe6c6", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Should be `final`\n", "created_at": "2014-05-17T10:07:18Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767760", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767760"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12767760"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12767760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12779313", "pull_request_review_id": null, "id": 12779313, "diff_hunk": "@@ -12,75 +12,146 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = new ArrayList<SplunkServer>( splunkServers );\n+    }\n+\n+    @Override\n+    public synchronized Service getService() {\n+        return getServiceInternal();\n+    }\n+\n+\tprivate Service getServiceInternal() {\n+\n+        for (SplunkServer splunkServer : splunkServers)\n+        {\n+            Service service = servicePerServer.get( splunkServer );\n+            // service already exist and no test on borrow it so simply use it\n+\n+            if ( service != null )\n+            {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 106, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "18d26a3c99ab6f22caef8eee2fc693566affe6c6", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "Again I don't want to go in an holy war tabs vs spaces (even if spaces is really better :-) )\nDo you guys provide a style configuration for idea? I find it convenient to just have a file rather than configuring stuff manually.\n", "created_at": "2014-05-19T04:51:15Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12779313", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12779313"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12779313"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12779313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12779724", "pull_request_review_id": null, "id": 12779724, "diff_hunk": "@@ -12,75 +12,146 @@\n  */\n package org.springframework.integration.splunk.support;\n \n+import com.splunk.Service;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.beans.factory.FactoryBean;\n+import org.springframework.integration.splunk.core.ServiceFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.Callable;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n-import org.springframework.beans.factory.FactoryBean;\n-import org.springframework.integration.splunk.core.ServiceFactory;\n-\n-import com.splunk.Service;\n-\n /**\n  * A {@link FactoryBean} for creating a {@link Service}\n  *\n  * @author David Turanski\n  */\n public class SplunkServiceFactory implements ServiceFactory {\n-\tprivate final SplunkServer splunkServer;\n-\tprivate Service service;\n+\tprivate final List<SplunkServer> splunkServers;\n+\tprivate Map<SplunkServer, Service> servicePerServer = new ConcurrentHashMap<SplunkServer, Service>(  );\n+    private static final Log LOGGER = LogFactory.getLog( SplunkServiceFactory.class );\n+\n \n \tpublic SplunkServiceFactory(SplunkServer splunkServer) {\n-\t\tthis.splunkServer = splunkServer;\n+\t\tthis.splunkServers = Arrays.asList(splunkServer);\n \t}\n \n-\t@Override\n-\tpublic synchronized Service getService() {\n-\t\tif (service != null) {\n-\t\t\treturn service;\n-\t\t}\n-\t\tfinal Map<String, Object> args = new HashMap<String, Object>();\n-\t\tif (splunkServer.getHost() != null) {\n-\t\t\targs.put(\"host\", splunkServer.getHost());\n-\t\t}\n-\t\tif (splunkServer.getPort() != 0) {\n-\t\t\targs.put(\"port\", splunkServer.getPort());\n-\t\t}\n-\t\tif (splunkServer.getScheme() != null) {\n-\t\t\targs.put(\"scheme\", splunkServer.getScheme());\n-\t\t}\n-\t\tif (splunkServer.getApp() != null) {\n-\t\t\targs.put(\"app\", splunkServer.getApp());\n-\t\t}\n-\t\tif (splunkServer.getOwner() != null) {\n-\t\t\targs.put(\"owner\", splunkServer.getOwner());\n-\t\t}\n-\n-\t\targs.put(\"username\", splunkServer.getUsername());\n-\t\targs.put(\"password\", splunkServer.getPassword());\n-\n-\t\t ExecutorService executor = Executors.newSingleThreadExecutor();\n-\n-\t\t Future<Service> future = executor.submit(new Callable<Service>(){\n-\t\t\tpublic Service call() throws Exception {\n-\t\t\t\treturn Service.connect(args);\n-\t\t\t}\n-\t\t});\n-\n-\t\t try {\n-\t\t\tif (splunkServer.getTimeout() > 0) {\n-\t\t\t\tservice = future.get(splunkServer.getTimeout(),TimeUnit.MILLISECONDS);\n-\t\t\t} else {\n-\t\t\t\tservice = future.get();\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(String.format(\"could not connect to Splunk Server @ %s:%d - %s\",\n-\t\t\t\t\tsplunkServer.getHost(),splunkServer.getPort(),e.getMessage()));\n-\t\t}\n-\t\treturn service;\n+    public SplunkServiceFactory(List<SplunkServer> splunkServers) {\n+        this.splunkServers = new ArrayList<SplunkServer>( splunkServers );\n+    }\n+\n+    @Override\n+    public synchronized Service getService() {\n+        return getServiceInternal();\n+    }\n+\n+\tprivate Service getServiceInternal() {\n+\n+        for (SplunkServer splunkServer : splunkServers)\n+        {\n+            Service service = servicePerServer.get( splunkServer );\n+            // service already exist and no test on borrow it so simply use it\n+\n+            if ( service != null )\n+            {", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/support/SplunkServiceFactory.java", "position": null, "original_position": 106, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "18d26a3c99ab6f22caef8eee2fc693566affe6c6", "user": {"login": "olamy", "id": 19728, "avatar_url": "https://avatars2.githubusercontent.com/u/19728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olamy", "html_url": "https://github.com/olamy", "followers_url": "https://api.github.com/users/olamy/followers", "following_url": "https://api.github.com/users/olamy/following{/other_user}", "gists_url": "https://api.github.com/users/olamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/olamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olamy/subscriptions", "organizations_url": "https://api.github.com/users/olamy/orgs", "repos_url": "https://api.github.com/users/olamy/repos", "events_url": "https://api.github.com/users/olamy/events{/privacy}", "received_events_url": "https://api.github.com/users/olamy/received_events", "type": "User", "site_admin": false}, "body": "Oh sorry I find the file\n", "created_at": "2014-05-19T05:26:32Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12779724", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12779724"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r12779724"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/12779724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/13279710", "pull_request_review_id": null, "id": 13279710, "diff_hunk": "@@ -64,16 +66,26 @@ protected AbstractBeanDefinition parseConsumer(Element element, ParserContext pa\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(argsBuilder, element, \"host\");\n \t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(argsBuilder, element, \"host-regex\");\n \n-\t\tBeanDefinitionBuilder serviceFactoryBuilder = BeanDefinitionBuilder.genericBeanDefinition(SplunkServiceFactory.class);\n+        BeanDefinitionBuilder dataWriterBuilder = parseDataWriter(element, parserContext);\n \n-\t\tString splunkServerBeanName = element.getAttribute(\"splunk-server-ref\");\n-\t\tif (StringUtils.hasText(splunkServerBeanName)) {\n-\t\t\tserviceFactoryBuilder.addConstructorArgReference(splunkServerBeanName);\n-\t\t}\n+\t\t// initialize splunk servers references", "path": "spring-integration-splunk/src/main/java/org/springframework/integration/splunk/config/xml/SplunkOutboundChannelAdapterParser.java", "position": null, "original_position": 23, "commit_id": "8a701c42a6e89c02d762ab6d93fa6e42668b2be8", "original_commit_id": "6dbc907c3a3016ea28481ad12dd5dbfe551f4f48", "user": {"login": "dturanski", "id": 886859, "avatar_url": "https://avatars1.githubusercontent.com/u/886859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dturanski", "html_url": "https://github.com/dturanski", "followers_url": "https://api.github.com/users/dturanski/followers", "following_url": "https://api.github.com/users/dturanski/following{/other_user}", "gists_url": "https://api.github.com/users/dturanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dturanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dturanski/subscriptions", "organizations_url": "https://api.github.com/users/dturanski/orgs", "repos_url": "https://api.github.com/users/dturanski/repos", "events_url": "https://api.github.com/users/dturanski/events{/privacy}", "received_events_url": "https://api.github.com/users/dturanski/received_events", "type": "User", "site_admin": false}, "body": "Remove unnecessary { } and correct indentation\n", "created_at": "2014-06-02T11:20:03Z", "updated_at": "2014-06-04T23:20:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r13279710", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/13279710"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/69#discussion_r13279710"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/69"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/13279710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5195473", "pull_request_review_id": null, "id": 5195473, "diff_hunk": "@@ -357,30 +361,68 @@ public SmesMessageSpecification setSourceAddressTypeOfNumberIfRequired(TypeOfNum\n \t */\n \tpublic String send() throws Exception {\n \t\tvalidate();\n-\t\tfinal String msgId;\n+\t\tString msgId = null;\n \t\tif (messagePayloadParameter == null) {\n-\t\t\tmsgId = this.smppSession.submitShortMessage(\n-\t\t\t\tthis.serviceType,\n-\t\t\t\tthis.sourceAddressTypeOfNumber,\n-\t\t\t\tthis.sourceAddressNumberingPlanIndicator,\n-\t\t\t\tthis.sourceAddress,\n-\n-\t\t\t\tthis.destinationAddressTypeOfNumber,\n-\t\t\t\tthis.destinationAddressNumberingPlanIndicator,\n-\t\t\t\tthis.destinationAddress,\n-\n-\t\t\t\tthis.esmClass,\n-\t\t\t\tthis.protocolId,\n-\t\t\t\tthis.priorityFlag,\n-\t\t\t\tthis.scheduleDeliveryTime,\n-\t\t\t\tthis.validityPeriod,\n-\t\t\t\tthis.registeredDelivery,\n-\t\t\t\tthis.replaceIfPresentFlag,\n-\t\t\t\tthis.dataCoding,\n-\t\t\t\tthis.smDefaultMsgId,\n-\t\t\t\tthis.shortMessage);\n-\t\t}\n-\t\telse {\n+\t\t\tif (this.shortMessageParts.isEmpty()) {\n+\t\t\t\tmsgId = this.smppSession.submitShortMessage(\n+\t\t\t\t\tthis.serviceType,\n+\t\t\t\t\tthis.sourceAddressTypeOfNumber,\n+\t\t\t\t\tthis.sourceAddressNumberingPlanIndicator,\n+\t\t\t\t\tthis.sourceAddress,\n+\n+\t\t\t\t\tthis.destinationAddressTypeOfNumber,\n+\t\t\t\t\tthis.destinationAddressNumberingPlanIndicator,\n+\t\t\t\t\tthis.destinationAddress,\n+\n+\t\t\t\t\tthis.esmClass,\n+\t\t\t\t\tthis.protocolId,\n+\t\t\t\t\tthis.priorityFlag,\n+\t\t\t\t\tthis.scheduleDeliveryTime,\n+\t\t\t\t\tthis.validityPeriod,\n+\t\t\t\t\tthis.registeredDelivery,\n+\t\t\t\t\tthis.replaceIfPresentFlag,\n+\t\t\t\t\tthis.dataCoding,\n+\t\t\t\t\tthis.smDefaultMsgId,\n+\t\t\t\t\tthis.shortMessage);\n+\t\t\t} else {\n+\t\t\t\tif (log.isDebugEnabled()) {\n+\t\t\t\t\tlog.debug(\"Sending message using sar_msg_ref_num, sar_segment_seqnum and sar_total_segments\");\n+\t\t\t\t}\n+\t\t\t\tOptionalParameter sarMsgRefNum = OptionalParameters.newSarMsgRefNum(RandomUtils.nextInt(0x10000));\n+\t\t\t\tOptionalParameter sarTotalSegments = OptionalParameters.newSarTotalSegments(shortMessageParts.size());\n+\t\t\t\tString charsetName = DataCodingSpecification.getCharsetName(dataCoding.toByte());\n+\t\t\t\tfor (int i = 0; i < shortMessageParts.size(); i++) {\n+\t\t\t\t\tbyte[] shortMessagePart = shortMessageParts.get(i);\n+\t\t\t\t\tmsgId = this.smppSession.submitShortMessage(\n+\t\t\t\t\t\t\tthis.serviceType,\n+\t\t\t\t\t\t\tthis.sourceAddressTypeOfNumber,\n+\t\t\t\t\t\t\tthis.sourceAddressNumberingPlanIndicator,\n+\t\t\t\t\t\t\tthis.sourceAddress,\n+\n+\t\t\t\t\t\t\tthis.destinationAddressTypeOfNumber,\n+\t\t\t\t\t\t\tthis.destinationAddressNumberingPlanIndicator,\n+\t\t\t\t\t\t\tthis.destinationAddress,\n+\n+\t\t\t\t\t\t\tthis.esmClass,\n+\t\t\t\t\t\t\tthis.protocolId,\n+\t\t\t\t\t\t\tthis.priorityFlag,\n+\t\t\t\t\t\t\tthis.scheduleDeliveryTime,\n+\t\t\t\t\t\t\tthis.validityPeriod,\n+\t\t\t\t\t\t\tthis.registeredDelivery,\n+\t\t\t\t\t\t\tthis.replaceIfPresentFlag,\n+\t\t\t\t\t\t\tthis.dataCoding,\n+\t\t\t\t\t\t\tthis.smDefaultMsgId,\n+\t\t\t\t\t\t\tshortMessagePart,\n+\t\t\t\t\t\t\tsarMsgRefNum,\n+\t\t\t\t\t\t\tOptionalParameters.newSarSegmentSeqnum(i + 1),\n+\t\t\t\t\t\t\tsarTotalSegments);\n+\t\t\t\t\tif (log.isDebugEnabled()) {\n+\t\t\t\t\t\tlog.debug(\"sent message : \" + new String(shortMessagePart, charsetName));", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": 116, "original_position": 109, "commit_id": "7b2ee7f88a79b9d83587589f47e2ac9ad48f2013", "original_commit_id": "ee1d78421391d9bd3b3dd37dead0af49864b51ca", "user": {"login": "ghillert", "id": 685363, "avatar_url": "https://avatars0.githubusercontent.com/u/685363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghillert", "html_url": "https://github.com/ghillert", "followers_url": "https://api.github.com/users/ghillert/followers", "following_url": "https://api.github.com/users/ghillert/following{/other_user}", "gists_url": "https://api.github.com/users/ghillert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghillert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghillert/subscriptions", "organizations_url": "https://api.github.com/users/ghillert/orgs", "repos_url": "https://api.github.com/users/ghillert/repos", "events_url": "https://api.github.com/users/ghillert/events{/privacy}", "received_events_url": "https://api.github.com/users/ghillert/received_events", "type": "User", "site_admin": false}, "body": "should use String.valueOf\n", "created_at": "2013-07-15T17:27:09Z", "updated_at": "2014-06-14T00:39:49Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#discussion_r5195473", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/50", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5195473"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/50#discussion_r5195473"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/50"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/5195473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/13439431", "pull_request_review_id": null, "id": 13439431, "diff_hunk": "@@ -357,30 +361,68 @@ public SmesMessageSpecification setSourceAddressTypeOfNumberIfRequired(TypeOfNum\n \t */\n \tpublic String send() throws Exception {\n \t\tvalidate();\n-\t\tfinal String msgId;\n+\t\tString msgId = null;\n \t\tif (messagePayloadParameter == null) {\n-\t\t\tmsgId = this.smppSession.submitShortMessage(\n-\t\t\t\tthis.serviceType,\n-\t\t\t\tthis.sourceAddressTypeOfNumber,\n-\t\t\t\tthis.sourceAddressNumberingPlanIndicator,\n-\t\t\t\tthis.sourceAddress,\n-\n-\t\t\t\tthis.destinationAddressTypeOfNumber,\n-\t\t\t\tthis.destinationAddressNumberingPlanIndicator,\n-\t\t\t\tthis.destinationAddress,\n-\n-\t\t\t\tthis.esmClass,\n-\t\t\t\tthis.protocolId,\n-\t\t\t\tthis.priorityFlag,\n-\t\t\t\tthis.scheduleDeliveryTime,\n-\t\t\t\tthis.validityPeriod,\n-\t\t\t\tthis.registeredDelivery,\n-\t\t\t\tthis.replaceIfPresentFlag,\n-\t\t\t\tthis.dataCoding,\n-\t\t\t\tthis.smDefaultMsgId,\n-\t\t\t\tthis.shortMessage);\n-\t\t}\n-\t\telse {\n+\t\t\tif (this.shortMessageParts.isEmpty()) {\n+\t\t\t\tmsgId = this.smppSession.submitShortMessage(\n+\t\t\t\t\tthis.serviceType,\n+\t\t\t\t\tthis.sourceAddressTypeOfNumber,\n+\t\t\t\t\tthis.sourceAddressNumberingPlanIndicator,\n+\t\t\t\t\tthis.sourceAddress,\n+\n+\t\t\t\t\tthis.destinationAddressTypeOfNumber,\n+\t\t\t\t\tthis.destinationAddressNumberingPlanIndicator,\n+\t\t\t\t\tthis.destinationAddress,\n+\n+\t\t\t\t\tthis.esmClass,\n+\t\t\t\t\tthis.protocolId,\n+\t\t\t\t\tthis.priorityFlag,\n+\t\t\t\t\tthis.scheduleDeliveryTime,\n+\t\t\t\t\tthis.validityPeriod,\n+\t\t\t\t\tthis.registeredDelivery,\n+\t\t\t\t\tthis.replaceIfPresentFlag,\n+\t\t\t\t\tthis.dataCoding,\n+\t\t\t\t\tthis.smDefaultMsgId,\n+\t\t\t\t\tthis.shortMessage);\n+\t\t\t} else {\n+\t\t\t\tif (log.isDebugEnabled()) {\n+\t\t\t\t\tlog.debug(\"Sending message using sar_msg_ref_num, sar_segment_seqnum and sar_total_segments\");\n+\t\t\t\t}\n+\t\t\t\tOptionalParameter sarMsgRefNum = OptionalParameters.newSarMsgRefNum(RandomUtils.nextInt(0x10000));\n+\t\t\t\tOptionalParameter sarTotalSegments = OptionalParameters.newSarTotalSegments(shortMessageParts.size());\n+\t\t\t\tString charsetName = DataCodingSpecification.getCharsetName(dataCoding.toByte());\n+\t\t\t\tfor (int i = 0; i < shortMessageParts.size(); i++) {\n+\t\t\t\t\tbyte[] shortMessagePart = shortMessageParts.get(i);\n+\t\t\t\t\tmsgId = this.smppSession.submitShortMessage(\n+\t\t\t\t\t\t\tthis.serviceType,\n+\t\t\t\t\t\t\tthis.sourceAddressTypeOfNumber,\n+\t\t\t\t\t\t\tthis.sourceAddressNumberingPlanIndicator,\n+\t\t\t\t\t\t\tthis.sourceAddress,\n+\n+\t\t\t\t\t\t\tthis.destinationAddressTypeOfNumber,\n+\t\t\t\t\t\t\tthis.destinationAddressNumberingPlanIndicator,\n+\t\t\t\t\t\t\tthis.destinationAddress,\n+\n+\t\t\t\t\t\t\tthis.esmClass,\n+\t\t\t\t\t\t\tthis.protocolId,\n+\t\t\t\t\t\t\tthis.priorityFlag,\n+\t\t\t\t\t\t\tthis.scheduleDeliveryTime,\n+\t\t\t\t\t\t\tthis.validityPeriod,\n+\t\t\t\t\t\t\tthis.registeredDelivery,\n+\t\t\t\t\t\t\tthis.replaceIfPresentFlag,\n+\t\t\t\t\t\t\tthis.dataCoding,\n+\t\t\t\t\t\t\tthis.smDefaultMsgId,\n+\t\t\t\t\t\t\tshortMessagePart,\n+\t\t\t\t\t\t\tsarMsgRefNum,\n+\t\t\t\t\t\t\tOptionalParameters.newSarSegmentSeqnum(i + 1),\n+\t\t\t\t\t\t\tsarTotalSegments);\n+\t\t\t\t\tif (log.isDebugEnabled()) {\n+\t\t\t\t\t\tlog.debug(\"sent message : \" + new String(shortMessagePart, charsetName));", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": 116, "original_position": 109, "commit_id": "7b2ee7f88a79b9d83587589f47e2ac9ad48f2013", "original_commit_id": "ee1d78421391d9bd3b3dd37dead0af49864b51ca", "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "body": "Since shortMessagePart is a byte[], shouldn't I keep using new String(byte[], charsetName) ?\n", "created_at": "2014-06-05T13:38:49Z", "updated_at": "2014-06-14T00:39:49Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/50#discussion_r13439431", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/50", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/13439431"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/50#discussion_r13439431"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/50"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/13439431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14126887", "pull_request_review_id": null, "id": 14126887, "diff_hunk": "@@ -352,38 +356,76 @@ public SmesMessageSpecification setSourceAddressTypeOfNumberIfRequired(TypeOfNum\n \t * <p/>\n \t * todo can we do something smart here or through an adapter to handle the situation where we have asked for a message receipt? what about if we're using a message receipt <em>and</eM> we're only a receiver or a sender connection and not a transceiver? We need gateway semantics across two unidirectional SMPPSessions, then\n \t *\n-\t * @return the messageId (required if you want to then track it or correllate it with message receipt confirmations)\n+\t * @return the messageId(s) (required if you want to then track it or correlate it with message receipt confirmations)\n \t * @throws Exception the {@link SMPPSession#submitShortMessage(String, org.jsmpp.bean.TypeOfNumber, org.jsmpp.bean.NumberingPlanIndicator, String, org.jsmpp.bean.TypeOfNumber, org.jsmpp.bean.NumberingPlanIndicator, String, org.jsmpp.bean.ESMClass, byte, byte, String, String, org.jsmpp.bean.RegisteredDelivery, byte, org.jsmpp.bean.DataCoding, byte, byte[], org.jsmpp.bean.OptionalParameter...)} method throws lots of Exceptions, including {@link java.io.IOException}\n \t */\n-\tpublic String send() throws Exception {\n+\tpublic String[] send() throws Exception {\n \t\tvalidate();\n-\t\tfinal String msgId;\n+\t\tString[] msgId = new String[this.shortMessageParts.isEmpty() ? 1 : this.shortMessageParts.size()];\n \t\tif (messagePayloadParameter == null) {\n-\t\t\tmsgId = this.smppSession.submitShortMessage(\n-\t\t\t\tthis.serviceType,\n-\t\t\t\tthis.sourceAddressTypeOfNumber,\n-\t\t\t\tthis.sourceAddressNumberingPlanIndicator,\n-\t\t\t\tthis.sourceAddress,\n-\n-\t\t\t\tthis.destinationAddressTypeOfNumber,\n-\t\t\t\tthis.destinationAddressNumberingPlanIndicator,\n-\t\t\t\tthis.destinationAddress,\n-\n-\t\t\t\tthis.esmClass,\n-\t\t\t\tthis.protocolId,\n-\t\t\t\tthis.priorityFlag,\n-\t\t\t\tthis.scheduleDeliveryTime,\n-\t\t\t\tthis.validityPeriod,\n-\t\t\t\tthis.registeredDelivery,\n-\t\t\t\tthis.replaceIfPresentFlag,\n-\t\t\t\tthis.dataCoding,\n-\t\t\t\tthis.smDefaultMsgId,\n-\t\t\t\tthis.shortMessage);\n-\t\t}\n-\t\telse {\n+\t\t\tif (this.shortMessageParts.isEmpty()) {\n+\t\t\t\tmsgId[0] = this.smppSession.submitShortMessage(\n+\t\t\t\t\tthis.serviceType,\n+\t\t\t\t\tthis.sourceAddressTypeOfNumber,\n+\t\t\t\t\tthis.sourceAddressNumberingPlanIndicator,\n+\t\t\t\t\tthis.sourceAddress,\n+\n+\t\t\t\t\tthis.destinationAddressTypeOfNumber,\n+\t\t\t\t\tthis.destinationAddressNumberingPlanIndicator,\n+\t\t\t\t\tthis.destinationAddress,\n+\n+\t\t\t\t\tthis.esmClass,\n+\t\t\t\t\tthis.protocolId,\n+\t\t\t\t\tthis.priorityFlag,\n+\t\t\t\t\tthis.scheduleDeliveryTime,\n+\t\t\t\t\tthis.validityPeriod,\n+\t\t\t\t\tthis.registeredDelivery,\n+\t\t\t\t\tthis.replaceIfPresentFlag,\n+\t\t\t\t\tthis.dataCoding,\n+\t\t\t\t\tthis.smDefaultMsgId,\n+\t\t\t\t\tthis.shortMessage);\n+\t\t\t} else {", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": null, "original_position": 83, "commit_id": "039121933ac4072bfacd890fcfe7521225c89298", "original_commit_id": "5e9e1da009eb8ff2fcd1fbb888af2eef52140d2a", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Not critical (and can be fixed on merge): new line for any similar block\n", "created_at": "2014-06-24T12:48:50Z", "updated_at": "2014-06-24T13:35:35Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14126887", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14126887"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14126887"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14126887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127129", "pull_request_review_id": null, "id": 14127129, "diff_hunk": "@@ -590,9 +632,15 @@ public SmesMessageSpecification setShortTextMessage(String s) {\n \t\t\tthis.shortMessage = UdhUtil.getMessageWithUdhInBytes(s, dataCoding.toByte());\n \t\t}\n \t\telse {\n-\t\t\tAssert.isTrue(s.length() <= this.maxLengthSmsMessages,\n-\t\t\t\t\t\"the SMS message payload must be \" + maxLengthSmsMessages + \" characters or less.\");\n-\t\t\tthis.shortMessage = DataCodingSpecification.getMessageInBytes(s, dataCoding.toByte());\n+//\t\t\tAssert.isTrue(s.length() <= this.maxLengthSmsMessages,\n+//\t\t\t\t\t\"the SMS message payload must be \" + maxLengthSmsMessages + \" characters or less.\");", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": null, "original_position": 146, "commit_id": "039121933ac4072bfacd890fcfe7521225c89298", "original_commit_id": "5e9e1da009eb8ff2fcd1fbb888af2eef52140d2a", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Since you provide a new logic for long messages to send them as `shortMessageParts` in the loop, there is just enough to remove this `Assert`, not comment\n", "created_at": "2014-06-24T12:54:10Z", "updated_at": "2014-06-24T13:35:35Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127129", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127129"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127129"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127267", "pull_request_review_id": null, "id": 14127267, "diff_hunk": "@@ -352,38 +356,76 @@ public SmesMessageSpecification setSourceAddressTypeOfNumberIfRequired(TypeOfNum\n \t * <p/>\n \t * todo can we do something smart here or through an adapter to handle the situation where we have asked for a message receipt? what about if we're using a message receipt <em>and</eM> we're only a receiver or a sender connection and not a transceiver? We need gateway semantics across two unidirectional SMPPSessions, then\n \t *\n-\t * @return the messageId (required if you want to then track it or correllate it with message receipt confirmations)\n+\t * @return the messageId(s) (required if you want to then track it or correlate it with message receipt confirmations)\n \t * @throws Exception the {@link SMPPSession#submitShortMessage(String, org.jsmpp.bean.TypeOfNumber, org.jsmpp.bean.NumberingPlanIndicator, String, org.jsmpp.bean.TypeOfNumber, org.jsmpp.bean.NumberingPlanIndicator, String, org.jsmpp.bean.ESMClass, byte, byte, String, String, org.jsmpp.bean.RegisteredDelivery, byte, org.jsmpp.bean.DataCoding, byte, byte[], org.jsmpp.bean.OptionalParameter...)} method throws lots of Exceptions, including {@link java.io.IOException}\n \t */\n-\tpublic String send() throws Exception {\n+\tpublic String[] send() throws Exception {", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": null, "original_position": 35, "commit_id": "039121933ac4072bfacd890fcfe7521225c89298", "original_commit_id": "5e9e1da009eb8ff2fcd1fbb888af2eef52140d2a", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "How about return here `List`, and even `UnmodifiableList`?\n", "created_at": "2014-06-24T12:57:03Z", "updated_at": "2014-06-24T13:35:35Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127267", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127267"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127267"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127371", "pull_request_review_id": null, "id": 14127371, "diff_hunk": "@@ -103,9 +105,9 @@ public void handleMessage(Message<?> message) throws MessagingException {\n \t\t\t\t\tSmesMessageSpecification.fromMessage(this.smppSession, message)\n \t\t\t\t\t\t\t.setTimeFormatter(this.timeFormatter));\n \n-\t\t\tString smsMessageId = specification.send();\n+\t\t\tString[] smsMessageId = specification.send();\n \t\t\tlogger.debug( \"sent message : \"+message.getPayload());\n-\t\t\tlogger.debug(\"message ID for the sent message is: \" + smsMessageId);\n+\t\t\tlogger.debug(\"message ID(s) for the sent message: \" + Arrays.toString(smsMessageId));", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/outbound/SmppOutboundChannelAdapter.java", "position": null, "original_position": 17, "commit_id": "039121933ac4072bfacd890fcfe7521225c89298", "original_commit_id": "5e9e1da009eb8ff2fcd1fbb888af2eef52140d2a", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Having the `List<String> smsMessageId` it will be redundant to wrap array to String\n", "created_at": "2014-06-24T12:59:36Z", "updated_at": "2014-06-24T13:35:35Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127371", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127371"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127371"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127499", "pull_request_review_id": null, "id": 14127499, "diff_hunk": "@@ -352,38 +356,76 @@ public SmesMessageSpecification setSourceAddressTypeOfNumberIfRequired(TypeOfNum\n \t * <p/>\n \t * todo can we do something smart here or through an adapter to handle the situation where we have asked for a message receipt? what about if we're using a message receipt <em>and</eM> we're only a receiver or a sender connection and not a transceiver? We need gateway semantics across two unidirectional SMPPSessions, then\n \t *\n-\t * @return the messageId (required if you want to then track it or correllate it with message receipt confirmations)\n+\t * @return the messageId(s) (required if you want to then track it or correlate it with message receipt confirmations)\n \t * @throws Exception the {@link SMPPSession#submitShortMessage(String, org.jsmpp.bean.TypeOfNumber, org.jsmpp.bean.NumberingPlanIndicator, String, org.jsmpp.bean.TypeOfNumber, org.jsmpp.bean.NumberingPlanIndicator, String, org.jsmpp.bean.ESMClass, byte, byte, String, String, org.jsmpp.bean.RegisteredDelivery, byte, org.jsmpp.bean.DataCoding, byte, byte[], org.jsmpp.bean.OptionalParameter...)} method throws lots of Exceptions, including {@link java.io.IOException}\n \t */\n-\tpublic String send() throws Exception {\n+\tpublic String[] send() throws Exception {", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": null, "original_position": 35, "commit_id": "039121933ac4072bfacd890fcfe7521225c89298", "original_commit_id": "5e9e1da009eb8ff2fcd1fbb888af2eef52140d2a", "user": {"login": "edgedalmacio", "id": 102205, "avatar_url": "https://avatars1.githubusercontent.com/u/102205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgedalmacio", "html_url": "https://github.com/edgedalmacio", "followers_url": "https://api.github.com/users/edgedalmacio/followers", "following_url": "https://api.github.com/users/edgedalmacio/following{/other_user}", "gists_url": "https://api.github.com/users/edgedalmacio/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgedalmacio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgedalmacio/subscriptions", "organizations_url": "https://api.github.com/users/edgedalmacio/orgs", "repos_url": "https://api.github.com/users/edgedalmacio/repos", "events_url": "https://api.github.com/users/edgedalmacio/events{/privacy}", "received_events_url": "https://api.github.com/users/edgedalmacio/received_events", "type": "User", "site_admin": false}, "body": "Sure. Can I return `Collections.unmodifiableList(Arrays.asList(msgId));`?\n", "created_at": "2014-06-24T13:02:35Z", "updated_at": "2014-06-24T13:35:35Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127499", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127499"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127499"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127721", "pull_request_review_id": null, "id": 14127721, "diff_hunk": "@@ -352,38 +356,76 @@ public SmesMessageSpecification setSourceAddressTypeOfNumberIfRequired(TypeOfNum\n \t * <p/>\n \t * todo can we do something smart here or through an adapter to handle the situation where we have asked for a message receipt? what about if we're using a message receipt <em>and</eM> we're only a receiver or a sender connection and not a transceiver? We need gateway semantics across two unidirectional SMPPSessions, then\n \t *\n-\t * @return the messageId (required if you want to then track it or correllate it with message receipt confirmations)\n+\t * @return the messageId(s) (required if you want to then track it or correlate it with message receipt confirmations)\n \t * @throws Exception the {@link SMPPSession#submitShortMessage(String, org.jsmpp.bean.TypeOfNumber, org.jsmpp.bean.NumberingPlanIndicator, String, org.jsmpp.bean.TypeOfNumber, org.jsmpp.bean.NumberingPlanIndicator, String, org.jsmpp.bean.ESMClass, byte, byte, String, String, org.jsmpp.bean.RegisteredDelivery, byte, org.jsmpp.bean.DataCoding, byte, byte[], org.jsmpp.bean.OptionalParameter...)} method throws lots of Exceptions, including {@link java.io.IOException}\n \t */\n-\tpublic String send() throws Exception {\n+\tpublic String[] send() throws Exception {", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": null, "original_position": 35, "commit_id": "039121933ac4072bfacd890fcfe7521225c89298", "original_commit_id": "5e9e1da009eb8ff2fcd1fbb888af2eef52140d2a", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Why isn't enough `new LinkedList<String>()` instead of `new String[]` ?\nI mean there there is no reason to get deal with arrays.\n", "created_at": "2014-06-24T13:08:40Z", "updated_at": "2014-06-24T13:35:35Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127721", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127721"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/81#discussion_r14127721"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/81"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/14127721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226507", "pull_request_review_id": null, "id": 15226507, "diff_hunk": "@@ -41,11 +41,11 @@ dependencies {\n \t\t\"org.apache.avro:avro:1.7.3\",\n \t\t\"org.apache.avro:avro-compiler:1.7.3\"\n \t])\n-\tcompile \"org.springframework:spring-beans:3.1.3.RELEASE\"\n-\tcompile \"org.springframework:spring-context:3.1.3.RELEASE\"\n-\tcompile \"org.springframework:spring-expression:3.1.3.RELEASE\"\n-\tcompile \"org.springframework.integration:spring-integration-stream:2.2.0.RELEASE\"\n-\tcompile(\"org.springframework.integration:spring-integration-kafka:0.5.0.BUILD-SNAPSHOT\") {\n+\tcompile \"org.springframework:spring-beans:4.0.6.RELEASE\"\n+\tcompile \"org.springframework:spring-context:4.0.6.RELEASE\"\n+\tcompile \"org.springframework:spring-expression:4.0.6.RELEASE\"", "path": "samples/kafka/build.gradle", "position": 11, "original_position": 11, "commit_id": "c6e5be5aa870d11c35469d5fca629cf0c3ed67ff", "original_commit_id": "c6e5be5aa870d11c35469d5fca629cf0c3ed67ff", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "SF deps are redundant, because they are transitive from SI\n", "created_at": "2014-07-22T13:18:13Z", "updated_at": "2014-07-22T13:18:13Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/89#discussion_r15226507", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/89", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226507"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/89#discussion_r15226507"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/89"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226546", "pull_request_review_id": null, "id": 15226546, "diff_hunk": "@@ -36,13 +36,13 @@\n \t\tfinal Map<String, Map<Integer, List<Object>>> origData =\n \t\t\t\t(Map<String, Map<Integer, List<Object>>>) message.getPayload();\n \n-\t\tfinal Map<String, List<Object>> nonPartitionedData = new HashMap<String, List<Object>>();\n+\t\tfinal Map<String, List<Object>> nonPartitionedData = new HashMap<>();", "path": "samples/kafka/src/main/java/org/springframework/integration/samples/kafka/outbound/PartitionlessTransformer.java", "position": 16, "original_position": 16, "commit_id": "c6e5be5aa870d11c35469d5fca629cf0c3ed67ff", "original_commit_id": "c6e5be5aa870d11c35469d5fca629cf0c3ed67ff", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "`Diamonds` don't work with Java 6. We still should support the latest one.\n", "created_at": "2014-07-22T13:19:06Z", "updated_at": "2014-07-22T13:19:06Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/89#discussion_r15226546", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/89", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226546"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/89#discussion_r15226546"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/89"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226591", "pull_request_review_id": null, "id": 15226591, "diff_hunk": "@@ -1 +1 @@\n-version=1.0.0.BUILD-SNAPSHOT\n+version=1.0.0.M2.BUILD-SNAPSHOT", "path": "spring-integration-kafka/gradle.properties", "position": 2, "original_position": 2, "commit_id": "c6e5be5aa870d11c35469d5fca629cf0c3ed67ff", "original_commit_id": "c6e5be5aa870d11c35469d5fca629cf0c3ed67ff", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "It really should still be `version=1.0.0.BUILD-SNAPSHOT`.\n", "created_at": "2014-07-22T13:20:07Z", "updated_at": "2014-07-22T13:20:07Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/89#discussion_r15226591", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/89", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226591"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/89#discussion_r15226591"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/89"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15226591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15272720", "pull_request_review_id": null, "id": 15272720, "diff_hunk": "@@ -504,6 +504,14 @@\n                     </xsd:appinfo>\n                 </xsd:annotation>\n             </xsd:attribute>\n+            <xsd:attribute name=\"order\">", "path": "spring-integration-kafka/src/main/resources/org/springframework/integration/config/xml/spring-integration-kafka-1.0.xsd", "position": 4, "original_position": 4, "commit_id": "80037851518fb31ed4d82b08945a39795bf35bbf", "original_commit_id": "80037851518fb31ed4d82b08945a39795bf35bbf", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "OK. That's good.\nHowever whould be better to use `<xsd:attributeGroup ref=\"integration:channelAdapterAttributes\"/>` for `auto-startup` and phase.\nThe `id` and `channel` attributes should be removed from here, respectively.\n\nPlease, make this XSD based on `schemaLocation=\"http://www.springframework.org/schema/integration/spring-integration-4.0.xsd\"`.\nNot all IDE can resolve XSD imports using `spring.schemas`\n", "created_at": "2014-07-23T06:19:31Z", "updated_at": "2014-07-23T06:19:31Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/90#discussion_r15272720", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/90", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15272720"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/90#discussion_r15272720"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/90"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15272720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15272734", "pull_request_review_id": null, "id": 15272734, "diff_hunk": "@@ -44,6 +44,7 @@ public void testOutboundAdapterConfiguration(){\n \t\tfinal KafkaProducerMessageHandler<K,V> messageHandler = appContext.getBean(KafkaProducerMessageHandler.class);\n \t\tAssert.assertNotNull(pollingConsumer);\n \t\tAssert.assertNotNull(messageHandler);\n+        Assert.assertEquals(messageHandler.getOrder(), 3);\n \t\tfinal KafkaProducerContext<K,V> producerContext = messageHandler.getKafkaProducerContext();", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaOutboundAdapterParserTests.java", "position": 5, "original_position": 5, "commit_id": "80037851518fb31ed4d82b08945a39795bf35bbf", "original_commit_id": "80037851518fb31ed4d82b08945a39795bf35bbf", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Bad code format in this class?\n", "created_at": "2014-07-23T06:19:58Z", "updated_at": "2014-07-23T06:19:58Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/90#discussion_r15272734", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/90", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15272734"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/90#discussion_r15272734"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/90"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15272734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15314463", "pull_request_review_id": null, "id": 15314463, "diff_hunk": "@@ -504,6 +504,14 @@\n                     </xsd:appinfo>\n                 </xsd:annotation>\n             </xsd:attribute>\n+            <xsd:attribute name=\"order\">", "path": "spring-integration-kafka/src/main/resources/org/springframework/integration/config/xml/spring-integration-kafka-1.0.xsd", "position": 4, "original_position": 4, "commit_id": "80037851518fb31ed4d82b08945a39795bf35bbf", "original_commit_id": "80037851518fb31ed4d82b08945a39795bf35bbf", "user": {"login": "sobychacko", "id": 827682, "avatar_url": "https://avatars3.githubusercontent.com/u/827682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobychacko", "html_url": "https://github.com/sobychacko", "followers_url": "https://api.github.com/users/sobychacko/followers", "following_url": "https://api.github.com/users/sobychacko/following{/other_user}", "gists_url": "https://api.github.com/users/sobychacko/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobychacko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobychacko/subscriptions", "organizations_url": "https://api.github.com/users/sobychacko/orgs", "repos_url": "https://api.github.com/users/sobychacko/repos", "events_url": "https://api.github.com/users/sobychacko/events{/privacy}", "received_events_url": "https://api.github.com/users/sobychacko/received_events", "type": "User", "site_admin": false}, "body": "Artem - Good points. Can we address these concerns as a separate JIRA issue? (both attributeGroup and XSD changes)\n", "created_at": "2014-07-23T20:43:42Z", "updated_at": "2014-07-23T20:43:42Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/90#discussion_r15314463", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/90", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15314463"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/90#discussion_r15314463"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/90"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15314463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15332679", "pull_request_review_id": null, "id": 15332679, "diff_hunk": "@@ -504,6 +504,14 @@\n                     </xsd:appinfo>\n                 </xsd:annotation>\n             </xsd:attribute>\n+            <xsd:attribute name=\"order\">", "path": "spring-integration-kafka/src/main/resources/org/springframework/integration/config/xml/spring-integration-kafka-1.0.xsd", "position": 4, "original_position": 4, "commit_id": "80037851518fb31ed4d82b08945a39795bf35bbf", "original_commit_id": "80037851518fb31ed4d82b08945a39795bf35bbf", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "No problem @sobychacko! I'll do it on merge\n", "created_at": "2014-07-24T07:07:06Z", "updated_at": "2014-07-24T07:07:06Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/90#discussion_r15332679", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/90", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15332679"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/90#discussion_r15332679"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/90"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/15332679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16049857", "pull_request_review_id": null, "id": 16049857, "diff_hunk": "@@ -67,6 +67,7 @@ dependencies {\n \n \ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"\n \ttestCompile \"org.springframework.integration:spring-integration-stream:$springIntegrationVersion\"\n+\ttestCompile \"org.slf4j:slf4j-simple:1.7.7\"", "path": "spring-integration-kafka/build.gradle", "position": 4, "original_position": 4, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "What is a premise to use `slf4j` ?\n", "created_at": "2014-08-11T12:30:22Z", "updated_at": "2014-08-11T12:30:22Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16049857", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16049857"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16049857"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16049857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050307", "pull_request_review_id": null, "id": 16050307, "diff_hunk": "@@ -15,7 +15,11 @@\n  */\n package org.springframework.integration.kafka.config.xml;\n \n-import java.util.*;\n+import static org.apache.commons.lang.StringUtils.stripToEmpty;", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 5, "original_position": 5, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Right, it's bad to use `*` for imports, but we follow with rule do not use method imports in production classes.\nJust minor note\n", "created_at": "2014-08-11T12:43:51Z", "updated_at": "2014-08-11T12:43:51Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050307", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050307"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050307"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050406", "pull_request_review_id": null, "id": 16050406, "diff_hunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.kafka.config.xml;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.integration.kafka.support.ConsumerMetadata;\n+import org.springframework.integration.kafka.support.KafkaConsumerContext;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+/**\n+ * @author jaroslaw.palka@symentis.pl\n+ * @since 1.0.0\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration\n+public class KafkaConsumerContextParserPropertyGroupIdTests<K, V> {\n+\n+\t@Autowired\n+\tprivate ApplicationContext appContext;\n+\n+\t@Test\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic void testConsumerContextConfiguration() {\n+\t\tfinal KafkaConsumerContext<K, V> consumerContext = appContext.getBean(\"consumerContext\", KafkaConsumerContext.class);\n+\t\tassertNotNull(consumerContext);\n+\n+\t\tfinal ConsumerMetadata<K, V> cm = appContext.getBean(\"consumerMetadata___consumerGroupId_\", ConsumerMetadata.class);", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests.java", "position": 47, "original_position": 47, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Well, I see that you treat property-placeholder and SpEL with some unexpected result.\nI'd say that would be better, if we really will support those features in these cases too.\nI don't still how, but I think we'll find the solution.\n", "created_at": "2014-08-11T12:46:53Z", "updated_at": "2014-08-11T12:46:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050406", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050406"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050406"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050420", "pull_request_review_id": null, "id": 16050420, "diff_hunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.kafka.config.xml;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.integration.kafka.support.ConsumerMetadata;\n+import org.springframework.integration.kafka.support.KafkaConsumerContext;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+/**\n+ * @author jaroslaw.palka@symentis.pl", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests.java", "position": 31, "original_position": 31, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Would be better to use your real name instead of email\n", "created_at": "2014-08-11T12:47:16Z", "updated_at": "2014-08-11T12:47:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050420", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050420"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050420"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050455", "pull_request_review_id": null, "id": 16050455, "diff_hunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:int-kafka=\"http://www.springframework.org/schema/integration/kafka\"\n+\txmlns:util=\"http://www.springframework.org/schema/util\"\n+\txmlns:context=\"http://www.springframework.org/schema/context\"\n+\txsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n+\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n+\t\thttp://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd\n+\t\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n+\n+\t<context:property-placeholder properties-ref=\"props\"/>\n+\n+\t<util:properties id=\"props\">\n+\t\t<prop key=\"consumerGroupId\">default1</prop>\n+\t</util:properties>\n+\n+    <int-kafka:zookeeper-connect id=\"zookeeperConnect\" zk-connect=\"localhost:2181\" zk-connection-timeout=\"6000\"\n+                                 zk-session-timeout=\"6000\"\n+                                 zk-sync-time=\"2000\"/>\n+\n+    <int-kafka:consumer-context id=\"consumerContext\"\n+                                zookeeper-connect=\"zookeeperConnect\">\n+        <int-kafka:consumer-configurations>\n+            <int-kafka:consumer-configuration group-id=\"${consumerGroupId}\">\n+                <int-kafka:topic id=\"test1\" streams=\"4\"/>", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests-context.xml", "position": 26, "original_position": 26, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "I'd say that `streams` attr has to support SpEL and property-placeholder as well\n", "created_at": "2014-08-11T12:48:02Z", "updated_at": "2014-08-11T12:48:02Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050455", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050455"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050455"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050498", "pull_request_review_id": null, "id": 16050498, "diff_hunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:int-kafka=\"http://www.springframework.org/schema/integration/kafka\"\n+\txmlns:util=\"http://www.springframework.org/schema/util\"\n+\txmlns:context=\"http://www.springframework.org/schema/context\"\n+\txsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n+\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n+\t\thttp://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd\n+\t\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n+\n+\t<context:property-placeholder properties-ref=\"props\"/>\n+\n+\t<util:properties id=\"props\">\n+\t\t<prop key=\"consumerGroupId\">default1</prop>\n+\t</util:properties>\n+\n+    <int-kafka:zookeeper-connect id=\"zookeeperConnect\" zk-connect=\"localhost:2181\" zk-connection-timeout=\"6000\"\n+                                 zk-session-timeout=\"6000\"\n+                                 zk-sync-time=\"2000\"/>\n+\n+    <int-kafka:consumer-context id=\"consumerContext\"\n+                                zookeeper-connect=\"zookeeperConnect\">\n+        <int-kafka:consumer-configurations>\n+            <int-kafka:consumer-configuration group-id=\"${consumerGroupId}\">\n+                <int-kafka:topic id=\"test1\" streams=\"4\"/>", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests-context.xml", "position": 26, "original_position": 26, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "We can achieve that using `ManagedMap` for the `topicStreamsMap` in the `KafkaConsumerContextParser`\n", "created_at": "2014-08-11T12:49:16Z", "updated_at": "2014-08-11T12:49:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050498", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050498"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050498"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050670", "pull_request_review_id": null, "id": 16050670, "diff_hunk": "@@ -64,71 +76,115 @@ private void parseConsumerConfigurations(final Element consumerConfigurations, f\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerConfigurationBuilder, consumerConfiguration, \"max-messages\");\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, parentElem, \"consumer-timeout\");\n \n-\t\t\tfinal Map<String, Integer> topicStreamsMap = new HashMap<String, Integer>();\n+\t\t\taddTopics(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tfinal List<Element> topicConfigurations = DomUtils.getChildElementsByTagName(consumerConfiguration, \"topic\");\n+\t\t\taddTopicFilter(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tif (topicConfigurations != null){\n-\t\t\t\tfor (final Element topicConfiguration : topicConfigurations) {\n-\t\t\t\t\tfinal String topic = topicConfiguration.getAttribute(\"id\");\n-\t\t\t\t\tfinal String streams = topicConfiguration.getAttribute(\"streams\");\n-\t\t\t\t\tfinal Integer streamsInt = Integer.valueOf(streams);\n-\t\t\t\t\ttopicStreamsMap.put(topic, streamsInt);\n-\t\t\t\t}\n-\t\t\t\tconsumerMetadataBuilder.addPropertyValue(\"topicStreamMap\", topicStreamsMap);\n-\t\t\t}\n+\t\t\t// group id suffix, replaces special characters to make sure that\n+\t\t\t// bean names will not be expanded\n+\t\t\tfinal String groupIdSuffix = stripToEmpty(consumerConfiguration.getAttribute(\"group-id\")).replaceAll(\"[#${}]\", \"_\");\n \n-\t\t\tfinal Element topicFilter = DomUtils.getChildElementByTagName(consumerConfiguration, \"topic-filter\");\n+\t\t\tfinal String consumerMetadataBeanName = registerConsumerMetadataBean(parserContext, consumerMetadataBuilder, groupIdSuffix);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 66, "original_position": 66, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Well, it's interest if they are really have to be registered as beans.\nWould't it be enough just use them as internal `BeanDefinitionHolder`s references ?\n", "created_at": "2014-08-11T12:53:30Z", "updated_at": "2014-08-11T12:53:30Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050670", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050670"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050670"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050779", "pull_request_review_id": null, "id": 16050779, "diff_hunk": "@@ -83,14 +90,16 @@ private void parseProducerConfigurations(final Element topics, final ParserConte\n \t\t\t\tproducerFactoryBuilder.addConstructorArgReference(producerPropertiesBean);\n \t\t\t}\n \n-\t\t\tfinal BeanDefinition producerfactoryBeanDefinition = producerFactoryBuilder.getBeanDefinition();\n-\t\t\tregisterBeanDefinition(new BeanDefinitionHolder(producerfactoryBeanDefinition, \"prodFactory_\" + producerConfiguration.getAttribute(\"topic\")), parserContext.getRegistry());\n+\t\t\tfinal BeanDefinition producerFactoryBeanDefinition = producerFactoryBuilder.getBeanDefinition();\n+\t\t\tfinal String producerFactoryBeanName = \"prodFactory_\" + topicSuffix;\n+\t\t\tregisterBeanDefinition(new BeanDefinitionHolder(producerFactoryBeanDefinition, producerFactoryBeanName),\n+\t\t\t\t\tparserContext.getRegistry());\n \n-\t\t\tproducerConfigurationBuilder.addConstructorArgReference(\"producerMetadata_\" + producerConfiguration.getAttribute(\"topic\"));\n-\t\t\tproducerConfigurationBuilder.addConstructorArgReference(\"prodFactory_\" + producerConfiguration.getAttribute(\"topic\"));\n+\t\t\tproducerConfigurationBuilder.addConstructorArgReference(producerMetaDataBeanName);\n+\t\t\tproducerConfigurationBuilder.addConstructorArgReference(producerFactoryBeanName);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaProducerContextParser.java", "position": 61, "original_position": 61, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Of course, the same is here.\n@sobychacko , your input, please ?\n", "created_at": "2014-08-11T12:56:00Z", "updated_at": "2014-08-11T12:56:07Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050779", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050779"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050779"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050813", "pull_request_review_id": null, "id": 16050813, "diff_hunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:int-kafka=\"http://www.springframework.org/schema/integration/kafka\"\n+\txmlns:util=\"http://www.springframework.org/schema/util\"\n+\txmlns:context=\"http://www.springframework.org/schema/context\"\n+\txsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n+\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n+\t\thttp://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd\n+\t\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests-context.xml", "position": 10, "original_position": 10, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "We prefer to use `versionless` schemaLocation to avoid issues in the future upgrade\n", "created_at": "2014-08-11T12:56:51Z", "updated_at": "2014-08-11T12:56:51Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050813", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050813"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16050813"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16050813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051577", "pull_request_review_id": null, "id": 16051577, "diff_hunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:int-kafka=\"http://www.springframework.org/schema/integration/kafka\"\n+\txmlns:util=\"http://www.springframework.org/schema/util\"\n+\txmlns:context=\"http://www.springframework.org/schema/context\"\n+\txsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n+\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n+\t\thttp://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd\n+\t\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n+\n+\t<context:property-placeholder properties-ref=\"props\"/>\n+\n+\t<util:properties id=\"props\">\n+\t\t<prop key=\"consumerGroupId\">default1</prop>\n+\t</util:properties>\n+\n+    <int-kafka:zookeeper-connect id=\"zookeeperConnect\" zk-connect=\"localhost:2181\" zk-connection-timeout=\"6000\"\n+                                 zk-session-timeout=\"6000\"\n+                                 zk-sync-time=\"2000\"/>\n+\n+    <int-kafka:consumer-context id=\"consumerContext\"\n+                                zookeeper-connect=\"zookeeperConnect\">\n+        <int-kafka:consumer-configurations>\n+            <int-kafka:consumer-configuration group-id=\"${consumerGroupId}\">\n+                <int-kafka:topic id=\"test1\" streams=\"4\"/>", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests-context.xml", "position": 26, "original_position": 26, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "markfisher", "id": 140784, "avatar_url": "https://avatars2.githubusercontent.com/u/140784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfisher", "html_url": "https://github.com/markfisher", "followers_url": "https://api.github.com/users/markfisher/followers", "following_url": "https://api.github.com/users/markfisher/following{/other_user}", "gists_url": "https://api.github.com/users/markfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfisher/subscriptions", "organizations_url": "https://api.github.com/users/markfisher/orgs", "repos_url": "https://api.github.com/users/markfisher/repos", "events_url": "https://api.github.com/users/markfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/markfisher/received_events", "type": "User", "site_admin": false}, "body": "+1\nWe actually need to expose the \"streams\" property for configuration via SpEL/placeholders for the Spring XD modules we are building with the Kafka channel adapters.\n", "created_at": "2014-08-11T13:14:40Z", "updated_at": "2014-08-11T13:14:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051577", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051577"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051577"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051748", "pull_request_review_id": null, "id": 16051748, "diff_hunk": "@@ -64,71 +76,115 @@ private void parseConsumerConfigurations(final Element consumerConfigurations, f\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerConfigurationBuilder, consumerConfiguration, \"max-messages\");\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, parentElem, \"consumer-timeout\");\n \n-\t\t\tfinal Map<String, Integer> topicStreamsMap = new HashMap<String, Integer>();\n+\t\t\taddTopics(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tfinal List<Element> topicConfigurations = DomUtils.getChildElementsByTagName(consumerConfiguration, \"topic\");\n+\t\t\taddTopicFilter(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tif (topicConfigurations != null){\n-\t\t\t\tfor (final Element topicConfiguration : topicConfigurations) {\n-\t\t\t\t\tfinal String topic = topicConfiguration.getAttribute(\"id\");\n-\t\t\t\t\tfinal String streams = topicConfiguration.getAttribute(\"streams\");\n-\t\t\t\t\tfinal Integer streamsInt = Integer.valueOf(streams);\n-\t\t\t\t\ttopicStreamsMap.put(topic, streamsInt);\n-\t\t\t\t}\n-\t\t\t\tconsumerMetadataBuilder.addPropertyValue(\"topicStreamMap\", topicStreamsMap);\n-\t\t\t}\n+\t\t\t// group id suffix, replaces special characters to make sure that\n+\t\t\t// bean names will not be expanded\n+\t\t\tfinal String groupIdSuffix = stripToEmpty(consumerConfiguration.getAttribute(\"group-id\")).replaceAll(\"[#${}]\", \"_\");\n \n-\t\t\tfinal Element topicFilter = DomUtils.getChildElementByTagName(consumerConfiguration, \"topic-filter\");\n+\t\t\tfinal String consumerMetadataBeanName = registerConsumerMetadataBean(parserContext, consumerMetadataBuilder, groupIdSuffix);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 66, "original_position": 66, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "body": "Yes and yes, we shouldn't register these things as beans, I just found that this causes another issue, when you have more than one consumer context defined + more then one input channel adapter, mainly because these beans being registered, and following code in KafkaConsumerContext:\n\n``` java\n    public void setBeanFactory(final BeanFactory beanFactory) throws BeansException {\n        consumerConfigurations = (Map<String, ConsumerConfiguration<K,V>>)\n                (Object) ((ListableBeanFactory) beanFactory).getBeansOfType(ConsumerConfiguration.class);\n    }\n```\n\nOnce you have more than consumer context and input channel adapter, you end up with following exception:\n\n> java.lang.IllegalStateException: Iterator is in failed state\n\nShould I open separate issue to handle this case? I have some ideas how to fix it.\n", "created_at": "2014-08-11T13:18:09Z", "updated_at": "2014-08-11T13:18:09Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051748", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051748"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051748"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051783", "pull_request_review_id": null, "id": 16051783, "diff_hunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:int-kafka=\"http://www.springframework.org/schema/integration/kafka\"\n+\txmlns:util=\"http://www.springframework.org/schema/util\"\n+\txmlns:context=\"http://www.springframework.org/schema/context\"\n+\txsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n+\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n+\t\thttp://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd\n+\t\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests-context.xml", "position": 10, "original_position": 10, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "body": "Sure, will clean it in all test contexts.\n", "created_at": "2014-08-11T13:18:51Z", "updated_at": "2014-08-11T13:18:51Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051783", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051783"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051783"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051839", "pull_request_review_id": null, "id": 16051839, "diff_hunk": "@@ -64,71 +76,115 @@ private void parseConsumerConfigurations(final Element consumerConfigurations, f\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerConfigurationBuilder, consumerConfiguration, \"max-messages\");\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, parentElem, \"consumer-timeout\");\n \n-\t\t\tfinal Map<String, Integer> topicStreamsMap = new HashMap<String, Integer>();\n+\t\t\taddTopics(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tfinal List<Element> topicConfigurations = DomUtils.getChildElementsByTagName(consumerConfiguration, \"topic\");\n+\t\t\taddTopicFilter(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tif (topicConfigurations != null){\n-\t\t\t\tfor (final Element topicConfiguration : topicConfigurations) {\n-\t\t\t\t\tfinal String topic = topicConfiguration.getAttribute(\"id\");\n-\t\t\t\t\tfinal String streams = topicConfiguration.getAttribute(\"streams\");\n-\t\t\t\t\tfinal Integer streamsInt = Integer.valueOf(streams);\n-\t\t\t\t\ttopicStreamsMap.put(topic, streamsInt);\n-\t\t\t\t}\n-\t\t\t\tconsumerMetadataBuilder.addPropertyValue(\"topicStreamMap\", topicStreamsMap);\n-\t\t\t}\n+\t\t\t// group id suffix, replaces special characters to make sure that\n+\t\t\t// bean names will not be expanded\n+\t\t\tfinal String groupIdSuffix = stripToEmpty(consumerConfiguration.getAttribute(\"group-id\")).replaceAll(\"[#${}]\", \"_\");\n \n-\t\t\tfinal Element topicFilter = DomUtils.getChildElementByTagName(consumerConfiguration, \"topic-filter\");\n+\t\t\tfinal String consumerMetadataBeanName = registerConsumerMetadataBean(parserContext, consumerMetadataBuilder, groupIdSuffix);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 66, "original_position": 66, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "body": "From initial investigation looks like concurrency issue + thing that beans are registered, making them 'private', should help\n", "created_at": "2014-08-11T13:19:53Z", "updated_at": "2014-08-11T13:19:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051839", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051839"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051839"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051867", "pull_request_review_id": null, "id": 16051867, "diff_hunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:int-kafka=\"http://www.springframework.org/schema/integration/kafka\"\n+\txmlns:util=\"http://www.springframework.org/schema/util\"\n+\txmlns:context=\"http://www.springframework.org/schema/context\"\n+\txsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n+\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n+\t\thttp://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd\n+\t\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n+\n+\t<context:property-placeholder properties-ref=\"props\"/>\n+\n+\t<util:properties id=\"props\">\n+\t\t<prop key=\"consumerGroupId\">default1</prop>\n+\t</util:properties>\n+\n+    <int-kafka:zookeeper-connect id=\"zookeeperConnect\" zk-connect=\"localhost:2181\" zk-connection-timeout=\"6000\"\n+                                 zk-session-timeout=\"6000\"\n+                                 zk-sync-time=\"2000\"/>\n+\n+    <int-kafka:consumer-context id=\"consumerContext\"\n+                                zookeeper-connect=\"zookeeperConnect\">\n+        <int-kafka:consumer-configurations>\n+            <int-kafka:consumer-configuration group-id=\"${consumerGroupId}\">\n+                <int-kafka:topic id=\"test1\" streams=\"4\"/>", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests-context.xml", "position": 26, "original_position": 26, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "body": "Thanks for suggestions, will take a closer look at ManagedMap\n", "created_at": "2014-08-11T13:20:17Z", "updated_at": "2014-08-11T13:20:17Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051867", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051867"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051867"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051873", "pull_request_review_id": null, "id": 16051873, "diff_hunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2002-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.kafka.config.xml;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.integration.kafka.support.ConsumerMetadata;\n+import org.springframework.integration.kafka.support.KafkaConsumerContext;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+/**\n+ * @author jaroslaw.palka@symentis.pl", "path": "spring-integration-kafka/src/test/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParserPropertyGroupIdTests.java", "position": 31, "original_position": 31, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "body": "Ok, will fix it\n", "created_at": "2014-08-11T13:20:31Z", "updated_at": "2014-08-11T13:20:31Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051873", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051873"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051873"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051932", "pull_request_review_id": null, "id": 16051932, "diff_hunk": "@@ -15,7 +15,11 @@\n  */\n package org.springframework.integration.kafka.config.xml;\n \n-import java.util.*;\n+import static org.apache.commons.lang.StringUtils.stripToEmpty;", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 5, "original_position": 5, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "body": "Ok, will make changes at replace static imports,\n", "created_at": "2014-08-11T13:21:40Z", "updated_at": "2014-08-11T13:21:40Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051932", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051932"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16051932"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16051932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16052423", "pull_request_review_id": null, "id": 16052423, "diff_hunk": "@@ -64,71 +76,115 @@ private void parseConsumerConfigurations(final Element consumerConfigurations, f\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerConfigurationBuilder, consumerConfiguration, \"max-messages\");\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, parentElem, \"consumer-timeout\");\n \n-\t\t\tfinal Map<String, Integer> topicStreamsMap = new HashMap<String, Integer>();\n+\t\t\taddTopics(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tfinal List<Element> topicConfigurations = DomUtils.getChildElementsByTagName(consumerConfiguration, \"topic\");\n+\t\t\taddTopicFilter(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tif (topicConfigurations != null){\n-\t\t\t\tfor (final Element topicConfiguration : topicConfigurations) {\n-\t\t\t\t\tfinal String topic = topicConfiguration.getAttribute(\"id\");\n-\t\t\t\t\tfinal String streams = topicConfiguration.getAttribute(\"streams\");\n-\t\t\t\t\tfinal Integer streamsInt = Integer.valueOf(streams);\n-\t\t\t\t\ttopicStreamsMap.put(topic, streamsInt);\n-\t\t\t\t}\n-\t\t\t\tconsumerMetadataBuilder.addPropertyValue(\"topicStreamMap\", topicStreamsMap);\n-\t\t\t}\n+\t\t\t// group id suffix, replaces special characters to make sure that\n+\t\t\t// bean names will not be expanded\n+\t\t\tfinal String groupIdSuffix = stripToEmpty(consumerConfiguration.getAttribute(\"group-id\")).replaceAll(\"[#${}]\", \"_\");\n \n-\t\t\tfinal Element topicFilter = DomUtils.getChildElementByTagName(consumerConfiguration, \"topic-filter\");\n+\t\t\tfinal String consumerMetadataBeanName = registerConsumerMetadataBean(parserContext, consumerMetadataBuilder, groupIdSuffix);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 66, "original_position": 66, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Well, the code in the `KafkaConsumerContext.setBeanFactory` is really bad. We have to do that from `getConsumerConfigurations()` on demand.\nNew JIRA issue, please\n", "created_at": "2014-08-11T13:30:37Z", "updated_at": "2014-08-11T13:30:37Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16052423", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16052423"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16052423"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16052423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16057495", "pull_request_review_id": null, "id": 16057495, "diff_hunk": "@@ -64,71 +76,115 @@ private void parseConsumerConfigurations(final Element consumerConfigurations, f\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerConfigurationBuilder, consumerConfiguration, \"max-messages\");\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, parentElem, \"consumer-timeout\");\n \n-\t\t\tfinal Map<String, Integer> topicStreamsMap = new HashMap<String, Integer>();\n+\t\t\taddTopics(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tfinal List<Element> topicConfigurations = DomUtils.getChildElementsByTagName(consumerConfiguration, \"topic\");\n+\t\t\taddTopicFilter(consumerConfiguration, consumerMetadataBuilder);\n \n-\t\t\tif (topicConfigurations != null){\n-\t\t\t\tfor (final Element topicConfiguration : topicConfigurations) {\n-\t\t\t\t\tfinal String topic = topicConfiguration.getAttribute(\"id\");\n-\t\t\t\t\tfinal String streams = topicConfiguration.getAttribute(\"streams\");\n-\t\t\t\t\tfinal Integer streamsInt = Integer.valueOf(streams);\n-\t\t\t\t\ttopicStreamsMap.put(topic, streamsInt);\n-\t\t\t\t}\n-\t\t\t\tconsumerMetadataBuilder.addPropertyValue(\"topicStreamMap\", topicStreamsMap);\n-\t\t\t}\n+\t\t\t// group id suffix, replaces special characters to make sure that\n+\t\t\t// bean names will not be expanded\n+\t\t\tfinal String groupIdSuffix = stripToEmpty(consumerConfiguration.getAttribute(\"group-id\")).replaceAll(\"[#${}]\", \"_\");\n \n-\t\t\tfinal Element topicFilter = DomUtils.getChildElementByTagName(consumerConfiguration, \"topic-filter\");\n+\t\t\tfinal String consumerMetadataBeanName = registerConsumerMetadataBean(parserContext, consumerMetadataBuilder, groupIdSuffix);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 66, "original_position": 66, "commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "original_commit_id": "3d88c9e6295e13f2d3dc5d2a77b4d6846ace6328", "user": {"login": "kcrimson", "id": 1294979, "avatar_url": "https://avatars1.githubusercontent.com/u/1294979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcrimson", "html_url": "https://github.com/kcrimson", "followers_url": "https://api.github.com/users/kcrimson/followers", "following_url": "https://api.github.com/users/kcrimson/following{/other_user}", "gists_url": "https://api.github.com/users/kcrimson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcrimson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcrimson/subscriptions", "organizations_url": "https://api.github.com/users/kcrimson/orgs", "repos_url": "https://api.github.com/users/kcrimson/repos", "events_url": "https://api.github.com/users/kcrimson/events{/privacy}", "received_events_url": "https://api.github.com/users/kcrimson/received_events", "type": "User", "site_admin": false}, "body": "New issue opened https://jira.spring.io/browse/INTEXT-112,\n", "created_at": "2014-08-11T14:57:00Z", "updated_at": "2014-08-11T14:57:00Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16057495", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16057495"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/91#discussion_r16057495"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16057495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16186889", "pull_request_review_id": null, "id": 16186889, "diff_hunk": "@@ -14,7 +14,7 @@ apply plugin: 'idea'\n group = 'org.springframework.integration'\n \n repositories {\n-\tmaven { url 'http://repo.springsource.org/libs-milestone' }\n+\tmaven { url 'http://repo.springsource.org/libs-release' }", "path": "spring-integration-aws/build.gradle", "position": null, "original_position": 5, "commit_id": "7ec44ea629f2af1b17faf6aab0916c6cfda781cc", "original_commit_id": "426b48bec53ed3cac872f4708c2611b0745c24f3", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "No, `milestone` is OK: it includes `release` as well. The `snapshot` is bad.\nBut we can rely on some Milestone or RC for some project someday.\nSo, the repo should be:\n\n```\nmaven { url 'http://repo.spring.io/libs-milestone' }\n```\n\nBTW, would be better to upgrade to Gradle `1.12` - `1.6` is enough old...\n", "created_at": "2014-08-13T16:25:48Z", "updated_at": "2014-08-13T17:45:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16186889", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16186889"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16186889"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16186889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16187019", "pull_request_review_id": null, "id": 16187019, "diff_hunk": "@@ -64,20 +66,20 @@ dependencies {\n \tcompile \"org.codehaus.jackson:jackson-core-asl:$jacksonVersion\"\n \tcompile \"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\"\n \tcompile \"org.apache.httpcomponents:httpclient:$apacheHttpclientVersion\"\n-\tcompile \"org.apache.httpcomponents:httpcore:$apacheHttpclientVersion\"\n+\tcompile \"org.apache.httpcomponents:httpcore:$apacheHttpCoreVersion\"\n \n \t//Amazon SES Support\n \tcompile (\"org.springframework.integration:spring-integration-mail:$springIntegrationVersion\", optional)\n-\tcompile (\"javax.mail:mail:$javaMailVersion\", optional)\n+\tcompile (\"javax.mail:javax.mail-api:$javaMailVersion\", optional)\n \n \ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"", "path": "spring-integration-aws/build.gradle", "position": 40, "original_position": 49, "commit_id": "7ec44ea629f2af1b17faf6aab0916c6cfda781cc", "original_commit_id": "426b48bec53ed3cac872f4708c2611b0745c24f3", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "This dependency is enough: all other are transitive. \nHence we don't need support here several dependencies and their version: just relying on SI trnsitives!\n", "created_at": "2014-08-13T16:28:04Z", "updated_at": "2014-08-13T17:45:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16187019", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16187019"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16187019"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16187019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16187063", "pull_request_review_id": null, "id": 16187063, "diff_hunk": "@@ -64,20 +66,20 @@ dependencies {\n \tcompile \"org.codehaus.jackson:jackson-core-asl:$jacksonVersion\"\n \tcompile \"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\"", "path": "spring-integration-aws/build.gradle", "position": 30, "original_position": 39, "commit_id": "7ec44ea629f2af1b17faf6aab0916c6cfda781cc", "original_commit_id": "426b48bec53ed3cac872f4708c2611b0745c24f3", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Actually Jackson 1.x is deprecated. Can we upgrade to Jacskon 2 here ?\n", "created_at": "2014-08-13T16:29:00Z", "updated_at": "2014-08-13T17:45:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16187063", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16187063"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16187063"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16187063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16190829", "pull_request_review_id": null, "id": 16190829, "diff_hunk": "@@ -64,20 +66,20 @@ dependencies {\n \tcompile \"org.codehaus.jackson:jackson-core-asl:$jacksonVersion\"\n \tcompile \"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\"\n \tcompile \"org.apache.httpcomponents:httpclient:$apacheHttpclientVersion\"\n-\tcompile \"org.apache.httpcomponents:httpcore:$apacheHttpclientVersion\"\n+\tcompile \"org.apache.httpcomponents:httpcore:$apacheHttpCoreVersion\"\n \n \t//Amazon SES Support\n \tcompile (\"org.springframework.integration:spring-integration-mail:$springIntegrationVersion\", optional)\n-\tcompile (\"javax.mail:mail:$javaMailVersion\", optional)\n+\tcompile (\"javax.mail:javax.mail-api:$javaMailVersion\", optional)\n \n \ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"", "path": "spring-integration-aws/build.gradle", "position": 40, "original_position": 49, "commit_id": "7ec44ea629f2af1b17faf6aab0916c6cfda781cc", "original_commit_id": "426b48bec53ed3cac872f4708c2611b0745c24f3", "user": {"login": "robharrop", "id": 64684, "avatar_url": "https://avatars1.githubusercontent.com/u/64684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robharrop", "html_url": "https://github.com/robharrop", "followers_url": "https://api.github.com/users/robharrop/followers", "following_url": "https://api.github.com/users/robharrop/following{/other_user}", "gists_url": "https://api.github.com/users/robharrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/robharrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robharrop/subscriptions", "organizations_url": "https://api.github.com/users/robharrop/orgs", "repos_url": "https://api.github.com/users/robharrop/repos", "events_url": "https://api.github.com/users/robharrop/events{/privacy}", "received_events_url": "https://api.github.com/users/robharrop/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure what you mean by this. We can't remove that dependency since the code doesn't compile. The dependency as declared does not exist in the defined repos, it is `javax.mail-api` rather than `mail`, at least as far as I can tell from my tests.\n", "created_at": "2014-08-13T17:29:28Z", "updated_at": "2014-08-13T17:45:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16190829", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16190829"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16190829"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16190829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16190883", "pull_request_review_id": null, "id": 16190883, "diff_hunk": "@@ -64,20 +66,20 @@ dependencies {\n \tcompile \"org.codehaus.jackson:jackson-core-asl:$jacksonVersion\"\n \tcompile \"org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion\"", "path": "spring-integration-aws/build.gradle", "position": 30, "original_position": 39, "commit_id": "7ec44ea629f2af1b17faf6aab0916c6cfda781cc", "original_commit_id": "426b48bec53ed3cac872f4708c2611b0745c24f3", "user": {"login": "robharrop", "id": 64684, "avatar_url": "https://avatars1.githubusercontent.com/u/64684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robharrop", "html_url": "https://github.com/robharrop", "followers_url": "https://api.github.com/users/robharrop/followers", "following_url": "https://api.github.com/users/robharrop/following{/other_user}", "gists_url": "https://api.github.com/users/robharrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/robharrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robharrop/subscriptions", "organizations_url": "https://api.github.com/users/robharrop/orgs", "repos_url": "https://api.github.com/users/robharrop/repos", "events_url": "https://api.github.com/users/robharrop/events{/privacy}", "received_events_url": "https://api.github.com/users/robharrop/received_events", "type": "User", "site_admin": false}, "body": "Would you be amenable to me opening another PR for this? I think that would be more in keeping with the spirit of this one?\n", "created_at": "2014-08-13T17:30:17Z", "updated_at": "2014-08-13T17:45:33Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16190883", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16190883"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/95#discussion_r16190883"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/95"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16190883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16406461", "pull_request_review_id": null, "id": 16406461, "diff_hunk": "@@ -51,84 +60,96 @@ protected void doParse(final Element element, final ParserContext parserContext,\n \n \tprivate void parseConsumerConfigurations(final Element consumerConfigurations, final ParserContext parserContext,\n \t\t\t\t\t\t\t\t\t\t\t final BeanDefinitionBuilder builder, final Element parentElem) {\n+\t\tList<Element> elements = DomUtils.getChildElementsByTagName(consumerConfigurations, \"consumer-configuration\");\n+\t\tboolean multiConfig = (elements.size() > 0 && elements.size() != 1);\n \t\tfor (final Element consumerConfiguration : DomUtils.getChildElementsByTagName(consumerConfigurations, \"consumer-configuration\")) {\n-\t\t\tfinal BeanDefinitionBuilder consumerConfigurationBuilder = BeanDefinitionBuilder.genericBeanDefinition(ConsumerConfiguration.class);\n-\t\t\tfinal BeanDefinitionBuilder consumerMetadataBuilder = BeanDefinitionBuilder.genericBeanDefinition(ConsumerMetadata.class);\n-\n-\t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"group-id\");\n-\n-\t\t\tIntegrationNamespaceUtils.setReferenceIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"value-decoder\");\n-\t\t\tIntegrationNamespaceUtils.setReferenceIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"key-decoder\");\n-\t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"key-class-type\");\n-\t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"value-class-type\");\n-\t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerConfigurationBuilder, consumerConfiguration, \"max-messages\");\n-\t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, parentElem, \"consumer-timeout\");\n-\n-\t\t\tfinal Map<String, Integer> topicStreamsMap = new HashMap<String, Integer>();\n-\n-\t\t\tfinal List<Element> topicConfigurations = DomUtils.getChildElementsByTagName(consumerConfiguration, \"topic\");\n-\n-\t\t\tif (topicConfigurations != null){\n-\t\t\t\tfor (final Element topicConfiguration : topicConfigurations) {\n-\t\t\t\t\tfinal String topic = topicConfiguration.getAttribute(\"id\");\n-\t\t\t\t\tfinal String streams = topicConfiguration.getAttribute(\"streams\");\n-\t\t\t\t\tfinal Integer streamsInt = Integer.valueOf(streams);\n-\t\t\t\t\ttopicStreamsMap.put(topic, streamsInt);\n-\t\t\t\t}\n-\t\t\t\tconsumerMetadataBuilder.addPropertyValue(\"topicStreamMap\", topicStreamsMap);\n-\t\t\t}\n+\t\t\tbuildConsumerMetadata(builder, consumerConfiguration, parserContext, parentElem, multiConfig);\n+\t\t}\n+\t}\n \n-\t\t\tfinal Element topicFilter = DomUtils.getChildElementByTagName(consumerConfiguration, \"topic-filter\");\n+\tprivate void buildConsumerMetadata(final BeanDefinitionBuilder builder, Element consumerConfiguration, final ParserContext parserContext, Element parentElem, boolean multiConfig) {\n+\t\tfinal BeanDefinitionBuilder consumerConfigurationBuilder = BeanDefinitionBuilder.genericBeanDefinition(ConsumerConfiguration.class);\n+\t\tfinal String groupId = consumerConfiguration.getAttribute(\"group-id\");\n+\t\tfinal String consumerMetadataBeanName = (multiConfig) ? \"consumerMetadata_\" + groupId : \"consumerMetadata\";\n+\t\tfinal String consumerConfigFactoryBeanName = (multiConfig) ? \"consumerConfigFactory_\" + groupId : \"consumerConfigFactory\";\n+\t\tfinal String consumerConnectionProviderBeanName = (multiConfig) ? \"consumerConnectionProvider_\" + groupId : \"consumerConnectionProvider\";\n+\t\tfinal String messageLeftOverBeanName = (multiConfig) ? \"messageLeftOver_\" + groupId : \"messageLeftOver\";\n+\t\tfinal String consumerConfigurationBeanName = (multiConfig) ? \"consumerConfiguration_\" + consumerConfiguration.getAttribute(\"group-id\") : \"consumerConfiguration\";\n \n-\t\t\tif (topicFilter != null){\n-\t\t\t\tfinal TopicFilterConfiguration topicFilterConfiguration = new TopicFilterConfiguration(topicFilter.getAttribute(\"pattern\"),Integer.valueOf(topicFilter.getAttribute(\"streams\")), Boolean.valueOf(topicFilter.getAttribute(\"exclude\")));\n-\t\t\t\tconsumerMetadataBuilder.addPropertyValue(\"topicFilterConfiguration\", topicFilterConfiguration);\n-\t\t\t}\n+\t\tfinal BeanDefinitionBuilder consumerMetadataBuilder = BeanDefinitionBuilder.genericBeanDefinition(ConsumerMetadata.class);\n \n-\t\t\tfinal BeanDefinition consumerMetadataBeanDef = consumerMetadataBuilder.getBeanDefinition();\n-\t\t\tregisterBeanDefinition(new BeanDefinitionHolder(consumerMetadataBeanDef, \"consumerMetadata_\" + consumerConfiguration.getAttribute(\"group-id\")),\n-\t\t\t\t\tparserContext.getRegistry());\n+\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"group-id\");\n \n-\t\t\tfinal String zookeeperConnectBean = parentElem.getAttribute(\"zookeeper-connect\");\n-\t\t\tIntegrationNamespaceUtils.setReferenceIfAttributeDefined(builder, parentElem, zookeeperConnectBean);\n+\t\tIntegrationNamespaceUtils.setReferenceIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"value-decoder\");\n+\t\tIntegrationNamespaceUtils.setReferenceIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"key-decoder\");\n+\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"key-class-type\");\n+\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, consumerConfiguration, \"value-class-type\");\n+\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerConfigurationBuilder, consumerConfiguration, \"max-messages\");\n+\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, parentElem, \"consumer-timeout\");\n \n-\t\t\tfinal String consumerPropertiesBean = parentElem.getAttribute(\"consumer-properties\");\n+\t\tfinal Map<String, String> topicStreamsMap = new HashMap<String, String>();", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 101, "original_position": 101, "commit_id": "8d9b4c9d920a52dabac4d16cb05cc55bd8275f9d", "original_commit_id": "8d9b4c9d920a52dabac4d16cb05cc55bd8275f9d", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Does `PP` work with simple `HashMap`, rather than `ManagedMap` ?\n", "created_at": "2014-08-19T10:19:20Z", "updated_at": "2014-08-19T10:19:20Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/98#discussion_r16406461", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/98", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16406461"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/98#discussion_r16406461"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/98"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16406461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16435906", "pull_request_review_id": null, "id": 16435906, "diff_hunk": "@@ -75,7 +76,7 @@ private void parseConsumerConfigurations(final Element consumerConfigurations, f\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerConfigurationBuilder, consumerConfiguration, \"max-messages\");\n \t\t\tIntegrationNamespaceUtils.setValueIfAttributeDefined(consumerMetadataBuilder, parentElem, \"consumer-timeout\");\n \n-\t\t\tfinal Map<String, Integer> topicStreamsMap = new HashMap<String, Integer>();\n+\t\t\tfinal Map<String, String> topicStreamsMap = new HashMap<String, String>();", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/config/xml/KafkaConsumerContextParser.java", "position": 43, "original_position": 31, "commit_id": "b0dd34bb9d4b0d0eacb7c49469b9cd2760c6e4c9", "original_commit_id": "b31c78ad8bfc55d82e7f235a7f8320a6d0d14ec7", "user": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "body": "@artembilan Using `HashMap` here works as I think it doesn't use any bean references. Do you think using ManagedMap here still makes sense?\n", "created_at": "2014-08-19T19:03:41Z", "updated_at": "2014-08-20T17:28:12Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/99#discussion_r16435906", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/99", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16435906"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/99#discussion_r16435906"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/99"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16435906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565586", "pull_request_review_id": null, "id": 16565586, "diff_hunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class JavaMailPropertiesBuilder {\n+\n+\tprivate final Properties properties = new Properties();\n+\n+\tpublic JavaMailPropertiesBuilder put(Object key, Object value) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/JavaMailPropertiesBuilder.java", "position": null, "original_position": 29, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Looks like would be better just to have a `generic` builder for the whole `Properties`, not for this tiny case.\nWDYT?\n", "created_at": "2014-08-21T20:13:08Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16565586", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565586"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16565586"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565725", "pull_request_review_id": null, "id": 16565725, "diff_hunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.test;", "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/PoorMansMailServer.java", "position": null, "original_position": 16, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Should be in the `mail` package\n", "created_at": "2014-08-21T20:15:21Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16565725", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565725"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16565725"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565870", "pull_request_review_id": null, "id": 16565870, "diff_hunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.test;\n+\n+import java.io.BufferedReader;\n+import java.io.BufferedWriter;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.OutputStreamWriter;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+import javax.net.ServerSocketFactory;\n+\n+import org.apache.sshd.common.util.Base64;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class PoorMansMailServer {\n+\n+\tpublic SmtpServer smtp(int port) {", "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/PoorMansMailServer.java", "position": null, "original_position": 40, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "??? Why isn't factory method ?\nWhat is the purpose of `PoorMansMailServer` instance ?\n", "created_at": "2014-08-21T20:17:50Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16565870", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565870"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16565870"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565891", "pull_request_review_id": null, "id": 16565891, "diff_hunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.test;\n+\n+import java.io.BufferedReader;\n+import java.io.BufferedWriter;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.OutputStreamWriter;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+import javax.net.ServerSocketFactory;\n+\n+import org.apache.sshd.common.util.Base64;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class PoorMansMailServer {\n+\n+\tpublic SmtpServer smtp(int port) {\n+\t\ttry {\n+\t\t\treturn new SmtpServer(port);\n+\t\t}\n+\t\tcatch (IOException e) {\n+\t\t\tthrow new RuntimeException(e);\n+\t\t}\n+\t}\n+\n+\tpublic class SmtpServer implements Runnable {\n+\n+\t\tprivate final ServerSocket socket;\n+\n+\t\tprivate final ExecutorService exec = Executors.newCachedThreadPool();\n+\n+\t\tprivate final List<String> messages = new ArrayList<String>();\n+\n+\t\tprivate volatile boolean listening;\n+\n+\t\tpublic SmtpServer(int port) throws IOException {\n+\t\t\tthis.socket = ServerSocketFactory.getDefault().createServerSocket(port);\n+\t\t\tthis.listening = true;\n+\t\t\texec.execute(this);\n+\t\t}\n+\n+\t\tpublic boolean isListening() {\n+\t\t\treturn listening;\n+\t\t}\n+\n+\t\tpublic List<String> getMessages() {\n+\t\t\treturn messages;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void run() {\n+\t\t\ttry {\n+\t\t\t\twhile (!socket.isClosed()) {\n+\t\t\t\t\tSocket socket = this.socket.accept();\n+\t\t\t\t\texec.execute(new SmtpHandler(socket));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tcatch (IOException e) {\n+\t\t\t\tthis.listening = false;\n+\t\t\t}\n+\t\t}\n+\n+\t\tpublic void stop() {\n+\t\t\ttry {\n+\t\t\t\tthis.socket.close();\n+\t\t\t}\n+\t\t\tcatch (IOException e) {\n+\t\t\t\te.printStackTrace();\n+\t\t\t}\n+\t\t\tthis.exec.shutdownNow();\n+\t\t}\n+\n+\t\tpublic class SmtpHandler implements Runnable {\n+\n+\t\t\tprivate final Socket socket;\n+\n+\t\t\tprivate BufferedWriter writer;\n+\n+\t\t\tpublic SmtpHandler(Socket socket) {\n+\t\t\t\tthis.socket = socket;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void run() {\n+\t\t\t\ttry {\n+\t\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(this.socket.getInputStream()));\n+\t\t\t\t\tthis.writer = new BufferedWriter(new OutputStreamWriter(this.socket.getOutputStream()));\n+\t\t\t\t\twrite(\"220 foo SMTP\");\n+\t\t\t\t\twhile (!socket.isClosed()) {\n+\t\t\t\t\t\tString line = reader.readLine();\n+//\t\t\t\t\t\tSystem.out.println(line);", "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/PoorMansMailServer.java", "position": null, "original_position": 115, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Redundant line\n", "created_at": "2014-08-21T20:18:07Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16565891", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565891"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16565891"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16565891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566263", "pull_request_review_id": null, "id": 16566263, "diff_hunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+import javax.activation.FileTypeMap;\n+\n+import org.springframework.mail.javamail.JavaMailSender;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+\n+/**\n+ * @author Gary Russell\n+ * @since 4.1\n+ *\n+ */\n+public class JavaMailSenderBuilder {\n+\n+\tprivate final JavaMailSenderImpl target = new JavaMailSenderImpl();\n+\n+\tpublic JavaMailSenderBuilder setJavaMailProperties(Properties javaMailProperties) {\n+\t\tthis.target.setJavaMailProperties(javaMailProperties);\n+\t\treturn this;\n+\t}\n+\n+\tpublic JavaMailSenderBuilder setProtocol(String protocol) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/JavaMailSenderBuilder.java", "position": null, "original_position": 39, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Since we are with `Builder` pattern (and only with JavaConfig here) they don't have to be called like `setters`\n", "created_at": "2014-08-21T20:23:23Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16566263", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566263"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16566263"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566677", "pull_request_review_id": null, "id": 16566677, "diff_hunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+import javax.activation.FileTypeMap;\n+\n+import org.springframework.mail.javamail.JavaMailSender;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+\n+/**\n+ * @author Gary Russell\n+ * @since 4.1\n+ *\n+ */\n+public class JavaMailSenderBuilder {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/JavaMailSenderBuilder.java", "position": null, "original_position": 30, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Actually I don't see reason of this Builder. It can be absorbed just with `MailSendingMessageHandlerSpec`.\nRight, I understand the case, when end-user can provide his own `JavaMailSender` impl, but can achieve that with separete `public static MailSendingMessageHandlerSpec outboundAdapter() {`.\nYou already provide one for the external `JavaMailSender` and there is need to have a new one to absorbe this builder in the `MailSendingMessageHandlerSpec`.\nWhen `outboundAdapter(JavaMailSender sender)` can return just `MailSendingMessageHandler` instance, because we don't have any other options to configure.\n", "created_at": "2014-08-21T20:29:15Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16566677", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566677"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16566677"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566988", "pull_request_review_id": null, "id": 16566988, "diff_hunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import org.springframework.mail.javamail.JavaMailSender;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class Mail {\n+\n+\tpublic static JavaMailPropertiesBuilder properties() {\n+\t\treturn new JavaMailPropertiesBuilder();\n+\t}\n+\n+\tpublic static JavaMailSenderBuilder mailsender() {\n+\t\treturn new JavaMailSenderBuilder();\n+\t}\n+\n+\tpublic static MailSendingMessageHandlerSpec outboundAdapter(JavaMailSender sender) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/Mail.java", "position": null, "original_position": 34, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Or we don't need this method at all because:\n\n```\nItegrationFlows.from(\"sendMail\")\n      .handle(new MailSendingMessageHandler(mailSender()))\n      .get();\n```\n", "created_at": "2014-08-21T20:35:08Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16566988", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566988"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16566988"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16566988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567100", "pull_request_review_id": null, "id": 16567100, "diff_hunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+import javax.activation.FileTypeMap;\n+\n+import org.springframework.mail.javamail.JavaMailSender;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+\n+/**\n+ * @author Gary Russell\n+ * @since 4.1\n+ *\n+ */\n+public class JavaMailSenderBuilder {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/JavaMailSenderBuilder.java", "position": null, "original_position": 30, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Or even better:\n\n```\npublic static MailSendingMessageHandlerSpec outboundAdapter(String host) {\n```\n\nbecause `host` is required.\n", "created_at": "2014-08-21T20:36:46Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16567100", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567100"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16567100"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567678", "pull_request_review_id": null, "id": 16567678, "diff_hunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class JavaMailPropertiesBuilder {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/JavaMailPropertiesBuilder.java", "position": null, "original_position": 25, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Is there really some set of all JavaMail Properties to produce really useful Builder with specific methods?\nLike:\n\n```\npublic class JavaMailPropertiesBuilder {\n\n     private final Properties properties = new Properties();  \n\n     public JavaMailPropertiesBuilder debug(boolean debug) {\n           this.properties.put(\"mail.debug\", \"\" + debug);\n           return this;\n     }\n     ....     \n     public Properties get() {\n           return this.properties;\n     }\n\n}\n```\n", "created_at": "2014-08-21T20:46:17Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16567678", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567678"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16567678"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567869", "pull_request_review_id": null, "id": 16567869, "diff_hunk": "@@ -78,12 +79,15 @@ dependencies {\n \t\tcompile(\"org.springframework.integration:$it:$springIntegrationVersion\", optional)\n \t}\n \tcompile (\"javax.jms:jms-api:$jmsApiVersion\", provided)\n+\tcompile (\"javax.mail:javax.mail-api:$mailVersion\", provided)\n \n \ttestCompile \"org.springframework.integration:spring-integration-test:$springIntegrationVersion\"\n \ttestCompile \"de.flapdoodle.embed:de.flapdoodle.embed.mongo:$embedMongoVersion\"\n \ttestCompile \"org.apache.ftpserver:ftpserver-core:$ftpServerVersion\"\n \ttestCompile \"org.apache.sshd:sshd-core:$apacheSshdVersion\"\n \ttestCompile \"org.springframework.boot:spring-boot-autoconfigure:$springBootVersion\"\n+\ttestCompile \"com.sun.mail:mailapi:$mailVersion\"\n+\ttestCompile \"com.sun.mail:smtp:$mailVersion\"", "path": "spring-integration-java-dsl/build.gradle", "position": 20, "original_position": 20, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "maybe `testRuntime` for both ?\n", "created_at": "2014-08-21T20:49:12Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16567869", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567869"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16567869"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567915", "pull_request_review_id": null, "id": 16567915, "diff_hunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class JavaMailPropertiesBuilder {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/JavaMailPropertiesBuilder.java", "position": null, "original_position": 25, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "24de9ff3b2ecd18b07079dae4b3bb5b1b7fdb7f2", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "I'd rather not go that far this time around - we can always improve later - I think our time is better spent on more adapters.\n", "created_at": "2014-08-21T20:49:53Z", "updated_at": "2014-08-21T21:05:53Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16567915", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567915"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16567915"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16567915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569402", "pull_request_review_id": null, "id": 16569402, "diff_hunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+import javax.activation.FileTypeMap;\n+\n+import org.springframework.integration.dsl.core.MessageHandlerSpec;\n+import org.springframework.integration.mail.MailSendingMessageHandler;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class MailSendingMessageHandlerSpec extends\n+\t\tMessageHandlerSpec<MailSendingMessageHandlerSpec, MailSendingMessageHandler> {\n+\n+\tprivate final JavaMailSenderImpl sender = new JavaMailSenderImpl();\n+\n+\tprotected MailSendingMessageHandlerSpec () {\n+\t\tthis.target = new MailSendingMessageHandler(this.sender);\n+\t}\n+\n+\tpublic MailSendingMessageHandlerSpec javaMailProperties(Properties javaMailProperties) {\n+\t\tthis.sender.setJavaMailProperties(javaMailProperties);\n+\t\treturn this;\n+\t}\n+\n+\tpublic MailSendingMessageHandlerSpec protocol(String protocol) {\n+\t\tthis.sender.setProtocol(protocol);\n+\t\treturn this;\n+\t}\n+\n+\tpublic MailSendingMessageHandlerSpec host(String host) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/MailSendingMessageHandlerSpec.java", "position": 49, "original_position": 49, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "I think we can get rid of this method and move the `host` to the ctor arg of this `Spec`.\nI always try to `publicate` only methods required for end-users\n", "created_at": "2014-08-21T21:13:38Z", "updated_at": "2014-08-21T21:13:38Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16569402", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569402"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16569402"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569698", "pull_request_review_id": null, "id": 16569698, "diff_hunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+import javax.activation.FileTypeMap;\n+\n+import org.springframework.integration.dsl.core.MessageHandlerSpec;\n+import org.springframework.integration.mail.MailSendingMessageHandler;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class MailSendingMessageHandlerSpec extends\n+\t\tMessageHandlerSpec<MailSendingMessageHandlerSpec, MailSendingMessageHandler> {\n+\n+\tprivate final JavaMailSenderImpl sender = new JavaMailSenderImpl();\n+\n+\tprotected MailSendingMessageHandlerSpec () {\n+\t\tthis.target = new MailSendingMessageHandler(this.sender);\n+\t}\n+\n+\tpublic MailSendingMessageHandlerSpec javaMailProperties(Properties javaMailProperties) {\n+\t\tthis.sender.setJavaMailProperties(javaMailProperties);\n+\t\treturn this;\n+\t}\n+\n+\tpublic MailSendingMessageHandlerSpec protocol(String protocol) {\n+\t\tthis.sender.setProtocol(protocol);\n+\t\treturn this;\n+\t}\n+\n+\tpublic MailSendingMessageHandlerSpec host(String host) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/MailSendingMessageHandlerSpec.java", "position": 49, "original_position": 49, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Makes sense; will do when I add the integration test.\n", "created_at": "2014-08-21T21:18:49Z", "updated_at": "2014-08-21T21:18:49Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16569698", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569698"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16569698"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569725", "pull_request_review_id": null, "id": 16569725, "diff_hunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import org.springframework.integration.dsl.support.PropertiesBuilder;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class Mail {\n+\n+\tpublic static PropertiesBuilder properties() {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/Mail.java", "position": 26, "original_position": 26, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Something askew is here. Maybe really `new PropertiesBuilder()` is enough for end-user code?\nAs far as it's really already isn't up to mail.\n", "created_at": "2014-08-21T21:19:23Z", "updated_at": "2014-08-21T21:19:23Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16569725", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569725"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16569725"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16569725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570168", "pull_request_review_id": null, "id": 16570168, "diff_hunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import org.springframework.integration.dsl.support.PropertiesBuilder;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class Mail {\n+\n+\tpublic static PropertiesBuilder properties() {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/Mail.java", "position": 26, "original_position": 26, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "I like the way this looks...\n\n```\n.javaMailProperties(Mail.properties()\n        .put(\"mail.debug\", \"true\")\n        .get())\n```\n\n...the user doesn't need to know it's a `PropertiesBuilder` - but I will defer to your preference if you insist.\n", "created_at": "2014-08-21T21:25:32Z", "updated_at": "2014-08-21T21:25:32Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570168", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570168"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570168"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570193", "pull_request_review_id": null, "id": 16570193, "diff_hunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.test.mail;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.endsWith;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.junit.Test;\n+\n+import org.springframework.integration.dsl.mail.Mail;\n+import org.springframework.integration.dsl.test.mail.PoorMansMailServer.SmtpServer;\n+import org.springframework.integration.mail.MailHeaders;\n+import org.springframework.integration.mail.MailSendingMessageHandler;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.integration.test.util.TestUtils;\n+import org.springframework.util.SocketUtils;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class MailTests {\n+\n+\t@Test\n+\tpublic void testOutbound() throws Exception {\n+\t\tint port = SocketUtils.findAvailableTcpPort();\n+\t\tSmtpServer server = PoorMansMailServer.smtp(port);\n+\t\tMailSendingMessageHandler handler =\n+\t\t\t\tMail.outboundAdapter(\"localhost\")\n+\t\t\t\t\t\t.port(port)\n+\t\t\t\t\t\t.username(\"user\")\n+\t\t\t\t\t\t.password(\"pw\")", "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/mail/MailTests.java", "position": 48, "original_position": 48, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "How about two overloaded version of one method?\n\n```\nMailSendingMessageHandlerSpec credentials(String user) {...}\n\nMailSendingMessageHandlerSpec credentials(String user, String password) {...}\n```\n\n?\nOr we really can use `password` without `user`?\nBTW, should we add `Assert`s for them in the `MailSendingMessageHandlerSpec` ?\n", "created_at": "2014-08-21T21:25:57Z", "updated_at": "2014-08-21T21:25:57Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570193", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570193"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570193"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570432", "pull_request_review_id": null, "id": 16570432, "diff_hunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import org.springframework.integration.dsl.support.PropertiesBuilder;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class Mail {\n+\n+\tpublic static PropertiesBuilder properties() {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/Mail.java", "position": 26, "original_position": 26, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Well if you'd prefer soaping the end-user eyes, how about this:\n\n```\n.javaMailProperties(p -> \n              p.put(\"mail.debug\", \"true\")\n               .put(\"mail.imap.socketFactory.class\", \"javax.net.ssl.SSLSocketFactory\")\n   )\n```\n\n?\n", "created_at": "2014-08-21T21:30:00Z", "updated_at": "2014-08-21T21:30:00Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570432", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570432"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570432"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570520", "pull_request_review_id": null, "id": 16570520, "diff_hunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.test.mail;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.endsWith;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.junit.Test;\n+\n+import org.springframework.integration.dsl.mail.Mail;\n+import org.springframework.integration.dsl.test.mail.PoorMansMailServer.SmtpServer;\n+import org.springframework.integration.mail.MailHeaders;\n+import org.springframework.integration.mail.MailSendingMessageHandler;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.integration.test.util.TestUtils;\n+import org.springframework.util.SocketUtils;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class MailTests {\n+\n+\t@Test\n+\tpublic void testOutbound() throws Exception {\n+\t\tint port = SocketUtils.findAvailableTcpPort();\n+\t\tSmtpServer server = PoorMansMailServer.smtp(port);\n+\t\tMailSendingMessageHandler handler =\n+\t\t\t\tMail.outboundAdapter(\"localhost\")\n+\t\t\t\t\t\t.port(port)\n+\t\t\t\t\t\t.username(\"user\")\n+\t\t\t\t\t\t.password(\"pw\")", "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/mail/MailTests.java", "position": 48, "original_position": 48, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "I don't think password without user (or user without password) is valid so one method (`credentials(...)`) should be ok\n\nWhat type of assert? It's not required if the server doesn't require it (although most do these days because of spam and bots).\n", "created_at": "2014-08-21T21:31:31Z", "updated_at": "2014-08-21T21:31:31Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570520", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570520"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570520"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570856", "pull_request_review_id": null, "id": 16570856, "diff_hunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import org.springframework.integration.dsl.support.PropertiesBuilder;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class Mail {\n+\n+\tpublic static PropertiesBuilder properties() {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/Mail.java", "position": 26, "original_position": 26, "commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "original_commit_id": "e781545a84892d293dfe6c6bb9aa4ffe8fd0bad8", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "How can that work? `Properties` is not a functional interface.\n", "created_at": "2014-08-21T21:38:10Z", "updated_at": "2014-08-21T21:38:10Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570856", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570856"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/103#discussion_r16570856"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16570856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16614630", "pull_request_review_id": null, "id": 16614630, "diff_hunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import java.util.Properties;\n+\n+import javax.mail.Authenticator;\n+import javax.mail.Session;\n+\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.dsl.core.MessageSourceSpec;\n+import org.springframework.integration.dsl.support.PropertiesBuilder;\n+import org.springframework.integration.dsl.support.PropertiesConfigurer;\n+import org.springframework.integration.mail.AbstractMailReceiver;\n+import org.springframework.integration.mail.MailReceivingMessageSource;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public abstract class MailInboundChannelAdapterSpec<S extends MailInboundChannelAdapterSpec<S, R>, R extends AbstractMailReceiver>\n+\t\textends MessageSourceSpec<S, MailReceivingMessageSource> {\n+\n+\tprotected volatile R receiver;\n+\n+\tpublic S selectorExpression(Expression selectorExpression) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/MailInboundChannelAdapterSpec.java", "position": null, "original_position": 39, "commit_id": "8fa6e8b17f1cf41daaaeb65fe37d9c52cbe7327c", "original_commit_id": "f2cedc88721ca71c4fde4eba8a54189a1e155931", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "I'd refer accept expression as `String` adn use `PARSER` from `IntegrationComponentSpec`.\nDo you have any objections ?\n", "created_at": "2014-08-22T18:51:04Z", "updated_at": "2014-08-22T22:04:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16614630", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16614630"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16614630"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16614630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16614852", "pull_request_review_id": null, "id": 16614852, "diff_hunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import org.springframework.integration.mail.ImapMailReceiver;\n+import org.springframework.integration.mail.SearchTermStrategy;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class ImapMailInboundChannelAdapterSpec extends MailInboundChannelAdapterSpec<ImapMailInboundChannelAdapterSpec, ImapMailReceiver> {\n+\n+\tpublic ImapMailInboundChannelAdapterSpec() {\n+\t\tthis.receiver = new ImapMailReceiver();\n+\t}\n+\n+\tpublic ImapMailInboundChannelAdapterSpec(String url) {\n+\t\tthis.receiver = new ImapMailReceiver(url);\n+\t}\n+\n+\tpublic ImapMailInboundChannelAdapterSpec setSearchTermStrategy(SearchTermStrategy searchTermStrategy) {\n+\t\tthis.receiver.setSearchTermStrategy(searchTermStrategy);\n+\t\treturn this;\n+\t}\n+\n+\tpublic ImapMailInboundChannelAdapterSpec setShouldMarkMessagesAsRead(Boolean shouldMarkMessagesAsRead) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/ImapMailInboundChannelAdapterSpec.java", "position": null, "original_position": 40, "commit_id": "8fa6e8b17f1cf41daaaeb65fe37d9c52cbe7327c", "original_commit_id": "f2cedc88721ca71c4fde4eba8a54189a1e155931", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "`shouldMarkMessagesAsRead` has to be primitivedo not allow to pass `null`.\nBTW `ImapMailReceiver.setShouldMarkMessagesAsRead` has to be changed as well.\nRename, please these methods to not represent them as setters.\n", "created_at": "2014-08-22T18:54:57Z", "updated_at": "2014-08-22T22:04:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16614852", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16614852"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16614852"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16614852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615161", "pull_request_review_id": null, "id": 16615161, "diff_hunk": "@@ -128,6 +156,35 @@ public IntegrationFlow sendMailFlow() {\n \t\t\t\t\t.get();\n \t\t}\n \n+\t\t@Bean\n+\t\tpublic MessageChannel pop3Channel() {\n+\t\t\treturn MessageChannels.queue().get();\n+\t\t}\n+\n+\t\t@Bean\n+\t\tpublic IntegrationFlow pop3MailFlow() {\n+\t\t\treturn IntegrationFlows.from(Mail.pop3InboundAdapter(\"localhost\", pop3Port, \"user\", \"pw\")\n+\t\t\t\t\t\t\t.javaMailProperties(p -> p.put(\"mail.debug\", \"true\")),\n+\t\t\t\t\t\te -> e.poller(Pollers.fixedDelay(60000)))\n+\t\t\t\t\t.channel(pop3Channel())\n+\t\t\t\t\t.get();\n+\t\t}\n+\n+\t\t@Bean\n+\t\tpublic MessageChannel imapChannel() {\n+\t\t\treturn MessageChannels.queue().get();\n+\t\t}\n+\n+\t\t@Bean\n+\t\tpublic IntegrationFlow imapMailFlow() {\n+\t\t\treturn IntegrationFlows.from(Mail.imapInboundAdapter(\"imap://localhost:143\")\n+\t\t\t\t\t\t\t.javaMailProperties(p -> p.put(\"mail.debug\", \"true\")),\n+\t\t\t\t\t\te -> e.autoStartup(false)\n+\t\t\t\t\t\t\t\t.poller(Pollers.fixedDelay(1000)))\n+\t\t\t\t\t.channel(pop3Channel())", "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/mail/MailTests.java", "position": null, "original_position": 150, "commit_id": "8fa6e8b17f1cf41daaaeb65fe37d9c52cbe7327c", "original_commit_id": "f2cedc88721ca71c4fde4eba8a54189a1e155931", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Fault here: has to be `imapChannel()`\n", "created_at": "2014-08-22T19:00:14Z", "updated_at": "2014-08-22T22:04:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16615161", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615161"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16615161"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615258", "pull_request_review_id": null, "id": 16615258, "diff_hunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.dsl.mail;\n+\n+import org.springframework.integration.mail.ImapMailReceiver;\n+import org.springframework.integration.mail.SearchTermStrategy;\n+\n+/**\n+ * @author Gary Russell\n+ *\n+ */\n+public class ImapMailInboundChannelAdapterSpec extends MailInboundChannelAdapterSpec<ImapMailInboundChannelAdapterSpec, ImapMailReceiver> {\n+\n+\tpublic ImapMailInboundChannelAdapterSpec() {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/mail/ImapMailInboundChannelAdapterSpec.java", "position": null, "original_position": 27, "commit_id": "8fa6e8b17f1cf41daaaeb65fe37d9c52cbe7327c", "original_commit_id": "f2cedc88721ca71c4fde4eba8a54189a1e155931", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "`Spec`s can't have `public` ctors: only access from factory methods.\n", "created_at": "2014-08-22T19:02:18Z", "updated_at": "2014-08-22T22:04:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16615258", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615258"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16615258"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615624", "pull_request_review_id": null, "id": 16615624, "diff_hunk": "@@ -160,12 +126,156 @@ else if (line.equals(\"QUIT\")) {\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tprivate void write(String str) throws IOException {\n+\t\t}\n+\n+\t}\n+\n+\tpublic static class Pop3Server extends MailServer {\n+\n+\t\tpublic Pop3Server(int port) throws IOException {\n+\t\t\tsuper(port);\n+\t\t}\n+\n+\t\t@Override\n+\t\tprotected MailHandler mailHandler(Socket socket) {\n+\t\t\treturn new Pop3Handler(socket);\n+\t\t}\n+\n+\t\tpublic class Pop3Handler extends MailHandler {\n+\n+\t\t\tpublic Pop3Handler(Socket socket) {\n+\t\t\t\tsuper(socket);\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tvoid doRun() {\n+\t\t\t\ttry {\n+\t\t\t\t\twrite(\"+OK POP3\");\n+\t\t\t\t\twhile (!socket.isClosed()) {\n+\t\t\t\t\t\tString line = reader.readLine();\n+\t\t\t\t\t\tif (\"CAPA\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t\twrite(\"USER\");\n+\t\t\t\t\t\t\twrite(\".\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"USER user\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"PASS pw\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"STAT\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK 1 3\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"NOOP\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"RETR 1\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t\twrite(\"To: foo@bar\");\n+\t\t\t\t\t\t\twrite(\"From: bar@baz\");\n+\t\t\t\t\t\t\twrite(\"Subject: Test Email\");\n+\t\t\t\t\t\t\twrite(\"\");\n+\t\t\t\t\t\t\twrite(\"foo\");\n+\t\t\t\t\t\t\twrite(\".\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"QUIT\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t\tsocket.close();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}", "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/mail/PoorMansMailServer.java", "position": 151, "original_position": 147, "commit_id": "8fa6e8b17f1cf41daaaeb65fe37d9c52cbe7327c", "original_commit_id": "f2cedc88721ca71c4fde4eba8a54189a1e155931", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Can you point me out where did you have this `embedded email sever` approach from ?\nThanks\n", "created_at": "2014-08-22T19:10:28Z", "updated_at": "2014-08-22T22:04:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16615624", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615624"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16615624"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16615624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16618079", "pull_request_review_id": null, "id": 16618079, "diff_hunk": "@@ -160,12 +126,156 @@ else if (line.equals(\"QUIT\")) {\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tprivate void write(String str) throws IOException {\n+\t\t}\n+\n+\t}\n+\n+\tpublic static class Pop3Server extends MailServer {\n+\n+\t\tpublic Pop3Server(int port) throws IOException {\n+\t\t\tsuper(port);\n+\t\t}\n+\n+\t\t@Override\n+\t\tprotected MailHandler mailHandler(Socket socket) {\n+\t\t\treturn new Pop3Handler(socket);\n+\t\t}\n+\n+\t\tpublic class Pop3Handler extends MailHandler {\n+\n+\t\t\tpublic Pop3Handler(Socket socket) {\n+\t\t\t\tsuper(socket);\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tvoid doRun() {\n+\t\t\t\ttry {\n+\t\t\t\t\twrite(\"+OK POP3\");\n+\t\t\t\t\twhile (!socket.isClosed()) {\n+\t\t\t\t\t\tString line = reader.readLine();\n+\t\t\t\t\t\tif (\"CAPA\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t\twrite(\"USER\");\n+\t\t\t\t\t\t\twrite(\".\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"USER user\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"PASS pw\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"STAT\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK 1 3\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"NOOP\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"RETR 1\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t\twrite(\"To: foo@bar\");\n+\t\t\t\t\t\t\twrite(\"From: bar@baz\");\n+\t\t\t\t\t\t\twrite(\"Subject: Test Email\");\n+\t\t\t\t\t\t\twrite(\"\");\n+\t\t\t\t\t\t\twrite(\"foo\");\n+\t\t\t\t\t\t\twrite(\".\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (\"QUIT\".equals(line)) {\n+\t\t\t\t\t\t\twrite(\"+OK\");\n+\t\t\t\t\t\t\tsocket.close();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}", "path": "spring-integration-java-dsl/src/test/java/org/springframework/integration/dsl/test/mail/PoorMansMailServer.java", "position": 151, "original_position": 147, "commit_id": "8fa6e8b17f1cf41daaaeb65fe37d9c52cbe7327c", "original_commit_id": "f2cedc88721ca71c4fde4eba8a54189a1e155931", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "I just happen to already know the protocols. IMAP 4 is a little more tricky but still possible.\n\nI haven't found a suitable embedded server - Apache James is too heavyweight for what we need for testing.\n", "created_at": "2014-08-22T19:58:18Z", "updated_at": "2014-08-22T22:04:41Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16618079", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16618079"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/104#discussion_r16618079"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/104"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16618079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16715026", "pull_request_review_id": null, "id": 16715026, "diff_hunk": "@@ -65,104 +67,118 @@ public Object postProcessAfterInitialization(Object bean, String beanName) throw\n \n \t@Override\n \tpublic Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {\n-\t\tif (bean instanceof IntegrationFlow) {\n-\t\t\tIntegrationFlow flow = (IntegrationFlow) bean;\n-\t\t\tString flowNamePrefix = beanName + \".\";\n-\t\t\tint channelNameIndex = 0;\n-\t\t\tfor (Object component : flow.getIntegrationComponents()) {\n-\t\t\t\tif (component instanceof ConsumerEndpointSpec) {\n-\t\t\t\t\tConsumerEndpointSpec<?, ?> endpointSpec = (ConsumerEndpointSpec<?, ?>) component;\n-\t\t\t\t\tMessageHandler messageHandler = endpointSpec.get().getT2();\n-\t\t\t\t\tConsumerEndpointFactoryBean endpoint = endpointSpec.get().getT1();\n-\t\t\t\t\tString id = endpointSpec.getId();\n-\n-\t\t\t\t\tCollection<?> messageHandlers = this.beanFactory.getBeansOfType(MessageHandler.class, false,\n-\t\t\t\t\t\t\tfalse).values();\n-\n-\t\t\t\t\tif (!messageHandlers.contains(messageHandler)) {\n-\t\t\t\t\t\tString handlerBeanName = generateBeanName(messageHandler);\n-\t\t\t\t\t\tString[] handlerAlias = id != null\n-\t\t\t\t\t\t\t\t? new String[] {id + IntegrationConfigUtils.HANDLER_ALIAS_SUFFIX}\n-\t\t\t\t\t\t\t\t: null;\n-\n-\t\t\t\t\t\tregisterComponent(messageHandler, handlerBeanName);\n-\t\t\t\t\t\tif (handlerAlias != null) {\n-\t\t\t\t\t\t\tfor (String alias : handlerAlias) {\n-\t\t\t\t\t\t\t\tthis.beanFactory.registerAlias(handlerBeanName, alias);\n-\t\t\t\t\t\t\t}\n+\t\tif (bean instanceof IntegrationFlowBuilder.StandardIntegrationFlow) {\n+\t\t\treturn processStandardIntegrationFlow((IntegrationFlowBuilder.StandardIntegrationFlow) bean, beanName);\n+\t\t}\n+\t\telse if (bean instanceof IntegrationFlow) {\n+\t\t\treturn processLambdaIntegrationFlow((IntegrationFlow) bean, beanName);", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/core/IntegrationFlowBeanPostProcessor.java", "position": null, "original_position": 42, "commit_id": "238c1f06b994c2f80810fa4ab5c51db199cf82a0", "original_commit_id": "d1fa82798bceaa16aa36a401134d1d4f346ff2c8", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "It might not always be a lambda - someone could implement their own concrete `flow.define()`.\n\nWe should check `bean.getClass().isAnonymousClass` if needed, but I suspect we don't need to know whether it's a lambda or not.\n", "created_at": "2014-08-26T14:08:50Z", "updated_at": "2014-08-26T15:35:25Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/107#discussion_r16715026", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/107", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16715026"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/107#discussion_r16715026"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/107"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16715026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16719057", "pull_request_review_id": null, "id": 16719057, "diff_hunk": "@@ -65,104 +67,118 @@ public Object postProcessAfterInitialization(Object bean, String beanName) throw\n \n \t@Override\n \tpublic Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {\n-\t\tif (bean instanceof IntegrationFlow) {\n-\t\t\tIntegrationFlow flow = (IntegrationFlow) bean;\n-\t\t\tString flowNamePrefix = beanName + \".\";\n-\t\t\tint channelNameIndex = 0;\n-\t\t\tfor (Object component : flow.getIntegrationComponents()) {\n-\t\t\t\tif (component instanceof ConsumerEndpointSpec) {\n-\t\t\t\t\tConsumerEndpointSpec<?, ?> endpointSpec = (ConsumerEndpointSpec<?, ?>) component;\n-\t\t\t\t\tMessageHandler messageHandler = endpointSpec.get().getT2();\n-\t\t\t\t\tConsumerEndpointFactoryBean endpoint = endpointSpec.get().getT1();\n-\t\t\t\t\tString id = endpointSpec.getId();\n-\n-\t\t\t\t\tCollection<?> messageHandlers = this.beanFactory.getBeansOfType(MessageHandler.class, false,\n-\t\t\t\t\t\t\tfalse).values();\n-\n-\t\t\t\t\tif (!messageHandlers.contains(messageHandler)) {\n-\t\t\t\t\t\tString handlerBeanName = generateBeanName(messageHandler);\n-\t\t\t\t\t\tString[] handlerAlias = id != null\n-\t\t\t\t\t\t\t\t? new String[] {id + IntegrationConfigUtils.HANDLER_ALIAS_SUFFIX}\n-\t\t\t\t\t\t\t\t: null;\n-\n-\t\t\t\t\t\tregisterComponent(messageHandler, handlerBeanName);\n-\t\t\t\t\t\tif (handlerAlias != null) {\n-\t\t\t\t\t\t\tfor (String alias : handlerAlias) {\n-\t\t\t\t\t\t\t\tthis.beanFactory.registerAlias(handlerBeanName, alias);\n-\t\t\t\t\t\t\t}\n+\t\tif (bean instanceof IntegrationFlowBuilder.StandardIntegrationFlow) {\n+\t\t\treturn processStandardIntegrationFlow((IntegrationFlowBuilder.StandardIntegrationFlow) bean, beanName);\n+\t\t}\n+\t\telse if (bean instanceof IntegrationFlow) {\n+\t\t\treturn processLambdaIntegrationFlow((IntegrationFlow) bean, beanName);", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/core/IntegrationFlowBeanPostProcessor.java", "position": null, "original_position": 42, "commit_id": "238c1f06b994c2f80810fa4ab5c51db199cf82a0", "original_commit_id": "d1fa82798bceaa16aa36a401134d1d4f346ff2c8", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Yes, it doesn't matter if it is Lambda or direct `IntegrationFlow` implementation. I have just not found the better name for the method :smile: . Your thoughts ? \n", "created_at": "2014-08-26T15:09:09Z", "updated_at": "2014-08-26T15:35:25Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/107#discussion_r16719057", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/107", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16719057"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/107#discussion_r16719057"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/107"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/16719057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/17503628", "pull_request_review_id": null, "id": 17503628, "diff_hunk": "@@ -79,7 +83,14 @@ public void setReplyTimeout(Long replyTimeout) {\n \t}\n \n \t@Override\n-\tprotected void doInit() {\n+\tprotected Object handleRequestMessage(Message<?> requestMessage) {\n+\t\tif (!this.initialized.getAndSet(true)) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/GatewayMessageHandler.java", "position": null, "original_position": 24, "commit_id": "c5efdc190e9f402a307ddad91d1b0fa0eed69dc5", "original_commit_id": "12a9e25a27ea51cd2a91199799065c12a630c43d", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "An `AtomicBoolean` won't work here - you can get an NPE on the next statement. You need a synchronized block with a double null check.\n", "created_at": "2014-09-12T21:24:59Z", "updated_at": "2014-09-13T10:05:49Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/112#discussion_r17503628", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/112", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/17503628"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/112#discussion_r17503628"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/112"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/17503628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504162", "pull_request_review_id": null, "id": 18504162, "diff_hunk": "@@ -65,13 +73,25 @@ public static IntegrationFlowBuilder from(MessageChannel messageChannel) {\n \t\treturn new IntegrationFlowBuilder().channel(messageChannel);\n \t}\n \n-\tpublic static <S extends MessageSourceSpec<S, ? extends MessageSource<?>>> IntegrationFlowBuilder\n-\tfrom(S messageSourceSpec) {\n+\tpublic static IntegrationFlowBuilder fromMessageSource(\n+\t\t\tFunction<MessageSources, MessageSourceSpec<?, ?>> messageSources) {\n+\t\treturn fromMessageSource(messageSources, null);\n+\t}\n+\n+\tpublic static IntegrationFlowBuilder fromMessageSource(", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/IntegrationFlows.java", "position": null, "original_position": 41, "commit_id": "d56e7d8d69cf677fc2464818c3297bdbde86b918", "original_commit_id": "91c1140e63dc1e41d8d8920faf292b34a5afb103", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Why do we need `fromMessageSource` rather than just `from` ?\n", "created_at": "2014-10-07T07:27:08Z", "updated_at": "2014-10-07T09:34:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18504162", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504162"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18504162"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504194", "pull_request_review_id": null, "id": 18504194, "diff_hunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.dsl;\n+\n+import java.io.File;\n+\n+import org.springframework.amqp.core.Queue;\n+import org.springframework.integration.dsl.amqp.Amqp;\n+import org.springframework.integration.dsl.amqp.AmqpInboundChannelAdapterSpec;\n+import org.springframework.integration.dsl.file.Files;\n+import org.springframework.integration.dsl.file.TailAdapterSpec;\n+import org.springframework.integration.dsl.jms.Jms;\n+import org.springframework.integration.dsl.jms.JmsMessageDrivenChannelAdapterSpec;\n+import org.springframework.integration.dsl.mail.ImapIdleChannelAdapterSpec;\n+import org.springframework.integration.dsl.mail.Mail;\n+import org.springframework.jms.listener.AbstractMessageListenerContainer;\n+\n+/**\n+ * @author Artem Bilan\n+ */\n+public class MessageProducers {\n+\n+\tpublic AmqpInboundChannelAdapterSpec\n+\tamqp(org.springframework.amqp.rabbit.connection.ConnectionFactory connectionFactory, String... queueNames) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/MessageProducers.java", "position": null, "original_position": 38, "commit_id": "d56e7d8d69cf677fc2464818c3297bdbde86b918", "original_commit_id": "91c1140e63dc1e41d8d8920faf292b34a5afb103", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "strange indentation\n", "created_at": "2014-10-07T07:27:54Z", "updated_at": "2014-10-07T09:34:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18504194", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504194"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18504194"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504828", "pull_request_review_id": null, "id": 18504828, "diff_hunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.dsl;\n+\n+import java.io.File;\n+\n+import org.springframework.amqp.core.Queue;\n+import org.springframework.integration.dsl.amqp.Amqp;\n+import org.springframework.integration.dsl.amqp.AmqpInboundChannelAdapterSpec;\n+import org.springframework.integration.dsl.file.Files;\n+import org.springframework.integration.dsl.file.TailAdapterSpec;\n+import org.springframework.integration.dsl.jms.Jms;\n+import org.springframework.integration.dsl.jms.JmsMessageDrivenChannelAdapterSpec;\n+import org.springframework.integration.dsl.mail.ImapIdleChannelAdapterSpec;\n+import org.springframework.integration.dsl.mail.Mail;\n+import org.springframework.jms.listener.AbstractMessageListenerContainer;\n+\n+/**\n+ * @author Artem Bilan\n+ */\n+public class MessageProducers {\n+\n+\tpublic AmqpInboundChannelAdapterSpec\n+\tamqp(org.springframework.amqp.rabbit.connection.ConnectionFactory connectionFactory, String... queueNames) {\n+\t\treturn Amqp.inboundAdapter(connectionFactory, queueNames);\n+\t}\n+\n+\tpublic AmqpInboundChannelAdapterSpec\n+\tamqp(org.springframework.amqp.rabbit.connection.ConnectionFactory connectionFactory, Queue... queues) {\n+\t\treturn Amqp.inboundAdapter(connectionFactory, queues);\n+\t}\n+\n+\tpublic TailAdapterSpec tail(File file) {\n+\t\treturn Files.tailAdapter(file);\n+\t}\n+\n+\tpublic ImapIdleChannelAdapterSpec imap(String url) {\n+\t\treturn Mail.imapIdleAdapter(url);\n+\t}\n+\n+\tpublic JmsMessageDrivenChannelAdapterSpec<? extends JmsMessageDrivenChannelAdapterSpec<?>> jms(\n+\t\t\tAbstractMessageListenerContainer listenerContainer) {\n+\t\treturn Jms.messageDriverChannelAdapter(listenerContainer);\n+\t}\n+\n+\tpublic JmsMessageDrivenChannelAdapterSpec<? extends JmsMessageDrivenChannelAdapterSpec<?>> jms(\n+\t\t\tjavax.jms.ConnectionFactory connectionFactory) {\n+\t\treturn Jms.messageDriverChannelAdapter(connectionFactory);\n+\t}\n+\n+\tpublic <C extends AbstractMessageListenerContainer>\n+\tJmsMessageDrivenChannelAdapterSpec<? extends JmsMessageDrivenChannelAdapterSpec<?>> jms(\n+\t\t\tjavax.jms.ConnectionFactory connectionFactory, Class<C> containerClass) {", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/MessageProducers.java", "position": null, "original_position": 67, "commit_id": "d56e7d8d69cf677fc2464818c3297bdbde86b918", "original_commit_id": "91c1140e63dc1e41d8d8920faf292b34a5afb103", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "This is more strange...\n", "created_at": "2014-10-07T07:45:43Z", "updated_at": "2014-10-07T09:34:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18504828", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504828"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18504828"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504945", "pull_request_review_id": null, "id": 18504945, "diff_hunk": "@@ -65,13 +73,25 @@ public static IntegrationFlowBuilder from(MessageChannel messageChannel) {\n \t\treturn new IntegrationFlowBuilder().channel(messageChannel);\n \t}\n \n-\tpublic static <S extends MessageSourceSpec<S, ? extends MessageSource<?>>> IntegrationFlowBuilder\n-\tfrom(S messageSourceSpec) {\n+\tpublic static IntegrationFlowBuilder fromMessageSource(\n+\t\t\tFunction<MessageSources, MessageSourceSpec<?, ?>> messageSources) {\n+\t\treturn fromMessageSource(messageSources, null);\n+\t}\n+\n+\tpublic static IntegrationFlowBuilder fromMessageSource(", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/IntegrationFlows.java", "position": null, "original_position": 41, "commit_id": "d56e7d8d69cf677fc2464818c3297bdbde86b918", "original_commit_id": "91c1140e63dc1e41d8d8920faf292b34a5afb103", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "From one side we can specify `MessageSource<?>` as Lambda. See `from(MessageSource<?> messageSource)`.\nSo, compiler doesn't know which method to use and require explicit cast.\nFrom other side we have other `from(Function<?>)` methods, which also are obscure for compiler\n", "created_at": "2014-10-07T07:48:47Z", "updated_at": "2014-10-07T09:34:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18504945", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504945"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18504945"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18504945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18505007", "pull_request_review_id": null, "id": 18505007, "diff_hunk": "@@ -65,13 +73,25 @@ public static IntegrationFlowBuilder from(MessageChannel messageChannel) {\n \t\treturn new IntegrationFlowBuilder().channel(messageChannel);\n \t}\n \n-\tpublic static <S extends MessageSourceSpec<S, ? extends MessageSource<?>>> IntegrationFlowBuilder\n-\tfrom(S messageSourceSpec) {\n+\tpublic static IntegrationFlowBuilder fromMessageSource(\n+\t\t\tFunction<MessageSources, MessageSourceSpec<?, ?>> messageSources) {\n+\t\treturn fromMessageSource(messageSources, null);\n+\t}\n+\n+\tpublic static IntegrationFlowBuilder fromMessageSource(", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/IntegrationFlows.java", "position": null, "original_position": 41, "commit_id": "d56e7d8d69cf677fc2464818c3297bdbde86b918", "original_commit_id": "91c1140e63dc1e41d8d8920faf292b34a5afb103", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Otherwise with such explicit names end-user will understand what he gets with that `Function<?>` Lambda\n", "created_at": "2014-10-07T07:50:04Z", "updated_at": "2014-10-07T09:34:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18505007", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18505007"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18505007"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18505007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18505606", "pull_request_review_id": null, "id": 18505606, "diff_hunk": "@@ -65,13 +73,25 @@ public static IntegrationFlowBuilder from(MessageChannel messageChannel) {\n \t\treturn new IntegrationFlowBuilder().channel(messageChannel);\n \t}\n \n-\tpublic static <S extends MessageSourceSpec<S, ? extends MessageSource<?>>> IntegrationFlowBuilder\n-\tfrom(S messageSourceSpec) {\n+\tpublic static IntegrationFlowBuilder fromMessageSource(\n+\t\t\tFunction<MessageSources, MessageSourceSpec<?, ?>> messageSources) {\n+\t\treturn fromMessageSource(messageSources, null);\n+\t}\n+\n+\tpublic static IntegrationFlowBuilder fromMessageSource(", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/IntegrationFlows.java", "position": null, "original_position": 41, "commit_id": "d56e7d8d69cf677fc2464818c3297bdbde86b918", "original_commit_id": "91c1140e63dc1e41d8d8920faf292b34a5afb103", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Seems like a step backwards to me; maybe I am missing something (entirely possible).\n", "created_at": "2014-10-07T08:08:17Z", "updated_at": "2014-10-07T09:34:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18505606", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18505606"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/117#discussion_r18505606"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/117"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18505606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19410992", "pull_request_review_id": null, "id": 19410992, "diff_hunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.dsl.support;\n+\n+import org.springframework.core.convert.TypeDescriptor;\n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.EvaluationException;\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.TypedValue;\n+import org.springframework.expression.common.ExpressionUtils;\n+import org.springframework.expression.spel.support.StandardEvaluationContext;\n+\n+/**\n+ * @author Artem Bilan", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/support/FunctionExpression.java", "position": null, "original_position": 28, "commit_id": "73ee45a14e1c2f65bed52c7ae21bf85c869f0fec", "original_commit_id": "f5b49a5c1ad4aef75c054659f58b64469db147b0", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Needs JavaDocs\n", "created_at": "2014-10-27T15:13:27Z", "updated_at": "2014-10-28T10:17:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/118#discussion_r19410992", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/118", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19410992"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/118#discussion_r19410992"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/118"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19410992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19412327", "pull_request_review_id": null, "id": 19412327, "diff_hunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.dsl.support;\n+\n+import org.springframework.core.convert.TypeDescriptor;\n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.EvaluationException;\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.TypedValue;\n+import org.springframework.expression.common.ExpressionUtils;\n+import org.springframework.expression.spel.support.StandardEvaluationContext;\n+\n+/**\n+ * @author Artem Bilan\n+ */\n+public class FunctionExpression<S> implements Expression {\n+\n+\tprivate final Function<S, ?> function;\n+\n+\tprivate final EvaluationContext defaultContext = new StandardEvaluationContext();\n+\n+\tprivate final EvaluationException readOnlyException;\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic FunctionExpression(Function<S, ?> function) {\n+\t\tthis.function = function;\n+\t\tthis.readOnlyException = new EvaluationException(getExpressionString(),\n+\t\t\t\t\"FunctionExpression is the 'read only' Expression implementation\");\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue() throws EvaluationException {\n+\t\treturn this.function.apply(null);\n+\t}\n+\n+\t@Override\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic Object getValue(Object rootObject) throws EvaluationException {\n+\t\treturn this.function.apply((S) rootObject);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn getValue(this.defaultContext, desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn getValue(this.defaultContext, rootObject, desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue(EvaluationContext context) throws EvaluationException {\n+\t\treturn getValue();\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException {\n+\t\treturn getValue(rootObject);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn ExpressionUtils.convertTypedValue(context, new TypedValue(getValue()), desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType)\n+\t\t\tthrows EvaluationException {\n+\t\treturn ExpressionUtils.convertTypedValue(context, new TypedValue(getValue(rootObject)), desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic Class<?> getValueType() throws EvaluationException {\n+\t\tthrow this.readOnlyException;", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/support/FunctionExpression.java", "position": 103, "original_position": 89, "commit_id": "73ee45a14e1c2f65bed52c7ae21bf85c869f0fec", "original_commit_id": "f5b49a5c1ad4aef75c054659f58b64469db147b0", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Minor polish here: https://github.com/garyrussell/spring-integration-extensions/commit/1120e2ecabbbcbee18b30f60bf7aad194232ad34\n\n`readOnlyException` doesn't seem right here - we're only \"reading\" the type.\n\nThat said, can't we determine the return type by introspecting the `Function` ?\n", "created_at": "2014-10-27T15:31:35Z", "updated_at": "2014-10-28T10:17:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/118#discussion_r19412327", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/118", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19412327"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/118#discussion_r19412327"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/118"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19412327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19458255", "pull_request_review_id": null, "id": 19458255, "diff_hunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.dsl.support;\n+\n+import org.springframework.core.convert.TypeDescriptor;\n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.EvaluationException;\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.TypedValue;\n+import org.springframework.expression.common.ExpressionUtils;\n+import org.springframework.expression.spel.support.StandardEvaluationContext;\n+\n+/**\n+ * @author Artem Bilan\n+ */\n+public class FunctionExpression<S> implements Expression {\n+\n+\tprivate final Function<S, ?> function;\n+\n+\tprivate final EvaluationContext defaultContext = new StandardEvaluationContext();\n+\n+\tprivate final EvaluationException readOnlyException;\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic FunctionExpression(Function<S, ?> function) {\n+\t\tthis.function = function;\n+\t\tthis.readOnlyException = new EvaluationException(getExpressionString(),\n+\t\t\t\t\"FunctionExpression is the 'read only' Expression implementation\");\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue() throws EvaluationException {\n+\t\treturn this.function.apply(null);\n+\t}\n+\n+\t@Override\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic Object getValue(Object rootObject) throws EvaluationException {\n+\t\treturn this.function.apply((S) rootObject);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn getValue(this.defaultContext, desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn getValue(this.defaultContext, rootObject, desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue(EvaluationContext context) throws EvaluationException {\n+\t\treturn getValue();\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException {\n+\t\treturn getValue(rootObject);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn ExpressionUtils.convertTypedValue(context, new TypedValue(getValue()), desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType)\n+\t\t\tthrows EvaluationException {\n+\t\treturn ExpressionUtils.convertTypedValue(context, new TypedValue(getValue(rootObject)), desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic Class<?> getValueType() throws EvaluationException {\n+\t\tthrow this.readOnlyException;", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/support/FunctionExpression.java", "position": 103, "original_position": 89, "commit_id": "73ee45a14e1c2f65bed52c7ae21bf85c869f0fec", "original_commit_id": "f5b49a5c1ad4aef75c054659f58b64469db147b0", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "See `Expression.getValueType()` JavaDocs:\n\n```\n/**\n * Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}\n * method using the default context.\n * @param rootObject the root object against which to evaluate the expression\n * @return the most general type of value that can be set on this context\n * @throws EvaluationException if there is a problem determining the type\n */\n```\n\nFrom other side we can't extract the generic type of `Function`, if it is a Lambda. See here: https://github.com/spring-projects/spring-integration-extensions/wiki/Spring-Integration-Java-DSL-Reference#serviceActivators:\n\n> Since Java doesn't support generic type rosultion for Lambda classes...\n", "created_at": "2014-10-28T08:51:30Z", "updated_at": "2014-10-28T10:17:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/118#discussion_r19458255", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/118", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19458255"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/118#discussion_r19458255"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/118"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19458255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19467004", "pull_request_review_id": null, "id": 19467004, "diff_hunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.dsl.support;\n+\n+import org.springframework.core.convert.TypeDescriptor;\n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.EvaluationException;\n+import org.springframework.expression.Expression;\n+import org.springframework.expression.TypedValue;\n+import org.springframework.expression.common.ExpressionUtils;\n+import org.springframework.expression.spel.support.StandardEvaluationContext;\n+\n+/**\n+ * @author Artem Bilan\n+ */\n+public class FunctionExpression<S> implements Expression {\n+\n+\tprivate final Function<S, ?> function;\n+\n+\tprivate final EvaluationContext defaultContext = new StandardEvaluationContext();\n+\n+\tprivate final EvaluationException readOnlyException;\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic FunctionExpression(Function<S, ?> function) {\n+\t\tthis.function = function;\n+\t\tthis.readOnlyException = new EvaluationException(getExpressionString(),\n+\t\t\t\t\"FunctionExpression is the 'read only' Expression implementation\");\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue() throws EvaluationException {\n+\t\treturn this.function.apply(null);\n+\t}\n+\n+\t@Override\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic Object getValue(Object rootObject) throws EvaluationException {\n+\t\treturn this.function.apply((S) rootObject);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn getValue(this.defaultContext, desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn getValue(this.defaultContext, rootObject, desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue(EvaluationContext context) throws EvaluationException {\n+\t\treturn getValue();\n+\t}\n+\n+\t@Override\n+\tpublic Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException {\n+\t\treturn getValue(rootObject);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException {\n+\t\treturn ExpressionUtils.convertTypedValue(context, new TypedValue(getValue()), desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic <T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType)\n+\t\t\tthrows EvaluationException {\n+\t\treturn ExpressionUtils.convertTypedValue(context, new TypedValue(getValue(rootObject)), desiredResultType);\n+\t}\n+\n+\t@Override\n+\tpublic Class<?> getValueType() throws EvaluationException {\n+\t\tthrow this.readOnlyException;", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/support/FunctionExpression.java", "position": 103, "original_position": 89, "commit_id": "73ee45a14e1c2f65bed52c7ae21bf85c869f0fec", "original_commit_id": "f5b49a5c1ad4aef75c054659f58b64469db147b0", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "doh; sorry\n", "created_at": "2014-10-28T12:38:29Z", "updated_at": "2014-10-28T12:38:29Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/118#discussion_r19467004", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/118", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19467004"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/118#discussion_r19467004"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/118"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19467004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19575787", "pull_request_review_id": null, "id": 19575787, "diff_hunk": "@@ -33,18 +56,73 @@\n \t}\n \n \tpublic RouterSpec<R> prefix(String prefix) {\n+\t\tAssert.state(this.subFlows.isEmpty(), \"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tthis.prefix = prefix;\n \t\tthis.target.setPrefix(prefix);\n \t\treturn _this();\n \t}\n \n \tpublic RouterSpec<R> suffix(String suffix) {\n+\t\tAssert.state(this.subFlows.isEmpty(), \"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tthis.suffix = suffix;\n \t\tthis.target.setSuffix(suffix);\n \t\treturn _this();\n \t}\n \n \tpublic RouterSpec<R> channelMapping(String key, String channelName) {\n+\t\tAssert.hasText(key);\n+\t\tAssert.hasText(channelName);\n \t\tthis.target.setChannelMapping(key, channelName);\n \t\treturn _this();\n \t}\n \n+\tpublic RouterSpec<R> subFlowMapping(String key, IntegrationFlow subFlow) {\n+\t\tAssert.hasText(key);\n+\t\tAssert.notNull(subFlow);\n+\t\tAssert.state(!(StringUtils.hasText(this.prefix) || StringUtils.hasText(this.suffix)),\n+\t\t\t\t\"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tDirectChannel channel = new DirectChannel();", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/RouterSpec.java", "position": null, "original_position": 66, "commit_id": "af50b8ec811b49aed0f4fba116e3d0ca9bedfba3", "original_commit_id": "b57d16cfbd70a6ae590f2f604c4744a9d5304d84", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Need to give channels like this a `beanName` for logging etc.\n", "created_at": "2014-10-29T22:04:34Z", "updated_at": "2014-10-30T20:06:06Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/120#discussion_r19575787", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/120", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19575787"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/120#discussion_r19575787"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/120"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19575787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19590922", "pull_request_review_id": null, "id": 19590922, "diff_hunk": "@@ -33,18 +56,73 @@\n \t}\n \n \tpublic RouterSpec<R> prefix(String prefix) {\n+\t\tAssert.state(this.subFlows.isEmpty(), \"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tthis.prefix = prefix;\n \t\tthis.target.setPrefix(prefix);\n \t\treturn _this();\n \t}\n \n \tpublic RouterSpec<R> suffix(String suffix) {\n+\t\tAssert.state(this.subFlows.isEmpty(), \"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tthis.suffix = suffix;\n \t\tthis.target.setSuffix(suffix);\n \t\treturn _this();\n \t}\n \n \tpublic RouterSpec<R> channelMapping(String key, String channelName) {\n+\t\tAssert.hasText(key);\n+\t\tAssert.hasText(channelName);\n \t\tthis.target.setChannelMapping(key, channelName);\n \t\treturn _this();\n \t}\n \n+\tpublic RouterSpec<R> subFlowMapping(String key, IntegrationFlow subFlow) {\n+\t\tAssert.hasText(key);\n+\t\tAssert.notNull(subFlow);\n+\t\tAssert.state(!(StringUtils.hasText(this.prefix) || StringUtils.hasText(this.suffix)),\n+\t\t\t\t\"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tDirectChannel channel = new DirectChannel();", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/RouterSpec.java", "position": null, "original_position": 66, "commit_id": "af50b8ec811b49aed0f4fba116e3d0ca9bedfba3", "original_commit_id": "b57d16cfbd70a6ae590f2f604c4744a9d5304d84", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "As you see the next line (`this.subFlows.add(channel);`) provides this `channel` for the future bean registration: see `IntegrationFlowDefinition.route(R router, Consumer<RouterSpec<R>> routerConfigurer,         Consumer<GenericEndpointSpec<R>> endpointConfigurer)` and further `IntegrationFlowBeanPostProcessor.processStandardIntegrationFlow`, where the last one iterates over `flow.getIntegrationComponents()`. Hance channels like this accepts the bean name based on the `IntegrationFlow` beanName. \nHere is a note on the matter: https://github.com/spring-projects/spring-integration-extensions/wiki/Spring-Integration-Java-DSL-Reference#channels.\n\nI agree that the bean name for the `subFlow` is bad right now, because it is generated using `BF` algorithm. Therefore anonymous channels in the that `subFlow` get bean names like this:\n\n```\norg.springframework.integration.dsl.IntegrationFlowBuilder$StandardIntegrationFlow#0.channel#0\n```\n\nSo, I think I can make `subFlows` (in fact `StandardIntegrationFlow`) as `BeanNameAware, NamedComponent` and use the beanName from their parent `IntegrationFlow` bean definition.\nIn the end those subFlow's channel can make the bean name like this (for current `router` sample):\n\n```\nrouteFlow.subFlow#0.channel#0\nrouteFlow.subFlow#1.channel#0\nrouteFlow.subFlow#1.channel#1\n```\n\nWDYT?\n", "created_at": "2014-10-30T07:48:27Z", "updated_at": "2014-10-30T20:06:06Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/120#discussion_r19590922", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/120", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19590922"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/120#discussion_r19590922"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/120"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19590922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19602117", "pull_request_review_id": null, "id": 19602117, "diff_hunk": "@@ -33,18 +56,73 @@\n \t}\n \n \tpublic RouterSpec<R> prefix(String prefix) {\n+\t\tAssert.state(this.subFlows.isEmpty(), \"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tthis.prefix = prefix;\n \t\tthis.target.setPrefix(prefix);\n \t\treturn _this();\n \t}\n \n \tpublic RouterSpec<R> suffix(String suffix) {\n+\t\tAssert.state(this.subFlows.isEmpty(), \"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tthis.suffix = suffix;\n \t\tthis.target.setSuffix(suffix);\n \t\treturn _this();\n \t}\n \n \tpublic RouterSpec<R> channelMapping(String key, String channelName) {\n+\t\tAssert.hasText(key);\n+\t\tAssert.hasText(channelName);\n \t\tthis.target.setChannelMapping(key, channelName);\n \t\treturn _this();\n \t}\n \n+\tpublic RouterSpec<R> subFlowMapping(String key, IntegrationFlow subFlow) {\n+\t\tAssert.hasText(key);\n+\t\tAssert.notNull(subFlow);\n+\t\tAssert.state(!(StringUtils.hasText(this.prefix) || StringUtils.hasText(this.suffix)),\n+\t\t\t\t\"The 'prefix'('suffix') and 'subFlowMapping' are mutually exclusive\");\n+\t\tDirectChannel channel = new DirectChannel();", "path": "spring-integration-java-dsl/src/main/java/org/springframework/integration/dsl/RouterSpec.java", "position": null, "original_position": 66, "commit_id": "af50b8ec811b49aed0f4fba116e3d0ca9bedfba3", "original_commit_id": "b57d16cfbd70a6ae590f2f604c4744a9d5304d84", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": ":+1: \n", "created_at": "2014-10-30T12:48:49Z", "updated_at": "2014-10-30T20:06:06Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/120#discussion_r19602117", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/120", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19602117"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/120#discussion_r19602117"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/120"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/19602117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20159541", "pull_request_review_id": null, "id": 20159541, "diff_hunk": "@@ -19,54 +19,61 @@\n import java.util.Map;\n import java.util.Properties;\n \n-import org.apache.commons.lang.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.springframework.beans.BeansException;\n-import org.springframework.beans.factory.*;\n import org.springframework.messaging.Message;\n \n /**\n  * @author Soby Chacko\n  * @author Rajasekar Elango\n+ * @author Ilayaperumal Gopinathan\n  * @since 0.5\n  */\n-public class KafkaProducerContext<K,V> implements BeanFactoryAware {\n+public class KafkaProducerContext<K, V> {\n \tprivate static final Log LOGGER = LogFactory.getLog(KafkaProducerContext.class);\n-\tprivate Map<String, ProducerConfiguration<K,V>> topicsConfiguration;\n+\tprivate Map<String, ProducerConfiguration<K, V>> producerConfigurations;\n \tprivate Properties producerProperties;\n \n \tpublic void send(final Message<?> message) throws Exception {\n-\t\tfinal ProducerConfiguration<K,V> producerConfiguration =\n-\t\t\t\t\t\tgetTopicConfiguration(message.getHeaders().get(\"topic\", String.class));\n+\t\tif (message.getHeaders().containsKey(\"topic\")) {\n+\t\t\tfinal ProducerConfiguration<K, V> producerConfiguration = getTopicConfiguration(message\n+\t\t\t\t\t.getHeaders().get(\"topic\", String.class));\n \n-\t\tif (producerConfiguration != null) {\n-\t\t\tproducerConfiguration.send(message);\n+\t\t\tif (producerConfiguration != null) {\n+\t\t\t\tproducerConfiguration.send(message);\n+\t\t\t}\n+\t\t}\n+\t\t// if there is a single producer configuration then use that config to\n+\t\t// send message.\n+\t\telse if (producerConfigurations.size() == 1) {\n+\t\t\tproducerConfigurations.get(\n+\t\t\t\t\tproducerConfigurations.keySet().iterator().next()).send(\n+\t\t\t\t\tmessage);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/support/KafkaProducerContext.java", "position": null, "original_position": 42, "commit_id": "56322c14345fd0a55ef78b5e63efd81d0d186ac9", "original_commit_id": "d095102200f1441956f2b046219f2208bb5ad6fd", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Looks like there is need `else` with `IllegalStateException`, when we don't have `topic` header and there is more than 1 `producerConfigurations`.\n", "created_at": "2014-11-11T16:08:37Z", "updated_at": "2014-11-11T17:43:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/128#discussion_r20159541", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/128", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20159541"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/128#discussion_r20159541"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/128"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20159541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20160216", "pull_request_review_id": null, "id": 20160216, "diff_hunk": "@@ -19,54 +19,61 @@\n import java.util.Map;\n import java.util.Properties;\n \n-import org.apache.commons.lang.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.springframework.beans.BeansException;\n-import org.springframework.beans.factory.*;\n import org.springframework.messaging.Message;\n \n /**\n  * @author Soby Chacko\n  * @author Rajasekar Elango\n+ * @author Ilayaperumal Gopinathan\n  * @since 0.5\n  */\n-public class KafkaProducerContext<K,V> implements BeanFactoryAware {\n+public class KafkaProducerContext<K, V> {\n \tprivate static final Log LOGGER = LogFactory.getLog(KafkaProducerContext.class);\n-\tprivate Map<String, ProducerConfiguration<K,V>> topicsConfiguration;\n+\tprivate Map<String, ProducerConfiguration<K, V>> producerConfigurations;\n \tprivate Properties producerProperties;\n \n \tpublic void send(final Message<?> message) throws Exception {\n-\t\tfinal ProducerConfiguration<K,V> producerConfiguration =\n-\t\t\t\t\t\tgetTopicConfiguration(message.getHeaders().get(\"topic\", String.class));\n+\t\tif (message.getHeaders().containsKey(\"topic\")) {\n+\t\t\tfinal ProducerConfiguration<K, V> producerConfiguration = getTopicConfiguration(message\n+\t\t\t\t\t.getHeaders().get(\"topic\", String.class));\n \n-\t\tif (producerConfiguration != null) {\n-\t\t\tproducerConfiguration.send(message);\n+\t\t\tif (producerConfiguration != null) {\n+\t\t\t\tproducerConfiguration.send(message);\n+\t\t\t}\n+\t\t}\n+\t\t// if there is a single producer configuration then use that config to\n+\t\t// send message.\n+\t\telse if (producerConfigurations.size() == 1) {\n+\t\t\tproducerConfigurations.get(\n+\t\t\t\t\tproducerConfigurations.keySet().iterator().next()).send(\n+\t\t\t\t\tmessage);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/support/KafkaProducerContext.java", "position": null, "original_position": 42, "commit_id": "56322c14345fd0a55ef78b5e63efd81d0d186ac9", "original_commit_id": "d095102200f1441956f2b046219f2208bb5ad6fd", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "@ilayaperumalg , that's all. It is only single critical concern.\nLet me know and I'll fix it on merge.\n\nI'd say that you have an issue with code style though, but I do `artemized` on each merge :smile: \n", "created_at": "2014-11-11T16:18:27Z", "updated_at": "2014-11-11T17:43:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/128#discussion_r20160216", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/128", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20160216"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/128#discussion_r20160216"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/128"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20160216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20163635", "pull_request_review_id": null, "id": 20163635, "diff_hunk": "@@ -19,54 +19,61 @@\n import java.util.Map;\n import java.util.Properties;\n \n-import org.apache.commons.lang.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.springframework.beans.BeansException;\n-import org.springframework.beans.factory.*;\n import org.springframework.messaging.Message;\n \n /**\n  * @author Soby Chacko\n  * @author Rajasekar Elango\n+ * @author Ilayaperumal Gopinathan\n  * @since 0.5\n  */\n-public class KafkaProducerContext<K,V> implements BeanFactoryAware {\n+public class KafkaProducerContext<K, V> {\n \tprivate static final Log LOGGER = LogFactory.getLog(KafkaProducerContext.class);\n-\tprivate Map<String, ProducerConfiguration<K,V>> topicsConfiguration;\n+\tprivate Map<String, ProducerConfiguration<K, V>> producerConfigurations;\n \tprivate Properties producerProperties;\n \n \tpublic void send(final Message<?> message) throws Exception {\n-\t\tfinal ProducerConfiguration<K,V> producerConfiguration =\n-\t\t\t\t\t\tgetTopicConfiguration(message.getHeaders().get(\"topic\", String.class));\n+\t\tif (message.getHeaders().containsKey(\"topic\")) {\n+\t\t\tfinal ProducerConfiguration<K, V> producerConfiguration = getTopicConfiguration(message\n+\t\t\t\t\t.getHeaders().get(\"topic\", String.class));\n \n-\t\tif (producerConfiguration != null) {\n-\t\t\tproducerConfiguration.send(message);\n+\t\t\tif (producerConfiguration != null) {\n+\t\t\t\tproducerConfiguration.send(message);\n+\t\t\t}\n+\t\t}\n+\t\t// if there is a single producer configuration then use that config to\n+\t\t// send message.\n+\t\telse if (producerConfigurations.size() == 1) {\n+\t\t\tproducerConfigurations.get(\n+\t\t\t\t\tproducerConfigurations.keySet().iterator().next()).send(\n+\t\t\t\t\tmessage);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/support/KafkaProducerContext.java", "position": null, "original_position": 42, "commit_id": "56322c14345fd0a55ef78b5e63efd81d0d186ac9", "original_commit_id": "d095102200f1441956f2b046219f2208bb5ad6fd", "user": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "body": "@artembilan sorry about the code style issue. It would be helpful if you could fix that change on merge :-) thank you!\n", "created_at": "2014-11-11T17:05:43Z", "updated_at": "2014-11-11T17:43:16Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/128#discussion_r20163635", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/128", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20163635"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/128#discussion_r20163635"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/128"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20163635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215823", "pull_request_review_id": null, "id": 20215823, "diff_hunk": "@@ -0,0 +1,176 @@\n+package org.springframework.integration.smpp.core;", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/core/SmesMessageSpecificationTest.java", "position": 15, "original_position": 1, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Need `Copyright` in the beginning of each class.\n", "created_at": "2014-11-12T12:32:15Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20215823", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215823"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20215823"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215830", "pull_request_review_id": null, "id": 20215830, "diff_hunk": "@@ -0,0 +1,176 @@\n+package org.springframework.integration.smpp.core;\n+\n+import org.jsmpp.bean.DataCoding;\n+import org.jsmpp.bean.DataCodings;\n+import org.jsmpp.bean.SimpleDataCoding;\n+import org.junit.Test;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.messaging.Message;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Flemming J\u00f8nsson", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/core/SmesMessageSpecificationTest.java", "position": 32, "original_position": 18, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "`@since 1.0.1`\n", "created_at": "2014-11-12T12:32:24Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20215830", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215830"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20215830"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215846", "pull_request_review_id": null, "id": 20215846, "diff_hunk": "@@ -0,0 +1,176 @@\n+package org.springframework.integration.smpp.core;\n+\n+import org.jsmpp.bean.DataCoding;\n+import org.jsmpp.bean.DataCodings;\n+import org.jsmpp.bean.SimpleDataCoding;\n+import org.junit.Test;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.messaging.Message;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Flemming J\u00f8nsson\n+ */\n+public class SmesMessageSpecificationTest {\n+\n+    private static final int MULTISEGMENT_PREFIX_BYTES = 5;\n+\n+    private static final String MULTILINE_PAYLOAD =\n+            \"1: This is a string longer than 140 chars and it contains newlines and foreign characters - \u00e6\u00f8\u00e5. This is the first line. \\n\" +\n+                    \"2: This is the second line. \\n\" +\n+                    \"3: This is the third line\\n\" +\n+                    \"4: Fourth line\\n\" +\n+                    \"5: Fifth line\\n\" +\n+                    \"6: Sixth line\\n\" +\n+                    \"7: Seventh line\\n\" +\n+                    \"8: Eighth line\\n\" +\n+                    \"9: Ninth line\\n\" +\n+                    \"The end\";\n+\n+    private static final String SINGLELINE_PAYLOAD = \"1: This is a line that is longer than what can be sent in a single segment. It also has foreign characters \u00e6\u00f8\u00e5. Lorem ipsum dolor sit amet, atqui iudico epicuri mel eu. Cu quaestio voluptatum ullamcorper quo, nec ut numquam habemus, summo nostrum est ut. Nominati praesent repudiare at sit, ut tibique suscipit has, nec eu odio erat qualisque. Soleat ridens ut nec, eu denique mentitum his.\";\n+\n+    /* ********** Single line tests ************* */\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor7Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 0);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor8Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 4);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor16Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 8);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForSimpleDataCoding() throws Exception {\n+        DataCoding dataCoding = new SimpleDataCoding();\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForDefault() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, null, null);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForCustomMaxCharacters() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, null, 99);\n+    }\n+\n+    /* ********** Multi line tests ************* */\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor7Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 0);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor8Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 4);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor16Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 8);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForSimpleDataCoding() throws Exception {\n+        DataCoding dataCoding = new SimpleDataCoding();\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForDefault() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, null, null);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForCustomMaxCharacters() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, null, 99);\n+    }\n+\n+    /* ***************** Helper methods ****************** */\n+\n+    private void verifySingleLineMessageSplitCorrectlyForDataCoding(DataCoding dataCoding) throws UnsupportedEncodingException {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, dataCoding, null);\n+    }\n+\n+    private void verifyMultilineMessageSplitCorrectlyForDataCoding(DataCoding dataCoding) throws UnsupportedEncodingException {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, dataCoding, null);\n+    }\n+\n+    private void verifyMessageSplitCorrectlyForDataCoding(String payload, DataCoding dataCoding, Integer maxMessageSize) throws UnsupportedEncodingException {\n+        SmesMessageSpecification smesMessageSpecification = getSmesMessageSpecification(payload, dataCoding, maxMessageSize);\n+\n+        if (dataCoding == null) {\n+            dataCoding = (DataCoding) ReflectionTestUtils.getField(smesMessageSpecification, \"dataCoding\");\n+        }\n+        int maxCharacters;\n+        if (maxMessageSize == null) {\n+            maxCharacters = DataCodingSpecification.getMaxCharacters(dataCoding.toByte());\n+        } else {", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/core/SmesMessageSpecificationTest.java", "position": null, "original_position": 137, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "`else`, `catch`, `finally` etc. from the new line\n", "created_at": "2014-11-12T12:32:52Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20215846", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215846"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20215846"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20215846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20220639", "pull_request_review_id": null, "id": 20220639, "diff_hunk": "@@ -706,6 +707,15 @@ public SmesMessageSpecification setShortTextMessage(String s) {\n \t\treturn this;\n \t}\n \n+    private List<String> splitToLength(String text, int subStringSize) {\n+        List<String> substrings = new ArrayList<String>(text.length() + subStringSize -1 / subStringSize);", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": null, "original_position": 22, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "The mistake is here. `Div` operator has precedence over `minus`\n", "created_at": "2014-11-12T14:19:59Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20220639", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20220639"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20220639"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20220639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20222561", "pull_request_review_id": null, "id": 20222561, "diff_hunk": "@@ -706,6 +707,15 @@ public SmesMessageSpecification setShortTextMessage(String s) {\n \t\treturn this;\n \t}\n \n+    private List<String> splitToLength(String text, int subStringSize) {\n+        List<String> substrings = new ArrayList<String>(text.length() + subStringSize -1 / subStringSize);", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": null, "original_position": 22, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "frjtrifork", "id": 809663, "avatar_url": "https://avatars3.githubusercontent.com/u/809663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frjtrifork", "html_url": "https://github.com/frjtrifork", "followers_url": "https://api.github.com/users/frjtrifork/followers", "following_url": "https://api.github.com/users/frjtrifork/following{/other_user}", "gists_url": "https://api.github.com/users/frjtrifork/gists{/gist_id}", "starred_url": "https://api.github.com/users/frjtrifork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frjtrifork/subscriptions", "organizations_url": "https://api.github.com/users/frjtrifork/orgs", "repos_url": "https://api.github.com/users/frjtrifork/repos", "events_url": "https://api.github.com/users/frjtrifork/events{/privacy}", "received_events_url": "https://api.github.com/users/frjtrifork/received_events", "type": "User", "site_admin": false}, "body": "Ah, yes - I missed it because the code stille works when calling add on the list. :-/\nThis is my first pull request to one of the spring projects. How would you like me to proceed, do I fix the error in my branch, and create a new pull request - or what should I do?\n", "created_at": "2014-11-12T14:46:44Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20222561", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20222561"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20222561"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20222561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20222892", "pull_request_review_id": null, "id": 20222892, "diff_hunk": "@@ -0,0 +1,176 @@\n+package org.springframework.integration.smpp.core;\n+\n+import org.jsmpp.bean.DataCoding;\n+import org.jsmpp.bean.DataCodings;\n+import org.jsmpp.bean.SimpleDataCoding;\n+import org.junit.Test;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.messaging.Message;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Flemming J\u00f8nsson\n+ */\n+public class SmesMessageSpecificationTest {\n+\n+    private static final int MULTISEGMENT_PREFIX_BYTES = 5;\n+\n+    private static final String MULTILINE_PAYLOAD =\n+            \"1: This is a string longer than 140 chars and it contains newlines and foreign characters - \u00e6\u00f8\u00e5. This is the first line. \\n\" +\n+                    \"2: This is the second line. \\n\" +\n+                    \"3: This is the third line\\n\" +\n+                    \"4: Fourth line\\n\" +\n+                    \"5: Fifth line\\n\" +\n+                    \"6: Sixth line\\n\" +\n+                    \"7: Seventh line\\n\" +\n+                    \"8: Eighth line\\n\" +\n+                    \"9: Ninth line\\n\" +\n+                    \"The end\";\n+\n+    private static final String SINGLELINE_PAYLOAD = \"1: This is a line that is longer than what can be sent in a single segment. It also has foreign characters \u00e6\u00f8\u00e5. Lorem ipsum dolor sit amet, atqui iudico epicuri mel eu. Cu quaestio voluptatum ullamcorper quo, nec ut numquam habemus, summo nostrum est ut. Nominati praesent repudiare at sit, ut tibique suscipit has, nec eu odio erat qualisque. Soleat ridens ut nec, eu denique mentitum his.\";\n+\n+    /* ********** Single line tests ************* */\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor7Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 0);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor8Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 4);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor16Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 8);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForSimpleDataCoding() throws Exception {\n+        DataCoding dataCoding = new SimpleDataCoding();\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForDefault() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, null, null);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForCustomMaxCharacters() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, null, 99);\n+    }\n+\n+    /* ********** Multi line tests ************* */\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor7Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 0);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor8Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 4);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor16Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 8);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForSimpleDataCoding() throws Exception {\n+        DataCoding dataCoding = new SimpleDataCoding();\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForDefault() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, null, null);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForCustomMaxCharacters() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, null, 99);\n+    }\n+\n+    /* ***************** Helper methods ****************** */\n+\n+    private void verifySingleLineMessageSplitCorrectlyForDataCoding(DataCoding dataCoding) throws UnsupportedEncodingException {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, dataCoding, null);\n+    }\n+\n+    private void verifyMultilineMessageSplitCorrectlyForDataCoding(DataCoding dataCoding) throws UnsupportedEncodingException {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, dataCoding, null);\n+    }\n+\n+    private void verifyMessageSplitCorrectlyForDataCoding(String payload, DataCoding dataCoding, Integer maxMessageSize) throws UnsupportedEncodingException {\n+        SmesMessageSpecification smesMessageSpecification = getSmesMessageSpecification(payload, dataCoding, maxMessageSize);\n+\n+        if (dataCoding == null) {\n+            dataCoding = (DataCoding) ReflectionTestUtils.getField(smesMessageSpecification, \"dataCoding\");\n+        }\n+        int maxCharacters;\n+        if (maxMessageSize == null) {\n+            maxCharacters = DataCodingSpecification.getMaxCharacters(dataCoding.toByte());\n+        } else {\n+            maxCharacters = maxMessageSize;\n+        }\n+\n+        int maxCharactersWithRoomForPrefix = maxCharacters - MULTISEGMENT_PREFIX_BYTES;\n+        String charsetName = DataCodingSpecification.getCharsetName(dataCoding.toByte());\n+\n+        List<byte[]> messageParts = (List<byte[]>) ReflectionTestUtils.getField(smesMessageSpecification, \"shortMessageParts\");\n+\n+        int expectedPartsCountAfterSplit = (payload.length() + maxCharactersWithRoomForPrefix - 1) / maxCharactersWithRoomForPrefix;\n+\n+        //No logger impl in gradle test deps?\n+        if (Boolean.getBoolean(\"show_test_output\")) {\n+            System.out.println(\"Datacoding[\" + dataCoding.getClass().getSimpleName() + \" \" + dataCoding.toByte() + \"] maxCharacters: \" + maxCharacters + \", maxCharactersWithRoomForPrefix: \" + maxCharactersWithRoomForPrefix + \", payload length: \" + payload.length() + \", expectedPartsCountForDataCoding: \" + expectedPartsCountAfterSplit);\n+        }", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/core/SmesMessageSpecificationTest.java", "position": null, "original_position": 151, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "What is this? \n`Boolean.getBoolean(\"show_test_output\")` is always `false`.\n\nFrom other side I agree that there is no correct logging configuration for the project.\nI've just found some working case. \nAnyway we try to not overhead tests with logs: `assert...` should ber enough\n", "created_at": "2014-11-12T14:50:42Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20222892", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20222892"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20222892"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20222892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223256", "pull_request_review_id": null, "id": 20223256, "diff_hunk": "@@ -706,6 +707,15 @@ public SmesMessageSpecification setShortTextMessage(String s) {\n \t\treturn this;\n \t}\n \n+    private List<String> splitToLength(String text, int subStringSize) {\n+        List<String> substrings = new ArrayList<String>(text.length() + subStringSize -1 / subStringSize);", "path": "spring-integration-smpp/src/main/java/org/springframework/integration/smpp/core/SmesMessageSpecification.java", "position": null, "original_position": 22, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Yes, you are fixing it in your branch, commit just only the fix and push it to the `origin`.\nGitHub picks up your changes to the PR very well.\n", "created_at": "2014-11-12T14:55:31Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20223256", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223256"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20223256"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223435", "pull_request_review_id": null, "id": 20223435, "diff_hunk": "@@ -0,0 +1,176 @@\n+package org.springframework.integration.smpp.core;\n+\n+import org.jsmpp.bean.DataCoding;\n+import org.jsmpp.bean.DataCodings;\n+import org.jsmpp.bean.SimpleDataCoding;\n+import org.junit.Test;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.messaging.Message;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Flemming J\u00f8nsson\n+ */\n+public class SmesMessageSpecificationTest {\n+\n+    private static final int MULTISEGMENT_PREFIX_BYTES = 5;\n+\n+    private static final String MULTILINE_PAYLOAD =\n+            \"1: This is a string longer than 140 chars and it contains newlines and foreign characters - \u00e6\u00f8\u00e5. This is the first line. \\n\" +\n+                    \"2: This is the second line. \\n\" +\n+                    \"3: This is the third line\\n\" +\n+                    \"4: Fourth line\\n\" +\n+                    \"5: Fifth line\\n\" +\n+                    \"6: Sixth line\\n\" +\n+                    \"7: Seventh line\\n\" +\n+                    \"8: Eighth line\\n\" +\n+                    \"9: Ninth line\\n\" +\n+                    \"The end\";\n+\n+    private static final String SINGLELINE_PAYLOAD = \"1: This is a line that is longer than what can be sent in a single segment. It also has foreign characters \u00e6\u00f8\u00e5. Lorem ipsum dolor sit amet, atqui iudico epicuri mel eu. Cu quaestio voluptatum ullamcorper quo, nec ut numquam habemus, summo nostrum est ut. Nominati praesent repudiare at sit, ut tibique suscipit has, nec eu odio erat qualisque. Soleat ridens ut nec, eu denique mentitum his.\";\n+\n+    /* ********** Single line tests ************* */\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor7Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 0);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor8Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 4);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor16Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 8);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForSimpleDataCoding() throws Exception {\n+        DataCoding dataCoding = new SimpleDataCoding();\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForDefault() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, null, null);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForCustomMaxCharacters() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, null, 99);\n+    }\n+\n+    /* ********** Multi line tests ************* */\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor7Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 0);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor8Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 4);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor16Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 8);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForSimpleDataCoding() throws Exception {\n+        DataCoding dataCoding = new SimpleDataCoding();\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForDefault() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, null, null);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForCustomMaxCharacters() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, null, 99);\n+    }\n+\n+    /* ***************** Helper methods ****************** */\n+\n+    private void verifySingleLineMessageSplitCorrectlyForDataCoding(DataCoding dataCoding) throws UnsupportedEncodingException {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, dataCoding, null);\n+    }\n+\n+    private void verifyMultilineMessageSplitCorrectlyForDataCoding(DataCoding dataCoding) throws UnsupportedEncodingException {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, dataCoding, null);\n+    }\n+\n+    private void verifyMessageSplitCorrectlyForDataCoding(String payload, DataCoding dataCoding, Integer maxMessageSize) throws UnsupportedEncodingException {\n+        SmesMessageSpecification smesMessageSpecification = getSmesMessageSpecification(payload, dataCoding, maxMessageSize);\n+\n+        if (dataCoding == null) {\n+            dataCoding = (DataCoding) ReflectionTestUtils.getField(smesMessageSpecification, \"dataCoding\");\n+        }\n+        int maxCharacters;\n+        if (maxMessageSize == null) {\n+            maxCharacters = DataCodingSpecification.getMaxCharacters(dataCoding.toByte());\n+        } else {\n+            maxCharacters = maxMessageSize;\n+        }\n+\n+        int maxCharactersWithRoomForPrefix = maxCharacters - MULTISEGMENT_PREFIX_BYTES;\n+        String charsetName = DataCodingSpecification.getCharsetName(dataCoding.toByte());\n+\n+        List<byte[]> messageParts = (List<byte[]>) ReflectionTestUtils.getField(smesMessageSpecification, \"shortMessageParts\");\n+\n+        int expectedPartsCountAfterSplit = (payload.length() + maxCharactersWithRoomForPrefix - 1) / maxCharactersWithRoomForPrefix;\n+\n+        //No logger impl in gradle test deps?\n+        if (Boolean.getBoolean(\"show_test_output\")) {\n+            System.out.println(\"Datacoding[\" + dataCoding.getClass().getSimpleName() + \" \" + dataCoding.toByte() + \"] maxCharacters: \" + maxCharacters + \", maxCharactersWithRoomForPrefix: \" + maxCharactersWithRoomForPrefix + \", payload length: \" + payload.length() + \", expectedPartsCountForDataCoding: \" + expectedPartsCountAfterSplit);\n+        }", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/core/SmesMessageSpecificationTest.java", "position": null, "original_position": 151, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "joensson", "id": 1549461, "avatar_url": "https://avatars2.githubusercontent.com/u/1549461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joensson", "html_url": "https://github.com/joensson", "followers_url": "https://api.github.com/users/joensson/followers", "following_url": "https://api.github.com/users/joensson/following{/other_user}", "gists_url": "https://api.github.com/users/joensson/gists{/gist_id}", "starred_url": "https://api.github.com/users/joensson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joensson/subscriptions", "organizations_url": "https://api.github.com/users/joensson/orgs", "repos_url": "https://api.github.com/users/joensson/repos", "events_url": "https://api.github.com/users/joensson/events{/privacy}", "received_events_url": "https://api.github.com/users/joensson/received_events", "type": "User", "site_admin": false}, "body": "These lines should just be deleted. \n\nI used it for system.out \"logging\" since there was no log4j dependency I could use in the test scope. The println is disabled by default, and can be enabled by setting -Dshow_test_output=true when run from the command line.  But the lines doing the print should really just be deleted. I missed those lines when committing.\n", "created_at": "2014-11-12T14:58:02Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20223435", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223435"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20223435"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223570", "pull_request_review_id": null, "id": 20223570, "diff_hunk": "@@ -0,0 +1,176 @@\n+package org.springframework.integration.smpp.core;\n+\n+import org.jsmpp.bean.DataCoding;\n+import org.jsmpp.bean.DataCodings;\n+import org.jsmpp.bean.SimpleDataCoding;\n+import org.junit.Test;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.messaging.Message;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Flemming J\u00f8nsson\n+ */\n+public class SmesMessageSpecificationTest {\n+\n+    private static final int MULTISEGMENT_PREFIX_BYTES = 5;", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/core/SmesMessageSpecificationTest.java", "position": null, "original_position": 22, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Tipically it's almost bad name for const: each word in the name should be separated with `_`\n", "created_at": "2014-11-12T14:59:48Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20223570", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223570"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20223570"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223604", "pull_request_review_id": null, "id": 20223604, "diff_hunk": "@@ -0,0 +1,176 @@\n+package org.springframework.integration.smpp.core;\n+\n+import org.jsmpp.bean.DataCoding;\n+import org.jsmpp.bean.DataCodings;\n+import org.jsmpp.bean.SimpleDataCoding;\n+import org.junit.Test;\n+import org.springframework.integration.support.MessageBuilder;\n+import org.springframework.messaging.Message;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Flemming J\u00f8nsson\n+ */\n+public class SmesMessageSpecificationTest {\n+\n+    private static final int MULTISEGMENT_PREFIX_BYTES = 5;\n+\n+    private static final String MULTILINE_PAYLOAD =\n+            \"1: This is a string longer than 140 chars and it contains newlines and foreign characters - \u00e6\u00f8\u00e5. This is the first line. \\n\" +\n+                    \"2: This is the second line. \\n\" +\n+                    \"3: This is the third line\\n\" +\n+                    \"4: Fourth line\\n\" +\n+                    \"5: Fifth line\\n\" +\n+                    \"6: Sixth line\\n\" +\n+                    \"7: Seventh line\\n\" +\n+                    \"8: Eighth line\\n\" +\n+                    \"9: Ninth line\\n\" +\n+                    \"The end\";\n+\n+    private static final String SINGLELINE_PAYLOAD = \"1: This is a line that is longer than what can be sent in a single segment. It also has foreign characters \u00e6\u00f8\u00e5. Lorem ipsum dolor sit amet, atqui iudico epicuri mel eu. Cu quaestio voluptatum ullamcorper quo, nec ut numquam habemus, summo nostrum est ut. Nominati praesent repudiare at sit, ut tibique suscipit has, nec eu odio erat qualisque. Soleat ridens ut nec, eu denique mentitum his.\";\n+\n+    /* ********** Single line tests ************* */\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor7Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 0);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor8Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 4);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyFor16Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 8);\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForSimpleDataCoding() throws Exception {\n+        DataCoding dataCoding = new SimpleDataCoding();\n+\n+        verifySingleLineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForDefault() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, null, null);\n+    }\n+\n+    @Test\n+    public void singleLineSplitsCorrectlyForCustomMaxCharacters() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, null, 99);\n+    }\n+\n+    /* ********** Multi line tests ************* */\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor7Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 0);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor8Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 4);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyFor16Bit() throws Exception {\n+        DataCoding dataCoding = DataCodings.newInstance((byte) 8);\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForSimpleDataCoding() throws Exception {\n+        DataCoding dataCoding = new SimpleDataCoding();\n+\n+        verifyMultilineMessageSplitCorrectlyForDataCoding(dataCoding);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForDefault() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, null, null);\n+    }\n+\n+    @Test\n+    public void multiLineSplitsCorrectlyForCustomMaxCharacters() throws Exception {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, null, 99);\n+    }\n+\n+    /* ***************** Helper methods ****************** */\n+\n+    private void verifySingleLineMessageSplitCorrectlyForDataCoding(DataCoding dataCoding) throws UnsupportedEncodingException {\n+        verifyMessageSplitCorrectlyForDataCoding(SINGLELINE_PAYLOAD, dataCoding, null);\n+    }\n+\n+    private void verifyMultilineMessageSplitCorrectlyForDataCoding(DataCoding dataCoding) throws UnsupportedEncodingException {\n+        verifyMessageSplitCorrectlyForDataCoding(MULTILINE_PAYLOAD, dataCoding, null);\n+    }\n+\n+    private void verifyMessageSplitCorrectlyForDataCoding(String payload, DataCoding dataCoding, Integer maxMessageSize) throws UnsupportedEncodingException {\n+        SmesMessageSpecification smesMessageSpecification = getSmesMessageSpecification(payload, dataCoding, maxMessageSize);\n+\n+        if (dataCoding == null) {\n+            dataCoding = (DataCoding) ReflectionTestUtils.getField(smesMessageSpecification, \"dataCoding\");\n+        }\n+        int maxCharacters;\n+        if (maxMessageSize == null) {\n+            maxCharacters = DataCodingSpecification.getMaxCharacters(dataCoding.toByte());\n+        } else {\n+            maxCharacters = maxMessageSize;\n+        }\n+\n+        int maxCharactersWithRoomForPrefix = maxCharacters - MULTISEGMENT_PREFIX_BYTES;\n+        String charsetName = DataCodingSpecification.getCharsetName(dataCoding.toByte());\n+\n+        List<byte[]> messageParts = (List<byte[]>) ReflectionTestUtils.getField(smesMessageSpecification, \"shortMessageParts\");\n+\n+        int expectedPartsCountAfterSplit = (payload.length() + maxCharactersWithRoomForPrefix - 1) / maxCharactersWithRoomForPrefix;\n+\n+        //No logger impl in gradle test deps?\n+        if (Boolean.getBoolean(\"show_test_output\")) {\n+            System.out.println(\"Datacoding[\" + dataCoding.getClass().getSimpleName() + \" \" + dataCoding.toByte() + \"] maxCharacters: \" + maxCharacters + \", maxCharactersWithRoomForPrefix: \" + maxCharactersWithRoomForPrefix + \", payload length: \" + payload.length() + \", expectedPartsCountForDataCoding: \" + expectedPartsCountAfterSplit);\n+        }", "path": "spring-integration-smpp/src/test/java/org/springframework/integration/smpp/core/SmesMessageSpecificationTest.java", "position": null, "original_position": 151, "commit_id": "5374e3c81c10c166cc5a8e8b0e2b80b73aca9c38", "original_commit_id": "9640d4866f55dc64cfbdf8571b83128eb56b219f", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Please, just get rid of this noisy log\n", "created_at": "2014-11-12T15:00:27Z", "updated_at": "2014-11-12T19:15:24Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20223604", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223604"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/130#discussion_r20223604"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/130"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20223604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248037", "pull_request_review_id": null, "id": 20248037, "diff_hunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2002-2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.kafka.serializer.common;\n+\n+import java.util.Properties;\n+\n+import kafka.serializer.Decoder;\n+import kafka.utils.VerifiableProperties;\n+\n+\n+/**\n+ * String Decoder for Kafka message key/value decoding.\n+ * The Default decoder returns the same byte array it takes in.\n+ *\n+ * @author Soby Chacko\n+ */\n+public class StringDecoder implements Decoder<String> {\n+\n+\tprivate String encoding = \"UTF8\";\n+\n+\tpublic void setEncoding(final String encoding) {\n+\t\tthis.encoding = encoding;\n+\t}\n+\n+\t@Override\n+\tpublic String fromBytes(byte[] bytes) {\n+\t\tfinal Properties props = new Properties();\n+\t\tprops.put(\"serializer.encoding\", encoding);\n+\n+\t\tfinal VerifiableProperties verifiableProperties = new VerifiableProperties(props);\n+\t\treturn new kafka.serializer.StringDecoder(verifiableProperties).fromBytes(bytes);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/serializer/common/StringDecoder.java", "position": null, "original_position": 44, "commit_id": "c8a2273315f47d06d5ae686abb304f6a4ece59f0", "original_commit_id": "3b6baa7684153492a6df25779976e55b34a80645", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Do we really need a new decoder for each `fromBytes()`?\n\nCould we at least use a single `VerifiableProperties`.\n\nSeems strange to have to create 3 objects for each conversion.\n", "created_at": "2014-11-12T20:28:00Z", "updated_at": "2014-11-12T20:47:13Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/131#discussion_r20248037", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/131", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248037"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/131#discussion_r20248037"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/131"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248629", "pull_request_review_id": null, "id": 20248629, "diff_hunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2002-2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.kafka.serializer.common;\n+\n+import java.util.Properties;\n+\n+import kafka.serializer.Decoder;\n+import kafka.utils.VerifiableProperties;\n+\n+\n+/**\n+ * String Decoder for Kafka message key/value decoding.\n+ * The Default decoder returns the same byte array it takes in.\n+ *\n+ * @author Soby Chacko\n+ */\n+public class StringDecoder implements Decoder<String> {\n+\n+\tprivate String encoding = \"UTF8\";\n+\n+\tpublic void setEncoding(final String encoding) {\n+\t\tthis.encoding = encoding;\n+\t}\n+\n+\t@Override\n+\tpublic String fromBytes(byte[] bytes) {\n+\t\tfinal Properties props = new Properties();\n+\t\tprops.put(\"serializer.encoding\", encoding);\n+\n+\t\tfinal VerifiableProperties verifiableProperties = new VerifiableProperties(props);\n+\t\treturn new kafka.serializer.StringDecoder(verifiableProperties).fromBytes(bytes);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/serializer/common/StringDecoder.java", "position": null, "original_position": 44, "commit_id": "c8a2273315f47d06d5ae686abb304f6a4ece59f0", "original_commit_id": "3b6baa7684153492a6df25779976e55b34a80645", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "Just looked at the Scala bytecode and the only state (field) is the encoding - it looks thread-safe and we can use a `final`instance as long as we pass the encoding in via a constructor instead of a setter.\n", "created_at": "2014-11-12T20:36:09Z", "updated_at": "2014-11-12T20:47:13Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/131#discussion_r20248629", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/131", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248629"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/131#discussion_r20248629"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/131"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248948", "pull_request_review_id": null, "id": 20248948, "diff_hunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2002-2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.integration.kafka.serializer.common;\n+\n+import java.util.Properties;\n+\n+import kafka.serializer.Decoder;\n+import kafka.utils.VerifiableProperties;\n+\n+\n+/**\n+ * String Decoder for Kafka message key/value decoding.\n+ * The Default decoder returns the same byte array it takes in.\n+ *\n+ * @author Soby Chacko\n+ */\n+public class StringDecoder implements Decoder<String> {\n+\n+\tprivate String encoding = \"UTF8\";\n+\n+\tpublic void setEncoding(final String encoding) {\n+\t\tthis.encoding = encoding;\n+\t}\n+\n+\t@Override\n+\tpublic String fromBytes(byte[] bytes) {\n+\t\tfinal Properties props = new Properties();\n+\t\tprops.put(\"serializer.encoding\", encoding);\n+\n+\t\tfinal VerifiableProperties verifiableProperties = new VerifiableProperties(props);\n+\t\treturn new kafka.serializer.StringDecoder(verifiableProperties).fromBytes(bytes);", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/serializer/common/StringDecoder.java", "position": null, "original_position": 44, "commit_id": "c8a2273315f47d06d5ae686abb304f6a4ece59f0", "original_commit_id": "3b6baa7684153492a6df25779976e55b34a80645", "user": {"login": "ilayaperumalg", "id": 151690, "avatar_url": "https://avatars2.githubusercontent.com/u/151690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilayaperumalg", "html_url": "https://github.com/ilayaperumalg", "followers_url": "https://api.github.com/users/ilayaperumalg/followers", "following_url": "https://api.github.com/users/ilayaperumalg/following{/other_user}", "gists_url": "https://api.github.com/users/ilayaperumalg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilayaperumalg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilayaperumalg/subscriptions", "organizations_url": "https://api.github.com/users/ilayaperumalg/orgs", "repos_url": "https://api.github.com/users/ilayaperumalg/repos", "events_url": "https://api.github.com/users/ilayaperumalg/events{/privacy}", "received_events_url": "https://api.github.com/users/ilayaperumalg/received_events", "type": "User", "site_admin": false}, "body": "I see your point, will fix it shortly.\n", "created_at": "2014-11-12T20:40:56Z", "updated_at": "2014-11-12T20:47:13Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/131#discussion_r20248948", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/131", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248948"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/131#discussion_r20248948"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/131"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/20248948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18331479", "pull_request_review_id": null, "id": 18331479, "diff_hunk": "@@ -13,30 +13,65 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.springframework.integration.kafka.outbound;\n \n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.expression.IntegrationEvaluationContextAware;\n import org.springframework.integration.handler.AbstractMessageHandler;\n import org.springframework.integration.kafka.support.KafkaProducerContext;\n import org.springframework.messaging.Message;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n \n /**\n  * @author Soby Chacko\n+ * @author Artem Bilan\n  * @since 0.5\n  */\n-public class KafkaProducerMessageHandler<K,V> extends AbstractMessageHandler {\n+public class KafkaProducerMessageHandler<K,V> extends AbstractMessageHandler\n+\t\timplements IntegrationEvaluationContextAware {\n \n \tprivate final KafkaProducerContext<K,V> kafkaProducerContext;\n \n+\tprivate EvaluationContext evaluationContext;\n+\n+\tprivate volatile Expression topicExpression;\n+\n+\tprivate volatile Expression messageKeyExpression;\n+\n \tpublic KafkaProducerMessageHandler(final KafkaProducerContext<K,V> kafkaProducerContext) {\n \t\tthis.kafkaProducerContext = kafkaProducerContext;\n \t}\n \n+\t@Override\n+\tpublic void setIntegrationEvaluationContext(EvaluationContext evaluationContext) {\n+\t\tthis.evaluationContext = evaluationContext;", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "position": 47, "original_position": 46, "commit_id": "44e7a3ccce2bd42d11917a2a2e798ee7dc058a8a", "original_commit_id": "045d94ba2a30140a8e69764ec7a42e716d68be38", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "`Assert.notNull()` in `onInit()`\n", "created_at": "2014-10-02T10:16:16Z", "updated_at": "2014-11-13T12:50:49Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/116#discussion_r18331479", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18331479"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/116#discussion_r18331479"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/116"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18331479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18331944", "pull_request_review_id": null, "id": 18331944, "diff_hunk": "@@ -13,30 +13,65 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.springframework.integration.kafka.outbound;\n \n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.expression.IntegrationEvaluationContextAware;\n import org.springframework.integration.handler.AbstractMessageHandler;\n import org.springframework.integration.kafka.support.KafkaProducerContext;\n import org.springframework.messaging.Message;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n \n /**\n  * @author Soby Chacko\n+ * @author Artem Bilan\n  * @since 0.5\n  */\n-public class KafkaProducerMessageHandler<K,V> extends AbstractMessageHandler {\n+public class KafkaProducerMessageHandler<K,V> extends AbstractMessageHandler\n+\t\timplements IntegrationEvaluationContextAware {\n \n \tprivate final KafkaProducerContext<K,V> kafkaProducerContext;\n \n+\tprivate EvaluationContext evaluationContext;\n+\n+\tprivate volatile Expression topicExpression;\n+\n+\tprivate volatile Expression messageKeyExpression;\n+\n \tpublic KafkaProducerMessageHandler(final KafkaProducerContext<K,V> kafkaProducerContext) {\n \t\tthis.kafkaProducerContext = kafkaProducerContext;\n \t}\n \n+\t@Override\n+\tpublic void setIntegrationEvaluationContext(EvaluationContext evaluationContext) {\n+\t\tthis.evaluationContext = evaluationContext;\n+\t}\n+\n+\tpublic void setTopicExpression(Expression topicExpression) {\n+\t\tthis.topicExpression = topicExpression;\n+\t}\n+\n+\tpublic void setMessageKeyExpression(Expression messageKeyExpression) {\n+\t\tthis.messageKeyExpression = messageKeyExpression;\n+\t}\n+\n \tpublic KafkaProducerContext<K,V> getKafkaProducerContext() {\n-\t\treturn kafkaProducerContext;\n+\t\treturn this.kafkaProducerContext;\n \t}\n \n \t@Override\n \tprotected void handleMessageInternal(final Message<?> message) throws Exception {\n-\t\tkafkaProducerContext.send(message);\n+\t\tString topic = this.topicExpression != null\n+\t\t\t\t? this.topicExpression.getValue(this.evaluationContext, message, String.class)\n+\t\t\t\t: message.getHeaders().get(\"topic\", String.class);\n+\t\tAssert.state(StringUtils.hasText(topic), \"'topic' can't be evaluated to empty.\");\n+\t\tObject messageKey = this.messageKeyExpression != null\n+\t\t\t\t? this.messageKeyExpression.getValue(this.evaluationContext, message)\n+\t\t\t\t: message.getHeaders().get(\"messageKey\");", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "position": null, "original_position": 71, "commit_id": "44e7a3ccce2bd42d11917a2a2e798ee7dc058a8a", "original_commit_id": "045d94ba2a30140a8e69764ec7a42e716d68be38", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "A bit late now, but these should really be `KafkaHeaders` constants with prefixes (`kafka_*`).\n", "created_at": "2014-10-02T10:31:44Z", "updated_at": "2014-11-13T12:50:49Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/116#discussion_r18331944", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18331944"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/116#discussion_r18331944"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/116"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18331944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18332109", "pull_request_review_id": null, "id": 18332109, "diff_hunk": "@@ -13,30 +13,65 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.springframework.integration.kafka.outbound;\n \n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.expression.IntegrationEvaluationContextAware;\n import org.springframework.integration.handler.AbstractMessageHandler;\n import org.springframework.integration.kafka.support.KafkaProducerContext;\n import org.springframework.messaging.Message;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n \n /**\n  * @author Soby Chacko\n+ * @author Artem Bilan\n  * @since 0.5\n  */\n-public class KafkaProducerMessageHandler<K,V> extends AbstractMessageHandler {\n+public class KafkaProducerMessageHandler<K,V> extends AbstractMessageHandler\n+\t\timplements IntegrationEvaluationContextAware {\n \n \tprivate final KafkaProducerContext<K,V> kafkaProducerContext;\n \n+\tprivate EvaluationContext evaluationContext;\n+\n+\tprivate volatile Expression topicExpression;\n+\n+\tprivate volatile Expression messageKeyExpression;\n+\n \tpublic KafkaProducerMessageHandler(final KafkaProducerContext<K,V> kafkaProducerContext) {\n \t\tthis.kafkaProducerContext = kafkaProducerContext;\n \t}\n \n+\t@Override\n+\tpublic void setIntegrationEvaluationContext(EvaluationContext evaluationContext) {\n+\t\tthis.evaluationContext = evaluationContext;\n+\t}\n+\n+\tpublic void setTopicExpression(Expression topicExpression) {\n+\t\tthis.topicExpression = topicExpression;\n+\t}\n+\n+\tpublic void setMessageKeyExpression(Expression messageKeyExpression) {\n+\t\tthis.messageKeyExpression = messageKeyExpression;\n+\t}\n+\n \tpublic KafkaProducerContext<K,V> getKafkaProducerContext() {\n-\t\treturn kafkaProducerContext;\n+\t\treturn this.kafkaProducerContext;\n \t}\n \n \t@Override\n \tprotected void handleMessageInternal(final Message<?> message) throws Exception {\n-\t\tkafkaProducerContext.send(message);\n+\t\tString topic = this.topicExpression != null\n+\t\t\t\t? this.topicExpression.getValue(this.evaluationContext, message, String.class)\n+\t\t\t\t: message.getHeaders().get(\"topic\", String.class);\n+\t\tAssert.state(StringUtils.hasText(topic), \"'topic' can't be evaluated to empty.\");\n+\t\tObject messageKey = this.messageKeyExpression != null\n+\t\t\t\t? this.messageKeyExpression.getValue(this.evaluationContext, message)\n+\t\t\t\t: message.getHeaders().get(\"messageKey\");", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "position": null, "original_position": 71, "commit_id": "44e7a3ccce2bd42d11917a2a2e798ee7dc058a8a", "original_commit_id": "045d94ba2a30140a8e69764ec7a42e716d68be38", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "I think we can do that right now, because we don't have yet any GA, so end-users should admit that our next Milestone may change something radically\n", "created_at": "2014-10-02T10:37:55Z", "updated_at": "2014-11-13T12:50:49Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/116#discussion_r18332109", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18332109"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/116#discussion_r18332109"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/116"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18332109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18852775", "pull_request_review_id": null, "id": 18852775, "diff_hunk": "@@ -13,30 +13,65 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.springframework.integration.kafka.outbound;\n \n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.Expression;\n+import org.springframework.integration.expression.IntegrationEvaluationContextAware;\n import org.springframework.integration.handler.AbstractMessageHandler;\n import org.springframework.integration.kafka.support.KafkaProducerContext;\n import org.springframework.messaging.Message;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n \n /**\n  * @author Soby Chacko\n+ * @author Artem Bilan\n  * @since 0.5\n  */\n-public class KafkaProducerMessageHandler<K,V> extends AbstractMessageHandler {\n+public class KafkaProducerMessageHandler<K,V> extends AbstractMessageHandler\n+\t\timplements IntegrationEvaluationContextAware {\n \n \tprivate final KafkaProducerContext<K,V> kafkaProducerContext;\n \n+\tprivate EvaluationContext evaluationContext;\n+\n+\tprivate volatile Expression topicExpression;\n+\n+\tprivate volatile Expression messageKeyExpression;\n+\n \tpublic KafkaProducerMessageHandler(final KafkaProducerContext<K,V> kafkaProducerContext) {\n \t\tthis.kafkaProducerContext = kafkaProducerContext;\n \t}\n \n+\t@Override\n+\tpublic void setIntegrationEvaluationContext(EvaluationContext evaluationContext) {\n+\t\tthis.evaluationContext = evaluationContext;\n+\t}\n+\n+\tpublic void setTopicExpression(Expression topicExpression) {\n+\t\tthis.topicExpression = topicExpression;\n+\t}\n+\n+\tpublic void setMessageKeyExpression(Expression messageKeyExpression) {\n+\t\tthis.messageKeyExpression = messageKeyExpression;\n+\t}\n+\n \tpublic KafkaProducerContext<K,V> getKafkaProducerContext() {\n-\t\treturn kafkaProducerContext;\n+\t\treturn this.kafkaProducerContext;\n \t}\n \n \t@Override\n \tprotected void handleMessageInternal(final Message<?> message) throws Exception {\n-\t\tkafkaProducerContext.send(message);\n+\t\tString topic = this.topicExpression != null\n+\t\t\t\t? this.topicExpression.getValue(this.evaluationContext, message, String.class)\n+\t\t\t\t: message.getHeaders().get(\"topic\", String.class);\n+\t\tAssert.state(StringUtils.hasText(topic), \"'topic' can't be evaluated to empty.\");\n+\t\tObject messageKey = this.messageKeyExpression != null\n+\t\t\t\t? this.messageKeyExpression.getValue(this.evaluationContext, message)\n+\t\t\t\t: message.getHeaders().get(\"messageKey\");", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "position": null, "original_position": 71, "commit_id": "44e7a3ccce2bd42d11917a2a2e798ee7dc058a8a", "original_commit_id": "045d94ba2a30140a8e69764ec7a42e716d68be38", "user": {"login": "garyrussell", "id": 483832, "avatar_url": "https://avatars3.githubusercontent.com/u/483832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyrussell", "html_url": "https://github.com/garyrussell", "followers_url": "https://api.github.com/users/garyrussell/followers", "following_url": "https://api.github.com/users/garyrussell/following{/other_user}", "gists_url": "https://api.github.com/users/garyrussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyrussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyrussell/subscriptions", "organizations_url": "https://api.github.com/users/garyrussell/orgs", "repos_url": "https://api.github.com/users/garyrussell/repos", "events_url": "https://api.github.com/users/garyrussell/events{/privacy}", "received_events_url": "https://api.github.com/users/garyrussell/received_events", "type": "User", "site_admin": false}, "body": "We will need to make sure XD changes it too - the kafka bus PR uses a hard-coded `messageKey`.\n\ncc/ @ericbottard\n", "created_at": "2014-10-14T19:33:51Z", "updated_at": "2014-11-13T12:50:49Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/116#discussion_r18852775", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18852775"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/116#discussion_r18852775"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/116"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/18852775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26298860", "pull_request_review_id": null, "id": 26298860, "diff_hunk": "@@ -0,0 +1,4 @@\n+/target/\n+/.settings/\n+/.classpath\n+/.project", "path": "spring-integration-hazelcast/.gitignore", "position": null, "original_position": 4, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Hi, @erenavsarogullari !\n\nLet's start to work with your solution!\n\nSee my comments, and if you won't mind in changes there is no reason to comment like `Fixed`, do not spam me :smile: .\nPlease, add comment like `Pushed` when you have pushed some commit.\n\nSo, the first comment: this file is redundant. All these ignore options are covered in the root dir with the same `.gitignore`\n", "created_at": "2015-03-12T13:02:11Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26298860", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26298860"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26298860"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26298860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299008", "pull_request_review_id": null, "id": 26299008, "diff_hunk": "@@ -0,0 +1,301 @@\n+SPRING INTEGRATION HAZELCAST SUPPORT\n+====================================\n+\n+## HAZELCAST EVENT-DRIVEN INBOUND CHANNEL ADAPTER \n+\n+Hazelcast provides distributed data structures such as \n+\n+* com.hazelcast.core.IMap, \n+* com.hazelcast.core.MultiMap, \n+* com.hazelcast.core.IList, \n+* com.hazelcast.core.ISet, \n+* com.hazelcast.core.IQueue, \n+* com.hazelcast.core.ITopic,\n+* com.hazelcast.core.ReplicatedMap. \n+\n+It also provides event listeners in order to listen to the modifications performed on these data structures. \n+\n+* com.hazelcast.core.EntryListener<K, V>\n+* com.hazelcast.core.ItemListener<E>\n+* com.hazelcast.core.MessageListener<E>\n+\n+Hazecast Event-Driven Inbound Channel Adapter listens related cache events and sends event messages to defined channel. Its basic definition is as follows : ", "path": "spring-integration-hazelcast/README.md", "position": null, "original_position": 22, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Typo: Haze**l**cast \n", "created_at": "2015-03-12T13:05:18Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299008", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299008"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299008"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299181", "pull_request_review_id": null, "id": 26299181, "diff_hunk": "@@ -0,0 +1,301 @@\n+SPRING INTEGRATION HAZELCAST SUPPORT\n+====================================\n+\n+## HAZELCAST EVENT-DRIVEN INBOUND CHANNEL ADAPTER \n+\n+Hazelcast provides distributed data structures such as \n+\n+* com.hazelcast.core.IMap, \n+* com.hazelcast.core.MultiMap, \n+* com.hazelcast.core.IList, \n+* com.hazelcast.core.ISet, \n+* com.hazelcast.core.IQueue, \n+* com.hazelcast.core.ITopic,\n+* com.hazelcast.core.ReplicatedMap. \n+\n+It also provides event listeners in order to listen to the modifications performed on these data structures. \n+\n+* com.hazelcast.core.EntryListener<K, V>\n+* com.hazelcast.core.ItemListener<E>\n+* com.hazelcast.core.MessageListener<E>\n+\n+Hazecast Event-Driven Inbound Channel Adapter listens related cache events and sends event messages to defined channel. Its basic definition is as follows : \n+```\n+   <int-hazelcast:inbound-channel-adapter channel=\"mapChannel\" \n+\t\t\t\t\t  cache=\"map\" \n+\t\t\t\t\t  cache-events=\"UPDATED, REMOVED\"\n+\t\t\t\t\t  cache-listening-policy=\"SINGLE\" /> \n+```\n+Basically, Hazecast Event-Driven Inbound Channel Adapter requires following attributes : \n+\n+* **channel :** Specifies channel which message is sent. It is mandatory attribute. \n+* **cache :** Specifies the distributed Object reference which is listened. It is mandatory attribute.\n+* **cache-events :** Specifies cache events which are listened. It is optional attribute and its default value is ADDED. Its supported values are as follows : \n+\n+1. Supported cache event types for IMap and MultiMap : ADDED, REMOVED, UPDATED, EVICTED, EVICT_ALL and CLEAR_ALL. \n+2. Supported cache event types for ReplicatedMap : ADDED, REMOVED, UPDATED, EVICTED. \n+3. Supported cache event types for IList, ISet and IQueue : ADDED, REMOVED. \n+4. There is no need to cache event type definition for ITopic. \n+\n+* **cache-listening-policy :** Specifies cache listening policy as SINGLE or ALL. It is optional attribute and its default value is SINGLE. Each Hazelcast inbound channel adapter which listens same cache object with same cache-events attribute, can receive a single event message or all event messages. If this is ALL, all Hazelcast inbound channel adapters which listens same cache object with same cache-events attribute, will receive same event messages. If this is SINGLE, they will receive unique event messages.\n+\n+Sample namespace and schemaLocation definitions are as follows : \n+```\n+xmlns:int-hazelcast= \u201chttp://www.springframework.org/schema/integration/hazelcast\u201d\n+\n+xsi:schemaLocation=\"http://www.springframework.org/schema/integration/hazelcast\n+\t\t  classpath:org/springframework/integration/hazelcast/config/xml/spring-integration-hazelcast-4.2.xsd\u201d", "path": "spring-integration-hazelcast/README.md", "position": null, "original_position": 47, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Why `4.2` ?\nThis project definitely will be as separate one, like SI-Kafka, SI-Splunk, SI-AWS etc..\nSo, `1.0`.\n", "created_at": "2015-03-12T13:08:17Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299181", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299181"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299181"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299555", "pull_request_review_id": null, "id": 26299555, "diff_hunk": "@@ -0,0 +1,27 @@\n+apply plugin: 'java'\n+apply plugin: 'maven'\n+\n+group = 'org.springframework.integration'\n+version = '0.0.1-SNAPSHOT'", "path": "spring-integration-hazelcast/build.gradle", "position": null, "original_position": 5, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "`version = '1.0.0-BUILD-SNAPSHOT'` and in the separate `gradle.properties` file.\nIt allows `Build-Master` to change the value on release automatically.\n", "created_at": "2015-03-12T13:15:29Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299555", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299555"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299555"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299741", "pull_request_review_id": null, "id": 26299741, "diff_hunk": "@@ -0,0 +1,27 @@\n+apply plugin: 'java'\n+apply plugin: 'maven'\n+\n+group = 'org.springframework.integration'\n+version = '0.0.1-SNAPSHOT'\n+\n+description = 'Spring Integration Hazelcast Support'\n+\n+sourceCompatibility = 1.7\n+targetCompatibility = 1.7\n+\n+\n+\n+repositories {\n+        \n+     maven { url \"http://repo.maven.apache.org/maven2\" }\n+}\n+\n+dependencies {\n+    compile group: 'org.springframework', name: 'spring-context', version:'4.1.5.RELEASE'\n+    compile group: 'org.springframework.integration', name: 'spring-integration-core', version:'4.1.2.RELEASE'\n+    compile group: 'com.hazelcast', name: 'hazelcast', version:'3.4.1'\n+    compile group: 'com.hazelcast', name: 'hazelcast-spring', version:'3.4.1'\n+    compile group: 'com.hazelcast', name: 'hazelcast-client', version:'3.4.1'\n+    compile group: 'junit', name: 'junit', version:'4.12'\n+    testCompile group: 'org.springframework', name: 'spring-test', version:'4.1.5.RELEASE'\n+}", "path": "spring-integration-hazelcast/build.gradle", "position": null, "original_position": 27, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "This `build.gradle` looks bad for me.\nPlease, take a look to the https://github.com/spring-projects/spring-integration-java-dsl how to organize `build` stuff: `publish-maven.gradle`, `settings.gradle`, appropriate plugins for the `build.gradle` etc..\n", "created_at": "2015-03-12T13:18:50Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299741", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299741"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299741"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299789", "pull_request_review_id": null, "id": 26299789, "diff_hunk": "@@ -0,0 +1,6 @@\n+#Sat Feb 28 23:55:39 GMT 2015\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-2.3-bin.zip", "path": "spring-integration-hazelcast/gradle/wrapper/gradle-wrapper.properties", "position": null, "original_position": 6, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "When you come up with the `build.gradle` based on that from DSL project, please re-run `wrapper` task to update this file as well for the `all` distribution.\n", "created_at": "2015-03-12T13:19:52Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299789", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299789"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299789"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299847", "pull_request_review_id": null, "id": 26299847, "diff_hunk": "@@ -0,0 +1 @@\n+rootProject.name = 'spring-integration-hazelcast'", "path": "spring-integration-hazelcast/settings.gradle", "position": 1, "original_position": 1, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "OK. Nevermind for the `settings.gradle` :smile: \n", "created_at": "2015-03-12T13:20:57Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299847", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299847"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26299847"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26299847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26300877", "pull_request_review_id": null, "id": 26300877, "diff_hunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.common;\n+\n+import java.util.Set;\n+\n+import reactor.util.StringUtils;\n+\n+import com.hazelcast.core.DistributedObject;\n+import com.hazelcast.core.IList;\n+import com.hazelcast.core.IMap;\n+import com.hazelcast.core.IQueue;\n+import com.hazelcast.core.ISet;\n+\n+/**\n+ * This is common validator class for SI-Hazelcast Support. It validates cache events and\n+ * types.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastIntegrationDefinitionValidator {\n+\n+\tpublic static <E extends Enum<E>> boolean validateEnumType(Class<E> enumType, String cacheEventTypes) {\n+\t\tSet<String> eventTypeSet = StringUtils.commaDelimitedListToSet(cacheEventTypes);\n+\t\tfor (String eventType : eventTypeSet) {\n+\t\t\tEnum.valueOf(enumType, eventType);\n+\t\t}\n+\n+\t\treturn true;\n+\t}\n+\n+\tpublic static boolean validateCacheType(DistributedObject distributedObject) {\n+\t\tif (distributedObject instanceof IMap \n+\t\t\t\t|| distributedObject instanceof IList\n+\t\t\t\t|| distributedObject instanceof ISet\n+\t\t\t\t|| distributedObject instanceof IQueue) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\treturn false;", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/common/HazelcastIntegrationDefinitionValidator.java", "position": null, "original_position": 56, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Can be simplified:\n\n```\n        return distributedObject instanceof IMap\n                || distributedObject instanceof IList\n                || distributedObject instanceof ISet\n                || distributedObject instanceof IQueue;\n\n```\n", "created_at": "2015-03-12T13:35:39Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26300877", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26300877"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26300877"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26300877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26300899", "pull_request_review_id": null, "id": 26300899, "diff_hunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.common;\n+\n+import java.util.Set;\n+\n+import reactor.util.StringUtils;\n+\n+import com.hazelcast.core.DistributedObject;\n+import com.hazelcast.core.IList;\n+import com.hazelcast.core.IMap;\n+import com.hazelcast.core.IQueue;\n+import com.hazelcast.core.ISet;\n+\n+/**\n+ * This is common validator class for SI-Hazelcast Support. It validates cache events and\n+ * types.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastIntegrationDefinitionValidator {\n+\n+\tpublic static <E extends Enum<E>> boolean validateEnumType(Class<E> enumType, String cacheEventTypes) {\n+\t\tSet<String> eventTypeSet = StringUtils.commaDelimitedListToSet(cacheEventTypes);\n+\t\tfor (String eventType : eventTypeSet) {\n+\t\t\tEnum.valueOf(enumType, eventType);\n+\t\t}\n+\n+\t\treturn true;\n+\t}\n+\n+\tpublic static boolean validateCacheType(DistributedObject distributedObject) {\n+\t\tif (distributedObject instanceof IMap \n+\t\t\t\t|| distributedObject instanceof IList\n+\t\t\t\t|| distributedObject instanceof ISet\n+\t\t\t\t|| distributedObject instanceof IQueue) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\treturn false;\n+\t}\n+\n+\tpublic static boolean validateCacheEventByDistributedObject(\n+\t\t\tDistributedObject distributedObject, Set<String> cacheEventTypeSet) {\n+\t\tif ((distributedObject instanceof IList) \n+\t\t\t\t|| (distributedObject instanceof ISet)\n+\t\t\t\t|| (distributedObject instanceof IQueue)) {\n+\n+\t\t\tfor (String cacheEventType : cacheEventTypeSet) {\n+\t\t\t\tif (!(CacheEventType.ADDED.toString().equals(cacheEventType) \n+\t\t\t\t\t\t|| CacheEventType.REMOVED.toString().equals(cacheEventType))) {\n+\t\t\t\t\tthrow new IllegalStateException(\n+\t\t\t\t\t\t\t\"'cache-events' attribute of IList, ISet or IQueue can be set as only \"\n+\t\t\t\t\t\t\t\t\t+ CacheEventType.ADDED.toString() + \" and / or \"\n+\t\t\t\t\t\t\t\t\t+ CacheEventType.REMOVED.toString());\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t}\n+\n+\t\treturn true;", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/common/HazelcastIntegrationDefinitionValidator.java", "position": null, "original_position": 77, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Are all other cases for all other types valid ?\n", "created_at": "2015-03-12T13:36:00Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26300899", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26300899"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26300899"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26300899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26310894", "pull_request_review_id": null, "id": 26310894, "diff_hunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.common;\n+\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n+\n+/**\n+ * This is common utility class for SI-Hazelcast Support feature.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public abstract class HazelcastIntegrationUtils {\n+\t\n+\t/**\n+\t * This constructor is added to prevent instantiation.\n+\t * \n+\t */\n+\tprivate HazelcastIntegrationUtils() {\n+\n+    }\n+\n+\tpublic static void shutdownAllHazelcastInstances() {\n+\t\tif (!Hazelcast.getAllHazelcastInstances().isEmpty()) {\n+\t\t\tfor (HazelcastInstance hazelcastInstance : Hazelcast.getAllHazelcastInstances()) {\n+\t\t\t\thazelcastInstance.shutdown();", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/common/HazelcastIntegrationUtils.java", "position": null, "original_position": 42, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Why `shutdown` all, but not only those which are part of the current application context?\nFrom other side I don't see the reason of this class at all.\nSince we really have this `shutdown()` method we can use it from the `destroy-method` attribute on the `class=\"com.hazelcast.core.Hazelcast\"` bean definition.\nSo, I'd leave it to end-users to destroy their `hazelcastInstance` on their own.\n", "created_at": "2015-03-12T15:20:25Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26310894", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26310894"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26310894"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26310894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311449", "pull_request_review_id": null, "id": 26311449, "diff_hunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.config.xml;\n+\n+import org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n+\n+/**\n+ * SI - Hazelcast Integration base NamespaceHandler class.", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/config/xml/HazelcastIntegrationNamespaceHandler.java", "position": null, "original_position": 22, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Need more graceful JavaDoc\n", "created_at": "2015-03-12T15:25:11Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26311449", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311449"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26311449"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311531", "pull_request_review_id": null, "id": 26311531, "diff_hunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.config.xml;\n+\n+import org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n+\n+/**\n+ * SI - Hazelcast Integration base NamespaceHandler class.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastIntegrationNamespaceHandler extends AbstractIntegrationNamespaceHandler {\n+\n+\tprivate static final String INBOUND_CHANNEL_ADAPTER = \"inbound-channel-adapter\";\n+\n+\tprivate static final String OUTBOUND_CHANNEL_ADAPTER = \"outbound-channel-adapter\";\n+\n+\tprivate static final String CQ_INBOUND_CHANNEL_ADAPTER = \"cq-inbound-channel-adapter\";\n+\n+\tprivate static final String DS_INBOUND_CHANNEL_ADAPTER = \"ds-inbound-channel-adapter\";", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/config/xml/HazelcastIntegrationNamespaceHandler.java", "position": null, "original_position": 36, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Don't see reason of these constants, but it's up to you to leave them or remove.\n", "created_at": "2015-03-12T15:25:51Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26311531", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311531"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26311531"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311788", "pull_request_review_id": null, "id": 26311788, "diff_hunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.config.xml;\n+\n+import org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n+\n+/**\n+ * SI - Hazelcast Integration base NamespaceHandler class.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastIntegrationNamespaceHandler extends AbstractIntegrationNamespaceHandler {\n+\n+\tprivate static final String INBOUND_CHANNEL_ADAPTER = \"inbound-channel-adapter\";\n+\n+\tprivate static final String OUTBOUND_CHANNEL_ADAPTER = \"outbound-channel-adapter\";\n+\n+\tprivate static final String CQ_INBOUND_CHANNEL_ADAPTER = \"cq-inbound-channel-adapter\";\n+\n+\tprivate static final String DS_INBOUND_CHANNEL_ADAPTER = \"ds-inbound-channel-adapter\";\n+\n+\tpublic void init() {\n+\t\tregisterBeanDefinitionParser(INBOUND_CHANNEL_ADAPTER,\n+\t\t\t\tnew HazelcastEventDrivenInboundChannelAdapterParser());\n+\t\tregisterBeanDefinitionParser(OUTBOUND_CHANNEL_ADAPTER,\n+\t\t\t\tnew HazelcastOutboundChannelAdapterParser());\n+\t\tregisterBeanDefinitionParser(CQ_INBOUND_CHANNEL_ADAPTER,\n+\t\t\t\tnew HazelcastContinuousQueryInboundChannelAdapterParser());\n+\t\tregisterBeanDefinitionParser(DS_INBOUND_CHANNEL_ADAPTER,\n+\t\t\t\tnew HazelcastDistributedSQLInboundChannelAdapterParser());\n+\t}\n+\n+}", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/config/xml/HazelcastIntegrationNamespaceHandler.java", "position": null, "original_position": 49, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Be sure that your IDE ensures new line in the end of each file.\nPlus take care about any trailing whitespaces: or manually using refactoring tool or via IDE configuration.\n", "created_at": "2015-03-12T15:28:17Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26311788", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311788"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26311788"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26311788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313009", "pull_request_review_id": null, "id": 26313009, "diff_hunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.context;\n+\n+import java.net.SocketAddress;\n+import java.util.concurrent.locks.Lock;\n+\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.core.MultiMap;\n+\n+import org.springframework.context.ApplicationListener;\n+import org.springframework.context.event.ContextRefreshedEvent;\n+import org.springframework.integration.hazelcast.listener.HazelcastMembershipListener;\n+\n+/**\n+ * This class handles ApplicationContext initialization or refresh events and enables a\n+ * Hazelcast MembershipListener to listen for membership updates. It also creates a\n+ * multi-map for hazelcast instances' socket address information which used hazelcast\n+ * event-driven inbound channel adapter.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class ApplicationContextStartEventHandler implements ApplicationListener<ContextRefreshedEvent> {", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/context/ApplicationContextStartEventHandler.java", "position": null, "original_position": 40, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Need better name for the class.\n", "created_at": "2015-03-12T15:39:27Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313009", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313009"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313009"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313142", "pull_request_review_id": null, "id": 26313142, "diff_hunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.context;\n+\n+import java.net.SocketAddress;\n+import java.util.concurrent.locks.Lock;\n+\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.core.MultiMap;\n+\n+import org.springframework.context.ApplicationListener;\n+import org.springframework.context.event.ContextRefreshedEvent;\n+import org.springframework.integration.hazelcast.listener.HazelcastMembershipListener;\n+\n+/**\n+ * This class handles ApplicationContext initialization or refresh events and enables a\n+ * Hazelcast MembershipListener to listen for membership updates. It also creates a\n+ * multi-map for hazelcast instances' socket address information which used hazelcast\n+ * event-driven inbound channel adapter.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class ApplicationContextStartEventHandler implements ApplicationListener<ContextRefreshedEvent> {\n+\n+\tpublic static final String HZ_INTERNAL_CONFIGURATION_MULTI_MAP = \"HZ_INTERNAL_CONFIGURATION_MULTI_MAP\";\n+\n+\tpublic static final String HZ_INTERNAL_CONFIGURATION_MULTI_MAP_LOCK = \"HZ_INTERNAL_CONFIGURATION_MULTI_MAP_LOCK\";\n+\n+\t@Override\n+\tpublic void onApplicationEvent(ContextRefreshedEvent event) {\n+\t\tif (!Hazelcast.getAllHazelcastInstances().isEmpty()) {", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/context/ApplicationContextStartEventHandler.java", "position": null, "original_position": 48, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Need to add `inititalization` barrier, because there maybe not one `ContextRefreshedEvent`.\nFrom other side looks like `SmartInitializingSingleton` would be better solution.\n", "created_at": "2015-03-12T15:40:50Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313142", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313142"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313142"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313383", "pull_request_review_id": null, "id": 26313383, "diff_hunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import com.hazelcast.core.IMap;\n+import com.hazelcast.query.SqlPredicate;\n+\n+import org.springframework.integration.hazelcast.listener.HazelcastEntryListener;\n+\n+/**\n+ * Hazelcast Continuous Query Message Producer is a message producer which enables\n+ * HazelcastEntryListener with a SqlPredicate in order to listen related distributed map\n+ * events in the light of defined predicate and sends events to related channel.", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastContinuousQueryMessageProducer.java", "position": null, "original_position": 27, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Any classes in JavaDocs should be wrapped to the `{@link }`.\n", "created_at": "2015-03-12T15:43:10Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313383", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313383"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313383"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313664", "pull_request_review_id": null, "id": 26313664, "diff_hunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import com.hazelcast.core.IMap;\n+import com.hazelcast.query.SqlPredicate;\n+\n+import org.springframework.integration.hazelcast.listener.HazelcastEntryListener;\n+\n+/**\n+ * Hazelcast Continuous Query Message Producer is a message producer which enables\n+ * HazelcastEntryListener with a SqlPredicate in order to listen related distributed map\n+ * events in the light of defined predicate and sends events to related channel.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastContinuousQueryMessageProducer extends HazelcastMessageProducer {\n+\n+\tprivate String predicate;\n+\n+\t@Override\n+\tprotected void doStart() {\n+\t\tif (getDistributedObject() instanceof IMap) {\n+\t\t\t((IMap<?, ?>) getDistributedObject()).addEntryListener(", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastContinuousQueryMessageProducer.java", "position": null, "original_position": 40, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "I guess on the `stop` we must do `removeEntryListener`\n", "created_at": "2015-03-12T15:45:44Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313664", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313664"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313664"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313701", "pull_request_review_id": null, "id": 26313701, "diff_hunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import com.hazelcast.core.IMap;\n+import com.hazelcast.query.SqlPredicate;\n+\n+import org.springframework.integration.hazelcast.listener.HazelcastEntryListener;\n+\n+/**\n+ * Hazelcast Continuous Query Message Producer is a message producer which enables\n+ * HazelcastEntryListener with a SqlPredicate in order to listen related distributed map\n+ * events in the light of defined predicate and sends events to related channel.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastContinuousQueryMessageProducer extends HazelcastMessageProducer {\n+\n+\tprivate String predicate;\n+\n+\t@Override\n+\tprotected void doStart() {\n+\t\tif (getDistributedObject() instanceof IMap) {\n+\t\t\t((IMap<?, ?>) getDistributedObject()).addEntryListener(\n+\t\t\t\t\tnew HazelcastEntryListener(this), new SqlPredicate(this.predicate), true);", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastContinuousQueryMessageProducer.java", "position": null, "original_position": 41, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Should that `includeValue` flag be configurable ?\n", "created_at": "2015-03-12T15:46:04Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313701", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313701"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26313701"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26313701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314099", "pull_request_review_id": null, "id": 26314099, "diff_hunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import com.hazelcast.core.IMap;\n+import com.hazelcast.query.SqlPredicate;\n+\n+import org.springframework.integration.hazelcast.listener.HazelcastEntryListener;\n+\n+/**\n+ * Hazelcast Continuous Query Message Producer is a message producer which enables\n+ * HazelcastEntryListener with a SqlPredicate in order to listen related distributed map\n+ * events in the light of defined predicate and sends events to related channel.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastContinuousQueryMessageProducer extends HazelcastMessageProducer {\n+\n+\tprivate String predicate;\n+\n+\t@Override\n+\tprotected void doStart() {\n+\t\tif (getDistributedObject() instanceof IMap) {\n+\t\t\t((IMap<?, ?>) getDistributedObject()).addEntryListener(\n+\t\t\t\t\tnew HazelcastEntryListener(this), new SqlPredicate(this.predicate), true);\n+\t\t}\n+\t\telse {\n+\t\t\tthrow new IllegalStateException(\n+\t\t\t\t\t\"Invalid 'cache' type is set. Only IMap cache object is acceptable for continuous query.\");", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastContinuousQueryMessageProducer.java", "position": null, "original_position": 45, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Looks for me that we should move this check to the `onInit`.\nThe `start` may be done from the separate Thread, hence our application won't crash for the illegal configuration reason.\n", "created_at": "2015-03-12T15:49:29Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314099", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314099"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314099"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314245", "pull_request_review_id": null, "id": 26314245, "diff_hunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import java.util.Set;\n+\n+import com.hazelcast.core.DistributedObject;\n+\n+import reactor.util.StringUtils;\n+\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.DisposableBean;\n+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.hazelcast.common.CacheListeningPolicyType;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationDefinitionValidator;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationUtils;\n+import org.springframework.integration.hazelcast.context.ApplicationContextStartEventHandler;\n+import org.springframework.messaging.Message;\n+\n+/**\n+ * This is a base class for Hazelcast Event-Driven Message Producers.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastMessageProducer extends MessageProducerSupport implements BeanFactoryPostProcessor, DisposableBean {", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastMessageProducer.java", "position": null, "original_position": 43, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "If this is a `base class` it must be `abstract`\n", "created_at": "2015-03-12T15:51:04Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314245", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314245"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314245"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314485", "pull_request_review_id": null, "id": 26314485, "diff_hunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import java.util.Set;\n+\n+import com.hazelcast.core.DistributedObject;\n+\n+import reactor.util.StringUtils;\n+\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.DisposableBean;\n+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.hazelcast.common.CacheListeningPolicyType;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationDefinitionValidator;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationUtils;\n+import org.springframework.integration.hazelcast.context.ApplicationContextStartEventHandler;\n+import org.springframework.messaging.Message;\n+\n+/**\n+ * This is a base class for Hazelcast Event-Driven Message Producers.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastMessageProducer extends MessageProducerSupport implements BeanFactoryPostProcessor, DisposableBean {\n+\n+\tprivate DistributedObject distributedObject;\n+\n+\tprivate String cacheEventTypes;\n+\n+\tprivate CacheListeningPolicyType cacheListeningPolicy;\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\tif (HazelcastIntegrationDefinitionValidator\n+\t\t\t\t.validateCacheEventByDistributedObject(getDistributedObject(), getCacheEventTypeSet())) {\n+\t\t\tsuper.onInit();", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastMessageProducer.java", "position": null, "original_position": 55, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "The `super.onInit()` as a first line in the method outside of that if.\nFrom other side if our `CacheEventByDistributedObject` isn't valid why just don't throw `IllegalArgumentException`?\nI think there might be a reason to revise that `HazelcastIntegrationDefinitionValidator` do not return `true/false`, but throw appropriate exception to prevent our application to start.\n", "created_at": "2015-03-12T15:53:19Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314485", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314485"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314485"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314602", "pull_request_review_id": null, "id": 26314602, "diff_hunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import java.util.Set;\n+\n+import com.hazelcast.core.DistributedObject;\n+\n+import reactor.util.StringUtils;\n+\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.DisposableBean;\n+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.hazelcast.common.CacheListeningPolicyType;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationDefinitionValidator;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationUtils;\n+import org.springframework.integration.hazelcast.context.ApplicationContextStartEventHandler;\n+import org.springframework.messaging.Message;\n+\n+/**\n+ * This is a base class for Hazelcast Event-Driven Message Producers.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastMessageProducer extends MessageProducerSupport implements BeanFactoryPostProcessor, DisposableBean {\n+\n+\tprivate DistributedObject distributedObject;\n+\n+\tprivate String cacheEventTypes;\n+\n+\tprivate CacheListeningPolicyType cacheListeningPolicy;\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\tif (HazelcastIntegrationDefinitionValidator\n+\t\t\t\t.validateCacheEventByDistributedObject(getDistributedObject(), getCacheEventTypeSet())) {\n+\t\t\tsuper.onInit();\n+\t\t}\n+\t}\n+\n+\tpublic Set<String> getCacheEventTypeSet() {", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastMessageProducer.java", "position": null, "original_position": 59, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Minor, but why `public`? Maybe `protected` as a cause of inheritors ?\n", "created_at": "2015-03-12T15:54:22Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314602", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314602"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314602"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314965", "pull_request_review_id": null, "id": 26314965, "diff_hunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import java.util.Set;\n+\n+import com.hazelcast.core.DistributedObject;\n+\n+import reactor.util.StringUtils;\n+\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.DisposableBean;\n+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.hazelcast.common.CacheListeningPolicyType;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationDefinitionValidator;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationUtils;\n+import org.springframework.integration.hazelcast.context.ApplicationContextStartEventHandler;\n+import org.springframework.messaging.Message;\n+\n+/**\n+ * This is a base class for Hazelcast Event-Driven Message Producers.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastMessageProducer extends MessageProducerSupport implements BeanFactoryPostProcessor, DisposableBean {\n+\n+\tprivate DistributedObject distributedObject;\n+\n+\tprivate String cacheEventTypes;\n+\n+\tprivate CacheListeningPolicyType cacheListeningPolicy;\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\tif (HazelcastIntegrationDefinitionValidator\n+\t\t\t\t.validateCacheEventByDistributedObject(getDistributedObject(), getCacheEventTypeSet())) {\n+\t\t\tsuper.onInit();\n+\t\t}\n+\t}\n+\n+\tpublic Set<String> getCacheEventTypeSet() {\n+\t\treturn StringUtils.commaDelimitedListToSet(getCacheEventTypes());\n+\t}\n+\n+\t@Override\n+\tpublic void sendMessage(Message<?> message) {", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastMessageProducer.java", "position": null, "original_position": 64, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Why `public`, too? \nI see that you need it for the `AbstractHazelcastEventListener`, but looks like it is wrong design. The dependency should be vise versa: `AbstractHazelcastEventListener` in the `HazelcastMessageProducer`. To hide the logic and make our solution more robust from any end-user violations\n", "created_at": "2015-03-12T15:57:27Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314965", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314965"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26314965"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26314965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26315895", "pull_request_review_id": null, "id": 26315895, "diff_hunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import java.util.Set;\n+\n+import com.hazelcast.core.DistributedObject;\n+\n+import reactor.util.StringUtils;\n+\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.DisposableBean;\n+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.hazelcast.common.CacheListeningPolicyType;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationDefinitionValidator;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationUtils;\n+import org.springframework.integration.hazelcast.context.ApplicationContextStartEventHandler;\n+import org.springframework.messaging.Message;\n+\n+/**\n+ * This is a base class for Hazelcast Event-Driven Message Producers.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastMessageProducer extends MessageProducerSupport implements BeanFactoryPostProcessor, DisposableBean {\n+\n+\tprivate DistributedObject distributedObject;\n+\n+\tprivate String cacheEventTypes;\n+\n+\tprivate CacheListeningPolicyType cacheListeningPolicy;\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\tif (HazelcastIntegrationDefinitionValidator\n+\t\t\t\t.validateCacheEventByDistributedObject(getDistributedObject(), getCacheEventTypeSet())) {\n+\t\t\tsuper.onInit();\n+\t\t}\n+\t}\n+\n+\tpublic Set<String> getCacheEventTypeSet() {\n+\t\treturn StringUtils.commaDelimitedListToSet(getCacheEventTypes());\n+\t}\n+\n+\t@Override\n+\tpublic void sendMessage(Message<?> message) {\n+\t\tsuper.sendMessage(message);\n+\t}\n+\n+\t@Override\n+\tpublic void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastMessageProducer.java", "position": null, "original_position": 69, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "No! It's bad at all. No, one active component can be `BeanFactoryPostProcessor`.\nWe are working now with `Early BeanFactory access` issues in the SI core and really don't want to repeat it anywhere.\nSee the `BeanFactoryPostProcessor` JavaDocs to understand when it is needed.\nI understand why it is necessary for your case and we already have a solution.\n1. Implement `IntegrationConfigurationInitializer`\n2. Register a `BeanDefinition` for the `ApplicationContextStartEventHandler` (renamed, of course)\n3. Add your implementation class name to the `META-INF/spring.factories`\n\nSee the sample in that DSL project: https://github.com/spring-projects/spring-integration-java-dsl/blob/master/src/main/resources/META-INF/spring.factories\nOr from the core project, e.g. `JmxIntegrationConfigurationInitializer` or `SecurityIntegrationConfigurationInitializer`\n", "created_at": "2015-03-12T16:06:40Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26315895", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26315895"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26315895"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26315895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26316065", "pull_request_review_id": null, "id": 26316065, "diff_hunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.inbound;\n+\n+import java.util.Set;\n+\n+import com.hazelcast.core.DistributedObject;\n+\n+import reactor.util.StringUtils;\n+\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.DisposableBean;\n+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n+import org.springframework.integration.endpoint.MessageProducerSupport;\n+import org.springframework.integration.hazelcast.common.CacheListeningPolicyType;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationDefinitionValidator;\n+import org.springframework.integration.hazelcast.common.HazelcastIntegrationUtils;\n+import org.springframework.integration.hazelcast.context.ApplicationContextStartEventHandler;\n+import org.springframework.messaging.Message;\n+\n+/**\n+ * This is a base class for Hazelcast Event-Driven Message Producers.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastMessageProducer extends MessageProducerSupport implements BeanFactoryPostProcessor, DisposableBean {\n+\n+\tprivate DistributedObject distributedObject;\n+\n+\tprivate String cacheEventTypes;\n+\n+\tprivate CacheListeningPolicyType cacheListeningPolicy;\n+\n+\t@Override\n+\tprotected void onInit() {\n+\t\tif (HazelcastIntegrationDefinitionValidator\n+\t\t\t\t.validateCacheEventByDistributedObject(getDistributedObject(), getCacheEventTypeSet())) {\n+\t\t\tsuper.onInit();\n+\t\t}\n+\t}\n+\n+\tpublic Set<String> getCacheEventTypeSet() {\n+\t\treturn StringUtils.commaDelimitedListToSet(getCacheEventTypes());\n+\t}\n+\n+\t@Override\n+\tpublic void sendMessage(Message<?> message) {\n+\t\tsuper.sendMessage(message);\n+\t}\n+\n+\t@Override\n+\tpublic void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n+\t\tif (!beanFactory.containsBean(ApplicationContextStartEventHandler.class.getName())) {\n+\t\t\tbeanFactory.registerSingleton(\n+\t\t\t\t\tApplicationContextStartEventHandler.class.getName(),\n+\t\t\t\t\tnew ApplicationContextStartEventHandler());\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void destroy() throws Exception {\n+\t\tHazelcastIntegrationUtils.shutdownAllHazelcastInstances();\n+\t}\n+\n+\tpublic DistributedObject getDistributedObject() {\n+\t\treturn distributedObject;\n+\t}\n+\n+\tpublic void setDistributedObject(DistributedObject distributedObject) {\n+\t\tthis.distributedObject = distributedObject;\n+\t}\n+\n+\tpublic String getCacheEventTypes() {\n+\t\treturn cacheEventTypes;\n+\t}\n+\n+\tpublic void setCacheEventTypes(String cacheEventTypes) {\n+\t\tthis.cacheEventTypes = cacheEventTypes;\n+\t}\n+\n+\tpublic CacheListeningPolicyType getCacheListeningPolicy() {", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/inbound/HazelcastMessageProducer.java", "position": null, "original_position": 98, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "When you rework the components dependency order, all these `public` getters should be `protected`\n", "created_at": "2015-03-12T16:08:04Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26316065", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26316065"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26316065"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26316065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26316449", "pull_request_review_id": null, "id": 26316449, "diff_hunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.hazelcast.listener;\n+\n+import java.net.SocketAddress;\n+import java.util.Set;\n+import java.util.concurrent.locks.Lock;\n+\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.core.MemberAttributeEvent;\n+import com.hazelcast.core.MembershipEvent;\n+import com.hazelcast.core.MembershipListener;\n+import com.hazelcast.core.MultiMap;\n+\n+import org.springframework.integration.hazelcast.context.ApplicationContextStartEventHandler;\n+\n+/**\n+ * This is a Hazelcast cluster membership listener in order to listen for membership\n+ * updates.\n+ * \n+ * @author Eren Avsarogullari\n+ * @since 1.0.0\n+ *\n+ */\n+public class HazelcastMembershipListener implements MembershipListener {\n+\n+\t@Override\n+\tpublic void memberRemoved(MembershipEvent membershipEvent) {\n+\t\tSocketAddress removedMemberSocketAddress = membershipEvent.getMember().getSocketAddress();\n+\t\tSet<HazelcastInstance> hazelcastLocalInstanceSet = Hazelcast.getAllHazelcastInstances();\n+\t\tif (!hazelcastLocalInstanceSet.isEmpty()) {\n+\t\t\tHazelcastInstance hazelcastInstance = hazelcastLocalInstanceSet.iterator().next();\n+\t\t\tLock lock = hazelcastInstance\n+\t\t\t\t\t.getLock(ApplicationContextStartEventHandler.HZ_INTERNAL_CONFIGURATION_MULTI_MAP_LOCK);\n+\t\t\tlock.lock();\n+\t\t\ttry {\n+\t\t\t\tMultiMap<SocketAddress, SocketAddress> configMultiMap = hazelcastInstance\n+\t\t\t\t\t\t.getMultiMap(ApplicationContextStartEventHandler.HZ_INTERNAL_CONFIGURATION_MULTI_MAP);\n+\t\t\t\t\n+\t\t\t\tif (configMultiMap.keySet().contains(removedMemberSocketAddress)) {\n+\t\t\t\t\tSocketAddress newAdminSocketAddress = getNewAdminInstanceSocketAddress(\n+\t\t\t\t\t\t\tconfigMultiMap, removedMemberSocketAddress);\n+\t\t\t\t\tfor (SocketAddress socketAddress : configMultiMap.values()) {\n+\t\t\t\t\t\tif (!socketAddress.equals(removedMemberSocketAddress)) {\n+\t\t\t\t\t\t\tconfigMultiMap.put(newAdminSocketAddress, socketAddress);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tconfigMultiMap.remove(removedMemberSocketAddress);\n+\t\t\t\t} \n+\t\t\t\telse {\n+\t\t\t\t\tconfigMultiMap.remove(configMultiMap.keySet().iterator().next(), removedMemberSocketAddress);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfinally {\n+\t\t\t\tlock.unlock();\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate SocketAddress getNewAdminInstanceSocketAddress(\n+\t\t\tMultiMap<SocketAddress, SocketAddress> configMultiMap, SocketAddress removedMemberSocketAddress) {\n+\t\tfor (SocketAddress socketAddress : configMultiMap.values()) {\n+\t\t\tif (!socketAddress.equals(removedMemberSocketAddress)) {\n+\t\t\t\treturn socketAddress;\n+\t\t\t}\n+\t\t}\n+\n+\t\tthrow new IllegalStateException(\"No Active Hazelcast Instance Found.\");\n+\t}\n+\n+\t@Override\n+\tpublic void memberAdded(MembershipEvent membershipEvent) {\n+\n+\t}", "path": "spring-integration-hazelcast/src/main/java/org/springframework/integration/hazelcast/listener/HazelcastMembershipListener.java", "position": null, "original_position": 89, "commit_id": "500deb02f578ff74679e313aab94b4789312f2bd", "original_commit_id": "20caa3d58770389d7bf23bf1727fb3851e43ab52", "user": {"login": "artembilan", "id": 1071590, "avatar_url": "https://avatars3.githubusercontent.com/u/1071590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artembilan", "html_url": "https://github.com/artembilan", "followers_url": "https://api.github.com/users/artembilan/followers", "following_url": "https://api.github.com/users/artembilan/following{/other_user}", "gists_url": "https://api.github.com/users/artembilan/gists{/gist_id}", "starred_url": "https://api.github.com/users/artembilan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artembilan/subscriptions", "organizations_url": "https://api.github.com/users/artembilan/orgs", "repos_url": "https://api.github.com/users/artembilan/repos", "events_url": "https://api.github.com/users/artembilan/events{/privacy}", "received_events_url": "https://api.github.com/users/artembilan/received_events", "type": "User", "site_admin": false}, "body": "Looks like `extends MembershipAdapter` :smile: \n", "created_at": "2015-03-12T16:10:59Z", "updated_at": "2015-04-01T23:38:56Z", "html_url": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26316449", "pull_request_url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26316449"}, "html": {"href": "https://github.com/spring-projects/spring-integration-extensions/pull/136#discussion_r26316449"}, "pull_request": {"href": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/spring-projects/spring-integration-extensions/pulls/comments/26316449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}}}