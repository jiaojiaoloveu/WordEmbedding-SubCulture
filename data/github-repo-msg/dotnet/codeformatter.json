{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/270", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/270/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/270/events", "html_url": "https://github.com/dotnet/codeformatter/pull/270", "id": 282547317, "number": 270, "title": "Fix corefx contribution process link", "user": {"login": "japj", "id": 512, "avatar_url": "https://avatars2.githubusercontent.com/u/512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japj", "html_url": "https://github.com/japj", "followers_url": "https://api.github.com/users/japj/followers", "following_url": "https://api.github.com/users/japj/following{/other_user}", "gists_url": "https://api.github.com/users/japj/gists{/gist_id}", "starred_url": "https://api.github.com/users/japj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japj/subscriptions", "organizations_url": "https://api.github.com/users/japj/orgs", "repos_url": "https://api.github.com/users/japj/repos", "events_url": "https://api.github.com/users/japj/events{/privacy}", "received_events_url": "https://api.github.com/users/japj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-15T21:04:10Z", "updated_at": "2017-12-15T21:04:10Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/270", "html_url": "https://github.com/dotnet/codeformatter/pull/270", "diff_url": "https://github.com/dotnet/codeformatter/pull/270.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/270.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/268", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/268/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/268/events", "html_url": "https://github.com/dotnet/codeformatter/issues/268", "id": 253084649, "number": 268, "title": "Formatting of generic types in C#7 out declarations", "user": {"login": "JonHanna", "id": 1253369, "avatar_url": "https://avatars3.githubusercontent.com/u/1253369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonHanna", "html_url": "https://github.com/JonHanna", "followers_url": "https://api.github.com/users/JonHanna/followers", "following_url": "https://api.github.com/users/JonHanna/following{/other_user}", "gists_url": "https://api.github.com/users/JonHanna/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonHanna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonHanna/subscriptions", "organizations_url": "https://api.github.com/users/JonHanna/orgs", "repos_url": "https://api.github.com/users/JonHanna/repos", "events_url": "https://api.github.com/users/JonHanna/events{/privacy}", "received_events_url": "https://api.github.com/users/JonHanna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-26T11:11:11Z", "updated_at": "2017-08-26T11:11:11Z", "closed_at": null, "author_association": "NONE", "body": "Given the line\r\n\r\n```C#\r\nif (!_data.TryGetValue(key, out Stack<TValue> stack))\r\n```\r\n\r\nThe formatter produces\r\n```\r\nif (!_data.TryGetValue(key, out Stack < TValue > stack))\r\n```\r\n\r\nSeeming to take the `<` and `>` as operators rather than part of the generic type.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/268/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/267", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/267/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/267/events", "html_url": "https://github.com/dotnet/codeformatter/issues/267", "id": 249101891, "number": 267, "title": "Still in use / relevant?", "user": {"login": "kierenj", "id": 82343, "avatar_url": "https://avatars0.githubusercontent.com/u/82343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierenj", "html_url": "https://github.com/kierenj", "followers_url": "https://api.github.com/users/kierenj/followers", "following_url": "https://api.github.com/users/kierenj/following{/other_user}", "gists_url": "https://api.github.com/users/kierenj/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierenj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierenj/subscriptions", "organizations_url": "https://api.github.com/users/kierenj/orgs", "repos_url": "https://api.github.com/users/kierenj/repos", "events_url": "https://api.github.com/users/kierenj/events{/privacy}", "received_events_url": "https://api.github.com/users/kierenj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-09T17:19:37Z", "updated_at": "2017-10-24T18:16:54Z", "closed_at": null, "author_association": "NONE", "body": "Hi - just checking if this project is a good one to adopt for projects moving forward?  Is there a roadmap for .NET Core support, etc?  Thanks!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/267/reactions", "total_count": 15, "+1": 15, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/266", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/266/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/266/events", "html_url": "https://github.com/dotnet/codeformatter/issues/266", "id": 248700191, "number": 266, "title": "XUnitConverter not working", "user": {"login": "philwindsor", "id": 17576696, "avatar_url": "https://avatars0.githubusercontent.com/u/17576696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philwindsor", "html_url": "https://github.com/philwindsor", "followers_url": "https://api.github.com/users/philwindsor/followers", "following_url": "https://api.github.com/users/philwindsor/following{/other_user}", "gists_url": "https://api.github.com/users/philwindsor/gists{/gist_id}", "starred_url": "https://api.github.com/users/philwindsor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philwindsor/subscriptions", "organizations_url": "https://api.github.com/users/philwindsor/orgs", "repos_url": "https://api.github.com/users/philwindsor/repos", "events_url": "https://api.github.com/users/philwindsor/events{/privacy}", "received_events_url": "https://api.github.com/users/philwindsor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-08T12:35:22Z", "updated_at": "2017-08-08T12:35:22Z", "closed_at": null, "author_association": "NONE", "body": "I've had nothing but trouble trying to get this to work and have hit yet another issue.\r\n\r\n```\r\n SemanticModel semanticModel = await document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\r\n\r\n            List<UsingDirectiveSyntax> newUsings = new List<UsingDirectiveSyntax>();\r\n            bool needsChanges = false;\r\n\r\n            foreach (var usingSyntax in root.Usings)\r\n            {\r\n                var symbolInfo = semanticModel.GetSymbolInfo(usingSyntax.Name);\r\n                if (symbolInfo.Symbol != null)\r\n                {\r\n                    string namespaceDocID = symbolInfo.Symbol.GetDocumentationCommentId();\r\n                    if (s_mstestNamespaces.Contains(namespaceDocID))\r\n                    {\r\n                        needsChanges = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        newUsings.Add(RemoveLeadingAndTrailingCompilerDirectives(usingSyntax));\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    newUsings.Add(RemoveLeadingAndTrailingCompilerDirectives(usingSyntax));\r\n                }\r\n            }\r\n\r\n            if (!needsChanges)\r\n            {\r\n                return document.Project.Solution;\r\n            }\r\n```\r\n\r\nThe above code is from MSTestToXUnitConverter.cs. The issue is when it gets to the using statement for Microsoft.VisualStudio.TestTools.UnitTesting **symbolInfo.Symbol** is null so it doesn't hit the code inside the if statement\r\n\r\nDoes anyone know why this is and how to fix it? I'm using visual studio 2017", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/264", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/264/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/264/events", "html_url": "https://github.com/dotnet/codeformatter/issues/264", "id": 248154604, "number": 264, "title": "Improve experience when the user passes --help, -help, -?, /?, or /help", "user": {"login": "jamesqo", "id": 9159214, "avatar_url": "https://avatars0.githubusercontent.com/u/9159214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesqo", "html_url": "https://github.com/jamesqo", "followers_url": "https://api.github.com/users/jamesqo/followers", "following_url": "https://api.github.com/users/jamesqo/following{/other_user}", "gists_url": "https://api.github.com/users/jamesqo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesqo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesqo/subscriptions", "organizations_url": "https://api.github.com/users/jamesqo/orgs", "repos_url": "https://api.github.com/users/jamesqo/repos", "events_url": "https://api.github.com/users/jamesqo/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesqo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-05T03:27:10Z", "updated_at": "2017-08-05T03:27:10Z", "closed_at": null, "author_association": "NONE", "body": "I didn't read the README thoroughly and tried the above switches to get the usage. Each one of them generates an exception:\r\n\r\n```\r\nC:\\cygwin64\\home\\james>CodeFormatter /?\r\n?\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Invalid project file path: '/?'\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.ReportFailure(ReportMode mode, String message, Func`2 createException)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.TryGetAbsoluteProjectPath(String path, String baseDirectory, ReportMode mode, String& absolutePath)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n^CTerminate batch job (Y/N)? y\r\n\r\nC:\\cygwin64\\home\\james>CodeFormatter --help\r\n--help\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.IO.FileNotFoundException: Project file not found: 'C:\\cygwin64\\home\\james\\--help'\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.ReportFailure(ReportMode mode, String message, Func`2 createException)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.TryGetAbsoluteProjectPath(String path, String baseDirectory, ReportMode mode, String& absolutePath)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n^CTerminate batch job (Y/N)? y\r\n\r\nC:\\cygwin64\\home\\james>CodeFormatter -?\r\n-?\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Invalid project file path: '-?'\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.ReportFailure(ReportMode mode, String message, Func`2 createException)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.TryGetAbsoluteProjectPath(String path, String baseDirectory, ReportMode mode, String& absolutePath)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n^CTerminate batch job (Y/N)? y\r\n\r\nC:\\cygwin64\\home\\james>CodeFormatter -help\r\n-help\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.IO.FileNotFoundException: Project file not found: 'C:\\cygwin64\\home\\james\\-help'\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.ReportFailure(ReportMode mode, String message, Func`2 createException)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.TryGetAbsoluteProjectPath(String path, String baseDirectory, ReportMode mode, String& absolutePath)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n^CTerminate batch job (Y/N)? y\r\n\r\nC:\\cygwin64\\home\\james>\r\n```\r\n\r\nConsider ignoring all other args and dumping the help if any of the args match `/?`, `-?`, `-help`, `--help`, or `/help`.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/262", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/262/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/262/events", "html_url": "https://github.com/dotnet/codeformatter/issues/262", "id": 237125653, "number": 262, "title": "Microsoft.Build.Exceptions.InvalidProjectFileException: The tools version \"14.0\" is unrecognized. Available tools versions are \"2.0\", \"3.5\", \"4.0\". ", "user": {"login": "ohadschn", "id": 8555641, "avatar_url": "https://avatars1.githubusercontent.com/u/8555641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadschn", "html_url": "https://github.com/ohadschn", "followers_url": "https://api.github.com/users/ohadschn/followers", "following_url": "https://api.github.com/users/ohadschn/following{/other_user}", "gists_url": "https://api.github.com/users/ohadschn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadschn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadschn/subscriptions", "organizations_url": "https://api.github.com/users/ohadschn/orgs", "repos_url": "https://api.github.com/users/ohadschn/repos", "events_url": "https://api.github.com/users/ohadschn/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadschn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-20T08:07:42Z", "updated_at": "2017-09-22T11:29:15Z", "closed_at": null, "author_association": "NONE", "body": "I'm getting the following exception. The funny thing is, when I open the csproj it says `ToolsVersion=\"12.0\"` (and not `14.0` as the error below states).\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> Microsoft.Build.Exceptions.InvalidProjectFileException: The tools version \"14.0\" is unrecognized. Available tools versions are \"2.0\", \"3.5\", \"4.0\".  G:\\Development\\Foo\\Bar.csproj\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Evaluation.Project.Data.InitializeForEvaluation(IToolsetProvider toolsetProvider)\r\n   at Microsoft.Build.Evaluation.Evaluator`4..ctor(IEvaluatorData`4 data, ProjectRootElement projectRootElement, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation)\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings)\r\n   at Microsoft.Build.Evaluation.Project..ctor(ProjectRootElement xml, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectFileAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<LoadProjectAsync>d__40.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetOrLoadProjectAsync>d__39.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenSolutionAsync>d__34.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 126\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n```", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/261", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/261/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/261/events", "html_url": "https://github.com/dotnet/codeformatter/issues/261", "id": 230077358, "number": 261, "title": "Add support for MSBuild 15 item metadata attribute notation", "user": {"login": "kzu", "id": 169707, "avatar_url": "https://avatars2.githubusercontent.com/u/169707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kzu", "html_url": "https://github.com/kzu", "followers_url": "https://api.github.com/users/kzu/followers", "following_url": "https://api.github.com/users/kzu/following{/other_user}", "gists_url": "https://api.github.com/users/kzu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kzu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kzu/subscriptions", "organizations_url": "https://api.github.com/users/kzu/orgs", "repos_url": "https://api.github.com/users/kzu/repos", "events_url": "https://api.github.com/users/kzu/events{/privacy}", "received_events_url": "https://api.github.com/users/kzu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-19T20:09:11Z", "updated_at": "2017-10-02T15:26:08Z", "closed_at": null, "author_association": "NONE", "body": "If your projects use, say:\r\n\r\n```\r\n<PackageReference Include=\"Moq\" Version=\"*\" />\r\n```\r\n\r\nWhich is totally valid MSBuild 15+ notation, the tool fails with:\r\n\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> Microsoft.Build.Exceptions.InvalidProjectFileException: The attribute \"Version\" in element <PackageReference> is unrecognized.\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n```\r\n\r\nMost likely because it's referencing MSBuild 14 or prior. \r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/261/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/259", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/259/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/259/events", "html_url": "https://github.com/dotnet/codeformatter/issues/259", "id": 218971553, "number": 259, "title": "Ignoring auto-generated files", "user": {"login": "uioporqwerty", "id": 4053751, "avatar_url": "https://avatars0.githubusercontent.com/u/4053751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uioporqwerty", "html_url": "https://github.com/uioporqwerty", "followers_url": "https://api.github.com/users/uioporqwerty/followers", "following_url": "https://api.github.com/users/uioporqwerty/following{/other_user}", "gists_url": "https://api.github.com/users/uioporqwerty/gists{/gist_id}", "starred_url": "https://api.github.com/users/uioporqwerty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uioporqwerty/subscriptions", "organizations_url": "https://api.github.com/users/uioporqwerty/orgs", "repos_url": "https://api.github.com/users/uioporqwerty/repos", "events_url": "https://api.github.com/users/uioporqwerty/events{/privacy}", "received_events_url": "https://api.github.com/users/uioporqwerty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-03T15:28:34Z", "updated_at": "2017-09-21T17:58:20Z", "closed_at": null, "author_association": "NONE", "body": "With CodeFormatter, how can you tell it to ignore certain files like Reference.cs which are autogenerated files? These take a long time to parse; in our case it takes 2-5 seconds for some files.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/259/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/258", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/258/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/258/events", "html_url": "https://github.com/dotnet/codeformatter/issues/258", "id": 216968936, "number": 258, "title": "Add support for C# 7 tuples ", "user": {"login": "pgrm", "id": 713456, "avatar_url": "https://avatars2.githubusercontent.com/u/713456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgrm", "html_url": "https://github.com/pgrm", "followers_url": "https://api.github.com/users/pgrm/followers", "following_url": "https://api.github.com/users/pgrm/following{/other_user}", "gists_url": "https://api.github.com/users/pgrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgrm/subscriptions", "organizations_url": "https://api.github.com/users/pgrm/orgs", "repos_url": "https://api.github.com/users/pgrm/repos", "events_url": "https://api.github.com/users/pgrm/events{/privacy}", "received_events_url": "https://api.github.com/users/pgrm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-25T11:47:20Z", "updated_at": "2017-03-28T14:55:24Z", "closed_at": null, "author_association": "NONE", "body": "The codeformatter can't deal with the new way of defining tuples in C# 7 (https://docs.microsoft.com/en-us/dotnet/articles/csharp/csharp-7#tuples) \r\n\r\nWhen having the rule active to prefix fields with _ it also prefixes the field names used in the tuple.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/258/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/257", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/257/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/257/events", "html_url": "https://github.com/dotnet/codeformatter/issues/257", "id": 213956129, "number": 257, "title": "Does not convert all upper case const fields to PascalCase", "user": {"login": "dhoehna", "id": 2517139, "avatar_url": "https://avatars3.githubusercontent.com/u/2517139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhoehna", "html_url": "https://github.com/dhoehna", "followers_url": "https://api.github.com/users/dhoehna/followers", "following_url": "https://api.github.com/users/dhoehna/following{/other_user}", "gists_url": "https://api.github.com/users/dhoehna/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhoehna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhoehna/subscriptions", "organizations_url": "https://api.github.com/users/dhoehna/orgs", "repos_url": "https://api.github.com/users/dhoehna/repos", "events_url": "https://api.github.com/users/dhoehna/events{/privacy}", "received_events_url": "https://api.github.com/users/dhoehna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-14T03:05:02Z", "updated_at": "2017-03-14T03:05:02Z", "closed_at": null, "author_association": "NONE", "body": "My private const fields were not converted from MY_CONSTANT to MyConstant (All uppercase to Pascal Case).  I also did not find a rule that did this.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/256", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/256/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/256/events", "html_url": "https://github.com/dotnet/codeformatter/issues/256", "id": 213205306, "number": 256, "title": "Add support for SDK based Projects(.Net Core Project format)", "user": {"login": "basoundr", "id": 10550513, "avatar_url": "https://avatars2.githubusercontent.com/u/10550513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basoundr", "html_url": "https://github.com/basoundr", "followers_url": "https://api.github.com/users/basoundr/followers", "following_url": "https://api.github.com/users/basoundr/following{/other_user}", "gists_url": "https://api.github.com/users/basoundr/gists{/gist_id}", "starred_url": "https://api.github.com/users/basoundr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basoundr/subscriptions", "organizations_url": "https://api.github.com/users/basoundr/orgs", "repos_url": "https://api.github.com/users/basoundr/repos", "events_url": "https://api.github.com/users/basoundr/events{/privacy}", "received_events_url": "https://api.github.com/users/basoundr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-10T00:10:39Z", "updated_at": "2017-08-15T12:47:20Z", "closed_at": null, "author_association": "NONE", "body": "I get the below exception when running CodeFormatter for [Roslyn Project System](https://github.com/dotnet/roslyn-project-system), which has been converted into a SDK based project. The new project format does contain XML namespace. \r\n\r\n```CodeFormatter.exe \"C:\\repos\\roslyn-project-system\\src\\ProjectSystem.sln\"\r\nProjectSystem.sln\r\n\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> Microsoft.Build.Exceptions.InvalidProjectFileException: The default XML namespace of the project must be the MSBuild XML namespace. If the project is authored in the MSBuild 2003 format, please add xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\" to the <Project> element. If the project has been authored in the old 1.0 or 1.2 format, please convert it to MSBuild 2003 format.\r\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\r\n   at Microsoft.Build.Construction.ProjectParser.Parse()\r\n   at Microsoft.Build.Construction.ProjectParser.Parse(XmlDocumentWithLocation document, ProjectRootElement projectRootElement)\r\n   at Microsoft.Build.Construction.ProjectRootElement..ctor(XmlReader xmlReader, ProjectRootElementCache projectRootElementCache, Boolean isExplicitlyLoaded)\r\n   at Microsoft.Build.Construction.ProjectRootElement.Create(XmlReader xmlReader, ProjectCollection projectCollection)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectFileAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<LoadProjectAsync>d__40.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetOrLoadProjectAsync>d__39.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenSolutionAsync>d__34.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 126\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39```", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/256/reactions", "total_count": 13, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/255", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/255/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/255/events", "html_url": "https://github.com/dotnet/codeformatter/issues/255", "id": 210041412, "number": 255, "title": "Add support for .NET 4.6/", "user": {"login": "stuartleeks", "id": 1824461, "avatar_url": "https://avatars1.githubusercontent.com/u/1824461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuartleeks", "html_url": "https://github.com/stuartleeks", "followers_url": "https://api.github.com/users/stuartleeks/followers", "following_url": "https://api.github.com/users/stuartleeks/following{/other_user}", "gists_url": "https://api.github.com/users/stuartleeks/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuartleeks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuartleeks/subscriptions", "organizations_url": "https://api.github.com/users/stuartleeks/orgs", "repos_url": "https://api.github.com/users/stuartleeks/repos", "events_url": "https://api.github.com/users/stuartleeks/events{/privacy}", "received_events_url": "https://api.github.com/users/stuartleeks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-24T12:53:51Z", "updated_at": "2017-06-20T07:58:10Z", "closed_at": null, "author_association": "NONE", "body": "On a machine with just VS2017 installed, .NET 4.5.2 isn't installed and I get the error below.\r\n\r\nIs it possible to create a version that supports .NET 4.6?\r\n\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> System.IO.FileNotFoundException: Could not load file or assembly 'System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n   at Microsoft.Build.Execution.BuildManager.BeginBuild(BuildParameters parameters)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFile.BuildAsync(BuildManager buildManager, BuildParameters parameters, BuildRequestData requestData, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFile.<BuildAsync>d__12.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFile.<BuildAsync>d__10.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpProjectFileLoader.CSharpProjectFile.<GetProjectFileInfoAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<LoadProjectAsync>d__40.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetOrLoadProjectAsync>d__39.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenProjectAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 135\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\r\n   at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 76\r\n   at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\r\n```", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/255/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/254", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/254/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/254/events", "html_url": "https://github.com/dotnet/codeformatter/pull/254", "id": 209931904, "number": 254, "title": "Update to latest roslyn and fix issue in UsingLocationRule", "user": {"login": "alexperovich", "id": 10565410, "avatar_url": "https://avatars3.githubusercontent.com/u/10565410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexperovich", "html_url": "https://github.com/alexperovich", "followers_url": "https://api.github.com/users/alexperovich/followers", "following_url": "https://api.github.com/users/alexperovich/following{/other_user}", "gists_url": "https://api.github.com/users/alexperovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexperovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexperovich/subscriptions", "organizations_url": "https://api.github.com/users/alexperovich/orgs", "repos_url": "https://api.github.com/users/alexperovich/repos", "events_url": "https://api.github.com/users/alexperovich/events{/privacy}", "received_events_url": "https://api.github.com/users/alexperovich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "alexperovich", "id": 10565410, "avatar_url": "https://avatars3.githubusercontent.com/u/10565410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexperovich", "html_url": "https://github.com/alexperovich", "followers_url": "https://api.github.com/users/alexperovich/followers", "following_url": "https://api.github.com/users/alexperovich/following{/other_user}", "gists_url": "https://api.github.com/users/alexperovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexperovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexperovich/subscriptions", "organizations_url": "https://api.github.com/users/alexperovich/orgs", "repos_url": "https://api.github.com/users/alexperovich/repos", "events_url": "https://api.github.com/users/alexperovich/events{/privacy}", "received_events_url": "https://api.github.com/users/alexperovich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alexperovich", "id": 10565410, "avatar_url": "https://avatars3.githubusercontent.com/u/10565410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexperovich", "html_url": "https://github.com/alexperovich", "followers_url": "https://api.github.com/users/alexperovich/followers", "following_url": "https://api.github.com/users/alexperovich/following{/other_user}", "gists_url": "https://api.github.com/users/alexperovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexperovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexperovich/subscriptions", "organizations_url": "https://api.github.com/users/alexperovich/orgs", "repos_url": "https://api.github.com/users/alexperovich/repos", "events_url": "https://api.github.com/users/alexperovich/events{/privacy}", "received_events_url": "https://api.github.com/users/alexperovich/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-02-24T01:07:41Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/254", "html_url": "https://github.com/dotnet/codeformatter/pull/254", "diff_url": "https://github.com/dotnet/codeformatter/pull/254.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/254.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/252", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/252/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/252/events", "html_url": "https://github.com/dotnet/codeformatter/issues/252", "id": 203255560, "number": 252, "title": "Running on folders without projects/solutions", "user": {"login": "tinchou", "id": 1548532, "avatar_url": "https://avatars3.githubusercontent.com/u/1548532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinchou", "html_url": "https://github.com/tinchou", "followers_url": "https://api.github.com/users/tinchou/followers", "following_url": "https://api.github.com/users/tinchou/following{/other_user}", "gists_url": "https://api.github.com/users/tinchou/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinchou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinchou/subscriptions", "organizations_url": "https://api.github.com/users/tinchou/orgs", "repos_url": "https://api.github.com/users/tinchou/repos", "events_url": "https://api.github.com/users/tinchou/events{/privacy}", "received_events_url": "https://api.github.com/users/tinchou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-25T23:40:27Z", "updated_at": "2017-01-25T23:40:27Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI'm trying to run the tool on a bunch of `.cs` files for https://github.com/dotnet/corefx/pull/15477 but it doesn't seem to be able to run on loose files.\r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/252/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/251", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/251/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/251/events", "html_url": "https://github.com/dotnet/codeformatter/pull/251", "id": 201336648, "number": 251, "title": "AppVeyor Build", "user": {"login": "wahmedswl", "id": 15020561, "avatar_url": "https://avatars1.githubusercontent.com/u/15020561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahmedswl", "html_url": "https://github.com/wahmedswl", "followers_url": "https://api.github.com/users/wahmedswl/followers", "following_url": "https://api.github.com/users/wahmedswl/following{/other_user}", "gists_url": "https://api.github.com/users/wahmedswl/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahmedswl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahmedswl/subscriptions", "organizations_url": "https://api.github.com/users/wahmedswl/orgs", "repos_url": "https://api.github.com/users/wahmedswl/repos", "events_url": "https://api.github.com/users/wahmedswl/events{/privacy}", "received_events_url": "https://api.github.com/users/wahmedswl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-17T16:29:17Z", "updated_at": "2017-10-31T22:55:14Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/251", "html_url": "https://github.com/dotnet/codeformatter/pull/251", "diff_url": "https://github.com/dotnet/codeformatter/pull/251.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/251.patch"}, "body": "Hi,\r\n   This will add AppVeyor build with Artifacts to download latest available Build. And it also fixes #250 ", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/251/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/250", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/250/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/250/events", "html_url": "https://github.com/dotnet/codeformatter/issues/250", "id": 201322681, "number": 250, "title": "Nightly Build", "user": {"login": "wahmedswl", "id": 15020561, "avatar_url": "https://avatars1.githubusercontent.com/u/15020561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahmedswl", "html_url": "https://github.com/wahmedswl", "followers_url": "https://api.github.com/users/wahmedswl/followers", "following_url": "https://api.github.com/users/wahmedswl/following{/other_user}", "gists_url": "https://api.github.com/users/wahmedswl/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahmedswl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahmedswl/subscriptions", "organizations_url": "https://api.github.com/users/wahmedswl/orgs", "repos_url": "https://api.github.com/users/wahmedswl/repos", "events_url": "https://api.github.com/users/wahmedswl/events{/privacy}", "received_events_url": "https://api.github.com/users/wahmedswl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-17T15:42:20Z", "updated_at": "2017-01-17T15:42:20Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n   Isn't there anyway to download nightly build. Eg: AppVeyor automated build.\r\n\r\nThanks", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/248", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/248/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/248/events", "html_url": "https://github.com/dotnet/codeformatter/issues/248", "id": 194326536, "number": 248, "title": "CodeFormatter returns with exit code 0 on error", "user": {"login": "hanswolff", "id": 1478348, "avatar_url": "https://avatars3.githubusercontent.com/u/1478348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanswolff", "html_url": "https://github.com/hanswolff", "followers_url": "https://api.github.com/users/hanswolff/followers", "following_url": "https://api.github.com/users/hanswolff/following{/other_user}", "gists_url": "https://api.github.com/users/hanswolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanswolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanswolff/subscriptions", "organizations_url": "https://api.github.com/users/hanswolff/orgs", "repos_url": "https://api.github.com/users/hanswolff/repos", "events_url": "https://api.github.com/users/hanswolff/events{/privacy}", "received_events_url": "https://api.github.com/users/hanswolff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-08T12:43:16Z", "updated_at": "2016-12-08T13:13:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Whenever an error occurs while formatting the CodeFormatter command line returns with exit code 0. In a batch script there is no easy way to find out if the formatting operation has failed. Please fix!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/247", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/247/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/247/events", "html_url": "https://github.com/dotnet/codeformatter/issues/247", "id": 191239157, "number": 247, "title": "XUnitConverter: Add support for converting TestInitialize and TestCleanup attributes to xUnit equivalent", "user": {"login": "tiesmaster", "id": 460904, "avatar_url": "https://avatars0.githubusercontent.com/u/460904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiesmaster", "html_url": "https://github.com/tiesmaster", "followers_url": "https://api.github.com/users/tiesmaster/followers", "following_url": "https://api.github.com/users/tiesmaster/following{/other_user}", "gists_url": "https://api.github.com/users/tiesmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiesmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiesmaster/subscriptions", "organizations_url": "https://api.github.com/users/tiesmaster/orgs", "repos_url": "https://api.github.com/users/tiesmaster/repos", "events_url": "https://api.github.com/users/tiesmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/tiesmaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-23T10:51:43Z", "updated_at": "2017-09-23T06:51:36Z", "closed_at": null, "author_association": "NONE", "body": "I used the converter to successfully convert our MSTest projects to xUnit, except that I noticed that `TestInitialize` and `TestCleanup` attributes were not converted, so I've added that in my own branch ([here](https://github.com/tiesmaster/codeformatter/tree/dev)).\r\n\r\nI think it would be a good addition to the converter, are you guys willing to merge that in? I think the branch requires some work to get it up to PR level, but I don't want to do that if it's not going to be merged ;)", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/246", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/246/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/246/events", "html_url": "https://github.com/dotnet/codeformatter/issues/246", "id": 191149420, "number": 246, "title": "xUnit converter doesn't work for me", "user": {"login": "SuperJMN", "id": 3109851, "avatar_url": "https://avatars3.githubusercontent.com/u/3109851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SuperJMN", "html_url": "https://github.com/SuperJMN", "followers_url": "https://api.github.com/users/SuperJMN/followers", "following_url": "https://api.github.com/users/SuperJMN/following{/other_user}", "gists_url": "https://api.github.com/users/SuperJMN/gists{/gist_id}", "starred_url": "https://api.github.com/users/SuperJMN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SuperJMN/subscriptions", "organizations_url": "https://api.github.com/users/SuperJMN/orgs", "repos_url": "https://api.github.com/users/SuperJMN/repos", "events_url": "https://api.github.com/users/SuperJMN/events{/privacy}", "received_events_url": "https://api.github.com/users/SuperJMN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-22T23:06:16Z", "updated_at": "2016-11-23T10:37:53Z", "closed_at": null, "author_association": "NONE", "body": "I've used the tool over a .csproj project and nothing happened. I haven't found any documentation about how to use it. Could you please upload a mini how-to to teach us?\r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/244", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/244/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/244/events", "html_url": "https://github.com/dotnet/codeformatter/pull/244", "id": 188651453, "number": 244, "title": "Add MemberThis rule. Rule explicitly adds 'this.' before local member\u2026", "user": {"login": "richardstanton", "id": 14844900, "avatar_url": "https://avatars0.githubusercontent.com/u/14844900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardstanton", "html_url": "https://github.com/richardstanton", "followers_url": "https://api.github.com/users/richardstanton/followers", "following_url": "https://api.github.com/users/richardstanton/following{/other_user}", "gists_url": "https://api.github.com/users/richardstanton/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardstanton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardstanton/subscriptions", "organizations_url": "https://api.github.com/users/richardstanton/orgs", "repos_url": "https://api.github.com/users/richardstanton/repos", "events_url": "https://api.github.com/users/richardstanton/events{/privacy}", "received_events_url": "https://api.github.com/users/richardstanton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-10T23:57:14Z", "updated_at": "2017-10-31T22:55:15Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/244", "html_url": "https://github.com/dotnet/codeformatter/pull/244", "diff_url": "https://github.com/dotnet/codeformatter/pull/244.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/244.patch"}, "body": "\u2026 access.\r\n\r\nSome projects use a different naming convention for member access. In an alternative convention in order to easily tell if a variable is a local member the \"this.\" operator is always used. This convention takes a different approach from the existing PrivateFieldNaming rule that adds an underscore on members.\r\n\r\nThis change adds a MemberThis rule that is turned off by default. This would allow an alternative convention to be used by a project that wanted to use the codeformatter.", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/242", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/242/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/242/events", "html_url": "https://github.com/dotnet/codeformatter/issues/242", "id": 183352621, "number": 242, "title": "Save file only if needed", "user": {"login": "r1z1", "id": 4463593, "avatar_url": "https://avatars1.githubusercontent.com/u/4463593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r1z1", "html_url": "https://github.com/r1z1", "followers_url": "https://api.github.com/users/r1z1/followers", "following_url": "https://api.github.com/users/r1z1/following{/other_user}", "gists_url": "https://api.github.com/users/r1z1/gists{/gist_id}", "starred_url": "https://api.github.com/users/r1z1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r1z1/subscriptions", "organizations_url": "https://api.github.com/users/r1z1/orgs", "repos_url": "https://api.github.com/users/r1z1/repos", "events_url": "https://api.github.com/users/r1z1/events{/privacy}", "received_events_url": "https://api.github.com/users/r1z1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-17T08:18:03Z", "updated_at": "2016-10-17T08:18:03Z", "closed_at": null, "author_association": "NONE", "body": "I configured in the pre-build step the execution of codeformatter on all projects. It works fine but I have unnecessary recompilations. Even if the format was already done and when I execute the tool on a file, the file is always saved so it implies a recompilation.\nDo you have any plan to fix that?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/241", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/241/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/241/events", "html_url": "https://github.com/dotnet/codeformatter/issues/241", "id": 168422909, "number": 241, "title": "Need to update xml comments when renaming fields", "user": {"login": "lzybkr", "id": 2148248, "avatar_url": "https://avatars3.githubusercontent.com/u/2148248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lzybkr", "html_url": "https://github.com/lzybkr", "followers_url": "https://api.github.com/users/lzybkr/followers", "following_url": "https://api.github.com/users/lzybkr/following{/other_user}", "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions", "organizations_url": "https://api.github.com/users/lzybkr/orgs", "repos_url": "https://api.github.com/users/lzybkr/repos", "events_url": "https://api.github.com/users/lzybkr/events{/privacy}", "received_events_url": "https://api.github.com/users/lzybkr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-29T21:58:10Z", "updated_at": "2016-07-29T21:58:10Z", "closed_at": null, "author_association": "NONE", "body": "When renaming a private field, xml comments need to be updated as well, e.g.:\n\n``` C#\n        private bool streamObjects;\n\n        /// <summary>\n        /// A collection in which objects that are written using the WriteError\n        /// method are accumulated if <see cref=\"streamObjects\" /> is false.\n        /// </summary>\n        ...\n```\n\nThe formatter renamed the field, but did not change the comment.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/240", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/240/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/240/events", "html_url": "https://github.com/dotnet/codeformatter/issues/240", "id": 167959840, "number": 240, "title": "Reflection, semantic changes", "user": {"login": "tigerclawn82", "id": 457518, "avatar_url": "https://avatars0.githubusercontent.com/u/457518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tigerclawn82", "html_url": "https://github.com/tigerclawn82", "followers_url": "https://api.github.com/users/tigerclawn82/followers", "following_url": "https://api.github.com/users/tigerclawn82/following{/other_user}", "gists_url": "https://api.github.com/users/tigerclawn82/gists{/gist_id}", "starred_url": "https://api.github.com/users/tigerclawn82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tigerclawn82/subscriptions", "organizations_url": "https://api.github.com/users/tigerclawn82/orgs", "repos_url": "https://api.github.com/users/tigerclawn82/repos", "events_url": "https://api.github.com/users/tigerclawn82/events{/privacy}", "received_events_url": "https://api.github.com/users/tigerclawn82/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-27T21:22:20Z", "updated_at": "2016-07-28T16:44:57Z", "closed_at": null, "author_association": "NONE", "body": "Hi, i detected unusual behavior while testing code formatter.\n\nOriginal Code\n\n```\nclass A\n        {\n            public int F1;\n            private int F2;\n            protected int F3;\n            public static int SF;\n\n            public int P1 { get; set; }\n            private int P2 { get; set; }\n            static int SP { get; set; }\n\n            public A()\n            {\n                F2 = 2;\n                F3 = 3;\n            }\n        }\n\n        class B\n        {\n            public int F1;\n            public int F2;\n            public int F3;\n            public static int SF;\n\n            public int P1 { get; set; }\n            public int P2 { get; set; }\n            public int P3 { get; set; }\n            static int SP { get; set; }\n        }\n\n        [Fact]\n        public void Test_Extensions_Generic_Map()\n        {\n            var A = new A\n            {\n                F1 = 1,\n                P1 = 1\n            };\n            A.SF = 4;\n            var B = A.Map<A, B>();\n            Assert.Equal(1, B.F1);\n            Assert.Equal(2, B.F2);\n            Assert.Equal(3, B.F3);\n            Assert.Equal(4, B.SF);\n            Assert.Equal(1, B.P1);\n            Assert.Equal(0, B.P2);\n            Assert.Equal(0, B.P3);\n\n            B = new B\n            {\n                F1 = 2,\n                F2 = 1\n            };\n            B.Map(A, \"F1\", \"p1\");\n            Assert.Equal(2, B.F2);\n            Assert.Equal(3, B.F3);\n            Assert.Equal(4, B.SF);\n            Assert.Equal(0, B.P1);\n            Assert.Equal(0, B.P2);\n            Assert.Equal(0, B.P3);\n        }\n```\n\nFormatted Code\n\n```\nprivate class A\n        {\n            public int F1;\n            private int _F2;\n            protected int F3;\n            public static int SF;\n\n            public int P1 { get; set; }\n            private int P2 { get; set; }\n            private static int SP { get; set; }\n\n            public A()\n            {\n                _F2 = 2;\n                F3 = 3;\n            }\n        }\n\n        private class B\n        {\n            public int F1;\n            public int F2;\n            public int F3;\n            public static int SF;\n\n            public int P1 { get; set; }\n            public int P2 { get; set; }\n            public int P3 { get; set; }\n            private static int SP { get; set; }\n        }\n\n        [Fact]\n        public void Test_Extensions_Generic_Map()\n        {\n            var A = new A\n            {\n                F1 = 1,\n                P1 = 1\n            };\n            A.SF = 4;\n            var B = A.Map<A, B>();\n            Assert.Equal(1, B.F1);\n            Assert.Equal(2, B.F2);\n            Assert.Equal(3, B.F3);\n            Assert.Equal(4, B.SF);\n            Assert.Equal(1, B.P1);\n            Assert.Equal(0, B.P2);\n            Assert.Equal(0, B.P3);\n\n            B = new B\n            {\n                F1 = 2,\n                F2 = 1\n            };\n            B.Map(A, \"F1\", \"p1\");\n            Assert.Equal(2, B.F2);\n            Assert.Equal(3, B.F3);\n            Assert.Equal(4, B.SF);\n            Assert.Equal(0, B.P1);\n            Assert.Equal(0, B.P2);\n            Assert.Equal(0, B.P3);\n        }\n```\n\nBasically code semantic been changed, reflection based usage will break things up. Is there anything that can be configured to skip this kinda behavior?\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/239", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/239/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/239/events", "html_url": "https://github.com/dotnet/codeformatter/issues/239", "id": 167944860, "number": 239, "title": "Stuck on format", "user": {"login": "tigerclawn82", "id": 457518, "avatar_url": "https://avatars0.githubusercontent.com/u/457518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tigerclawn82", "html_url": "https://github.com/tigerclawn82", "followers_url": "https://api.github.com/users/tigerclawn82/followers", "following_url": "https://api.github.com/users/tigerclawn82/following{/other_user}", "gists_url": "https://api.github.com/users/tigerclawn82/gists{/gist_id}", "starred_url": "https://api.github.com/users/tigerclawn82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tigerclawn82/subscriptions", "organizations_url": "https://api.github.com/users/tigerclawn82/orgs", "repos_url": "https://api.github.com/users/tigerclawn82/repos", "events_url": "https://api.github.com/users/tigerclawn82/events{/privacy}", "received_events_url": "https://api.github.com/users/tigerclawn82/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-27T20:10:21Z", "updated_at": "2017-09-21T18:00:07Z", "closed_at": null, "author_association": "NONE", "body": "Hi, i am new to codeformatter and just downloaded release build Code Formatter 1.0.0-alpha6. After extracting the zip, i run codeformatter.exe on a solution file and it get stuck on \n\n```\nC:\\Users\\Administrator\\Downloads\\CodeFormatter\\CodeFormatter>CodeFormatter.exe \"\nD:\\Development\\Production-WS\\Infrastructure\\Infrastructure.sln\"\nInfrastructure.sln\n        Syntax Pass\n        Local Semantic Pass\n        Global Semantic Pass\n```\n\nis there any way i can know that it is really working cuz i waited for long or is there anything i am missing.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/238", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/238/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/238/events", "html_url": "https://github.com/dotnet/codeformatter/pull/238", "id": 160565917, "number": 238, "title": "Diagnostic logging fixes", "user": {"login": "danquirk", "id": 7121557, "avatar_url": "https://avatars2.githubusercontent.com/u/7121557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquirk", "html_url": "https://github.com/danquirk", "followers_url": "https://api.github.com/users/danquirk/followers", "following_url": "https://api.github.com/users/danquirk/following{/other_user}", "gists_url": "https://api.github.com/users/danquirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquirk/subscriptions", "organizations_url": "https://api.github.com/users/danquirk/orgs", "repos_url": "https://api.github.com/users/danquirk/repos", "events_url": "https://api.github.com/users/danquirk/events{/privacy}", "received_events_url": "https://api.github.com/users/danquirk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-16T02:42:54Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/238", "html_url": "https://github.com/dotnet/codeformatter/pull/238", "diff_url": "https://github.com/dotnet/codeformatter/pull/238.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/238.patch"}, "body": "SARIF logs were being incorrectly generated since each error class (syntactic/semantic/etc) was calling LogDiagnostics upon completion. Now all Diagnostics are aggregated together at the end of analysis and then logged, producing a proper JSON output.\n\nI'd merged the 1.3 Roslyn upgrade branch (PR here https://github.com/dotnet/codeformatter/pull/237) from my machine in here to make sure these changes still worked with the new SARIF format. I recommend just browsing the .cs changes or going commit by commit and just looking at the first 2 commits.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/237", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/237/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/237/events", "html_url": "https://github.com/dotnet/codeformatter/pull/237", "id": 160565328, "number": 237, "title": "Upgrade Codeformatter to Roslyn 1.3-beta1", "user": {"login": "danquirk", "id": 7121557, "avatar_url": "https://avatars2.githubusercontent.com/u/7121557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquirk", "html_url": "https://github.com/danquirk", "followers_url": "https://api.github.com/users/danquirk/followers", "following_url": "https://api.github.com/users/danquirk/following{/other_user}", "gists_url": "https://api.github.com/users/danquirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquirk/subscriptions", "organizations_url": "https://api.github.com/users/danquirk/orgs", "repos_url": "https://api.github.com/users/danquirk/repos", "events_url": "https://api.github.com/users/danquirk/events{/privacy}", "received_events_url": "https://api.github.com/users/danquirk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-16T02:36:09Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/237", "html_url": "https://github.com/dotnet/codeformatter/pull/237", "diff_url": "https://github.com/dotnet/codeformatter/pull/237.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/237.patch"}, "body": "Need to upgrade so that we can use the latest ErrorLogger from Roslyn which meets the 1.0 SARIF spec requirements.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/237/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/236", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/236/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/236/events", "html_url": "https://github.com/dotnet/codeformatter/issues/236", "id": 159513015, "number": 236, "title": "Changing copyright header creates duplicate lines.", "user": {"login": "ILMTitan", "id": 16388858, "avatar_url": "https://avatars3.githubusercontent.com/u/16388858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ILMTitan", "html_url": "https://github.com/ILMTitan", "followers_url": "https://api.github.com/users/ILMTitan/followers", "following_url": "https://api.github.com/users/ILMTitan/following{/other_user}", "gists_url": "https://api.github.com/users/ILMTitan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ILMTitan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ILMTitan/subscriptions", "organizations_url": "https://api.github.com/users/ILMTitan/orgs", "repos_url": "https://api.github.com/users/ILMTitan/repos", "events_url": "https://api.github.com/users/ILMTitan/events{/privacy}", "received_events_url": "https://api.github.com/users/ILMTitan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-09T21:31:14Z", "updated_at": "2016-06-09T21:31:14Z", "closed_at": null, "author_association": "NONE", "body": "Changing the copyright header from\n\n```\n// Copyright 2015 Google Inc. All Rights Reserved.\n// Licensed under the Apache License Version 2.0.\n```\n\nto\n\n```\n// Copyright 2016 Google Inc. All Rights Reserved.\n// Licensed under the Apache License Version 2.0.\n```\n\nresults in \n\n```\n// Copyright 2016 Google Inc. All Rights Reserved.\n// Licensed under the Apache License Version 2.0.\n\n// Licensed under the Apache License Version 2.0.\n```\n\non preexisting files.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/235", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/235/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/235/events", "html_url": "https://github.com/dotnet/codeformatter/issues/235", "id": 159046317, "number": 235, "title": "NewLineAbove inserts empty newline when no usings are present", "user": {"login": "mrchief", "id": 781818, "avatar_url": "https://avatars3.githubusercontent.com/u/781818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrchief", "html_url": "https://github.com/mrchief", "followers_url": "https://api.github.com/users/mrchief/followers", "following_url": "https://api.github.com/users/mrchief/following{/other_user}", "gists_url": "https://api.github.com/users/mrchief/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrchief/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrchief/subscriptions", "organizations_url": "https://api.github.com/users/mrchief/orgs", "repos_url": "https://api.github.com/users/mrchief/repos", "events_url": "https://api.github.com/users/mrchief/events{/privacy}", "received_events_url": "https://api.github.com/users/mrchief/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-07T23:19:39Z", "updated_at": "2016-06-07T23:19:39Z", "closed_at": null, "author_association": "NONE", "body": "I assume this rule ensures that there is a newline between usings and namespace declaration. However, it should not insert an empty newline if there are no usings like in the below example.\n\n``` cs\nnamespace abc\n{\n    public enum Term\n    {\n        First,\n        Second,\n        Third,\n        Fourth,\n        Fifth,\n        Sixth,\n        Seventh,\n        Eighth,\n        Ninth,\n        Tenth,\n        Eleventh,\n        Twelfth\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/235/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/233", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/233/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/233/events", "html_url": "https://github.com/dotnet/codeformatter/pull/233", "id": 155481864, "number": 233, "title": "Fix missing MSTestNamespaces.txt in output dir", "user": {"login": "gabrielweyer", "id": 2101647, "avatar_url": "https://avatars2.githubusercontent.com/u/2101647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrielweyer", "html_url": "https://github.com/gabrielweyer", "followers_url": "https://api.github.com/users/gabrielweyer/followers", "following_url": "https://api.github.com/users/gabrielweyer/following{/other_user}", "gists_url": "https://api.github.com/users/gabrielweyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrielweyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrielweyer/subscriptions", "organizations_url": "https://api.github.com/users/gabrielweyer/orgs", "repos_url": "https://api.github.com/users/gabrielweyer/repos", "events_url": "https://api.github.com/users/gabrielweyer/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrielweyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-18T11:49:50Z", "updated_at": "2017-10-31T22:55:14Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/233", "html_url": "https://github.com/dotnet/codeformatter/pull/233", "diff_url": "https://github.com/dotnet/codeformatter/pull/233.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/233.patch"}, "body": "MSTestNamespaces.txt should be copied to output directory if we want to use the tool from command line.\n\nFix #232 \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/232", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/232/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/232/events", "html_url": "https://github.com/dotnet/codeformatter/issues/232", "id": 155479183, "number": 232, "title": "XUnitConverter: MSTestNamespaces.txt should be copied to output directory", "user": {"login": "gabrielweyer", "id": 2101647, "avatar_url": "https://avatars2.githubusercontent.com/u/2101647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrielweyer", "html_url": "https://github.com/gabrielweyer", "followers_url": "https://api.github.com/users/gabrielweyer/followers", "following_url": "https://api.github.com/users/gabrielweyer/following{/other_user}", "gists_url": "https://api.github.com/users/gabrielweyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrielweyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrielweyer/subscriptions", "organizations_url": "https://api.github.com/users/gabrielweyer/orgs", "repos_url": "https://api.github.com/users/gabrielweyer/repos", "events_url": "https://api.github.com/users/gabrielweyer/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrielweyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-18T11:33:48Z", "updated_at": "2016-05-18T11:33:48Z", "closed_at": null, "author_association": "NONE", "body": "`MSTestNamespaces.txt` should be copied to output directory if we want to use the tool from command line.\n\nRight now if we call `\\bin\\XUnitConverter\\Debug\\XUnitConverter.exe <project>` we get a lot of `The MSTestNamespaces.txt file was not found.`.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/231", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/231/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/231/events", "html_url": "https://github.com/dotnet/codeformatter/issues/231", "id": 153626244, "number": 231, "title": "Need to update [DebuggerDisplay] attributes to match renamed field names", "user": {"login": "KirillOsenkov", "id": 679326, "avatar_url": "https://avatars0.githubusercontent.com/u/679326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KirillOsenkov", "html_url": "https://github.com/KirillOsenkov", "followers_url": "https://api.github.com/users/KirillOsenkov/followers", "following_url": "https://api.github.com/users/KirillOsenkov/following{/other_user}", "gists_url": "https://api.github.com/users/KirillOsenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/KirillOsenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KirillOsenkov/subscriptions", "organizations_url": "https://api.github.com/users/KirillOsenkov/orgs", "repos_url": "https://api.github.com/users/KirillOsenkov/repos", "events_url": "https://api.github.com/users/KirillOsenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/KirillOsenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715748, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-08T00:26:02Z", "updated_at": "2016-05-08T00:26:02Z", "closed_at": null, "author_association": "NONE", "body": "If CodeFormatter is renaming a field, it should check whether this field is referenced in [DebuggerDisplay] attribute and rename that accordingly. Otherwise we can end up with a problem:\n\n![image](https://cloud.githubusercontent.com/assets/679326/15095391/a54f9894-1478-11e6-9599-828a5e3aa0ee.png)\n\nSee also:\nhttps://github.com/Microsoft/msbuild/issues/610\nhttps://github.com/SergeyTeplyakov/ErrorProne.NET/issues/7\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/230", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/230/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/230/events", "html_url": "https://github.com/dotnet/codeformatter/issues/230", "id": 149865006, "number": 230, "title": "CodeFormatter should not rename private fields that are part of an interop type.", "user": {"login": "AtsushiKan", "id": 13223578, "avatar_url": "https://avatars0.githubusercontent.com/u/13223578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AtsushiKan", "html_url": "https://github.com/AtsushiKan", "followers_url": "https://api.github.com/users/AtsushiKan/followers", "following_url": "https://api.github.com/users/AtsushiKan/following{/other_user}", "gists_url": "https://api.github.com/users/AtsushiKan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AtsushiKan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AtsushiKan/subscriptions", "organizations_url": "https://api.github.com/users/AtsushiKan/orgs", "repos_url": "https://api.github.com/users/AtsushiKan/repos", "events_url": "https://api.github.com/users/AtsushiKan/events{/privacy}", "received_events_url": "https://api.github.com/users/AtsushiKan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-20T19:36:05Z", "updated_at": "2016-04-20T19:36:05Z", "closed_at": null, "author_association": "MEMBER", "body": "C# structs that are designed to map to known C++ structures for the purposes of P/Invoke'ing are expected to have names that match the original C++ names. CodeFormatter should not add an \"_\" to those fields, even if the field's visibility is \"private.\"\n\nTwo reasons I might put \"private\" on such a field:\n- It represents a union field and I choose to hide it and replace them with strongly typed properties that validate or assert the union discriminator.\n- It represents an obscure/dangerous/hard-to-marshal field that I know my library doesn't reference so I choose to mark it NYOB and have the \"private\" visibility enforce that.\n\nA good rule for deciding whether a struct is an \"interop type\" might be to check if the author explicitly added the [StructLayout(Sequential/Explicit)] tag the struct.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/229", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/229/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/229/events", "html_url": "https://github.com/dotnet/codeformatter/pull/229", "id": 148411093, "number": 229, "title": "Add ability to use tabs", "user": {"login": "michalhosala", "id": 9108373, "avatar_url": "https://avatars0.githubusercontent.com/u/9108373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalhosala", "html_url": "https://github.com/michalhosala", "followers_url": "https://api.github.com/users/michalhosala/followers", "following_url": "https://api.github.com/users/michalhosala/following{/other_user}", "gists_url": "https://api.github.com/users/michalhosala/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalhosala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalhosala/subscriptions", "organizations_url": "https://api.github.com/users/michalhosala/orgs", "repos_url": "https://api.github.com/users/michalhosala/repos", "events_url": "https://api.github.com/users/michalhosala/events{/privacy}", "received_events_url": "https://api.github.com/users/michalhosala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-14T16:11:29Z", "updated_at": "2017-10-31T22:55:15Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/229", "html_url": "https://github.com/dotnet/codeformatter/pull/229", "diff_url": "https://github.com/dotnet/codeformatter/pull/229.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/229.patch"}, "body": "Added functionality which addresses issue #174, i.e. ability to use tabs instead of spaces during formatting. New command line switch /usetabs was introduced for this purpose.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/228", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/228/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/228/events", "html_url": "https://github.com/dotnet/codeformatter/issues/228", "id": 148296240, "number": 228, "title": "Web projects require Visual Studio 2015 installation", "user": {"login": "michalhosala", "id": 9108373, "avatar_url": "https://avatars0.githubusercontent.com/u/9108373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalhosala", "html_url": "https://github.com/michalhosala", "followers_url": "https://api.github.com/users/michalhosala/followers", "following_url": "https://api.github.com/users/michalhosala/following{/other_user}", "gists_url": "https://api.github.com/users/michalhosala/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalhosala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalhosala/subscriptions", "organizations_url": "https://api.github.com/users/michalhosala/orgs", "repos_url": "https://api.github.com/users/michalhosala/repos", "events_url": "https://api.github.com/users/michalhosala/events{/privacy}", "received_events_url": "https://api.github.com/users/michalhosala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-14T09:00:30Z", "updated_at": "2016-04-14T09:25:51Z", "closed_at": null, "author_association": "NONE", "body": "Your readme.md says:\n\n> In order to build or run this tool you will need to have Microsoft Build Tools 2015 installed.\n\nHowever, that is not enough for web projects. To reproduce:\n\n**Prerequisities:**\n- machine without VS2015 installed,\n- with MS Build Tools 2015 installed,\n- web project, e.g. basic template from VS2012 \"ASP.NET Empty Web Application\", lets call it WebProj.sln\n\n**Steps to reproduce:**\n1. Run `CodeFormatter.exe WebProj.sln`,\n2. Observe exception being thrown:\n\n> Unhandled Exception: System.AggregateException: One or more errors occurred. ---> Microsoft.Build.Exceptions.InvalidProj\n> ectFileException: The imported project \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\WebApplications\\Micr\n> osoft.WebApplication.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the\n> file exists on disk.  C:\\Users\\Administrator\\Desktop\\Projects\\VbWebApplication\\VbWebApplication\\VbWebApplication.vbproj\n>    at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLoca\n> tion elementLocation, String resourceName, Object[] args)\n>    at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(IElementLocation elementLocation, String resource\n> Name, Object arg0)\n>    at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, String importExpressi\n> onEscaped, ProjectImportElement importElement)\n>    at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement\n>  importElement)\n>    at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\n>    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate()\n>    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSetting\n> s loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFac\n> tory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext\n>  buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly)\n>    at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation)\n>    at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subTools\n> etVersion, ProjectLoadSettings loadSettings)\n>    at Microsoft.Build.Evaluation.Project..ctor(ProjectRootElement xml, IDictionary`2 globalProperties, String toolsVersi\n> on, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\n>    at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectAsync>d__5.MoveNext()\n> --- End of stack trace from previous location where exception was thrown ---\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n>    at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectFileAsync>d__3.MoveNext()\n> --- End of stack trace from previous location where exception was thrown ---\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\n>    at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<LoadProjectAsync>d__40.MoveNext()\n> --- End of stack trace from previous location where exception was thrown ---\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n>    at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetOrLoadProjectAsync>d__39.MoveNext()\n> --- End of stack trace from previous location where exception was thrown ---\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n>    at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenSolutionAsync>d__34.MoveNext()\n> --- End of stack trace from previous location where exception was thrown ---\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\n>    at CodeFormatter.Program.<RunFormatItemAsync>d__4.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 12\n> 6\n> --- End of stack trace from previous location where exception was thrown ---\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\n>    at CodeFormatter.Program.<RunFormatAsync>d__3.MoveNext() in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 103\n>    --- End of inner exception stack trace ---\n>    at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n>    at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\n>    at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\n>    at CodeFormatter.Program.RunFormat(CommandLineOptions options) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line\n> 76\n>    at CodeFormatter.Program.Main(String[] args) in E:\\codeformatter\\src\\CodeFormatter\\Program.cs:line 39\n\n**Expected behavior:**\n- Either I would expect the VS2015 to be stated as a prerequisite of the CodeFormatter,\n- Or CodeFormatter should not need file `VisualStudio\\v14.0\\WebApplications\\Microsoft.WebApplication.targets` to work in this scenario,\n- Or to state in your docs that you are not supporting web projects\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/225", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/225/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/225/events", "html_url": "https://github.com/dotnet/codeformatter/issues/225", "id": 147896484, "number": 225, "title": "Address PR Comments for #217", "user": {"login": "basoundr", "id": 10550513, "avatar_url": "https://avatars2.githubusercontent.com/u/10550513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basoundr", "html_url": "https://github.com/basoundr", "followers_url": "https://api.github.com/users/basoundr/followers", "following_url": "https://api.github.com/users/basoundr/following{/other_user}", "gists_url": "https://api.github.com/users/basoundr/gists{/gist_id}", "starred_url": "https://api.github.com/users/basoundr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basoundr/subscriptions", "organizations_url": "https://api.github.com/users/basoundr/orgs", "repos_url": "https://api.github.com/users/basoundr/repos", "events_url": "https://api.github.com/users/basoundr/events{/privacy}", "received_events_url": "https://api.github.com/users/basoundr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-12T22:54:10Z", "updated_at": "2016-04-12T23:09:44Z", "closed_at": null, "author_association": "NONE", "body": "The PR #217 added the ability to run CodeFormatter with Analyzers. This issue has been created to finish the TODO mentioned in the PR.\n\nTODO:\n- [ ] Add some more tests\n- [ ] Log analyzer execution time in SARIF format\n- [ ] Test VB\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/213", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/213/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/213/events", "html_url": "https://github.com/dotnet/codeformatter/issues/213", "id": 134642602, "number": 213, "title": "Unit test failure: CSharpHeaderCorrectAfterMovingUsings", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2016-02-18T17:26:35Z", "updated_at": "2016-02-18T17:26:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/203", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/203/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/203/events", "html_url": "https://github.com/dotnet/codeformatter/issues/203", "id": 124867843, "number": 203, "title": "Add commandline switch to conditionally include project files based on msbuild conditions.", "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-05T00:14:37Z", "updated_at": "2016-01-05T00:30:19Z", "closed_at": null, "author_association": "MEMBER", "body": "Is there a way to do this with .net compiler platform?\n\nFor ex, one of the project files in corefx:\n\n```\n <ItemGroup Condition=\"'$(TargetsFreeBSD)'=='true'\">\n    <Compile Include=\"RuntimeInformation.FreeBSD.cs\" />\n  </ItemGroup>\n  <ItemGroup Condition=\"'$(TargetsLinux)'=='true'\">\n    <Compile Include=\"RuntimeInformation.Linux.cs\" />\n  </ItemGroup>\n```\n\nIs there a way to format all files in the project, which may or may not be in compilation based on msbuild conditions.\n\ncc @srivatsn @jaredpar @mellinoe \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/201", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/201/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/201/events", "html_url": "https://github.com/dotnet/codeformatter/issues/201", "id": 124726915, "number": 201, "title": "Distribute CodeFormatter as NuGet package?", "user": {"login": "ghuntley", "id": 127353, "avatar_url": "https://avatars0.githubusercontent.com/u/127353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghuntley", "html_url": "https://github.com/ghuntley", "followers_url": "https://api.github.com/users/ghuntley/followers", "following_url": "https://api.github.com/users/ghuntley/following{/other_user}", "gists_url": "https://api.github.com/users/ghuntley/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghuntley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghuntley/subscriptions", "organizations_url": "https://api.github.com/users/ghuntley/orgs", "repos_url": "https://api.github.com/users/ghuntley/repos", "events_url": "https://api.github.com/users/ghuntley/events{/privacy}", "received_events_url": "https://api.github.com/users/ghuntley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-04T09:51:51Z", "updated_at": "2016-01-04T09:53:08Z", "closed_at": null, "author_association": "MEMBER", "body": "Howdy,\n\nAny plans to ship CodeFormatter as a NuGet package so it can be installed via the command line:\n\n```\nPM> Install-Package CodeFormatter\n```\n\nExample usages, integration with a git-precommit hook or as part of a FAKE build script.\n\nThe GitHub guys (@shiftkey) have rolled their own package which is perfect but it has been customized for their coding convention used in Octokit -> https://www.nuget.org/packages/Octokit.CodeFormatter/1.0.0-preview\n\nPotential duplicate, see #162.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/201/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/199", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/199/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/199/events", "html_url": "https://github.com/dotnet/codeformatter/issues/199", "id": 119145925, "number": 199, "title": "Support DNX", "user": {"login": "jskeet", "id": 17011, "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jskeet", "html_url": "https://github.com/jskeet", "followers_url": "https://api.github.com/users/jskeet/followers", "following_url": "https://api.github.com/users/jskeet/following{/other_user}", "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions", "organizations_url": "https://api.github.com/users/jskeet/orgs", "repos_url": "https://api.github.com/users/jskeet/repos", "events_url": "https://api.github.com/users/jskeet/events{/privacy}", "received_events_url": "https://api.github.com/users/jskeet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-27T07:37:09Z", "updated_at": "2017-03-12T21:52:23Z", "closed_at": null, "author_association": "NONE", "body": "This is a sort of bigger feature request version of issue #172.\n\nIn the brave new world, DNX-based projects and solutions are going to be more and more common. I haven't yet figured out a way of telling `codeformatter` to format all the code within a DNX solution or DNX project, as you can't specify individual source files (entirely reasonably, given that it's doing more than formatting).\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/198", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/198/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/198/events", "html_url": "https://github.com/dotnet/codeformatter/issues/198", "id": 116861513, "number": 198, "title": "XUnitConverter: StringAssert should be converted to Assert", "user": {"login": "patricksadowski", "id": 9739149, "avatar_url": "https://avatars2.githubusercontent.com/u/9739149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patricksadowski", "html_url": "https://github.com/patricksadowski", "followers_url": "https://api.github.com/users/patricksadowski/followers", "following_url": "https://api.github.com/users/patricksadowski/following{/other_user}", "gists_url": "https://api.github.com/users/patricksadowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/patricksadowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patricksadowski/subscriptions", "organizations_url": "https://api.github.com/users/patricksadowski/orgs", "repos_url": "https://api.github.com/users/patricksadowski/repos", "events_url": "https://api.github.com/users/patricksadowski/events{/privacy}", "received_events_url": "https://api.github.com/users/patricksadowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-13T21:57:11Z", "updated_at": "2015-11-13T21:57:11Z", "closed_at": null, "author_association": "NONE", "body": "Currently no `Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert` assertion is converted to `Xunit.Assert`. I prepared some tests in my [fork](https://github.com/patricksadowski/codeformatter/commits/stringassert).\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/196", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/196/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/196/events", "html_url": "https://github.com/dotnet/codeformatter/issues/196", "id": 116195089, "number": 196, "title": "Codeformatter reformats getter-only auto properties weirdly", "user": {"login": "twsouthwick", "id": 583206, "avatar_url": "https://avatars1.githubusercontent.com/u/583206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twsouthwick", "html_url": "https://github.com/twsouthwick", "followers_url": "https://api.github.com/users/twsouthwick/followers", "following_url": "https://api.github.com/users/twsouthwick/following{/other_user}", "gists_url": "https://api.github.com/users/twsouthwick/gists{/gist_id}", "starred_url": "https://api.github.com/users/twsouthwick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twsouthwick/subscriptions", "organizations_url": "https://api.github.com/users/twsouthwick/orgs", "repos_url": "https://api.github.com/users/twsouthwick/repos", "events_url": "https://api.github.com/users/twsouthwick/events{/privacy}", "received_events_url": "https://api.github.com/users/twsouthwick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-10T20:30:14Z", "updated_at": "2015-11-10T20:30:14Z", "closed_at": null, "author_association": "MEMBER", "body": "Is this expected behavior?\n\nBefore:\n\n``` csharp\nprivate static HashSet<string> Foo { get; } = new HashSet<string>(StringComparer.Ordinal)\n{\n    \"item1\",\n    \"item2\"\n};\n```\n\nAfter:\n\n``` csharp\nprivate static HashSet<string> Foo\n{ get; }\n= new HashSet<string>(StringComparer.Ordinal)\n{\n    \"item1\",\n    \"item2\"\n};\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/194", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/194/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/194/events", "html_url": "https://github.com/dotnet/codeformatter/pull/194", "id": 115614601, "number": 194, "title": "Added a rule to remove #region/#endregion directives.", "user": {"login": "jakesays", "id": 1213805, "avatar_url": "https://avatars1.githubusercontent.com/u/1213805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakesays", "html_url": "https://github.com/jakesays", "followers_url": "https://api.github.com/users/jakesays/followers", "following_url": "https://api.github.com/users/jakesays/following{/other_user}", "gists_url": "https://api.github.com/users/jakesays/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakesays/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakesays/subscriptions", "organizations_url": "https://api.github.com/users/jakesays/orgs", "repos_url": "https://api.github.com/users/jakesays/repos", "events_url": "https://api.github.com/users/jakesays/events{/privacy}", "received_events_url": "https://api.github.com/users/jakesays/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-06T23:55:24Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/194", "html_url": "https://github.com/dotnet/codeformatter/pull/194", "diff_url": "https://github.com/dotnet/codeformatter/pull/194.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/194.patch"}, "body": "Rule to remove regions.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/191", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/191/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/191/events", "html_url": "https://github.com/dotnet/codeformatter/issues/191", "id": 114646125, "number": 191, "title": "Running CodeFormatter renames private fields that have [DataMember] which breaks serialization", "user": {"login": "jaredmoo", "id": 3248887, "avatar_url": "https://avatars0.githubusercontent.com/u/3248887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredmoo", "html_url": "https://github.com/jaredmoo", "followers_url": "https://api.github.com/users/jaredmoo/followers", "following_url": "https://api.github.com/users/jaredmoo/following{/other_user}", "gists_url": "https://api.github.com/users/jaredmoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredmoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredmoo/subscriptions", "organizations_url": "https://api.github.com/users/jaredmoo/orgs", "repos_url": "https://api.github.com/users/jaredmoo/repos", "events_url": "https://api.github.com/users/jaredmoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredmoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-02T17:42:50Z", "updated_at": "2016-04-20T19:37:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "We were bit by a nasty issue that running CodeFormatter broke serialization of a type that had [DataMember] on a private field. CodeFormatter renamed the field, which caused the serialization format to change, so our pre-CodeFormatter and post-CodeFormatter serialization was incompatible.\n\nBelow program demonstrates the issue:\n\n```\nusing System;\nusing System.Runtime.Serialization;\nusing System.Xml;\n\nnamespace DataMemberSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var myData = new MyData(5);\n\n            var dataContractSerializer = new DataContractSerializer(typeof(MyData));\n            using (var xw = XmlWriter.Create(Console.Out, new XmlWriterSettings { Indent = true }))\n            {\n                dataContractSerializer.WriteObject(xw, myData);\n            }\n        }\n    }\n\n    [DataContract]\n    class MyData\n    {\n        [DataMember]\n        private int MyInteger;\n\n        public MyData(int myInteger)\n        {\n            MyInteger = myInteger;\n        }\n    }\n}\n```\n\nBefore CodeFormatter, produces the below output:\n\n```\n<?xml version=\"1.0\" encoding=\"IBM437\"?>\n<MyData xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.datacontract.org/2004/07/DataMemberSample\">\n<MyInteger>5</MyInteger>\n</MyData>\n```\n\nRunning CodeFormatter renames `MyInteger` to `_myInteger`, so now it produces this output:\n\n```\n<?xml version=\"1.0\" encoding=\"IBM437\"?>\n<MyData xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.datacontract.org/2004/07/DataMemberSample\">\n<_myInteger>5</_myInteger>\n</MyData>\n```\n\nOf course we should have had tests that detected this issue, but I should feel confident that CodeFormatter will not affect code functionality.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/190", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/190/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/190/events", "html_url": "https://github.com/dotnet/codeformatter/issues/190", "id": 112480199, "number": 190, "title": "MarkReadonlyFieldsRule throws exception on roslyn-analyzers repo", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715748, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-10-20T23:24:48Z", "updated_at": "2015-11-06T03:10:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Here is the exception:\n\n[MarkReadonlyFieldsRule exception.txt](https://github.com/dotnet/codeformatter/files/17196/MarkReadonlyFieldsRule.exception.txt)\n\n@michaelcfanning, @srivatsn FYI, the first of the class of failures we discussed.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/189", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/189/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/189/events", "html_url": "https://github.com/dotnet/codeformatter/issues/189", "id": 112174258, "number": 189, "title": "Trim trailing whitespace on line comments", "user": {"login": "rainersigwald", "id": 3347530, "avatar_url": "https://avatars1.githubusercontent.com/u/3347530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rainersigwald", "html_url": "https://github.com/rainersigwald", "followers_url": "https://api.github.com/users/rainersigwald/followers", "following_url": "https://api.github.com/users/rainersigwald/following{/other_user}", "gists_url": "https://api.github.com/users/rainersigwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/rainersigwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rainersigwald/subscriptions", "organizations_url": "https://api.github.com/users/rainersigwald/orgs", "repos_url": "https://api.github.com/users/rainersigwald/repos", "events_url": "https://api.github.com/users/rainersigwald/events{/privacy}", "received_events_url": "https://api.github.com/users/rainersigwald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-19T15:52:17Z", "updated_at": "2015-11-11T16:29:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It would be nice if CodeFormatter automatically trimmed trailing spaces in line-comment trivia as well as in code.  I naively assumed it already did until I looked at https://github.com/Microsoft/msbuild/pull/289.\n\nI can't think of a strong reason to oppose this idea, especially since many repos including this one have  a `.editorconfig` with `trim_trailing_whitespace = true`.  But maybe I'm missing something?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/189/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/186", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/186/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/186/events", "html_url": "https://github.com/dotnet/codeformatter/pull/186", "id": 110275367, "number": 186, "title": "code cleanup in XUnitConverter", "user": {"login": "michha", "id": 10424767, "avatar_url": "https://avatars2.githubusercontent.com/u/10424767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michha", "html_url": "https://github.com/michha", "followers_url": "https://api.github.com/users/michha/followers", "following_url": "https://api.github.com/users/michha/following{/other_user}", "gists_url": "https://api.github.com/users/michha/gists{/gist_id}", "starred_url": "https://api.github.com/users/michha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michha/subscriptions", "organizations_url": "https://api.github.com/users/michha/orgs", "repos_url": "https://api.github.com/users/michha/repos", "events_url": "https://api.github.com/users/michha/events{/privacy}", "received_events_url": "https://api.github.com/users/michha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-07T17:21:57Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/186", "html_url": "https://github.com/dotnet/codeformatter/pull/186", "diff_url": "https://github.com/dotnet/codeformatter/pull/186.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/186.patch"}, "body": "- using statements\n- static methods when possible\n- ...\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/184", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/184/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/184/events", "html_url": "https://github.com/dotnet/codeformatter/issues/184", "id": 109413952, "number": 184, "title": "Apparently, CodeFormatter works better when an individual csproj is targeted instead of the entire sln", "user": {"login": "CIPop", "id": 8635911, "avatar_url": "https://avatars2.githubusercontent.com/u/8635911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CIPop", "html_url": "https://github.com/CIPop", "followers_url": "https://api.github.com/users/CIPop/followers", "following_url": "https://api.github.com/users/CIPop/following{/other_user}", "gists_url": "https://api.github.com/users/CIPop/gists{/gist_id}", "starred_url": "https://api.github.com/users/CIPop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CIPop/subscriptions", "organizations_url": "https://api.github.com/users/CIPop/orgs", "repos_url": "https://api.github.com/users/CIPop/repos", "events_url": "https://api.github.com/users/CIPop/events{/privacy}", "received_events_url": "https://api.github.com/users/CIPop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-02T01:11:15Z", "updated_at": "2015-10-02T01:11:15Z", "closed_at": null, "author_association": "MEMBER", "body": "I tried running CodeFormatter on all individual csproj files within the System.Net\\* folders instead of the SLNs and found a lot more code style changes.\n\nPotentially related: \n- Visual Studio 2015 fails to find references, etc. Likely cause is the use of paths containing / (forward slash) instead of the Windows \\ (back slash).\n- Another potential issue is not being able to specify the exact build target. In corefx different targets will have different files. My current intuition tells me that non-Windows files have not been properly scanned by the tool.\n\nThis could be the root cause for #177. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/177", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/177/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/177/events", "html_url": "https://github.com/dotnet/codeformatter/issues/177", "id": 106097038, "number": 177, "title": "CodeFormatter doesn't handle several transforms", "user": {"login": "CIPop", "id": 8635911, "avatar_url": "https://avatars2.githubusercontent.com/u/8635911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CIPop", "html_url": "https://github.com/CIPop", "followers_url": "https://api.github.com/users/CIPop/followers", "following_url": "https://api.github.com/users/CIPop/following{/other_user}", "gists_url": "https://api.github.com/users/CIPop/gists{/gist_id}", "starred_url": "https://api.github.com/users/CIPop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CIPop/subscriptions", "organizations_url": "https://api.github.com/users/CIPop/orgs", "repos_url": "https://api.github.com/users/CIPop/repos", "events_url": "https://api.github.com/users/CIPop/events{/privacy}", "received_events_url": "https://api.github.com/users/CIPop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-11T21:26:16Z", "updated_at": "2015-09-11T21:36:26Z", "closed_at": null, "author_association": "MEMBER", "body": "Please see https://github.com/dotnet/corefx/pull/3113 for issues encountered when running CodeFormatter on System.Net.Security.sln:\n1. If statements should always use {}\n\n``` C#\nif (!_stream.CanRead) throw __Error.GetReadNotSupported();\n\n// should be \n\nif (!_stream.CanRead) \n{\n    throw __Error.GetReadNotSupported();\n}\n```\n1. Incorrect camel casing transform for private members:\n\n``` C#\n public abstract class AuthenticatedStream : Stream\n {\n       private Stream _InnerStream;\n       private bool _LeaveStreamOpen;\n       // should be _innerStream, _leaveStreamOpen\n\n```\n1. Order of modifiers:\n\n``` C#\noverride protected bool ReleaseHandle()\n// Instead of:\nprotected override bool ReleaseHandle()\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/176", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/176/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/176/events", "html_url": "https://github.com/dotnet/codeformatter/issues/176", "id": 105161274, "number": 176, "title": "Remove unused brackets for lambdas if possible", "user": {"login": "awaescher", "id": 3630638, "avatar_url": "https://avatars1.githubusercontent.com/u/3630638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awaescher", "html_url": "https://github.com/awaescher", "followers_url": "https://api.github.com/users/awaescher/followers", "following_url": "https://api.github.com/users/awaescher/following{/other_user}", "gists_url": "https://api.github.com/users/awaescher/gists{/gist_id}", "starred_url": "https://api.github.com/users/awaescher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awaescher/subscriptions", "organizations_url": "https://api.github.com/users/awaescher/orgs", "repos_url": "https://api.github.com/users/awaescher/repos", "events_url": "https://api.github.com/users/awaescher/events{/privacy}", "received_events_url": "https://api.github.com/users/awaescher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-07T07:25:00Z", "updated_at": "2015-09-07T07:25:00Z", "closed_at": null, "author_association": "NONE", "body": "As enhancement, I'd find it great to make code like:\n`var answers = list.Where((i) => i.Answer == 42);`  _(brackets around \"__i__\")_\nor even\n`var answers = list.Where((i) => { i.Answer == 42 });`  _(brackets around \"__i__\" & curly brackets)_\n\nlook like this:\n`var answers = list.Where(i => i.Answer == 42);`\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/175", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/175/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/175/events", "html_url": "https://github.com/dotnet/codeformatter/issues/175", "id": 104986790, "number": 175, "title": "CodeFormatter doesn't replace delegate call locations on rename", "user": {"login": "CIPop", "id": 8635911, "avatar_url": "https://avatars2.githubusercontent.com/u/8635911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CIPop", "html_url": "https://github.com/CIPop", "followers_url": "https://api.github.com/users/CIPop/followers", "following_url": "https://api.github.com/users/CIPop/following{/other_user}", "gists_url": "https://api.github.com/users/CIPop/gists{/gist_id}", "starred_url": "https://api.github.com/users/CIPop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CIPop/subscriptions", "organizations_url": "https://api.github.com/users/CIPop/orgs", "repos_url": "https://api.github.com/users/CIPop/repos", "events_url": "https://api.github.com/users/CIPop/events{/privacy}", "received_events_url": "https://api.github.com/users/CIPop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715748, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-04T23:31:01Z", "updated_at": "2015-09-08T17:35:24Z", "closed_at": null, "author_association": "MEMBER", "body": "Replaced:\n`private Func<object, bool> _callback;`\n\nBut didn't replace:\n`if (!m_callback(targetObj))`\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/174", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/174/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/174/events", "html_url": "https://github.com/dotnet/codeformatter/issues/174", "id": 104876830, "number": 174, "title": "keep tabs instead of spaces", "user": {"login": "awaescher", "id": 3630638, "avatar_url": "https://avatars1.githubusercontent.com/u/3630638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awaescher", "html_url": "https://github.com/awaescher", "followers_url": "https://api.github.com/users/awaescher/followers", "following_url": "https://api.github.com/users/awaescher/following{/other_user}", "gists_url": "https://api.github.com/users/awaescher/gists{/gist_id}", "starred_url": "https://api.github.com/users/awaescher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awaescher/subscriptions", "organizations_url": "https://api.github.com/users/awaescher/orgs", "repos_url": "https://api.github.com/users/awaescher/repos", "events_url": "https://api.github.com/users/awaescher/events{/privacy}", "received_events_url": "https://api.github.com/users/awaescher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715750, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-04T11:55:46Z", "updated_at": "2015-09-05T16:30:59Z", "closed_at": null, "author_association": "NONE", "body": "I know this is your default and written down in the documentation: `We use four spaces of indentation (no tabs)` but we use tabs by default in my company. However the rest of your rules will perfectly fit ours.\n\nIs it possible to exclude this feature to keep tabs (or even convert spaces to tabs)?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/174/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/171", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/171/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/171/events", "html_url": "https://github.com/dotnet/codeformatter/issues/171", "id": 103125054, "number": 171, "title": "Xunit converter: IsInstanceOfType should be replaced with IsType", "user": {"login": "rainersigwald", "id": 3347530, "avatar_url": "https://avatars1.githubusercontent.com/u/3347530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rainersigwald", "html_url": "https://github.com/rainersigwald", "followers_url": "https://api.github.com/users/rainersigwald/followers", "following_url": "https://api.github.com/users/rainersigwald/following{/other_user}", "gists_url": "https://api.github.com/users/rainersigwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/rainersigwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rainersigwald/subscriptions", "organizations_url": "https://api.github.com/users/rainersigwald/orgs", "repos_url": "https://api.github.com/users/rainersigwald/repos", "events_url": "https://api.github.com/users/rainersigwald/events{/privacy}", "received_events_url": "https://api.github.com/users/rainersigwald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-25T21:51:14Z", "updated_at": "2015-08-25T21:51:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Right now, it uses IsAssignableFrom, but according to http://xunit.github.io/docs/comparisons.html the direct conversion is IsType<>().\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/162", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/162/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/162/events", "html_url": "https://github.com/dotnet/codeformatter/issues/162", "id": 98576040, "number": 162, "title": "Please provide standalone exe", "user": {"login": "igorgatis", "id": 1269388, "avatar_url": "https://avatars2.githubusercontent.com/u/1269388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorgatis", "html_url": "https://github.com/igorgatis", "followers_url": "https://api.github.com/users/igorgatis/followers", "following_url": "https://api.github.com/users/igorgatis/following{/other_user}", "gists_url": "https://api.github.com/users/igorgatis/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorgatis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorgatis/subscriptions", "organizations_url": "https://api.github.com/users/igorgatis/orgs", "repos_url": "https://api.github.com/users/igorgatis/repos", "events_url": "https://api.github.com/users/igorgatis/events{/privacy}", "received_events_url": "https://api.github.com/users/igorgatis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-08-02T01:54:13Z", "updated_at": "2016-01-04T09:53:35Z", "closed_at": null, "author_association": "NONE", "body": "Downloaded the binary release and when I tried running it complained about missing dlls which seem to belong to vs 2015.\n\nIs it correct to say that CodeFormatter tool requires vs 2015 installation? If that is true... That's far too inconvenient.\n\nFor companies like mine, which would.love to use the tool but can't migrate right the way to vs 2015, could you please provide a standalone exe (e.g. no external deps)?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/152", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/152/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/152/events", "html_url": "https://github.com/dotnet/codeformatter/issues/152", "id": 97482445, "number": 152, "title": "Unhelpful error message when run codeformatter.exe on .cs file", "user": {"login": "hickford", "id": 105314, "avatar_url": "https://avatars1.githubusercontent.com/u/105314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hickford", "html_url": "https://github.com/hickford", "followers_url": "https://api.github.com/users/hickford/followers", "following_url": "https://api.github.com/users/hickford/following{/other_user}", "gists_url": "https://api.github.com/users/hickford/gists{/gist_id}", "starred_url": "https://api.github.com/users/hickford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hickford/subscriptions", "organizations_url": "https://api.github.com/users/hickford/orgs", "repos_url": "https://api.github.com/users/hickford/repos", "events_url": "https://api.github.com/users/hickford/events{/privacy}", "received_events_url": "https://api.github.com/users/hickford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-27T14:53:13Z", "updated_at": "2015-07-27T14:53:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "If you try to run codeformatter.exe on a `.cs` file then you get the surprising error message:\n\n> Unhandled Exception: System.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Cannot open project 'LoadAccuracyTestExtension.cs' because the file extension '.cs' is not associated with a language.\n\nThe solution as explained in the readme is to run codeformatter.exe on `.csproj` or `.sln` files, but it would be neat to show a more helpful error message. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/152/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/147", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/147/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/147/events", "html_url": "https://github.com/dotnet/codeformatter/issues/147", "id": 95278342, "number": 147, "title": "MarkReadonlyFields rule doesn't handle field decls with multiple variable decls", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-15T20:05:55Z", "updated_at": "2015-07-15T20:05:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "The method `ReadonlyRewriter.VisitFieldDeclaration` looks only at the first variable declared in the field declaration:\n\n```\n            private int _n = 0, _m = 1;\n```\n\nIf `_n` appears in the list of `_unwrittenFields`, the method adds a `readonly` modifier to the declaration. Now `_m` is `readonly` as well.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/139", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/139/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/139/events", "html_url": "https://github.com/dotnet/codeformatter/issues/139", "id": 90093815, "number": 139, "title": "codeformatter throws exception if C++\\CLI assembly referenced", "user": {"login": "zabulus", "id": 2720011, "avatar_url": "https://avatars0.githubusercontent.com/u/2720011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zabulus", "html_url": "https://github.com/zabulus", "followers_url": "https://api.github.com/users/zabulus/followers", "following_url": "https://api.github.com/users/zabulus/following{/other_user}", "gists_url": "https://api.github.com/users/zabulus/gists{/gist_id}", "starred_url": "https://api.github.com/users/zabulus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zabulus/subscriptions", "organizations_url": "https://api.github.com/users/zabulus/orgs", "repos_url": "https://api.github.com/users/zabulus/repos", "events_url": "https://api.github.com/users/zabulus/events{/privacy}", "received_events_url": "https://api.github.com/users/zabulus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-22T13:09:08Z", "updated_at": "2015-06-22T13:16:08Z", "closed_at": null, "author_association": "NONE", "body": "I have several C# projects that reference C++\\CLI .vcxprojs\nCodeformatter throws exception on start:\n\n```\nUnhandled Exception: System.AggregateException: One or more errors occurred. ---> Microsoft.Build.Exceptions.InvalidProjectFileException: The imported project \"{RootFolderOfSolution}Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.  {VCXProjectName}\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(IElementLocation elementLocation, String resourceName, Object arg0)\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, String importExpressionEscaped, ProjectImportElement importElement)\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate()\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly)\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation)\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings)\n   at Microsoft.Build.Evaluation.Project..ctor(ProjectRootElement xml, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<LoadProjectAsync>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.CodeAnalysis.MSBuild.ProjectFileLoader.<GetOutputFilePathAsync>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetProjectMetadata>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<ResolveProjectReferencesAsync>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<LoadProjectAsync>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<GetOrLoadProjectAsync>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenSolutionAsync>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\n   at CodeFormatter.Program.<RunAsync>d__1.MoveNext() in {PathToSrc}\\CodeFormatter\\Program.cs:line 186\n   --- End of inner exception stack trace ---\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\n   at System.Threading.Tasks.Task.Wait(CancellationToken cancellationToken)\n   at CodeFormatter.Program.Main(String[] args) in {PathToSrc}\\CodeFormatter\\Program.cs:line 140 \n```\n\nAny possibilities to workaround this?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/137", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/137/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/137/events", "html_url": "https://github.com/dotnet/codeformatter/issues/137", "id": 89642132, "number": 137, "title": "Reimplement codeformatter \"rules\" as Roslyn analyzers/fixers", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-06-19T19:33:45Z", "updated_at": "2016-09-12T12:58:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Codeformatter's command line interface will remain the same. The user of codeformatter won't notice that the rules are now implemented as analyzers/fixers; that\u2019s an implementation detail. Codeformatter will simply calls the Roslyn APIs to run the analyzers/fixers.\n\nThe advantage is that VS users will be able to use the analyzers/fixers as well. In other words, the effort here is to make the rules/fixes use the Roslyn extensibility model and make codeformatter a simple command line driver for it.\n\nSri prototyped the technique in his version of [FormattingEngineImplementation.cs](https://github.com/srivatsn/codeformatter/blob/master/src/Microsoft.DotNet.CodeFormatting/FormattingEngineImplementation.cs) in his [fork](https://github.com/srivatsn/codeformatter) of codeformatter. The important part is his reimplementation of the method `FormatProjectAsync`. It runs the analyzers by creating a `CompilationWithAnalyzers` and calling `GetDiagnostics` on it. Then it runs the fixers, and applies the fixes to the workspace.\n\nIn the prototype, Sri completely removed the existing \u201crule-based\u201d implementation (\"driver\") in `FormatProjectAsync`. But in the actual implementation, the two drivers will exist side by side. `FormatProjectAsync` will continue  to call the rule-based driver unless the command line option `/UseAnalyzers` is present, in which case it will call the new analyzer-based implementation. This will allow us to do perf comparisons as we reimplement each rule, for example:\n\n```\ncodeformatter MyProject.csproj /Rule:ThisRule,ThatRule\ncodeformatter MyProject.csproj /UseAnalyzers /Rule:ThisRule,ThatRule\n```\n\nWhen all the rules have been reimplemented as analyzers, we will remove the rules, and remove the rule-based driver from the engine.\n\nThe analyzer-based implementation will have to take care to run the analyzers in such a way that fixes from different analyzers don\u2019t overlap and interfere with one another. We will add an `Attribute` to the analyzers that can all run together in a single compilation; the others will each run in a separate compilation.\n\nWe will place the analyzers/fixers in their own project, separate from the engine, so we can ship them in a NuGet package without having to ship the engine.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/135", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/135/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/135/events", "html_url": "https://github.com/dotnet/codeformatter/issues/135", "id": 89426214, "number": 135, "title": "Move to roslyn rc3 breaks build : analyzers load fails", "user": {"login": "zjrunner", "id": 1724619, "avatar_url": "https://avatars0.githubusercontent.com/u/1724619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zjrunner", "html_url": "https://github.com/zjrunner", "followers_url": "https://api.github.com/users/zjrunner/followers", "following_url": "https://api.github.com/users/zjrunner/following{/other_user}", "gists_url": "https://api.github.com/users/zjrunner/gists{/gist_id}", "starred_url": "https://api.github.com/users/zjrunner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zjrunner/subscriptions", "organizations_url": "https://api.github.com/users/zjrunner/orgs", "repos_url": "https://api.github.com/users/zjrunner/repos", "events_url": "https://api.github.com/users/zjrunner/events{/privacy}", "received_events_url": "https://api.github.com/users/zjrunner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-18T23:51:06Z", "updated_at": "2015-06-18T23:51:06Z", "closed_at": null, "author_association": "NONE", "body": "Getting these all over the place (and later failures finding 'Object' and other simple classes)\nCSC : warning CS8032: An instance of analyzer Microsoft.CodeAnalysis.CSharp.Analyzers.Fix\nAnalyzers.CSharpFixerWithFixAllAnalyzer cannot be created from G:\\code\\codeformatter\\src\\\npackages\\Microsoft.CodeAnalysis.Analyzers.1.0.0-rc3\\analyzers\\dotnet\\cs\\Microsoft.CodeAna\nlysis.CSharp.Analyzers.dll : Could not load file or assembly 'System.Collections.Immutabl\ne, Version=1.1.36.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its depe\nndencies. The located assembly's manifest definition does not match the assembly referenc\ne. (Exception from HRESULT: 0x80131040). [G:\\code\\codeformatter\\src\\XUnitConverter\\XUnitC\nonverter.csproj]\n\nBuilds fine from 'build.cmd' at root from 1378bd1677d1d4359281a41864bff9d5b4ae6f7a, fails if doing the same from head at 52bdcfc9109b177930b00c2cd3bfc0e13710cf70\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/133", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/133/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/133/events", "html_url": "https://github.com/dotnet/codeformatter/issues/133", "id": 89347101, "number": 133, "title": "DOTNET_FORMATTER symbol is unconditionally applied", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-06-18T17:14:12Z", "updated_at": "2015-09-01T20:13:56Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "In `FormatDocumentFormattingRule.ProcessAsync`, in the loop over additional configurations, the `DOTNET_FORMATTER` symbol is added to the parse options regardless of the presence of the `/tables` option on the command line.\n\n@Srivatsn, @jaredpar \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/127", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/127/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/127/events", "html_url": "https://github.com/dotnet/codeformatter/pull/127", "id": 82606113, "number": 127, "title": "Add code formatting rule to add newlines at the end of code files", "user": {"login": "dsplaisted", "id": 145043, "avatar_url": "https://avatars3.githubusercontent.com/u/145043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsplaisted", "html_url": "https://github.com/dsplaisted", "followers_url": "https://api.github.com/users/dsplaisted/followers", "following_url": "https://api.github.com/users/dsplaisted/following{/other_user}", "gists_url": "https://api.github.com/users/dsplaisted/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsplaisted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsplaisted/subscriptions", "organizations_url": "https://api.github.com/users/dsplaisted/orgs", "repos_url": "https://api.github.com/users/dsplaisted/repos", "events_url": "https://api.github.com/users/dsplaisted/events{/privacy}", "received_events_url": "https://api.github.com/users/dsplaisted/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-05-29T22:07:09Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/127", "html_url": "https://github.com/dotnet/codeformatter/pull/127", "diff_url": "https://github.com/dotnet/codeformatter/pull/127.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/127.patch"}, "body": "@stephentoub has [pointed out](https://github.com/dotnet/corefx/pull/1851#discussion_r31315254) that text files should end with a newline.  This PR adds a code formatting rule to do this for C# source code files.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/123", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/123/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/123/events", "html_url": "https://github.com/dotnet/codeformatter/issues/123", "id": 76491520, "number": 123, "title": "CodeFormatter should remove redundant field initializers", "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-14T21:11:14Z", "updated_at": "2016-04-21T17:14:42Z", "closed_at": null, "author_association": "MEMBER", "body": "```\npublic class CryptoStream\n{\n    private int _InputBufferIndex = 0;\n}\n```\n\n`_InputBufferIndex` will already have the value 0, the initializer being there doesn't change anything.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/122", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/122/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/122/events", "html_url": "https://github.com/dotnet/codeformatter/issues/122", "id": 76491133, "number": 122, "title": "_PascalCase fields do not get converted to _camelCase", "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-14T21:08:54Z", "updated_at": "2015-05-14T21:09:05Z", "closed_at": null, "author_association": "MEMBER", "body": "```\npublic class CryptoStream\n{\n    private byte[] _InputBuffer;\n}\n```\n\n`_InputBuffer` did not get rewritten to `_inputBuffer`.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/121", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/121/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/121/events", "html_url": "https://github.com/dotnet/codeformatter/issues/121", "id": 76373235, "number": 121, "title": "ExplicitThisRule should remove \"this.\" on all non-semantic cases, not just private properties", "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-14T14:20:32Z", "updated_at": "2015-05-14T14:20:32Z", "closed_at": null, "author_association": "MEMBER", "body": "In the event it is required for disambiguation or invoking an extension method it certainly should remain, but the [Coding style guidelines](https://github.com/dotnet/corefx/wiki/Coding-style) say \"4. We avoid this. unless absolutely necessary.\", and CodeFormatter should help us achieve that goal.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/120", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/120/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/120/events", "html_url": "https://github.com/dotnet/codeformatter/issues/120", "id": 76372176, "number": 120, "title": "CodeFormatter should remove unnecessary \"global::\" qualifiers", "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-14T14:17:13Z", "updated_at": "2015-05-14T14:17:13Z", "closed_at": null, "author_association": "MEMBER", "body": "Many of the files not yet moved from closed source to open in corefx have \"using global::System;\".  Aside from \"using System\" being usually redundant due to the contained namespace chain, the global prefix is something we're manually removing before publishing to github.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/119", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/119/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/119/events", "html_url": "https://github.com/dotnet/codeformatter/issues/119", "id": 76371263, "number": 119, "title": "Simple gets are moved to the next line when they have an attribute", "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-14T14:13:52Z", "updated_at": "2015-05-14T14:13:52Z", "closed_at": null, "author_association": "MEMBER", "body": "I haven't verified with a minimal repro, but based on cases where this has been seen it seems like\n\n```\npublic bool SimpleProperty\n{\n    [Pure]\n    get { return false; }\n}\n```\n\nwill be rewritten as\n\n```\npublic bool SimpleProperty\n{\n    [Pure]\n    get\n    { return false; }\n}\n```\n\nwhich is not the desired state for corefx.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/118", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/118/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/118/events", "html_url": "https://github.com/dotnet/codeformatter/issues/118", "id": 76102939, "number": 118, "title": "MarkReadonlyFieldRule only marks one field of the same name per run.", "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-13T19:49:24Z", "updated_at": "2015-05-13T19:49:24Z", "closed_at": null, "author_association": "MEMBER", "body": "```\nclass Outer1\n{\n    class Inner\n    {\n        private object _couldBeReadonly;\n    }\n}\n\nclass Outer2\n{\n    class Inner\n    {\n        private object _couldBeReadonly;\n    }\n}\n```\n\nThis will only mark Outer1+Inner._couldBeReadonly as readonly.\n\nIn the real-world example where this was hit, the inner class name and field name were identical, so the \"class-scoped\" name for both of them would be the same.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/117", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117/events", "html_url": "https://github.com/dotnet/codeformatter/issues/117", "id": 71340843, "number": 117, "title": "Constants should be PascalCase", "user": {"login": "FiveTimesTheFun", "id": 6598317, "avatar_url": "https://avatars2.githubusercontent.com/u/6598317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FiveTimesTheFun", "html_url": "https://github.com/FiveTimesTheFun", "followers_url": "https://api.github.com/users/FiveTimesTheFun/followers", "following_url": "https://api.github.com/users/FiveTimesTheFun/following{/other_user}", "gists_url": "https://api.github.com/users/FiveTimesTheFun/gists{/gist_id}", "starred_url": "https://api.github.com/users/FiveTimesTheFun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FiveTimesTheFun/subscriptions", "organizations_url": "https://api.github.com/users/FiveTimesTheFun/orgs", "repos_url": "https://api.github.com/users/FiveTimesTheFun/repos", "events_url": "https://api.github.com/users/FiveTimesTheFun/events{/privacy}", "received_events_url": "https://api.github.com/users/FiveTimesTheFun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "FiveTimesTheFun", "id": 6598317, "avatar_url": "https://avatars2.githubusercontent.com/u/6598317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FiveTimesTheFun", "html_url": "https://github.com/FiveTimesTheFun", "followers_url": "https://api.github.com/users/FiveTimesTheFun/followers", "following_url": "https://api.github.com/users/FiveTimesTheFun/following{/other_user}", "gists_url": "https://api.github.com/users/FiveTimesTheFun/gists{/gist_id}", "starred_url": "https://api.github.com/users/FiveTimesTheFun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FiveTimesTheFun/subscriptions", "organizations_url": "https://api.github.com/users/FiveTimesTheFun/orgs", "repos_url": "https://api.github.com/users/FiveTimesTheFun/repos", "events_url": "https://api.github.com/users/FiveTimesTheFun/events{/privacy}", "received_events_url": "https://api.github.com/users/FiveTimesTheFun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "FiveTimesTheFun", "id": 6598317, "avatar_url": "https://avatars2.githubusercontent.com/u/6598317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FiveTimesTheFun", "html_url": "https://github.com/FiveTimesTheFun", "followers_url": "https://api.github.com/users/FiveTimesTheFun/followers", "following_url": "https://api.github.com/users/FiveTimesTheFun/following{/other_user}", "gists_url": "https://api.github.com/users/FiveTimesTheFun/gists{/gist_id}", "starred_url": "https://api.github.com/users/FiveTimesTheFun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FiveTimesTheFun/subscriptions", "organizations_url": "https://api.github.com/users/FiveTimesTheFun/orgs", "repos_url": "https://api.github.com/users/FiveTimesTheFun/repos", "events_url": "https://api.github.com/users/FiveTimesTheFun/events{/privacy}", "received_events_url": "https://api.github.com/users/FiveTimesTheFun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2015-04-27T16:48:26Z", "updated_at": "2015-04-27T17:01:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Constant fields, eg:\n\nprivate const int _ShrinkThreshold = 256;\n\nshould be PascalCase.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/115", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/115/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/115/events", "html_url": "https://github.com/dotnet/codeformatter/issues/115", "id": 69647855, "number": 115, "title": "Option for replacing type name with alias", "user": {"login": "mellinoe", "id": 8918977, "avatar_url": "https://avatars1.githubusercontent.com/u/8918977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mellinoe", "html_url": "https://github.com/mellinoe", "followers_url": "https://api.github.com/users/mellinoe/followers", "following_url": "https://api.github.com/users/mellinoe/following{/other_user}", "gists_url": "https://api.github.com/users/mellinoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mellinoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mellinoe/subscriptions", "organizations_url": "https://api.github.com/users/mellinoe/orgs", "repos_url": "https://api.github.com/users/mellinoe/repos", "events_url": "https://api.github.com/users/mellinoe/events{/privacy}", "received_events_url": "https://api.github.com/users/mellinoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-20T18:17:23Z", "updated_at": "2015-04-20T18:17:23Z", "closed_at": null, "author_association": "NONE", "body": "In CoreFx, we have the guideline of always using the C# alias of the built-in types. It would be nice if the formatter had an option to automatically replace occurrences of the proper type name with the language keyword.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/110", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/110/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/110/events", "html_url": "https://github.com/dotnet/codeformatter/issues/110", "id": 68523880, "number": 110, "title": "Codeformatter rename should provide warning to update the field name in DebuggerDisplayAttribute", "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-14T23:16:02Z", "updated_at": "2016-07-29T21:55:25Z", "closed_at": null, "author_association": "MEMBER", "body": "", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/108", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/108/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/108/events", "html_url": "https://github.com/dotnet/codeformatter/issues/108", "id": 67695824, "number": 108, "title": "Field Rename misses some usages of the field", "user": {"login": "mellinoe", "id": 8918977, "avatar_url": "https://avatars1.githubusercontent.com/u/8918977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mellinoe", "html_url": "https://github.com/mellinoe", "followers_url": "https://api.github.com/users/mellinoe/followers", "following_url": "https://api.github.com/users/mellinoe/following{/other_user}", "gists_url": "https://api.github.com/users/mellinoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mellinoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mellinoe/subscriptions", "organizations_url": "https://api.github.com/users/mellinoe/orgs", "repos_url": "https://api.github.com/users/mellinoe/repos", "events_url": "https://api.github.com/users/mellinoe/events{/privacy}", "received_events_url": "https://api.github.com/users/mellinoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-10T22:26:34Z", "updated_at": "2015-04-10T22:27:04Z", "closed_at": null, "author_association": "NONE", "body": "Running the CodeFormatter on the project containing this file fails to correctly rename the m_postPhaseAction field. Two usages of the field are left unchanged (leading 'm' still intact). Opening VS 2015 and using the rename tool seems to correctly change all usages of the field.\n\nhttps://gist.github.com/mellinoe/e97adbb0cf913b6daf46\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106/events", "html_url": "https://github.com/dotnet/codeformatter/issues/106", "id": 67478579, "number": 106, "title": "Add ability to run on OS X / Xamarin Studio", "user": {"login": "mteper", "id": 1029340, "avatar_url": "https://avatars1.githubusercontent.com/u/1029340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mteper", "html_url": "https://github.com/mteper", "followers_url": "https://api.github.com/users/mteper/followers", "following_url": "https://api.github.com/users/mteper/following{/other_user}", "gists_url": "https://api.github.com/users/mteper/gists{/gist_id}", "starred_url": "https://api.github.com/users/mteper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mteper/subscriptions", "organizations_url": "https://api.github.com/users/mteper/orgs", "repos_url": "https://api.github.com/users/mteper/repos", "events_url": "https://api.github.com/users/mteper/events{/privacy}", "received_events_url": "https://api.github.com/users/mteper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2015-04-10T00:25:22Z", "updated_at": "2016-03-01T15:45:21Z", "closed_at": null, "author_association": "NONE", "body": "Would be nice if this could be used outside Windows.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/106/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/102", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/102/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/102/events", "html_url": "https://github.com/dotnet/codeformatter/issues/102", "id": 66578533, "number": 102, "title": "Using the /nocopyright switch produces 2 blank lines on the top of every file", "user": {"login": "matlus", "id": 10308689, "avatar_url": "https://avatars3.githubusercontent.com/u/10308689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matlus", "html_url": "https://github.com/matlus", "followers_url": "https://api.github.com/users/matlus/followers", "following_url": "https://api.github.com/users/matlus/following{/other_user}", "gists_url": "https://api.github.com/users/matlus/gists{/gist_id}", "starred_url": "https://api.github.com/users/matlus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matlus/subscriptions", "organizations_url": "https://api.github.com/users/matlus/orgs", "repos_url": "https://api.github.com/users/matlus/repos", "events_url": "https://api.github.com/users/matlus/events{/privacy}", "received_events_url": "https://api.github.com/users/matlus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-04-06T10:39:36Z", "updated_at": "2015-08-07T20:57:11Z", "closed_at": null, "author_association": "NONE", "body": "Using the /nocopyright switch produces 2 blank lines at the very top of every code file. I'd expect that it would not do this.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/101", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/101/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/101/events", "html_url": "https://github.com/dotnet/codeformatter/pull/101", "id": 64443032, "number": 101, "title": "Add rule to remove unused usings.", "user": {"login": "david-mitchell", "id": 540554, "avatar_url": "https://avatars3.githubusercontent.com/u/540554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-mitchell", "html_url": "https://github.com/david-mitchell", "followers_url": "https://api.github.com/users/david-mitchell/followers", "following_url": "https://api.github.com/users/david-mitchell/following{/other_user}", "gists_url": "https://api.github.com/users/david-mitchell/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-mitchell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-mitchell/subscriptions", "organizations_url": "https://api.github.com/users/david-mitchell/orgs", "repos_url": "https://api.github.com/users/david-mitchell/repos", "events_url": "https://api.github.com/users/david-mitchell/events{/privacy}", "received_events_url": "https://api.github.com/users/david-mitchell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-03-26T05:12:14Z", "updated_at": "2017-10-31T22:55:15Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/101", "html_url": "https://github.com/dotnet/codeformatter/pull/101", "diff_url": "https://github.com/dotnet/codeformatter/pull/101.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/101.patch"}, "body": "This pull request adds a rule to remove unused using directives from the beginning of source files. It addresses issue #79.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/101/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/100", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/100/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/100/events", "html_url": "https://github.com/dotnet/codeformatter/issues/100", "id": 64339791, "number": 100, "title": "trim_trailing_whitespace = true", "user": {"login": "dhusemann", "id": 3800677, "avatar_url": "https://avatars0.githubusercontent.com/u/3800677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhusemann", "html_url": "https://github.com/dhusemann", "followers_url": "https://api.github.com/users/dhusemann/followers", "following_url": "https://api.github.com/users/dhusemann/following{/other_user}", "gists_url": "https://api.github.com/users/dhusemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhusemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhusemann/subscriptions", "organizations_url": "https://api.github.com/users/dhusemann/orgs", "repos_url": "https://api.github.com/users/dhusemann/repos", "events_url": "https://api.github.com/users/dhusemann/events{/privacy}", "received_events_url": "https://api.github.com/users/dhusemann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-25T18:25:02Z", "updated_at": "2015-03-25T18:25:02Z", "closed_at": null, "author_association": "NONE", "body": "Need a one time rule run to align files across the repositories.  so there is a 1 time hit.\nthen add to .editorconfig \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/93", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/93/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/93/events", "html_url": "https://github.com/dotnet/codeformatter/pull/93", "id": 60181941, "number": 93, "title": "Add an option to run CodeFormatter on all projects/solutions within a directory.", "user": {"login": "AlekseyTs", "id": 10522107, "avatar_url": "https://avatars0.githubusercontent.com/u/10522107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlekseyTs", "html_url": "https://github.com/AlekseyTs", "followers_url": "https://api.github.com/users/AlekseyTs/followers", "following_url": "https://api.github.com/users/AlekseyTs/following{/other_user}", "gists_url": "https://api.github.com/users/AlekseyTs/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlekseyTs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlekseyTs/subscriptions", "organizations_url": "https://api.github.com/users/AlekseyTs/orgs", "repos_url": "https://api.github.com/users/AlekseyTs/repos", "events_url": "https://api.github.com/users/AlekseyTs/events{/privacy}", "received_events_url": "https://api.github.com/users/AlekseyTs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-07T01:10:06Z", "updated_at": "2017-10-31T22:55:14Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "html_url": "https://github.com/dotnet/codeformatter/pull/93", "diff_url": "https://github.com/dotnet/codeformatter/pull/93.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/93.patch"}, "body": "Allow to specify a directory instead of a project/solution. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/93/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/87", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87/events", "html_url": "https://github.com/dotnet/codeformatter/issues/87", "id": 59566705, "number": 87, "title": "Support formatting ASP.NET vNext projects", "user": {"login": "conniey", "id": 10136526, "avatar_url": "https://avatars3.githubusercontent.com/u/10136526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/conniey", "html_url": "https://github.com/conniey", "followers_url": "https://api.github.com/users/conniey/followers", "following_url": "https://api.github.com/users/conniey/following{/other_user}", "gists_url": "https://api.github.com/users/conniey/gists{/gist_id}", "starred_url": "https://api.github.com/users/conniey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/conniey/subscriptions", "organizations_url": "https://api.github.com/users/conniey/orgs", "repos_url": "https://api.github.com/users/conniey/repos", "events_url": "https://api.github.com/users/conniey/events{/privacy}", "received_events_url": "https://api.github.com/users/conniey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-03-02T23:04:33Z", "updated_at": "2016-04-03T19:46:18Z", "closed_at": null, "author_association": "NONE", "body": "I have an library that is written in C#, but I converted it to a .kproj (ASP.NET vNext library) so that my ASP.NET vNext website could also use its logic. \n\nCodeFormatter skips over this project and doesn't format it. so I have to manually create a .csproj, add the .cs files, and run the formatter tool again.\n\n[.kproj Samples](https://github.com/aspnet/XRE/tree/dev/samples)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/87/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/79", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/79/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/79/events", "html_url": "https://github.com/dotnet/codeformatter/issues/79", "id": 58768528, "number": 79, "title": "Unused usings should be removed", "user": {"login": "jterry75", "id": 5858142, "avatar_url": "https://avatars1.githubusercontent.com/u/5858142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jterry75", "html_url": "https://github.com/jterry75", "followers_url": "https://api.github.com/users/jterry75/followers", "following_url": "https://api.github.com/users/jterry75/following{/other_user}", "gists_url": "https://api.github.com/users/jterry75/gists{/gist_id}", "starred_url": "https://api.github.com/users/jterry75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jterry75/subscriptions", "organizations_url": "https://api.github.com/users/jterry75/orgs", "repos_url": "https://api.github.com/users/jterry75/repos", "events_url": "https://api.github.com/users/jterry75/events{/privacy}", "received_events_url": "https://api.github.com/users/jterry75/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-24T17:03:01Z", "updated_at": "2016-04-02T09:54:44Z", "closed_at": null, "author_association": "NONE", "body": "If a file contains a using declaration that is not actually used it should be removed.\n\n``` C#\nusing System;\nusing System.Collections.Generic;\n\nclass Test\n{\n    public static void Main()\n    {\n        Console.WritLine(\"not using generics\");\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/79/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/77", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/77/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/77/events", "html_url": "https://github.com/dotnet/codeformatter/issues/77", "id": 58644405, "number": 77, "title": "Renaming fields not working correctly", "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-23T20:38:55Z", "updated_at": "2015-02-27T19:47:53Z", "closed_at": null, "author_association": "MEMBER", "body": "This happened for this piece of code:\n\n```\n        static readonly int Lzyyyy = \"yyyy\".Length;\n        static readonly int Lzyyyy_ = \"yyyy-\".Length;\n        static readonly int Lzyyyy_MM = \"yyyy-MM\".Length;\n        static readonly int Lzyyyy_MM_ = \"yyyy-MM-\".Length;\n        static readonly int Lzyyyy_MM_dd = \"yyyy-MM-dd\".Length;\n        static readonly int Lzyyyy_MM_ddT = \"yyyy-MM-ddT\".Length;\n        static readonly int LzHH = \"HH\".Length;\n        static readonly int LzHH_ = \"HH:\".Length;\n        static readonly int LzHH_mm = \"HH:mm\".Length;\n        static readonly int LzHH_mm_ = \"HH:mm:\".Length;\n        static readonly int LzHH_mm_ss = \"HH:mm:ss\".Length;\n        static readonly int Lz_ = \"-\".Length;\n        static readonly int Lz_zz = \"-zz\".Length;\n        static readonly int Lz_zz_ = \"-zz:\".Length;\n        static readonly int Lz_zz_zz = \"-zz:zz\".Length;\n        static readonly int Lz__ = \"--\".Length;\n        static readonly int Lz__mm = \"--MM\".Length;\n        static readonly int Lz__mm_ = \"--MM-\".Length;\n        static readonly int Lz__mm__ = \"--MM--\".Length;\n        static readonly int Lz__mm_dd = \"--MM-dd\".Length;\n        static readonly int Lz___ = \"---\".Length;\n        static readonly int Lz___dd = \"---dd\".Length;\n```\n\nwhich got converted into:\n\n```\n        private static readonly int s_lzyyyy = \"yyyy\".Length;\n        private static readonly int s_lzyyyy = \"yyyy-\".Length;\n        private static readonly int s_lzyyyy_MM = \"yyyy-MM\".Length;\n        private static readonly int s_lzyyyy_MM = \"yyyy-MM-\".Length;\n        private static readonly int s_lzyyyy_MM_dd = \"yyyy-MM-dd\".Length;\n        private static readonly int s_lzyyyy_MM_ddT = \"yyyy-MM-ddT\".Length;\n        private static readonly int s_lzHH = \"HH\".Length;\n        private static readonly int s_lzHH = \"HH:\".Length;\n        private static readonly int s_lzHH_mm = \"HH:mm\".Length;\n        private static readonly int s_lzHH_mm = \"HH:mm:\".Length;\n        private static readonly int s_lzHH_mm_ss = \"HH:mm:ss\".Length;\n        private static readonly int s_Lz = \"-\".Length;\n        private static readonly int s_lz_zz = \"-zz\".Length;\n        private static readonly int s_lz_zz = \"-zz:\".Length;\n        private static readonly int s_lz_zz_zz = \"-zz:zz\".Length;\n        private static readonly int s_Lz = \"--\".Length;\n        private static readonly int s_lz__mm = \"--MM\".Length;\n        private static readonly int s_lz__mm = \"--MM-\".Length;\n        private static readonly int s_lz__mm = \"--MM--\".Length;\n        private static readonly int s_lz__mm_dd = \"--MM-dd\".Length;\n        private static readonly int s_Lz = \"---\".Length;\n        private static readonly int s_lz___dd = \"---dd\".Length;\n```\n\nOnce you get a closer look there are name collisions. In this particular change it makes sense to keep the names as they make sense.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/77/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/75", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/75/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/75/events", "html_url": "https://github.com/dotnet/codeformatter/issues/75", "id": 58570919, "number": 75, "title": "Question: Is it possible to create a rule that sorts my methods, fields, properties etc...", "user": {"login": "orangejuice1", "id": 11158061, "avatar_url": "https://avatars2.githubusercontent.com/u/11158061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orangejuice1", "html_url": "https://github.com/orangejuice1", "followers_url": "https://api.github.com/users/orangejuice1/followers", "following_url": "https://api.github.com/users/orangejuice1/following{/other_user}", "gists_url": "https://api.github.com/users/orangejuice1/gists{/gist_id}", "starred_url": "https://api.github.com/users/orangejuice1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orangejuice1/subscriptions", "organizations_url": "https://api.github.com/users/orangejuice1/orgs", "repos_url": "https://api.github.com/users/orangejuice1/repos", "events_url": "https://api.github.com/users/orangejuice1/events{/privacy}", "received_events_url": "https://api.github.com/users/orangejuice1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-23T10:58:13Z", "updated_at": "2015-02-24T02:51:31Z", "closed_at": null, "author_association": "NONE", "body": "I have a big codebase which I want to sort by\nstylecop rules:\nhttp://stackoverflow.com/questions/150479/order-of-items-in-classes-fields-properties-constructors-methods\n\nHow would I start to programm such a feature?\nI would guess I add an additional rule... but what to do next...?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/75/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/65", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/65/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/65/events", "html_url": "https://github.com/dotnet/codeformatter/issues/65", "id": 57773171, "number": 65, "title": "Add a build target with Nuget", "user": {"login": "MovGP0", "id": 83339, "avatar_url": "https://avatars3.githubusercontent.com/u/83339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MovGP0", "html_url": "https://github.com/MovGP0", "followers_url": "https://api.github.com/users/MovGP0/followers", "following_url": "https://api.github.com/users/MovGP0/following{/other_user}", "gists_url": "https://api.github.com/users/MovGP0/gists{/gist_id}", "starred_url": "https://api.github.com/users/MovGP0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MovGP0/subscriptions", "organizations_url": "https://api.github.com/users/MovGP0/orgs", "repos_url": "https://api.github.com/users/MovGP0/repos", "events_url": "https://api.github.com/users/MovGP0/events{/privacy}", "received_events_url": "https://api.github.com/users/MovGP0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-16T07:33:15Z", "updated_at": "2015-02-16T07:33:15Z", "closed_at": null, "author_association": "NONE", "body": "When adding codeformatter with Nuget, it should automatically add a build target, so that the code gets automatically reformatted on every build. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/65/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/64", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/64/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/64/events", "html_url": "https://github.com/dotnet/codeformatter/pull/64", "id": 57746047, "number": 64, "title": "Add rules for formatting attributes", "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715750, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 163919080, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/guideline%20gap", "name": "guideline gap", "color": "bfd4f2", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-15T21:06:45Z", "updated_at": "2017-10-31T22:55:14Z", "closed_at": null, "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64", "html_url": "https://github.com/dotnet/codeformatter/pull/64", "diff_url": "https://github.com/dotnet/codeformatter/pull/64.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/64.patch"}, "body": "This adds two additional rules for dealing with attributes:\n### Removing superfluous parentheses\n\nIt's conventional to omit parentheses when the attribute doesn't take any arguments, for example:\n\n``` CSharp\n[target: SomeAtt()]\n```\n\nbecomes\n\n``` CSharp\n[target: SomeAtt]\n```\n### Separating attribute lists\n\nMost folks only use a single attribute in an attribute list, although the syntax supports multiple attributes. In most cases, putting attributes in separate lists is beneficial because it improves readability and allows better diffs.\n\nThis changes code like this:\n\n``` CSharp\n[Serializable, Category(\"Catagory\"), DefaultValue(1)]\n```\n\nto \n\n``` CSharp\n[Serializable]\n[Category(\"Catagory\")]\n[DefaultValue(1)]\n```\n\nThe only exception are attributes for parameters. In interop code, it's quite common to mark parameters with `[In]` and `[Out]`. Since the attributes are usually written inline, i.e. not on separate lines, it's actually beneficial to no split them into separate lists.\n\nThis means that code like this is left as-is:\n\n``` CSharp\nvoid NativeFun([In, Out] int* target)\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/64/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56/events", "html_url": "https://github.com/dotnet/codeformatter/issues/56", "id": 57217839, "number": 56, "title": "Passing /nocopyright from bash command line returns an error.", "user": {"login": "marcelodeaguiar", "id": 1771472, "avatar_url": "https://avatars2.githubusercontent.com/u/1771472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelodeaguiar", "html_url": "https://github.com/marcelodeaguiar", "followers_url": "https://api.github.com/users/marcelodeaguiar/followers", "following_url": "https://api.github.com/users/marcelodeaguiar/following{/other_user}", "gists_url": "https://api.github.com/users/marcelodeaguiar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelodeaguiar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelodeaguiar/subscriptions", "organizations_url": "https://api.github.com/users/marcelodeaguiar/orgs", "repos_url": "https://api.github.com/users/marcelodeaguiar/repos", "events_url": "https://api.github.com/users/marcelodeaguiar/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelodeaguiar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-02-10T18:49:25Z", "updated_at": "2015-03-03T13:08:38Z", "closed_at": null, "author_association": "NONE", "body": "Passing _/nocopyright_ from a bash command line (like git bash) returns the error: **Error: The specified rule type was not find:** _path-to-file/nocopyright_\n\nI think it has something to do with the `StringComparer.OrdinalIgnoreCase` used to parse the arguments.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/56/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55/events", "html_url": "https://github.com/dotnet/codeformatter/issues/55", "id": 57169235, "number": 55, "title": "Add VB.NET Styling please", "user": {"login": "Kraeven", "id": 696633, "avatar_url": "https://avatars0.githubusercontent.com/u/696633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kraeven", "html_url": "https://github.com/Kraeven", "followers_url": "https://api.github.com/users/Kraeven/followers", "following_url": "https://api.github.com/users/Kraeven/following{/other_user}", "gists_url": "https://api.github.com/users/Kraeven/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kraeven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kraeven/subscriptions", "organizations_url": "https://api.github.com/users/Kraeven/orgs", "repos_url": "https://api.github.com/users/Kraeven/repos", "events_url": "https://api.github.com/users/Kraeven/events{/privacy}", "received_events_url": "https://api.github.com/users/Kraeven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715750, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2015-02-10T12:38:29Z", "updated_at": "2015-04-12T14:36:22Z", "closed_at": null, "author_association": "NONE", "body": "Hi guys,\n\nI'd love to see VB.NET styling added here, we have a lot of projects in VB (unfortunatly) .\n\nThanks :-)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/55/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/54", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/54/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/54/events", "html_url": "https://github.com/dotnet/codeformatter/issues/54", "id": 57114592, "number": 54, "title": "Add final newline to code files", "user": {"login": "bbowyersmyth", "id": 2482209, "avatar_url": "https://avatars1.githubusercontent.com/u/2482209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbowyersmyth", "html_url": "https://github.com/bbowyersmyth", "followers_url": "https://api.github.com/users/bbowyersmyth/followers", "following_url": "https://api.github.com/users/bbowyersmyth/following{/other_user}", "gists_url": "https://api.github.com/users/bbowyersmyth/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbowyersmyth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbowyersmyth/subscriptions", "organizations_url": "https://api.github.com/users/bbowyersmyth/orgs", "repos_url": "https://api.github.com/users/bbowyersmyth/repos", "events_url": "https://api.github.com/users/bbowyersmyth/events{/privacy}", "received_events_url": "https://api.github.com/users/bbowyersmyth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-10T00:53:52Z", "updated_at": "2015-02-12T20:02:31Z", "closed_at": null, "author_association": "NONE", "body": "More of a git formatting rule but mentioned in http://channel9.msdn.com/Blogs/dotnet/github-for-the-roslyn-team\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/54/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/53", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/53/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/53/events", "html_url": "https://github.com/dotnet/codeformatter/issues/53", "id": 57091352, "number": 53, "title": "Language keywords instead of BCL types", "user": {"login": "bbowyersmyth", "id": 2482209, "avatar_url": "https://avatars1.githubusercontent.com/u/2482209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbowyersmyth", "html_url": "https://github.com/bbowyersmyth", "followers_url": "https://api.github.com/users/bbowyersmyth/followers", "following_url": "https://api.github.com/users/bbowyersmyth/following{/other_user}", "gists_url": "https://api.github.com/users/bbowyersmyth/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbowyersmyth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbowyersmyth/subscriptions", "organizations_url": "https://api.github.com/users/bbowyersmyth/orgs", "repos_url": "https://api.github.com/users/bbowyersmyth/repos", "events_url": "https://api.github.com/users/bbowyersmyth/events{/privacy}", "received_events_url": "https://api.github.com/users/bbowyersmyth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163919080, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/guideline%20gap", "name": "guideline gap", "color": "bfd4f2", "default": false}], "state": "open", "locked": false, "assignee": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-02-09T21:19:15Z", "updated_at": "2015-12-30T02:24:01Z", "closed_at": null, "author_association": "NONE", "body": "> 11.We use language keywords instead of BCL types (i.e.  int, string, float  instead of  Int32, String, Single , etc) for both type references as well as method calls (i.e.  int.Parse  instead of  Int32.Parse ). \n\nDon't know how difficult this is to change via Roslyn but when I see the following:\n\n```\nString[] result = new String[_capslist.Length];\n```\n\nmy first thought is that this is old code. I personally don't mind either way for the method calls, it is mainly the declaration of string and object that give that impression.\n\nThis would likely give a large code churn but it also seems like the best time to do it.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/53/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/39", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/39/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/39/events", "html_url": "https://github.com/dotnet/codeformatter/issues/39", "id": 55345273, "number": 39, "title": "NonAsciiCharactersAreEscapedInLiterals issue with Verbatim Stings", "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715748, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-01-23T23:12:15Z", "updated_at": "2015-01-25T17:32:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "The current rule will convert `@\"This is a snowman: \u2603.\"` to: `@\"This is a snowman: \\u2603.\"`.  This is wrong because we want the unicode literal in the string, not the escaped version.  Instead it should convert it to something like:\n\n``` csharp\n@\"This is a snowman: \" + \"\\u2603\" + @\".\"\n```\n\nNote that to be nice we should probably compress runs of Unicode characters together if they appear one after another.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/39/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/35", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/35/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/35/events", "html_url": "https://github.com/dotnet/codeformatter/issues/35", "id": 55322110, "number": 35, "title": "Adjust comments during field rename", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715750, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-23T19:30:42Z", "updated_at": "2015-01-23T19:30:44Z", "closed_at": null, "author_association": "MEMBER", "body": "Consider the following field definition:\n\n``` csharp\nclass C\n{\n  private int _field1  // Comment\n  private int field2;   // Comment\n}\n```\n\nAfter formatting we end up with:\n\n``` csharp\nclass C\n{\n  private int _field1  // Comment\n  private int _field2;   // Comment\n}\n```\n\nBefore the tool ran the comments were aligned and after they are not.  I think the tool should account for this by detecting this pattern and adjusting the white space after the definition and before the comment to keep the spacing the same.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/35/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/26", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26/events", "html_url": "https://github.com/dotnet/codeformatter/issues/26", "id": 54835042, "number": 26, "title": "HasUsingsOutsideNamespace rule can introduce warning CS0105", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715748, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-01-20T02:02:49Z", "updated_at": "2015-05-21T21:51:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "```\nnamespace A\n{\n    using System;\n}\n\nnamespace B\n{\n    using System;\n}\n```\n\nresults in\n\n```\nusing System;\n\nusing System;\nnamespace A\n{\n}\n\nnamespace B\n{\n}\n```\n\n`warning CS0105: The using directive for 'System' appeared previously in this namespace`\n\nSee nslottow@ef3bbba6a153f4168022f80e2b0702e8a68b728d\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/26/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/20", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/20/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/20/events", "html_url": "https://github.com/dotnet/codeformatter/issues/20", "id": 53956727, "number": 20, "title": "Rename fields referenced in comments", "user": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715748, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-10T12:27:14Z", "updated_at": "2015-01-10T17:35:54Z", "closed_at": null, "author_association": "MEMBER", "body": "Some code bases talk about field in comments. Currently when the code formatter renames a field, it doesn't update the comment.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/20/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/19", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/19/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/19/events", "html_url": "https://github.com/dotnet/codeformatter/issues/19", "id": 53956571, "number": 19, "title": "\"m_\" fields should be renamed regardless of visibility", "user": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715750, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-10T12:20:08Z", "updated_at": "2015-02-24T03:09:29Z", "closed_at": null, "author_association": "MEMBER", "body": "Some code bases use the \"m_\" prefix for internal fields. These should be renamed as with private fields.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/19/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/15", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/15/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/15/events", "html_url": "https://github.com/dotnet/codeformatter/issues/15", "id": 53785522, "number": 15, "title": "Need rule to enforce namespace ordering.", "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163919080, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/guideline%20gap", "name": "guideline gap", "color": "bfd4f2", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-08T18:46:51Z", "updated_at": "2015-01-15T16:17:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Per the guidance:\n\n> Namespace imports should be specified at the top of the file, outside of namespace declarations and   should be sorted alphabetically, with `System. namespaces at the top and blank lines between different top level groups.\n\nWe don't have rule enforcement here.  The tool itself currently has violations.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/15/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/14", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/14/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/14/events", "html_url": "https://github.com/dotnet/codeformatter/issues/14", "id": 53775462, "number": 14, "title": "Add flags to the codeformatter to enable/disable rules from commandline.", "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715750, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-01-08T17:14:46Z", "updated_at": "2015-01-08T17:14:54Z", "closed_at": null, "author_association": "MEMBER", "body": "This feature will be useful to control what rules are to be run from commandline.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/14/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/13", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/13/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/13/events", "html_url": "https://github.com/dotnet/codeformatter/issues/13", "id": 53768374, "number": 13, "title": "Visual Studio auto-formatting extension", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715750, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-01-08T16:18:13Z", "updated_at": "2015-03-14T15:53:21Z", "closed_at": null, "author_association": "MEMBER", "body": "In it's current form the formatter operates as an extra step in the development process:\n1. Write the code for my feature.\n2. Run the formatter tool. \n3. Send PR. \n\nI would really like to remove item 2 as much as possible.  It's an extra step from what developers are doing today and I can very easily see it being labeled as a \"style tax\".  \n\nThis tool shows coding guideline enforcement can be cheaply and reliably automated.  Let's take this tool to the next level so that developers rarely, if every, need to go to the command line formatter for their daily development activities.  \n\nI think a Visual Studio plugin that leverages the underlying library is a great way to integrate the formatting into the existing developer routines.  Many of the formatting operations are cheap enough that they could be done as a part of existing formatting hooks in Visual Studio:\n- When saving a file.\n- When typing a formatting character like <kbd>}</kbd>.\n\nItems like underscores in field names are expensive enough that it would probably need to be done as an explicit user action.  Adding a menu item for that is very cheap.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/13/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "repository_url": "https://api.github.com/repos/dotnet/codeformatter", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12/comments", "events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12/events", "html_url": "https://github.com/dotnet/codeformatter/issues/12", "id": 53767089, "number": 12, "title": "Validation mode", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163715750, "url": "https://api.github.com/repos/dotnet/codeformatter/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-01-08T16:07:46Z", "updated_at": "2015-03-10T01:59:52Z", "closed_at": null, "author_association": "MEMBER", "body": "The code formatter is great tool for getting code into the particular format desired by our guidelines.  That is great for helping developers meet our style guidelines but it does nothing for telling developers that they are failing to meet them.  \n\nWe should add a validation mode to this tool such that it can become a part of a CI system.  A way to validate that new code doesn't violate the coding guidelines.  \n\nTo be clear: I'm not proposing this feature be immediately integrated into any repo.  I'm proposing we add the feature so that teams can decide whether or not they want strict enforcement on checkins. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/12/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "ea592c208dc7117b9b1d61c2c592202cb4362369", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2017-09-21T20:37:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-21T20:37:11Z"}, "message": "Merge pull request #249 from hanswolff/master\n\nFix for issue #248: CodeFormatter returns with exit code 0 on error", "tree": {"sha": "671ada83342aaefba008ea52a9ed4c628a34bd50", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/671ada83342aaefba008ea52a9ed4c628a34bd50"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ea592c208dc7117b9b1d61c2c592202cb4362369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ea592c208dc7117b9b1d61c2c592202cb4362369", "html_url": "https://github.com/dotnet/codeformatter/commit/ea592c208dc7117b9b1d61c2c592202cb4362369", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ea592c208dc7117b9b1d61c2c592202cb4362369/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcc51178e1a82fb2edaf47285f6e577989a7333f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bcc51178e1a82fb2edaf47285f6e577989a7333f", "html_url": "https://github.com/dotnet/codeformatter/commit/bcc51178e1a82fb2edaf47285f6e577989a7333f"}, {"sha": "0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c", "html_url": "https://github.com/dotnet/codeformatter/commit/0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c"}]}, {"sha": "0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c", "commit": {"author": {"name": "Hans Wolff", "email": "hanswolff@users.noreply.github.com", "date": "2016-12-08T12:49:34Z"}, "committer": {"name": "Hans Wolff", "email": "hanswolff@users.noreply.github.com", "date": "2016-12-08T12:49:34Z"}, "message": "Fix for issue #248: CodeFormatter returns with exit code 0 on error", "tree": {"sha": "671ada83342aaefba008ea52a9ed4c628a34bd50", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/671ada83342aaefba008ea52a9ed4c628a34bd50"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c", "html_url": "https://github.com/dotnet/codeformatter/commit/0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0fa52a3fa472ad98f8d7f6dc5db0966bfa30447c/comments", "author": {"login": "hanswolff", "id": 1478348, "avatar_url": "https://avatars3.githubusercontent.com/u/1478348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanswolff", "html_url": "https://github.com/hanswolff", "followers_url": "https://api.github.com/users/hanswolff/followers", "following_url": "https://api.github.com/users/hanswolff/following{/other_user}", "gists_url": "https://api.github.com/users/hanswolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanswolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanswolff/subscriptions", "organizations_url": "https://api.github.com/users/hanswolff/orgs", "repos_url": "https://api.github.com/users/hanswolff/repos", "events_url": "https://api.github.com/users/hanswolff/events{/privacy}", "received_events_url": "https://api.github.com/users/hanswolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hanswolff", "id": 1478348, "avatar_url": "https://avatars3.githubusercontent.com/u/1478348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanswolff", "html_url": "https://github.com/hanswolff", "followers_url": "https://api.github.com/users/hanswolff/followers", "following_url": "https://api.github.com/users/hanswolff/following{/other_user}", "gists_url": "https://api.github.com/users/hanswolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanswolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanswolff/subscriptions", "organizations_url": "https://api.github.com/users/hanswolff/orgs", "repos_url": "https://api.github.com/users/hanswolff/repos", "events_url": "https://api.github.com/users/hanswolff/events{/privacy}", "received_events_url": "https://api.github.com/users/hanswolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcc51178e1a82fb2edaf47285f6e577989a7333f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bcc51178e1a82fb2edaf47285f6e577989a7333f", "html_url": "https://github.com/dotnet/codeformatter/commit/bcc51178e1a82fb2edaf47285f6e577989a7333f"}]}, {"sha": "bcc51178e1a82fb2edaf47285f6e577989a7333f", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2016-11-11T02:33:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-11T02:33:16Z"}, "message": "Merge pull request #245 from alexsorokoletov/run-on-mono\n\nallow CodeFormatter to run on Mono", "tree": {"sha": "38f1df918e65d49b22bf8d517498a31319d2405d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/38f1df918e65d49b22bf8d517498a31319d2405d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/bcc51178e1a82fb2edaf47285f6e577989a7333f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bcc51178e1a82fb2edaf47285f6e577989a7333f", "html_url": "https://github.com/dotnet/codeformatter/commit/bcc51178e1a82fb2edaf47285f6e577989a7333f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/bcc51178e1a82fb2edaf47285f6e577989a7333f/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "313ab9fdbc7a56c842e5b983ad2152716341e1f8", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/313ab9fdbc7a56c842e5b983ad2152716341e1f8", "html_url": "https://github.com/dotnet/codeformatter/commit/313ab9fdbc7a56c842e5b983ad2152716341e1f8"}, {"sha": "fd3cd98df03f4d97ea73965c49e7e7038e56c7da", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/fd3cd98df03f4d97ea73965c49e7e7038e56c7da", "html_url": "https://github.com/dotnet/codeformatter/commit/fd3cd98df03f4d97ea73965c49e7e7038e56c7da"}]}, {"sha": "fd3cd98df03f4d97ea73965c49e7e7038e56c7da", "commit": {"author": {"name": "Alex Sorokoletov", "email": "alex.sorokoletov@gmail.com", "date": "2016-11-11T01:14:05Z"}, "committer": {"name": "Alex Sorokoletov", "email": "alex.sorokoletov@gmail.com", "date": "2016-11-11T01:21:30Z"}, "message": "allow CodeFormatter to run on Mono", "tree": {"sha": "38f1df918e65d49b22bf8d517498a31319d2405d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/38f1df918e65d49b22bf8d517498a31319d2405d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/fd3cd98df03f4d97ea73965c49e7e7038e56c7da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/fd3cd98df03f4d97ea73965c49e7e7038e56c7da", "html_url": "https://github.com/dotnet/codeformatter/commit/fd3cd98df03f4d97ea73965c49e7e7038e56c7da", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/fd3cd98df03f4d97ea73965c49e7e7038e56c7da/comments", "author": {"login": "alexsorokoletov", "id": 1788581, "avatar_url": "https://avatars1.githubusercontent.com/u/1788581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexsorokoletov", "html_url": "https://github.com/alexsorokoletov", "followers_url": "https://api.github.com/users/alexsorokoletov/followers", "following_url": "https://api.github.com/users/alexsorokoletov/following{/other_user}", "gists_url": "https://api.github.com/users/alexsorokoletov/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexsorokoletov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexsorokoletov/subscriptions", "organizations_url": "https://api.github.com/users/alexsorokoletov/orgs", "repos_url": "https://api.github.com/users/alexsorokoletov/repos", "events_url": "https://api.github.com/users/alexsorokoletov/events{/privacy}", "received_events_url": "https://api.github.com/users/alexsorokoletov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexsorokoletov", "id": 1788581, "avatar_url": "https://avatars1.githubusercontent.com/u/1788581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexsorokoletov", "html_url": "https://github.com/alexsorokoletov", "followers_url": "https://api.github.com/users/alexsorokoletov/followers", "following_url": "https://api.github.com/users/alexsorokoletov/following{/other_user}", "gists_url": "https://api.github.com/users/alexsorokoletov/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexsorokoletov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexsorokoletov/subscriptions", "organizations_url": "https://api.github.com/users/alexsorokoletov/orgs", "repos_url": "https://api.github.com/users/alexsorokoletov/repos", "events_url": "https://api.github.com/users/alexsorokoletov/events{/privacy}", "received_events_url": "https://api.github.com/users/alexsorokoletov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "313ab9fdbc7a56c842e5b983ad2152716341e1f8", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/313ab9fdbc7a56c842e5b983ad2152716341e1f8", "html_url": "https://github.com/dotnet/codeformatter/commit/313ab9fdbc7a56c842e5b983ad2152716341e1f8"}]}, {"sha": "313ab9fdbc7a56c842e5b983ad2152716341e1f8", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-10-28T17:58:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-28T17:58:42Z"}, "message": "Merge pull request #243 from dotnet/mmitche-patch-1\n\nUpdate badges to point to new server", "tree": {"sha": "339027f4656081716b11de0245cb0dda8d819557", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/339027f4656081716b11de0245cb0dda8d819557"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/313ab9fdbc7a56c842e5b983ad2152716341e1f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/313ab9fdbc7a56c842e5b983ad2152716341e1f8", "html_url": "https://github.com/dotnet/codeformatter/commit/313ab9fdbc7a56c842e5b983ad2152716341e1f8", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/313ab9fdbc7a56c842e5b983ad2152716341e1f8/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fd15554b0b513c33228877abffb5311409fa39b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fd15554b0b513c33228877abffb5311409fa39b", "html_url": "https://github.com/dotnet/codeformatter/commit/6fd15554b0b513c33228877abffb5311409fa39b"}, {"sha": "b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4", "html_url": "https://github.com/dotnet/codeformatter/commit/b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4"}]}, {"sha": "b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-10-28T17:58:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-28T17:58:34Z"}, "message": "Update badges to point to new server", "tree": {"sha": "339027f4656081716b11de0245cb0dda8d819557", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/339027f4656081716b11de0245cb0dda8d819557"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4", "html_url": "https://github.com/dotnet/codeformatter/commit/b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b8c37d103b54efdc4364a78a51f3dfe6aee8a2d4/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fd15554b0b513c33228877abffb5311409fa39b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fd15554b0b513c33228877abffb5311409fa39b", "html_url": "https://github.com/dotnet/codeformatter/commit/6fd15554b0b513c33228877abffb5311409fa39b"}]}, {"sha": "6fd15554b0b513c33228877abffb5311409fa39b", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-04-22T18:14:36Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-04-22T18:14:36Z"}, "message": "Merge pull request #219 from davkean/Switches\n\nSupport for /help and better error for unrecognized switches", "tree": {"sha": "a4373e0087df4574f6e6f05367a192852b485b4b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a4373e0087df4574f6e6f05367a192852b485b4b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6fd15554b0b513c33228877abffb5311409fa39b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fd15554b0b513c33228877abffb5311409fa39b", "html_url": "https://github.com/dotnet/codeformatter/commit/6fd15554b0b513c33228877abffb5311409fa39b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fd15554b0b513c33228877abffb5311409fa39b/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "html_url": "https://github.com/dotnet/codeformatter/commit/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376"}, {"sha": "ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2", "html_url": "https://github.com/dotnet/codeformatter/commit/ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2"}]}, {"sha": "ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T23:03:53Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-04-22T17:42:39Z"}, "message": "Added support for /help (short form: /?) switch", "tree": {"sha": "a4373e0087df4574f6e6f05367a192852b485b4b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a4373e0087df4574f6e6f05367a192852b485b4b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2", "html_url": "https://github.com/dotnet/codeformatter/commit/ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ee0effeb493c6ed5a39d40b2832ed715bf6f1ce2/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbe1a66d825b113cbfd6a7e2bc478b399ebdd585", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bbe1a66d825b113cbfd6a7e2bc478b399ebdd585", "html_url": "https://github.com/dotnet/codeformatter/commit/bbe1a66d825b113cbfd6a7e2bc478b399ebdd585"}]}, {"sha": "bbe1a66d825b113cbfd6a7e2bc478b399ebdd585", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T22:44:37Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-04-22T17:41:47Z"}, "message": "Do not treat unrecognized switches as formatting targets", "tree": {"sha": "183f15ad01eeabe8912ef93ca95dbd8ea43c1813", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/183f15ad01eeabe8912ef93ca95dbd8ea43c1813"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/bbe1a66d825b113cbfd6a7e2bc478b399ebdd585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bbe1a66d825b113cbfd6a7e2bc478b399ebdd585", "html_url": "https://github.com/dotnet/codeformatter/commit/bbe1a66d825b113cbfd6a7e2bc478b399ebdd585", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/bbe1a66d825b113cbfd6a7e2bc478b399ebdd585/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "html_url": "https://github.com/dotnet/codeformatter/commit/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376"}]}, {"sha": "c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T22:13:26Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T22:13:26Z"}, "message": "Merge pull request #226 from mmitche/update-badges\n\nUpdate badges", "tree": {"sha": "6268077cfed419f1917c4c1c06cff022c1a3a236", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6268077cfed419f1917c4c1c06cff022c1a3a236"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "html_url": "https://github.com/dotnet/codeformatter/commit/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c86cbedfb2f3959f71a2f6520ed9ddc28c79a376/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e76a2f1dbd15e8f251e762555f538a768a86052", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1e76a2f1dbd15e8f251e762555f538a768a86052", "html_url": "https://github.com/dotnet/codeformatter/commit/1e76a2f1dbd15e8f251e762555f538a768a86052"}, {"sha": "084e4e5037084f0dcb67fa26d34ac935dab673ef", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/084e4e5037084f0dcb67fa26d34ac935dab673ef", "html_url": "https://github.com/dotnet/codeformatter/commit/084e4e5037084f0dcb67fa26d34ac935dab673ef"}]}, {"sha": "084e4e5037084f0dcb67fa26d34ac935dab673ef", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T17:38:08Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T22:12:02Z"}, "message": "Generate the job report", "tree": {"sha": "6268077cfed419f1917c4c1c06cff022c1a3a236", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6268077cfed419f1917c4c1c06cff022c1a3a236"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/084e4e5037084f0dcb67fa26d34ac935dab673ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/084e4e5037084f0dcb67fa26d34ac935dab673ef", "html_url": "https://github.com/dotnet/codeformatter/commit/084e4e5037084f0dcb67fa26d34ac935dab673ef", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/084e4e5037084f0dcb67fa26d34ac935dab673ef/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf9ef7a81344d854b25cb70d57c0f8fe0467e891", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf9ef7a81344d854b25cb70d57c0f8fe0467e891", "html_url": "https://github.com/dotnet/codeformatter/commit/cf9ef7a81344d854b25cb70d57c0f8fe0467e891"}]}, {"sha": "cf9ef7a81344d854b25cb70d57c0f8fe0467e891", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T17:37:42Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T17:37:42Z"}, "message": "Update badge locations", "tree": {"sha": "c07eded6901b803598800496c981380f9e97044a", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c07eded6901b803598800496c981380f9e97044a"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/cf9ef7a81344d854b25cb70d57c0f8fe0467e891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf9ef7a81344d854b25cb70d57c0f8fe0467e891", "html_url": "https://github.com/dotnet/codeformatter/commit/cf9ef7a81344d854b25cb70d57c0f8fe0467e891", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf9ef7a81344d854b25cb70d57c0f8fe0467e891/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e76a2f1dbd15e8f251e762555f538a768a86052", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1e76a2f1dbd15e8f251e762555f538a768a86052", "html_url": "https://github.com/dotnet/codeformatter/commit/1e76a2f1dbd15e8f251e762555f538a768a86052"}]}, {"sha": "1e76a2f1dbd15e8f251e762555f538a768a86052", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T16:41:16Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T16:41:16Z"}, "message": "Merge pull request #224 from mmitche/branchify\n\nBranchify and move away from the static labels", "tree": {"sha": "aa8f6b83970543f78d761c3e4e04a198d7151c4b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/aa8f6b83970543f78d761c3e4e04a198d7151c4b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1e76a2f1dbd15e8f251e762555f538a768a86052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1e76a2f1dbd15e8f251e762555f538a768a86052", "html_url": "https://github.com/dotnet/codeformatter/commit/1e76a2f1dbd15e8f251e762555f538a768a86052", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1e76a2f1dbd15e8f251e762555f538a768a86052/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ab78fbcf1f218f18d118898b2e7298440eab60", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/48ab78fbcf1f218f18d118898b2e7298440eab60", "html_url": "https://github.com/dotnet/codeformatter/commit/48ab78fbcf1f218f18d118898b2e7298440eab60"}, {"sha": "0502e593d5eec7d17c153cd98ce70518f8c72400", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0502e593d5eec7d17c153cd98ce70518f8c72400", "html_url": "https://github.com/dotnet/codeformatter/commit/0502e593d5eec7d17c153cd98ce70518f8c72400"}]}, {"sha": "0502e593d5eec7d17c153cd98ce70518f8c72400", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-12T22:08:23Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2016-04-13T16:37:04Z"}, "message": "Branchify and move away from the static labels", "tree": {"sha": "aa8f6b83970543f78d761c3e4e04a198d7151c4b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/aa8f6b83970543f78d761c3e4e04a198d7151c4b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0502e593d5eec7d17c153cd98ce70518f8c72400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0502e593d5eec7d17c153cd98ce70518f8c72400", "html_url": "https://github.com/dotnet/codeformatter/commit/0502e593d5eec7d17c153cd98ce70518f8c72400", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0502e593d5eec7d17c153cd98ce70518f8c72400/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ab78fbcf1f218f18d118898b2e7298440eab60", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/48ab78fbcf1f218f18d118898b2e7298440eab60", "html_url": "https://github.com/dotnet/codeformatter/commit/48ab78fbcf1f218f18d118898b2e7298440eab60"}]}, {"sha": "48ab78fbcf1f218f18d118898b2e7298440eab60", "commit": {"author": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2016-04-05T18:48:47Z"}, "committer": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2016-04-05T18:48:47Z"}, "message": "Merge pull request #221 from davkean/NoCopyright\n\nTurned copyright header off by default", "tree": {"sha": "dc64855dd27972d1d227350752e2e88e46bae2d7", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/dc64855dd27972d1d227350752e2e88e46bae2d7"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/48ab78fbcf1f218f18d118898b2e7298440eab60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/48ab78fbcf1f218f18d118898b2e7298440eab60", "html_url": "https://github.com/dotnet/codeformatter/commit/48ab78fbcf1f218f18d118898b2e7298440eab60", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/48ab78fbcf1f218f18d118898b2e7298440eab60/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe6f6c8eb806500bbc597f4a643812803e7c8b39", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/fe6f6c8eb806500bbc597f4a643812803e7c8b39", "html_url": "https://github.com/dotnet/codeformatter/commit/fe6f6c8eb806500bbc597f4a643812803e7c8b39"}, {"sha": "819f3a8176e2505adf279b256054d396eadeec4d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/819f3a8176e2505adf279b256054d396eadeec4d", "html_url": "https://github.com/dotnet/codeformatter/commit/819f3a8176e2505adf279b256054d396eadeec4d"}]}, {"sha": "fe6f6c8eb806500bbc597f4a643812803e7c8b39", "commit": {"author": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2016-04-05T18:41:30Z"}, "committer": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2016-04-05T18:41:30Z"}, "message": "Merge pull request #222 from davkean/TS\n\nHandle removing \"ts_\" prefix from fields", "tree": {"sha": "6004460b962ffff7681ef653d79c700cd8c30598", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6004460b962ffff7681ef653d79c700cd8c30598"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/fe6f6c8eb806500bbc597f4a643812803e7c8b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/fe6f6c8eb806500bbc597f4a643812803e7c8b39", "html_url": "https://github.com/dotnet/codeformatter/commit/fe6f6c8eb806500bbc597f4a643812803e7c8b39", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/fe6f6c8eb806500bbc597f4a643812803e7c8b39/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13cc3925c639a6baa67d6950cd16b42e709a9e0f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/13cc3925c639a6baa67d6950cd16b42e709a9e0f", "html_url": "https://github.com/dotnet/codeformatter/commit/13cc3925c639a6baa67d6950cd16b42e709a9e0f"}, {"sha": "3440a6232ca5e2e8284f3b21219bc13c65b1dfb8", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3440a6232ca5e2e8284f3b21219bc13c65b1dfb8", "html_url": "https://github.com/dotnet/codeformatter/commit/3440a6232ca5e2e8284f3b21219bc13c65b1dfb8"}]}, {"sha": "13cc3925c639a6baa67d6950cd16b42e709a9e0f", "commit": {"author": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2016-04-05T18:40:31Z"}, "committer": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2016-04-05T18:40:31Z"}, "message": "Merge pull request #223 from davkean/Delegates\n\nFixed default visibility of VB delegates", "tree": {"sha": "685eaf517be56b9529d399d77f86885b643b78f1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/685eaf517be56b9529d399d77f86885b643b78f1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/13cc3925c639a6baa67d6950cd16b42e709a9e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/13cc3925c639a6baa67d6950cd16b42e709a9e0f", "html_url": "https://github.com/dotnet/codeformatter/commit/13cc3925c639a6baa67d6950cd16b42e709a9e0f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/13cc3925c639a6baa67d6950cd16b42e709a9e0f/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7df8bd66e117cff8ceee69d2251c485b81e5d474", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7df8bd66e117cff8ceee69d2251c485b81e5d474", "html_url": "https://github.com/dotnet/codeformatter/commit/7df8bd66e117cff8ceee69d2251c485b81e5d474"}, {"sha": "72be10ad41856b41158780c4fcfd47c5adaa36e2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/72be10ad41856b41158780c4fcfd47c5adaa36e2", "html_url": "https://github.com/dotnet/codeformatter/commit/72be10ad41856b41158780c4fcfd47c5adaa36e2"}]}, {"sha": "72be10ad41856b41158780c4fcfd47c5adaa36e2", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-04-01T18:06:57Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-04-01T18:06:57Z"}, "message": "Fixed default visibility of VB delegates\n\nThey were defaulting to always public.", "tree": {"sha": "685eaf517be56b9529d399d77f86885b643b78f1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/685eaf517be56b9529d399d77f86885b643b78f1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/72be10ad41856b41158780c4fcfd47c5adaa36e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/72be10ad41856b41158780c4fcfd47c5adaa36e2", "html_url": "https://github.com/dotnet/codeformatter/commit/72be10ad41856b41158780c4fcfd47c5adaa36e2", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/72be10ad41856b41158780c4fcfd47c5adaa36e2/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7df8bd66e117cff8ceee69d2251c485b81e5d474", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7df8bd66e117cff8ceee69d2251c485b81e5d474", "html_url": "https://github.com/dotnet/codeformatter/commit/7df8bd66e117cff8ceee69d2251c485b81e5d474"}]}, {"sha": "3440a6232ca5e2e8284f3b21219bc13c65b1dfb8", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-04-01T16:42:40Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-04-01T16:45:17Z"}, "message": "Handle removing \"ts_\" prefix from fields\n\nSome .NET code that I ported uses the \"ts_\" prefix for thread static, added support for removing it.", "tree": {"sha": "b90c8d40fb0a92df5a7717979705143c15776f90", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/b90c8d40fb0a92df5a7717979705143c15776f90"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3440a6232ca5e2e8284f3b21219bc13c65b1dfb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3440a6232ca5e2e8284f3b21219bc13c65b1dfb8", "html_url": "https://github.com/dotnet/codeformatter/commit/3440a6232ca5e2e8284f3b21219bc13c65b1dfb8", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3440a6232ca5e2e8284f3b21219bc13c65b1dfb8/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7df8bd66e117cff8ceee69d2251c485b81e5d474", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7df8bd66e117cff8ceee69d2251c485b81e5d474", "html_url": "https://github.com/dotnet/codeformatter/commit/7df8bd66e117cff8ceee69d2251c485b81e5d474"}]}, {"sha": "819f3a8176e2505adf279b256054d396eadeec4d", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-31T00:33:58Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-31T00:33:58Z"}, "message": "Turned copyright header off by default\n\nBefore my change there were two options, specifying /nocopyright, or specifying /copyright:foo.txt. If we switched the header off by default, there was no way to opt into the default, therefore, I added enable/disable options to the copyright switch similar to /rule:\n\nTo turn on default copyright, you do:\n\ncodeformatter test.proj /copyright\ncodeformatter test.proj /copyright+\n\nTo turn off default copyright, you do:\n\ncodeformatter test.proj\ncodeformatter test.proj /copyright-\ncodeformatter test.proj /nocopyright (for backwards compat - not doc'd)\n\nAnd like before you can specify a file:\ncodeformatter test.proj /copyright:copyright.txt", "tree": {"sha": "30bea909c3f8c2bf017cab9ccb11efa9cd5c429b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/30bea909c3f8c2bf017cab9ccb11efa9cd5c429b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/819f3a8176e2505adf279b256054d396eadeec4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/819f3a8176e2505adf279b256054d396eadeec4d", "html_url": "https://github.com/dotnet/codeformatter/commit/819f3a8176e2505adf279b256054d396eadeec4d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/819f3a8176e2505adf279b256054d396eadeec4d/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1937b9afad2a465a21e90043df336230b5bcdaf6", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1937b9afad2a465a21e90043df336230b5bcdaf6", "html_url": "https://github.com/dotnet/codeformatter/commit/1937b9afad2a465a21e90043df336230b5bcdaf6"}]}, {"sha": "1937b9afad2a465a21e90043df336230b5bcdaf6", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T23:48:05Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T23:48:05Z"}, "message": "Reorder copyright and nocopyright together\n\nThis is in preparation for fixing #151.", "tree": {"sha": "3a8d7fcd44ac529f495409925e4c2e7cf9b64815", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3a8d7fcd44ac529f495409925e4c2e7cf9b64815"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1937b9afad2a465a21e90043df336230b5bcdaf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1937b9afad2a465a21e90043df336230b5bcdaf6", "html_url": "https://github.com/dotnet/codeformatter/commit/1937b9afad2a465a21e90043df336230b5bcdaf6", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1937b9afad2a465a21e90043df336230b5bcdaf6/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da1903d54a609d20f16ccf92a8e20895379a3d85", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/da1903d54a609d20f16ccf92a8e20895379a3d85", "html_url": "https://github.com/dotnet/codeformatter/commit/da1903d54a609d20f16ccf92a8e20895379a3d85"}]}, {"sha": "da1903d54a609d20f16ccf92a8e20895379a3d85", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T23:46:45Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T23:46:45Z"}, "message": "Opt remaining switch comparisons into using local comparer", "tree": {"sha": "3a7c4a4a68be752538c61190ef2b5b6d3a459eeb", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3a7c4a4a68be752538c61190ef2b5b6d3a459eeb"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/da1903d54a609d20f16ccf92a8e20895379a3d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/da1903d54a609d20f16ccf92a8e20895379a3d85", "html_url": "https://github.com/dotnet/codeformatter/commit/da1903d54a609d20f16ccf92a8e20895379a3d85", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/da1903d54a609d20f16ccf92a8e20895379a3d85/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "html_url": "https://github.com/dotnet/codeformatter/commit/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116"}]}, {"sha": "7df8bd66e117cff8ceee69d2251c485b81e5d474", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T22:56:09Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T22:56:09Z"}, "message": "Merge pull request #218 from davkean/PrivateFieldNamingRule\n\nNo longer crash when PrivateFieldNamingRule encounters WithEvents", "tree": {"sha": "c8c55fb524e6981b4ee9fffd90f2ff951ac94bde", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c8c55fb524e6981b4ee9fffd90f2ff951ac94bde"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/7df8bd66e117cff8ceee69d2251c485b81e5d474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7df8bd66e117cff8ceee69d2251c485b81e5d474", "html_url": "https://github.com/dotnet/codeformatter/commit/7df8bd66e117cff8ceee69d2251c485b81e5d474", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/7df8bd66e117cff8ceee69d2251c485b81e5d474/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "html_url": "https://github.com/dotnet/codeformatter/commit/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116"}, {"sha": "f174ac403bdc66cc1fa0f7f3674978d6366337dc", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f174ac403bdc66cc1fa0f7f3674978d6366337dc", "html_url": "https://github.com/dotnet/codeformatter/commit/f174ac403bdc66cc1fa0f7f3674978d6366337dc"}]}, {"sha": "f174ac403bdc66cc1fa0f7f3674978d6366337dc", "commit": {"author": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T21:30:19Z"}, "committer": {"name": "David Kean", "email": "davkean@microsoft.com", "date": "2016-03-30T21:36:24Z"}, "message": "No longer crash when PrivateFieldNamingRule encounters WithEvents\n\nFixes: #216", "tree": {"sha": "c8c55fb524e6981b4ee9fffd90f2ff951ac94bde", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c8c55fb524e6981b4ee9fffd90f2ff951ac94bde"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f174ac403bdc66cc1fa0f7f3674978d6366337dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f174ac403bdc66cc1fa0f7f3674978d6366337dc", "html_url": "https://github.com/dotnet/codeformatter/commit/f174ac403bdc66cc1fa0f7f3674978d6366337dc", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f174ac403bdc66cc1fa0f7f3674978d6366337dc/comments", "author": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "html_url": "https://github.com/dotnet/codeformatter/commit/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116"}]}, {"sha": "849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "commit": {"author": {"name": "Peter Marcu", "email": "peter.marcu@microsoft.com", "date": "2016-01-29T01:06:05Z"}, "committer": {"name": "Peter Marcu", "email": "peter.marcu@microsoft.com", "date": "2016-01-29T01:06:05Z"}, "message": "Merge pull request #206 from stephentoub/licensing_headers\n\nUpdate licensing headers", "tree": {"sha": "d4fd1849b95fc4e4db5a508cdf5a93972d9e662a", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d4fd1849b95fc4e4db5a508cdf5a93972d9e662a"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "html_url": "https://github.com/dotnet/codeformatter/commit/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/849fcf60f6b6d85a34e28a9a4d42d82b5ed03116/comments", "author": {"login": "Petermarcu", "id": 8228359, "avatar_url": "https://avatars3.githubusercontent.com/u/8228359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Petermarcu", "html_url": "https://github.com/Petermarcu", "followers_url": "https://api.github.com/users/Petermarcu/followers", "following_url": "https://api.github.com/users/Petermarcu/following{/other_user}", "gists_url": "https://api.github.com/users/Petermarcu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Petermarcu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Petermarcu/subscriptions", "organizations_url": "https://api.github.com/users/Petermarcu/orgs", "repos_url": "https://api.github.com/users/Petermarcu/repos", "events_url": "https://api.github.com/users/Petermarcu/events{/privacy}", "received_events_url": "https://api.github.com/users/Petermarcu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Petermarcu", "id": 8228359, "avatar_url": "https://avatars3.githubusercontent.com/u/8228359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Petermarcu", "html_url": "https://github.com/Petermarcu", "followers_url": "https://api.github.com/users/Petermarcu/followers", "following_url": "https://api.github.com/users/Petermarcu/following{/other_user}", "gists_url": "https://api.github.com/users/Petermarcu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Petermarcu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Petermarcu/subscriptions", "organizations_url": "https://api.github.com/users/Petermarcu/orgs", "repos_url": "https://api.github.com/users/Petermarcu/repos", "events_url": "https://api.github.com/users/Petermarcu/events{/privacy}", "received_events_url": "https://api.github.com/users/Petermarcu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d049ad1e24cbb0072cd722b40e8ab79e886e669", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8d049ad1e24cbb0072cd722b40e8ab79e886e669", "html_url": "https://github.com/dotnet/codeformatter/commit/8d049ad1e24cbb0072cd722b40e8ab79e886e669"}, {"sha": "0c23f29098953dc05665797c292a4b3a4562e886", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c23f29098953dc05665797c292a4b3a4562e886", "html_url": "https://github.com/dotnet/codeformatter/commit/0c23f29098953dc05665797c292a4b3a4562e886"}]}, {"sha": "0c23f29098953dc05665797c292a4b3a4562e886", "commit": {"author": {"name": "dotnet-bot", "email": "dotnet-bot@microsoft.com", "date": "2016-01-28T05:27:33Z"}, "committer": {"name": "stephentoub", "email": "stoub@microsoft.com", "date": "2016-01-28T05:29:03Z"}, "message": "Update licensing headers", "tree": {"sha": "d4fd1849b95fc4e4db5a508cdf5a93972d9e662a", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d4fd1849b95fc4e4db5a508cdf5a93972d9e662a"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0c23f29098953dc05665797c292a4b3a4562e886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c23f29098953dc05665797c292a4b3a4562e886", "html_url": "https://github.com/dotnet/codeformatter/commit/0c23f29098953dc05665797c292a4b3a4562e886", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c23f29098953dc05665797c292a4b3a4562e886/comments", "author": {"login": "dotnet-bot", "id": 9011267, "avatar_url": "https://avatars3.githubusercontent.com/u/9011267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet-bot", "html_url": "https://github.com/dotnet-bot", "followers_url": "https://api.github.com/users/dotnet-bot/followers", "following_url": "https://api.github.com/users/dotnet-bot/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet-bot/subscriptions", "organizations_url": "https://api.github.com/users/dotnet-bot/orgs", "repos_url": "https://api.github.com/users/dotnet-bot/repos", "events_url": "https://api.github.com/users/dotnet-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet-bot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d049ad1e24cbb0072cd722b40e8ab79e886e669", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8d049ad1e24cbb0072cd722b40e8ab79e886e669", "html_url": "https://github.com/dotnet/codeformatter/commit/8d049ad1e24cbb0072cd722b40e8ab79e886e669"}]}, {"sha": "8d049ad1e24cbb0072cd722b40e8ab79e886e669", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-10-09T18:26:16Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-10-09T18:26:16Z"}, "message": "Merge pull request #187 from mmitche/simplify-creation\n\nSimplify job creation using new utility functionality", "tree": {"sha": "94a86bc8b2560e48bd6f218fa376d9bb36e4742c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/94a86bc8b2560e48bd6f218fa376d9bb36e4742c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8d049ad1e24cbb0072cd722b40e8ab79e886e669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8d049ad1e24cbb0072cd722b40e8ab79e886e669", "html_url": "https://github.com/dotnet/codeformatter/commit/8d049ad1e24cbb0072cd722b40e8ab79e886e669", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8d049ad1e24cbb0072cd722b40e8ab79e886e669/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fb92f523cda163c1a7a00eb69636159080a0c66", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fb92f523cda163c1a7a00eb69636159080a0c66", "html_url": "https://github.com/dotnet/codeformatter/commit/6fb92f523cda163c1a7a00eb69636159080a0c66"}, {"sha": "a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b", "html_url": "https://github.com/dotnet/codeformatter/commit/a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b"}]}, {"sha": "a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-10-09T18:21:27Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-10-09T18:21:27Z"}, "message": "Simplify job creation using new utility functionality", "tree": {"sha": "94a86bc8b2560e48bd6f218fa376d9bb36e4742c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/94a86bc8b2560e48bd6f218fa376d9bb36e4742c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b", "html_url": "https://github.com/dotnet/codeformatter/commit/a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a8a3dbd1d38b4cc1202b3d3ab1fd00aef6dc494b/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fb92f523cda163c1a7a00eb69636159080a0c66", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fb92f523cda163c1a7a00eb69636159080a0c66", "html_url": "https://github.com/dotnet/codeformatter/commit/6fb92f523cda163c1a7a00eb69636159080a0c66"}]}, {"sha": "6fb92f523cda163c1a7a00eb69636159080a0c66", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-09-25T16:37:28Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-09-25T16:37:28Z"}, "message": "Merge pull request #182 from mmitche/update-badges\n\nUpdate badges to new job location", "tree": {"sha": "ccd72daf275f34617adb8b06a0efd9a7dfd2dc86", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ccd72daf275f34617adb8b06a0efd9a7dfd2dc86"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6fb92f523cda163c1a7a00eb69636159080a0c66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fb92f523cda163c1a7a00eb69636159080a0c66", "html_url": "https://github.com/dotnet/codeformatter/commit/6fb92f523cda163c1a7a00eb69636159080a0c66", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6fb92f523cda163c1a7a00eb69636159080a0c66/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01246981b9fa06b977fba6788bcdf2dd6985a0ae", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/01246981b9fa06b977fba6788bcdf2dd6985a0ae", "html_url": "https://github.com/dotnet/codeformatter/commit/01246981b9fa06b977fba6788bcdf2dd6985a0ae"}, {"sha": "63f0fd59f14eae44b96e87aa64e110f71e02e27a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/63f0fd59f14eae44b96e87aa64e110f71e02e27a", "html_url": "https://github.com/dotnet/codeformatter/commit/63f0fd59f14eae44b96e87aa64e110f71e02e27a"}]}, {"sha": "63f0fd59f14eae44b96e87aa64e110f71e02e27a", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-09-25T16:34:36Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-09-25T16:34:36Z"}, "message": "Update badges to new job location", "tree": {"sha": "ccd72daf275f34617adb8b06a0efd9a7dfd2dc86", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ccd72daf275f34617adb8b06a0efd9a7dfd2dc86"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/63f0fd59f14eae44b96e87aa64e110f71e02e27a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/63f0fd59f14eae44b96e87aa64e110f71e02e27a", "html_url": "https://github.com/dotnet/codeformatter/commit/63f0fd59f14eae44b96e87aa64e110f71e02e27a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/63f0fd59f14eae44b96e87aa64e110f71e02e27a/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01246981b9fa06b977fba6788bcdf2dd6985a0ae", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/01246981b9fa06b977fba6788bcdf2dd6985a0ae", "html_url": "https://github.com/dotnet/codeformatter/commit/01246981b9fa06b977fba6788bcdf2dd6985a0ae"}]}, {"sha": "01246981b9fa06b977fba6788bcdf2dd6985a0ae", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-09-25T16:31:53Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-09-25T16:31:53Z"}, "message": "Merge pull request #181 from mmitche/add-netci\n\nAdd new style CI definition for codeformatter project", "tree": {"sha": "81bb4a2a2a32a27df93fa2f83fa532884f8a0b4a", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/81bb4a2a2a32a27df93fa2f83fa532884f8a0b4a"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/01246981b9fa06b977fba6788bcdf2dd6985a0ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/01246981b9fa06b977fba6788bcdf2dd6985a0ae", "html_url": "https://github.com/dotnet/codeformatter/commit/01246981b9fa06b977fba6788bcdf2dd6985a0ae", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/01246981b9fa06b977fba6788bcdf2dd6985a0ae/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb5a8ae4d44c57d2bae1a960666206130445d448", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bb5a8ae4d44c57d2bae1a960666206130445d448", "html_url": "https://github.com/dotnet/codeformatter/commit/bb5a8ae4d44c57d2bae1a960666206130445d448"}, {"sha": "ae8981846b84b2d7cc48b29137bf030ed29b41ef", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ae8981846b84b2d7cc48b29137bf030ed29b41ef", "html_url": "https://github.com/dotnet/codeformatter/commit/ae8981846b84b2d7cc48b29137bf030ed29b41ef"}]}, {"sha": "ae8981846b84b2d7cc48b29137bf030ed29b41ef", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-09-25T16:21:19Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-09-25T16:21:19Z"}, "message": "Add new style CI definition for codeformatter project", "tree": {"sha": "7c35a73b2fbda5a98b52d8061487db0f5af31eef", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/7c35a73b2fbda5a98b52d8061487db0f5af31eef"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ae8981846b84b2d7cc48b29137bf030ed29b41ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ae8981846b84b2d7cc48b29137bf030ed29b41ef", "html_url": "https://github.com/dotnet/codeformatter/commit/ae8981846b84b2d7cc48b29137bf030ed29b41ef", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ae8981846b84b2d7cc48b29137bf030ed29b41ef/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68004f5dcaa63bbd29496934d73004b98330ad22", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/68004f5dcaa63bbd29496934d73004b98330ad22", "html_url": "https://github.com/dotnet/codeformatter/commit/68004f5dcaa63bbd29496934d73004b98330ad22"}]}, {"sha": "bb5a8ae4d44c57d2bae1a960666206130445d448", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-09-11T16:58:00Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-09-11T16:58:00Z"}, "message": "Merge pull request #154 from jaredmoo/CopyrightHeaderBinLocation\n\nCopy CopyrightHeader.md and IllegalHeaders.md to the correct output location", "tree": {"sha": "b3c7f27a2bca1d0227d0c31d16b9007690fc7e6a", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/b3c7f27a2bca1d0227d0c31d16b9007690fc7e6a"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/bb5a8ae4d44c57d2bae1a960666206130445d448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bb5a8ae4d44c57d2bae1a960666206130445d448", "html_url": "https://github.com/dotnet/codeformatter/commit/bb5a8ae4d44c57d2bae1a960666206130445d448", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/bb5a8ae4d44c57d2bae1a960666206130445d448/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c833fdc02309c7fce573303f7fbdb65cc19f6a5f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c833fdc02309c7fce573303f7fbdb65cc19f6a5f", "html_url": "https://github.com/dotnet/codeformatter/commit/c833fdc02309c7fce573303f7fbdb65cc19f6a5f"}, {"sha": "dbf7b8a758eb755589d57136eab7c7fb45f3a891", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dbf7b8a758eb755589d57136eab7c7fb45f3a891", "html_url": "https://github.com/dotnet/codeformatter/commit/dbf7b8a758eb755589d57136eab7c7fb45f3a891"}]}, {"sha": "c833fdc02309c7fce573303f7fbdb65cc19f6a5f", "commit": {"author": {"name": "Gen Lu", "email": "genlu@users.noreply.github.com", "date": "2015-08-26T18:27:32Z"}, "committer": {"name": "Gen Lu", "email": "genlu@users.noreply.github.com", "date": "2015-08-26T18:27:32Z"}, "message": "Merge pull request #169 from rainersigwald/keep-class-comments-in-xunit\n\nPreserve leading trivia when deleting TestClassAttribute", "tree": {"sha": "5373c724eacd2b0aa9ee86adefcddc0a6a7fbacd", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5373c724eacd2b0aa9ee86adefcddc0a6a7fbacd"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c833fdc02309c7fce573303f7fbdb65cc19f6a5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c833fdc02309c7fce573303f7fbdb65cc19f6a5f", "html_url": "https://github.com/dotnet/codeformatter/commit/c833fdc02309c7fce573303f7fbdb65cc19f6a5f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c833fdc02309c7fce573303f7fbdb65cc19f6a5f/comments", "author": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a35a6cdd95f0722af0ebd76fe1496d002a8d646b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a35a6cdd95f0722af0ebd76fe1496d002a8d646b", "html_url": "https://github.com/dotnet/codeformatter/commit/a35a6cdd95f0722af0ebd76fe1496d002a8d646b"}, {"sha": "0458032020e7fff4771fa48a55c0c3a046753dfb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0458032020e7fff4771fa48a55c0c3a046753dfb", "html_url": "https://github.com/dotnet/codeformatter/commit/0458032020e7fff4771fa48a55c0c3a046753dfb"}]}, {"sha": "0458032020e7fff4771fa48a55c0c3a046753dfb", "commit": {"author": {"name": "Rainer Sigwald", "email": "raines@microsoft.com", "date": "2015-08-18T01:08:15Z"}, "committer": {"name": "Rainer Sigwald", "email": "raines@microsoft.com", "date": "2015-08-18T02:23:35Z"}, "message": "Preserve leading trivia when deleting TestClassAttribute\n\nI noticed diffs of the form:\n\n-    /// <summary>\n-    /// Verify the functioning of the BuildErrorEventArg class.\n-    /// </summary>\n-    [TestClass]\n\nWhere not only was the not-needed-in-xunit attribute removed, but its\nremoval also deleted class-level doc comments.  This change preserves\nleading trivia on the deleted AttributeList.  That trivia is normally\nblank (so this doesn't break the existing scenario), but a leading comment\nor doc comment will be present there.", "tree": {"sha": "5373c724eacd2b0aa9ee86adefcddc0a6a7fbacd", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5373c724eacd2b0aa9ee86adefcddc0a6a7fbacd"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0458032020e7fff4771fa48a55c0c3a046753dfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0458032020e7fff4771fa48a55c0c3a046753dfb", "html_url": "https://github.com/dotnet/codeformatter/commit/0458032020e7fff4771fa48a55c0c3a046753dfb", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0458032020e7fff4771fa48a55c0c3a046753dfb/comments", "author": {"login": "rainersigwald", "id": 3347530, "avatar_url": "https://avatars1.githubusercontent.com/u/3347530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rainersigwald", "html_url": "https://github.com/rainersigwald", "followers_url": "https://api.github.com/users/rainersigwald/followers", "following_url": "https://api.github.com/users/rainersigwald/following{/other_user}", "gists_url": "https://api.github.com/users/rainersigwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/rainersigwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rainersigwald/subscriptions", "organizations_url": "https://api.github.com/users/rainersigwald/orgs", "repos_url": "https://api.github.com/users/rainersigwald/repos", "events_url": "https://api.github.com/users/rainersigwald/events{/privacy}", "received_events_url": "https://api.github.com/users/rainersigwald/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rainersigwald", "id": 3347530, "avatar_url": "https://avatars1.githubusercontent.com/u/3347530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rainersigwald", "html_url": "https://github.com/rainersigwald", "followers_url": "https://api.github.com/users/rainersigwald/followers", "following_url": "https://api.github.com/users/rainersigwald/following{/other_user}", "gists_url": "https://api.github.com/users/rainersigwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/rainersigwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rainersigwald/subscriptions", "organizations_url": "https://api.github.com/users/rainersigwald/orgs", "repos_url": "https://api.github.com/users/rainersigwald/repos", "events_url": "https://api.github.com/users/rainersigwald/events{/privacy}", "received_events_url": "https://api.github.com/users/rainersigwald/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a35a6cdd95f0722af0ebd76fe1496d002a8d646b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a35a6cdd95f0722af0ebd76fe1496d002a8d646b", "html_url": "https://github.com/dotnet/codeformatter/commit/a35a6cdd95f0722af0ebd76fe1496d002a8d646b"}]}, {"sha": "a35a6cdd95f0722af0ebd76fe1496d002a8d646b", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-08-11T17:44:30Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-08-11T17:44:30Z"}, "message": "Merge pull request #99 from AndyGerlicher/header-location-78\n\nChange CopyrightHeaderRule order to run later", "tree": {"sha": "a00d353352e82aebf49ca8a1a836142a1fe12b82", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a00d353352e82aebf49ca8a1a836142a1fe12b82"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a35a6cdd95f0722af0ebd76fe1496d002a8d646b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a35a6cdd95f0722af0ebd76fe1496d002a8d646b", "html_url": "https://github.com/dotnet/codeformatter/commit/a35a6cdd95f0722af0ebd76fe1496d002a8d646b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a35a6cdd95f0722af0ebd76fe1496d002a8d646b/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c3dbbdacf9677c5d2537c709d3a64628d90edb0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9c3dbbdacf9677c5d2537c709d3a64628d90edb0", "html_url": "https://github.com/dotnet/codeformatter/commit/9c3dbbdacf9677c5d2537c709d3a64628d90edb0"}, {"sha": "7491aeae06ff96d2ce20f9d3d5166869a325fe0a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7491aeae06ff96d2ce20f9d3d5166869a325fe0a", "html_url": "https://github.com/dotnet/codeformatter/commit/7491aeae06ff96d2ce20f9d3d5166869a325fe0a"}]}, {"sha": "dbf7b8a758eb755589d57136eab7c7fb45f3a891", "commit": {"author": {"name": "Jared Moore", "email": "jaredmoo@microsoft.com", "date": "2015-07-28T19:00:30Z"}, "committer": {"name": "Jared Moore", "email": "jaredmoo@microsoft.com", "date": "2015-07-28T19:00:30Z"}, "message": "Copy CopyrightHeader.md and IllegalHeaders.md to the correct output location.\n\nChanged CopyrightHeader.md and IllegalHeaders.md from <None> items to <Content> items because they are files that are used by the output binaries. Use msbuild's builtin <CopyToOutputDirectory> instead of having a manual copy step.", "tree": {"sha": "8b28d715df096232516fb7eca109610e93f218f6", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8b28d715df096232516fb7eca109610e93f218f6"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/dbf7b8a758eb755589d57136eab7c7fb45f3a891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dbf7b8a758eb755589d57136eab7c7fb45f3a891", "html_url": "https://github.com/dotnet/codeformatter/commit/dbf7b8a758eb755589d57136eab7c7fb45f3a891", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/dbf7b8a758eb755589d57136eab7c7fb45f3a891/comments", "author": {"login": "jaredmoo", "id": 3248887, "avatar_url": "https://avatars0.githubusercontent.com/u/3248887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredmoo", "html_url": "https://github.com/jaredmoo", "followers_url": "https://api.github.com/users/jaredmoo/followers", "following_url": "https://api.github.com/users/jaredmoo/following{/other_user}", "gists_url": "https://api.github.com/users/jaredmoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredmoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredmoo/subscriptions", "organizations_url": "https://api.github.com/users/jaredmoo/orgs", "repos_url": "https://api.github.com/users/jaredmoo/repos", "events_url": "https://api.github.com/users/jaredmoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredmoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredmoo", "id": 3248887, "avatar_url": "https://avatars0.githubusercontent.com/u/3248887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredmoo", "html_url": "https://github.com/jaredmoo", "followers_url": "https://api.github.com/users/jaredmoo/followers", "following_url": "https://api.github.com/users/jaredmoo/following{/other_user}", "gists_url": "https://api.github.com/users/jaredmoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredmoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredmoo/subscriptions", "organizations_url": "https://api.github.com/users/jaredmoo/orgs", "repos_url": "https://api.github.com/users/jaredmoo/repos", "events_url": "https://api.github.com/users/jaredmoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredmoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c3dbbdacf9677c5d2537c709d3a64628d90edb0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9c3dbbdacf9677c5d2537c709d3a64628d90edb0", "html_url": "https://github.com/dotnet/codeformatter/commit/9c3dbbdacf9677c5d2537c709d3a64628d90edb0"}]}, {"sha": "9c3dbbdacf9677c5d2537c709d3a64628d90edb0", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-07-27T14:41:23Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-07-27T14:41:23Z"}, "message": "Merge pull request #150 from hickford/patch-1\n\nUpdate README.md", "tree": {"sha": "081d911f5ab812309b41effa7ab3121ec4221367", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/081d911f5ab812309b41effa7ab3121ec4221367"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/9c3dbbdacf9677c5d2537c709d3a64628d90edb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9c3dbbdacf9677c5d2537c709d3a64628d90edb0", "html_url": "https://github.com/dotnet/codeformatter/commit/9c3dbbdacf9677c5d2537c709d3a64628d90edb0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/9c3dbbdacf9677c5d2537c709d3a64628d90edb0/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "117ab91162bc544946fe0a327a844fe8257becad", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/117ab91162bc544946fe0a327a844fe8257becad", "html_url": "https://github.com/dotnet/codeformatter/commit/117ab91162bc544946fe0a327a844fe8257becad"}, {"sha": "13dbf0ca5d272b030d08c79c01d20972bff64748", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/13dbf0ca5d272b030d08c79c01d20972bff64748", "html_url": "https://github.com/dotnet/codeformatter/commit/13dbf0ca5d272b030d08c79c01d20972bff64748"}]}, {"sha": "13dbf0ca5d272b030d08c79c01d20972bff64748", "commit": {"author": {"name": "Mirth Hickford", "email": "mirth.hickford@gmail.com", "date": "2015-07-27T14:26:25Z"}, "committer": {"name": "Mirth Hickford", "email": "mirth.hickford@gmail.com", "date": "2015-07-27T14:26:25Z"}, "message": "Update README.md\n\nAdd link to downloads. Fix dead link to Microsoft Build Tools", "tree": {"sha": "081d911f5ab812309b41effa7ab3121ec4221367", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/081d911f5ab812309b41effa7ab3121ec4221367"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/13dbf0ca5d272b030d08c79c01d20972bff64748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/13dbf0ca5d272b030d08c79c01d20972bff64748", "html_url": "https://github.com/dotnet/codeformatter/commit/13dbf0ca5d272b030d08c79c01d20972bff64748", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/13dbf0ca5d272b030d08c79c01d20972bff64748/comments", "author": {"login": "hickford", "id": 105314, "avatar_url": "https://avatars1.githubusercontent.com/u/105314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hickford", "html_url": "https://github.com/hickford", "followers_url": "https://api.github.com/users/hickford/followers", "following_url": "https://api.github.com/users/hickford/following{/other_user}", "gists_url": "https://api.github.com/users/hickford/gists{/gist_id}", "starred_url": "https://api.github.com/users/hickford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hickford/subscriptions", "organizations_url": "https://api.github.com/users/hickford/orgs", "repos_url": "https://api.github.com/users/hickford/repos", "events_url": "https://api.github.com/users/hickford/events{/privacy}", "received_events_url": "https://api.github.com/users/hickford/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hickford", "id": 105314, "avatar_url": "https://avatars1.githubusercontent.com/u/105314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hickford", "html_url": "https://github.com/hickford", "followers_url": "https://api.github.com/users/hickford/followers", "following_url": "https://api.github.com/users/hickford/following{/other_user}", "gists_url": "https://api.github.com/users/hickford/gists{/gist_id}", "starred_url": "https://api.github.com/users/hickford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hickford/subscriptions", "organizations_url": "https://api.github.com/users/hickford/orgs", "repos_url": "https://api.github.com/users/hickford/repos", "events_url": "https://api.github.com/users/hickford/events{/privacy}", "received_events_url": "https://api.github.com/users/hickford/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "117ab91162bc544946fe0a327a844fe8257becad", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/117ab91162bc544946fe0a327a844fe8257becad", "html_url": "https://github.com/dotnet/codeformatter/commit/117ab91162bc544946fe0a327a844fe8257becad"}]}, {"sha": "117ab91162bc544946fe0a327a844fe8257becad", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-07-21T22:51:34Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-07-21T22:51:34Z"}, "message": "Merge pull request #149 from genlu/UpgradeNuget\n\nUpgrade to Roslyn 1.0.0", "tree": {"sha": "25ad9a16137bb92cc11a5c4614ba0d706af2a418", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/25ad9a16137bb92cc11a5c4614ba0d706af2a418"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/117ab91162bc544946fe0a327a844fe8257becad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/117ab91162bc544946fe0a327a844fe8257becad", "html_url": "https://github.com/dotnet/codeformatter/commit/117ab91162bc544946fe0a327a844fe8257becad", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/117ab91162bc544946fe0a327a844fe8257becad/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d719e4e650c65decdb3637eb146ebeee009c4e6", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1d719e4e650c65decdb3637eb146ebeee009c4e6", "html_url": "https://github.com/dotnet/codeformatter/commit/1d719e4e650c65decdb3637eb146ebeee009c4e6"}, {"sha": "a8caa2244755b16becdc9dba4e0a391c7af1b7be", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a8caa2244755b16becdc9dba4e0a391c7af1b7be", "html_url": "https://github.com/dotnet/codeformatter/commit/a8caa2244755b16becdc9dba4e0a391c7af1b7be"}]}, {"sha": "a8caa2244755b16becdc9dba4e0a391c7af1b7be", "commit": {"author": {"name": "Gen Lu", "email": "luke.yolanda@gmail.com", "date": "2015-07-21T22:17:31Z"}, "committer": {"name": "Gen Lu", "email": "luke.yolanda@gmail.com", "date": "2015-07-21T22:17:31Z"}, "message": "Upgrade to Roslyn 1.0.0\n\nAdd Microsoft.CodeAnalysis.CSharp.Analyzers and Microsoft.CodeAnalysis.Analyzers to Microsoft.DotNet.CodeFormatting project, which was installed but never used.", "tree": {"sha": "25ad9a16137bb92cc11a5c4614ba0d706af2a418", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/25ad9a16137bb92cc11a5c4614ba0d706af2a418"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a8caa2244755b16becdc9dba4e0a391c7af1b7be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a8caa2244755b16becdc9dba4e0a391c7af1b7be", "html_url": "https://github.com/dotnet/codeformatter/commit/a8caa2244755b16becdc9dba4e0a391c7af1b7be", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a8caa2244755b16becdc9dba4e0a391c7af1b7be/comments", "author": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d719e4e650c65decdb3637eb146ebeee009c4e6", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1d719e4e650c65decdb3637eb146ebeee009c4e6", "html_url": "https://github.com/dotnet/codeformatter/commit/1d719e4e650c65decdb3637eb146ebeee009c4e6"}]}, {"sha": "1d719e4e650c65decdb3637eb146ebeee009c4e6", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-07-08T22:31:45Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-07-08T22:31:45Z"}, "message": "Merge pull request #144 from jaredpar/fix-using\n\nDisable the using location rule by default", "tree": {"sha": "d1f822ca510ec57258273975d5a2ff2e9fc7126d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d1f822ca510ec57258273975d5a2ff2e9fc7126d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1d719e4e650c65decdb3637eb146ebeee009c4e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1d719e4e650c65decdb3637eb146ebeee009c4e6", "html_url": "https://github.com/dotnet/codeformatter/commit/1d719e4e650c65decdb3637eb146ebeee009c4e6", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1d719e4e650c65decdb3637eb146ebeee009c4e6/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aca60211b4ccd90321dd3acccb03545e1605c93", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4aca60211b4ccd90321dd3acccb03545e1605c93", "html_url": "https://github.com/dotnet/codeformatter/commit/4aca60211b4ccd90321dd3acccb03545e1605c93"}, {"sha": "028e8baa4cc26f24e08f7a95eba311b930b6f602", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/028e8baa4cc26f24e08f7a95eba311b930b6f602", "html_url": "https://github.com/dotnet/codeformatter/commit/028e8baa4cc26f24e08f7a95eba311b930b6f602"}]}, {"sha": "028e8baa4cc26f24e08f7a95eba311b930b6f602", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-30T20:39:03Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-30T20:39:03Z"}, "message": "Disable the using location rule by default\n\nMoving a using from inside a namespace to outside it is a fundamentally dangerous\noperation.  In part because it changes the context of the lookup:\n\n- Outside the namespace only the other usings are considered\n- Inside the namespace the namespace + the usings are considered\n\nThis makes it trivial to create an error by moving a using directive around.\n\nInstead of continuing to patch this rule I've decided to just disable it by\ndefault for now.  We can revisit and make it safer later on but for now it\ntakes too much work to fix this.", "tree": {"sha": "ee020ac9ef8b0d484aebf29b96595fe4fc554368", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ee020ac9ef8b0d484aebf29b96595fe4fc554368"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/028e8baa4cc26f24e08f7a95eba311b930b6f602", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/028e8baa4cc26f24e08f7a95eba311b930b6f602", "html_url": "https://github.com/dotnet/codeformatter/commit/028e8baa4cc26f24e08f7a95eba311b930b6f602", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/028e8baa4cc26f24e08f7a95eba311b930b6f602/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98df38a652c1509b4aef31f7b0e4842cb27b189a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/98df38a652c1509b4aef31f7b0e4842cb27b189a", "html_url": "https://github.com/dotnet/codeformatter/commit/98df38a652c1509b4aef31f7b0e4842cb27b189a"}]}, {"sha": "4aca60211b4ccd90321dd3acccb03545e1605c93", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-30T20:04:35Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-30T20:04:35Z"}, "message": "Merge pull request #143 from jaredpar/issue-83\n\nFix double new lines with extern directives", "tree": {"sha": "52781e75827e59dc3184262d52d556456e3ba9b3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/52781e75827e59dc3184262d52d556456e3ba9b3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/4aca60211b4ccd90321dd3acccb03545e1605c93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4aca60211b4ccd90321dd3acccb03545e1605c93", "html_url": "https://github.com/dotnet/codeformatter/commit/4aca60211b4ccd90321dd3acccb03545e1605c93", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/4aca60211b4ccd90321dd3acccb03545e1605c93/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b9388da9beebcebca5d1e94a825e617021880a9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b9388da9beebcebca5d1e94a825e617021880a9", "html_url": "https://github.com/dotnet/codeformatter/commit/3b9388da9beebcebca5d1e94a825e617021880a9"}, {"sha": "ced83add627b564a553dd798a2fc78593cf3d5d0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ced83add627b564a553dd798a2fc78593cf3d5d0", "html_url": "https://github.com/dotnet/codeformatter/commit/ced83add627b564a553dd798a2fc78593cf3d5d0"}]}, {"sha": "ced83add627b564a553dd798a2fc78593cf3d5d0", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-30T00:49:52Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-30T00:49:52Z"}, "message": "Fix double new lines with extern directives\n\nFix the double new lines which got inserted in the presence of an extern\ndirective in the code base.\n\nNote: As a part of this change I had to completely revisit the new line\nabove rule because it didn't take into account a number of subtle\nscenarios.  The rules around #pragma were simply making the\nimplementation very difficult to get correct and hence I decided to\nchange them to make it more managable.\n\ncloses #83", "tree": {"sha": "52781e75827e59dc3184262d52d556456e3ba9b3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/52781e75827e59dc3184262d52d556456e3ba9b3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ced83add627b564a553dd798a2fc78593cf3d5d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ced83add627b564a553dd798a2fc78593cf3d5d0", "html_url": "https://github.com/dotnet/codeformatter/commit/ced83add627b564a553dd798a2fc78593cf3d5d0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ced83add627b564a553dd798a2fc78593cf3d5d0/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b9388da9beebcebca5d1e94a825e617021880a9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b9388da9beebcebca5d1e94a825e617021880a9", "html_url": "https://github.com/dotnet/codeformatter/commit/3b9388da9beebcebca5d1e94a825e617021880a9"}]}, {"sha": "3b9388da9beebcebca5d1e94a825e617021880a9", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-29T20:26:37Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-29T20:26:37Z"}, "message": "Merge pull request #141 from peterblazejewicz/fix/editorconfig\n\nFix config file headline comment", "tree": {"sha": "d8598dd3b65421031dd00ca95054db61cb11f182", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d8598dd3b65421031dd00ca95054db61cb11f182"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3b9388da9beebcebca5d1e94a825e617021880a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b9388da9beebcebca5d1e94a825e617021880a9", "html_url": "https://github.com/dotnet/codeformatter/commit/3b9388da9beebcebca5d1e94a825e617021880a9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b9388da9beebcebca5d1e94a825e617021880a9/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98df38a652c1509b4aef31f7b0e4842cb27b189a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/98df38a652c1509b4aef31f7b0e4842cb27b189a", "html_url": "https://github.com/dotnet/codeformatter/commit/98df38a652c1509b4aef31f7b0e4842cb27b189a"}, {"sha": "5a64f5542b938e4af2601595b3d486fb0336d020", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5a64f5542b938e4af2601595b3d486fb0336d020", "html_url": "https://github.com/dotnet/codeformatter/commit/5a64f5542b938e4af2601595b3d486fb0336d020"}]}, {"sha": "5a64f5542b938e4af2601595b3d486fb0336d020", "commit": {"author": {"name": "Peter Blazejewicz", "email": "peter.blazejewicz@gmail.com", "date": "2015-06-28T20:15:17Z"}, "committer": {"name": "Peter Blazejewicz", "email": "peter.blazejewicz@gmail.com", "date": "2015-06-29T19:10:17Z"}, "message": "Fix config file headline comment\n\nThis commit corrects unwanted line break and shortens config file headline\nAlso see: https://github.com/dotnet/corefx/pull/2187", "tree": {"sha": "d8598dd3b65421031dd00ca95054db61cb11f182", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d8598dd3b65421031dd00ca95054db61cb11f182"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/5a64f5542b938e4af2601595b3d486fb0336d020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5a64f5542b938e4af2601595b3d486fb0336d020", "html_url": "https://github.com/dotnet/codeformatter/commit/5a64f5542b938e4af2601595b3d486fb0336d020", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/5a64f5542b938e4af2601595b3d486fb0336d020/comments", "author": {"login": "peterblazejewicz", "id": 14539, "avatar_url": "https://avatars3.githubusercontent.com/u/14539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterblazejewicz", "html_url": "https://github.com/peterblazejewicz", "followers_url": "https://api.github.com/users/peterblazejewicz/followers", "following_url": "https://api.github.com/users/peterblazejewicz/following{/other_user}", "gists_url": "https://api.github.com/users/peterblazejewicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterblazejewicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterblazejewicz/subscriptions", "organizations_url": "https://api.github.com/users/peterblazejewicz/orgs", "repos_url": "https://api.github.com/users/peterblazejewicz/repos", "events_url": "https://api.github.com/users/peterblazejewicz/events{/privacy}", "received_events_url": "https://api.github.com/users/peterblazejewicz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "peterblazejewicz", "id": 14539, "avatar_url": "https://avatars3.githubusercontent.com/u/14539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterblazejewicz", "html_url": "https://github.com/peterblazejewicz", "followers_url": "https://api.github.com/users/peterblazejewicz/followers", "following_url": "https://api.github.com/users/peterblazejewicz/following{/other_user}", "gists_url": "https://api.github.com/users/peterblazejewicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterblazejewicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterblazejewicz/subscriptions", "organizations_url": "https://api.github.com/users/peterblazejewicz/orgs", "repos_url": "https://api.github.com/users/peterblazejewicz/repos", "events_url": "https://api.github.com/users/peterblazejewicz/events{/privacy}", "received_events_url": "https://api.github.com/users/peterblazejewicz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98df38a652c1509b4aef31f7b0e4842cb27b189a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/98df38a652c1509b4aef31f7b0e4842cb27b189a", "html_url": "https://github.com/dotnet/codeformatter/commit/98df38a652c1509b4aef31f7b0e4842cb27b189a"}]}, {"sha": "98df38a652c1509b4aef31f7b0e4842cb27b189a", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-29T18:20:41Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-29T18:20:41Z"}, "message": "Update code style link\n\n\r\ncloses #142", "tree": {"sha": "3013aa5a8f5fa0e64c2fbbcea0b8e186fd6d189d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3013aa5a8f5fa0e64c2fbbcea0b8e186fd6d189d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/98df38a652c1509b4aef31f7b0e4842cb27b189a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/98df38a652c1509b4aef31f7b0e4842cb27b189a", "html_url": "https://github.com/dotnet/codeformatter/commit/98df38a652c1509b4aef31f7b0e4842cb27b189a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/98df38a652c1509b4aef31f7b0e4842cb27b189a/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "878c4647a140881aa90929885394a1397a2c8352", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/878c4647a140881aa90929885394a1397a2c8352", "html_url": "https://github.com/dotnet/codeformatter/commit/878c4647a140881aa90929885394a1397a2c8352"}]}, {"sha": "878c4647a140881aa90929885394a1397a2c8352", "commit": {"author": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2015-06-19T19:26:17Z"}, "committer": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2015-06-19T19:26:17Z"}, "message": "Merge pull request #136 from lgolding/master\n\nbuild.cmd should always check for NuGet package updates", "tree": {"sha": "3216c22ed0320ba4e75fb3f606d1fb6ba3f6d9ff", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3216c22ed0320ba4e75fb3f606d1fb6ba3f6d9ff"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/878c4647a140881aa90929885394a1397a2c8352", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/878c4647a140881aa90929885394a1397a2c8352", "html_url": "https://github.com/dotnet/codeformatter/commit/878c4647a140881aa90929885394a1397a2c8352", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/878c4647a140881aa90929885394a1397a2c8352/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52bdcfc9109b177930b00c2cd3bfc0e13710cf70", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/52bdcfc9109b177930b00c2cd3bfc0e13710cf70", "html_url": "https://github.com/dotnet/codeformatter/commit/52bdcfc9109b177930b00c2cd3bfc0e13710cf70"}, {"sha": "8fb449c091b191f27148a89565c952ed9fd816e7", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8fb449c091b191f27148a89565c952ed9fd816e7", "html_url": "https://github.com/dotnet/codeformatter/commit/8fb449c091b191f27148a89565c952ed9fd816e7"}]}, {"sha": "8fb449c091b191f27148a89565c952ed9fd816e7", "commit": {"author": {"name": "Larry Golding", "email": "lgolding@microsoft.com", "date": "2015-06-19T14:40:37Z"}, "committer": {"name": "Larry Golding", "email": "lgolding@microsoft.com", "date": "2015-06-19T14:40:37Z"}, "message": "build.cmd should always check for NuGet package updates\n\nbuild.cmd was skipping the NuGet restore command if the\nsrc\\packages directory existed at all, regardless of what\nwas in it. As a result, the command line build would fail\nwhenever we updated a package (as, for example, I did\nyesterday in updating to Roslyn 1.0.0-rc3).\n\nModify build.cmd to restore packages unconditionally. The\nfraction of a second it takes to discover that all packages\nare up to date is not significant.", "tree": {"sha": "3216c22ed0320ba4e75fb3f606d1fb6ba3f6d9ff", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3216c22ed0320ba4e75fb3f606d1fb6ba3f6d9ff"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8fb449c091b191f27148a89565c952ed9fd816e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8fb449c091b191f27148a89565c952ed9fd816e7", "html_url": "https://github.com/dotnet/codeformatter/commit/8fb449c091b191f27148a89565c952ed9fd816e7", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8fb449c091b191f27148a89565c952ed9fd816e7/comments", "author": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52bdcfc9109b177930b00c2cd3bfc0e13710cf70", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/52bdcfc9109b177930b00c2cd3bfc0e13710cf70", "html_url": "https://github.com/dotnet/codeformatter/commit/52bdcfc9109b177930b00c2cd3bfc0e13710cf70"}]}, {"sha": "52bdcfc9109b177930b00c2cd3bfc0e13710cf70", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-18T20:55:59Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-18T20:55:59Z"}, "message": "Merge pull request #134 from lgolding/master\n\nUpgrade to Roslyn 1.0.0-rc3", "tree": {"sha": "6a11fcdc9ecf925975b35b99deb0848de73f1c32", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6a11fcdc9ecf925975b35b99deb0848de73f1c32"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/52bdcfc9109b177930b00c2cd3bfc0e13710cf70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/52bdcfc9109b177930b00c2cd3bfc0e13710cf70", "html_url": "https://github.com/dotnet/codeformatter/commit/52bdcfc9109b177930b00c2cd3bfc0e13710cf70", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/52bdcfc9109b177930b00c2cd3bfc0e13710cf70/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1378bd1677d1d4359281a41864bff9d5b4ae6f7a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1378bd1677d1d4359281a41864bff9d5b4ae6f7a", "html_url": "https://github.com/dotnet/codeformatter/commit/1378bd1677d1d4359281a41864bff9d5b4ae6f7a"}, {"sha": "3c5462ed666b21339358cbd6dd9b7525308f8285", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3c5462ed666b21339358cbd6dd9b7525308f8285", "html_url": "https://github.com/dotnet/codeformatter/commit/3c5462ed666b21339358cbd6dd9b7525308f8285"}]}, {"sha": "3c5462ed666b21339358cbd6dd9b7525308f8285", "commit": {"author": {"name": "Larry Golding", "email": "lgolding@microsoft.com", "date": "2015-06-18T20:49:30Z"}, "committer": {"name": "Larry Golding", "email": "lgolding@microsoft.com", "date": "2015-06-18T20:49:30Z"}, "message": "Upgrade to Roslyn 1.0.0-rc3\n\nFix resulting unit test failures:\no 1 failure in the ExplicitThisRule tests because the APIs that rule calls now handle trivia (almost) correctly. Adjusted the expected output of the test.\n\no 15 failures in the DeadRegionAnalysis tests, because they were initializing a CSharpOptions object with SourceCodeKind.Interactive, which is no longer supported. Changed Interactive to Regular. All tests now pass.", "tree": {"sha": "6a11fcdc9ecf925975b35b99deb0848de73f1c32", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6a11fcdc9ecf925975b35b99deb0848de73f1c32"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3c5462ed666b21339358cbd6dd9b7525308f8285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3c5462ed666b21339358cbd6dd9b7525308f8285", "html_url": "https://github.com/dotnet/codeformatter/commit/3c5462ed666b21339358cbd6dd9b7525308f8285", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3c5462ed666b21339358cbd6dd9b7525308f8285/comments", "author": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1378bd1677d1d4359281a41864bff9d5b4ae6f7a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1378bd1677d1d4359281a41864bff9d5b4ae6f7a", "html_url": "https://github.com/dotnet/codeformatter/commit/1378bd1677d1d4359281a41864bff9d5b4ae6f7a"}]}, {"sha": "1378bd1677d1d4359281a41864bff9d5b4ae6f7a", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-18T15:59:02Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-18T15:59:02Z"}, "message": "Merge pull request #132 from jaredpar/cmdline\n\nEnable / Disable rules at the command line", "tree": {"sha": "fe46c12f45acdbffc969feb344e80c15ae403f19", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/fe46c12f45acdbffc969feb344e80c15ae403f19"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1378bd1677d1d4359281a41864bff9d5b4ae6f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1378bd1677d1d4359281a41864bff9d5b4ae6f7a", "html_url": "https://github.com/dotnet/codeformatter/commit/1378bd1677d1d4359281a41864bff9d5b4ae6f7a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1378bd1677d1d4359281a41864bff9d5b4ae6f7a/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "740d26f1fa476c56e92ca93370881f464ff8fd5b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/740d26f1fa476c56e92ca93370881f464ff8fd5b", "html_url": "https://github.com/dotnet/codeformatter/commit/740d26f1fa476c56e92ca93370881f464ff8fd5b"}, {"sha": "ecb3ecd0f7620c3cde2692301252f17e457985af", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ecb3ecd0f7620c3cde2692301252f17e457985af", "html_url": "https://github.com/dotnet/codeformatter/commit/ecb3ecd0f7620c3cde2692301252f17e457985af"}]}, {"sha": "ecb3ecd0f7620c3cde2692301252f17e457985af", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T15:37:14Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T15:37:14Z"}, "message": "Tests for disabling rules", "tree": {"sha": "fe46c12f45acdbffc969feb344e80c15ae403f19", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/fe46c12f45acdbffc969feb344e80c15ae403f19"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ecb3ecd0f7620c3cde2692301252f17e457985af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ecb3ecd0f7620c3cde2692301252f17e457985af", "html_url": "https://github.com/dotnet/codeformatter/commit/ecb3ecd0f7620c3cde2692301252f17e457985af", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ecb3ecd0f7620c3cde2692301252f17e457985af/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dee2ba5d2705978510e1a509ee6700a91e357e64", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dee2ba5d2705978510e1a509ee6700a91e357e64", "html_url": "https://github.com/dotnet/codeformatter/commit/dee2ba5d2705978510e1a509ee6700a91e357e64"}]}, {"sha": "dee2ba5d2705978510e1a509ee6700a91e357e64", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T15:32:48Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T15:32:48Z"}, "message": "Added command line parsing unit tests", "tree": {"sha": "9d7ba79f3b1105244995893fda8ed2fcc75d6b84", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/9d7ba79f3b1105244995893fda8ed2fcc75d6b84"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/dee2ba5d2705978510e1a509ee6700a91e357e64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dee2ba5d2705978510e1a509ee6700a91e357e64", "html_url": "https://github.com/dotnet/codeformatter/commit/dee2ba5d2705978510e1a509ee6700a91e357e64", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/dee2ba5d2705978510e1a509ee6700a91e357e64/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "311624b35c55ade1ca3c0a458bcb9c1babc971b0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/311624b35c55ade1ca3c0a458bcb9c1babc971b0", "html_url": "https://github.com/dotnet/codeformatter/commit/311624b35c55ade1ca3c0a458bcb9c1babc971b0"}]}, {"sha": "311624b35c55ade1ca3c0a458bcb9c1babc971b0", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T15:01:00Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T15:02:02Z"}, "message": "Factored out command line parsing", "tree": {"sha": "ecc180bf4a6e783c9eff2ce652849a49d78fe1c1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ecc180bf4a6e783c9eff2ce652849a49d78fe1c1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/311624b35c55ade1ca3c0a458bcb9c1babc971b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/311624b35c55ade1ca3c0a458bcb9c1babc971b0", "html_url": "https://github.com/dotnet/codeformatter/commit/311624b35c55ade1ca3c0a458bcb9c1babc971b0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/311624b35c55ade1ca3c0a458bcb9c1babc971b0/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d3ce5a953aea853d1d5fe157c0c35f89bced360", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5d3ce5a953aea853d1d5fe157c0c35f89bced360", "html_url": "https://github.com/dotnet/codeformatter/commit/5d3ce5a953aea853d1d5fe157c0c35f89bced360"}]}, {"sha": "5d3ce5a953aea853d1d5fe157c0c35f89bced360", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T05:00:06Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T05:00:06Z"}, "message": "Fixed the unit tests", "tree": {"sha": "afe9f30eeb4c87a03a0ddd904827a9a29c47339a", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/afe9f30eeb4c87a03a0ddd904827a9a29c47339a"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/5d3ce5a953aea853d1d5fe157c0c35f89bced360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5d3ce5a953aea853d1d5fe157c0c35f89bced360", "html_url": "https://github.com/dotnet/codeformatter/commit/5d3ce5a953aea853d1d5fe157c0c35f89bced360", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/5d3ce5a953aea853d1d5fe157c0c35f89bced360/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76a8ab7dbca241d6b97c746e59f28a8b59fb17f6", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/76a8ab7dbca241d6b97c746e59f28a8b59fb17f6", "html_url": "https://github.com/dotnet/codeformatter/commit/76a8ab7dbca241d6b97c746e59f28a8b59fb17f6"}]}, {"sha": "76a8ab7dbca241d6b97c746e59f28a8b59fb17f6", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T04:52:46Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-15T04:52:46Z"}, "message": "Changed enable / disable switch implementation\n\nThe switches for enabling / disabling common rule implementations is now\nchanged over to use the rule disabling mechanism.", "tree": {"sha": "4499d1343f348a99a47b0a9ab69702f7f01336cc", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4499d1343f348a99a47b0a9ab69702f7f01336cc"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/76a8ab7dbca241d6b97c746e59f28a8b59fb17f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/76a8ab7dbca241d6b97c746e59f28a8b59fb17f6", "html_url": "https://github.com/dotnet/codeformatter/commit/76a8ab7dbca241d6b97c746e59f28a8b59fb17f6", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/76a8ab7dbca241d6b97c746e59f28a8b59fb17f6/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a822117605e8b8124ec282663d9870acaf36d7d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6a822117605e8b8124ec282663d9870acaf36d7d", "html_url": "https://github.com/dotnet/codeformatter/commit/6a822117605e8b8124ec282663d9870acaf36d7d"}]}, {"sha": "6a822117605e8b8124ec282663d9870acaf36d7d", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-14T22:06:58Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-14T22:06:58Z"}, "message": "Enable / disable rules at command line\n\nThis change allows for rules to be enabled / disabled at the command\nline.  It essentially fixes #124.  I still need to more before putting\ninto master:\n\n- More local test runs\n- Add some unit tests for command line parsing as it's getting a bit\ncomplex.\n- Remove some redundant command line options.\n\nBut that should happen later today.", "tree": {"sha": "4be28467c38d27745cc47052aac46f1ea25a9609", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4be28467c38d27745cc47052aac46f1ea25a9609"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6a822117605e8b8124ec282663d9870acaf36d7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6a822117605e8b8124ec282663d9870acaf36d7d", "html_url": "https://github.com/dotnet/codeformatter/commit/6a822117605e8b8124ec282663d9870acaf36d7d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6a822117605e8b8124ec282663d9870acaf36d7d/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f33ede443d0749cb743bcfe2f732ec3c3ddba280", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f33ede443d0749cb743bcfe2f732ec3c3ddba280", "html_url": "https://github.com/dotnet/codeformatter/commit/f33ede443d0749cb743bcfe2f732ec3c3ddba280"}]}, {"sha": "f33ede443d0749cb743bcfe2f732ec3c3ddba280", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-14T21:30:26Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-06-14T21:30:26Z"}, "message": "Add the /list option\n\nThis change adds the /list option which prints out all of the rule names\nand their description.", "tree": {"sha": "e85156276c5265125e1070baaf9e2a8e6d5dbf15", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e85156276c5265125e1070baaf9e2a8e6d5dbf15"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f33ede443d0749cb743bcfe2f732ec3c3ddba280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f33ede443d0749cb743bcfe2f732ec3c3ddba280", "html_url": "https://github.com/dotnet/codeformatter/commit/f33ede443d0749cb743bcfe2f732ec3c3ddba280", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f33ede443d0749cb743bcfe2f732ec3c3ddba280/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "740d26f1fa476c56e92ca93370881f464ff8fd5b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/740d26f1fa476c56e92ca93370881f464ff8fd5b", "html_url": "https://github.com/dotnet/codeformatter/commit/740d26f1fa476c56e92ca93370881f464ff8fd5b"}]}, {"sha": "740d26f1fa476c56e92ca93370881f464ff8fd5b", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-05T17:19:00Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-05T17:19:00Z"}, "message": "Merge pull request #129 from shiftkey/patch-2\n\nthe cheese has moved again", "tree": {"sha": "cb20b77c737a070699641a79b7dc3604a17d3d4c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/cb20b77c737a070699641a79b7dc3604a17d3d4c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/740d26f1fa476c56e92ca93370881f464ff8fd5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/740d26f1fa476c56e92ca93370881f464ff8fd5b", "html_url": "https://github.com/dotnet/codeformatter/commit/740d26f1fa476c56e92ca93370881f464ff8fd5b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/740d26f1fa476c56e92ca93370881f464ff8fd5b/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66899f366f768f038b9c36e1bd3de4ca77f60df9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/66899f366f768f038b9c36e1bd3de4ca77f60df9", "html_url": "https://github.com/dotnet/codeformatter/commit/66899f366f768f038b9c36e1bd3de4ca77f60df9"}, {"sha": "8cd3df27702023f064ff76472d4ee2476df17919", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8cd3df27702023f064ff76472d4ee2476df17919", "html_url": "https://github.com/dotnet/codeformatter/commit/8cd3df27702023f064ff76472d4ee2476df17919"}]}, {"sha": "8cd3df27702023f064ff76472d4ee2476df17919", "commit": {"author": {"name": "Brendan Forster", "email": "brendan@github.com", "date": "2015-06-05T06:54:56Z"}, "committer": {"name": "Brendan Forster", "email": "brendan@github.com", "date": "2015-06-05T06:54:56Z"}, "message": "the cheese has moved again", "tree": {"sha": "cb20b77c737a070699641a79b7dc3604a17d3d4c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/cb20b77c737a070699641a79b7dc3604a17d3d4c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8cd3df27702023f064ff76472d4ee2476df17919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8cd3df27702023f064ff76472d4ee2476df17919", "html_url": "https://github.com/dotnet/codeformatter/commit/8cd3df27702023f064ff76472d4ee2476df17919", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8cd3df27702023f064ff76472d4ee2476df17919/comments", "author": {"login": "shiftkey", "id": 359239, "avatar_url": "https://avatars2.githubusercontent.com/u/359239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shiftkey", "html_url": "https://github.com/shiftkey", "followers_url": "https://api.github.com/users/shiftkey/followers", "following_url": "https://api.github.com/users/shiftkey/following{/other_user}", "gists_url": "https://api.github.com/users/shiftkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/shiftkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shiftkey/subscriptions", "organizations_url": "https://api.github.com/users/shiftkey/orgs", "repos_url": "https://api.github.com/users/shiftkey/repos", "events_url": "https://api.github.com/users/shiftkey/events{/privacy}", "received_events_url": "https://api.github.com/users/shiftkey/received_events", "type": "User", "site_admin": true}, "committer": {"login": "shiftkey", "id": 359239, "avatar_url": "https://avatars2.githubusercontent.com/u/359239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shiftkey", "html_url": "https://github.com/shiftkey", "followers_url": "https://api.github.com/users/shiftkey/followers", "following_url": "https://api.github.com/users/shiftkey/following{/other_user}", "gists_url": "https://api.github.com/users/shiftkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/shiftkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shiftkey/subscriptions", "organizations_url": "https://api.github.com/users/shiftkey/orgs", "repos_url": "https://api.github.com/users/shiftkey/repos", "events_url": "https://api.github.com/users/shiftkey/events{/privacy}", "received_events_url": "https://api.github.com/users/shiftkey/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "66899f366f768f038b9c36e1bd3de4ca77f60df9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/66899f366f768f038b9c36e1bd3de4ca77f60df9", "html_url": "https://github.com/dotnet/codeformatter/commit/66899f366f768f038b9c36e1bd3de4ca77f60df9"}]}, {"sha": "66899f366f768f038b9c36e1bd3de4ca77f60df9", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-04T22:42:56Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-04T22:42:56Z"}, "message": "Merge pull request #128 from jaredpar/update-nuget\n\nUpdate to Roslyn RC", "tree": {"sha": "76707aadeaf3e00962085748ec4e77517352f807", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/76707aadeaf3e00962085748ec4e77517352f807"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/66899f366f768f038b9c36e1bd3de4ca77f60df9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/66899f366f768f038b9c36e1bd3de4ca77f60df9", "html_url": "https://github.com/dotnet/codeformatter/commit/66899f366f768f038b9c36e1bd3de4ca77f60df9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/66899f366f768f038b9c36e1bd3de4ca77f60df9/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef478641052e10b547fb4802a7d23a1cb7361331", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ef478641052e10b547fb4802a7d23a1cb7361331", "html_url": "https://github.com/dotnet/codeformatter/commit/ef478641052e10b547fb4802a7d23a1cb7361331"}, {"sha": "88258b2842e27921d2a1c9f0be2b736d7a663dd8", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/88258b2842e27921d2a1c9f0be2b736d7a663dd8", "html_url": "https://github.com/dotnet/codeformatter/commit/88258b2842e27921d2a1c9f0be2b736d7a663dd8"}]}, {"sha": "88258b2842e27921d2a1c9f0be2b736d7a663dd8", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-04T22:24:16Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-04T22:24:16Z"}, "message": "Update to Roslyn RC\n\nThis updates the solution to use the RC version of Roslyn.\n\nAdditionally it removes three uses of ?. (the conditional access\noperator).  That was preventing the solution from being compiled in VS\n2013.", "tree": {"sha": "76707aadeaf3e00962085748ec4e77517352f807", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/76707aadeaf3e00962085748ec4e77517352f807"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/88258b2842e27921d2a1c9f0be2b736d7a663dd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/88258b2842e27921d2a1c9f0be2b736d7a663dd8", "html_url": "https://github.com/dotnet/codeformatter/commit/88258b2842e27921d2a1c9f0be2b736d7a663dd8", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/88258b2842e27921d2a1c9f0be2b736d7a663dd8/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef478641052e10b547fb4802a7d23a1cb7361331", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ef478641052e10b547fb4802a7d23a1cb7361331", "html_url": "https://github.com/dotnet/codeformatter/commit/ef478641052e10b547fb4802a7d23a1cb7361331"}]}, {"sha": "ef478641052e10b547fb4802a7d23a1cb7361331", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-04T21:36:11Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-06-04T21:36:11Z"}, "message": "Merge pull request #126 from Andy-Wilkinson/master\n\nUpdate build script to support spaces in solution file name. Fixes #125.", "tree": {"sha": "01276a9c80a4b4529f2387dd3454f94725a08b42", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/01276a9c80a4b4529f2387dd3454f94725a08b42"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ef478641052e10b547fb4802a7d23a1cb7361331", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ef478641052e10b547fb4802a7d23a1cb7361331", "html_url": "https://github.com/dotnet/codeformatter/commit/ef478641052e10b547fb4802a7d23a1cb7361331", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ef478641052e10b547fb4802a7d23a1cb7361331/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a168513dc570d78bc6f90a48b928793e10d3669", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3a168513dc570d78bc6f90a48b928793e10d3669", "html_url": "https://github.com/dotnet/codeformatter/commit/3a168513dc570d78bc6f90a48b928793e10d3669"}, {"sha": "b5acbc9845abc375f21cea38bca7176a45508c72", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b5acbc9845abc375f21cea38bca7176a45508c72", "html_url": "https://github.com/dotnet/codeformatter/commit/b5acbc9845abc375f21cea38bca7176a45508c72"}]}, {"sha": "b5acbc9845abc375f21cea38bca7176a45508c72", "commit": {"author": {"name": "Andrew Wilkinson", "email": "andywilkinsonnews@gmail.com", "date": "2015-05-24T19:53:29Z"}, "committer": {"name": "Andrew Wilkinson", "email": "andywilkinsonnews@gmail.com", "date": "2015-05-24T19:53:29Z"}, "message": "Update build script to support spaces in solution file name. Fixes #125.", "tree": {"sha": "01276a9c80a4b4529f2387dd3454f94725a08b42", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/01276a9c80a4b4529f2387dd3454f94725a08b42"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b5acbc9845abc375f21cea38bca7176a45508c72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b5acbc9845abc375f21cea38bca7176a45508c72", "html_url": "https://github.com/dotnet/codeformatter/commit/b5acbc9845abc375f21cea38bca7176a45508c72", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b5acbc9845abc375f21cea38bca7176a45508c72/comments", "author": {"login": "Andy-Wilkinson", "id": 7702119, "avatar_url": "https://avatars0.githubusercontent.com/u/7702119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andy-Wilkinson", "html_url": "https://github.com/Andy-Wilkinson", "followers_url": "https://api.github.com/users/Andy-Wilkinson/followers", "following_url": "https://api.github.com/users/Andy-Wilkinson/following{/other_user}", "gists_url": "https://api.github.com/users/Andy-Wilkinson/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andy-Wilkinson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andy-Wilkinson/subscriptions", "organizations_url": "https://api.github.com/users/Andy-Wilkinson/orgs", "repos_url": "https://api.github.com/users/Andy-Wilkinson/repos", "events_url": "https://api.github.com/users/Andy-Wilkinson/events{/privacy}", "received_events_url": "https://api.github.com/users/Andy-Wilkinson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Andy-Wilkinson", "id": 7702119, "avatar_url": "https://avatars0.githubusercontent.com/u/7702119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andy-Wilkinson", "html_url": "https://github.com/Andy-Wilkinson", "followers_url": "https://api.github.com/users/Andy-Wilkinson/followers", "following_url": "https://api.github.com/users/Andy-Wilkinson/following{/other_user}", "gists_url": "https://api.github.com/users/Andy-Wilkinson/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andy-Wilkinson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andy-Wilkinson/subscriptions", "organizations_url": "https://api.github.com/users/Andy-Wilkinson/orgs", "repos_url": "https://api.github.com/users/Andy-Wilkinson/repos", "events_url": "https://api.github.com/users/Andy-Wilkinson/events{/privacy}", "received_events_url": "https://api.github.com/users/Andy-Wilkinson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a168513dc570d78bc6f90a48b928793e10d3669", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3a168513dc570d78bc6f90a48b928793e10d3669", "html_url": "https://github.com/dotnet/codeformatter/commit/3a168513dc570d78bc6f90a48b928793e10d3669"}]}, {"sha": "3a168513dc570d78bc6f90a48b928793e10d3669", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-04-21T23:37:07Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-04-21T23:37:07Z"}, "message": "Merge pull request #114 from ChadNedzlek/verify-order-submit\n\nVerify Assert Argument Order", "tree": {"sha": "1171985cefae6e288454a4ef247058608451c755", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/1171985cefae6e288454a4ef247058608451c755"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3a168513dc570d78bc6f90a48b928793e10d3669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3a168513dc570d78bc6f90a48b928793e10d3669", "html_url": "https://github.com/dotnet/codeformatter/commit/3a168513dc570d78bc6f90a48b928793e10d3669", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3a168513dc570d78bc6f90a48b928793e10d3669/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc7409c5ef07d9ece4813f19ca4590f243882e9c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dc7409c5ef07d9ece4813f19ca4590f243882e9c", "html_url": "https://github.com/dotnet/codeformatter/commit/dc7409c5ef07d9ece4813f19ca4590f243882e9c"}, {"sha": "0c6d48dab30d802a03a4deec2a86b51938534092", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c6d48dab30d802a03a4deec2a86b51938534092", "html_url": "https://github.com/dotnet/codeformatter/commit/0c6d48dab30d802a03a4deec2a86b51938534092"}]}, {"sha": "0c6d48dab30d802a03a4deec2a86b51938534092", "commit": {"author": {"name": "Chad Nedzlek", "email": "chadnedz@microsoft.com", "date": "2015-04-21T23:26:15Z"}, "committer": {"name": "Chad Nedzlek", "email": "chadnedz@microsoft.com", "date": "2015-04-21T23:26:15Z"}, "message": "Verify Assert Argument Order\n\nTest assert methods assume that the \"actual\" value is a variable\nand the \"expected\" value is a constant for the most part. Inverting\nthese arguments causes misleading test failure messages that hinder\nthe ability to quickly diagnose test failures.\n\nDetecting obvious mistakes (where \"actual\" is constant, and\n\"expected\" is variable) can be done and the arguments swapped.\n\nFix #105", "tree": {"sha": "1171985cefae6e288454a4ef247058608451c755", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/1171985cefae6e288454a4ef247058608451c755"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0c6d48dab30d802a03a4deec2a86b51938534092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c6d48dab30d802a03a4deec2a86b51938534092", "html_url": "https://github.com/dotnet/codeformatter/commit/0c6d48dab30d802a03a4deec2a86b51938534092", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c6d48dab30d802a03a4deec2a86b51938534092/comments", "author": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc7409c5ef07d9ece4813f19ca4590f243882e9c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dc7409c5ef07d9ece4813f19ca4590f243882e9c", "html_url": "https://github.com/dotnet/codeformatter/commit/dc7409c5ef07d9ece4813f19ca4590f243882e9c"}]}, {"sha": "dc7409c5ef07d9ece4813f19ca4590f243882e9c", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-04-16T15:36:57Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-04-16T15:36:57Z"}, "message": "Merge pull request #109 from ChadNedzlek/readonly-field-submit\n\nReadonly field formatter", "tree": {"sha": "f54fe103dd79a293bc047bf4892a05456efb039e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/f54fe103dd79a293bc047bf4892a05456efb039e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/dc7409c5ef07d9ece4813f19ca4590f243882e9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dc7409c5ef07d9ece4813f19ca4590f243882e9c", "html_url": "https://github.com/dotnet/codeformatter/commit/dc7409c5ef07d9ece4813f19ca4590f243882e9c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/dc7409c5ef07d9ece4813f19ca4590f243882e9c/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eee50a980f8a484f544619418576247ef15ef1ea", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/eee50a980f8a484f544619418576247ef15ef1ea", "html_url": "https://github.com/dotnet/codeformatter/commit/eee50a980f8a484f544619418576247ef15ef1ea"}, {"sha": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "html_url": "https://github.com/dotnet/codeformatter/commit/e1fe896161bf48bdfa83ba52feaa92c9eb6904d3"}]}, {"sha": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "commit": {"author": {"name": "Chad Nedzlek", "email": "chadnedz@microsoft.com", "date": "2015-04-15T23:09:01Z"}, "committer": {"name": "Chad Nedzlek", "email": "chadnedz@microsoft.com", "date": "2015-04-15T23:09:01Z"}, "message": "Readonly field formatter\n\nAdd the readonly keyword to fields that are provably never written\nto. Only mark private and internal fields, and the following\nare considered \"writing\" to a field:\n\n- Assignments (_field = 5)\n- Compound assignments (_field += 5)\n- ref/out calls (Method(ref _field))\n- ref of parent to extern method. While not technically required\n  the fields can possibly change (even when marked readonly)\n- internal fields that are exposed via InternalsVisibleTo an\n  assembly that is not in the input project\n- fields marked with [Import] or [ImportMany]\n- fields of struct types that have methods called on them\n\nFix #104", "tree": {"sha": "f54fe103dd79a293bc047bf4892a05456efb039e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/f54fe103dd79a293bc047bf4892a05456efb039e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "html_url": "https://github.com/dotnet/codeformatter/commit/e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/e1fe896161bf48bdfa83ba52feaa92c9eb6904d3/comments", "author": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eee50a980f8a484f544619418576247ef15ef1ea", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/eee50a980f8a484f544619418576247ef15ef1ea", "html_url": "https://github.com/dotnet/codeformatter/commit/eee50a980f8a484f544619418576247ef15ef1ea"}]}, {"sha": "eee50a980f8a484f544619418576247ef15ef1ea", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-04-15T22:37:46Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-04-15T22:37:46Z"}, "message": "Merge pull request #112 from ChadNedzlek/agressive-switch-submit\n\nAdd a switch to opt-out of slow checks", "tree": {"sha": "65a4247d1fd864171c37986020187cf2986efb11", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/65a4247d1fd864171c37986020187cf2986efb11"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/eee50a980f8a484f544619418576247ef15ef1ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/eee50a980f8a484f544619418576247ef15ef1ea", "html_url": "https://github.com/dotnet/codeformatter/commit/eee50a980f8a484f544619418576247ef15ef1ea", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/eee50a980f8a484f544619418576247ef15ef1ea/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ac40694d26ae8afd653a794cbe9fd56ef189a7b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0ac40694d26ae8afd653a794cbe9fd56ef189a7b", "html_url": "https://github.com/dotnet/codeformatter/commit/0ac40694d26ae8afd653a794cbe9fd56ef189a7b"}, {"sha": "8fd3172b5e754f095abf64431bb05247495216da", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8fd3172b5e754f095abf64431bb05247495216da", "html_url": "https://github.com/dotnet/codeformatter/commit/8fd3172b5e754f095abf64431bb05247495216da"}]}, {"sha": "8fd3172b5e754f095abf64431bb05247495216da", "commit": {"author": {"name": "Chad Nedzlek", "email": "chadnedz@microsoft.com", "date": "2015-04-15T22:17:10Z"}, "committer": {"name": "Chad Nedzlek", "email": "chadnedz@microsoft.com", "date": "2015-04-15T22:17:10Z"}, "message": "Add a switch to opt-out of slow checks\n\nSome checks that we will soon implement are rather slow\nand would prevent using the tool as a normal part of commits.\nCreate a switch so that slower tests can be opt-in, so that the\ndefault (or simple) experience is fast and simple, so it can be run\nfrequently.\n\nFix #111", "tree": {"sha": "65a4247d1fd864171c37986020187cf2986efb11", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/65a4247d1fd864171c37986020187cf2986efb11"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8fd3172b5e754f095abf64431bb05247495216da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8fd3172b5e754f095abf64431bb05247495216da", "html_url": "https://github.com/dotnet/codeformatter/commit/8fd3172b5e754f095abf64431bb05247495216da", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8fd3172b5e754f095abf64431bb05247495216da/comments", "author": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ac40694d26ae8afd653a794cbe9fd56ef189a7b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0ac40694d26ae8afd653a794cbe9fd56ef189a7b", "html_url": "https://github.com/dotnet/codeformatter/commit/0ac40694d26ae8afd653a794cbe9fd56ef189a7b"}]}, {"sha": "7491aeae06ff96d2ce20f9d3d5166869a325fe0a", "commit": {"author": {"name": "Andy Gerlicher", "email": "angerlic@microsoft.com", "date": "2015-03-23T19:34:13Z"}, "committer": {"name": "Andy Gerlicher", "email": "angerlic@microsoft.com", "date": "2015-03-23T19:34:13Z"}, "message": "Change header rule order to run later\n\nFix for Issue #78\n\nWhen moving the using block outside of a namespace declaration, the\ncopyright header would end up lower in the file. On the next run, it would\nadd another one. This change just changes the copyright rule to run later.", "tree": {"sha": "e85452ee690811843c059c8eca0702e3fafadc32", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e85452ee690811843c059c8eca0702e3fafadc32"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/7491aeae06ff96d2ce20f9d3d5166869a325fe0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7491aeae06ff96d2ce20f9d3d5166869a325fe0a", "html_url": "https://github.com/dotnet/codeformatter/commit/7491aeae06ff96d2ce20f9d3d5166869a325fe0a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/7491aeae06ff96d2ce20f9d3d5166869a325fe0a/comments", "author": {"login": "AndyGerlicher", "id": 9847849, "avatar_url": "https://avatars3.githubusercontent.com/u/9847849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyGerlicher", "html_url": "https://github.com/AndyGerlicher", "followers_url": "https://api.github.com/users/AndyGerlicher/followers", "following_url": "https://api.github.com/users/AndyGerlicher/following{/other_user}", "gists_url": "https://api.github.com/users/AndyGerlicher/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyGerlicher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyGerlicher/subscriptions", "organizations_url": "https://api.github.com/users/AndyGerlicher/orgs", "repos_url": "https://api.github.com/users/AndyGerlicher/repos", "events_url": "https://api.github.com/users/AndyGerlicher/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyGerlicher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndyGerlicher", "id": 9847849, "avatar_url": "https://avatars3.githubusercontent.com/u/9847849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyGerlicher", "html_url": "https://github.com/AndyGerlicher", "followers_url": "https://api.github.com/users/AndyGerlicher/followers", "following_url": "https://api.github.com/users/AndyGerlicher/following{/other_user}", "gists_url": "https://api.github.com/users/AndyGerlicher/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyGerlicher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyGerlicher/subscriptions", "organizations_url": "https://api.github.com/users/AndyGerlicher/orgs", "repos_url": "https://api.github.com/users/AndyGerlicher/repos", "events_url": "https://api.github.com/users/AndyGerlicher/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyGerlicher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f5ff521de9c486045bf0ddd6593bc700d51452c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5f5ff521de9c486045bf0ddd6593bc700d51452c", "html_url": "https://github.com/dotnet/codeformatter/commit/5f5ff521de9c486045bf0ddd6593bc700d51452c"}]}, {"sha": "0ac40694d26ae8afd653a794cbe9fd56ef189a7b", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-03-13T16:11:10Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-03-13T16:11:10Z"}, "message": "Merge pull request #97 from AndyGerlicher/master\n\nFix issue if a file leading trivia starts with the copyright header", "tree": {"sha": "9734600b83b531af5dedd6aaccb2b9121e694869", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/9734600b83b531af5dedd6aaccb2b9121e694869"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0ac40694d26ae8afd653a794cbe9fd56ef189a7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0ac40694d26ae8afd653a794cbe9fd56ef189a7b", "html_url": "https://github.com/dotnet/codeformatter/commit/0ac40694d26ae8afd653a794cbe9fd56ef189a7b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0ac40694d26ae8afd653a794cbe9fd56ef189a7b/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c46f31d0c1d36d1ebbb314ec2c121cceb43383e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9c46f31d0c1d36d1ebbb314ec2c121cceb43383e", "html_url": "https://github.com/dotnet/codeformatter/commit/9c46f31d0c1d36d1ebbb314ec2c121cceb43383e"}, {"sha": "5f5ff521de9c486045bf0ddd6593bc700d51452c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5f5ff521de9c486045bf0ddd6593bc700d51452c", "html_url": "https://github.com/dotnet/codeformatter/commit/5f5ff521de9c486045bf0ddd6593bc700d51452c"}]}, {"sha": "5f5ff521de9c486045bf0ddd6593bc700d51452c", "commit": {"author": {"name": "Andy Gerlicher", "email": "angerlic@microsoft.com", "date": "2015-03-11T18:10:55Z"}, "committer": {"name": "Andy Gerlicher", "email": "angerlic@microsoft.com", "date": "2015-03-11T18:10:55Z"}, "message": "Fix issue if a file leading trivia starts with the copyright header\n(previously had to be equal to the header).", "tree": {"sha": "9734600b83b531af5dedd6aaccb2b9121e694869", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/9734600b83b531af5dedd6aaccb2b9121e694869"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/5f5ff521de9c486045bf0ddd6593bc700d51452c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5f5ff521de9c486045bf0ddd6593bc700d51452c", "html_url": "https://github.com/dotnet/codeformatter/commit/5f5ff521de9c486045bf0ddd6593bc700d51452c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/5f5ff521de9c486045bf0ddd6593bc700d51452c/comments", "author": {"login": "AndyGerlicher", "id": 9847849, "avatar_url": "https://avatars3.githubusercontent.com/u/9847849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyGerlicher", "html_url": "https://github.com/AndyGerlicher", "followers_url": "https://api.github.com/users/AndyGerlicher/followers", "following_url": "https://api.github.com/users/AndyGerlicher/following{/other_user}", "gists_url": "https://api.github.com/users/AndyGerlicher/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyGerlicher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyGerlicher/subscriptions", "organizations_url": "https://api.github.com/users/AndyGerlicher/orgs", "repos_url": "https://api.github.com/users/AndyGerlicher/repos", "events_url": "https://api.github.com/users/AndyGerlicher/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyGerlicher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndyGerlicher", "id": 9847849, "avatar_url": "https://avatars3.githubusercontent.com/u/9847849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyGerlicher", "html_url": "https://github.com/AndyGerlicher", "followers_url": "https://api.github.com/users/AndyGerlicher/followers", "following_url": "https://api.github.com/users/AndyGerlicher/following{/other_user}", "gists_url": "https://api.github.com/users/AndyGerlicher/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyGerlicher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyGerlicher/subscriptions", "organizations_url": "https://api.github.com/users/AndyGerlicher/orgs", "repos_url": "https://api.github.com/users/AndyGerlicher/repos", "events_url": "https://api.github.com/users/AndyGerlicher/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyGerlicher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c46f31d0c1d36d1ebbb314ec2c121cceb43383e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9c46f31d0c1d36d1ebbb314ec2c121cceb43383e", "html_url": "https://github.com/dotnet/codeformatter/commit/9c46f31d0c1d36d1ebbb314ec2c121cceb43383e"}]}, {"sha": "9c46f31d0c1d36d1ebbb314ec2c121cceb43383e", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-03-09T22:55:27Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-03-09T22:55:27Z"}, "message": "Merge pull request #91 from dannyvv/master\n\nAdd support for cleaning up files without a solution or project.", "tree": {"sha": "4bfdc96d896e69af8c94f80ead4631c3a15aa9a3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4bfdc96d896e69af8c94f80ead4631c3a15aa9a3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/9c46f31d0c1d36d1ebbb314ec2c121cceb43383e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9c46f31d0c1d36d1ebbb314ec2c121cceb43383e", "html_url": "https://github.com/dotnet/codeformatter/commit/9c46f31d0c1d36d1ebbb314ec2c121cceb43383e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/9c46f31d0c1d36d1ebbb314ec2c121cceb43383e/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9c2bb3914f96a8fea903dd83709efba399862e2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c9c2bb3914f96a8fea903dd83709efba399862e2", "html_url": "https://github.com/dotnet/codeformatter/commit/c9c2bb3914f96a8fea903dd83709efba399862e2"}, {"sha": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "html_url": "https://github.com/dotnet/codeformatter/commit/05039a8c1a730ce53e9ecabfc22d3ae98a14f834"}]}, {"sha": "c9c2bb3914f96a8fea903dd83709efba399862e2", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-03-09T22:50:54Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-03-09T22:50:54Z"}, "message": "Merge pull request #95 from jaredpar/fix-94\n\nFix F5", "tree": {"sha": "42e012678be3ae25e8c3d9ed45f0cf8d41de059b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/42e012678be3ae25e8c3d9ed45f0cf8d41de059b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c9c2bb3914f96a8fea903dd83709efba399862e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c9c2bb3914f96a8fea903dd83709efba399862e2", "html_url": "https://github.com/dotnet/codeformatter/commit/c9c2bb3914f96a8fea903dd83709efba399862e2", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c9c2bb3914f96a8fea903dd83709efba399862e2/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4286c97057d201ff0267243658495b4f51162f83", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4286c97057d201ff0267243658495b4f51162f83", "html_url": "https://github.com/dotnet/codeformatter/commit/4286c97057d201ff0267243658495b4f51162f83"}, {"sha": "1c431a10552688987cac0600393a1088f1b9d5d8", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1c431a10552688987cac0600393a1088f1b9d5d8", "html_url": "https://github.com/dotnet/codeformatter/commit/1c431a10552688987cac0600393a1088f1b9d5d8"}]}, {"sha": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "commit": {"author": {"name": "Danny van Velzen \ud83c\udc74", "email": "dannyvv@microsoft.com", "date": "2015-03-09T14:37:16Z"}, "committer": {"name": "Danny van Velzen \ud83c\udc74", "email": "dannyvv@microsoft.com", "date": "2015-03-09T19:42:38Z"}, "message": "Add support for cleaning up files without a solution or project. #91\nThe passed file, can now not only be an msbuild project or a solution file. But also an rsp file.\nThe rsp file is the same file format as the commandline arguments that gets passed to csc.exe\n\nCloses #89", "tree": {"sha": "6040f2ee6e5d61ce9b6aa4fcd171571b27ddc8b7", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6040f2ee6e5d61ce9b6aa4fcd171571b27ddc8b7"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "html_url": "https://github.com/dotnet/codeformatter/commit/05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/05039a8c1a730ce53e9ecabfc22d3ae98a14f834/comments", "author": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4286c97057d201ff0267243658495b4f51162f83", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4286c97057d201ff0267243658495b4f51162f83", "html_url": "https://github.com/dotnet/codeformatter/commit/4286c97057d201ff0267243658495b4f51162f83"}]}, {"sha": "1c431a10552688987cac0600393a1088f1b9d5d8", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-03-09T18:30:39Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-03-09T18:30:39Z"}, "message": "Fix F5\n\nThe build.props file was setting OutputPath to IntermediateOutputPath.\nThis caused operations like F5 to grab from the obj directory which\nisn't correct.  It needs to grab it from the bin directory.", "tree": {"sha": "42e012678be3ae25e8c3d9ed45f0cf8d41de059b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/42e012678be3ae25e8c3d9ed45f0cf8d41de059b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1c431a10552688987cac0600393a1088f1b9d5d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1c431a10552688987cac0600393a1088f1b9d5d8", "html_url": "https://github.com/dotnet/codeformatter/commit/1c431a10552688987cac0600393a1088f1b9d5d8", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1c431a10552688987cac0600393a1088f1b9d5d8/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4286c97057d201ff0267243658495b4f51162f83", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4286c97057d201ff0267243658495b4f51162f83", "html_url": "https://github.com/dotnet/codeformatter/commit/4286c97057d201ff0267243658495b4f51162f83"}]}, {"sha": "4286c97057d201ff0267243658495b4f51162f83", "commit": {"author": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-03-09T01:47:41Z"}, "committer": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-03-09T01:47:41Z"}, "message": "Merge pull request #92 from dannyvv/CleanSelf\n\nRun codeformatter on codeformatter solution", "tree": {"sha": "6cf7eee1a53051828efa048154098724d5f76808", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6cf7eee1a53051828efa048154098724d5f76808"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/4286c97057d201ff0267243658495b4f51162f83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4286c97057d201ff0267243658495b4f51162f83", "html_url": "https://github.com/dotnet/codeformatter/commit/4286c97057d201ff0267243658495b4f51162f83", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/4286c97057d201ff0267243658495b4f51162f83/comments", "author": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "427bc11cb28f7d3f8353c951a0290a93ce1b4974", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/427bc11cb28f7d3f8353c951a0290a93ce1b4974", "html_url": "https://github.com/dotnet/codeformatter/commit/427bc11cb28f7d3f8353c951a0290a93ce1b4974"}, {"sha": "d4eb5a272cb2c0fc87ef8b41c3cf173383f5a04c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d4eb5a272cb2c0fc87ef8b41c3cf173383f5a04c", "html_url": "https://github.com/dotnet/codeformatter/commit/d4eb5a272cb2c0fc87ef8b41c3cf173383f5a04c"}]}, {"sha": "427bc11cb28f7d3f8353c951a0290a93ce1b4974", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-06T18:47:08Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-06T18:47:08Z"}, "message": "Merge pull request #85 from nslottow/dead-regions-tool\n\nAdd deadregions tool", "tree": {"sha": "0aaefd1f53deca1d5761f9f3a48484f65369ba93", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/0aaefd1f53deca1d5761f9f3a48484f65369ba93"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/427bc11cb28f7d3f8353c951a0290a93ce1b4974", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/427bc11cb28f7d3f8353c951a0290a93ce1b4974", "html_url": "https://github.com/dotnet/codeformatter/commit/427bc11cb28f7d3f8353c951a0290a93ce1b4974", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/427bc11cb28f7d3f8353c951a0290a93ce1b4974/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dbd20cd000fbc4207471468101a73aaabc90582", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2dbd20cd000fbc4207471468101a73aaabc90582", "html_url": "https://github.com/dotnet/codeformatter/commit/2dbd20cd000fbc4207471468101a73aaabc90582"}, {"sha": "bbaf219368e88ae589e56add7e614ec7e93c8538", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bbaf219368e88ae589e56add7e614ec7e93c8538", "html_url": "https://github.com/dotnet/codeformatter/commit/bbaf219368e88ae589e56add7e614ec7e93c8538"}]}, {"sha": "d4eb5a272cb2c0fc87ef8b41c3cf173383f5a04c", "commit": {"author": {"name": "Danny van Velzen", "email": "danny@bing.com", "date": "2015-03-06T00:57:40Z"}, "committer": {"name": "Danny van Velzen", "email": "danny@bing.com", "date": "2015-03-06T00:57:40Z"}, "message": "Run codeformatter on codeformatter solution", "tree": {"sha": "64d2272295740120d319d81c5445d434ea7d10d6", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/64d2272295740120d319d81c5445d434ea7d10d6"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d4eb5a272cb2c0fc87ef8b41c3cf173383f5a04c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d4eb5a272cb2c0fc87ef8b41c3cf173383f5a04c", "html_url": "https://github.com/dotnet/codeformatter/commit/d4eb5a272cb2c0fc87ef8b41c3cf173383f5a04c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d4eb5a272cb2c0fc87ef8b41c3cf173383f5a04c/comments", "author": null, "committer": null, "parents": [{"sha": "2dbd20cd000fbc4207471468101a73aaabc90582", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2dbd20cd000fbc4207471468101a73aaabc90582", "html_url": "https://github.com/dotnet/codeformatter/commit/2dbd20cd000fbc4207471468101a73aaabc90582"}]}, {"sha": "bbaf219368e88ae589e56add7e614ec7e93c8538", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T22:18:55Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T22:18:55Z"}, "message": "Add appropriate App.configs for command line tools\n\nAccording to @jaredpar, binding redirects are necessary on machines\nwhich have older versions of MsBuild / Roslyn installed.", "tree": {"sha": "373a83e91247abd1399f5fcd8f97d10954e3e276", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/373a83e91247abd1399f5fcd8f97d10954e3e276"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/bbaf219368e88ae589e56add7e614ec7e93c8538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bbaf219368e88ae589e56add7e614ec7e93c8538", "html_url": "https://github.com/dotnet/codeformatter/commit/bbaf219368e88ae589e56add7e614ec7e93c8538", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/bbaf219368e88ae589e56add7e614ec7e93c8538/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fc7e3e1fb850e65cb200e456548373586d729e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/83fc7e3e1fb850e65cb200e456548373586d729e", "html_url": "https://github.com/dotnet/codeformatter/commit/83fc7e3e1fb850e65cb200e456548373586d729e"}]}, {"sha": "83fc7e3e1fb850e65cb200e456548373586d729e", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T22:14:09Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T22:14:09Z"}, "message": "Clarify that UTF8 is the default encoding\n\nand that we're not overriding the encoding of the source files that\nwe load.", "tree": {"sha": "7caca1ec2028e6f7f65812c3e141eb1ac5b13435", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/7caca1ec2028e6f7f65812c3e141eb1ac5b13435"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/83fc7e3e1fb850e65cb200e456548373586d729e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/83fc7e3e1fb850e65cb200e456548373586d729e", "html_url": "https://github.com/dotnet/codeformatter/commit/83fc7e3e1fb850e65cb200e456548373586d729e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/83fc7e3e1fb850e65cb200e456548373586d729e/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "html_url": "https://github.com/dotnet/codeformatter/commit/8a8ba3d13fd11c613ffec3368a1cf35eff46718c"}]}, {"sha": "8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T13:39:47Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T14:01:06Z"}, "message": "Explicitly specify StringComparer.Ordinal\n\nfor HashSet<string> used to calculate specified symbols,\nas per PR feedback.", "tree": {"sha": "cfe714638f4e1c99500d40294cde32dd6c3fdc5e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/cfe714638f4e1c99500d40294cde32dd6c3fdc5e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "html_url": "https://github.com/dotnet/codeformatter/commit/8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8a8ba3d13fd11c613ffec3368a1cf35eff46718c/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7de79cb7548df4e76f0969e4bd23560d741fe145", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7de79cb7548df4e76f0969e4bd23560d741fe145", "html_url": "https://github.com/dotnet/codeformatter/commit/7de79cb7548df4e76f0969e4bd23560d741fe145"}]}, {"sha": "7de79cb7548df4e76f0969e4bd23560d741fe145", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T13:11:23Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T14:01:03Z"}, "message": "Remove unnecessary IEquatable implementations\n\ncomparison operators, overloads, etc.\nThese were left over from thinking about the original algorithm.", "tree": {"sha": "83b6f5ec4010abcf858b48f5f1ad57aa0bee7639", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/83b6f5ec4010abcf858b48f5f1ad57aa0bee7639"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/7de79cb7548df4e76f0969e4bd23560d741fe145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7de79cb7548df4e76f0969e4bd23560d741fe145", "html_url": "https://github.com/dotnet/codeformatter/commit/7de79cb7548df4e76f0969e4bd23560d741fe145", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/7de79cb7548df4e76f0969e4bd23560d741fe145/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1416c8620aaf23f26e6fac2e381a02acde30310", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c1416c8620aaf23f26e6fac2e381a02acde30310", "html_url": "https://github.com/dotnet/codeformatter/commit/c1416c8620aaf23f26e6fac2e381a02acde30310"}]}, {"sha": "c1416c8620aaf23f26e6fac2e381a02acde30310", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T13:01:51Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T14:01:00Z"}, "message": "Add IAnalysisLogger interface", "tree": {"sha": "faa18de5e71575bbe7830b9c5c9972dbb32f05ce", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/faa18de5e71575bbe7830b9c5c9972dbb32f05ce"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c1416c8620aaf23f26e6fac2e381a02acde30310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c1416c8620aaf23f26e6fac2e381a02acde30310", "html_url": "https://github.com/dotnet/codeformatter/commit/c1416c8620aaf23f26e6fac2e381a02acde30310", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c1416c8620aaf23f26e6fac2e381a02acde30310/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c740a4281a229b9fc81ee75bc908623e49cee2d4", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c740a4281a229b9fc81ee75bc908623e49cee2d4", "html_url": "https://github.com/dotnet/codeformatter/commit/c740a4281a229b9fc81ee75bc908623e49cee2d4"}]}, {"sha": "c740a4281a229b9fc81ee75bc908623e49cee2d4", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T12:47:55Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T14:00:57Z"}, "message": "Decide to ignore project file preprocessor symbols\n\nDocumented this decision and updated tests accordingly.", "tree": {"sha": "e492dc8c13cdbe7d8d80c09110a47cc81129030f", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e492dc8c13cdbe7d8d80c09110a47cc81129030f"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c740a4281a229b9fc81ee75bc908623e49cee2d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c740a4281a229b9fc81ee75bc908623e49cee2d4", "html_url": "https://github.com/dotnet/codeformatter/commit/c740a4281a229b9fc81ee75bc908623e49cee2d4", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c740a4281a229b9fc81ee75bc908623e49cee2d4/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "343c1b4673c36ebfa48ab59684aedd76f3fe64f7", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/343c1b4673c36ebfa48ab59684aedd76f3fe64f7", "html_url": "https://github.com/dotnet/codeformatter/commit/343c1b4673c36ebfa48ab59684aedd76f3fe64f7"}]}, {"sha": "343c1b4673c36ebfa48ab59684aedd76f3fe64f7", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T12:20:22Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T14:00:54Z"}, "message": "Changed casing on DeadRegions assembly name\n\nto match CodeFormatter's PascalCase.", "tree": {"sha": "3540452db4e042877d7373b28d3e90fe6eb68c74", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3540452db4e042877d7373b28d3e90fe6eb68c74"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/343c1b4673c36ebfa48ab59684aedd76f3fe64f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/343c1b4673c36ebfa48ab59684aedd76f3fe64f7", "html_url": "https://github.com/dotnet/codeformatter/commit/343c1b4673c36ebfa48ab59684aedd76f3fe64f7", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/343c1b4673c36ebfa48ab59684aedd76f3fe64f7/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b41f1ab36bd1a44dfe8658c03a80e8c9ef62a6f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1b41f1ab36bd1a44dfe8658c03a80e8c9ef62a6f", "html_url": "https://github.com/dotnet/codeformatter/commit/1b41f1ab36bd1a44dfe8658c03a80e8c9ef62a6f"}]}, {"sha": "1b41f1ab36bd1a44dfe8658c03a80e8c9ef62a6f", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T11:46:19Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T14:00:51Z"}, "message": "Switched to using immutable collections\n\nwhere it makes immediate sense.", "tree": {"sha": "8b2a39c6cf4ad2aba468037dfa6bbfd7cc652113", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8b2a39c6cf4ad2aba468037dfa6bbfd7cc652113"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1b41f1ab36bd1a44dfe8658c03a80e8c9ef62a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1b41f1ab36bd1a44dfe8658c03a80e8c9ef62a6f", "html_url": "https://github.com/dotnet/codeformatter/commit/1b41f1ab36bd1a44dfe8658c03a80e8c9ef62a6f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1b41f1ab36bd1a44dfe8658c03a80e8c9ef62a6f/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6db47f7ac274493b3bc29ae9f7e9990f935a285", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a6db47f7ac274493b3bc29ae9f7e9990f935a285", "html_url": "https://github.com/dotnet/codeformatter/commit/a6db47f7ac274493b3bc29ae9f7e9990f935a285"}]}, {"sha": "a6db47f7ac274493b3bc29ae9f7e9990f935a285", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-03T00:34:58Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T12:23:38Z"}, "message": "Wrapped deadregions tool options in a state class\n\nto avoid a bunch of mutable static state in Program.cs.", "tree": {"sha": "6008d9056ae56d1e355e4727e7883a6f848af672", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6008d9056ae56d1e355e4727e7883a6f848af672"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a6db47f7ac274493b3bc29ae9f7e9990f935a285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a6db47f7ac274493b3bc29ae9f7e9990f935a285", "html_url": "https://github.com/dotnet/codeformatter/commit/a6db47f7ac274493b3bc29ae9f7e9990f935a285", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a6db47f7ac274493b3bc29ae9f7e9990f935a285/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "add02bf0d4a4ba2f130229efe84c5db5f21f8c6e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/add02bf0d4a4ba2f130229efe84c5db5f21f8c6e", "html_url": "https://github.com/dotnet/codeformatter/commit/add02bf0d4a4ba2f130229efe84c5db5f21f8c6e"}]}, {"sha": "add02bf0d4a4ba2f130229efe84c5db5f21f8c6e", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-02T23:58:31Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T12:23:35Z"}, "message": "Simplify import of top-level build.props file\n\nAlso makes default configurations for VS more concise.", "tree": {"sha": "705178f22cb7aa522068d33547cac4ccd0ac6719", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/705178f22cb7aa522068d33547cac4ccd0ac6719"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/add02bf0d4a4ba2f130229efe84c5db5f21f8c6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/add02bf0d4a4ba2f130229efe84c5db5f21f8c6e", "html_url": "https://github.com/dotnet/codeformatter/commit/add02bf0d4a4ba2f130229efe84c5db5f21f8c6e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/add02bf0d4a4ba2f130229efe84c5db5f21f8c6e/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e509fea07b20ac1791d384de5506485985179fe", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9e509fea07b20ac1791d384de5506485985179fe", "html_url": "https://github.com/dotnet/codeformatter/commit/9e509fea07b20ac1791d384de5506485985179fe"}]}, {"sha": "9e509fea07b20ac1791d384de5506485985179fe", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-28T00:10:41Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-03-04T12:23:24Z"}, "message": "Update Roslyn packages to RC1\n\nIt looks like not all projects got updated with commit\ne34e67af3e467cc345a220809b9ee335dfc98a42\n\nAlso removes unnecessary app.config files", "tree": {"sha": "b99907802967d6f7732a4e5d95ecaf1519b5ad9f", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/b99907802967d6f7732a4e5d95ecaf1519b5ad9f"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/9e509fea07b20ac1791d384de5506485985179fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9e509fea07b20ac1791d384de5506485985179fe", "html_url": "https://github.com/dotnet/codeformatter/commit/9e509fea07b20ac1791d384de5506485985179fe", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/9e509fea07b20ac1791d384de5506485985179fe/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "267a48733c4ea70e95718d40a4ae7cd6137193da", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/267a48733c4ea70e95718d40a4ae7cd6137193da", "html_url": "https://github.com/dotnet/codeformatter/commit/267a48733c4ea70e95718d40a4ae7cd6137193da"}]}, {"sha": "2dbd20cd000fbc4207471468101a73aaabc90582", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T22:40:19Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-03-03T14:54:21Z"}, "message": "Fix VB Module Sub New\n\nMembers of a Module are implicitly Shared.  Hence a Sub New is really a\nstatic constructor and hence can't have a modifier.\n\ncloses #84", "tree": {"sha": "00364fe146816fa0eee1ab6db0a409ac9456c9f2", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/00364fe146816fa0eee1ab6db0a409ac9456c9f2"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/2dbd20cd000fbc4207471468101a73aaabc90582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2dbd20cd000fbc4207471468101a73aaabc90582", "html_url": "https://github.com/dotnet/codeformatter/commit/2dbd20cd000fbc4207471468101a73aaabc90582", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/2dbd20cd000fbc4207471468101a73aaabc90582/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a41e29e9b7c20f600f009b4bbb3369e895f55ee", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2a41e29e9b7c20f600f009b4bbb3369e895f55ee", "html_url": "https://github.com/dotnet/codeformatter/commit/2a41e29e9b7c20f600f009b4bbb3369e895f55ee"}]}, {"sha": "2a41e29e9b7c20f600f009b4bbb3369e895f55ee", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-03-03T14:52:33Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-03-03T14:52:33Z"}, "message": "Added additional comments", "tree": {"sha": "9d2157ef814744e2333b5acddee18d20e3b6105d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/9d2157ef814744e2333b5acddee18d20e3b6105d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/2a41e29e9b7c20f600f009b4bbb3369e895f55ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2a41e29e9b7c20f600f009b4bbb3369e895f55ee", "html_url": "https://github.com/dotnet/codeformatter/commit/2a41e29e9b7c20f600f009b4bbb3369e895f55ee", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/2a41e29e9b7c20f600f009b4bbb3369e895f55ee/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acdab710a8a9ac70ba1b739b666fcfe8be9e5421", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/acdab710a8a9ac70ba1b739b666fcfe8be9e5421", "html_url": "https://github.com/dotnet/codeformatter/commit/acdab710a8a9ac70ba1b739b666fcfe8be9e5421"}]}, {"sha": "acdab710a8a9ac70ba1b739b666fcfe8be9e5421", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-03-03T02:15:01Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-03-03T06:23:28Z"}, "message": "Explicit visibility trivia handling\n\nThis change addresses how we handle trivia when inserting explicit\nvisibility on a member / type.  The previous code incorrectly used\nthe leading trivia of the node in question to position the first\nvisibility modifier.  That would end up combining trivia from say\nbefore and after an attribute attached to the node which was\nincorrect.  Now we grab the trivia from the node / type itself\nand use that.\n\ncloses #86", "tree": {"sha": "50bbece0a518e378b56147ae754d8720230d1126", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/50bbece0a518e378b56147ae754d8720230d1126"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/acdab710a8a9ac70ba1b739b666fcfe8be9e5421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/acdab710a8a9ac70ba1b739b666fcfe8be9e5421", "html_url": "https://github.com/dotnet/codeformatter/commit/acdab710a8a9ac70ba1b739b666fcfe8be9e5421", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/acdab710a8a9ac70ba1b739b666fcfe8be9e5421/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "299dd7a1cb63ae566f43714bd2f5b9bb5f330f56", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/299dd7a1cb63ae566f43714bd2f5b9bb5f330f56", "html_url": "https://github.com/dotnet/codeformatter/commit/299dd7a1cb63ae566f43714bd2f5b9bb5f330f56"}]}, {"sha": "267a48733c4ea70e95718d40a4ae7cd6137193da", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T22:57:12Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T23:23:46Z"}, "message": "Add DeadRegions tool projects to solution\n\nAlso updates the rest of the projects to use the common build.props\nfile in the repository root.\n\nStrange thing to note is: I started getting a 'CS1985: Cannot await in\nthe body of a catch block' error in AnalysisEngine.RegionRemoval.cs but\nnot consistently. So I've fixed that line.", "tree": {"sha": "80c2cd4e970558cb8ffc88ff1d5526eaa724efd1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/80c2cd4e970558cb8ffc88ff1d5526eaa724efd1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/267a48733c4ea70e95718d40a4ae7cd6137193da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/267a48733c4ea70e95718d40a4ae7cd6137193da", "html_url": "https://github.com/dotnet/codeformatter/commit/267a48733c4ea70e95718d40a4ae7cd6137193da", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/267a48733c4ea70e95718d40a4ae7cd6137193da/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf4f7cf7f254cb5baca0dd409c8a06b0377be3fa", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf4f7cf7f254cb5baca0dd409c8a06b0377be3fa", "html_url": "https://github.com/dotnet/codeformatter/commit/cf4f7cf7f254cb5baca0dd409c8a06b0377be3fa"}]}, {"sha": "cf4f7cf7f254cb5baca0dd409c8a06b0377be3fa", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T23:23:09Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T23:23:09Z"}, "message": "Merge branch 'deadregions' into dead-regions-tool", "tree": {"sha": "5d5f73f2398b35e1474e2c5caf8357b156a19f68", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5d5f73f2398b35e1474e2c5caf8357b156a19f68"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/cf4f7cf7f254cb5baca0dd409c8a06b0377be3fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf4f7cf7f254cb5baca0dd409c8a06b0377be3fa", "html_url": "https://github.com/dotnet/codeformatter/commit/cf4f7cf7f254cb5baca0dd409c8a06b0377be3fa", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf4f7cf7f254cb5baca0dd409c8a06b0377be3fa/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "299dd7a1cb63ae566f43714bd2f5b9bb5f330f56", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/299dd7a1cb63ae566f43714bd2f5b9bb5f330f56", "html_url": "https://github.com/dotnet/codeformatter/commit/299dd7a1cb63ae566f43714bd2f5b9bb5f330f56"}, {"sha": "efdba0e2a94ab8fec0553ea4010804f74d2294e1", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/efdba0e2a94ab8fec0553ea4010804f74d2294e1", "html_url": "https://github.com/dotnet/codeformatter/commit/efdba0e2a94ab8fec0553ea4010804f74d2294e1"}]}, {"sha": "efdba0e2a94ab8fec0553ea4010804f74d2294e1", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T22:18:29Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T22:18:29Z"}, "message": "Prepare to merge wtih codeformatter\n\n(Re)moves files that are now unnecessary or would conflict with files\nin the codeformatter repo.", "tree": {"sha": "7f5e7448970d6650d2dab131705bdd4c0c8bd2b0", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/7f5e7448970d6650d2dab131705bdd4c0c8bd2b0"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/efdba0e2a94ab8fec0553ea4010804f74d2294e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/efdba0e2a94ab8fec0553ea4010804f74d2294e1", "html_url": "https://github.com/dotnet/codeformatter/commit/efdba0e2a94ab8fec0553ea4010804f74d2294e1", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/efdba0e2a94ab8fec0553ea4010804f74d2294e1/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "124705003a1f466d080c190767b9ff53a7dcfbbf", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/124705003a1f466d080c190767b9ff53a7dcfbbf", "html_url": "https://github.com/dotnet/codeformatter/commit/124705003a1f466d080c190767b9ff53a7dcfbbf"}]}, {"sha": "124705003a1f466d080c190767b9ff53a7dcfbbf", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T22:09:23Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T22:10:06Z"}, "message": "Update Roslyn packages to RC1\n\nAlso remove and sort usings.", "tree": {"sha": "3e540ef10805a6408325b15ca5d2e76c4561848b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3e540ef10805a6408325b15ca5d2e76c4561848b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/124705003a1f466d080c190767b9ff53a7dcfbbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/124705003a1f466d080c190767b9ff53a7dcfbbf", "html_url": "https://github.com/dotnet/codeformatter/commit/124705003a1f466d080c190767b9ff53a7dcfbbf", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/124705003a1f466d080c190767b9ff53a7dcfbbf/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4baa3cb707aa0506de7ba779f08cef7c401d76fe", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4baa3cb707aa0506de7ba779f08cef7c401d76fe", "html_url": "https://github.com/dotnet/codeformatter/commit/4baa3cb707aa0506de7ba779f08cef7c401d76fe"}]}, {"sha": "4baa3cb707aa0506de7ba779f08cef7c401d76fe", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T19:50:28Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:46Z"}, "message": "Fix response file parsing\n\nPreviously it would assume the first value in the response file was the\npath to the executable (as is the case when parsing the command line).", "tree": {"sha": "857fe1ccf5a0d1bd8ef58dbab36123e0b5006e76", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/857fe1ccf5a0d1bd8ef58dbab36123e0b5006e76"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/4baa3cb707aa0506de7ba779f08cef7c401d76fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4baa3cb707aa0506de7ba779f08cef7c401d76fe", "html_url": "https://github.com/dotnet/codeformatter/commit/4baa3cb707aa0506de7ba779f08cef7c401d76fe", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/4baa3cb707aa0506de7ba779f08cef7c401d76fe/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7617b8eab55c8ba1b31b546e4f643f8888d0758a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7617b8eab55c8ba1b31b546e4f643f8888d0758a", "html_url": "https://github.com/dotnet/codeformatter/commit/7617b8eab55c8ba1b31b546e4f643f8888d0758a"}]}, {"sha": "7617b8eab55c8ba1b31b546e4f643f8888d0758a", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T18:32:52Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:43Z"}, "message": "Updates usage, README.md", "tree": {"sha": "5e81673ebe484b1f494e6dc93ee2362aaca3f401", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5e81673ebe484b1f494e6dc93ee2362aaca3f401"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/7617b8eab55c8ba1b31b546e4f643f8888d0758a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7617b8eab55c8ba1b31b546e4f643f8888d0758a", "html_url": "https://github.com/dotnet/codeformatter/commit/7617b8eab55c8ba1b31b546e4f643f8888d0758a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/7617b8eab55c8ba1b31b546e4f643f8888d0758a/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68c18279937bbba29e318f34222ebdbacd88c77d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/68c18279937bbba29e318f34222ebdbacd88c77d", "html_url": "https://github.com/dotnet/codeformatter/commit/68c18279937bbba29e318f34222ebdbacd88c77d"}]}, {"sha": "68c18279937bbba29e318f34222ebdbacd88c77d", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T18:27:08Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:40Z"}, "message": "Fixes document simplification bug\n\nPreviously only the first varying region would have its start\ndirective's expresion simplified.", "tree": {"sha": "e7e54cfa064734725c7249105fab674b288cbbf1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e7e54cfa064734725c7249105fab674b288cbbf1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/68c18279937bbba29e318f34222ebdbacd88c77d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/68c18279937bbba29e318f34222ebdbacd88c77d", "html_url": "https://github.com/dotnet/codeformatter/commit/68c18279937bbba29e318f34222ebdbacd88c77d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/68c18279937bbba29e318f34222ebdbacd88c77d/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "260fb74934c745f8719a8570d9617bbb09955aa5", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/260fb74934c745f8719a8570d9617bbb09955aa5", "html_url": "https://github.com/dotnet/codeformatter/commit/260fb74934c745f8719a8570d9617bbb09955aa5"}]}, {"sha": "260fb74934c745f8719a8570d9617bbb09955aa5", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-02-27T01:39:11Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:37Z"}, "message": "Update AssemblyInfos", "tree": {"sha": "4d32f7c351ba7811796061d434e2f99d7aca24e4", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4d32f7c351ba7811796061d434e2f99d7aca24e4"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/260fb74934c745f8719a8570d9617bbb09955aa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/260fb74934c745f8719a8570d9617bbb09955aa5", "html_url": "https://github.com/dotnet/codeformatter/commit/260fb74934c745f8719a8570d9617bbb09955aa5", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/260fb74934c745f8719a8570d9617bbb09955aa5/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5590a91099e4e1f59eb49ec1a277d57da76ff461", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5590a91099e4e1f59eb49ec1a277d57da76ff461", "html_url": "https://github.com/dotnet/codeformatter/commit/5590a91099e4e1f59eb49ec1a277d57da76ff461"}]}, {"sha": "5590a91099e4e1f59eb49ec1a277d57da76ff461", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-02-27T01:32:11Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:34Z"}, "message": "Ran codeformatter", "tree": {"sha": "832081f02f5ce8c660f2ed83a2a10e674ccabfb9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/832081f02f5ce8c660f2ed83a2a10e674ccabfb9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/5590a91099e4e1f59eb49ec1a277d57da76ff461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5590a91099e4e1f59eb49ec1a277d57da76ff461", "html_url": "https://github.com/dotnet/codeformatter/commit/5590a91099e4e1f59eb49ec1a277d57da76ff461", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/5590a91099e4e1f59eb49ec1a277d57da76ff461/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce3a7ab7a1d08cad9be44923356248ca3053c5b0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ce3a7ab7a1d08cad9be44923356248ca3053c5b0", "html_url": "https://github.com/dotnet/codeformatter/commit/ce3a7ab7a1d08cad9be44923356248ca3053c5b0"}]}, {"sha": "ce3a7ab7a1d08cad9be44923356248ca3053c5b0", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T01:04:11Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:32Z"}, "message": "Update README.md", "tree": {"sha": "41a5dc12eca1999f6a23821ba7970add0b78e0f0", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/41a5dc12eca1999f6a23821ba7970add0b78e0f0"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ce3a7ab7a1d08cad9be44923356248ca3053c5b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ce3a7ab7a1d08cad9be44923356248ca3053c5b0", "html_url": "https://github.com/dotnet/codeformatter/commit/ce3a7ab7a1d08cad9be44923356248ca3053c5b0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ce3a7ab7a1d08cad9be44923356248ca3053c5b0/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d416e5550c67b9258d5a27e0cd588bc63fc307a9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d416e5550c67b9258d5a27e0cd588bc63fc307a9", "html_url": "https://github.com/dotnet/codeformatter/commit/d416e5550c67b9258d5a27e0cd588bc63fc307a9"}]}, {"sha": "d416e5550c67b9258d5a27e0cd588bc63fc307a9", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T00:53:29Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:29Z"}, "message": "Fix a small option parsing issue", "tree": {"sha": "88b91ddf576fe7b3a1f1625d2fe60c777d16329e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/88b91ddf576fe7b3a1f1625d2fe60c777d16329e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d416e5550c67b9258d5a27e0cd588bc63fc307a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d416e5550c67b9258d5a27e0cd588bc63fc307a9", "html_url": "https://github.com/dotnet/codeformatter/commit/d416e5550c67b9258d5a27e0cd588bc63fc307a9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d416e5550c67b9258d5a27e0cd588bc63fc307a9/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47162a04aa590150c97a9699a51ae26c70099366", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/47162a04aa590150c97a9699a51ae26c70099366", "html_url": "https://github.com/dotnet/codeformatter/commit/47162a04aa590150c97a9699a51ae26c70099366"}]}, {"sha": "47162a04aa590150c97a9699a51ae26c70099366", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T00:52:46Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:26Z"}, "message": "Update README.md, build output, and usage", "tree": {"sha": "1a6798b7d3415c3368ae86c38a0e468f80ed2cff", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/1a6798b7d3415c3368ae86c38a0e468f80ed2cff"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/47162a04aa590150c97a9699a51ae26c70099366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/47162a04aa590150c97a9699a51ae26c70099366", "html_url": "https://github.com/dotnet/codeformatter/commit/47162a04aa590150c97a9699a51ae26c70099366", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/47162a04aa590150c97a9699a51ae26c70099366/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "226962ce14abdaa2b2e3c51a40ddaa5ed2f707dc", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/226962ce14abdaa2b2e3c51a40ddaa5ed2f707dc", "html_url": "https://github.com/dotnet/codeformatter/commit/226962ce14abdaa2b2e3c51a40ddaa5ed2f707dc"}]}, {"sha": "226962ce14abdaa2b2e3c51a40ddaa5ed2f707dc", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T00:02:32Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:23Z"}, "message": "Fixes default undefined symbol value", "tree": {"sha": "b5f1620739ab5ff63a74a1ca75c60e84b2eaffab", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/b5f1620739ab5ff63a74a1ca75c60e84b2eaffab"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/226962ce14abdaa2b2e3c51a40ddaa5ed2f707dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/226962ce14abdaa2b2e3c51a40ddaa5ed2f707dc", "html_url": "https://github.com/dotnet/codeformatter/commit/226962ce14abdaa2b2e3c51a40ddaa5ed2f707dc", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/226962ce14abdaa2b2e3c51a40ddaa5ed2f707dc/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6997b6ec399e206d824152987af12d152cd33dfe", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6997b6ec399e206d824152987af12d152cd33dfe", "html_url": "https://github.com/dotnet/codeformatter/commit/6997b6ec399e206d824152987af12d152cd33dfe"}]}, {"sha": "6997b6ec399e206d824152987af12d152cd33dfe", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T23:18:54Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:20Z"}, "message": "Updated usage and output", "tree": {"sha": "8d35455a91f018a7443149917bfe5aa1dde925ec", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8d35455a91f018a7443149917bfe5aa1dde925ec"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6997b6ec399e206d824152987af12d152cd33dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6997b6ec399e206d824152987af12d152cd33dfe", "html_url": "https://github.com/dotnet/codeformatter/commit/6997b6ec399e206d824152987af12d152cd33dfe", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6997b6ec399e206d824152987af12d152cd33dfe/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8435b86f97269b563cb0a5a0ab55a35e42d3a54", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d8435b86f97269b563cb0a5a0ab55a35e42d3a54", "html_url": "https://github.com/dotnet/codeformatter/commit/d8435b86f97269b563cb0a5a0ab55a35e42d3a54"}]}, {"sha": "d8435b86f97269b563cb0a5a0ab55a35e42d3a54", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T22:45:05Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:18Z"}, "message": "Update option parsing", "tree": {"sha": "0e7f5659955efff49feaf118cd9cfa6340465025", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/0e7f5659955efff49feaf118cd9cfa6340465025"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d8435b86f97269b563cb0a5a0ab55a35e42d3a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d8435b86f97269b563cb0a5a0ab55a35e42d3a54", "html_url": "https://github.com/dotnet/codeformatter/commit/d8435b86f97269b563cb0a5a0ab55a35e42d3a54", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d8435b86f97269b563cb0a5a0ab55a35e42d3a54/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0506e5f3ad1029b13c139513790a6b33833968b1", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0506e5f3ad1029b13c139513790a6b33833968b1", "html_url": "https://github.com/dotnet/codeformatter/commit/0506e5f3ad1029b13c139513790a6b33833968b1"}]}, {"sha": "0506e5f3ad1029b13c139513790a6b33833968b1", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T19:26:55Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:12:15Z"}, "message": "Add varying expression simplification pass to tool\n\nFixes #6", "tree": {"sha": "02da945c7cf2ae56ada2a34437c3f897863130df", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/02da945c7cf2ae56ada2a34437c3f897863130df"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0506e5f3ad1029b13c139513790a6b33833968b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0506e5f3ad1029b13c139513790a6b33833968b1", "html_url": "https://github.com/dotnet/codeformatter/commit/0506e5f3ad1029b13c139513790a6b33833968b1", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0506e5f3ad1029b13c139513790a6b33833968b1/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3f89f3f1479f15d7feb9b10059913db6d5d82b8", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a3f89f3f1479f15d7feb9b10059913db6d5d82b8", "html_url": "https://github.com/dotnet/codeformatter/commit/a3f89f3f1479f15d7feb9b10059913db6d5d82b8"}]}, {"sha": "a3f89f3f1479f15d7feb9b10059913db6d5d82b8", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T02:19:50Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:57Z"}, "message": "Add PreprocessorExpressionSimplifier and tests", "tree": {"sha": "fb1ba9d7b6ac3c6ad2086341787e6e67f74c59b8", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/fb1ba9d7b6ac3c6ad2086341787e6e67f74c59b8"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a3f89f3f1479f15d7feb9b10059913db6d5d82b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a3f89f3f1479f15d7feb9b10059913db6d5d82b8", "html_url": "https://github.com/dotnet/codeformatter/commit/a3f89f3f1479f15d7feb9b10059913db6d5d82b8", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a3f89f3f1479f15d7feb9b10059913db6d5d82b8/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36019770bc7ea07a5d15aa042a23057733afa4e6", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/36019770bc7ea07a5d15aa042a23057733afa4e6", "html_url": "https://github.com/dotnet/codeformatter/commit/36019770bc7ea07a5d15aa042a23057733afa4e6"}]}, {"sha": "36019770bc7ea07a5d15aa042a23057733afa4e6", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T01:41:59Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:50Z"}, "message": "Adds support for overriding literal expressions\n\nFixes #1", "tree": {"sha": "01b9d1adb2b7ae9037c4ace1c8b978526093bafb", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/01b9d1adb2b7ae9037c4ace1c8b978526093bafb"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/36019770bc7ea07a5d15aa042a23057733afa4e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/36019770bc7ea07a5d15aa042a23057733afa4e6", "html_url": "https://github.com/dotnet/codeformatter/commit/36019770bc7ea07a5d15aa042a23057733afa4e6", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/36019770bc7ea07a5d15aa042a23057733afa4e6/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75aaffe12e822fb3b059afd8810fdaae16dd2001", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/75aaffe12e822fb3b059afd8810fdaae16dd2001", "html_url": "https://github.com/dotnet/codeformatter/commit/75aaffe12e822fb3b059afd8810fdaae16dd2001"}]}, {"sha": "75aaffe12e822fb3b059afd8810fdaae16dd2001", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T01:32:04Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:47Z"}, "message": "Removes unnecessary ConditionalRegionState enum", "tree": {"sha": "a53a339b0729d9edfbd2c17f29e172b15749ad54", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a53a339b0729d9edfbd2c17f29e172b15749ad54"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/75aaffe12e822fb3b059afd8810fdaae16dd2001", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/75aaffe12e822fb3b059afd8810fdaae16dd2001", "html_url": "https://github.com/dotnet/codeformatter/commit/75aaffe12e822fb3b059afd8810fdaae16dd2001", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/75aaffe12e822fb3b059afd8810fdaae16dd2001/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "793cae3bec2867eaeecb5f205c41e89ab5819b52", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/793cae3bec2867eaeecb5f205c41e89ab5819b52", "html_url": "https://github.com/dotnet/codeformatter/commit/793cae3bec2867eaeecb5f205c41e89ab5819b52"}]}, {"sha": "793cae3bec2867eaeecb5f205c41e89ab5819b52", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T01:19:01Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:45Z"}, "message": "Remove stale TODO comments", "tree": {"sha": "8725f1b0aa6760f14c681220134401b12ed84f7a", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8725f1b0aa6760f14c681220134401b12ed84f7a"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/793cae3bec2867eaeecb5f205c41e89ab5819b52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/793cae3bec2867eaeecb5f205c41e89ab5819b52", "html_url": "https://github.com/dotnet/codeformatter/commit/793cae3bec2867eaeecb5f205c41e89ab5819b52", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/793cae3bec2867eaeecb5f205c41e89ab5819b52/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1351d9cc8fd22bd3e71848945ca7e5d08c6547f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f1351d9cc8fd22bd3e71848945ca7e5d08c6547f", "html_url": "https://github.com/dotnet/codeformatter/commit/f1351d9cc8fd22bd3e71848945ca7e5d08c6547f"}]}, {"sha": "f1351d9cc8fd22bd3e71848945ca7e5d08c6547f", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T01:12:58Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:42Z"}, "message": "Update usage and add cancellation check.", "tree": {"sha": "3e6b9de84916888b317e054ec144628b1c3f61d3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3e6b9de84916888b317e054ec144628b1c3f61d3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f1351d9cc8fd22bd3e71848945ca7e5d08c6547f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f1351d9cc8fd22bd3e71848945ca7e5d08c6547f", "html_url": "https://github.com/dotnet/codeformatter/commit/f1351d9cc8fd22bd3e71848945ca7e5d08c6547f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f1351d9cc8fd22bd3e71848945ca7e5d08c6547f/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec5547445993172d06474d8757faebba56c25671", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ec5547445993172d06474d8757faebba56c25671", "html_url": "https://github.com/dotnet/codeformatter/commit/ec5547445993172d06474d8757faebba56c25671"}]}, {"sha": "ec5547445993172d06474d8757faebba56c25671", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T01:01:23Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:39Z"}, "message": "Adds support for printing preprocessor symbol info\n\nFixes #5", "tree": {"sha": "f89ded68aab662fec790ad43ff17540ce9e2d67d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/f89ded68aab662fec790ad43ff17540ce9e2d67d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ec5547445993172d06474d8757faebba56c25671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ec5547445993172d06474d8757faebba56c25671", "html_url": "https://github.com/dotnet/codeformatter/commit/ec5547445993172d06474d8757faebba56c25671", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ec5547445993172d06474d8757faebba56c25671/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f385af1fc72ef21a2e9c0a90ef7a87d52eb6f04f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f385af1fc72ef21a2e9c0a90ef7a87d52eb6f04f", "html_url": "https://github.com/dotnet/codeformatter/commit/f385af1fc72ef21a2e9c0a90ef7a87d52eb6f04f"}]}, {"sha": "f385af1fc72ef21a2e9c0a90ef7a87d52eb6f04f", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-26T00:09:51Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:36Z"}, "message": "Update argument parsing logic\n\nFixes #4", "tree": {"sha": "c57b2484e947181806686bf3ff83c78f85ca8ec1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c57b2484e947181806686bf3ff83c78f85ca8ec1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f385af1fc72ef21a2e9c0a90ef7a87d52eb6f04f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f385af1fc72ef21a2e9c0a90ef7a87d52eb6f04f", "html_url": "https://github.com/dotnet/codeformatter/commit/f385af1fc72ef21a2e9c0a90ef7a87d52eb6f04f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f385af1fc72ef21a2e9c0a90ef7a87d52eb6f04f/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31f39e8c9114e77cf32fa3c5f6039572e99e5c3c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/31f39e8c9114e77cf32fa3c5f6039572e99e5c3c", "html_url": "https://github.com/dotnet/codeformatter/commit/31f39e8c9114e77cf32fa3c5f6039572e99e5c3c"}]}, {"sha": "31f39e8c9114e77cf32fa3c5f6039572e99e5c3c", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-25T19:50:08Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:33Z"}, "message": "Ignore read-only and non-existent files\n\nwhen run with /edit.\n\nFixes #3", "tree": {"sha": "823a11a25171db63446d5ee4d8bf1dd77d42c077", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/823a11a25171db63446d5ee4d8bf1dd77d42c077"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/31f39e8c9114e77cf32fa3c5f6039572e99e5c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/31f39e8c9114e77cf32fa3c5f6039572e99e5c3c", "html_url": "https://github.com/dotnet/codeformatter/commit/31f39e8c9114e77cf32fa3c5f6039572e99e5c3c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/31f39e8c9114e77cf32fa3c5f6039572e99e5c3c/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "358b478c3a7d35372cf19437781d812a0449231f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/358b478c3a7d35372cf19437781d812a0449231f", "html_url": "https://github.com/dotnet/codeformatter/commit/358b478c3a7d35372cf19437781d812a0449231f"}]}, {"sha": "358b478c3a7d35372cf19437781d812a0449231f", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-25T19:41:06Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:31Z"}, "message": "Removes skipped tests for whitespace removal\n\nThis functionality will be handled by the codeformatter", "tree": {"sha": "7f749b32c2634589952bda657519fa18e9f712c9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/7f749b32c2634589952bda657519fa18e9f712c9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/358b478c3a7d35372cf19437781d812a0449231f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/358b478c3a7d35372cf19437781d812a0449231f", "html_url": "https://github.com/dotnet/codeformatter/commit/358b478c3a7d35372cf19437781d812a0449231f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/358b478c3a7d35372cf19437781d812a0449231f/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c92bc1516cf81175819ff0bf2b9fc462051c54f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4c92bc1516cf81175819ff0bf2b9fc462051c54f", "html_url": "https://github.com/dotnet/codeformatter/commit/4c92bc1516cf81175819ff0bf2b9fc462051c54f"}]}, {"sha": "4c92bc1516cf81175819ff0bf2b9fc462051c54f", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-25T19:37:57Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:28Z"}, "message": "Add option to specify value for undefined symbols\n\nFixes #2", "tree": {"sha": "e11336cb2106ef417424ee611870e67fa7cdc2bd", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e11336cb2106ef417424ee611870e67fa7cdc2bd"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/4c92bc1516cf81175819ff0bf2b9fc462051c54f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4c92bc1516cf81175819ff0bf2b9fc462051c54f", "html_url": "https://github.com/dotnet/codeformatter/commit/4c92bc1516cf81175819ff0bf2b9fc462051c54f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/4c92bc1516cf81175819ff0bf2b9fc462051c54f/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77a8fdd4dbb83170e7b3621e8e7e92a1c8552b1e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/77a8fdd4dbb83170e7b3621e8e7e92a1c8552b1e", "html_url": "https://github.com/dotnet/codeformatter/commit/77a8fdd4dbb83170e7b3621e8e7e92a1c8552b1e"}]}, {"sha": "77a8fdd4dbb83170e7b3621e8e7e92a1c8552b1e", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-02-06T03:15:26Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:25Z"}, "message": "Renamed assemblies, directories, and projects to 'DeadRegionAnalysis'", "tree": {"sha": "3cfc1a96ba8c31b86f860a6e80080f904e9786f2", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3cfc1a96ba8c31b86f860a6e80080f904e9786f2"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/77a8fdd4dbb83170e7b3621e8e7e92a1c8552b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/77a8fdd4dbb83170e7b3621e8e7e92a1c8552b1e", "html_url": "https://github.com/dotnet/codeformatter/commit/77a8fdd4dbb83170e7b3621e8e7e92a1c8552b1e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/77a8fdd4dbb83170e7b3621e8e7e92a1c8552b1e/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c09b493f3be67188c021d4bf5a82e08520ebd63a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c09b493f3be67188c021d4bf5a82e08520ebd63a", "html_url": "https://github.com/dotnet/codeformatter/commit/c09b493f3be67188c021d4bf5a82e08520ebd63a"}]}, {"sha": "c09b493f3be67188c021d4bf5a82e08520ebd63a", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-05T00:43:28Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:14Z"}, "message": "Added tests for removing whitespace surrounding regions.", "tree": {"sha": "0e940e21cd0dd3fc9cfb4189d1c01568563270e9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/0e940e21cd0dd3fc9cfb4189d1c01568563270e9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c09b493f3be67188c021d4bf5a82e08520ebd63a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c09b493f3be67188c021d4bf5a82e08520ebd63a", "html_url": "https://github.com/dotnet/codeformatter/commit/c09b493f3be67188c021d4bf5a82e08520ebd63a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c09b493f3be67188c021d4bf5a82e08520ebd63a/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "861f0e71210692ffc839c6010e2fd79edeb48ce3", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/861f0e71210692ffc839c6010e2fd79edeb48ce3", "html_url": "https://github.com/dotnet/codeformatter/commit/861f0e71210692ffc839c6010e2fd79edeb48ce3"}]}, {"sha": "861f0e71210692ffc839c6010e2fd79edeb48ce3", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-05T00:05:51Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:11Z"}, "message": "Improved error reporting for text.WithTextChanges() failure", "tree": {"sha": "83a121b44d8eced1697df2df658d499ae076d4c1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/83a121b44d8eced1697df2df658d499ae076d4c1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/861f0e71210692ffc839c6010e2fd79edeb48ce3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/861f0e71210692ffc839c6010e2fd79edeb48ce3", "html_url": "https://github.com/dotnet/codeformatter/commit/861f0e71210692ffc839c6010e2fd79edeb48ce3", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/861f0e71210692ffc839c6010e2fd79edeb48ce3/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "424712a715a7fed9f7a178513db1136e4b17eefb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/424712a715a7fed9f7a178513db1136e4b17eefb", "html_url": "https://github.com/dotnet/codeformatter/commit/424712a715a7fed9f7a178513db1136e4b17eefb"}]}, {"sha": "424712a715a7fed9f7a178513db1136e4b17eefb", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-04T23:57:34Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:04Z"}, "message": "Fixed nested region removal.", "tree": {"sha": "e4b182582de3877fe80eac3b9ebc7212517c1b48", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e4b182582de3877fe80eac3b9ebc7212517c1b48"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/424712a715a7fed9f7a178513db1136e4b17eefb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/424712a715a7fed9f7a178513db1136e4b17eefb", "html_url": "https://github.com/dotnet/codeformatter/commit/424712a715a7fed9f7a178513db1136e4b17eefb", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/424712a715a7fed9f7a178513db1136e4b17eefb/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5d16d053429f7435c3e4abfdffddc4997be562e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c5d16d053429f7435c3e4abfdffddc4997be562e", "html_url": "https://github.com/dotnet/codeformatter/commit/c5d16d053429f7435c3e4abfdffddc4997be562e"}]}, {"sha": "c5d16d053429f7435c3e4abfdffddc4997be562e", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-04T21:45:44Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:11:02Z"}, "message": "Add response file support. Make reporting happen in real-time.", "tree": {"sha": "3a99a8b2174b755ded98c4e790810ff48ef4a3d5", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3a99a8b2174b755ded98c4e790810ff48ef4a3d5"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c5d16d053429f7435c3e4abfdffddc4997be562e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c5d16d053429f7435c3e4abfdffddc4997be562e", "html_url": "https://github.com/dotnet/codeformatter/commit/c5d16d053429f7435c3e4abfdffddc4997be562e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c5d16d053429f7435c3e4abfdffddc4997be562e/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa62637a8e67d58f9282d703e0dd67c83086e1b7", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/fa62637a8e67d58f9282d703e0dd67c83086e1b7", "html_url": "https://github.com/dotnet/codeformatter/commit/fa62637a8e67d58f9282d703e0dd67c83086e1b7"}]}, {"sha": "fa62637a8e67d58f9282d703e0dd67c83086e1b7", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-04T21:05:04Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:59Z"}, "message": "Add 'disable' command line option", "tree": {"sha": "fe8dc1f46f8b741888cad391d029f7036dc14777", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/fe8dc1f46f8b741888cad391d029f7036dc14777"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/fa62637a8e67d58f9282d703e0dd67c83086e1b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/fa62637a8e67d58f9282d703e0dd67c83086e1b7", "html_url": "https://github.com/dotnet/codeformatter/commit/fa62637a8e67d58f9282d703e0dd67c83086e1b7", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/fa62637a8e67d58f9282d703e0dd67c83086e1b7/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f02d9ac010e252ed370215d9f2085b69346f6d72", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f02d9ac010e252ed370215d9f2085b69346f6d72", "html_url": "https://github.com/dotnet/codeformatter/commit/f02d9ac010e252ed370215d9f2085b69346f6d72"}]}, {"sha": "f02d9ac010e252ed370215d9f2085b69346f6d72", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-28T16:41:30Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:56Z"}, "message": "Fixed algorithm.  All test cases now pass.  Now just needs some additional cleanup work and actual use.", "tree": {"sha": "c42d9c1728d8aa90a6133faa652a4ac98c1d82db", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c42d9c1728d8aa90a6133faa652a4ac98c1d82db"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f02d9ac010e252ed370215d9f2085b69346f6d72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f02d9ac010e252ed370215d9f2085b69346f6d72", "html_url": "https://github.com/dotnet/codeformatter/commit/f02d9ac010e252ed370215d9f2085b69346f6d72", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f02d9ac010e252ed370215d9f2085b69346f6d72/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34e67c9d516aa0b3f87675147795ea52992f4903", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/34e67c9d516aa0b3f87675147795ea52992f4903", "html_url": "https://github.com/dotnet/codeformatter/commit/34e67c9d516aa0b3f87675147795ea52992f4903"}]}, {"sha": "34e67c9d516aa0b3f87675147795ea52992f4903", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-27T05:57:46Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:53Z"}, "message": "All but one test case passes. Need to expand always disabled regions because we need to replace the last #elif in a region that starts with an #if", "tree": {"sha": "014fedbda94266149fc8c4d056aa61c25eb587eb", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/014fedbda94266149fc8c4d056aa61c25eb587eb"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/34e67c9d516aa0b3f87675147795ea52992f4903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/34e67c9d516aa0b3f87675147795ea52992f4903", "html_url": "https://github.com/dotnet/codeformatter/commit/34e67c9d516aa0b3f87675147795ea52992f4903", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/34e67c9d516aa0b3f87675147795ea52992f4903/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd3e3abce702f1b7f0b967cc18ea7602e2cc6635", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cd3e3abce702f1b7f0b967cc18ea7602e2cc6635", "html_url": "https://github.com/dotnet/codeformatter/commit/cd3e3abce702f1b7f0b967cc18ea7602e2cc6635"}]}, {"sha": "cd3e3abce702f1b7f0b967cc18ea7602e2cc6635", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-25T03:14:10Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:51Z"}, "message": "Modifying removal algorithm to be more generic.", "tree": {"sha": "85e6fe5bccbc3ae7b9e22c79053a9001078c54c2", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/85e6fe5bccbc3ae7b9e22c79053a9001078c54c2"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/cd3e3abce702f1b7f0b967cc18ea7602e2cc6635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cd3e3abce702f1b7f0b967cc18ea7602e2cc6635", "html_url": "https://github.com/dotnet/codeformatter/commit/cd3e3abce702f1b7f0b967cc18ea7602e2cc6635", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/cd3e3abce702f1b7f0b967cc18ea7602e2cc6635/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d307d782840269069aff1a55112e49b25d9bc979", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d307d782840269069aff1a55112e49b25d9bc979", "html_url": "https://github.com/dotnet/codeformatter/commit/d307d782840269069aff1a55112e49b25d9bc979"}]}, {"sha": "d307d782840269069aff1a55112e49b25d9bc979", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-19T07:02:45Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:48Z"}, "message": "Some tests were missing Fact attributes.", "tree": {"sha": "db758d27ae6fbe9f03607c3e89c556d9b4254a6b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/db758d27ae6fbe9f03607c3e89c556d9b4254a6b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d307d782840269069aff1a55112e49b25d9bc979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d307d782840269069aff1a55112e49b25d9bc979", "html_url": "https://github.com/dotnet/codeformatter/commit/d307d782840269069aff1a55112e49b25d9bc979", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d307d782840269069aff1a55112e49b25d9bc979/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56704f6ae05f587200221159a162eefe2192d795", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/56704f6ae05f587200221159a162eefe2192d795", "html_url": "https://github.com/dotnet/codeformatter/commit/56704f6ae05f587200221159a162eefe2192d795"}]}, {"sha": "56704f6ae05f587200221159a162eefe2192d795", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-19T06:40:14Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:45Z"}, "message": "All tests now pass. Had forgotten to seed each configuration of symbols with the explicit configuration.", "tree": {"sha": "b7129b0a72ecf044130b8815f651e23465e1efc5", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/b7129b0a72ecf044130b8815f651e23465e1efc5"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/56704f6ae05f587200221159a162eefe2192d795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/56704f6ae05f587200221159a162eefe2192d795", "html_url": "https://github.com/dotnet/codeformatter/commit/56704f6ae05f587200221159a162eefe2192d795", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/56704f6ae05f587200221159a162eefe2192d795/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bafd138150b6aa898a18a578a1d219715f6600f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5bafd138150b6aa898a18a578a1d219715f6600f", "html_url": "https://github.com/dotnet/codeformatter/commit/5bafd138150b6aa898a18a578a1d219715f6600f"}]}, {"sha": "5bafd138150b6aa898a18a578a1d219715f6600f", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-19T06:31:50Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:42Z"}, "message": "Finished implementation of algorithm evaluating each expression for each configuration. Tests are in the same state as with old algorithm, two failing. Need to add some cases for gaps between disabled regions (where the gap is not active but varying).", "tree": {"sha": "e70f3b12b6ac25393f0e50b09494f2ba9a25701c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e70f3b12b6ac25393f0e50b09494f2ba9a25701c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/5bafd138150b6aa898a18a578a1d219715f6600f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5bafd138150b6aa898a18a578a1d219715f6600f", "html_url": "https://github.com/dotnet/codeformatter/commit/5bafd138150b6aa898a18a578a1d219715f6600f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/5bafd138150b6aa898a18a578a1d219715f6600f/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b15683537ae500667d8a0fc05bf60e6d13a4d57", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1b15683537ae500667d8a0fc05bf60e6d13a4d57", "html_url": "https://github.com/dotnet/codeformatter/commit/1b15683537ae500667d8a0fc05bf60e6d13a4d57"}]}, {"sha": "1b15683537ae500667d8a0fc05bf60e6d13a4d57", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-19T06:09:20Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:39Z"}, "message": "Implemented basic algorithm. Realized that each expression needs to be evaluated for each configuration to determine if it is always true or always false. Otherwise, conditions involving symbols that vary may not be evaluated correctly. There are unit tests for this that are failing right now.", "tree": {"sha": "7a9fb2c89fe5ee4d1e6935daf7e814f20abff304", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/7a9fb2c89fe5ee4d1e6935daf7e814f20abff304"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1b15683537ae500667d8a0fc05bf60e6d13a4d57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1b15683537ae500667d8a0fc05bf60e6d13a4d57", "html_url": "https://github.com/dotnet/codeformatter/commit/1b15683537ae500667d8a0fc05bf60e6d13a4d57", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1b15683537ae500667d8a0fc05bf60e6d13a4d57/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ab2fad3c31394a3be75fa92a7d555408f0416de", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0ab2fad3c31394a3be75fa92a7d555408f0416de", "html_url": "https://github.com/dotnet/codeformatter/commit/0ab2fad3c31394a3be75fa92a7d555408f0416de"}]}, {"sha": "0ab2fad3c31394a3be75fa92a7d555408f0416de", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-19T04:50:28Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:37Z"}, "message": "Added symbol state calculation and some simple tests.", "tree": {"sha": "69d9ff4536638697ad85fd558aca31983ea83b28", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/69d9ff4536638697ad85fd558aca31983ea83b28"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0ab2fad3c31394a3be75fa92a7d555408f0416de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0ab2fad3c31394a3be75fa92a7d555408f0416de", "html_url": "https://github.com/dotnet/codeformatter/commit/0ab2fad3c31394a3be75fa92a7d555408f0416de", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0ab2fad3c31394a3be75fa92a7d555408f0416de/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e329d620e7e44433d7bb6578d7b811ba899dbcb9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e329d620e7e44433d7bb6578d7b811ba899dbcb9", "html_url": "https://github.com/dotnet/codeformatter/commit/e329d620e7e44433d7bb6578d7b811ba899dbcb9"}]}, {"sha": "e329d620e7e44433d7bb6578d7b811ba899dbcb9", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-18T23:57:14Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:34Z"}, "message": "Factored RunAsync method out of AnalysisEngine", "tree": {"sha": "e0ba7f097517b4dfdf2661b0e2af1996276f118d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e0ba7f097517b4dfdf2661b0e2af1996276f118d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/e329d620e7e44433d7bb6578d7b811ba899dbcb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e329d620e7e44433d7bb6578d7b811ba899dbcb9", "html_url": "https://github.com/dotnet/codeformatter/commit/e329d620e7e44433d7bb6578d7b811ba899dbcb9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/e329d620e7e44433d7bb6578d7b811ba899dbcb9/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81ab4b7aa04fd36dcb253c6c2745db1fc1e3bde0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/81ab4b7aa04fd36dcb253c6c2745db1fc1e3bde0", "html_url": "https://github.com/dotnet/codeformatter/commit/81ab4b7aa04fd36dcb253c6c2745db1fc1e3bde0"}]}, {"sha": "81ab4b7aa04fd36dcb253c6c2745db1fc1e3bde0", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-18T23:41:13Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:31Z"}, "message": "Moved factory methods onto AnalysisEngine class.", "tree": {"sha": "f69226944a34de132b799d6a0fc315d5d70fb0c5", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/f69226944a34de132b799d6a0fc315d5d70fb0c5"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/81ab4b7aa04fd36dcb253c6c2745db1fc1e3bde0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/81ab4b7aa04fd36dcb253c6c2745db1fc1e3bde0", "html_url": "https://github.com/dotnet/codeformatter/commit/81ab4b7aa04fd36dcb253c6c2745db1fc1e3bde0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/81ab4b7aa04fd36dcb253c6c2745db1fc1e3bde0/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22521e4fc858d7cc37feb590e91f74f706430ec3", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/22521e4fc858d7cc37feb590e91f74f706430ec3", "html_url": "https://github.com/dotnet/codeformatter/commit/22521e4fc858d7cc37feb590e91f74f706430ec3"}]}, {"sha": "22521e4fc858d7cc37feb590e91f74f706430ec3", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-18T06:38:05Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:28Z"}, "message": "Wrote PreprocessorExpressionEvaluator as basis for new algorithm.", "tree": {"sha": "4cc0c08ea12b7c2c4a0e9d5422ff893f55ce7814", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4cc0c08ea12b7c2c4a0e9d5422ff893f55ce7814"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/22521e4fc858d7cc37feb590e91f74f706430ec3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/22521e4fc858d7cc37feb590e91f74f706430ec3", "html_url": "https://github.com/dotnet/codeformatter/commit/22521e4fc858d7cc37feb590e91f74f706430ec3", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/22521e4fc858d7cc37feb590e91f74f706430ec3/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46f9adbfd50a1cf8fca27a99e656422a7bdf8cc9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/46f9adbfd50a1cf8fca27a99e656422a7bdf8cc9", "html_url": "https://github.com/dotnet/codeformatter/commit/46f9adbfd50a1cf8fca27a99e656422a7bdf8cc9"}]}, {"sha": "46f9adbfd50a1cf8fca27a99e656422a7bdf8cc9", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-18T05:58:14Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:21Z"}, "message": "Renamed test files to better indicate what they're for.", "tree": {"sha": "5ea899ddba5de26d6397e06300435c4d859ef021", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5ea899ddba5de26d6397e06300435c4d859ef021"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/46f9adbfd50a1cf8fca27a99e656422a7bdf8cc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/46f9adbfd50a1cf8fca27a99e656422a7bdf8cc9", "html_url": "https://github.com/dotnet/codeformatter/commit/46f9adbfd50a1cf8fca27a99e656422a7bdf8cc9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/46f9adbfd50a1cf8fca27a99e656422a7bdf8cc9/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54f989aa4280bb9349276fd9e483ecb407dbb710", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/54f989aa4280bb9349276fd9e483ecb407dbb710", "html_url": "https://github.com/dotnet/codeformatter/commit/54f989aa4280bb9349276fd9e483ecb407dbb710"}]}, {"sha": "54f989aa4280bb9349276fd9e483ecb407dbb710", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-18T05:55:21Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:14Z"}, "message": "Identification tests are back working.", "tree": {"sha": "eb75f926d9dc64d63c6b819da557eb426ebb1444", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/eb75f926d9dc64d63c6b819da557eb426ebb1444"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/54f989aa4280bb9349276fd9e483ecb407dbb710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/54f989aa4280bb9349276fd9e483ecb407dbb710", "html_url": "https://github.com/dotnet/codeformatter/commit/54f989aa4280bb9349276fd9e483ecb407dbb710", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/54f989aa4280bb9349276fd9e483ecb407dbb710/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9144a0696cab80e6cec14683292512f2369ea24", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b9144a0696cab80e6cec14683292512f2369ea24", "html_url": "https://github.com/dotnet/codeformatter/commit/b9144a0696cab80e6cec14683292512f2369ea24"}]}, {"sha": "b9144a0696cab80e6cec14683292512f2369ea24", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-18T05:44:39Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:12Z"}, "message": "All region removal tests pass.", "tree": {"sha": "a23751342cba4a604eba28bb4fd5158b66a6fad0", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a23751342cba4a604eba28bb4fd5158b66a6fad0"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b9144a0696cab80e6cec14683292512f2369ea24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b9144a0696cab80e6cec14683292512f2369ea24", "html_url": "https://github.com/dotnet/codeformatter/commit/b9144a0696cab80e6cec14683292512f2369ea24", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b9144a0696cab80e6cec14683292512f2369ea24/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ab89502b1d345dbb2d811626005b1a36c9a4c6", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/13ab89502b1d345dbb2d811626005b1a36c9a4c6", "html_url": "https://github.com/dotnet/codeformatter/commit/13ab89502b1d345dbb2d811626005b1a36c9a4c6"}]}, {"sha": "13ab89502b1d345dbb2d811626005b1a36c9a4c6", "commit": {"author": {"name": "Nate Slottow", "email": "nslottow@gmail.com", "date": "2015-01-18T05:29:19Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:09Z"}, "message": "Refactored cleanup into AnalysisEngine partial class file. Got unit test infrastructure back running for region removal.", "tree": {"sha": "1d391acce5991a616a69da7b7852e440dd6d2d72", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/1d391acce5991a616a69da7b7852e440dd6d2d72"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/13ab89502b1d345dbb2d811626005b1a36c9a4c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/13ab89502b1d345dbb2d811626005b1a36c9a4c6", "html_url": "https://github.com/dotnet/codeformatter/commit/13ab89502b1d345dbb2d811626005b1a36c9a4c6", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/13ab89502b1d345dbb2d811626005b1a36c9a4c6/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8de4c971334fd8f814f6aa11aa4d41ddf0621784", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8de4c971334fd8f814f6aa11aa4d41ddf0621784", "html_url": "https://github.com/dotnet/codeformatter/commit/8de4c971334fd8f814f6aa11aa4d41ddf0621784"}]}, {"sha": "8de4c971334fd8f814f6aa11aa4d41ddf0621784", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-13T06:29:46Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:06Z"}, "message": "Plumbed AnalysisOptions through. Closer to getting tests back to passing. Then make use of the tool, then fix the algorithm.", "tree": {"sha": "ce84f00fde6d4dccf673844fffec577c5d631904", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ce84f00fde6d4dccf673844fffec577c5d631904"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8de4c971334fd8f814f6aa11aa4d41ddf0621784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8de4c971334fd8f814f6aa11aa4d41ddf0621784", "html_url": "https://github.com/dotnet/codeformatter/commit/8de4c971334fd8f814f6aa11aa4d41ddf0621784", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8de4c971334fd8f814f6aa11aa4d41ddf0621784/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "185fca093e74b0c18241f5feaa1b55fc9d7ef61e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/185fca093e74b0c18241f5feaa1b55fc9d7ef61e", "html_url": "https://github.com/dotnet/codeformatter/commit/185fca093e74b0c18241f5feaa1b55fc9d7ef61e"}]}, {"sha": "185fca093e74b0c18241f5feaa1b55fc9d7ef61e", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-13T04:22:12Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:03Z"}, "message": "Pulled common project properties out into a top-level file", "tree": {"sha": "e86b3dc3255ac924ec125c2cba23dab5a2806545", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e86b3dc3255ac924ec125c2cba23dab5a2806545"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/185fca093e74b0c18241f5feaa1b55fc9d7ef61e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/185fca093e74b0c18241f5feaa1b55fc9d7ef61e", "html_url": "https://github.com/dotnet/codeformatter/commit/185fca093e74b0c18241f5feaa1b55fc9d7ef61e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/185fca093e74b0c18241f5feaa1b55fc9d7ef61e/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d32217d96d6529db5902f32058dcc186a78fc00", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3d32217d96d6529db5902f32058dcc186a78fc00", "html_url": "https://github.com/dotnet/codeformatter/commit/3d32217d96d6529db5902f32058dcc186a78fc00"}]}, {"sha": "3d32217d96d6529db5902f32058dcc186a78fc00", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-13T03:06:10Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:10:00Z"}, "message": "Disabled tests for now", "tree": {"sha": "82ee957540c1300a979c68e0887adc9d6b80dd7d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/82ee957540c1300a979c68e0887adc9d6b80dd7d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3d32217d96d6529db5902f32058dcc186a78fc00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3d32217d96d6529db5902f32058dcc186a78fc00", "html_url": "https://github.com/dotnet/codeformatter/commit/3d32217d96d6529db5902f32058dcc186a78fc00", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3d32217d96d6529db5902f32058dcc186a78fc00/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f67f79806f0b524c6be1074b6882501be65520bf", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f67f79806f0b524c6be1074b6882501be65520bf", "html_url": "https://github.com/dotnet/codeformatter/commit/f67f79806f0b524c6be1074b6882501be65520bf"}]}, {"sha": "f67f79806f0b524c6be1074b6882501be65520bf", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T21:08:52Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:57Z"}, "message": "Removed tfs dependency.", "tree": {"sha": "39f2de964985d1ee897ead636c6e86b126ac8bdf", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/39f2de964985d1ee897ead636c6e86b126ac8bdf"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f67f79806f0b524c6be1074b6882501be65520bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f67f79806f0b524c6be1074b6882501be65520bf", "html_url": "https://github.com/dotnet/codeformatter/commit/f67f79806f0b524c6be1074b6882501be65520bf", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f67f79806f0b524c6be1074b6882501be65520bf/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1048cba3d0bf48a90091dbae185bda5535849b33", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1048cba3d0bf48a90091dbae185bda5535849b33", "html_url": "https://github.com/dotnet/codeformatter/commit/1048cba3d0bf48a90091dbae185bda5535849b33"}]}, {"sha": "1048cba3d0bf48a90091dbae185bda5535849b33", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T18:28:04Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:55Z"}, "message": "Added options class", "tree": {"sha": "49d18c1bc34e20ad601c238c5c614c92a0087c3a", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/49d18c1bc34e20ad601c238c5c614c92a0087c3a"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1048cba3d0bf48a90091dbae185bda5535849b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1048cba3d0bf48a90091dbae185bda5535849b33", "html_url": "https://github.com/dotnet/codeformatter/commit/1048cba3d0bf48a90091dbae185bda5535849b33", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1048cba3d0bf48a90091dbae185bda5535849b33/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb1d6c066f671147c1ec191db55481199a6a4136", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bb1d6c066f671147c1ec191db55481199a6a4136", "html_url": "https://github.com/dotnet/codeformatter/commit/bb1d6c066f671147c1ec191db55481199a6a4136"}]}, {"sha": "bb1d6c066f671147c1ec191db55481199a6a4136", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T17:53:45Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:52Z"}, "message": "Added back ConditionalRegionChain struct to get around codegen error and to encapsulate chain operations.", "tree": {"sha": "cda7b2770dc860161ded369d9aa0536605ac5846", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/cda7b2770dc860161ded369d9aa0536605ac5846"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/bb1d6c066f671147c1ec191db55481199a6a4136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bb1d6c066f671147c1ec191db55481199a6a4136", "html_url": "https://github.com/dotnet/codeformatter/commit/bb1d6c066f671147c1ec191db55481199a6a4136", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/bb1d6c066f671147c1ec191db55481199a6a4136/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00fb0312258fed4e3ca5e44923290b543845ab2a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/00fb0312258fed4e3ca5e44923290b543845ab2a", "html_url": "https://github.com/dotnet/codeformatter/commit/00fb0312258fed4e3ca5e44923290b543845ab2a"}]}, {"sha": "00fb0312258fed4e3ca5e44923290b543845ab2a", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T08:36:00Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:49Z"}, "message": "Codegen bug in Roslyn?", "tree": {"sha": "25b63c1594b435aad4ba2b77c726992986d176b1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/25b63c1594b435aad4ba2b77c726992986d176b1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/00fb0312258fed4e3ca5e44923290b543845ab2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/00fb0312258fed4e3ca5e44923290b543845ab2a", "html_url": "https://github.com/dotnet/codeformatter/commit/00fb0312258fed4e3ca5e44923290b543845ab2a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/00fb0312258fed4e3ca5e44923290b543845ab2a/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6da033e3e8fb7109910cdc8eaa46e582dddbc5d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a6da033e3e8fb7109910cdc8eaa46e582dddbc5d", "html_url": "https://github.com/dotnet/codeformatter/commit/a6da033e3e8fb7109910cdc8eaa46e582dddbc5d"}]}, {"sha": "a6da033e3e8fb7109910cdc8eaa46e582dddbc5d", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T08:05:32Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:46Z"}, "message": "Added a summary to the tool output", "tree": {"sha": "59c592bd3fb9f800b4263f2996e16d82850c0350", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/59c592bd3fb9f800b4263f2996e16d82850c0350"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a6da033e3e8fb7109910cdc8eaa46e582dddbc5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a6da033e3e8fb7109910cdc8eaa46e582dddbc5d", "html_url": "https://github.com/dotnet/codeformatter/commit/a6da033e3e8fb7109910cdc8eaa46e582dddbc5d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a6da033e3e8fb7109910cdc8eaa46e582dddbc5d/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "633d00d0ce767d988cf45d87717fd36e38cf84d1", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/633d00d0ce767d988cf45d87717fd36e38cf84d1", "html_url": "https://github.com/dotnet/codeformatter/commit/633d00d0ce767d988cf45d87717fd36e38cf84d1"}]}, {"sha": "633d00d0ce767d988cf45d87717fd36e38cf84d1", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T07:37:04Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:43Z"}, "message": "Fixed checking for depending on ignored symbols.", "tree": {"sha": "ce3603ac5e04a0579fecf1b7d603c3745d80f875", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ce3603ac5e04a0579fecf1b7d603c3745d80f875"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/633d00d0ce767d988cf45d87717fd36e38cf84d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/633d00d0ce767d988cf45d87717fd36e38cf84d1", "html_url": "https://github.com/dotnet/codeformatter/commit/633d00d0ce767d988cf45d87717fd36e38cf84d1", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/633d00d0ce767d988cf45d87717fd36e38cf84d1/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a74c33a4533e7be4d8aa2ff6d359496803fdec3b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a74c33a4533e7be4d8aa2ff6d359496803fdec3b", "html_url": "https://github.com/dotnet/codeformatter/commit/a74c33a4533e7be4d8aa2ff6d359496803fdec3b"}]}, {"sha": "a74c33a4533e7be4d8aa2ff6d359496803fdec3b", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T07:15:01Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:40Z"}, "message": "Made build.cmd build Release configuration.", "tree": {"sha": "1439f1e349abac19a391ce862dba67bdb21d91fa", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/1439f1e349abac19a391ce862dba67bdb21d91fa"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a74c33a4533e7be4d8aa2ff6d359496803fdec3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a74c33a4533e7be4d8aa2ff6d359496803fdec3b", "html_url": "https://github.com/dotnet/codeformatter/commit/a74c33a4533e7be4d8aa2ff6d359496803fdec3b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a74c33a4533e7be4d8aa2ff6d359496803fdec3b/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b44651019d1560779b0e0c10c8e2892e285c4096", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b44651019d1560779b0e0c10c8e2892e285c4096", "html_url": "https://github.com/dotnet/codeformatter/commit/b44651019d1560779b0e0c10c8e2892e285c4096"}]}, {"sha": "b44651019d1560779b0e0c10c8e2892e285c4096", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T07:07:27Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:37Z"}, "message": "Hooked up basics of tool to front end. Need to clean up the connection.", "tree": {"sha": "fb745eaf5a598ec463b4eb0d10ea4b5754362f6e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/fb745eaf5a598ec463b4eb0d10ea4b5754362f6e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b44651019d1560779b0e0c10c8e2892e285c4096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b44651019d1560779b0e0c10c8e2892e285c4096", "html_url": "https://github.com/dotnet/codeformatter/commit/b44651019d1560779b0e0c10c8e2892e285c4096", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b44651019d1560779b0e0c10c8e2892e285c4096/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38609ec3d849a160d213a38bba32cbc506d955c0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/38609ec3d849a160d213a38bba32cbc506d955c0", "html_url": "https://github.com/dotnet/codeformatter/commit/38609ec3d849a160d213a38bba32cbc506d955c0"}]}, {"sha": "38609ec3d849a160d213a38bba32cbc506d955c0", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T03:41:19Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:34Z"}, "message": "Finished implementing the removal algorithm.  Need to clean up and test.", "tree": {"sha": "c1ded33301afd867feb91f43fe697ab085026a3b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c1ded33301afd867feb91f43fe697ab085026a3b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/38609ec3d849a160d213a38bba32cbc506d955c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/38609ec3d849a160d213a38bba32cbc506d955c0", "html_url": "https://github.com/dotnet/codeformatter/commit/38609ec3d849a160d213a38bba32cbc506d955c0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/38609ec3d849a160d213a38bba32cbc506d955c0/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4116e1baf718f8fbc09f7949527106454817eede", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4116e1baf718f8fbc09f7949527106454817eede", "html_url": "https://github.com/dotnet/codeformatter/commit/4116e1baf718f8fbc09f7949527106454817eede"}]}, {"sha": "4116e1baf718f8fbc09f7949527106454817eede", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-12T00:48:11Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-02-27T21:09:31Z"}, "message": "Noted what needs to be done to get algorithm right.", "tree": {"sha": "ec12d5e7823c99b5604a8fbc8703d77339f733a3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ec12d5e7823c99b5604a8fbc8703d77339f733a3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/4116e1baf718f8fbc09f7949527106454817eede", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4116e1baf718f8fbc09f7949527106454817eede", "html_url": "https://github.com/dotnet/codeformatter/commit/4116e1baf718f8fbc09f7949527106454817eede", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/4116e1baf718f8fbc09f7949527106454817eede/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b34f6e2c957b5438770790463868321df9e3c021", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b34f6e2c957b5438770790463868321df9e3c021", "html_url": "https://github.com/dotnet/codeformatter/commit/b34f6e2c957b5438770790463868321df9e3c021"}]}, {"sha": "299dd7a1cb63ae566f43714bd2f5b9bb5f330f56", "commit": {"author": {"name": "Krzysztof Wicher", "email": "kwicher@microsoft.com", "date": "2015-02-27T17:52:36Z"}, "committer": {"name": "Krzysztof Wicher", "email": "kwicher@microsoft.com", "date": "2015-02-27T17:52:36Z"}, "message": "Merge pull request #76 from krwq/FixCopyRightHeaderRule\n\nFix multiline copyright header rule", "tree": {"sha": "a22fee4c24f3b791a5ea3db856588f3c96ac180c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a22fee4c24f3b791a5ea3db856588f3c96ac180c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/299dd7a1cb63ae566f43714bd2f5b9bb5f330f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/299dd7a1cb63ae566f43714bd2f5b9bb5f330f56", "html_url": "https://github.com/dotnet/codeformatter/commit/299dd7a1cb63ae566f43714bd2f5b9bb5f330f56", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/299dd7a1cb63ae566f43714bd2f5b9bb5f330f56/comments", "author": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67488a74f1a1bdc50685810cfdf59e8548829b81", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/67488a74f1a1bdc50685810cfdf59e8548829b81", "html_url": "https://github.com/dotnet/codeformatter/commit/67488a74f1a1bdc50685810cfdf59e8548829b81"}, {"sha": "6aa8070108a1cb6ddfab3b76214e91419e9a48d9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6aa8070108a1cb6ddfab3b76214e91419e9a48d9", "html_url": "https://github.com/dotnet/codeformatter/commit/6aa8070108a1cb6ddfab3b76214e91419e9a48d9"}]}, {"sha": "67488a74f1a1bdc50685810cfdf59e8548829b81", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-27T16:06:47Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-27T16:06:47Z"}, "message": "Merge pull request #82 from jaredpar/fix-endings\n\nDisable table formatting by default", "tree": {"sha": "6c0e2425cd70abf94d5645db7c1baae9e5db5aff", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6c0e2425cd70abf94d5645db7c1baae9e5db5aff"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/67488a74f1a1bdc50685810cfdf59e8548829b81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/67488a74f1a1bdc50685810cfdf59e8548829b81", "html_url": "https://github.com/dotnet/codeformatter/commit/67488a74f1a1bdc50685810cfdf59e8548829b81", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/67488a74f1a1bdc50685810cfdf59e8548829b81/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36f87840ae4351ff83c45dafedfe7f26a5b9e585", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/36f87840ae4351ff83c45dafedfe7f26a5b9e585", "html_url": "https://github.com/dotnet/codeformatter/commit/36f87840ae4351ff83c45dafedfe7f26a5b9e585"}, {"sha": "fa21a4d73c92ceedd3abcfe3a3211fe612e04ba3", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/fa21a4d73c92ceedd3abcfe3a3211fe612e04ba3", "html_url": "https://github.com/dotnet/codeformatter/commit/fa21a4d73c92ceedd3abcfe3a3211fe612e04ba3"}]}, {"sha": "fa21a4d73c92ceedd3abcfe3a3211fe612e04ba3", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T15:36:04Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T15:38:09Z"}, "message": "Added a verbose switch\n\nThere really isn't a reason to print out the times for every file in a\ndefault run.", "tree": {"sha": "6c0e2425cd70abf94d5645db7c1baae9e5db5aff", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6c0e2425cd70abf94d5645db7c1baae9e5db5aff"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/fa21a4d73c92ceedd3abcfe3a3211fe612e04ba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/fa21a4d73c92ceedd3abcfe3a3211fe612e04ba3", "html_url": "https://github.com/dotnet/codeformatter/commit/fa21a4d73c92ceedd3abcfe3a3211fe612e04ba3", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/fa21a4d73c92ceedd3abcfe3a3211fe612e04ba3/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59b7e82b916359b932a5e516755d9d0e00c4b827", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/59b7e82b916359b932a5e516755d9d0e00c4b827", "html_url": "https://github.com/dotnet/codeformatter/commit/59b7e82b916359b932a5e516755d9d0e00c4b827"}]}, {"sha": "59b7e82b916359b932a5e516755d9d0e00c4b827", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T15:28:40Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T15:28:40Z"}, "message": "Update command line parsing\n\nThe command line parsing code didn't reflect the current state of the\ntool.  The <rule types> switch for instance was only used to add in the\nxUnit conversion rules which are no longer a part of the code style\ntool.   This and some other dead code was removed and it now reflects\nthe real feature set of the tool.", "tree": {"sha": "e6d548c167dbf44a242de490ed5bed77151567c3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e6d548c167dbf44a242de490ed5bed77151567c3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/59b7e82b916359b932a5e516755d9d0e00c4b827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/59b7e82b916359b932a5e516755d9d0e00c4b827", "html_url": "https://github.com/dotnet/codeformatter/commit/59b7e82b916359b932a5e516755d9d0e00c4b827", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/59b7e82b916359b932a5e516755d9d0e00c4b827/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f924a68fed6667b848552c8b5511d4a49b486ea", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0f924a68fed6667b848552c8b5511d4a49b486ea", "html_url": "https://github.com/dotnet/codeformatter/commit/0f924a68fed6667b848552c8b5511d4a49b486ea"}]}, {"sha": "0f924a68fed6667b848552c8b5511d4a49b486ea", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T15:27:15Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T15:27:15Z"}, "message": "Fix unit test failure\n\nThe unit tests which depend on table formatting need to enable that\nfeature before running.", "tree": {"sha": "1e3f85bef071dbc7a28bc1b4bfc7d0ab8dc5c837", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/1e3f85bef071dbc7a28bc1b4bfc7d0ab8dc5c837"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0f924a68fed6667b848552c8b5511d4a49b486ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0f924a68fed6667b848552c8b5511d4a49b486ea", "html_url": "https://github.com/dotnet/codeformatter/commit/0f924a68fed6667b848552c8b5511d4a49b486ea", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0f924a68fed6667b848552c8b5511d4a49b486ea/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae6678a46c6d94b2d3142a78b0479f62c6bf000e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ae6678a46c6d94b2d3142a78b0479f62c6bf000e", "html_url": "https://github.com/dotnet/codeformatter/commit/ae6678a46c6d94b2d3142a78b0479f62c6bf000e"}]}, {"sha": "ae6678a46c6d94b2d3142a78b0479f62c6bf000e", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T09:57:59Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T09:57:59Z"}, "message": "Disable table formatting by default\n\nThis changes the behavior of the formatter to not define\nDOTNET_FORMATTER by default.  It can be opted into by using the /tables\noption.\n\nThe reason for this change is to avoid a bug in Roslyn around changing\nand resetting the parser options.  When hit Roslyn will end up changing\nall files in the solution to have a different encoding / line ending.\n\nI haven't yet tracked down this bug but short term making this opt-in\nbehavior so users aren't adversely affected by it.", "tree": {"sha": "a5000ef9c8a97ebb4c36d9acd83ecc53e736a07b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a5000ef9c8a97ebb4c36d9acd83ecc53e736a07b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ae6678a46c6d94b2d3142a78b0479f62c6bf000e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ae6678a46c6d94b2d3142a78b0479f62c6bf000e", "html_url": "https://github.com/dotnet/codeformatter/commit/ae6678a46c6d94b2d3142a78b0479f62c6bf000e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ae6678a46c6d94b2d3142a78b0479f62c6bf000e/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36f87840ae4351ff83c45dafedfe7f26a5b9e585", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/36f87840ae4351ff83c45dafedfe7f26a5b9e585", "html_url": "https://github.com/dotnet/codeformatter/commit/36f87840ae4351ff83c45dafedfe7f26a5b9e585"}]}, {"sha": "36f87840ae4351ff83c45dafedfe7f26a5b9e585", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-27T09:49:50Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-27T09:49:50Z"}, "message": "Merge pull request #81 from jaredpar/fix-newline\n\nFix a couple of newline issues", "tree": {"sha": "2adedf16cbcbe023578375862a44def4f0df620b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2adedf16cbcbe023578375862a44def4f0df620b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/36f87840ae4351ff83c45dafedfe7f26a5b9e585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/36f87840ae4351ff83c45dafedfe7f26a5b9e585", "html_url": "https://github.com/dotnet/codeformatter/commit/36f87840ae4351ff83c45dafedfe7f26a5b9e585", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/36f87840ae4351ff83c45dafedfe7f26a5b9e585/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b08e58cc96b3dc181482879189c3ff1be09fab40", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b08e58cc96b3dc181482879189c3ff1be09fab40", "html_url": "https://github.com/dotnet/codeformatter/commit/b08e58cc96b3dc181482879189c3ff1be09fab40"}, {"sha": "cb3b3d1bfb0027f367881fcdf5355fb375f089e0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cb3b3d1bfb0027f367881fcdf5355fb375f089e0", "html_url": "https://github.com/dotnet/codeformatter/commit/cb3b3d1bfb0027f367881fcdf5355fb375f089e0"}]}, {"sha": "cb3b3d1bfb0027f367881fcdf5355fb375f089e0", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T09:48:05Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T09:48:05Z"}, "message": "More newline fixes", "tree": {"sha": "2adedf16cbcbe023578375862a44def4f0df620b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2adedf16cbcbe023578375862a44def4f0df620b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/cb3b3d1bfb0027f367881fcdf5355fb375f089e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cb3b3d1bfb0027f367881fcdf5355fb375f089e0", "html_url": "https://github.com/dotnet/codeformatter/commit/cb3b3d1bfb0027f367881fcdf5355fb375f089e0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/cb3b3d1bfb0027f367881fcdf5355fb375f089e0/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a417d3f2ab8f96cad09b2a25705bd9a6b6df2df", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7a417d3f2ab8f96cad09b2a25705bd9a6b6df2df", "html_url": "https://github.com/dotnet/codeformatter/commit/7a417d3f2ab8f96cad09b2a25705bd9a6b6df2df"}]}, {"sha": "7a417d3f2ab8f96cad09b2a25705bd9a6b6df2df", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T09:33:50Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T09:33:50Z"}, "message": "Fixed a newline case.", "tree": {"sha": "a790c2c4bce89821da9d692caaa0cd2677505f95", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a790c2c4bce89821da9d692caaa0cd2677505f95"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/7a417d3f2ab8f96cad09b2a25705bd9a6b6df2df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7a417d3f2ab8f96cad09b2a25705bd9a6b6df2df", "html_url": "https://github.com/dotnet/codeformatter/commit/7a417d3f2ab8f96cad09b2a25705bd9a6b6df2df", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/7a417d3f2ab8f96cad09b2a25705bd9a6b6df2df/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6348822243067e2f3fbc0adca76e9175b094d28f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6348822243067e2f3fbc0adca76e9175b094d28f", "html_url": "https://github.com/dotnet/codeformatter/commit/6348822243067e2f3fbc0adca76e9175b094d28f"}]}, {"sha": "6348822243067e2f3fbc0adca76e9175b094d28f", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T09:10:01Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T09:10:41Z"}, "message": "Fix a couple of newline issues\n\nThe two HasNewLineBefore rules had a couple of small issues that needed\nto be addressed.\n\n1. They were unconditionally using CRLF which could possibly lead to\nmixed line endings in files.  The code was changed to prefer existing\nendings instead.\n2. They were formatting around #if blocks which is suspect and needs to\nbe disabled.\n3.  Produced new SyntaxNode values on trees that already had the correct\nformatting.  This was potentially changing line endings and made it\ndifficult to find noisy rules in the formatter.\n\nAfter looking at the logic of these rules they appear to really just be\nthe same rule run against two different nodes.  Hence I merged them into\na single rule to make it easier to share code.", "tree": {"sha": "7d5a508e9b57bee27049f9e02cfbb10919ed328e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/7d5a508e9b57bee27049f9e02cfbb10919ed328e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6348822243067e2f3fbc0adca76e9175b094d28f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6348822243067e2f3fbc0adca76e9175b094d28f", "html_url": "https://github.com/dotnet/codeformatter/commit/6348822243067e2f3fbc0adca76e9175b094d28f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6348822243067e2f3fbc0adca76e9175b094d28f/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b08e58cc96b3dc181482879189c3ff1be09fab40", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b08e58cc96b3dc181482879189c3ff1be09fab40", "html_url": "https://github.com/dotnet/codeformatter/commit/b08e58cc96b3dc181482879189c3ff1be09fab40"}]}, {"sha": "b08e58cc96b3dc181482879189c3ff1be09fab40", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-27T07:34:51Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-27T07:34:51Z"}, "message": "Merge pull request #80 from jaredpar/fix-vb\n\nFix VB trivia handling with comments + attrs", "tree": {"sha": "2820bc2b7e21c7aae76293f3c9e418032d92d923", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2820bc2b7e21c7aae76293f3c9e418032d92d923"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b08e58cc96b3dc181482879189c3ff1be09fab40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b08e58cc96b3dc181482879189c3ff1be09fab40", "html_url": "https://github.com/dotnet/codeformatter/commit/b08e58cc96b3dc181482879189c3ff1be09fab40", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b08e58cc96b3dc181482879189c3ff1be09fab40/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32fec62c2f72920401015ec8bcca8523f1d38e0e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/32fec62c2f72920401015ec8bcca8523f1d38e0e", "html_url": "https://github.com/dotnet/codeformatter/commit/32fec62c2f72920401015ec8bcca8523f1d38e0e"}, {"sha": "72fc8796e7f3363218951c3cb7a8b37f13ad5d8e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/72fc8796e7f3363218951c3cb7a8b37f13ad5d8e", "html_url": "https://github.com/dotnet/codeformatter/commit/72fc8796e7f3363218951c3cb7a8b37f13ad5d8e"}]}, {"sha": "72fc8796e7f3363218951c3cb7a8b37f13ad5d8e", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T00:41:14Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-27T00:41:14Z"}, "message": "Fix VB trivia handling with comments + attrs\n\nThe explicit modifier code for VB wasn't correctly handling the leading\ntrivia on types and methods.  It mistakenly grabbed and replaced the\ntrivia on the node instead of the appropriate keyword token when there\nwere no other modifiers.  This resulted in strange effects like comments\nbeing moved below attributes.\n\nFixed the first modifier case to use the keyword for trivial handling\ninstead.", "tree": {"sha": "2820bc2b7e21c7aae76293f3c9e418032d92d923", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2820bc2b7e21c7aae76293f3c9e418032d92d923"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/72fc8796e7f3363218951c3cb7a8b37f13ad5d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/72fc8796e7f3363218951c3cb7a8b37f13ad5d8e", "html_url": "https://github.com/dotnet/codeformatter/commit/72fc8796e7f3363218951c3cb7a8b37f13ad5d8e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/72fc8796e7f3363218951c3cb7a8b37f13ad5d8e/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32fec62c2f72920401015ec8bcca8523f1d38e0e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/32fec62c2f72920401015ec8bcca8523f1d38e0e", "html_url": "https://github.com/dotnet/codeformatter/commit/32fec62c2f72920401015ec8bcca8523f1d38e0e"}]}, {"sha": "6aa8070108a1cb6ddfab3b76214e91419e9a48d9", "commit": {"author": {"name": "Krzysztof Wicher", "email": "kwicher@microsoft.com", "date": "2015-02-23T19:53:33Z"}, "committer": {"name": "Krzysztof Wicher", "email": "kwicher@microsoft.com", "date": "2015-02-23T21:09:09Z"}, "message": "Fix multiline copyright header rule", "tree": {"sha": "2d35663bba6e4e63969748ad48f0d62e9d000976", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2d35663bba6e4e63969748ad48f0d62e9d000976"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6aa8070108a1cb6ddfab3b76214e91419e9a48d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6aa8070108a1cb6ddfab3b76214e91419e9a48d9", "html_url": "https://github.com/dotnet/codeformatter/commit/6aa8070108a1cb6ddfab3b76214e91419e9a48d9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6aa8070108a1cb6ddfab3b76214e91419e9a48d9/comments", "author": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32fec62c2f72920401015ec8bcca8523f1d38e0e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/32fec62c2f72920401015ec8bcca8523f1d38e0e", "html_url": "https://github.com/dotnet/codeformatter/commit/32fec62c2f72920401015ec8bcca8523f1d38e0e"}]}, {"sha": "32fec62c2f72920401015ec8bcca8523f1d38e0e", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-22T16:03:06Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-22T16:03:06Z"}, "message": "Fix for multiple projects\n\nThe original fix only handled the parse change for single projects, this\nfixes it to work for all projects.", "tree": {"sha": "2550099183ccad0153c0841385df9ed98b536b06", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2550099183ccad0153c0841385df9ed98b536b06"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/32fec62c2f72920401015ec8bcca8523f1d38e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/32fec62c2f72920401015ec8bcca8523f1d38e0e", "html_url": "https://github.com/dotnet/codeformatter/commit/32fec62c2f72920401015ec8bcca8523f1d38e0e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/32fec62c2f72920401015ec8bcca8523f1d38e0e/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35fbbe4dde65e57b708d6cd9d74d5ab16b9be53e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/35fbbe4dde65e57b708d6cd9d74d5ab16b9be53e", "html_url": "https://github.com/dotnet/codeformatter/commit/35fbbe4dde65e57b708d6cd9d74d5ab16b9be53e"}]}, {"sha": "35fbbe4dde65e57b708d6cd9d74d5ab16b9be53e", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-22T02:30:46Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-22T02:30:46Z"}, "message": "Merge pull request #74 from jaredpar/fix-73\n\nDon't save changed parse options", "tree": {"sha": "2b91eecedfd1c790271d34809b76a726fcb92e82", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2b91eecedfd1c790271d34809b76a726fcb92e82"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/35fbbe4dde65e57b708d6cd9d74d5ab16b9be53e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/35fbbe4dde65e57b708d6cd9d74d5ab16b9be53e", "html_url": "https://github.com/dotnet/codeformatter/commit/35fbbe4dde65e57b708d6cd9d74d5ab16b9be53e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/35fbbe4dde65e57b708d6cd9d74d5ab16b9be53e/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fd4df0d7dcca8023fc20271d960d0326b75979b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3fd4df0d7dcca8023fc20271d960d0326b75979b", "html_url": "https://github.com/dotnet/codeformatter/commit/3fd4df0d7dcca8023fc20271d960d0326b75979b"}, {"sha": "3e0ea5bb413132847faaaaa2066809c4de8e383d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3e0ea5bb413132847faaaaa2066809c4de8e383d", "html_url": "https://github.com/dotnet/codeformatter/commit/3e0ea5bb413132847faaaaa2066809c4de8e383d"}]}, {"sha": "3e0ea5bb413132847faaaaa2066809c4de8e383d", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-22T02:29:46Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-22T02:29:46Z"}, "message": "Don't save changed parse options\n\nThe formatter wasn't undoing the change to add the DOTNET_FORMATTER\nsymbol to the parse options.  The Workspace code tried to persist this\nto the project file and failed.  Remove it after formatting the files so\nit isn't attempted to be persisted.\n\ncloses #73", "tree": {"sha": "2b91eecedfd1c790271d34809b76a726fcb92e82", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2b91eecedfd1c790271d34809b76a726fcb92e82"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3e0ea5bb413132847faaaaa2066809c4de8e383d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3e0ea5bb413132847faaaaa2066809c4de8e383d", "html_url": "https://github.com/dotnet/codeformatter/commit/3e0ea5bb413132847faaaaa2066809c4de8e383d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3e0ea5bb413132847faaaaa2066809c4de8e383d/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fd4df0d7dcca8023fc20271d960d0326b75979b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3fd4df0d7dcca8023fc20271d960d0326b75979b", "html_url": "https://github.com/dotnet/codeformatter/commit/3fd4df0d7dcca8023fc20271d960d0326b75979b"}]}, {"sha": "3fd4df0d7dcca8023fc20271d960d0326b75979b", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-19T23:17:36Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-19T23:17:36Z"}, "message": "Merge pull request #72 from jaredpar/bug-fixes\n\nBug fixes", "tree": {"sha": "90ae817b9d14b3133f76d3885fe8aebb6719f3c8", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/90ae817b9d14b3133f76d3885fe8aebb6719f3c8"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3fd4df0d7dcca8023fc20271d960d0326b75979b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3fd4df0d7dcca8023fc20271d960d0326b75979b", "html_url": "https://github.com/dotnet/codeformatter/commit/3fd4df0d7dcca8023fc20271d960d0326b75979b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3fd4df0d7dcca8023fc20271d960d0326b75979b/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e34e67af3e467cc345a220809b9ee335dfc98a42", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e34e67af3e467cc345a220809b9ee335dfc98a42", "html_url": "https://github.com/dotnet/codeformatter/commit/e34e67af3e467cc345a220809b9ee335dfc98a42"}, {"sha": "072118725c40f4f52123f8a648fa11fde3630f71", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/072118725c40f4f52123f8a648fa11fde3630f71", "html_url": "https://github.com/dotnet/codeformatter/commit/072118725c40f4f52123f8a648fa11fde3630f71"}]}, {"sha": "072118725c40f4f52123f8a648fa11fde3630f71", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:36:46Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:36:46Z"}, "message": "Regression test for delegate rename\n\nEnsure that delegate field renames causes the invocation to be renamed\nas well.\n\ncloses #68", "tree": {"sha": "90ae817b9d14b3133f76d3885fe8aebb6719f3c8", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/90ae817b9d14b3133f76d3885fe8aebb6719f3c8"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/072118725c40f4f52123f8a648fa11fde3630f71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/072118725c40f4f52123f8a648fa11fde3630f71", "html_url": "https://github.com/dotnet/codeformatter/commit/072118725c40f4f52123f8a648fa11fde3630f71", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/072118725c40f4f52123f8a648fa11fde3630f71/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a28bc1017a116663e8c6d40c24153cbdc8491bb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a28bc1017a116663e8c6d40c24153cbdc8491bb", "html_url": "https://github.com/dotnet/codeformatter/commit/9a28bc1017a116663e8c6d40c24153cbdc8491bb"}]}, {"sha": "9a28bc1017a116663e8c6d40c24153cbdc8491bb", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:34:30Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:34:30Z"}, "message": "Regression test for private field rename\n\nAdded a regression test to ensure that private fields used off of a\nnon-this instance are renamed correctly during a field rename.\n\ncloses #69", "tree": {"sha": "130f2f3a1892e328650adcc0e17904e12afaaad5", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/130f2f3a1892e328650adcc0e17904e12afaaad5"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/9a28bc1017a116663e8c6d40c24153cbdc8491bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a28bc1017a116663e8c6d40c24153cbdc8491bb", "html_url": "https://github.com/dotnet/codeformatter/commit/9a28bc1017a116663e8c6d40c24153cbdc8491bb", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a28bc1017a116663e8c6d40c24153cbdc8491bb/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "401149c2619b698cb74159550698cdaac1abaa6e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/401149c2619b698cb74159550698cdaac1abaa6e", "html_url": "https://github.com/dotnet/codeformatter/commit/401149c2619b698cb74159550698cdaac1abaa6e"}]}, {"sha": "401149c2619b698cb74159550698cdaac1abaa6e", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:18:42Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:18:42Z"}, "message": "Regression test for nested struct visibility\n\nAdded a regression test to ensure a nested struct is tagged with private\nvisibility instead of internal.\n\nRelated to #70", "tree": {"sha": "42939f2f74aaf8113c178a5cca5a9cf49bff49ac", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/42939f2f74aaf8113c178a5cca5a9cf49bff49ac"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/401149c2619b698cb74159550698cdaac1abaa6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/401149c2619b698cb74159550698cdaac1abaa6e", "html_url": "https://github.com/dotnet/codeformatter/commit/401149c2619b698cb74159550698cdaac1abaa6e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/401149c2619b698cb74159550698cdaac1abaa6e/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cd238bd0072824a24d2da319741a200891341a7", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3cd238bd0072824a24d2da319741a200891341a7", "html_url": "https://github.com/dotnet/codeformatter/commit/3cd238bd0072824a24d2da319741a200891341a7"}]}, {"sha": "3cd238bd0072824a24d2da319741a200891341a7", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:05:46Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:05:46Z"}, "message": "Test for multiple namespaces\n\nAdd a test that verifies we don't do any moves when there are multiple\nnamespaces in the file.  There is no way to safely move a using in this\ncase using only syntax information.\n\nThis move effectively adds new namespaces at a global level which used\nto be local to a namespace.  This means extension methods and types from\nthis namespace will affect compilation in all namespaces.  This can\nintroduce both compilation errors or even worse silently change overload\nresolution in the file.", "tree": {"sha": "dae8cf2be9c94ad6e7db38808cc9f34ceba4bf10", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/dae8cf2be9c94ad6e7db38808cc9f34ceba4bf10"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3cd238bd0072824a24d2da319741a200891341a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3cd238bd0072824a24d2da319741a200891341a7", "html_url": "https://github.com/dotnet/codeformatter/commit/3cd238bd0072824a24d2da319741a200891341a7", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3cd238bd0072824a24d2da319741a200891341a7/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a433078fe904cdec0f064e8d77f9553a272c18e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5a433078fe904cdec0f064e8d77f9553a272c18e", "html_url": "https://github.com/dotnet/codeformatter/commit/5a433078fe904cdec0f064e8d77f9553a272c18e"}]}, {"sha": "5a433078fe904cdec0f064e8d77f9553a272c18e", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:02:44Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T21:02:44Z"}, "message": "Don't move usings inside #if directives\n\nThis changes the move usings outside of a namespace rule to be very wary\nof #if directives.  There is simply no safe way to move a directive of\nthe following nature:\n\n``` csharp\nnamespace NS1\n{\n#if COND\nusing NS2;\nclass C { }\n#else\nusing NS3;\nclass C { }\n#endif\n```\n\nLacking a good API to detect a using inside a #if directive we simply\nabandon this rule if there are any #if directives in the file.\n\ncloses #71", "tree": {"sha": "acd389f25ecfe39ecc4a8920a535acd73a0e9658", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/acd389f25ecfe39ecc4a8920a535acd73a0e9658"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/5a433078fe904cdec0f064e8d77f9553a272c18e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5a433078fe904cdec0f064e8d77f9553a272c18e", "html_url": "https://github.com/dotnet/codeformatter/commit/5a433078fe904cdec0f064e8d77f9553a272c18e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/5a433078fe904cdec0f064e8d77f9553a272c18e/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c09493205bb7c63ab36ec14452d1f0fc62a7375d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c09493205bb7c63ab36ec14452d1f0fc62a7375d", "html_url": "https://github.com/dotnet/codeformatter/commit/c09493205bb7c63ab36ec14452d1f0fc62a7375d"}]}, {"sha": "c09493205bb7c63ab36ec14452d1f0fc62a7375d", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T19:18:43Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-19T19:18:43Z"}, "message": "Rename using location rule\n\nRename the using location rule to be UsingLocationRule.  This more\nclosely signifies the behavior.", "tree": {"sha": "bcc5d58208ba385d7977ab6babf3296e4919baa7", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/bcc5d58208ba385d7977ab6babf3296e4919baa7"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c09493205bb7c63ab36ec14452d1f0fc62a7375d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c09493205bb7c63ab36ec14452d1f0fc62a7375d", "html_url": "https://github.com/dotnet/codeformatter/commit/c09493205bb7c63ab36ec14452d1f0fc62a7375d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c09493205bb7c63ab36ec14452d1f0fc62a7375d/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e34e67af3e467cc345a220809b9ee335dfc98a42", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e34e67af3e467cc345a220809b9ee335dfc98a42", "html_url": "https://github.com/dotnet/codeformatter/commit/e34e67af3e467cc345a220809b9ee335dfc98a42"}]}, {"sha": "e34e67af3e467cc345a220809b9ee335dfc98a42", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-19T18:28:07Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-19T18:28:07Z"}, "message": "Merge pull request #67 from jaredpar/upgrade-roslyn\n\nUpgrade roslyn", "tree": {"sha": "58f2858042dd1302d9ccf6d01b678a0b098fb0e3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/58f2858042dd1302d9ccf6d01b678a0b098fb0e3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/e34e67af3e467cc345a220809b9ee335dfc98a42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e34e67af3e467cc345a220809b9ee335dfc98a42", "html_url": "https://github.com/dotnet/codeformatter/commit/e34e67af3e467cc345a220809b9ee335dfc98a42", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/e34e67af3e467cc345a220809b9ee335dfc98a42/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8eaf59ae33fb0491a7b619b3d31ba9973f61d714", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8eaf59ae33fb0491a7b619b3d31ba9973f61d714", "html_url": "https://github.com/dotnet/codeformatter/commit/8eaf59ae33fb0491a7b619b3d31ba9973f61d714"}, {"sha": "0c74928072622bf9817293ec6e8bd8f2814dff30", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c74928072622bf9817293ec6e8bd8f2814dff30", "html_url": "https://github.com/dotnet/codeformatter/commit/0c74928072622bf9817293ec6e8bd8f2814dff30"}]}, {"sha": "8eaf59ae33fb0491a7b619b3d31ba9973f61d714", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-19T18:27:56Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-19T18:27:56Z"}, "message": "Merge pull request #66 from jaredpar/basic\n\nInitial support for Visual Basic", "tree": {"sha": "b3ecef1d4e9e1b979490086d2e47eb2e238071ad", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/b3ecef1d4e9e1b979490086d2e47eb2e238071ad"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8eaf59ae33fb0491a7b619b3d31ba9973f61d714", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8eaf59ae33fb0491a7b619b3d31ba9973f61d714", "html_url": "https://github.com/dotnet/codeformatter/commit/8eaf59ae33fb0491a7b619b3d31ba9973f61d714", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8eaf59ae33fb0491a7b619b3d31ba9973f61d714/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8479c0f3779dc98da2175366d3c02af2ba557518", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8479c0f3779dc98da2175366d3c02af2ba557518", "html_url": "https://github.com/dotnet/codeformatter/commit/8479c0f3779dc98da2175366d3c02af2ba557518"}, {"sha": "9a166380cbf40d146b15e38fedb2223f40dcd084", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a166380cbf40d146b15e38fedb2223f40dcd084", "html_url": "https://github.com/dotnet/codeformatter/commit/9a166380cbf40d146b15e38fedb2223f40dcd084"}]}, {"sha": "0c74928072622bf9817293ec6e8bd8f2814dff30", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-18T16:42:52Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-18T16:42:52Z"}, "message": "Upgraded to the RC1 Roslyn packages\n\nUpgrade the code formatter to use the RC1 version of the NuGet packages.\nThere were some API changes in this upgrade that caused a medium amount\nof churn in the code base.  It is mostly mechanical work.", "tree": {"sha": "67ed2efd791abd987e6c73f843e670b06075cd0d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/67ed2efd791abd987e6c73f843e670b06075cd0d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0c74928072622bf9817293ec6e8bd8f2814dff30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c74928072622bf9817293ec6e8bd8f2814dff30", "html_url": "https://github.com/dotnet/codeformatter/commit/0c74928072622bf9817293ec6e8bd8f2814dff30", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0c74928072622bf9817293ec6e8bd8f2814dff30/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a166380cbf40d146b15e38fedb2223f40dcd084", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a166380cbf40d146b15e38fedb2223f40dcd084", "html_url": "https://github.com/dotnet/codeformatter/commit/9a166380cbf40d146b15e38fedb2223f40dcd084"}]}, {"sha": "9a166380cbf40d146b15e38fedb2223f40dcd084", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-18T15:44:24Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-18T15:44:24Z"}, "message": "Typo Fix\n\nFix a typo in the generated code filter.", "tree": {"sha": "d3422c19c5f9e43a7287ae4adc5ed439184fd206", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d3422c19c5f9e43a7287ae4adc5ed439184fd206"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/9a166380cbf40d146b15e38fedb2223f40dcd084", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a166380cbf40d146b15e38fedb2223f40dcd084", "html_url": "https://github.com/dotnet/codeformatter/commit/9a166380cbf40d146b15e38fedb2223f40dcd084", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a166380cbf40d146b15e38fedb2223f40dcd084/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d9f74565a50c1225bff22abcbb5ac7318047061", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0d9f74565a50c1225bff22abcbb5ac7318047061", "html_url": "https://github.com/dotnet/codeformatter/commit/0d9f74565a50c1225bff22abcbb5ac7318047061"}]}, {"sha": "0d9f74565a50c1225bff22abcbb5ac7318047061", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-18T15:34:12Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-18T15:34:12Z"}, "message": "Ignore VB generated files\n\nUpdated the designer / generated file filter to understand VB files as\nwell.", "tree": {"sha": "175773ca70bb994b7a03b0b10bc363ef490d25ee", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/175773ca70bb994b7a03b0b10bc363ef490d25ee"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0d9f74565a50c1225bff22abcbb5ac7318047061", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0d9f74565a50c1225bff22abcbb5ac7318047061", "html_url": "https://github.com/dotnet/codeformatter/commit/0d9f74565a50c1225bff22abcbb5ac7318047061", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0d9f74565a50c1225bff22abcbb5ac7318047061/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccd901773843451be8e98bd9495c2ded2af5fc83", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ccd901773843451be8e98bd9495c2ded2af5fc83", "html_url": "https://github.com/dotnet/codeformatter/commit/ccd901773843451be8e98bd9495c2ded2af5fc83"}]}, {"sha": "8479c0f3779dc98da2175366d3c02af2ba557518", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-18T15:06:06Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-18T15:06:06Z"}, "message": "Merge pull request #63 from dotnet/xunit\n\nMove xunit code into custom converter", "tree": {"sha": "8d2ca5c0ef288da848c28d5381759a1a76392644", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8d2ca5c0ef288da848c28d5381759a1a76392644"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8479c0f3779dc98da2175366d3c02af2ba557518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8479c0f3779dc98da2175366d3c02af2ba557518", "html_url": "https://github.com/dotnet/codeformatter/commit/8479c0f3779dc98da2175366d3c02af2ba557518", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8479c0f3779dc98da2175366d3c02af2ba557518/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9490f1d6f6696c374f7106f70ad62613ebe8a77", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c9490f1d6f6696c374f7106f70ad62613ebe8a77", "html_url": "https://github.com/dotnet/codeformatter/commit/c9490f1d6f6696c374f7106f70ad62613ebe8a77"}, {"sha": "a82be6c36a6f67932049fb78e081021794e985a9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a82be6c36a6f67932049fb78e081021794e985a9", "html_url": "https://github.com/dotnet/codeformatter/commit/a82be6c36a6f67932049fb78e081021794e985a9"}]}, {"sha": "ccd901773843451be8e98bd9495c2ded2af5fc83", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-15T18:17:42Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-15T18:17:42Z"}, "message": "Added VB explicit visibility\n\nThis adds support to VB for making visibility modifiers explicit.", "tree": {"sha": "5e0eb236ee32a51c1cfe1b0b045cf72586a2a909", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5e0eb236ee32a51c1cfe1b0b045cf72586a2a909"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ccd901773843451be8e98bd9495c2ded2af5fc83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ccd901773843451be8e98bd9495c2ded2af5fc83", "html_url": "https://github.com/dotnet/codeformatter/commit/ccd901773843451be8e98bd9495c2ded2af5fc83", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ccd901773843451be8e98bd9495c2ded2af5fc83/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfcc3915bf3527693ca550abf4a07af3209d7fe5", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bfcc3915bf3527693ca550abf4a07af3209d7fe5", "html_url": "https://github.com/dotnet/codeformatter/commit/bfcc3915bf3527693ca550abf4a07af3209d7fe5"}]}, {"sha": "bfcc3915bf3527693ca550abf4a07af3209d7fe5", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-15T16:44:39Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-15T16:44:39Z"}, "message": "More VB support for private field name rules", "tree": {"sha": "dbf32f36881878b59f3a9149ad481bc1f9689997", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/dbf32f36881878b59f3a9149ad481bc1f9689997"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/bfcc3915bf3527693ca550abf4a07af3209d7fe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/bfcc3915bf3527693ca550abf4a07af3209d7fe5", "html_url": "https://github.com/dotnet/codeformatter/commit/bfcc3915bf3527693ca550abf4a07af3209d7fe5", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/bfcc3915bf3527693ca550abf4a07af3209d7fe5/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c6cc9d27e2cc83d1f50cdbbbd2f3e53d6fccc40", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4c6cc9d27e2cc83d1f50cdbbbd2f3e53d6fccc40", "html_url": "https://github.com/dotnet/codeformatter/commit/4c6cc9d27e2cc83d1f50cdbbbd2f3e53d6fccc40"}]}, {"sha": "c9490f1d6f6696c374f7106f70ad62613ebe8a77", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-15T16:32:33Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-15T16:32:33Z"}, "message": "Merge pull request #60 from aaronpowell/patch-1\n\nUpdating readme with the missing nocopyright flag", "tree": {"sha": "ca3c4bdac3637da5b324a7935c1f89545dc367c9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ca3c4bdac3637da5b324a7935c1f89545dc367c9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c9490f1d6f6696c374f7106f70ad62613ebe8a77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c9490f1d6f6696c374f7106f70ad62613ebe8a77", "html_url": "https://github.com/dotnet/codeformatter/commit/c9490f1d6f6696c374f7106f70ad62613ebe8a77", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c9490f1d6f6696c374f7106f70ad62613ebe8a77/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b4d75cede73eee3d9e1fcab439a519a39d91958", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b4d75cede73eee3d9e1fcab439a519a39d91958", "html_url": "https://github.com/dotnet/codeformatter/commit/3b4d75cede73eee3d9e1fcab439a519a39d91958"}, {"sha": "b60e402adf3628be82ece4a525efeafcd5442f55", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b60e402adf3628be82ece4a525efeafcd5442f55", "html_url": "https://github.com/dotnet/codeformatter/commit/b60e402adf3628be82ece4a525efeafcd5442f55"}]}, {"sha": "b60e402adf3628be82ece4a525efeafcd5442f55", "commit": {"author": {"name": "Aaron Powell", "email": "me@aaron-powell.com", "date": "2015-02-15T10:52:47Z"}, "committer": {"name": "Aaron Powell", "email": "me@aaron-powell.com", "date": "2015-02-15T10:52:47Z"}, "message": "Update README.md", "tree": {"sha": "d8bf7bf3a83b409a38ca46b2c62eab7815e512b1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d8bf7bf3a83b409a38ca46b2c62eab7815e512b1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b60e402adf3628be82ece4a525efeafcd5442f55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b60e402adf3628be82ece4a525efeafcd5442f55", "html_url": "https://github.com/dotnet/codeformatter/commit/b60e402adf3628be82ece4a525efeafcd5442f55", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b60e402adf3628be82ece4a525efeafcd5442f55/comments", "author": {"login": "aaronpowell", "id": 434140, "avatar_url": "https://avatars0.githubusercontent.com/u/434140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronpowell", "html_url": "https://github.com/aaronpowell", "followers_url": "https://api.github.com/users/aaronpowell/followers", "following_url": "https://api.github.com/users/aaronpowell/following{/other_user}", "gists_url": "https://api.github.com/users/aaronpowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronpowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronpowell/subscriptions", "organizations_url": "https://api.github.com/users/aaronpowell/orgs", "repos_url": "https://api.github.com/users/aaronpowell/repos", "events_url": "https://api.github.com/users/aaronpowell/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronpowell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aaronpowell", "id": 434140, "avatar_url": "https://avatars0.githubusercontent.com/u/434140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronpowell", "html_url": "https://github.com/aaronpowell", "followers_url": "https://api.github.com/users/aaronpowell/followers", "following_url": "https://api.github.com/users/aaronpowell/following{/other_user}", "gists_url": "https://api.github.com/users/aaronpowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronpowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronpowell/subscriptions", "organizations_url": "https://api.github.com/users/aaronpowell/orgs", "repos_url": "https://api.github.com/users/aaronpowell/repos", "events_url": "https://api.github.com/users/aaronpowell/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronpowell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15c0ff0e8b51c5565c2c8eb9dd14cf80cc566eac", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/15c0ff0e8b51c5565c2c8eb9dd14cf80cc566eac", "html_url": "https://github.com/dotnet/codeformatter/commit/15c0ff0e8b51c5565c2c8eb9dd14cf80cc566eac"}]}, {"sha": "4c6cc9d27e2cc83d1f50cdbbbd2f3e53d6fccc40", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-15T00:23:22Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-15T00:23:22Z"}, "message": "Initial support for VB private field name rules", "tree": {"sha": "8179ea838d99ad14717a2148ddb18e894e01a45c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8179ea838d99ad14717a2148ddb18e894e01a45c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/4c6cc9d27e2cc83d1f50cdbbbd2f3e53d6fccc40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4c6cc9d27e2cc83d1f50cdbbbd2f3e53d6fccc40", "html_url": "https://github.com/dotnet/codeformatter/commit/4c6cc9d27e2cc83d1f50cdbbbd2f3e53d6fccc40", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/4c6cc9d27e2cc83d1f50cdbbbd2f3e53d6fccc40/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25b1b184a43db6b2c464d0faf82119b51582c770", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/25b1b184a43db6b2c464d0faf82119b51582c770", "html_url": "https://github.com/dotnet/codeformatter/commit/25b1b184a43db6b2c464d0faf82119b51582c770"}]}, {"sha": "25b1b184a43db6b2c464d0faf82119b51582c770", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T23:21:32Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T23:21:32Z"}, "message": "Strip existing copyright header if present", "tree": {"sha": "75f19536247b1f76e884bcc0e3f9a397372899de", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/75f19536247b1f76e884bcc0e3f9a397372899de"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/25b1b184a43db6b2c464d0faf82119b51582c770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/25b1b184a43db6b2c464d0faf82119b51582c770", "html_url": "https://github.com/dotnet/codeformatter/commit/25b1b184a43db6b2c464d0faf82119b51582c770", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/25b1b184a43db6b2c464d0faf82119b51582c770/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1db85fc46914e56fe2ed168d0a14e999a1a0dea", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b1db85fc46914e56fe2ed168d0a14e999a1a0dea", "html_url": "https://github.com/dotnet/codeformatter/commit/b1db85fc46914e56fe2ed168d0a14e999a1a0dea"}]}, {"sha": "b1db85fc46914e56fe2ed168d0a14e999a1a0dea", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T22:44:43Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T22:44:43Z"}, "message": "Included Basic Workspaces dependency\n\nThe console runner needs to have the Visual Basic Workspaces dependency\nin order to correctly load .vbproj files.", "tree": {"sha": "77880dad87eb56550306dce8ece9f14b32deb331", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/77880dad87eb56550306dce8ece9f14b32deb331"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b1db85fc46914e56fe2ed168d0a14e999a1a0dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b1db85fc46914e56fe2ed168d0a14e999a1a0dea", "html_url": "https://github.com/dotnet/codeformatter/commit/b1db85fc46914e56fe2ed168d0a14e999a1a0dea", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b1db85fc46914e56fe2ed168d0a14e999a1a0dea/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a55d02675916b3a9adc73bb551adf76413f09874", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a55d02675916b3a9adc73bb551adf76413f09874", "html_url": "https://github.com/dotnet/codeformatter/commit/a55d02675916b3a9adc73bb551adf76413f09874"}]}, {"sha": "a55d02675916b3a9adc73bb551adf76413f09874", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T22:14:24Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T22:14:24Z"}, "message": "Basic copyright header support\n\nThis extends the copyright header rule support to Visual Basic.", "tree": {"sha": "2c09ff1381c7462ac305c79f4fc882462b675f95", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2c09ff1381c7462ac305c79f4fc882462b675f95"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a55d02675916b3a9adc73bb551adf76413f09874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a55d02675916b3a9adc73bb551adf76413f09874", "html_url": "https://github.com/dotnet/codeformatter/commit/a55d02675916b3a9adc73bb551adf76413f09874", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a55d02675916b3a9adc73bb551adf76413f09874/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2eaf9a240a116b234cd8eee62d4fca2f066ff8e5", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2eaf9a240a116b234cd8eee62d4fca2f066ff8e5", "html_url": "https://github.com/dotnet/codeformatter/commit/2eaf9a240a116b234cd8eee62d4fca2f066ff8e5"}]}, {"sha": "2eaf9a240a116b234cd8eee62d4fca2f066ff8e5", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T21:24:15Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T21:24:15Z"}, "message": "Pass language name to syntax rules\n\nAll of the other rules can access the syntax from the provided Document\nobject.  This passes the language name down to syntax so rules which\nsupport both C# and VB can change their implementation based on the\nlanguage.", "tree": {"sha": "9695761e0000276d39b28c6bbcde21682f486b2e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/9695761e0000276d39b28c6bbcde21682f486b2e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/2eaf9a240a116b234cd8eee62d4fca2f066ff8e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2eaf9a240a116b234cd8eee62d4fca2f066ff8e5", "html_url": "https://github.com/dotnet/codeformatter/commit/2eaf9a240a116b234cd8eee62d4fca2f066ff8e5", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/2eaf9a240a116b234cd8eee62d4fca2f066ff8e5/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d045b0339b1e455199a78a64ca5b0adcc5ac10cc", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d045b0339b1e455199a78a64ca5b0adcc5ac10cc", "html_url": "https://github.com/dotnet/codeformatter/commit/d045b0339b1e455199a78a64ca5b0adcc5ac10cc"}]}, {"sha": "d045b0339b1e455199a78a64ca5b0adcc5ac10cc", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T21:21:22Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T21:21:22Z"}, "message": "Begin support for VB.Net\n\nThis commit sets the stage for adding VB.Net support into the code\nformatter by allowing rules to partition their support based on the\nlanguage in question.\n\nThis is the start of getting issue #55 implemented.", "tree": {"sha": "bdfb5b159bdff12e32795021ed806651ba309186", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/bdfb5b159bdff12e32795021ed806651ba309186"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d045b0339b1e455199a78a64ca5b0adcc5ac10cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d045b0339b1e455199a78a64ca5b0adcc5ac10cc", "html_url": "https://github.com/dotnet/codeformatter/commit/d045b0339b1e455199a78a64ca5b0adcc5ac10cc", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d045b0339b1e455199a78a64ca5b0adcc5ac10cc/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a82be6c36a6f67932049fb78e081021794e985a9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a82be6c36a6f67932049fb78e081021794e985a9", "html_url": "https://github.com/dotnet/codeformatter/commit/a82be6c36a6f67932049fb78e081021794e985a9"}]}, {"sha": "a82be6c36a6f67932049fb78e081021794e985a9", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T21:05:17Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T21:05:17Z"}, "message": "Added a README.md", "tree": {"sha": "53efde23f5f9ad946f36c286253e06651e55e394", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/53efde23f5f9ad946f36c286253e06651e55e394"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a82be6c36a6f67932049fb78e081021794e985a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a82be6c36a6f67932049fb78e081021794e985a9", "html_url": "https://github.com/dotnet/codeformatter/commit/a82be6c36a6f67932049fb78e081021794e985a9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a82be6c36a6f67932049fb78e081021794e985a9/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2ac3bb55f8db25f6c59c7886228f51cf326d099", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d2ac3bb55f8db25f6c59c7886228f51cf326d099", "html_url": "https://github.com/dotnet/codeformatter/commit/d2ac3bb55f8db25f6c59c7886228f51cf326d099"}]}, {"sha": "d2ac3bb55f8db25f6c59c7886228f51cf326d099", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T21:00:35Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T21:00:35Z"}, "message": "Cleaned up the names", "tree": {"sha": "a35f1febf4f1c4210c88e9764abdd261133831d1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a35f1febf4f1c4210c88e9764abdd261133831d1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d2ac3bb55f8db25f6c59c7886228f51cf326d099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d2ac3bb55f8db25f6c59c7886228f51cf326d099", "html_url": "https://github.com/dotnet/codeformatter/commit/d2ac3bb55f8db25f6c59c7886228f51cf326d099", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d2ac3bb55f8db25f6c59c7886228f51cf326d099/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e819c5e7a4835222d1da34f6007db9ec6939034", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9e819c5e7a4835222d1da34f6007db9ec6939034", "html_url": "https://github.com/dotnet/codeformatter/commit/9e819c5e7a4835222d1da34f6007db9ec6939034"}]}, {"sha": "9e819c5e7a4835222d1da34f6007db9ec6939034", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:58:23Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:58:23Z"}, "message": "Removed Assert rule from code formatter", "tree": {"sha": "7a7c8cc2d1a8e86f44af8f976ec5db67bdadc070", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/7a7c8cc2d1a8e86f44af8f976ec5db67bdadc070"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/9e819c5e7a4835222d1da34f6007db9ec6939034", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9e819c5e7a4835222d1da34f6007db9ec6939034", "html_url": "https://github.com/dotnet/codeformatter/commit/9e819c5e7a4835222d1da34f6007db9ec6939034", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/9e819c5e7a4835222d1da34f6007db9ec6939034/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "659a740a7966d0ec0e5aba7ecf3a1e0c845f2d17", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/659a740a7966d0ec0e5aba7ecf3a1e0c845f2d17", "html_url": "https://github.com/dotnet/codeformatter/commit/659a740a7966d0ec0e5aba7ecf3a1e0c845f2d17"}]}, {"sha": "659a740a7966d0ec0e5aba7ecf3a1e0c845f2d17", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:57:49Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:57:49Z"}, "message": "Ported Assert rules to xunit converter", "tree": {"sha": "c2bc6a4afdc81395c436dd8d8aaa819290742366", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c2bc6a4afdc81395c436dd8d8aaa819290742366"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/659a740a7966d0ec0e5aba7ecf3a1e0c845f2d17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/659a740a7966d0ec0e5aba7ecf3a1e0c845f2d17", "html_url": "https://github.com/dotnet/codeformatter/commit/659a740a7966d0ec0e5aba7ecf3a1e0c845f2d17", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/659a740a7966d0ec0e5aba7ecf3a1e0c845f2d17/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9cbfdb8333ed695a7cf60b1cbd34b22ccaa51e2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b9cbfdb8333ed695a7cf60b1cbd34b22ccaa51e2", "html_url": "https://github.com/dotnet/codeformatter/commit/b9cbfdb8333ed695a7cf60b1cbd34b22ccaa51e2"}]}, {"sha": "b9cbfdb8333ed695a7cf60b1cbd34b22ccaa51e2", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:43:42Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:43:42Z"}, "message": "Merge remote-tracking branch 'upstream/master' into xunit\n\nConflicts:\n\tsrc/Microsoft.DotNet.CodeFormatting.Tests/Microsoft.DotNet.CodeFormatting.Tests.csproj\n\tsrc/Microsoft.DotNet.CodeFormatting/Microsoft.DotNet.CodeFormatting.csproj", "tree": {"sha": "62e9e7f41b8065e20707ffd0e2f51552b660912d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/62e9e7f41b8065e20707ffd0e2f51552b660912d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b9cbfdb8333ed695a7cf60b1cbd34b22ccaa51e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b9cbfdb8333ed695a7cf60b1cbd34b22ccaa51e2", "html_url": "https://github.com/dotnet/codeformatter/commit/b9cbfdb8333ed695a7cf60b1cbd34b22ccaa51e2", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b9cbfdb8333ed695a7cf60b1cbd34b22ccaa51e2/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df1b298562b268633b3618e52a31eee7e06818ea", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/df1b298562b268633b3618e52a31eee7e06818ea", "html_url": "https://github.com/dotnet/codeformatter/commit/df1b298562b268633b3618e52a31eee7e06818ea"}, {"sha": "3b4d75cede73eee3d9e1fcab439a519a39d91958", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b4d75cede73eee3d9e1fcab439a519a39d91958", "html_url": "https://github.com/dotnet/codeformatter/commit/3b4d75cede73eee3d9e1fcab439a519a39d91958"}]}, {"sha": "df1b298562b268633b3618e52a31eee7e06818ea", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:41:08Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:41:08Z"}, "message": "Removed old xunit logic", "tree": {"sha": "eecc1251c73726a37eeaed4f22200bf34b4b9989", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/eecc1251c73726a37eeaed4f22200bf34b4b9989"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/df1b298562b268633b3618e52a31eee7e06818ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/df1b298562b268633b3618e52a31eee7e06818ea", "html_url": "https://github.com/dotnet/codeformatter/commit/df1b298562b268633b3618e52a31eee7e06818ea", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/df1b298562b268633b3618e52a31eee7e06818ea/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea65d1bbb26e38e170f15114d40d9e482c0269ce", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ea65d1bbb26e38e170f15114d40d9e482c0269ce", "html_url": "https://github.com/dotnet/codeformatter/commit/ea65d1bbb26e38e170f15114d40d9e482c0269ce"}]}, {"sha": "ea65d1bbb26e38e170f15114d40d9e482c0269ce", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:40:11Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:40:11Z"}, "message": "Fixed the xunit converter tests\n\nThe tests were passing before because I was failing to await an async\nmethod.  Changed the code to correctly await the Verify method and fixed\nup the failure.", "tree": {"sha": "0b46bba1afe9ae800fe70b22bb47bc69ce67f2ae", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/0b46bba1afe9ae800fe70b22bb47bc69ce67f2ae"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ea65d1bbb26e38e170f15114d40d9e482c0269ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ea65d1bbb26e38e170f15114d40d9e482c0269ce", "html_url": "https://github.com/dotnet/codeformatter/commit/ea65d1bbb26e38e170f15114d40d9e482c0269ce", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ea65d1bbb26e38e170f15114d40d9e482c0269ce/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34f3516c9c3567f9c0672b75ed0a94111a221663", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/34f3516c9c3567f9c0672b75ed0a94111a221663", "html_url": "https://github.com/dotnet/codeformatter/commit/34f3516c9c3567f9c0672b75ed0a94111a221663"}]}, {"sha": "34f3516c9c3567f9c0672b75ed0a94111a221663", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:32:11Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-14T20:32:11Z"}, "message": "XUnit tests passing", "tree": {"sha": "91ba322bdce88e7c0689f710339f33b7903bf754", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/91ba322bdce88e7c0689f710339f33b7903bf754"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/34f3516c9c3567f9c0672b75ed0a94111a221663", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/34f3516c9c3567f9c0672b75ed0a94111a221663", "html_url": "https://github.com/dotnet/codeformatter/commit/34f3516c9c3567f9c0672b75ed0a94111a221663", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/34f3516c9c3567f9c0672b75ed0a94111a221663/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "766855ac0ba9e2ec9d9fa54f96c9a9d461d956fd", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/766855ac0ba9e2ec9d9fa54f96c9a9d461d956fd", "html_url": "https://github.com/dotnet/codeformatter/commit/766855ac0ba9e2ec9d9fa54f96c9a9d461d956fd"}]}, {"sha": "3b4d75cede73eee3d9e1fcab439a519a39d91958", "commit": {"author": {"name": "Ying Peng", "email": "yingp@microsoft.com", "date": "2015-02-13T22:58:55Z"}, "committer": {"name": "Ying Peng", "email": "yingp@microsoft.com", "date": "2015-02-13T22:58:55Z"}, "message": "Merge pull request #62 from YingP99/assertrule\n\nAdd new rule to convert Test Assert.True or False with redundant conditi...", "tree": {"sha": "a646ebefa31531acd56832e745bdfe47d73b24d2", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a646ebefa31531acd56832e745bdfe47d73b24d2"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3b4d75cede73eee3d9e1fcab439a519a39d91958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b4d75cede73eee3d9e1fcab439a519a39d91958", "html_url": "https://github.com/dotnet/codeformatter/commit/3b4d75cede73eee3d9e1fcab439a519a39d91958", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b4d75cede73eee3d9e1fcab439a519a39d91958/comments", "author": {"login": "YingP99", "id": 9558545, "avatar_url": "https://avatars1.githubusercontent.com/u/9558545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YingP99", "html_url": "https://github.com/YingP99", "followers_url": "https://api.github.com/users/YingP99/followers", "following_url": "https://api.github.com/users/YingP99/following{/other_user}", "gists_url": "https://api.github.com/users/YingP99/gists{/gist_id}", "starred_url": "https://api.github.com/users/YingP99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YingP99/subscriptions", "organizations_url": "https://api.github.com/users/YingP99/orgs", "repos_url": "https://api.github.com/users/YingP99/repos", "events_url": "https://api.github.com/users/YingP99/events{/privacy}", "received_events_url": "https://api.github.com/users/YingP99/received_events", "type": "User", "site_admin": false}, "committer": {"login": "YingP99", "id": 9558545, "avatar_url": "https://avatars1.githubusercontent.com/u/9558545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YingP99", "html_url": "https://github.com/YingP99", "followers_url": "https://api.github.com/users/YingP99/followers", "following_url": "https://api.github.com/users/YingP99/following{/other_user}", "gists_url": "https://api.github.com/users/YingP99/gists{/gist_id}", "starred_url": "https://api.github.com/users/YingP99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YingP99/subscriptions", "organizations_url": "https://api.github.com/users/YingP99/orgs", "repos_url": "https://api.github.com/users/YingP99/repos", "events_url": "https://api.github.com/users/YingP99/events{/privacy}", "received_events_url": "https://api.github.com/users/YingP99/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "225a369365199c5cfb4a315b3ee06c4b9f6920cb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/225a369365199c5cfb4a315b3ee06c4b9f6920cb", "html_url": "https://github.com/dotnet/codeformatter/commit/225a369365199c5cfb4a315b3ee06c4b9f6920cb"}, {"sha": "334304ec61e5cd60377323ccce0112b3252e556c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/334304ec61e5cd60377323ccce0112b3252e556c", "html_url": "https://github.com/dotnet/codeformatter/commit/334304ec61e5cd60377323ccce0112b3252e556c"}]}, {"sha": "766855ac0ba9e2ec9d9fa54f96c9a9d461d956fd", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-13T20:51:29Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-13T20:51:29Z"}, "message": "Progress on porting the xunit tests", "tree": {"sha": "4a59f9d5109926c732ded1d7da6cbc8098fc2bab", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4a59f9d5109926c732ded1d7da6cbc8098fc2bab"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/766855ac0ba9e2ec9d9fa54f96c9a9d461d956fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/766855ac0ba9e2ec9d9fa54f96c9a9d461d956fd", "html_url": "https://github.com/dotnet/codeformatter/commit/766855ac0ba9e2ec9d9fa54f96c9a9d461d956fd", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/766855ac0ba9e2ec9d9fa54f96c9a9d461d956fd/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3234b6bc4d4c5bd1c3d1b90aa2cdeb64913910ae", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3234b6bc4d4c5bd1c3d1b90aa2cdeb64913910ae", "html_url": "https://github.com/dotnet/codeformatter/commit/3234b6bc4d4c5bd1c3d1b90aa2cdeb64913910ae"}]}, {"sha": "3234b6bc4d4c5bd1c3d1b90aa2cdeb64913910ae", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-13T20:35:47Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-13T20:35:47Z"}, "message": "Hooked up the command line arguments", "tree": {"sha": "edf18eff5a5d8aa15968d813ae47c1c46c900e7f", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/edf18eff5a5d8aa15968d813ae47c1c46c900e7f"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3234b6bc4d4c5bd1c3d1b90aa2cdeb64913910ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3234b6bc4d4c5bd1c3d1b90aa2cdeb64913910ae", "html_url": "https://github.com/dotnet/codeformatter/commit/3234b6bc4d4c5bd1c3d1b90aa2cdeb64913910ae", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3234b6bc4d4c5bd1c3d1b90aa2cdeb64913910ae/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "351ef1347263181a8559e59e340ce8f1d8005436", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/351ef1347263181a8559e59e340ce8f1d8005436", "html_url": "https://github.com/dotnet/codeformatter/commit/351ef1347263181a8559e59e340ce8f1d8005436"}]}, {"sha": "351ef1347263181a8559e59e340ce8f1d8005436", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-13T20:27:56Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-13T20:27:56Z"}, "message": "Copy xUnit conversion logic to a new project", "tree": {"sha": "ee2f21559fa1e64abecc822d698133ac2d527de3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ee2f21559fa1e64abecc822d698133ac2d527de3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/351ef1347263181a8559e59e340ce8f1d8005436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/351ef1347263181a8559e59e340ce8f1d8005436", "html_url": "https://github.com/dotnet/codeformatter/commit/351ef1347263181a8559e59e340ce8f1d8005436", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/351ef1347263181a8559e59e340ce8f1d8005436/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "225a369365199c5cfb4a315b3ee06c4b9f6920cb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/225a369365199c5cfb4a315b3ee06c4b9f6920cb", "html_url": "https://github.com/dotnet/codeformatter/commit/225a369365199c5cfb4a315b3ee06c4b9f6920cb"}]}, {"sha": "225a369365199c5cfb4a315b3ee06c4b9f6920cb", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-13T20:15:45Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-13T20:15:45Z"}, "message": "Merge pull request #59 from FiveTimesTheFun/master\n\n\"ConvertTests\" rule improvements", "tree": {"sha": "09d09aa8a9d9eebbd5a8c67b282044302dc8e1a9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/09d09aa8a9d9eebbd5a8c67b282044302dc8e1a9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/225a369365199c5cfb4a315b3ee06c4b9f6920cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/225a369365199c5cfb4a315b3ee06c4b9f6920cb", "html_url": "https://github.com/dotnet/codeformatter/commit/225a369365199c5cfb4a315b3ee06c4b9f6920cb", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/225a369365199c5cfb4a315b3ee06c4b9f6920cb/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "614fd6ed63a463f9af0af3d50d34b4e7c79ee892", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/614fd6ed63a463f9af0af3d50d34b4e7c79ee892", "html_url": "https://github.com/dotnet/codeformatter/commit/614fd6ed63a463f9af0af3d50d34b4e7c79ee892"}, {"sha": "c672233be8b77572c435b502bdbb16bcdf5ab108", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c672233be8b77572c435b502bdbb16bcdf5ab108", "html_url": "https://github.com/dotnet/codeformatter/commit/c672233be8b77572c435b502bdbb16bcdf5ab108"}]}, {"sha": "334304ec61e5cd60377323ccce0112b3252e556c", "commit": {"author": {"name": "Ying Peng", "email": "yingp@microsoft.com", "date": "2015-02-13T02:06:37Z"}, "committer": {"name": "dotnet-bot", "email": "dotnet-bot@microsoft.com", "date": "2015-02-13T02:34:52Z"}, "message": "Add new rule to convert Test Assert.True or False with redundant condition", "tree": {"sha": "dacd353012f87d3daf6d9c0dfb133577cd77db05", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/dacd353012f87d3daf6d9c0dfb133577cd77db05"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/334304ec61e5cd60377323ccce0112b3252e556c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/334304ec61e5cd60377323ccce0112b3252e556c", "html_url": "https://github.com/dotnet/codeformatter/commit/334304ec61e5cd60377323ccce0112b3252e556c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/334304ec61e5cd60377323ccce0112b3252e556c/comments", "author": {"login": "YingP99", "id": 9558545, "avatar_url": "https://avatars1.githubusercontent.com/u/9558545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YingP99", "html_url": "https://github.com/YingP99", "followers_url": "https://api.github.com/users/YingP99/followers", "following_url": "https://api.github.com/users/YingP99/following{/other_user}", "gists_url": "https://api.github.com/users/YingP99/gists{/gist_id}", "starred_url": "https://api.github.com/users/YingP99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YingP99/subscriptions", "organizations_url": "https://api.github.com/users/YingP99/orgs", "repos_url": "https://api.github.com/users/YingP99/repos", "events_url": "https://api.github.com/users/YingP99/events{/privacy}", "received_events_url": "https://api.github.com/users/YingP99/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotnet-bot", "id": 9011267, "avatar_url": "https://avatars3.githubusercontent.com/u/9011267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet-bot", "html_url": "https://github.com/dotnet-bot", "followers_url": "https://api.github.com/users/dotnet-bot/followers", "following_url": "https://api.github.com/users/dotnet-bot/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet-bot/subscriptions", "organizations_url": "https://api.github.com/users/dotnet-bot/orgs", "repos_url": "https://api.github.com/users/dotnet-bot/repos", "events_url": "https://api.github.com/users/dotnet-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet-bot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68004f5dcaa63bbd29496934d73004b98330ad22", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/68004f5dcaa63bbd29496934d73004b98330ad22", "html_url": "https://github.com/dotnet/codeformatter/commit/68004f5dcaa63bbd29496934d73004b98330ad22"}]}, {"sha": "c672233be8b77572c435b502bdbb16bcdf5ab108", "commit": {"author": {"name": "Matt Cohn", "email": "macohn@microsoft.com", "date": "2015-02-12T20:08:48Z"}, "committer": {"name": "Matt Cohn", "email": "macohn@microsoft.com", "date": "2015-02-12T20:08:48Z"}, "message": "Responding to PR feedback, factor out common code to\nRemoveLeadingAndTrailingCompilerDirectives method instead of lambda\nin ProcessAsync.", "tree": {"sha": "d1b7b5249ca72ff7aeba6ffbb7abcd0b5f15b2d7", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d1b7b5249ca72ff7aeba6ffbb7abcd0b5f15b2d7"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c672233be8b77572c435b502bdbb16bcdf5ab108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c672233be8b77572c435b502bdbb16bcdf5ab108", "html_url": "https://github.com/dotnet/codeformatter/commit/c672233be8b77572c435b502bdbb16bcdf5ab108", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c672233be8b77572c435b502bdbb16bcdf5ab108/comments", "author": null, "committer": null, "parents": [{"sha": "25423c5864b09d73c6b3e8dfb0900e5de71b78ee", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/25423c5864b09d73c6b3e8dfb0900e5de71b78ee", "html_url": "https://github.com/dotnet/codeformatter/commit/25423c5864b09d73c6b3e8dfb0900e5de71b78ee"}]}, {"sha": "614fd6ed63a463f9af0af3d50d34b4e7c79ee892", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-11T22:50:31Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-11T22:50:31Z"}, "message": "Merge pull request #57 from mmitche/ci-build-cmd\n\nAllow for falling back to msbuild 12 if msbuild 14 is not available", "tree": {"sha": "73b6a8c6f008dfa7640c4ca3a52b62f7d7a54b82", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/73b6a8c6f008dfa7640c4ca3a52b62f7d7a54b82"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/614fd6ed63a463f9af0af3d50d34b4e7c79ee892", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/614fd6ed63a463f9af0af3d50d34b4e7c79ee892", "html_url": "https://github.com/dotnet/codeformatter/commit/614fd6ed63a463f9af0af3d50d34b4e7c79ee892", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/614fd6ed63a463f9af0af3d50d34b4e7c79ee892/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e946b742cc98f188d874fdc75ad52132bc96c31", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2e946b742cc98f188d874fdc75ad52132bc96c31", "html_url": "https://github.com/dotnet/codeformatter/commit/2e946b742cc98f188d874fdc75ad52132bc96c31"}, {"sha": "8b5847befe0cd5b897716667f95927d28d0dcee9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8b5847befe0cd5b897716667f95927d28d0dcee9", "html_url": "https://github.com/dotnet/codeformatter/commit/8b5847befe0cd5b897716667f95927d28d0dcee9"}]}, {"sha": "15c0ff0e8b51c5565c2c8eb9dd14cf80cc566eac", "commit": {"author": {"name": "Aaron Powell", "email": "me@aaron-powell.com", "date": "2015-02-11T22:09:03Z"}, "committer": {"name": "Aaron Powell", "email": "me@aaron-powell.com", "date": "2015-02-11T22:09:03Z"}, "message": "Updating readme with the missing nocopyright flag", "tree": {"sha": "4c81cd714b83ef8581c5ae8a4ab5ba83d6b3ca72", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4c81cd714b83ef8581c5ae8a4ab5ba83d6b3ca72"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/15c0ff0e8b51c5565c2c8eb9dd14cf80cc566eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/15c0ff0e8b51c5565c2c8eb9dd14cf80cc566eac", "html_url": "https://github.com/dotnet/codeformatter/commit/15c0ff0e8b51c5565c2c8eb9dd14cf80cc566eac", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/15c0ff0e8b51c5565c2c8eb9dd14cf80cc566eac/comments", "author": {"login": "aaronpowell", "id": 434140, "avatar_url": "https://avatars0.githubusercontent.com/u/434140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronpowell", "html_url": "https://github.com/aaronpowell", "followers_url": "https://api.github.com/users/aaronpowell/followers", "following_url": "https://api.github.com/users/aaronpowell/following{/other_user}", "gists_url": "https://api.github.com/users/aaronpowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronpowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronpowell/subscriptions", "organizations_url": "https://api.github.com/users/aaronpowell/orgs", "repos_url": "https://api.github.com/users/aaronpowell/repos", "events_url": "https://api.github.com/users/aaronpowell/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronpowell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aaronpowell", "id": 434140, "avatar_url": "https://avatars0.githubusercontent.com/u/434140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronpowell", "html_url": "https://github.com/aaronpowell", "followers_url": "https://api.github.com/users/aaronpowell/followers", "following_url": "https://api.github.com/users/aaronpowell/following{/other_user}", "gists_url": "https://api.github.com/users/aaronpowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronpowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronpowell/subscriptions", "organizations_url": "https://api.github.com/users/aaronpowell/orgs", "repos_url": "https://api.github.com/users/aaronpowell/repos", "events_url": "https://api.github.com/users/aaronpowell/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronpowell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e946b742cc98f188d874fdc75ad52132bc96c31", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2e946b742cc98f188d874fdc75ad52132bc96c31", "html_url": "https://github.com/dotnet/codeformatter/commit/2e946b742cc98f188d874fdc75ad52132bc96c31"}]}, {"sha": "25423c5864b09d73c6b3e8dfb0900e5de71b78ee", "commit": {"author": {"name": "Matt Cohn", "email": "macohn@microsoft.com", "date": "2015-02-10T23:06:52Z"}, "committer": {"name": "Matt Cohn", "email": "macohn@microsoft.com", "date": "2015-02-10T23:06:52Z"}, "message": "\"ConvertTests\" rule improvements\n\nThis change updates UsesXunitForTestsFormattingRule (\"ConvertTests\")\nto not remove unidentified usings (where the using cannot be mapped\nto a symbol because the source of the using may not be in the\nworkspace), and to remove the ToF \"ContractsRequiredAttribute\".", "tree": {"sha": "e57db1cc030083de2ba40e0713f08545d37a402b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e57db1cc030083de2ba40e0713f08545d37a402b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/25423c5864b09d73c6b3e8dfb0900e5de71b78ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/25423c5864b09d73c6b3e8dfb0900e5de71b78ee", "html_url": "https://github.com/dotnet/codeformatter/commit/25423c5864b09d73c6b3e8dfb0900e5de71b78ee", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/25423c5864b09d73c6b3e8dfb0900e5de71b78ee/comments", "author": null, "committer": null, "parents": [{"sha": "2e946b742cc98f188d874fdc75ad52132bc96c31", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2e946b742cc98f188d874fdc75ad52132bc96c31", "html_url": "https://github.com/dotnet/codeformatter/commit/2e946b742cc98f188d874fdc75ad52132bc96c31"}]}, {"sha": "2e946b742cc98f188d874fdc75ad52132bc96c31", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-02-10T19:26:29Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-02-10T19:26:29Z"}, "message": "Merge pull request #58 from mmitche/ci-badge\n\nAdd CI badge for codeformatter", "tree": {"sha": "410a0af2f42089af5f21f3e79ffb8d0e0e3bd0b1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/410a0af2f42089af5f21f3e79ffb8d0e0e3bd0b1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/2e946b742cc98f188d874fdc75ad52132bc96c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2e946b742cc98f188d874fdc75ad52132bc96c31", "html_url": "https://github.com/dotnet/codeformatter/commit/2e946b742cc98f188d874fdc75ad52132bc96c31", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/2e946b742cc98f188d874fdc75ad52132bc96c31/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68004f5dcaa63bbd29496934d73004b98330ad22", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/68004f5dcaa63bbd29496934d73004b98330ad22", "html_url": "https://github.com/dotnet/codeformatter/commit/68004f5dcaa63bbd29496934d73004b98330ad22"}, {"sha": "c10d79b982caab703937b01da5d2c2689cf73a5d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c10d79b982caab703937b01da5d2c2689cf73a5d", "html_url": "https://github.com/dotnet/codeformatter/commit/c10d79b982caab703937b01da5d2c2689cf73a5d"}]}, {"sha": "c10d79b982caab703937b01da5d2c2689cf73a5d", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-02-10T19:23:38Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-02-10T19:23:38Z"}, "message": "Add CI badge for codeformatter", "tree": {"sha": "410a0af2f42089af5f21f3e79ffb8d0e0e3bd0b1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/410a0af2f42089af5f21f3e79ffb8d0e0e3bd0b1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c10d79b982caab703937b01da5d2c2689cf73a5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c10d79b982caab703937b01da5d2c2689cf73a5d", "html_url": "https://github.com/dotnet/codeformatter/commit/c10d79b982caab703937b01da5d2c2689cf73a5d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c10d79b982caab703937b01da5d2c2689cf73a5d/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68004f5dcaa63bbd29496934d73004b98330ad22", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/68004f5dcaa63bbd29496934d73004b98330ad22", "html_url": "https://github.com/dotnet/codeformatter/commit/68004f5dcaa63bbd29496934d73004b98330ad22"}]}, {"sha": "8b5847befe0cd5b897716667f95927d28d0dcee9", "commit": {"author": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-02-10T19:11:01Z"}, "committer": {"name": "Matt Mitchell", "email": "mmitche@microsoft.com", "date": "2015-02-10T19:11:01Z"}, "message": "Allow for falling back to msbuild 12 if msbuild 14 is not available (will build but not run)", "tree": {"sha": "17dfb75bffe16b375f6f1b466d757f7307dd4bdb", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/17dfb75bffe16b375f6f1b466d757f7307dd4bdb"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8b5847befe0cd5b897716667f95927d28d0dcee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8b5847befe0cd5b897716667f95927d28d0dcee9", "html_url": "https://github.com/dotnet/codeformatter/commit/8b5847befe0cd5b897716667f95927d28d0dcee9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8b5847befe0cd5b897716667f95927d28d0dcee9/comments", "author": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68004f5dcaa63bbd29496934d73004b98330ad22", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/68004f5dcaa63bbd29496934d73004b98330ad22", "html_url": "https://github.com/dotnet/codeformatter/commit/68004f5dcaa63bbd29496934d73004b98330ad22"}]}, {"sha": "68004f5dcaa63bbd29496934d73004b98330ad22", "commit": {"author": {"name": "Immo Landwerth", "email": "immo@landwerth.net", "date": "2015-02-08T07:14:50Z"}, "committer": {"name": "Immo Landwerth", "email": "immo@landwerth.net", "date": "2015-02-08T07:14:50Z"}, "message": "Merge pull request #51 from dotnet/terrajobst/detect-missing-dev14\n\nAdd error handling do detect when MSBuild 14 is missing", "tree": {"sha": "d9e6ec84bc8068138b4039a067c1e2e1c4549b4e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d9e6ec84bc8068138b4039a067c1e2e1c4549b4e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/68004f5dcaa63bbd29496934d73004b98330ad22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/68004f5dcaa63bbd29496934d73004b98330ad22", "html_url": "https://github.com/dotnet/codeformatter/commit/68004f5dcaa63bbd29496934d73004b98330ad22", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/68004f5dcaa63bbd29496934d73004b98330ad22/comments", "author": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "788eabcff0de811ee58cd6ad44bfc0bbff0430d0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/788eabcff0de811ee58cd6ad44bfc0bbff0430d0", "html_url": "https://github.com/dotnet/codeformatter/commit/788eabcff0de811ee58cd6ad44bfc0bbff0430d0"}, {"sha": "ab60dbb2ec1c11805ff05b77b19198c6d4896395", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ab60dbb2ec1c11805ff05b77b19198c6d4896395", "html_url": "https://github.com/dotnet/codeformatter/commit/ab60dbb2ec1c11805ff05b77b19198c6d4896395"}]}, {"sha": "788eabcff0de811ee58cd6ad44bfc0bbff0430d0", "commit": {"author": {"name": "Immo Landwerth", "email": "immo@landwerth.net", "date": "2015-02-08T07:14:26Z"}, "committer": {"name": "Immo Landwerth", "email": "immo@landwerth.net", "date": "2015-02-08T07:14:26Z"}, "message": "Merge pull request #50 from dotnet/terrajobst/cleanup-batch-file\n\nCleanup batch file", "tree": {"sha": "ad9a9132c53306c568a63355c1d80366d073aec3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ad9a9132c53306c568a63355c1d80366d073aec3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/788eabcff0de811ee58cd6ad44bfc0bbff0430d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/788eabcff0de811ee58cd6ad44bfc0bbff0430d0", "html_url": "https://github.com/dotnet/codeformatter/commit/788eabcff0de811ee58cd6ad44bfc0bbff0430d0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/788eabcff0de811ee58cd6ad44bfc0bbff0430d0/comments", "author": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a14d18f058c1a35ef38af85c9fa82f5732447fa1", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a14d18f058c1a35ef38af85c9fa82f5732447fa1", "html_url": "https://github.com/dotnet/codeformatter/commit/a14d18f058c1a35ef38af85c9fa82f5732447fa1"}, {"sha": "ef4e5ef46b8f3d0b5c74a3b38fb483518da9579f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ef4e5ef46b8f3d0b5c74a3b38fb483518da9579f", "html_url": "https://github.com/dotnet/codeformatter/commit/ef4e5ef46b8f3d0b5c74a3b38fb483518da9579f"}]}, {"sha": "ef4e5ef46b8f3d0b5c74a3b38fb483518da9579f", "commit": {"author": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:30:52Z"}, "committer": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:36:34Z"}, "message": "Beatify output of the download URL", "tree": {"sha": "ad9a9132c53306c568a63355c1d80366d073aec3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ad9a9132c53306c568a63355c1d80366d073aec3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ef4e5ef46b8f3d0b5c74a3b38fb483518da9579f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ef4e5ef46b8f3d0b5c74a3b38fb483518da9579f", "html_url": "https://github.com/dotnet/codeformatter/commit/ef4e5ef46b8f3d0b5c74a3b38fb483518da9579f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ef4e5ef46b8f3d0b5c74a3b38fb483518da9579f/comments", "author": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ac1349c3f49895b3e2053ba302fa970c40db2e2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8ac1349c3f49895b3e2053ba302fa970c40db2e2", "html_url": "https://github.com/dotnet/codeformatter/commit/8ac1349c3f49895b3e2053ba302fa970c40db2e2"}]}, {"sha": "8ac1349c3f49895b3e2053ba302fa970c40db2e2", "commit": {"author": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:34:10Z"}, "committer": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:36:33Z"}, "message": "Remove 'Preview' qualifier from VS and MSBuild\n\nFirstly, they don't add much and secondly, we'll have to remove them\neventually anyways.", "tree": {"sha": "ebd3d87ded5853a8041f673f778503c780bc1a39", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ebd3d87ded5853a8041f673f778503c780bc1a39"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8ac1349c3f49895b3e2053ba302fa970c40db2e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8ac1349c3f49895b3e2053ba302fa970c40db2e2", "html_url": "https://github.com/dotnet/codeformatter/commit/8ac1349c3f49895b3e2053ba302fa970c40db2e2", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8ac1349c3f49895b3e2053ba302fa970c40db2e2/comments", "author": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2f3854af107c563bb706a66270a3ec5b6466273", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c2f3854af107c563bb706a66270a3ec5b6466273", "html_url": "https://github.com/dotnet/codeformatter/commit/c2f3854af107c563bb706a66270a3ec5b6466273"}]}, {"sha": "c2f3854af107c563bb706a66270a3ec5b6466273", "commit": {"author": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:29:57Z"}, "committer": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:29:57Z"}, "message": "Reuse path already captured in a variable", "tree": {"sha": "5f79f4626e1e2dc87c8fa3fb16547791fead3768", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5f79f4626e1e2dc87c8fa3fb16547791fead3768"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c2f3854af107c563bb706a66270a3ec5b6466273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c2f3854af107c563bb706a66270a3ec5b6466273", "html_url": "https://github.com/dotnet/codeformatter/commit/c2f3854af107c563bb706a66270a3ec5b6466273", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c2f3854af107c563bb706a66270a3ec5b6466273/comments", "author": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b41a1dd77a5a1c3857f231a54290039fc4cb0ec", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0b41a1dd77a5a1c3857f231a54290039fc4cb0ec", "html_url": "https://github.com/dotnet/codeformatter/commit/0b41a1dd77a5a1c3857f231a54290039fc4cb0ec"}]}, {"sha": "0b41a1dd77a5a1c3857f231a54290039fc4cb0ec", "commit": {"author": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:27:08Z"}, "committer": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:27:08Z"}, "message": "Rename variable to not include the VS version\n\nThis minimizes the number of changes when the tool has to target a\nhigher version of Visual Studio. Besides, it doesn't actually point\nto Visual Studio per-se.", "tree": {"sha": "17afbf73b78634074a04fb183d9229fe8599a50c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/17afbf73b78634074a04fb183d9229fe8599a50c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/0b41a1dd77a5a1c3857f231a54290039fc4cb0ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0b41a1dd77a5a1c3857f231a54290039fc4cb0ec", "html_url": "https://github.com/dotnet/codeformatter/commit/0b41a1dd77a5a1c3857f231a54290039fc4cb0ec", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/0b41a1dd77a5a1c3857f231a54290039fc4cb0ec/comments", "author": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a14d18f058c1a35ef38af85c9fa82f5732447fa1", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a14d18f058c1a35ef38af85c9fa82f5732447fa1", "html_url": "https://github.com/dotnet/codeformatter/commit/a14d18f058c1a35ef38af85c9fa82f5732447fa1"}]}, {"sha": "ab60dbb2ec1c11805ff05b77b19198c6d4896395", "commit": {"author": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:20:17Z"}, "committer": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-08T05:20:17Z"}, "message": "Add error handling do detect when MSBuild 14 is missing\n\nThe code formatter currently just crashes with a type load exception\nif the MSBuild 14 is missing. Instead, it's better to detect this\ncase and provide an actionable error message.", "tree": {"sha": "83d40f0b90b7cf6b66a9bd67f794a86bfa95d53d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/83d40f0b90b7cf6b66a9bd67f794a86bfa95d53d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ab60dbb2ec1c11805ff05b77b19198c6d4896395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ab60dbb2ec1c11805ff05b77b19198c6d4896395", "html_url": "https://github.com/dotnet/codeformatter/commit/ab60dbb2ec1c11805ff05b77b19198c6d4896395", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ab60dbb2ec1c11805ff05b77b19198c6d4896395/comments", "author": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a14d18f058c1a35ef38af85c9fa82f5732447fa1", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a14d18f058c1a35ef38af85c9fa82f5732447fa1", "html_url": "https://github.com/dotnet/codeformatter/commit/a14d18f058c1a35ef38af85c9fa82f5732447fa1"}]}, {"sha": "a14d18f058c1a35ef38af85c9fa82f5732447fa1", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-07T00:37:27Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-07T00:37:27Z"}, "message": "Updated the link to not end with a ')'", "tree": {"sha": "527faf2d0256ffedebddb4359dcf0eb8f82a5901", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/527faf2d0256ffedebddb4359dcf0eb8f82a5901"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a14d18f058c1a35ef38af85c9fa82f5732447fa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a14d18f058c1a35ef38af85c9fa82f5732447fa1", "html_url": "https://github.com/dotnet/codeformatter/commit/a14d18f058c1a35ef38af85c9fa82f5732447fa1", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a14d18f058c1a35ef38af85c9fa82f5732447fa1/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1d2a9230f3e87d6fc2350d1ddfc34528051b205", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a1d2a9230f3e87d6fc2350d1ddfc34528051b205", "html_url": "https://github.com/dotnet/codeformatter/commit/a1d2a9230f3e87d6fc2350d1ddfc34528051b205"}]}, {"sha": "a1d2a9230f3e87d6fc2350d1ddfc34528051b205", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-06T18:00:35Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-06T18:00:35Z"}, "message": "Ensure Sys.Col.Immutable copied to output\n\nThe code formatter depends on System.Collections.Immutable at runtime to\noperate.  This is a value which is not guaranteed to be in the GAC and\nhence must be deployed with the tool to ensure it runs correctly.\n\nThe easiest way to do this is to ensure it is a part of the build\noutput.  That way the output directory can be zipped up and deployed\nwithout the need for custom actions.\n\nUnfortunately other tools installed on developers machines were putting\nthe exact version of System.Collections.Immutable used by the tool into\nthe GAC.  This caused the MSBuild logic to fail to copy the reference to\nthe output even if you specified CopyLocal=true.  Making it Private=true\noverrides even the GAC exception and the DLL does get copied.\n\ncloses #45", "tree": {"sha": "80b1c4b46aeea78b1dddccfeb05aaa3a4b39572b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/80b1c4b46aeea78b1dddccfeb05aaa3a4b39572b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a1d2a9230f3e87d6fc2350d1ddfc34528051b205", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a1d2a9230f3e87d6fc2350d1ddfc34528051b205", "html_url": "https://github.com/dotnet/codeformatter/commit/a1d2a9230f3e87d6fc2350d1ddfc34528051b205", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a1d2a9230f3e87d6fc2350d1ddfc34528051b205/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59482681c544e6890f077fb89f1bd56bb7486796", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/59482681c544e6890f077fb89f1bd56bb7486796", "html_url": "https://github.com/dotnet/codeformatter/commit/59482681c544e6890f077fb89f1bd56bb7486796"}]}, {"sha": "59482681c544e6890f077fb89f1bd56bb7486796", "commit": {"author": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-03T16:45:32Z"}, "committer": {"name": "Immo Landwerth", "email": "immol@microsoft.com", "date": "2015-02-03T16:46:12Z"}, "message": "Fix missing semicolon", "tree": {"sha": "e7006b13d543069c412218ff2f211ee628ae352b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e7006b13d543069c412218ff2f211ee628ae352b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/59482681c544e6890f077fb89f1bd56bb7486796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/59482681c544e6890f077fb89f1bd56bb7486796", "html_url": "https://github.com/dotnet/codeformatter/commit/59482681c544e6890f077fb89f1bd56bb7486796", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/59482681c544e6890f077fb89f1bd56bb7486796/comments", "author": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b57e3097bc47d73aa27baae5669ac1e60096d09a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b57e3097bc47d73aa27baae5669ac1e60096d09a", "html_url": "https://github.com/dotnet/codeformatter/commit/b57e3097bc47d73aa27baae5669ac1e60096d09a"}]}, {"sha": "b57e3097bc47d73aa27baae5669ac1e60096d09a", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-03T15:45:06Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-02-03T15:45:06Z"}, "message": "Merge pull request #47 from jaredpar/fixes\n\nSeveral fixes", "tree": {"sha": "6d9408e2903e6d364edb4d699ed055b1a2984a36", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6d9408e2903e6d364edb4d699ed055b1a2984a36"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b57e3097bc47d73aa27baae5669ac1e60096d09a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b57e3097bc47d73aa27baae5669ac1e60096d09a", "html_url": "https://github.com/dotnet/codeformatter/commit/b57e3097bc47d73aa27baae5669ac1e60096d09a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b57e3097bc47d73aa27baae5669ac1e60096d09a/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359", "html_url": "https://github.com/dotnet/codeformatter/commit/3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359"}, {"sha": "031b25212dd052e8744f5fd651c5de59e668aca5", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/031b25212dd052e8744f5fd651c5de59e668aca5", "html_url": "https://github.com/dotnet/codeformatter/commit/031b25212dd052e8744f5fd651c5de59e668aca5"}]}, {"sha": "031b25212dd052e8744f5fd651c5de59e668aca5", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-03T15:43:44Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-03T15:43:44Z"}, "message": "Update documentation for new switches\n\nUpdates both the detailed help and the README.md for the new switches.", "tree": {"sha": "6d9408e2903e6d364edb4d699ed055b1a2984a36", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/6d9408e2903e6d364edb4d699ed055b1a2984a36"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/031b25212dd052e8744f5fd651c5de59e668aca5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/031b25212dd052e8744f5fd651c5de59e668aca5", "html_url": "https://github.com/dotnet/codeformatter/commit/031b25212dd052e8744f5fd651c5de59e668aca5", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/031b25212dd052e8744f5fd651c5de59e668aca5/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65deca74bb0ad22bff81fca5251c7a6f4ca09d83", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/65deca74bb0ad22bff81fca5251c7a6f4ca09d83", "html_url": "https://github.com/dotnet/codeformatter/commit/65deca74bb0ad22bff81fca5251c7a6f4ca09d83"}]}, {"sha": "65deca74bb0ad22bff81fca5251c7a6f4ca09d83", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T17:20:28Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T17:20:28Z"}, "message": "Remove simplification rule\n\nThis rule was not currently running due to the performance implications and unexpected churn.  Additionally it was attempting to simplify all constructs vs. just those which are called out in the coding guidelines.  Remove it in favor of going forward with ExplicitThisRule which is essentially a targetted version of this rule.", "tree": {"sha": "ea055baf770adefeb8bb0db90e4a7f09b0474b31", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ea055baf770adefeb8bb0db90e4a7f09b0474b31"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/65deca74bb0ad22bff81fca5251c7a6f4ca09d83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/65deca74bb0ad22bff81fca5251c7a6f4ca09d83", "html_url": "https://github.com/dotnet/codeformatter/commit/65deca74bb0ad22bff81fca5251c7a6f4ca09d83", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/65deca74bb0ad22bff81fca5251c7a6f4ca09d83/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56176b4013a6584b1c0567e012b5d122d1d51881", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/56176b4013a6584b1c0567e012b5d122d1d51881", "html_url": "https://github.com/dotnet/codeformatter/commit/56176b4013a6584b1c0567e012b5d122d1d51881"}]}, {"sha": "56176b4013a6584b1c0567e012b5d122d1d51881", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T17:03:39Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T17:03:39Z"}, "message": "Cleaned up some unnecessary public declarations", "tree": {"sha": "4d52386a546e87d15a67aee9783702a6749f56da", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4d52386a546e87d15a67aee9783702a6749f56da"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/56176b4013a6584b1c0567e012b5d122d1d51881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/56176b4013a6584b1c0567e012b5d122d1d51881", "html_url": "https://github.com/dotnet/codeformatter/commit/56176b4013a6584b1c0567e012b5d122d1d51881", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/56176b4013a6584b1c0567e012b5d122d1d51881/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b6afc95f94dac10fa02f1408bf5b6a67c902f78", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b6afc95f94dac10fa02f1408bf5b6a67c902f78", "html_url": "https://github.com/dotnet/codeformatter/commit/3b6afc95f94dac10fa02f1408bf5b6a67c902f78"}]}, {"sha": "3b6afc95f94dac10fa02f1408bf5b6a67c902f78", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:58:09Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:58:09Z"}, "message": "Copyright can now be specified on command line\n\nThe copyright text can now be specified on the command line by passing\nin a file path that contains the relevant text.", "tree": {"sha": "eb50b929fa9f0b07ef9591f5d07fcc91a7f6c6df", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/eb50b929fa9f0b07ef9591f5d07fcc91a7f6c6df"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3b6afc95f94dac10fa02f1408bf5b6a67c902f78", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b6afc95f94dac10fa02f1408bf5b6a67c902f78", "html_url": "https://github.com/dotnet/codeformatter/commit/3b6afc95f94dac10fa02f1408bf5b6a67c902f78", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3b6afc95f94dac10fa02f1408bf5b6a67c902f78/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a390bb643f90308a8a4e20535a17e1f2968f56be", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a390bb643f90308a8a4e20535a17e1f2968f56be", "html_url": "https://github.com/dotnet/codeformatter/commit/a390bb643f90308a8a4e20535a17e1f2968f56be"}]}, {"sha": "a390bb643f90308a8a4e20535a17e1f2968f56be", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:48:34Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:48:34Z"}, "message": "Fixed up command line handling\n\nChange makes a couple of small updates:\n\n1. Standardized the command line argument handling to be /option:data\nvs. /option data.  I chose the colon version because it seemed more\nconsistent with other .Net tools out there.  I don't have a strong\nopinion here though.\n\n2. Changed FilenameFilter to go through Options vs. custom handling the\ncommand line argument.", "tree": {"sha": "98b488da770692e847c2c798948ef93e75e383b9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/98b488da770692e847c2c798948ef93e75e383b9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a390bb643f90308a8a4e20535a17e1f2968f56be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a390bb643f90308a8a4e20535a17e1f2968f56be", "html_url": "https://github.com/dotnet/codeformatter/commit/a390bb643f90308a8a4e20535a17e1f2968f56be", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a390bb643f90308a8a4e20535a17e1f2968f56be/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20595c9c8e11deb560039ec09f9edebd231fc03b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/20595c9c8e11deb560039ec09f9edebd231fc03b", "html_url": "https://github.com/dotnet/codeformatter/commit/20595c9c8e11deb560039ec09f9edebd231fc03b"}]}, {"sha": "20595c9c8e11deb560039ec09f9edebd231fc03b", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:22:15Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:22:15Z"}, "message": "Ignore .Generated.cs files", "tree": {"sha": "4b865195be7dde141854129c9fa073b27da3aae7", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4b865195be7dde141854129c9fa073b27da3aae7"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/20595c9c8e11deb560039ec09f9edebd231fc03b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/20595c9c8e11deb560039ec09f9edebd231fc03b", "html_url": "https://github.com/dotnet/codeformatter/commit/20595c9c8e11deb560039ec09f9edebd231fc03b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/20595c9c8e11deb560039ec09f9edebd231fc03b/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb5fa0745b3974d12b5a77385e65e685e129ae7", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4bb5fa0745b3974d12b5a77385e65e685e129ae7", "html_url": "https://github.com/dotnet/codeformatter/commit/4bb5fa0745b3974d12b5a77385e65e685e129ae7"}]}, {"sha": "4bb5fa0745b3974d12b5a77385e65e685e129ae7", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:15:22Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:15:22Z"}, "message": "Minor shifting around of code", "tree": {"sha": "80f0bc9a00d170d7fcb511283fa38f5c8030dedc", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/80f0bc9a00d170d7fcb511283fa38f5c8030dedc"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/4bb5fa0745b3974d12b5a77385e65e685e129ae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4bb5fa0745b3974d12b5a77385e65e685e129ae7", "html_url": "https://github.com/dotnet/codeformatter/commit/4bb5fa0745b3974d12b5a77385e65e685e129ae7", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/4bb5fa0745b3974d12b5a77385e65e685e129ae7/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0348399696e42b719762315575ec13d3200080e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b0348399696e42b719762315575ec13d3200080e", "html_url": "https://github.com/dotnet/codeformatter/commit/b0348399696e42b719762315575ec13d3200080e"}]}, {"sha": "b0348399696e42b719762315575ec13d3200080e", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:06:53Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-02-02T16:06:53Z"}, "message": "Do not add modifiers to partial methods\n\nPartial methods cannot have explicit modifiers, they are implicitly\nprivate.\n\ncloses #46", "tree": {"sha": "f4ceb61841b9422d95459d23934bb07cf957f22b", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/f4ceb61841b9422d95459d23934bb07cf957f22b"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b0348399696e42b719762315575ec13d3200080e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b0348399696e42b719762315575ec13d3200080e", "html_url": "https://github.com/dotnet/codeformatter/commit/b0348399696e42b719762315575ec13d3200080e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b0348399696e42b719762315575ec13d3200080e/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359", "html_url": "https://github.com/dotnet/codeformatter/commit/3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359"}]}, {"sha": "3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-27T15:13:52Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-27T15:13:52Z"}, "message": "Merge pull request #43 from jaredpar/bug-fixes\n\nBug fixes", "tree": {"sha": "4be715b60370efc0129728957c636d8b8405866d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4be715b60370efc0129728957c636d8b8405866d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359", "html_url": "https://github.com/dotnet/codeformatter/commit/3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/3c16dd4fa05160fe6566ab6ef9c9ee7ef47c0359/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff", "html_url": "https://github.com/dotnet/codeformatter/commit/2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff"}, {"sha": "04865163ddce02360623a8bbf1529f4df806ad03", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/04865163ddce02360623a8bbf1529f4df806ad03", "html_url": "https://github.com/dotnet/codeformatter/commit/04865163ddce02360623a8bbf1529f4df806ad03"}]}, {"sha": "04865163ddce02360623a8bbf1529f4df806ad03", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-27T15:13:13Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-27T15:13:13Z"}, "message": "Merge remote-tracking branch 'upstream/master' into bug-fixes\n\nConflicts:\n\tsrc/CodeFormatter/Program.cs\n\tsrc/Microsoft.DotNet.CodeFormatting/IFormattingEngine.cs", "tree": {"sha": "4be715b60370efc0129728957c636d8b8405866d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4be715b60370efc0129728957c636d8b8405866d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/04865163ddce02360623a8bbf1529f4df806ad03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/04865163ddce02360623a8bbf1529f4df806ad03", "html_url": "https://github.com/dotnet/codeformatter/commit/04865163ddce02360623a8bbf1529f4df806ad03", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/04865163ddce02360623a8bbf1529f4df806ad03/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a68c4f5a81e931fd1dbd00a47f259291e1633539", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a68c4f5a81e931fd1dbd00a47f259291e1633539", "html_url": "https://github.com/dotnet/codeformatter/commit/a68c4f5a81e931fd1dbd00a47f259291e1633539"}, {"sha": "2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff", "html_url": "https://github.com/dotnet/codeformatter/commit/2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff"}]}, {"sha": "a68c4f5a81e931fd1dbd00a47f259291e1633539", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-27T00:09:49Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-27T00:09:49Z"}, "message": "Fix a small bug in the filtering", "tree": {"sha": "8440c36d651df3b62ecac3e1f6ca0d5ab5a90133", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8440c36d651df3b62ecac3e1f6ca0d5ab5a90133"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a68c4f5a81e931fd1dbd00a47f259291e1633539", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a68c4f5a81e931fd1dbd00a47f259291e1633539", "html_url": "https://github.com/dotnet/codeformatter/commit/a68c4f5a81e931fd1dbd00a47f259291e1633539", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a68c4f5a81e931fd1dbd00a47f259291e1633539/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3026e8750949fc7c97b26452010a98ec855522f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c3026e8750949fc7c97b26452010a98ec855522f", "html_url": "https://github.com/dotnet/codeformatter/commit/c3026e8750949fc7c97b26452010a98ec855522f"}]}, {"sha": "2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff", "commit": {"author": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-01-26T20:19:52Z"}, "committer": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-01-26T20:19:52Z"}, "message": "Merge pull request #44 from ellismg/disable-verbatim-string-rewriter\n\nDisable NonAsciiCharacter Rule on verbatim strings", "tree": {"sha": "e9db09d43a7da496b003ddf15cd4cc0a6389ceec", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e9db09d43a7da496b003ddf15cd4cc0a6389ceec"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff", "html_url": "https://github.com/dotnet/codeformatter/commit/2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/2d4a7e266a50d7a07ec7c7d15d0c058ba00399ff/comments", "author": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7627a4e0b81ca9b51ae92256ad6ca906d41db3e", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b7627a4e0b81ca9b51ae92256ad6ca906d41db3e", "html_url": "https://github.com/dotnet/codeformatter/commit/b7627a4e0b81ca9b51ae92256ad6ca906d41db3e"}, {"sha": "9ed44d44cf8fc7508be12ffdfd72fac704c4b81b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9ed44d44cf8fc7508be12ffdfd72fac704c4b81b", "html_url": "https://github.com/dotnet/codeformatter/commit/9ed44d44cf8fc7508be12ffdfd72fac704c4b81b"}]}, {"sha": "9ed44d44cf8fc7508be12ffdfd72fac704c4b81b", "commit": {"author": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-01-26T19:58:39Z"}, "committer": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-01-26T19:58:39Z"}, "message": "Disable NonAsciiCharacter Rule on verbatim strings\n\nThe rewriting logic we have for verbatim strings is incorrect, since\nyou can not use Unicode excape sequences inside them.  Issue 39 tracks\nthe correct fix, but for now, we'll just disable the rule on these sorts\nof strings.", "tree": {"sha": "ca68442a08ac5a93233f812f9d275244c6437b36", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ca68442a08ac5a93233f812f9d275244c6437b36"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/9ed44d44cf8fc7508be12ffdfd72fac704c4b81b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9ed44d44cf8fc7508be12ffdfd72fac704c4b81b", "html_url": "https://github.com/dotnet/codeformatter/commit/9ed44d44cf8fc7508be12ffdfd72fac704c4b81b", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/9ed44d44cf8fc7508be12ffdfd72fac704c4b81b/comments", "author": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d24b9eecbcf9a41d5e44715ed24078f9cffef641", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d24b9eecbcf9a41d5e44715ed24078f9cffef641", "html_url": "https://github.com/dotnet/codeformatter/commit/d24b9eecbcf9a41d5e44715ed24078f9cffef641"}]}, {"sha": "b7627a4e0b81ca9b51ae92256ad6ca906d41db3e", "commit": {"author": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2015-01-26T19:43:17Z"}, "committer": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2015-01-26T19:43:17Z"}, "message": "Merge pull request #42 from dotnet/cleanconsole\n\nClean Console messages.", "tree": {"sha": "a18f98f50b1abe35d3b969694d77f2abb44eba88", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a18f98f50b1abe35d3b969694d77f2abb44eba88"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b7627a4e0b81ca9b51ae92256ad6ca906d41db3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b7627a4e0b81ca9b51ae92256ad6ca906d41db3e", "html_url": "https://github.com/dotnet/codeformatter/commit/b7627a4e0b81ca9b51ae92256ad6ca906d41db3e", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b7627a4e0b81ca9b51ae92256ad6ca906d41db3e/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7570f075db8a89540edb3eb4fc56351be500fe34", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7570f075db8a89540edb3eb4fc56351be500fe34", "html_url": "https://github.com/dotnet/codeformatter/commit/7570f075db8a89540edb3eb4fc56351be500fe34"}, {"sha": "909437ea50bed0903d892c9b8c49e5d032036a1c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/909437ea50bed0903d892c9b8c49e5d032036a1c", "html_url": "https://github.com/dotnet/codeformatter/commit/909437ea50bed0903d892c9b8c49e5d032036a1c"}]}, {"sha": "909437ea50bed0903d892c9b8c49e5d032036a1c", "commit": {"author": {"name": "Lakshmi Priya Sekar", "email": "lasekar@microsoft.com", "date": "2015-01-26T19:42:36Z"}, "committer": {"name": "Lakshmi Priya Sekar", "email": "lasekar@microsoft.com", "date": "2015-01-26T19:42:36Z"}, "message": "Remove verbose flag", "tree": {"sha": "a18f98f50b1abe35d3b969694d77f2abb44eba88", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/a18f98f50b1abe35d3b969694d77f2abb44eba88"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/909437ea50bed0903d892c9b8c49e5d032036a1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/909437ea50bed0903d892c9b8c49e5d032036a1c", "html_url": "https://github.com/dotnet/codeformatter/commit/909437ea50bed0903d892c9b8c49e5d032036a1c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/909437ea50bed0903d892c9b8c49e5d032036a1c/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c52f32be924bf2bba48af979385cbac9da50c6f0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c52f32be924bf2bba48af979385cbac9da50c6f0", "html_url": "https://github.com/dotnet/codeformatter/commit/c52f32be924bf2bba48af979385cbac9da50c6f0"}]}, {"sha": "c3026e8750949fc7c97b26452010a98ec855522f", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-26T14:55:51Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-26T14:55:51Z"}, "message": "Add method to exempt code from formatting\n\nThis change adds the preprocessor symbol DOTNET_FORMATTER to every\nproject in the formatted Solution.  This allows developers to exempt\ncode from formatting by surrounding blocks with\n\n``` csharp\n#if !DOTNET_FORMATTER\n```\n\nThis should only be done on the rare occasions where insignificant white\nspace serves to make the code significantly more readable.  For example\nin large unicode tables.  In general this feature should be avoided.\n\ncloses #37", "tree": {"sha": "5ee37861957d9a05f74ba87b526b756e629b3fb9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5ee37861957d9a05f74ba87b526b756e629b3fb9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c3026e8750949fc7c97b26452010a98ec855522f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c3026e8750949fc7c97b26452010a98ec855522f", "html_url": "https://github.com/dotnet/codeformatter/commit/c3026e8750949fc7c97b26452010a98ec855522f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c3026e8750949fc7c97b26452010a98ec855522f/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84f48477aace9df0adfaa446d89bc0ef516ae4f7", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/84f48477aace9df0adfaa446d89bc0ef516ae4f7", "html_url": "https://github.com/dotnet/codeformatter/commit/84f48477aace9df0adfaa446d89bc0ef516ae4f7"}]}, {"sha": "84f48477aace9df0adfaa446d89bc0ef516ae4f7", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-26T14:17:27Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-26T14:17:27Z"}, "message": "Moved file checks to a filter\n\nMoved the checks for the existance of the file and having a non-readonly\nnature to an actual IFormattingFilter instance.", "tree": {"sha": "8ed17ee40bc76ee7579fac1b43f1ec31570415ea", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8ed17ee40bc76ee7579fac1b43f1ec31570415ea"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/84f48477aace9df0adfaa446d89bc0ef516ae4f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/84f48477aace9df0adfaa446d89bc0ef516ae4f7", "html_url": "https://github.com/dotnet/codeformatter/commit/84f48477aace9df0adfaa446d89bc0ef516ae4f7", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/84f48477aace9df0adfaa446d89bc0ef516ae4f7/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9e9ab11bb72780c5f71c5308d009140956ebd9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ed9e9ab11bb72780c5f71c5308d009140956ebd9", "html_url": "https://github.com/dotnet/codeformatter/commit/ed9e9ab11bb72780c5f71c5308d009140956ebd9"}]}, {"sha": "ed9e9ab11bb72780c5f71c5308d009140956ebd9", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-26T14:14:17Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-26T14:14:17Z"}, "message": "Made IFormattingFilter sync\n\nWhile plumbing through a CancellationToken I noticed that\nIFormattingFilter had no async implementations.  Made it sync until an\nactual async version is needed.", "tree": {"sha": "494ec7062901480e37ea9f5de761a0246ee45f2e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/494ec7062901480e37ea9f5de761a0246ee45f2e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ed9e9ab11bb72780c5f71c5308d009140956ebd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ed9e9ab11bb72780c5f71c5308d009140956ebd9", "html_url": "https://github.com/dotnet/codeformatter/commit/ed9e9ab11bb72780c5f71c5308d009140956ebd9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ed9e9ab11bb72780c5f71c5308d009140956ebd9/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "820c0313369c5fc578b13286bfc8bfbb7c7c2208", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/820c0313369c5fc578b13286bfc8bfbb7c7c2208", "html_url": "https://github.com/dotnet/codeformatter/commit/820c0313369c5fc578b13286bfc8bfbb7c7c2208"}]}, {"sha": "820c0313369c5fc578b13286bfc8bfbb7c7c2208", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-25T19:16:02Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-25T19:16:02Z"}, "message": "Keep newline before comment close brace\n\nConsider the following code:\n\n``` csharp\nvoid M()\n{\nG();\n\n// Comment\n}\n```\n\nThe new line between G() and the comment is meaningful and should be\nkept by the tool.  This change fixes that and a couple of subtle issues\naround white spaces and new lines.\n\ncloses #36", "tree": {"sha": "3cc0a70c0dac63ec8e1f513e8d2316c87ac60375", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3cc0a70c0dac63ec8e1f513e8d2316c87ac60375"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/820c0313369c5fc578b13286bfc8bfbb7c7c2208", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/820c0313369c5fc578b13286bfc8bfbb7c7c2208", "html_url": "https://github.com/dotnet/codeformatter/commit/820c0313369c5fc578b13286bfc8bfbb7c7c2208", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/820c0313369c5fc578b13286bfc8bfbb7c7c2208/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "280a9c4b82f9fb353ead423b657ba7a69cb867e4", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/280a9c4b82f9fb353ead423b657ba7a69cb867e4", "html_url": "https://github.com/dotnet/codeformatter/commit/280a9c4b82f9fb353ead423b657ba7a69cb867e4"}]}, {"sha": "280a9c4b82f9fb353ead423b657ba7a69cb867e4", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-25T17:30:49Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-25T17:30:49Z"}, "message": "Tests for preprocessor directives\n\nThis adds tests for how we handle preprocessor directives with respect\nto file formatting.\n\ncloses #38", "tree": {"sha": "b5abbe5c68864c200660137d9a959b607ac3d46d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/b5abbe5c68864c200660137d9a959b607ac3d46d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/280a9c4b82f9fb353ead423b657ba7a69cb867e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/280a9c4b82f9fb353ead423b657ba7a69cb867e4", "html_url": "https://github.com/dotnet/codeformatter/commit/280a9c4b82f9fb353ead423b657ba7a69cb867e4", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/280a9c4b82f9fb353ead423b657ba7a69cb867e4/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "875e61134be7f9c81fa00767de6e0d299081f201", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/875e61134be7f9c81fa00767de6e0d299081f201", "html_url": "https://github.com/dotnet/codeformatter/commit/875e61134be7f9c81fa00767de6e0d299081f201"}]}, {"sha": "c52f32be924bf2bba48af979385cbac9da50c6f0", "commit": {"author": {"name": "Lakshmi Priya Sekar", "email": "lasekar@microsoft.com", "date": "2015-01-24T01:28:06Z"}, "committer": {"name": "Lakshmi Priya Sekar", "email": "lasekar@microsoft.com", "date": "2015-01-24T01:28:06Z"}, "message": "Clean Console messages.", "tree": {"sha": "1ce7e440efcff56e18e939818ed185ef3de3b531", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/1ce7e440efcff56e18e939818ed185ef3de3b531"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/c52f32be924bf2bba48af979385cbac9da50c6f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/c52f32be924bf2bba48af979385cbac9da50c6f0", "html_url": "https://github.com/dotnet/codeformatter/commit/c52f32be924bf2bba48af979385cbac9da50c6f0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/c52f32be924bf2bba48af979385cbac9da50c6f0/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7570f075db8a89540edb3eb4fc56351be500fe34", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7570f075db8a89540edb3eb4fc56351be500fe34", "html_url": "https://github.com/dotnet/codeformatter/commit/7570f075db8a89540edb3eb4fc56351be500fe34"}]}, {"sha": "7570f075db8a89540edb3eb4fc56351be500fe34", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-24T00:15:30Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-24T00:15:30Z"}, "message": "Merge pull request #40 from jaredpar/small-fixes\n\nCouple of small fixes", "tree": {"sha": "5555592605322a966360d0764c4d495ed5e4eea6", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5555592605322a966360d0764c4d495ed5e4eea6"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/7570f075db8a89540edb3eb4fc56351be500fe34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7570f075db8a89540edb3eb4fc56351be500fe34", "html_url": "https://github.com/dotnet/codeformatter/commit/7570f075db8a89540edb3eb4fc56351be500fe34", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/7570f075db8a89540edb3eb4fc56351be500fe34/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d24b9eecbcf9a41d5e44715ed24078f9cffef641", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d24b9eecbcf9a41d5e44715ed24078f9cffef641", "html_url": "https://github.com/dotnet/codeformatter/commit/d24b9eecbcf9a41d5e44715ed24078f9cffef641"}, {"sha": "23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "html_url": "https://github.com/dotnet/codeformatter/commit/23e3dca7f7e4ad252464b8174de7c9289e6c6bdb"}]}, {"sha": "875e61134be7f9c81fa00767de6e0d299081f201", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-24T00:13:08Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-24T00:13:08Z"}, "message": "Straw man design for preprocessor directives\n\nThis is a straw man design for the problem being discussed in issue #38.\nEssentially let the developer specify on the command line what\nconfigurations they want the code to be formatted under.  This is much\nsafer than assuming all configurations in the file are valid.", "tree": {"sha": "4bf912ce43a9cbed48665793e075d57e026b6c42", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4bf912ce43a9cbed48665793e075d57e026b6c42"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/875e61134be7f9c81fa00767de6e0d299081f201", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/875e61134be7f9c81fa00767de6e0d299081f201", "html_url": "https://github.com/dotnet/codeformatter/commit/875e61134be7f9c81fa00767de6e0d299081f201", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/875e61134be7f9c81fa00767de6e0d299081f201/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "html_url": "https://github.com/dotnet/codeformatter/commit/23e3dca7f7e4ad252464b8174de7c9289e6c6bdb"}]}, {"sha": "d24b9eecbcf9a41d5e44715ed24078f9cffef641", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-23T19:41:16Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-23T19:41:16Z"}, "message": "Merge pull request #34 from jaredpar/perf-work\n\nPerformance Work", "tree": {"sha": "516e5bb50d708133ba2bc97ef079cb4779847ef2", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/516e5bb50d708133ba2bc97ef079cb4779847ef2"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d24b9eecbcf9a41d5e44715ed24078f9cffef641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d24b9eecbcf9a41d5e44715ed24078f9cffef641", "html_url": "https://github.com/dotnet/codeformatter/commit/d24b9eecbcf9a41d5e44715ed24078f9cffef641", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d24b9eecbcf9a41d5e44715ed24078f9cffef641/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3864e9d98cdad18a7647fab00af7d40f77a96aa", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f3864e9d98cdad18a7647fab00af7d40f77a96aa", "html_url": "https://github.com/dotnet/codeformatter/commit/f3864e9d98cdad18a7647fab00af7d40f77a96aa"}, {"sha": "98e13fa0b022cd3cf05a85c123f9458500ef7375", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/98e13fa0b022cd3cf05a85c123f9458500ef7375", "html_url": "https://github.com/dotnet/codeformatter/commit/98e13fa0b022cd3cf05a85c123f9458500ef7375"}]}, {"sha": "23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T16:17:38Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T16:17:38Z"}, "message": "Fix casing of renamed fields", "tree": {"sha": "5555592605322a966360d0764c4d495ed5e4eea6", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/5555592605322a966360d0764c4d495ed5e4eea6"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "html_url": "https://github.com/dotnet/codeformatter/commit/23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/23e3dca7f7e4ad252464b8174de7c9289e6c6bdb/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18113de074b0c03deb3631d48917b6e00bd6b716", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/18113de074b0c03deb3631d48917b6e00bd6b716", "html_url": "https://github.com/dotnet/codeformatter/commit/18113de074b0c03deb3631d48917b6e00bd6b716"}]}, {"sha": "18113de074b0c03deb3631d48917b6e00bd6b716", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T16:10:40Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T16:10:40Z"}, "message": "Save with original Encoding\n\nThe Encoding of a file in Roslyn can change as it is rewritten.  Make\nsure to save with the original file encoding.", "tree": {"sha": "cf71d820a5d471b179c2fda7473a47ee65b154ac", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/cf71d820a5d471b179c2fda7473a47ee65b154ac"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/18113de074b0c03deb3631d48917b6e00bd6b716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/18113de074b0c03deb3631d48917b6e00bd6b716", "html_url": "https://github.com/dotnet/codeformatter/commit/18113de074b0c03deb3631d48917b6e00bd6b716", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/18113de074b0c03deb3631d48917b6e00bd6b716/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06a9f9c076cfa1693f2fc4684dda388740a67d1a", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/06a9f9c076cfa1693f2fc4684dda388740a67d1a", "html_url": "https://github.com/dotnet/codeformatter/commit/06a9f9c076cfa1693f2fc4684dda388740a67d1a"}]}, {"sha": "06a9f9c076cfa1693f2fc4684dda388740a67d1a", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T16:07:25Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T16:07:25Z"}, "message": "Command line option to disable the copyright addition", "tree": {"sha": "3a40528fb2ec51c8a8b71a687c1ee828ecc27672", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3a40528fb2ec51c8a8b71a687c1ee828ecc27672"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/06a9f9c076cfa1693f2fc4684dda388740a67d1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/06a9f9c076cfa1693f2fc4684dda388740a67d1a", "html_url": "https://github.com/dotnet/codeformatter/commit/06a9f9c076cfa1693f2fc4684dda388740a67d1a", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/06a9f9c076cfa1693f2fc4684dda388740a67d1a/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98e13fa0b022cd3cf05a85c123f9458500ef7375", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/98e13fa0b022cd3cf05a85c123f9458500ef7375", "html_url": "https://github.com/dotnet/codeformatter/commit/98e13fa0b022cd3cf05a85c123f9458500ef7375"}]}, {"sha": "98e13fa0b022cd3cf05a85c123f9458500ef7375", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T15:16:48Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T15:16:48Z"}, "message": "Abstracted out writing to the console\n\nAdded the IFormatLogger interface to abstract away the direct access to\nthe Console type.  This is a library that can be hosted in a variety of\nenvironments hence it can't write directly to the console.  It needs an\nabstraction the host can use to decide how to display the output.\n\nThis also made the unit test output clean again.", "tree": {"sha": "516e5bb50d708133ba2bc97ef079cb4779847ef2", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/516e5bb50d708133ba2bc97ef079cb4779847ef2"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/98e13fa0b022cd3cf05a85c123f9458500ef7375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/98e13fa0b022cd3cf05a85c123f9458500ef7375", "html_url": "https://github.com/dotnet/codeformatter/commit/98e13fa0b022cd3cf05a85c123f9458500ef7375", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/98e13fa0b022cd3cf05a85c123f9458500ef7375/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00209959e2327abeb6d31de7a47994116774b393", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/00209959e2327abeb6d31de7a47994116774b393", "html_url": "https://github.com/dotnet/codeformatter/commit/00209959e2327abeb6d31de7a47994116774b393"}]}, {"sha": "00209959e2327abeb6d31de7a47994116774b393", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T15:02:30Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T15:02:30Z"}, "message": "Allow copyright header customization\n\nThis change adds internal support for customizing the copyright header\nthe formatter adds.  This still needs to get an official command line\noption but that can be added later.\n\nThe CombinationTests suite now passes again as well.  When the test was\nfirst written the copyright rule was disabled as Roslyn used a different\ncopyright.  When I re-enabled that rule I forgot to run the test and\nhence it ended up in a broken state.", "tree": {"sha": "50dc7007825a6bcf9b1d48e9067ec6cb34257f28", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/50dc7007825a6bcf9b1d48e9067ec6cb34257f28"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/00209959e2327abeb6d31de7a47994116774b393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/00209959e2327abeb6d31de7a47994116774b393", "html_url": "https://github.com/dotnet/codeformatter/commit/00209959e2327abeb6d31de7a47994116774b393", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/00209959e2327abeb6d31de7a47994116774b393/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f9bbb3c43789f4006a9e3741af46709cf7f1f4f", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6f9bbb3c43789f4006a9e3741af46709cf7f1f4f", "html_url": "https://github.com/dotnet/codeformatter/commit/6f9bbb3c43789f4006a9e3741af46709cf7f1f4f"}]}, {"sha": "6f9bbb3c43789f4006a9e3741af46709cf7f1f4f", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T06:04:38Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T06:04:38Z"}, "message": "Add back in the file checks\n\nAdd back in the file existence checks @nslottow added.  These were\naccidentally removed during a merge.", "tree": {"sha": "960d5d773d841e8c80b58953096f34306f03aeba", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/960d5d773d841e8c80b58953096f34306f03aeba"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6f9bbb3c43789f4006a9e3741af46709cf7f1f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6f9bbb3c43789f4006a9e3741af46709cf7f1f4f", "html_url": "https://github.com/dotnet/codeformatter/commit/6f9bbb3c43789f4006a9e3741af46709cf7f1f4f", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6f9bbb3c43789f4006a9e3741af46709cf7f1f4f/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0a07bf96084ff39e8360f1e8dccb5743a134b6d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d0a07bf96084ff39e8360f1e8dccb5743a134b6d", "html_url": "https://github.com/dotnet/codeformatter/commit/d0a07bf96084ff39e8360f1e8dccb5743a134b6d"}]}, {"sha": "d0a07bf96084ff39e8360f1e8dccb5743a134b6d", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T06:00:47Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T06:00:47Z"}, "message": "Merge remote-tracking branch 'origin/master' into perf-work\n\nConflicts:\n\tsrc/Microsoft.DotNet.CodeFormatting/FormattingEngineImplementation.cs", "tree": {"sha": "d91fe2dfd5795edd3bf1285e34c5480ac4abd89d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d91fe2dfd5795edd3bf1285e34c5480ac4abd89d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d0a07bf96084ff39e8360f1e8dccb5743a134b6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d0a07bf96084ff39e8360f1e8dccb5743a134b6d", "html_url": "https://github.com/dotnet/codeformatter/commit/d0a07bf96084ff39e8360f1e8dccb5743a134b6d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d0a07bf96084ff39e8360f1e8dccb5743a134b6d/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcb0f28b693a4cb82c66207659ab84a4348e81e7", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dcb0f28b693a4cb82c66207659ab84a4348e81e7", "html_url": "https://github.com/dotnet/codeformatter/commit/dcb0f28b693a4cb82c66207659ab84a4348e81e7"}, {"sha": "f3864e9d98cdad18a7647fab00af7d40f77a96aa", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f3864e9d98cdad18a7647fab00af7d40f77a96aa", "html_url": "https://github.com/dotnet/codeformatter/commit/f3864e9d98cdad18a7647fab00af7d40f77a96aa"}]}, {"sha": "dcb0f28b693a4cb82c66207659ab84a4348e81e7", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T05:39:02Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T05:39:02Z"}, "message": "Turn copyright rule back on", "tree": {"sha": "9503c1dbf148b413eb1b3b5da1340d1cae0efb17", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/9503c1dbf148b413eb1b3b5da1340d1cae0efb17"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/dcb0f28b693a4cb82c66207659ab84a4348e81e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/dcb0f28b693a4cb82c66207659ab84a4348e81e7", "html_url": "https://github.com/dotnet/codeformatter/commit/dcb0f28b693a4cb82c66207659ab84a4348e81e7", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/dcb0f28b693a4cb82c66207659ab84a4348e81e7/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caf8e50bedb71093f48c41c19e4fa9fc595720e2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/caf8e50bedb71093f48c41c19e4fa9fc595720e2", "html_url": "https://github.com/dotnet/codeformatter/commit/caf8e50bedb71093f48c41c19e4fa9fc595720e2"}]}, {"sha": "caf8e50bedb71093f48c41c19e4fa9fc595720e2", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T05:38:37Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T05:38:37Z"}, "message": "Fix the encoding bug", "tree": {"sha": "523f7c747ab110153ca0ea7207d5cfb09d87156e", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/523f7c747ab110153ca0ea7207d5cfb09d87156e"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/caf8e50bedb71093f48c41c19e4fa9fc595720e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/caf8e50bedb71093f48c41c19e4fa9fc595720e2", "html_url": "https://github.com/dotnet/codeformatter/commit/caf8e50bedb71093f48c41c19e4fa9fc595720e2", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/caf8e50bedb71093f48c41c19e4fa9fc595720e2/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "776d50c4b08a56ad4d93d52a6860f9b48f04a464", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/776d50c4b08a56ad4d93d52a6860f9b48f04a464", "html_url": "https://github.com/dotnet/codeformatter/commit/776d50c4b08a56ad4d93d52a6860f9b48f04a464"}]}, {"sha": "776d50c4b08a56ad4d93d52a6860f9b48f04a464", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T05:11:38Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T05:11:38Z"}, "message": "Added some tests which cover a few end to end sceanrios", "tree": {"sha": "8d19b521ef7e033dbf22c26142681693ae6fd3c2", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8d19b521ef7e033dbf22c26142681693ae6fd3c2"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/776d50c4b08a56ad4d93d52a6860f9b48f04a464", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/776d50c4b08a56ad4d93d52a6860f9b48f04a464", "html_url": "https://github.com/dotnet/codeformatter/commit/776d50c4b08a56ad4d93d52a6860f9b48f04a464", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/776d50c4b08a56ad4d93d52a6860f9b48f04a464/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b3352d6deaaadb20680ea6fcb2d469ec3426efe", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7b3352d6deaaadb20680ea6fcb2d469ec3426efe", "html_url": "https://github.com/dotnet/codeformatter/commit/7b3352d6deaaadb20680ea6fcb2d469ec3426efe"}]}, {"sha": "7b3352d6deaaadb20680ea6fcb2d469ec3426efe", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T04:58:03Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T04:58:03Z"}, "message": "Removed the old IFormattingRule\n\nThis rule is no longer needed now that we have the more specific\nformatting rules in place.", "tree": {"sha": "1c9fc7c6611b28dcb8bd982f1be6c5dd3ec32666", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/1c9fc7c6611b28dcb8bd982f1be6c5dd3ec32666"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/7b3352d6deaaadb20680ea6fcb2d469ec3426efe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7b3352d6deaaadb20680ea6fcb2d469ec3426efe", "html_url": "https://github.com/dotnet/codeformatter/commit/7b3352d6deaaadb20680ea6fcb2d469ec3426efe", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/7b3352d6deaaadb20680ea6fcb2d469ec3426efe/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccb7dbf3a5a47466db1fb4b534bde297c41888df", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ccb7dbf3a5a47466db1fb4b534bde297c41888df", "html_url": "https://github.com/dotnet/codeformatter/commit/ccb7dbf3a5a47466db1fb4b534bde297c41888df"}]}, {"sha": "ccb7dbf3a5a47466db1fb4b534bde297c41888df", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T04:46:49Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T04:46:49Z"}, "message": "Unit tests are passing again", "tree": {"sha": "4fa603e61fbb19a72f8bcecba37b131cf18b091c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4fa603e61fbb19a72f8bcecba37b131cf18b091c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ccb7dbf3a5a47466db1fb4b534bde297c41888df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ccb7dbf3a5a47466db1fb4b534bde297c41888df", "html_url": "https://github.com/dotnet/codeformatter/commit/ccb7dbf3a5a47466db1fb4b534bde297c41888df", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ccb7dbf3a5a47466db1fb4b534bde297c41888df/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e222939946c5d48a0dcad7d4934519af55350392", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e222939946c5d48a0dcad7d4934519af55350392", "html_url": "https://github.com/dotnet/codeformatter/commit/e222939946c5d48a0dcad7d4934519af55350392"}]}, {"sha": "e222939946c5d48a0dcad7d4934519af55350392", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T04:24:22Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T04:24:22Z"}, "message": "Fixed encoding issue\n\nThe encoding for a Document can be null after modification.  In that\ncase just grab the encoding from the original document.\n\nThis seems like a bug.  The code is not explicitly changing the encoding\nhence it shouldn't be changing.  Will followup with Roslyn.", "tree": {"sha": "9fdccde837df2fdc4bc6f0208fa3f694815f1be3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/9fdccde837df2fdc4bc6f0208fa3f694815f1be3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/e222939946c5d48a0dcad7d4934519af55350392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/e222939946c5d48a0dcad7d4934519af55350392", "html_url": "https://github.com/dotnet/codeformatter/commit/e222939946c5d48a0dcad7d4934519af55350392", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/e222939946c5d48a0dcad7d4934519af55350392/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06bcea58dd1ee2f0797265753f8aa049eb7d7c56", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/06bcea58dd1ee2f0797265753f8aa049eb7d7c56", "html_url": "https://github.com/dotnet/codeformatter/commit/06bcea58dd1ee2f0797265753f8aa049eb7d7c56"}]}, {"sha": "06bcea58dd1ee2f0797265753f8aa049eb7d7c56", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T03:19:28Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T03:19:28Z"}, "message": "Cleaned up the output.", "tree": {"sha": "bd6496bd6cc1c269550bb45ea419a7c774bbd57d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/bd6496bd6cc1c269550bb45ea419a7c774bbd57d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/06bcea58dd1ee2f0797265753f8aa049eb7d7c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/06bcea58dd1ee2f0797265753f8aa049eb7d7c56", "html_url": "https://github.com/dotnet/codeformatter/commit/06bcea58dd1ee2f0797265753f8aa049eb7d7c56", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/06bcea58dd1ee2f0797265753f8aa049eb7d7c56/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31530ffca035072e76bd005983a477fa64e67080", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/31530ffca035072e76bd005983a477fa64e67080", "html_url": "https://github.com/dotnet/codeformatter/commit/31530ffca035072e76bd005983a477fa64e67080"}]}, {"sha": "31530ffca035072e76bd005983a477fa64e67080", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T02:10:34Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T02:10:34Z"}, "message": "Basic structure working\n\nThe new code is actually so fast that it is hard to keep up with the\noutput.  It can run very quickly on the CodeAnalysis project now except\nthere is a bug in private field rename.  Need to cleanup the output to\nbe useable again.  Then onto debugging that issue.", "tree": {"sha": "ca0f2d1b69a33abe9424e7c2198c2e82f1b5515f", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/ca0f2d1b69a33abe9424e7c2198c2e82f1b5515f"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/31530ffca035072e76bd005983a477fa64e67080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/31530ffca035072e76bd005983a477fa64e67080", "html_url": "https://github.com/dotnet/codeformatter/commit/31530ffca035072e76bd005983a477fa64e67080", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/31530ffca035072e76bd005983a477fa64e67080/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32a15e1909540ff4bf4dad8ae2b5860309ce58fb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/32a15e1909540ff4bf4dad8ae2b5860309ce58fb", "html_url": "https://github.com/dotnet/codeformatter/commit/32a15e1909540ff4bf4dad8ae2b5860309ce58fb"}]}, {"sha": "32a15e1909540ff4bf4dad8ae2b5860309ce58fb", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T01:55:51Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T01:55:51Z"}, "message": "More changes", "tree": {"sha": "41fa521c0dd53147a6c73745209171452a565ae9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/41fa521c0dd53147a6c73745209171452a565ae9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/32a15e1909540ff4bf4dad8ae2b5860309ce58fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/32a15e1909540ff4bf4dad8ae2b5860309ce58fb", "html_url": "https://github.com/dotnet/codeformatter/commit/32a15e1909540ff4bf4dad8ae2b5860309ce58fb", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/32a15e1909540ff4bf4dad8ae2b5860309ce58fb/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d35b4d34ca38b2134ea3e8e793d4e49b910e0788", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d35b4d34ca38b2134ea3e8e793d4e49b910e0788", "html_url": "https://github.com/dotnet/codeformatter/commit/d35b4d34ca38b2134ea3e8e793d4e49b910e0788"}]}, {"sha": "d35b4d34ca38b2134ea3e8e793d4e49b910e0788", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T01:47:42Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T01:47:42Z"}, "message": "Convert to new rule format", "tree": {"sha": "fb9959341025c5c18b4698b8f729ca91ff9b98c9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/fb9959341025c5c18b4698b8f729ca91ff9b98c9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d35b4d34ca38b2134ea3e8e793d4e49b910e0788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d35b4d34ca38b2134ea3e8e793d4e49b910e0788", "html_url": "https://github.com/dotnet/codeformatter/commit/d35b4d34ca38b2134ea3e8e793d4e49b910e0788", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d35b4d34ca38b2134ea3e8e793d4e49b910e0788/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b09def16f5c0ccbbb481759cc9f90a68d1ea623", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8b09def16f5c0ccbbb481759cc9f90a68d1ea623", "html_url": "https://github.com/dotnet/codeformatter/commit/8b09def16f5c0ccbbb481759cc9f90a68d1ea623"}]}, {"sha": "8b09def16f5c0ccbbb481759cc9f90a68d1ea623", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T01:28:17Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T01:28:17Z"}, "message": "Changed the format engine\n\nThe format engine now uses the new rules and rewriters.", "tree": {"sha": "65c993481e127213ddaf3b42ca12f7eb28835389", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/65c993481e127213ddaf3b42ca12f7eb28835389"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8b09def16f5c0ccbbb481759cc9f90a68d1ea623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8b09def16f5c0ccbbb481759cc9f90a68d1ea623", "html_url": "https://github.com/dotnet/codeformatter/commit/8b09def16f5c0ccbbb481759cc9f90a68d1ea623", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8b09def16f5c0ccbbb481759cc9f90a68d1ea623/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7544f54939ffd3913db5d4c5c594c4856ebb3e70", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7544f54939ffd3913db5d4c5c594c4856ebb3e70", "html_url": "https://github.com/dotnet/codeformatter/commit/7544f54939ffd3913db5d4c5c594c4856ebb3e70"}]}, {"sha": "7544f54939ffd3913db5d4c5c594c4856ebb3e70", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T00:13:40Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-23T00:13:40Z"}, "message": "Some work on the new idea", "tree": {"sha": "dc3926970000b2c8cab59e28f55a277b30125de8", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/dc3926970000b2c8cab59e28f55a277b30125de8"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/7544f54939ffd3913db5d4c5c594c4856ebb3e70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/7544f54939ffd3913db5d4c5c594c4856ebb3e70", "html_url": "https://github.com/dotnet/codeformatter/commit/7544f54939ffd3913db5d4c5c594c4856ebb3e70", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/7544f54939ffd3913db5d4c5c594c4856ebb3e70/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c36943546cea95326db86160f68d7e0fe6280e3", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1c36943546cea95326db86160f68d7e0fe6280e3", "html_url": "https://github.com/dotnet/codeformatter/commit/1c36943546cea95326db86160f68d7e0fe6280e3"}]}, {"sha": "1c36943546cea95326db86160f68d7e0fe6280e3", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T22:02:26Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T22:02:26Z"}, "message": "Fix an issue with usings", "tree": {"sha": "acc57b06ac6480044b21343fdbab6219d18b1525", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/acc57b06ac6480044b21343fdbab6219d18b1525"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/1c36943546cea95326db86160f68d7e0fe6280e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/1c36943546cea95326db86160f68d7e0fe6280e3", "html_url": "https://github.com/dotnet/codeformatter/commit/1c36943546cea95326db86160f68d7e0fe6280e3", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/1c36943546cea95326db86160f68d7e0fe6280e3/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "385ea90dac50ba6dfb5b892022a6e8bb590bb891", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/385ea90dac50ba6dfb5b892022a6e8bb590bb891", "html_url": "https://github.com/dotnet/codeformatter/commit/385ea90dac50ba6dfb5b892022a6e8bb590bb891"}]}, {"sha": "385ea90dac50ba6dfb5b892022a6e8bb590bb891", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T21:22:47Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T21:22:47Z"}, "message": "Fixed exception with partial type with nested types\n\nThe code which queries for other partial members must use the original,\nunmodified, SyntaxNode.  It is the only node which is guaranteed to be\nin the original tree and hence valid for uses with the semantic model.", "tree": {"sha": "0087302bbf2dfb6bb883fc20ae7baef9cff65e7f", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/0087302bbf2dfb6bb883fc20ae7baef9cff65e7f"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/385ea90dac50ba6dfb5b892022a6e8bb590bb891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/385ea90dac50ba6dfb5b892022a6e8bb590bb891", "html_url": "https://github.com/dotnet/codeformatter/commit/385ea90dac50ba6dfb5b892022a6e8bb590bb891", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/385ea90dac50ba6dfb5b892022a6e8bb590bb891/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3fc4aef7231ba64305097b1e0d6186afb2effe0", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f3fc4aef7231ba64305097b1e0d6186afb2effe0", "html_url": "https://github.com/dotnet/codeformatter/commit/f3fc4aef7231ba64305097b1e0d6186afb2effe0"}]}, {"sha": "f3fc4aef7231ba64305097b1e0d6186afb2effe0", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T18:44:56Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T18:44:56Z"}, "message": "More unit tests", "tree": {"sha": "474d15a14add859276b84397e7ec0f840943fd34", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/474d15a14add859276b84397e7ec0f840943fd34"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f3fc4aef7231ba64305097b1e0d6186afb2effe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f3fc4aef7231ba64305097b1e0d6186afb2effe0", "html_url": "https://github.com/dotnet/codeformatter/commit/f3fc4aef7231ba64305097b1e0d6186afb2effe0", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f3fc4aef7231ba64305097b1e0d6186afb2effe0/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84f1e040f900f1868fff242cea4235723e3b9683", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/84f1e040f900f1868fff242cea4235723e3b9683", "html_url": "https://github.com/dotnet/codeformatter/commit/84f1e040f900f1868fff242cea4235723e3b9683"}]}, {"sha": "84f1e040f900f1868fff242cea4235723e3b9683", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T18:11:08Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T18:11:08Z"}, "message": "Load references as metadata\n\nIn the case of loading a single project be sure to treat references as\nmetadata instead of source. This prevents Roslyn from doing work that\ndoesn't need to be done.", "tree": {"sha": "8f9f2dd15b9f599457a2e33f99e456a18541bae9", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8f9f2dd15b9f599457a2e33f99e456a18541bae9"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/84f1e040f900f1868fff242cea4235723e3b9683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/84f1e040f900f1868fff242cea4235723e3b9683", "html_url": "https://github.com/dotnet/codeformatter/commit/84f1e040f900f1868fff242cea4235723e3b9683", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/84f1e040f900f1868fff242cea4235723e3b9683/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6716972df95a277ae57aac7a7f001a509b5c197", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f6716972df95a277ae57aac7a7f001a509b5c197", "html_url": "https://github.com/dotnet/codeformatter/commit/f6716972df95a277ae57aac7a7f001a509b5c197"}]}, {"sha": "f6716972df95a277ae57aac7a7f001a509b5c197", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T18:09:59Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T18:09:59Z"}, "message": "Fix explicit visibility for partial types\n\nThe explicit visibility code now handles partial types correctly.", "tree": {"sha": "fcccf4ca5307c04060aa8a1158bb81262c61bc2d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/fcccf4ca5307c04060aa8a1158bb81262c61bc2d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f6716972df95a277ae57aac7a7f001a509b5c197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f6716972df95a277ae57aac7a7f001a509b5c197", "html_url": "https://github.com/dotnet/codeformatter/commit/f6716972df95a277ae57aac7a7f001a509b5c197", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f6716972df95a277ae57aac7a7f001a509b5c197/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dd9b7f89d6ea290ff1c11d0dd32ae2bacf0a8f6", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4dd9b7f89d6ea290ff1c11d0dd32ae2bacf0a8f6", "html_url": "https://github.com/dotnet/codeformatter/commit/4dd9b7f89d6ea290ff1c11d0dd32ae2bacf0a8f6"}]}, {"sha": "f3864e9d98cdad18a7647fab00af7d40f77a96aa", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-22T17:46:50Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-22T17:46:50Z"}, "message": "Merge pull request #30 from nslottow/skip-unformattable-files\n\nSkip non-existent and read-only files", "tree": {"sha": "f9db395dcc008ca4e0ec60dd890bca1aee3a5748", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/f9db395dcc008ca4e0ec60dd890bca1aee3a5748"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f3864e9d98cdad18a7647fab00af7d40f77a96aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f3864e9d98cdad18a7647fab00af7d40f77a96aa", "html_url": "https://github.com/dotnet/codeformatter/commit/f3864e9d98cdad18a7647fab00af7d40f77a96aa", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f3864e9d98cdad18a7647fab00af7d40f77a96aa/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffe20fe6693d984588b9686cf577babbba4b4ebb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ffe20fe6693d984588b9686cf577babbba4b4ebb", "html_url": "https://github.com/dotnet/codeformatter/commit/ffe20fe6693d984588b9686cf577babbba4b4ebb"}, {"sha": "2fbd3f93f8ff08cc6cff019ad759fe55e43493c8", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2fbd3f93f8ff08cc6cff019ad759fe55e43493c8", "html_url": "https://github.com/dotnet/codeformatter/commit/2fbd3f93f8ff08cc6cff019ad759fe55e43493c8"}]}, {"sha": "ffe20fe6693d984588b9686cf577babbba4b4ebb", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-22T15:42:58Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-22T15:42:58Z"}, "message": "Merge pull request #32 from dotnet/usesimplifier\n\nUse simplifier to remove 'this.' usage", "tree": {"sha": "907183b62b2bcfce93748fdb3ef3b8b7dbde1d46", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/907183b62b2bcfce93748fdb3ef3b8b7dbde1d46"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/ffe20fe6693d984588b9686cf577babbba4b4ebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ffe20fe6693d984588b9686cf577babbba4b4ebb", "html_url": "https://github.com/dotnet/codeformatter/commit/ffe20fe6693d984588b9686cf577babbba4b4ebb", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/ffe20fe6693d984588b9686cf577babbba4b4ebb/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0ab437acffadeebee830f323a012af9e40b471d", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b0ab437acffadeebee830f323a012af9e40b471d", "html_url": "https://github.com/dotnet/codeformatter/commit/b0ab437acffadeebee830f323a012af9e40b471d"}, {"sha": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "html_url": "https://github.com/dotnet/codeformatter/commit/2b6c2c12ae8b24161f26bff62246dc12ed6975ff"}]}, {"sha": "4dd9b7f89d6ea290ff1c11d0dd32ae2bacf0a8f6", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T15:30:47Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T15:30:47Z"}, "message": "Delay retrieving the SemanticModel element\n\nGetting the SemanticModel instance is potentially an expensive\noperation.  For example in the Roslyn.sln project it takes on average\n3-5 seconds if it requires creating a new Compilation.  This is true\neven when processing a single project because MSBuild will load the\nentire solution for such a request and hence the Compilation encompasses\nthe entire solution.\n\nDelaying access in this manner significantly speeds up the formatting\nspeed of documents that need no changes.", "tree": {"sha": "2de8d5e1fd707c9d17d7eb782438acf778eea539", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2de8d5e1fd707c9d17d7eb782438acf778eea539"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/4dd9b7f89d6ea290ff1c11d0dd32ae2bacf0a8f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/4dd9b7f89d6ea290ff1c11d0dd32ae2bacf0a8f6", "html_url": "https://github.com/dotnet/codeformatter/commit/4dd9b7f89d6ea290ff1c11d0dd32ae2bacf0a8f6", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/4dd9b7f89d6ea290ff1c11d0dd32ae2bacf0a8f6/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9b2c30d5d6194f041ac1b33cd30a6b21087beec", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d9b2c30d5d6194f041ac1b33cd30a6b21087beec", "html_url": "https://github.com/dotnet/codeformatter/commit/d9b2c30d5d6194f041ac1b33cd30a6b21087beec"}]}, {"sha": "d9b2c30d5d6194f041ac1b33cd30a6b21087beec", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T15:22:05Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T15:22:05Z"}, "message": "Passing a project should only use that project\n\nWhen passing a project file name the formatter was still using the\nresulting Workspace to drive the formatter.  In the case a project is a\npart of a larger solution loading a project will load the larger\nsolution, not the individual project.  This means that every possible\ndocument in the solution was processed instead of the project.\n\nChanged the formatter to process the project only in that case.", "tree": {"sha": "3b1555a113ef61cb9c8e70b4161bf4bf14ef98b0", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/3b1555a113ef61cb9c8e70b4161bf4bf14ef98b0"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/d9b2c30d5d6194f041ac1b33cd30a6b21087beec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/d9b2c30d5d6194f041ac1b33cd30a6b21087beec", "html_url": "https://github.com/dotnet/codeformatter/commit/d9b2c30d5d6194f041ac1b33cd30a6b21087beec", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/d9b2c30d5d6194f041ac1b33cd30a6b21087beec/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91955338da75b0a44ca24cbef9a9a3bd9250bfd2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/91955338da75b0a44ca24cbef9a9a3bd9250bfd2", "html_url": "https://github.com/dotnet/codeformatter/commit/91955338da75b0a44ca24cbef9a9a3bd9250bfd2"}]}, {"sha": "91955338da75b0a44ca24cbef9a9a3bd9250bfd2", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T02:28:08Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-22T02:28:08Z"}, "message": "Combined the brace rules\n\nCombined the rules around open and close braces into a single rule.  The\nlogic here is extremely similar, makes sense to keep it in one place.\n\nAlso expanded upon the unit tests here to capture a couple of new\nscenarios.", "tree": {"sha": "373ec5dd13da375bfd8791a0238b393eb95a03c3", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/373ec5dd13da375bfd8791a0238b393eb95a03c3"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/91955338da75b0a44ca24cbef9a9a3bd9250bfd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/91955338da75b0a44ca24cbef9a9a3bd9250bfd2", "html_url": "https://github.com/dotnet/codeformatter/commit/91955338da75b0a44ca24cbef9a9a3bd9250bfd2", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/91955338da75b0a44ca24cbef9a9a3bd9250bfd2/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "html_url": "https://github.com/dotnet/codeformatter/commit/2b6c2c12ae8b24161f26bff62246dc12ed6975ff"}]}, {"sha": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T17:26:04Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T17:26:04Z"}, "message": "Fixed a small typo", "tree": {"sha": "907183b62b2bcfce93748fdb3ef3b8b7dbde1d46", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/907183b62b2bcfce93748fdb3ef3b8b7dbde1d46"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "html_url": "https://github.com/dotnet/codeformatter/commit/2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/2b6c2c12ae8b24161f26bff62246dc12ed6975ff/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "204cc3f61b1ef4ea69052bc46e9c5b3cbef69240", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/204cc3f61b1ef4ea69052bc46e9c5b3cbef69240", "html_url": "https://github.com/dotnet/codeformatter/commit/204cc3f61b1ef4ea69052bc46e9c5b3cbef69240"}]}, {"sha": "204cc3f61b1ef4ea69052bc46e9c5b3cbef69240", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T17:08:06Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T17:08:06Z"}, "message": "Use simplifier to remove 'this.' usage", "tree": {"sha": "eb8a59c5c85d33a8416961284a03da7b496aa75c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/eb8a59c5c85d33a8416961284a03da7b496aa75c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/204cc3f61b1ef4ea69052bc46e9c5b3cbef69240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/204cc3f61b1ef4ea69052bc46e9c5b3cbef69240", "html_url": "https://github.com/dotnet/codeformatter/commit/204cc3f61b1ef4ea69052bc46e9c5b3cbef69240", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/204cc3f61b1ef4ea69052bc46e9c5b3cbef69240/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b78f11d4fb3ab2543588a2d9edf8f26338465694", "html_url": "https://github.com/dotnet/codeformatter/commit/b78f11d4fb3ab2543588a2d9edf8f26338465694"}]}, {"sha": "b0ab437acffadeebee830f323a012af9e40b471d", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-21T01:53:35Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpparsons@gmail.com", "date": "2015-01-21T01:53:35Z"}, "message": "Merge pull request #31 from dotnet/fixes-perf\n\nFixes perf issue", "tree": {"sha": "efac31e179ddc729ad0cdd3f4467efcf5ef3ce72", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/efac31e179ddc729ad0cdd3f4467efcf5ef3ce72"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b0ab437acffadeebee830f323a012af9e40b471d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b0ab437acffadeebee830f323a012af9e40b471d", "html_url": "https://github.com/dotnet/codeformatter/commit/b0ab437acffadeebee830f323a012af9e40b471d", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b0ab437acffadeebee830f323a012af9e40b471d/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "html_url": "https://github.com/dotnet/codeformatter/commit/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2"}, {"sha": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b78f11d4fb3ab2543588a2d9edf8f26338465694", "html_url": "https://github.com/dotnet/codeformatter/commit/b78f11d4fb3ab2543588a2d9edf8f26338465694"}]}, {"sha": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T01:53:05Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T01:53:05Z"}, "message": "Responded to PR feedback", "tree": {"sha": "efac31e179ddc729ad0cdd3f4467efcf5ef3ce72", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/efac31e179ddc729ad0cdd3f4467efcf5ef3ce72"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b78f11d4fb3ab2543588a2d9edf8f26338465694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b78f11d4fb3ab2543588a2d9edf8f26338465694", "html_url": "https://github.com/dotnet/codeformatter/commit/b78f11d4fb3ab2543588a2d9edf8f26338465694", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b78f11d4fb3ab2543588a2d9edf8f26338465694/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "122ba74deb1b07336ea7a0dbe187a129fe337339", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/122ba74deb1b07336ea7a0dbe187a129fe337339", "html_url": "https://github.com/dotnet/codeformatter/commit/122ba74deb1b07336ea7a0dbe187a129fe337339"}]}, {"sha": "122ba74deb1b07336ea7a0dbe187a129fe337339", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T01:23:27Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T01:23:27Z"}, "message": "Respond to PR feedback", "tree": {"sha": "d9f08e951109d8de147793dc51350ec613262c64", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d9f08e951109d8de147793dc51350ec613262c64"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/122ba74deb1b07336ea7a0dbe187a129fe337339", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/122ba74deb1b07336ea7a0dbe187a129fe337339", "html_url": "https://github.com/dotnet/codeformatter/commit/122ba74deb1b07336ea7a0dbe187a129fe337339", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/122ba74deb1b07336ea7a0dbe187a129fe337339/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "html_url": "https://github.com/dotnet/codeformatter/commit/5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423"}]}, {"sha": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T01:05:03Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T01:05:03Z"}, "message": "Removed profile solution item", "tree": {"sha": "2b8aef20933da4d0285d0b0320bdf6c134740615", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2b8aef20933da4d0285d0b0320bdf6c134740615"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "html_url": "https://github.com/dotnet/codeformatter/commit/5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18", "html_url": "https://github.com/dotnet/codeformatter/commit/8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18"}]}, {"sha": "8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T00:59:08Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-21T00:59:08Z"}, "message": "Cleaned up the private field rename\n\nThe private field rename rule was spending a good chunk of time in\nLinq.Any methods.  Spoke with the Roslyn team about the pattern and they\nsuggested using rewriters as it was a more established way for doing\nthat kind of edit.", "tree": {"sha": "56a5b73f17bafad14f2a6ef6fb5d8d6e7886c9cf", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/56a5b73f17bafad14f2a6ef6fb5d8d6e7886c9cf"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18", "html_url": "https://github.com/dotnet/codeformatter/commit/8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a136fbb5fd3079758125cd5b9085c21e250ecf4", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a136fbb5fd3079758125cd5b9085c21e250ecf4", "html_url": "https://github.com/dotnet/codeformatter/commit/9a136fbb5fd3079758125cd5b9085c21e250ecf4"}]}, {"sha": "9a136fbb5fd3079758125cd5b9085c21e250ecf4", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-20T23:54:42Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-20T23:54:42Z"}, "message": "Rule rename\n\nShorten the rule names to be more about the scenario than the specific\naction they are taking.", "tree": {"sha": "8ee7e6339b9cd4acbdedfd3c7b07cd23dc4da3a5", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/8ee7e6339b9cd4acbdedfd3c7b07cd23dc4da3a5"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/9a136fbb5fd3079758125cd5b9085c21e250ecf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a136fbb5fd3079758125cd5b9085c21e250ecf4", "html_url": "https://github.com/dotnet/codeformatter/commit/9a136fbb5fd3079758125cd5b9085c21e250ecf4", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/9a136fbb5fd3079758125cd5b9085c21e250ecf4/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "445a69b4cb2a35c026b7b30fa9cb3a93dfc7c7c4", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/445a69b4cb2a35c026b7b30fa9cb3a93dfc7c7c4", "html_url": "https://github.com/dotnet/codeformatter/commit/445a69b4cb2a35c026b7b30fa9cb3a93dfc7c7c4"}]}, {"sha": "2fbd3f93f8ff08cc6cff019ad759fe55e43493c8", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-17T00:43:42Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-20T23:42:09Z"}, "message": "Skip non-existent and read-only files\n\nPreviously, if a project included file paths which did not actually\nexist, Workspace.TryApplyChanges() would create empty files at those\npaths. Also, if a file was read-only, the entire formatting operation\nwould fail with an UnauthorizedAccessException. This change makes sure\nwe skip the document in these cases and emit a warning instead.\n\nThis change moves away from using Workspace.TryApplyChanges() because\nthat method attempts to apply *all* workspace changes, including file\nadditions, removals, etc. Since this tool just produces clean Document\nobjects as output--that is, we don't want to modify any of the other\nfiles that make up the workspace--it makes sense to write the document\ntext ourselves.", "tree": {"sha": "2b69e5d90f4665e0367485cb434d10b263c7086c", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/2b69e5d90f4665e0367485cb434d10b263c7086c"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/2fbd3f93f8ff08cc6cff019ad759fe55e43493c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/2fbd3f93f8ff08cc6cff019ad759fe55e43493c8", "html_url": "https://github.com/dotnet/codeformatter/commit/2fbd3f93f8ff08cc6cff019ad759fe55e43493c8", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/2fbd3f93f8ff08cc6cff019ad759fe55e43493c8/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "html_url": "https://github.com/dotnet/codeformatter/commit/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2"}]}, {"sha": "445a69b4cb2a35c026b7b30fa9cb3a93dfc7c7c4", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-20T21:13:55Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-20T21:13:55Z"}, "message": "Fix trivia handling while removing this.", "tree": {"sha": "4b84eb3ae1bbd5f2aee2ff79a4f2a19307d386fa", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/4b84eb3ae1bbd5f2aee2ff79a4f2a19307d386fa"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/445a69b4cb2a35c026b7b30fa9cb3a93dfc7c7c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/445a69b4cb2a35c026b7b30fa9cb3a93dfc7c7c4", "html_url": "https://github.com/dotnet/codeformatter/commit/445a69b4cb2a35c026b7b30fa9cb3a93dfc7c7c4", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/445a69b4cb2a35c026b7b30fa9cb3a93dfc7c7c4/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8290cef22b023160fdfb626b3adce4203395dc69", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8290cef22b023160fdfb626b3adce4203395dc69", "html_url": "https://github.com/dotnet/codeformatter/commit/8290cef22b023160fdfb626b3adce4203395dc69"}]}, {"sha": "8290cef22b023160fdfb626b3adce4203395dc69", "commit": {"author": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-20T19:16:05Z"}, "committer": {"name": "Jared Parsons", "email": "jaredpar@microsoft.com", "date": "2015-01-20T19:16:05Z"}, "message": "Simple this removal support\n\nThis change supports very simple removal of explicit 'this.' usage.  It\ndoes so when applied to private fields which match the naming\nguidelines.\n\nThere is still some work to do here with preserving trivia but overall\nthe rule is functional.", "tree": {"sha": "e54e15d4c8950dea0528059e2027ba68801666c1", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/e54e15d4c8950dea0528059e2027ba68801666c1"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8290cef22b023160fdfb626b3adce4203395dc69", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8290cef22b023160fdfb626b3adce4203395dc69", "html_url": "https://github.com/dotnet/codeformatter/commit/8290cef22b023160fdfb626b3adce4203395dc69", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8290cef22b023160fdfb626b3adce4203395dc69/comments", "author": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "html_url": "https://github.com/dotnet/codeformatter/commit/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2"}]}, {"sha": "cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-14T22:56:11Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-14T22:56:11Z"}, "message": "Merge pull request #22 from nslottow/support-opening-projects\n\nAdds support for opening project files.", "tree": {"sha": "c95d9c93d7f73e69da6714458846b062cd352f27", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c95d9c93d7f73e69da6714458846b062cd352f27"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "html_url": "https://github.com/dotnet/codeformatter/commit/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/cf4b485a3fad0d7fe7fe29f430d9f941a37112a2/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9", "html_url": "https://github.com/dotnet/codeformatter/commit/a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9"}, {"sha": "95b151325a8ab6f048e0fb718286c2651341e2b1", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/95b151325a8ab6f048e0fb718286c2651341e2b1", "html_url": "https://github.com/dotnet/codeformatter/commit/95b151325a8ab6f048e0fb718286c2651341e2b1"}]}, {"sha": "95b151325a8ab6f048e0fb718286c2651341e2b1", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-14T22:30:39Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-14T22:53:11Z"}, "message": "Adds support for opening project files.\n\nBefore the tool could only operate on a solution.", "tree": {"sha": "c95d9c93d7f73e69da6714458846b062cd352f27", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/c95d9c93d7f73e69da6714458846b062cd352f27"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/95b151325a8ab6f048e0fb718286c2651341e2b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/95b151325a8ab6f048e0fb718286c2651341e2b1", "html_url": "https://github.com/dotnet/codeformatter/commit/95b151325a8ab6f048e0fb718286c2651341e2b1", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/95b151325a8ab6f048e0fb718286c2651341e2b1/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9", "html_url": "https://github.com/dotnet/codeformatter/commit/a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9"}]}, {"sha": "b34f6e2c957b5438770790463868321df9e3c021", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-11T00:43:52Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-11T00:43:52Z"}, "message": "Initial commit of local work.", "tree": {"sha": "acd996f6e2fb395b8ab1b64cdef1fe8ba2cdbf3f", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/acd996f6e2fb395b8ab1b64cdef1fe8ba2cdbf3f"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/b34f6e2c957b5438770790463868321df9e3c021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/b34f6e2c957b5438770790463868321df9e3c021", "html_url": "https://github.com/dotnet/codeformatter/commit/b34f6e2c957b5438770790463868321df9e3c021", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/b34f6e2c957b5438770790463868321df9e3c021/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e2b67570366451e99bec51edf17efbe31fa68cb", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6e2b67570366451e99bec51edf17efbe31fa68cb", "html_url": "https://github.com/dotnet/codeformatter/commit/6e2b67570366451e99bec51edf17efbe31fa68cb"}]}, {"sha": "6e2b67570366451e99bec51edf17efbe31fa68cb", "commit": {"author": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-11T00:40:37Z"}, "committer": {"name": "Nate Slottow", "email": "naslotto@microsoft.com", "date": "2015-01-11T00:40:37Z"}, "message": "Initial commit", "tree": {"sha": "b48475263cc895e3b790bcefe5cc391c7863df40", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/b48475263cc895e3b790bcefe5cc391c7863df40"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6e2b67570366451e99bec51edf17efbe31fa68cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6e2b67570366451e99bec51edf17efbe31fa68cb", "html_url": "https://github.com/dotnet/codeformatter/commit/6e2b67570366451e99bec51edf17efbe31fa68cb", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6e2b67570366451e99bec51edf17efbe31fa68cb/comments", "author": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "parents": []}, {"sha": "a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9", "commit": {"author": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2015-01-09T23:21:04Z"}, "committer": {"name": "Lakshmi Priya", "email": "priya91@users.noreply.github.com", "date": "2015-01-09T23:21:04Z"}, "message": "Merge pull request #18 from dotnet/lasekar/enablenuget\n\nAdd .nuspec to enable consuming the bits internally without enlistment", "tree": {"sha": "377a906c9430531b008442207b627b978ea5e901", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/377a906c9430531b008442207b627b978ea5e901"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9", "html_url": "https://github.com/dotnet/codeformatter/commit/a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a5b7b4ab05eadd8fe45bc42e6878a9527f9008c9/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c5a4b7908f14e159c750f8ffa463bdd5499b57c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8c5a4b7908f14e159c750f8ffa463bdd5499b57c", "html_url": "https://github.com/dotnet/codeformatter/commit/8c5a4b7908f14e159c750f8ffa463bdd5499b57c"}, {"sha": "f57f0baec28223d617e54f3fc565bfa05386db56", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f57f0baec28223d617e54f3fc565bfa05386db56", "html_url": "https://github.com/dotnet/codeformatter/commit/f57f0baec28223d617e54f3fc565bfa05386db56"}]}, {"sha": "f57f0baec28223d617e54f3fc565bfa05386db56", "commit": {"author": {"name": "Lakshmi Priya Sekar", "email": "lasekar@microsoft.com", "date": "2015-01-09T20:35:51Z"}, "committer": {"name": "Lakshmi Priya Sekar", "email": "lasekar@microsoft.com", "date": "2015-01-09T20:35:51Z"}, "message": "Remove visualbasic references and dependencies.", "tree": {"sha": "377a906c9430531b008442207b627b978ea5e901", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/377a906c9430531b008442207b627b978ea5e901"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/f57f0baec28223d617e54f3fc565bfa05386db56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/f57f0baec28223d617e54f3fc565bfa05386db56", "html_url": "https://github.com/dotnet/codeformatter/commit/f57f0baec28223d617e54f3fc565bfa05386db56", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/f57f0baec28223d617e54f3fc565bfa05386db56/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a55c56be0506de025b31b77597e13890cd9585de", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a55c56be0506de025b31b77597e13890cd9585de", "html_url": "https://github.com/dotnet/codeformatter/commit/a55c56be0506de025b31b77597e13890cd9585de"}]}, {"sha": "a55c56be0506de025b31b77597e13890cd9585de", "commit": {"author": {"name": "Lakshmi Priya Sekar", "email": "lasekar@microsoft.com", "date": "2015-01-09T00:39:19Z"}, "committer": {"name": "Lakshmi Priya Sekar", "email": "lasekar@microsoft.com", "date": "2015-01-09T00:46:57Z"}, "message": "Add .nuspec to enable consuming the bits internally without enlistment", "tree": {"sha": "249ef7b57c57bf2f3cb3e66669a91f494c3ed615", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/249ef7b57c57bf2f3cb3e66669a91f494c3ed615"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/a55c56be0506de025b31b77597e13890cd9585de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/a55c56be0506de025b31b77597e13890cd9585de", "html_url": "https://github.com/dotnet/codeformatter/commit/a55c56be0506de025b31b77597e13890cd9585de", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/a55c56be0506de025b31b77597e13890cd9585de/comments", "author": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c5a4b7908f14e159c750f8ffa463bdd5499b57c", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8c5a4b7908f14e159c750f8ffa463bdd5499b57c", "html_url": "https://github.com/dotnet/codeformatter/commit/8c5a4b7908f14e159c750f8ffa463bdd5499b57c"}]}, {"sha": "8c5a4b7908f14e159c750f8ffa463bdd5499b57c", "commit": {"author": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-01-08T22:03:54Z"}, "committer": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-01-08T22:03:54Z"}, "message": "Merge pull request #16 from dotnet/add-rule-order-class\n\nAdd Rule Order Class", "tree": {"sha": "d17135809fdac21270895c8cba86ae505daeab6d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d17135809fdac21270895c8cba86ae505daeab6d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/8c5a4b7908f14e159c750f8ffa463bdd5499b57c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/8c5a4b7908f14e159c750f8ffa463bdd5499b57c", "html_url": "https://github.com/dotnet/codeformatter/commit/8c5a4b7908f14e159c750f8ffa463bdd5499b57c", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/8c5a4b7908f14e159c750f8ffa463bdd5499b57c/comments", "author": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0da03d681e18abe2fc434a6b9e9a1f07c9ea4c74", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/0da03d681e18abe2fc434a6b9e9a1f07c9ea4c74", "html_url": "https://github.com/dotnet/codeformatter/commit/0da03d681e18abe2fc434a6b9e9a1f07c9ea4c74"}, {"sha": "6660aab35e41501c78e382d7d08880367f07d2fc", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6660aab35e41501c78e382d7d08880367f07d2fc", "html_url": "https://github.com/dotnet/codeformatter/commit/6660aab35e41501c78e382d7d08880367f07d2fc"}]}, {"sha": "6660aab35e41501c78e382d7d08880367f07d2fc", "commit": {"author": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-01-08T19:29:21Z"}, "committer": {"name": "Matt Ellis", "email": "matell@microsoft.com", "date": "2015-01-08T19:29:21Z"}, "message": "Update AssemblyInfo", "tree": {"sha": "d17135809fdac21270895c8cba86ae505daeab6d", "url": "https://api.github.com/repos/dotnet/codeformatter/git/trees/d17135809fdac21270895c8cba86ae505daeab6d"}, "url": "https://api.github.com/repos/dotnet/codeformatter/git/commits/6660aab35e41501c78e382d7d08880367f07d2fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/dotnet/codeformatter/commits/6660aab35e41501c78e382d7d08880367f07d2fc", "html_url": "https://github.com/dotnet/codeformatter/commit/6660aab35e41501c78e382d7d08880367f07d2fc", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/commits/6660aab35e41501c78e382d7d08880367f07d2fc/comments", "author": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ede334e7dee285e97860804c8834c66fe2e2f81b", "url": "https://api.github.com/repos/dotnet/codeformatter/commits/ede334e7dee285e97860804c8834c66fe2e2f81b", "html_url": "https://github.com/dotnet/codeformatter/commit/ede334e7dee285e97860804c8834c66fe2e2f81b"}]}], "pull_requests": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/270", "id": 158693382, "html_url": "https://github.com/dotnet/codeformatter/pull/270", "diff_url": "https://github.com/dotnet/codeformatter/pull/270.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/270.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/270", "number": 270, "state": "open", "locked": false, "title": "Fix corefx contribution process link", "user": {"login": "japj", "id": 512, "avatar_url": "https://avatars2.githubusercontent.com/u/512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japj", "html_url": "https://github.com/japj", "followers_url": "https://api.github.com/users/japj/followers", "following_url": "https://api.github.com/users/japj/following{/other_user}", "gists_url": "https://api.github.com/users/japj/gists{/gist_id}", "starred_url": "https://api.github.com/users/japj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japj/subscriptions", "organizations_url": "https://api.github.com/users/japj/orgs", "repos_url": "https://api.github.com/users/japj/repos", "events_url": "https://api.github.com/users/japj/events{/privacy}", "received_events_url": "https://api.github.com/users/japj/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2017-12-15T21:04:10Z", "updated_at": "2017-12-15T21:04:10Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "6378b72ea8769945486fb36eacf97bec48f8ab26", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/270/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/270/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/270/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/db2dc3f1a182f2d39fe7f2e02bd1a083d97ce6c7", "head": {"label": "japj:patch-1", "ref": "patch-1", "sha": "db2dc3f1a182f2d39fe7f2e02bd1a083d97ce6c7", "user": {"login": "japj", "id": 512, "avatar_url": "https://avatars2.githubusercontent.com/u/512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japj", "html_url": "https://github.com/japj", "followers_url": "https://api.github.com/users/japj/followers", "following_url": "https://api.github.com/users/japj/following{/other_user}", "gists_url": "https://api.github.com/users/japj/gists{/gist_id}", "starred_url": "https://api.github.com/users/japj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japj/subscriptions", "organizations_url": "https://api.github.com/users/japj/orgs", "repos_url": "https://api.github.com/users/japj/repos", "events_url": "https://api.github.com/users/japj/events{/privacy}", "received_events_url": "https://api.github.com/users/japj/received_events", "type": "User", "site_admin": false}, "repo": {"id": 114410883, "name": "codeformatter", "full_name": "japj/codeformatter", "owner": {"login": "japj", "id": 512, "avatar_url": "https://avatars2.githubusercontent.com/u/512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japj", "html_url": "https://github.com/japj", "followers_url": "https://api.github.com/users/japj/followers", "following_url": "https://api.github.com/users/japj/following{/other_user}", "gists_url": "https://api.github.com/users/japj/gists{/gist_id}", "starred_url": "https://api.github.com/users/japj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japj/subscriptions", "organizations_url": "https://api.github.com/users/japj/orgs", "repos_url": "https://api.github.com/users/japj/repos", "events_url": "https://api.github.com/users/japj/events{/privacy}", "received_events_url": "https://api.github.com/users/japj/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/japj/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/japj/codeformatter", "forks_url": "https://api.github.com/repos/japj/codeformatter/forks", "keys_url": "https://api.github.com/repos/japj/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/japj/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/japj/codeformatter/teams", "hooks_url": "https://api.github.com/repos/japj/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/japj/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/japj/codeformatter/events", "assignees_url": "https://api.github.com/repos/japj/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/japj/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/japj/codeformatter/tags", "blobs_url": "https://api.github.com/repos/japj/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/japj/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/japj/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/japj/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/japj/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/japj/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/japj/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/japj/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/japj/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/japj/codeformatter/subscription", "commits_url": "https://api.github.com/repos/japj/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/japj/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/japj/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/japj/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/japj/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/japj/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/japj/codeformatter/merges", "archive_url": "https://api.github.com/repos/japj/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/japj/codeformatter/downloads", "issues_url": "https://api.github.com/repos/japj/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/japj/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/japj/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/japj/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/japj/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/japj/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/japj/codeformatter/deployments", "created_at": "2017-12-15T21:01:53Z", "updated_at": "2017-12-15T21:01:55Z", "pushed_at": "2017-12-15T21:03:48Z", "git_url": "git://github.com/japj/codeformatter.git", "ssh_url": "git@github.com:japj/codeformatter.git", "clone_url": "https://github.com/japj/codeformatter.git", "svn_url": "https://github.com/japj/codeformatter", "homepage": "", "size": 943, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "ea592c208dc7117b9b1d61c2c592202cb4362369", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/270"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/270"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/270"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/270/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/270/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/270/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/db2dc3f1a182f2d39fe7f2e02bd1a083d97ce6c7"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/254", "id": 107747859, "html_url": "https://github.com/dotnet/codeformatter/pull/254", "diff_url": "https://github.com/dotnet/codeformatter/pull/254.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/254.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/254", "number": 254, "state": "open", "locked": false, "title": "Update to latest roslyn and fix issue in UsingLocationRule", "user": {"login": "alexperovich", "id": 10565410, "avatar_url": "https://avatars3.githubusercontent.com/u/10565410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexperovich", "html_url": "https://github.com/alexperovich", "followers_url": "https://api.github.com/users/alexperovich/followers", "following_url": "https://api.github.com/users/alexperovich/following{/other_user}", "gists_url": "https://api.github.com/users/alexperovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexperovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexperovich/subscriptions", "organizations_url": "https://api.github.com/users/alexperovich/orgs", "repos_url": "https://api.github.com/users/alexperovich/repos", "events_url": "https://api.github.com/users/alexperovich/events{/privacy}", "received_events_url": "https://api.github.com/users/alexperovich/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2017-02-24T01:07:41Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "56299d240c3bdb3cd5e5daaddd223627089ecc9c", "assignee": {"login": "alexperovich", "id": 10565410, "avatar_url": "https://avatars3.githubusercontent.com/u/10565410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexperovich", "html_url": "https://github.com/alexperovich", "followers_url": "https://api.github.com/users/alexperovich/followers", "following_url": "https://api.github.com/users/alexperovich/following{/other_user}", "gists_url": "https://api.github.com/users/alexperovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexperovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexperovich/subscriptions", "organizations_url": "https://api.github.com/users/alexperovich/orgs", "repos_url": "https://api.github.com/users/alexperovich/repos", "events_url": "https://api.github.com/users/alexperovich/events{/privacy}", "received_events_url": "https://api.github.com/users/alexperovich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alexperovich", "id": 10565410, "avatar_url": "https://avatars3.githubusercontent.com/u/10565410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexperovich", "html_url": "https://github.com/alexperovich", "followers_url": "https://api.github.com/users/alexperovich/followers", "following_url": "https://api.github.com/users/alexperovich/following{/other_user}", "gists_url": "https://api.github.com/users/alexperovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexperovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexperovich/subscriptions", "organizations_url": "https://api.github.com/users/alexperovich/orgs", "repos_url": "https://api.github.com/users/alexperovich/repos", "events_url": "https://api.github.com/users/alexperovich/events{/privacy}", "received_events_url": "https://api.github.com/users/alexperovich/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [{"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/254/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/254/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/254/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/cce47473d6403ac0b2d722eb5cf41000281d68f8", "head": {"label": "alexperovich:updateRoslyn", "ref": "updateRoslyn", "sha": "cce47473d6403ac0b2d722eb5cf41000281d68f8", "user": {"login": "alexperovich", "id": 10565410, "avatar_url": "https://avatars3.githubusercontent.com/u/10565410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexperovich", "html_url": "https://github.com/alexperovich", "followers_url": "https://api.github.com/users/alexperovich/followers", "following_url": "https://api.github.com/users/alexperovich/following{/other_user}", "gists_url": "https://api.github.com/users/alexperovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexperovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexperovich/subscriptions", "organizations_url": "https://api.github.com/users/alexperovich/orgs", "repos_url": "https://api.github.com/users/alexperovich/repos", "events_url": "https://api.github.com/users/alexperovich/events{/privacy}", "received_events_url": "https://api.github.com/users/alexperovich/received_events", "type": "User", "site_admin": false}, "repo": {"id": 82728457, "name": "codeformatter", "full_name": "alexperovich/codeformatter", "owner": {"login": "alexperovich", "id": 10565410, "avatar_url": "https://avatars3.githubusercontent.com/u/10565410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexperovich", "html_url": "https://github.com/alexperovich", "followers_url": "https://api.github.com/users/alexperovich/followers", "following_url": "https://api.github.com/users/alexperovich/following{/other_user}", "gists_url": "https://api.github.com/users/alexperovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexperovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexperovich/subscriptions", "organizations_url": "https://api.github.com/users/alexperovich/orgs", "repos_url": "https://api.github.com/users/alexperovich/repos", "events_url": "https://api.github.com/users/alexperovich/events{/privacy}", "received_events_url": "https://api.github.com/users/alexperovich/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/alexperovich/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/alexperovich/codeformatter", "forks_url": "https://api.github.com/repos/alexperovich/codeformatter/forks", "keys_url": "https://api.github.com/repos/alexperovich/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/alexperovich/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/alexperovich/codeformatter/teams", "hooks_url": "https://api.github.com/repos/alexperovich/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/alexperovich/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/alexperovich/codeformatter/events", "assignees_url": "https://api.github.com/repos/alexperovich/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/alexperovich/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/alexperovich/codeformatter/tags", "blobs_url": "https://api.github.com/repos/alexperovich/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/alexperovich/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/alexperovich/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/alexperovich/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/alexperovich/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/alexperovich/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/alexperovich/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/alexperovich/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/alexperovich/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/alexperovich/codeformatter/subscription", "commits_url": "https://api.github.com/repos/alexperovich/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/alexperovich/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/alexperovich/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/alexperovich/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/alexperovich/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/alexperovich/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/alexperovich/codeformatter/merges", "archive_url": "https://api.github.com/repos/alexperovich/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/alexperovich/codeformatter/downloads", "issues_url": "https://api.github.com/repos/alexperovich/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/alexperovich/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/alexperovich/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/alexperovich/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/alexperovich/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/alexperovich/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/alexperovich/codeformatter/deployments", "created_at": "2017-02-21T21:22:29Z", "updated_at": "2017-02-21T21:22:31Z", "pushed_at": "2017-02-24T00:25:26Z", "git_url": "git://github.com/alexperovich/codeformatter.git", "ssh_url": "git@github.com:alexperovich/codeformatter.git", "clone_url": "https://github.com/alexperovich/codeformatter.git", "svn_url": "https://github.com/alexperovich/codeformatter", "homepage": "", "size": 945, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "bcc51178e1a82fb2edaf47285f6e577989a7333f", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/254"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/254"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/254"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/254/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/254/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/254/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/cce47473d6403ac0b2d722eb5cf41000281d68f8"}}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/251", "id": 101898059, "html_url": "https://github.com/dotnet/codeformatter/pull/251", "diff_url": "https://github.com/dotnet/codeformatter/pull/251.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/251.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/251", "number": 251, "state": "open", "locked": false, "title": "AppVeyor Build", "user": {"login": "wahmedswl", "id": 15020561, "avatar_url": "https://avatars1.githubusercontent.com/u/15020561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahmedswl", "html_url": "https://github.com/wahmedswl", "followers_url": "https://api.github.com/users/wahmedswl/followers", "following_url": "https://api.github.com/users/wahmedswl/following{/other_user}", "gists_url": "https://api.github.com/users/wahmedswl/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahmedswl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahmedswl/subscriptions", "organizations_url": "https://api.github.com/users/wahmedswl/orgs", "repos_url": "https://api.github.com/users/wahmedswl/repos", "events_url": "https://api.github.com/users/wahmedswl/events{/privacy}", "received_events_url": "https://api.github.com/users/wahmedswl/received_events", "type": "User", "site_admin": false}, "body": "Hi,\r\n   This will add AppVeyor build with Artifacts to download latest available Build. And it also fixes #250 ", "created_at": "2017-01-17T16:29:17Z", "updated_at": "2017-10-31T22:55:14Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "0876c1fb5b97375e5a8151162efc51017e577378", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/251/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/251/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/251/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/8cfc98b9d8f2fbfde4f2c3dc02cc832af3e8d6cb", "head": {"label": "wahmedswl:patch-1", "ref": "patch-1", "sha": "8cfc98b9d8f2fbfde4f2c3dc02cc832af3e8d6cb", "user": {"login": "wahmedswl", "id": 15020561, "avatar_url": "https://avatars1.githubusercontent.com/u/15020561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahmedswl", "html_url": "https://github.com/wahmedswl", "followers_url": "https://api.github.com/users/wahmedswl/followers", "following_url": "https://api.github.com/users/wahmedswl/following{/other_user}", "gists_url": "https://api.github.com/users/wahmedswl/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahmedswl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahmedswl/subscriptions", "organizations_url": "https://api.github.com/users/wahmedswl/orgs", "repos_url": "https://api.github.com/users/wahmedswl/repos", "events_url": "https://api.github.com/users/wahmedswl/events{/privacy}", "received_events_url": "https://api.github.com/users/wahmedswl/received_events", "type": "User", "site_admin": false}, "repo": {"id": 79242941, "name": "codeformatter", "full_name": "wahmedswl/codeformatter", "owner": {"login": "wahmedswl", "id": 15020561, "avatar_url": "https://avatars1.githubusercontent.com/u/15020561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahmedswl", "html_url": "https://github.com/wahmedswl", "followers_url": "https://api.github.com/users/wahmedswl/followers", "following_url": "https://api.github.com/users/wahmedswl/following{/other_user}", "gists_url": "https://api.github.com/users/wahmedswl/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahmedswl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahmedswl/subscriptions", "organizations_url": "https://api.github.com/users/wahmedswl/orgs", "repos_url": "https://api.github.com/users/wahmedswl/repos", "events_url": "https://api.github.com/users/wahmedswl/events{/privacy}", "received_events_url": "https://api.github.com/users/wahmedswl/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/wahmedswl/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/wahmedswl/codeformatter", "forks_url": "https://api.github.com/repos/wahmedswl/codeformatter/forks", "keys_url": "https://api.github.com/repos/wahmedswl/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/wahmedswl/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/wahmedswl/codeformatter/teams", "hooks_url": "https://api.github.com/repos/wahmedswl/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/wahmedswl/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/wahmedswl/codeformatter/events", "assignees_url": "https://api.github.com/repos/wahmedswl/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/wahmedswl/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/wahmedswl/codeformatter/tags", "blobs_url": "https://api.github.com/repos/wahmedswl/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/wahmedswl/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/wahmedswl/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/wahmedswl/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/wahmedswl/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/wahmedswl/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/wahmedswl/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/wahmedswl/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/wahmedswl/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/wahmedswl/codeformatter/subscription", "commits_url": "https://api.github.com/repos/wahmedswl/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/wahmedswl/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/wahmedswl/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/wahmedswl/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/wahmedswl/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/wahmedswl/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/wahmedswl/codeformatter/merges", "archive_url": "https://api.github.com/repos/wahmedswl/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/wahmedswl/codeformatter/downloads", "issues_url": "https://api.github.com/repos/wahmedswl/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/wahmedswl/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/wahmedswl/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/wahmedswl/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/wahmedswl/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/wahmedswl/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/wahmedswl/codeformatter/deployments", "created_at": "2017-01-17T15:42:40Z", "updated_at": "2017-01-17T15:42:43Z", "pushed_at": "2017-01-17T16:10:10Z", "git_url": "git://github.com/wahmedswl/codeformatter.git", "ssh_url": "git@github.com:wahmedswl/codeformatter.git", "clone_url": "https://github.com/wahmedswl/codeformatter.git", "svn_url": "https://github.com/wahmedswl/codeformatter", "homepage": "", "size": 940, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "bcc51178e1a82fb2edaf47285f6e577989a7333f", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/251"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/251"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/251"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/251/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/251/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/251/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/8cfc98b9d8f2fbfde4f2c3dc02cc832af3e8d6cb"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/244", "id": 93255510, "html_url": "https://github.com/dotnet/codeformatter/pull/244", "diff_url": "https://github.com/dotnet/codeformatter/pull/244.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/244.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/244", "number": 244, "state": "open", "locked": false, "title": "Add MemberThis rule. Rule explicitly adds 'this.' before local member\u2026", "user": {"login": "richardstanton", "id": 14844900, "avatar_url": "https://avatars0.githubusercontent.com/u/14844900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardstanton", "html_url": "https://github.com/richardstanton", "followers_url": "https://api.github.com/users/richardstanton/followers", "following_url": "https://api.github.com/users/richardstanton/following{/other_user}", "gists_url": "https://api.github.com/users/richardstanton/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardstanton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardstanton/subscriptions", "organizations_url": "https://api.github.com/users/richardstanton/orgs", "repos_url": "https://api.github.com/users/richardstanton/repos", "events_url": "https://api.github.com/users/richardstanton/events{/privacy}", "received_events_url": "https://api.github.com/users/richardstanton/received_events", "type": "User", "site_admin": false}, "body": "\u2026 access.\r\n\r\nSome projects use a different naming convention for member access. In an alternative convention in order to easily tell if a variable is a local member the \"this.\" operator is always used. This convention takes a different approach from the existing PrivateFieldNaming rule that adds an underscore on members.\r\n\r\nThis change adds a MemberThis rule that is turned off by default. This would allow an alternative convention to be used by a project that wanted to use the codeformatter.", "created_at": "2016-11-10T23:57:14Z", "updated_at": "2017-10-31T22:55:15Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "2cab1f83c8c17b1cec173b04c751d225f4c49f8d", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/244/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/244/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/244/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/e84176c0c4de61430f6b8687ce9d54a6f3985bae", "head": {"label": "richardstanton:user/richsta/memberthis", "ref": "user/richsta/memberthis", "sha": "e84176c0c4de61430f6b8687ce9d54a6f3985bae", "user": {"login": "richardstanton", "id": 14844900, "avatar_url": "https://avatars0.githubusercontent.com/u/14844900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardstanton", "html_url": "https://github.com/richardstanton", "followers_url": "https://api.github.com/users/richardstanton/followers", "following_url": "https://api.github.com/users/richardstanton/following{/other_user}", "gists_url": "https://api.github.com/users/richardstanton/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardstanton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardstanton/subscriptions", "organizations_url": "https://api.github.com/users/richardstanton/orgs", "repos_url": "https://api.github.com/users/richardstanton/repos", "events_url": "https://api.github.com/users/richardstanton/events{/privacy}", "received_events_url": "https://api.github.com/users/richardstanton/received_events", "type": "User", "site_admin": false}, "repo": {"id": 73430113, "name": "codeformatter", "full_name": "richardstanton/codeformatter", "owner": {"login": "richardstanton", "id": 14844900, "avatar_url": "https://avatars0.githubusercontent.com/u/14844900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardstanton", "html_url": "https://github.com/richardstanton", "followers_url": "https://api.github.com/users/richardstanton/followers", "following_url": "https://api.github.com/users/richardstanton/following{/other_user}", "gists_url": "https://api.github.com/users/richardstanton/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardstanton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardstanton/subscriptions", "organizations_url": "https://api.github.com/users/richardstanton/orgs", "repos_url": "https://api.github.com/users/richardstanton/repos", "events_url": "https://api.github.com/users/richardstanton/events{/privacy}", "received_events_url": "https://api.github.com/users/richardstanton/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/richardstanton/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/richardstanton/codeformatter", "forks_url": "https://api.github.com/repos/richardstanton/codeformatter/forks", "keys_url": "https://api.github.com/repos/richardstanton/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/richardstanton/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/richardstanton/codeformatter/teams", "hooks_url": "https://api.github.com/repos/richardstanton/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/richardstanton/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/richardstanton/codeformatter/events", "assignees_url": "https://api.github.com/repos/richardstanton/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/richardstanton/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/richardstanton/codeformatter/tags", "blobs_url": "https://api.github.com/repos/richardstanton/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/richardstanton/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/richardstanton/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/richardstanton/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/richardstanton/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/richardstanton/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/richardstanton/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/richardstanton/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/richardstanton/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/richardstanton/codeformatter/subscription", "commits_url": "https://api.github.com/repos/richardstanton/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/richardstanton/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/richardstanton/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/richardstanton/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/richardstanton/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/richardstanton/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/richardstanton/codeformatter/merges", "archive_url": "https://api.github.com/repos/richardstanton/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/richardstanton/codeformatter/downloads", "issues_url": "https://api.github.com/repos/richardstanton/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/richardstanton/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/richardstanton/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/richardstanton/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/richardstanton/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/richardstanton/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/richardstanton/codeformatter/deployments", "created_at": "2016-11-10T23:39:06Z", "updated_at": "2016-11-10T23:39:07Z", "pushed_at": "2017-01-23T19:44:31Z", "git_url": "git://github.com/richardstanton/codeformatter.git", "ssh_url": "git@github.com:richardstanton/codeformatter.git", "clone_url": "https://github.com/richardstanton/codeformatter.git", "svn_url": "https://github.com/richardstanton/codeformatter", "homepage": "", "size": 941, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "bcc51178e1a82fb2edaf47285f6e577989a7333f", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/244"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/244"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/244"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/244/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/244/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/244/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/e84176c0c4de61430f6b8687ce9d54a6f3985bae"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/238", "id": 74014457, "html_url": "https://github.com/dotnet/codeformatter/pull/238", "diff_url": "https://github.com/dotnet/codeformatter/pull/238.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/238.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/238", "number": 238, "state": "open", "locked": false, "title": "Diagnostic logging fixes", "user": {"login": "danquirk", "id": 7121557, "avatar_url": "https://avatars2.githubusercontent.com/u/7121557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquirk", "html_url": "https://github.com/danquirk", "followers_url": "https://api.github.com/users/danquirk/followers", "following_url": "https://api.github.com/users/danquirk/following{/other_user}", "gists_url": "https://api.github.com/users/danquirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquirk/subscriptions", "organizations_url": "https://api.github.com/users/danquirk/orgs", "repos_url": "https://api.github.com/users/danquirk/repos", "events_url": "https://api.github.com/users/danquirk/events{/privacy}", "received_events_url": "https://api.github.com/users/danquirk/received_events", "type": "User", "site_admin": false}, "body": "SARIF logs were being incorrectly generated since each error class (syntactic/semantic/etc) was calling LogDiagnostics upon completion. Now all Diagnostics are aggregated together at the end of analysis and then logged, producing a proper JSON output.\n\nI'd merged the 1.3 Roslyn upgrade branch (PR here https://github.com/dotnet/codeformatter/pull/237) from my machine in here to make sure these changes still worked with the new SARIF format. I recommend just browsing the .cs changes or going commit by commit and just looking at the first 2 commits.\n", "created_at": "2016-06-16T02:42:54Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "df2f47cfe35f3d177639f9cb7ee2fd6ee1cab117", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/238/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/238/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/238/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/eeb3a9b142a1498f16ce35494d5db017a90f540c", "head": {"label": "danquirk:diagnosticLoggingFixes", "ref": "diagnosticLoggingFixes", "sha": "eeb3a9b142a1498f16ce35494d5db017a90f540c", "user": {"login": "danquirk", "id": 7121557, "avatar_url": "https://avatars2.githubusercontent.com/u/7121557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquirk", "html_url": "https://github.com/danquirk", "followers_url": "https://api.github.com/users/danquirk/followers", "following_url": "https://api.github.com/users/danquirk/following{/other_user}", "gists_url": "https://api.github.com/users/danquirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquirk/subscriptions", "organizations_url": "https://api.github.com/users/danquirk/orgs", "repos_url": "https://api.github.com/users/danquirk/repos", "events_url": "https://api.github.com/users/danquirk/events{/privacy}", "received_events_url": "https://api.github.com/users/danquirk/received_events", "type": "User", "site_admin": false}, "repo": {"id": 52120578, "name": "codeformatter", "full_name": "danquirk/codeformatter", "owner": {"login": "danquirk", "id": 7121557, "avatar_url": "https://avatars2.githubusercontent.com/u/7121557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquirk", "html_url": "https://github.com/danquirk", "followers_url": "https://api.github.com/users/danquirk/followers", "following_url": "https://api.github.com/users/danquirk/following{/other_user}", "gists_url": "https://api.github.com/users/danquirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquirk/subscriptions", "organizations_url": "https://api.github.com/users/danquirk/orgs", "repos_url": "https://api.github.com/users/danquirk/repos", "events_url": "https://api.github.com/users/danquirk/events{/privacy}", "received_events_url": "https://api.github.com/users/danquirk/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/danquirk/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/danquirk/codeformatter", "forks_url": "https://api.github.com/repos/danquirk/codeformatter/forks", "keys_url": "https://api.github.com/repos/danquirk/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/danquirk/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/danquirk/codeformatter/teams", "hooks_url": "https://api.github.com/repos/danquirk/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/danquirk/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/danquirk/codeformatter/events", "assignees_url": "https://api.github.com/repos/danquirk/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/danquirk/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/danquirk/codeformatter/tags", "blobs_url": "https://api.github.com/repos/danquirk/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/danquirk/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/danquirk/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/danquirk/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/danquirk/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/danquirk/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/danquirk/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/danquirk/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/danquirk/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/danquirk/codeformatter/subscription", "commits_url": "https://api.github.com/repos/danquirk/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/danquirk/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/danquirk/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/danquirk/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/danquirk/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/danquirk/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/danquirk/codeformatter/merges", "archive_url": "https://api.github.com/repos/danquirk/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/danquirk/codeformatter/downloads", "issues_url": "https://api.github.com/repos/danquirk/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/danquirk/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/danquirk/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/danquirk/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/danquirk/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/danquirk/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/danquirk/codeformatter/deployments", "created_at": "2016-02-19T22:26:20Z", "updated_at": "2016-02-19T22:26:21Z", "pushed_at": "2016-06-30T01:46:12Z", "git_url": "git://github.com/danquirk/codeformatter.git", "ssh_url": "git@github.com:danquirk/codeformatter.git", "clone_url": "https://github.com/danquirk/codeformatter.git", "svn_url": "https://github.com/danquirk/codeformatter", "homepage": "", "size": 944, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:anfix", "ref": "anfix", "sha": "5f5ba39b4c87205dbdabc9af781d1bbb335241ad", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/238"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/238"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/238"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/238/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/238/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/238/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/eeb3a9b142a1498f16ce35494d5db017a90f540c"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/237", "id": 74014062, "html_url": "https://github.com/dotnet/codeformatter/pull/237", "diff_url": "https://github.com/dotnet/codeformatter/pull/237.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/237.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/237", "number": 237, "state": "open", "locked": false, "title": "Upgrade Codeformatter to Roslyn 1.3-beta1", "user": {"login": "danquirk", "id": 7121557, "avatar_url": "https://avatars2.githubusercontent.com/u/7121557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquirk", "html_url": "https://github.com/danquirk", "followers_url": "https://api.github.com/users/danquirk/followers", "following_url": "https://api.github.com/users/danquirk/following{/other_user}", "gists_url": "https://api.github.com/users/danquirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquirk/subscriptions", "organizations_url": "https://api.github.com/users/danquirk/orgs", "repos_url": "https://api.github.com/users/danquirk/repos", "events_url": "https://api.github.com/users/danquirk/events{/privacy}", "received_events_url": "https://api.github.com/users/danquirk/received_events", "type": "User", "site_admin": false}, "body": "Need to upgrade so that we can use the latest ErrorLogger from Roslyn which meets the 1.0 SARIF spec requirements.\n", "created_at": "2016-06-16T02:36:09Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "f1534d827f3dccd342c72791e7af70e99852c643", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/237/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/237/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/237/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/aabc42e224747369a992045f823a2eb2735f693b", "head": {"label": "danquirk:upgradeToRoslyn13", "ref": "upgradeToRoslyn13", "sha": "aabc42e224747369a992045f823a2eb2735f693b", "user": {"login": "danquirk", "id": 7121557, "avatar_url": "https://avatars2.githubusercontent.com/u/7121557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquirk", "html_url": "https://github.com/danquirk", "followers_url": "https://api.github.com/users/danquirk/followers", "following_url": "https://api.github.com/users/danquirk/following{/other_user}", "gists_url": "https://api.github.com/users/danquirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquirk/subscriptions", "organizations_url": "https://api.github.com/users/danquirk/orgs", "repos_url": "https://api.github.com/users/danquirk/repos", "events_url": "https://api.github.com/users/danquirk/events{/privacy}", "received_events_url": "https://api.github.com/users/danquirk/received_events", "type": "User", "site_admin": false}, "repo": {"id": 52120578, "name": "codeformatter", "full_name": "danquirk/codeformatter", "owner": {"login": "danquirk", "id": 7121557, "avatar_url": "https://avatars2.githubusercontent.com/u/7121557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquirk", "html_url": "https://github.com/danquirk", "followers_url": "https://api.github.com/users/danquirk/followers", "following_url": "https://api.github.com/users/danquirk/following{/other_user}", "gists_url": "https://api.github.com/users/danquirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquirk/subscriptions", "organizations_url": "https://api.github.com/users/danquirk/orgs", "repos_url": "https://api.github.com/users/danquirk/repos", "events_url": "https://api.github.com/users/danquirk/events{/privacy}", "received_events_url": "https://api.github.com/users/danquirk/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/danquirk/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/danquirk/codeformatter", "forks_url": "https://api.github.com/repos/danquirk/codeformatter/forks", "keys_url": "https://api.github.com/repos/danquirk/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/danquirk/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/danquirk/codeformatter/teams", "hooks_url": "https://api.github.com/repos/danquirk/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/danquirk/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/danquirk/codeformatter/events", "assignees_url": "https://api.github.com/repos/danquirk/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/danquirk/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/danquirk/codeformatter/tags", "blobs_url": "https://api.github.com/repos/danquirk/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/danquirk/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/danquirk/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/danquirk/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/danquirk/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/danquirk/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/danquirk/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/danquirk/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/danquirk/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/danquirk/codeformatter/subscription", "commits_url": "https://api.github.com/repos/danquirk/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/danquirk/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/danquirk/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/danquirk/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/danquirk/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/danquirk/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/danquirk/codeformatter/merges", "archive_url": "https://api.github.com/repos/danquirk/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/danquirk/codeformatter/downloads", "issues_url": "https://api.github.com/repos/danquirk/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/danquirk/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/danquirk/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/danquirk/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/danquirk/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/danquirk/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/danquirk/codeformatter/deployments", "created_at": "2016-02-19T22:26:20Z", "updated_at": "2016-02-19T22:26:21Z", "pushed_at": "2016-06-30T01:46:12Z", "git_url": "git://github.com/danquirk/codeformatter.git", "ssh_url": "git@github.com:danquirk/codeformatter.git", "clone_url": "https://github.com/danquirk/codeformatter.git", "svn_url": "https://github.com/danquirk/codeformatter", "homepage": "", "size": 944, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:anfix", "ref": "anfix", "sha": "5f5ba39b4c87205dbdabc9af781d1bbb335241ad", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/237"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/237"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/237"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/237/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/237/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/237/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/aabc42e224747369a992045f823a2eb2735f693b"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/233", "id": 70513739, "html_url": "https://github.com/dotnet/codeformatter/pull/233", "diff_url": "https://github.com/dotnet/codeformatter/pull/233.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/233.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/233", "number": 233, "state": "open", "locked": false, "title": "Fix missing MSTestNamespaces.txt in output dir", "user": {"login": "gabrielweyer", "id": 2101647, "avatar_url": "https://avatars2.githubusercontent.com/u/2101647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrielweyer", "html_url": "https://github.com/gabrielweyer", "followers_url": "https://api.github.com/users/gabrielweyer/followers", "following_url": "https://api.github.com/users/gabrielweyer/following{/other_user}", "gists_url": "https://api.github.com/users/gabrielweyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrielweyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrielweyer/subscriptions", "organizations_url": "https://api.github.com/users/gabrielweyer/orgs", "repos_url": "https://api.github.com/users/gabrielweyer/repos", "events_url": "https://api.github.com/users/gabrielweyer/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrielweyer/received_events", "type": "User", "site_admin": false}, "body": "MSTestNamespaces.txt should be copied to output directory if we want to use the tool from command line.\n\nFix #232 \n", "created_at": "2016-05-18T11:49:50Z", "updated_at": "2017-10-31T22:55:14Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "a1a4206fd7f5f842be35c228dd35de07bc2c6b17", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/233/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/233/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/233/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/6eb6cc3f63a3708927524379b4fcd3b67df674a7", "head": {"label": "gabrielweyer:fix-missing-ms-test-namespaces-file", "ref": "fix-missing-ms-test-namespaces-file", "sha": "6eb6cc3f63a3708927524379b4fcd3b67df674a7", "user": {"login": "gabrielweyer", "id": 2101647, "avatar_url": "https://avatars2.githubusercontent.com/u/2101647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrielweyer", "html_url": "https://github.com/gabrielweyer", "followers_url": "https://api.github.com/users/gabrielweyer/followers", "following_url": "https://api.github.com/users/gabrielweyer/following{/other_user}", "gists_url": "https://api.github.com/users/gabrielweyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrielweyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrielweyer/subscriptions", "organizations_url": "https://api.github.com/users/gabrielweyer/orgs", "repos_url": "https://api.github.com/users/gabrielweyer/repos", "events_url": "https://api.github.com/users/gabrielweyer/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrielweyer/received_events", "type": "User", "site_admin": false}, "repo": {"id": 59006169, "name": "codeformatter", "full_name": "gabrielweyer/codeformatter", "owner": {"login": "gabrielweyer", "id": 2101647, "avatar_url": "https://avatars2.githubusercontent.com/u/2101647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrielweyer", "html_url": "https://github.com/gabrielweyer", "followers_url": "https://api.github.com/users/gabrielweyer/followers", "following_url": "https://api.github.com/users/gabrielweyer/following{/other_user}", "gists_url": "https://api.github.com/users/gabrielweyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrielweyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrielweyer/subscriptions", "organizations_url": "https://api.github.com/users/gabrielweyer/orgs", "repos_url": "https://api.github.com/users/gabrielweyer/repos", "events_url": "https://api.github.com/users/gabrielweyer/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrielweyer/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/gabrielweyer/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/gabrielweyer/codeformatter", "forks_url": "https://api.github.com/repos/gabrielweyer/codeformatter/forks", "keys_url": "https://api.github.com/repos/gabrielweyer/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/gabrielweyer/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/gabrielweyer/codeformatter/teams", "hooks_url": "https://api.github.com/repos/gabrielweyer/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/gabrielweyer/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/gabrielweyer/codeformatter/events", "assignees_url": "https://api.github.com/repos/gabrielweyer/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/gabrielweyer/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/gabrielweyer/codeformatter/tags", "blobs_url": "https://api.github.com/repos/gabrielweyer/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/gabrielweyer/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/gabrielweyer/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/gabrielweyer/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/gabrielweyer/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/gabrielweyer/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/gabrielweyer/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/gabrielweyer/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/gabrielweyer/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/gabrielweyer/codeformatter/subscription", "commits_url": "https://api.github.com/repos/gabrielweyer/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/gabrielweyer/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/gabrielweyer/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/gabrielweyer/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/gabrielweyer/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/gabrielweyer/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/gabrielweyer/codeformatter/merges", "archive_url": "https://api.github.com/repos/gabrielweyer/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/gabrielweyer/codeformatter/downloads", "issues_url": "https://api.github.com/repos/gabrielweyer/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/gabrielweyer/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/gabrielweyer/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/gabrielweyer/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/gabrielweyer/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/gabrielweyer/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/gabrielweyer/codeformatter/deployments", "created_at": "2016-05-17T08:52:11Z", "updated_at": "2016-05-17T08:52:14Z", "pushed_at": "2016-05-18T11:49:09Z", "git_url": "git://github.com/gabrielweyer/codeformatter.git", "ssh_url": "git@github.com:gabrielweyer/codeformatter.git", "clone_url": "https://github.com/gabrielweyer/codeformatter.git", "svn_url": "https://github.com/gabrielweyer/codeformatter", "homepage": "", "size": 924, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "6fd15554b0b513c33228877abffb5311409fa39b", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/233"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/233"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/233"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/233/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/233/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/233/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/6eb6cc3f63a3708927524379b4fcd3b67df674a7"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/229", "id": 66511729, "html_url": "https://github.com/dotnet/codeformatter/pull/229", "diff_url": "https://github.com/dotnet/codeformatter/pull/229.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/229.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/229", "number": 229, "state": "open", "locked": false, "title": "Add ability to use tabs", "user": {"login": "michalhosala", "id": 9108373, "avatar_url": "https://avatars0.githubusercontent.com/u/9108373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalhosala", "html_url": "https://github.com/michalhosala", "followers_url": "https://api.github.com/users/michalhosala/followers", "following_url": "https://api.github.com/users/michalhosala/following{/other_user}", "gists_url": "https://api.github.com/users/michalhosala/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalhosala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalhosala/subscriptions", "organizations_url": "https://api.github.com/users/michalhosala/orgs", "repos_url": "https://api.github.com/users/michalhosala/repos", "events_url": "https://api.github.com/users/michalhosala/events{/privacy}", "received_events_url": "https://api.github.com/users/michalhosala/received_events", "type": "User", "site_admin": false}, "body": "Added functionality which addresses issue #174, i.e. ability to use tabs instead of spaces during formatting. New command line switch /usetabs was introduced for this purpose.\n", "created_at": "2016-04-14T16:11:29Z", "updated_at": "2017-10-31T22:55:15Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "4a1a9d5d8123b88d3bad3a75463e1e0b0724dec7", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/229/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/229/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/229/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/b214e8bdfe3926daf28ff94604bf4078de04f813", "head": {"label": "michalhosala:add-tabs-support", "ref": "add-tabs-support", "sha": "b214e8bdfe3926daf28ff94604bf4078de04f813", "user": {"login": "michalhosala", "id": 9108373, "avatar_url": "https://avatars0.githubusercontent.com/u/9108373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalhosala", "html_url": "https://github.com/michalhosala", "followers_url": "https://api.github.com/users/michalhosala/followers", "following_url": "https://api.github.com/users/michalhosala/following{/other_user}", "gists_url": "https://api.github.com/users/michalhosala/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalhosala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalhosala/subscriptions", "organizations_url": "https://api.github.com/users/michalhosala/orgs", "repos_url": "https://api.github.com/users/michalhosala/repos", "events_url": "https://api.github.com/users/michalhosala/events{/privacy}", "received_events_url": "https://api.github.com/users/michalhosala/received_events", "type": "User", "site_admin": false}, "repo": {"id": 56232307, "name": "codeformatter", "full_name": "michalhosala/codeformatter", "owner": {"login": "michalhosala", "id": 9108373, "avatar_url": "https://avatars0.githubusercontent.com/u/9108373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalhosala", "html_url": "https://github.com/michalhosala", "followers_url": "https://api.github.com/users/michalhosala/followers", "following_url": "https://api.github.com/users/michalhosala/following{/other_user}", "gists_url": "https://api.github.com/users/michalhosala/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalhosala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalhosala/subscriptions", "organizations_url": "https://api.github.com/users/michalhosala/orgs", "repos_url": "https://api.github.com/users/michalhosala/repos", "events_url": "https://api.github.com/users/michalhosala/events{/privacy}", "received_events_url": "https://api.github.com/users/michalhosala/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/michalhosala/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/michalhosala/codeformatter", "forks_url": "https://api.github.com/repos/michalhosala/codeformatter/forks", "keys_url": "https://api.github.com/repos/michalhosala/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/michalhosala/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/michalhosala/codeformatter/teams", "hooks_url": "https://api.github.com/repos/michalhosala/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/michalhosala/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/michalhosala/codeformatter/events", "assignees_url": "https://api.github.com/repos/michalhosala/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/michalhosala/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/michalhosala/codeformatter/tags", "blobs_url": "https://api.github.com/repos/michalhosala/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/michalhosala/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/michalhosala/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/michalhosala/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/michalhosala/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/michalhosala/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/michalhosala/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/michalhosala/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/michalhosala/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/michalhosala/codeformatter/subscription", "commits_url": "https://api.github.com/repos/michalhosala/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/michalhosala/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/michalhosala/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/michalhosala/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/michalhosala/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/michalhosala/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/michalhosala/codeformatter/merges", "archive_url": "https://api.github.com/repos/michalhosala/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/michalhosala/codeformatter/downloads", "issues_url": "https://api.github.com/repos/michalhosala/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/michalhosala/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/michalhosala/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/michalhosala/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/michalhosala/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/michalhosala/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/michalhosala/codeformatter/deployments", "created_at": "2016-04-14T11:35:22Z", "updated_at": "2016-04-14T11:35:23Z", "pushed_at": "2016-04-14T16:07:30Z", "git_url": "git://github.com/michalhosala/codeformatter.git", "ssh_url": "git@github.com:michalhosala/codeformatter.git", "clone_url": "https://github.com/michalhosala/codeformatter.git", "svn_url": "https://github.com/michalhosala/codeformatter", "homepage": "", "size": 910, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "c86cbedfb2f3959f71a2f6520ed9ddc28c79a376", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/229"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/229"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/229"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/229/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/229/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/229/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/b214e8bdfe3926daf28ff94604bf4078de04f813"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/194", "id": 50019437, "html_url": "https://github.com/dotnet/codeformatter/pull/194", "diff_url": "https://github.com/dotnet/codeformatter/pull/194.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/194.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/194", "number": 194, "state": "open", "locked": false, "title": "Added a rule to remove #region/#endregion directives.", "user": {"login": "jakesays", "id": 1213805, "avatar_url": "https://avatars1.githubusercontent.com/u/1213805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakesays", "html_url": "https://github.com/jakesays", "followers_url": "https://api.github.com/users/jakesays/followers", "following_url": "https://api.github.com/users/jakesays/following{/other_user}", "gists_url": "https://api.github.com/users/jakesays/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakesays/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakesays/subscriptions", "organizations_url": "https://api.github.com/users/jakesays/orgs", "repos_url": "https://api.github.com/users/jakesays/repos", "events_url": "https://api.github.com/users/jakesays/events{/privacy}", "received_events_url": "https://api.github.com/users/jakesays/received_events", "type": "User", "site_admin": false}, "body": "Rule to remove regions.\n", "created_at": "2015-11-06T23:55:24Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "4ea1ffceb0dd75eafb55839846b2f7497b24480c", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/194/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/194/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/194/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/45ebac5f635d82b83356ec379e3119d7658388af", "head": {"label": "jakesays:RegionRemoval", "ref": "RegionRemoval", "sha": "45ebac5f635d82b83356ec379e3119d7658388af", "user": {"login": "jakesays", "id": 1213805, "avatar_url": "https://avatars1.githubusercontent.com/u/1213805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakesays", "html_url": "https://github.com/jakesays", "followers_url": "https://api.github.com/users/jakesays/followers", "following_url": "https://api.github.com/users/jakesays/following{/other_user}", "gists_url": "https://api.github.com/users/jakesays/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakesays/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakesays/subscriptions", "organizations_url": "https://api.github.com/users/jakesays/orgs", "repos_url": "https://api.github.com/users/jakesays/repos", "events_url": "https://api.github.com/users/jakesays/events{/privacy}", "received_events_url": "https://api.github.com/users/jakesays/received_events", "type": "User", "site_admin": false}, "repo": {"id": 45714490, "name": "codeformatter", "full_name": "jakesays/codeformatter", "owner": {"login": "jakesays", "id": 1213805, "avatar_url": "https://avatars1.githubusercontent.com/u/1213805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakesays", "html_url": "https://github.com/jakesays", "followers_url": "https://api.github.com/users/jakesays/followers", "following_url": "https://api.github.com/users/jakesays/following{/other_user}", "gists_url": "https://api.github.com/users/jakesays/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakesays/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakesays/subscriptions", "organizations_url": "https://api.github.com/users/jakesays/orgs", "repos_url": "https://api.github.com/users/jakesays/repos", "events_url": "https://api.github.com/users/jakesays/events{/privacy}", "received_events_url": "https://api.github.com/users/jakesays/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/jakesays/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/jakesays/codeformatter", "forks_url": "https://api.github.com/repos/jakesays/codeformatter/forks", "keys_url": "https://api.github.com/repos/jakesays/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/jakesays/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/jakesays/codeformatter/teams", "hooks_url": "https://api.github.com/repos/jakesays/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/jakesays/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/jakesays/codeformatter/events", "assignees_url": "https://api.github.com/repos/jakesays/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/jakesays/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/jakesays/codeformatter/tags", "blobs_url": "https://api.github.com/repos/jakesays/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/jakesays/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/jakesays/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/jakesays/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/jakesays/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/jakesays/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/jakesays/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/jakesays/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/jakesays/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/jakesays/codeformatter/subscription", "commits_url": "https://api.github.com/repos/jakesays/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/jakesays/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/jakesays/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/jakesays/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/jakesays/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/jakesays/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/jakesays/codeformatter/merges", "archive_url": "https://api.github.com/repos/jakesays/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/jakesays/codeformatter/downloads", "issues_url": "https://api.github.com/repos/jakesays/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/jakesays/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/jakesays/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/jakesays/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/jakesays/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/jakesays/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/jakesays/codeformatter/deployments", "created_at": "2015-11-06T23:49:45Z", "updated_at": "2015-11-06T23:49:46Z", "pushed_at": "2015-11-07T19:04:10Z", "git_url": "git://github.com/jakesays/codeformatter.git", "ssh_url": "git@github.com:jakesays/codeformatter.git", "clone_url": "https://github.com/jakesays/codeformatter.git", "svn_url": "https://github.com/jakesays/codeformatter", "homepage": "", "size": 846, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "8d049ad1e24cbb0072cd722b40e8ab79e886e669", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/194"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/194"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/194"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/194/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/194/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/194/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/45ebac5f635d82b83356ec379e3119d7658388af"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/186", "id": 47056190, "html_url": "https://github.com/dotnet/codeformatter/pull/186", "diff_url": "https://github.com/dotnet/codeformatter/pull/186.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/186.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/186", "number": 186, "state": "open", "locked": false, "title": "code cleanup in XUnitConverter", "user": {"login": "michha", "id": 10424767, "avatar_url": "https://avatars2.githubusercontent.com/u/10424767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michha", "html_url": "https://github.com/michha", "followers_url": "https://api.github.com/users/michha/followers", "following_url": "https://api.github.com/users/michha/following{/other_user}", "gists_url": "https://api.github.com/users/michha/gists{/gist_id}", "starred_url": "https://api.github.com/users/michha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michha/subscriptions", "organizations_url": "https://api.github.com/users/michha/orgs", "repos_url": "https://api.github.com/users/michha/repos", "events_url": "https://api.github.com/users/michha/events{/privacy}", "received_events_url": "https://api.github.com/users/michha/received_events", "type": "User", "site_admin": false}, "body": "- using statements\n- static methods when possible\n- ...\n", "created_at": "2015-10-07T17:21:57Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "68b946409e2f24a3d522dd5da71b6cbd48def437", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/186/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/186/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/186/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/0bfb9e2ef9626990f1bb3beb77d4132dae16d1fb", "head": {"label": "michha:code-cleanup", "ref": "code-cleanup", "sha": "0bfb9e2ef9626990f1bb3beb77d4132dae16d1fb", "user": {"login": "michha", "id": 10424767, "avatar_url": "https://avatars2.githubusercontent.com/u/10424767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michha", "html_url": "https://github.com/michha", "followers_url": "https://api.github.com/users/michha/followers", "following_url": "https://api.github.com/users/michha/following{/other_user}", "gists_url": "https://api.github.com/users/michha/gists{/gist_id}", "starred_url": "https://api.github.com/users/michha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michha/subscriptions", "organizations_url": "https://api.github.com/users/michha/orgs", "repos_url": "https://api.github.com/users/michha/repos", "events_url": "https://api.github.com/users/michha/events{/privacy}", "received_events_url": "https://api.github.com/users/michha/received_events", "type": "User", "site_admin": false}, "repo": {"id": 43831587, "name": "codeformatter", "full_name": "michha/codeformatter", "owner": {"login": "michha", "id": 10424767, "avatar_url": "https://avatars2.githubusercontent.com/u/10424767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michha", "html_url": "https://github.com/michha", "followers_url": "https://api.github.com/users/michha/followers", "following_url": "https://api.github.com/users/michha/following{/other_user}", "gists_url": "https://api.github.com/users/michha/gists{/gist_id}", "starred_url": "https://api.github.com/users/michha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michha/subscriptions", "organizations_url": "https://api.github.com/users/michha/orgs", "repos_url": "https://api.github.com/users/michha/repos", "events_url": "https://api.github.com/users/michha/events{/privacy}", "received_events_url": "https://api.github.com/users/michha/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/michha/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/michha/codeformatter", "forks_url": "https://api.github.com/repos/michha/codeformatter/forks", "keys_url": "https://api.github.com/repos/michha/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/michha/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/michha/codeformatter/teams", "hooks_url": "https://api.github.com/repos/michha/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/michha/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/michha/codeformatter/events", "assignees_url": "https://api.github.com/repos/michha/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/michha/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/michha/codeformatter/tags", "blobs_url": "https://api.github.com/repos/michha/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/michha/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/michha/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/michha/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/michha/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/michha/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/michha/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/michha/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/michha/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/michha/codeformatter/subscription", "commits_url": "https://api.github.com/repos/michha/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/michha/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/michha/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/michha/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/michha/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/michha/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/michha/codeformatter/merges", "archive_url": "https://api.github.com/repos/michha/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/michha/codeformatter/downloads", "issues_url": "https://api.github.com/repos/michha/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/michha/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/michha/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/michha/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/michha/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/michha/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/michha/codeformatter/deployments", "created_at": "2015-10-07T17:10:40Z", "updated_at": "2015-10-07T17:10:41Z", "pushed_at": "2015-10-07T17:21:07Z", "git_url": "git://github.com/michha/codeformatter.git", "ssh_url": "git@github.com:michha/codeformatter.git", "clone_url": "https://github.com/michha/codeformatter.git", "svn_url": "https://github.com/michha/codeformatter", "homepage": "", "size": 837, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "6fb92f523cda163c1a7a00eb69636159080a0c66", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/186"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/186"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/186"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/186/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/186/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/186/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/0bfb9e2ef9626990f1bb3beb77d4132dae16d1fb"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/127", "id": 36549397, "html_url": "https://github.com/dotnet/codeformatter/pull/127", "diff_url": "https://github.com/dotnet/codeformatter/pull/127.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/127.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/127", "number": 127, "state": "open", "locked": false, "title": "Add code formatting rule to add newlines at the end of code files", "user": {"login": "dsplaisted", "id": 145043, "avatar_url": "https://avatars3.githubusercontent.com/u/145043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsplaisted", "html_url": "https://github.com/dsplaisted", "followers_url": "https://api.github.com/users/dsplaisted/followers", "following_url": "https://api.github.com/users/dsplaisted/following{/other_user}", "gists_url": "https://api.github.com/users/dsplaisted/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsplaisted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsplaisted/subscriptions", "organizations_url": "https://api.github.com/users/dsplaisted/orgs", "repos_url": "https://api.github.com/users/dsplaisted/repos", "events_url": "https://api.github.com/users/dsplaisted/events{/privacy}", "received_events_url": "https://api.github.com/users/dsplaisted/received_events", "type": "User", "site_admin": false}, "body": "@stephentoub has [pointed out](https://github.com/dotnet/corefx/pull/1851#discussion_r31315254) that text files should end with a newline.  This PR adds a code formatting rule to do this for C# source code files.\n", "created_at": "2015-05-29T22:07:09Z", "updated_at": "2017-10-31T22:55:13Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "71dcfed4d23947d7fa45f624b7907a7f9f12dfe4", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/127/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/127/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/127/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/0f6a404e199f0547a171f33cebeb215a3acd5e33", "head": {"label": "dsplaisted:NewlineRule", "ref": "NewlineRule", "sha": "0f6a404e199f0547a171f33cebeb215a3acd5e33", "user": {"login": "dsplaisted", "id": 145043, "avatar_url": "https://avatars3.githubusercontent.com/u/145043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsplaisted", "html_url": "https://github.com/dsplaisted", "followers_url": "https://api.github.com/users/dsplaisted/followers", "following_url": "https://api.github.com/users/dsplaisted/following{/other_user}", "gists_url": "https://api.github.com/users/dsplaisted/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsplaisted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsplaisted/subscriptions", "organizations_url": "https://api.github.com/users/dsplaisted/orgs", "repos_url": "https://api.github.com/users/dsplaisted/repos", "events_url": "https://api.github.com/users/dsplaisted/events{/privacy}", "received_events_url": "https://api.github.com/users/dsplaisted/received_events", "type": "User", "site_admin": false}, "repo": {"id": 36531269, "name": "codeformatter", "full_name": "dsplaisted/codeformatter", "owner": {"login": "dsplaisted", "id": 145043, "avatar_url": "https://avatars3.githubusercontent.com/u/145043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsplaisted", "html_url": "https://github.com/dsplaisted", "followers_url": "https://api.github.com/users/dsplaisted/followers", "following_url": "https://api.github.com/users/dsplaisted/following{/other_user}", "gists_url": "https://api.github.com/users/dsplaisted/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsplaisted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsplaisted/subscriptions", "organizations_url": "https://api.github.com/users/dsplaisted/orgs", "repos_url": "https://api.github.com/users/dsplaisted/repos", "events_url": "https://api.github.com/users/dsplaisted/events{/privacy}", "received_events_url": "https://api.github.com/users/dsplaisted/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/dsplaisted/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/dsplaisted/codeformatter", "forks_url": "https://api.github.com/repos/dsplaisted/codeformatter/forks", "keys_url": "https://api.github.com/repos/dsplaisted/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dsplaisted/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dsplaisted/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dsplaisted/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dsplaisted/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dsplaisted/codeformatter/events", "assignees_url": "https://api.github.com/repos/dsplaisted/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dsplaisted/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dsplaisted/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dsplaisted/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dsplaisted/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dsplaisted/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dsplaisted/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dsplaisted/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dsplaisted/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dsplaisted/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dsplaisted/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dsplaisted/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dsplaisted/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dsplaisted/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dsplaisted/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dsplaisted/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dsplaisted/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dsplaisted/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dsplaisted/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dsplaisted/codeformatter/merges", "archive_url": "https://api.github.com/repos/dsplaisted/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dsplaisted/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dsplaisted/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dsplaisted/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dsplaisted/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dsplaisted/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dsplaisted/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dsplaisted/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dsplaisted/codeformatter/deployments", "created_at": "2015-05-29T21:57:38Z", "updated_at": "2015-05-29T21:57:39Z", "pushed_at": "2015-06-02T17:50:03Z", "git_url": "git://github.com/dsplaisted/codeformatter.git", "ssh_url": "git@github.com:dsplaisted/codeformatter.git", "clone_url": "https://github.com/dsplaisted/codeformatter.git", "svn_url": "https://github.com/dsplaisted/codeformatter", "homepage": "", "size": 641, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "3a168513dc570d78bc6f90a48b928793e10d3669", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/127"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/127"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/127"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/127/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/127/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/127/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/0f6a404e199f0547a171f33cebeb215a3acd5e33"}}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/101", "id": 31989818, "html_url": "https://github.com/dotnet/codeformatter/pull/101", "diff_url": "https://github.com/dotnet/codeformatter/pull/101.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/101.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/101", "number": 101, "state": "open", "locked": false, "title": "Add rule to remove unused usings.", "user": {"login": "david-mitchell", "id": 540554, "avatar_url": "https://avatars3.githubusercontent.com/u/540554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-mitchell", "html_url": "https://github.com/david-mitchell", "followers_url": "https://api.github.com/users/david-mitchell/followers", "following_url": "https://api.github.com/users/david-mitchell/following{/other_user}", "gists_url": "https://api.github.com/users/david-mitchell/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-mitchell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-mitchell/subscriptions", "organizations_url": "https://api.github.com/users/david-mitchell/orgs", "repos_url": "https://api.github.com/users/david-mitchell/repos", "events_url": "https://api.github.com/users/david-mitchell/events{/privacy}", "received_events_url": "https://api.github.com/users/david-mitchell/received_events", "type": "User", "site_admin": false}, "body": "This pull request adds a rule to remove unused using directives from the beginning of source files. It addresses issue #79.\n", "created_at": "2015-03-26T05:12:14Z", "updated_at": "2017-10-31T22:55:15Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "de8085e4edd91e86b493eaa2c799c09cb7ee53bf", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/101/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/101/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/101/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/18e235800fff5de473db10da929bcf1c6552d745", "head": {"label": "david-mitchell:unused-usings-79", "ref": "unused-usings-79", "sha": "18e235800fff5de473db10da929bcf1c6552d745", "user": {"login": "david-mitchell", "id": 540554, "avatar_url": "https://avatars3.githubusercontent.com/u/540554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-mitchell", "html_url": "https://github.com/david-mitchell", "followers_url": "https://api.github.com/users/david-mitchell/followers", "following_url": "https://api.github.com/users/david-mitchell/following{/other_user}", "gists_url": "https://api.github.com/users/david-mitchell/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-mitchell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-mitchell/subscriptions", "organizations_url": "https://api.github.com/users/david-mitchell/orgs", "repos_url": "https://api.github.com/users/david-mitchell/repos", "events_url": "https://api.github.com/users/david-mitchell/events{/privacy}", "received_events_url": "https://api.github.com/users/david-mitchell/received_events", "type": "User", "site_admin": false}, "repo": {"id": 32908573, "name": "codeformatter", "full_name": "david-mitchell/codeformatter", "owner": {"login": "david-mitchell", "id": 540554, "avatar_url": "https://avatars3.githubusercontent.com/u/540554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-mitchell", "html_url": "https://github.com/david-mitchell", "followers_url": "https://api.github.com/users/david-mitchell/followers", "following_url": "https://api.github.com/users/david-mitchell/following{/other_user}", "gists_url": "https://api.github.com/users/david-mitchell/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-mitchell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-mitchell/subscriptions", "organizations_url": "https://api.github.com/users/david-mitchell/orgs", "repos_url": "https://api.github.com/users/david-mitchell/repos", "events_url": "https://api.github.com/users/david-mitchell/events{/privacy}", "received_events_url": "https://api.github.com/users/david-mitchell/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/david-mitchell/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/david-mitchell/codeformatter", "forks_url": "https://api.github.com/repos/david-mitchell/codeformatter/forks", "keys_url": "https://api.github.com/repos/david-mitchell/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/david-mitchell/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/david-mitchell/codeformatter/teams", "hooks_url": "https://api.github.com/repos/david-mitchell/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/david-mitchell/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/david-mitchell/codeformatter/events", "assignees_url": "https://api.github.com/repos/david-mitchell/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/david-mitchell/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/david-mitchell/codeformatter/tags", "blobs_url": "https://api.github.com/repos/david-mitchell/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/david-mitchell/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/david-mitchell/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/david-mitchell/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/david-mitchell/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/david-mitchell/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/david-mitchell/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/david-mitchell/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/david-mitchell/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/david-mitchell/codeformatter/subscription", "commits_url": "https://api.github.com/repos/david-mitchell/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/david-mitchell/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/david-mitchell/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/david-mitchell/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/david-mitchell/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/david-mitchell/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/david-mitchell/codeformatter/merges", "archive_url": "https://api.github.com/repos/david-mitchell/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/david-mitchell/codeformatter/downloads", "issues_url": "https://api.github.com/repos/david-mitchell/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/david-mitchell/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/david-mitchell/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/david-mitchell/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/david-mitchell/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/david-mitchell/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/david-mitchell/codeformatter/deployments", "created_at": "2015-03-26T05:05:44Z", "updated_at": "2016-04-02T00:35:14Z", "pushed_at": "2016-04-02T00:36:14Z", "git_url": "git://github.com/david-mitchell/codeformatter.git", "ssh_url": "git@github.com:david-mitchell/codeformatter.git", "clone_url": "https://github.com/david-mitchell/codeformatter.git", "svn_url": "https://github.com/david-mitchell/codeformatter", "homepage": "", "size": 575, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "7df8bd66e117cff8ceee69d2251c485b81e5d474", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/101"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/101"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/101"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/101/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/101/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/101/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/18e235800fff5de473db10da929bcf1c6552d745"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "id": 30693520, "html_url": "https://github.com/dotnet/codeformatter/pull/93", "diff_url": "https://github.com/dotnet/codeformatter/pull/93.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/93.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/93", "number": 93, "state": "open", "locked": false, "title": "Add an option to run CodeFormatter on all projects/solutions within a directory.", "user": {"login": "AlekseyTs", "id": 10522107, "avatar_url": "https://avatars0.githubusercontent.com/u/10522107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlekseyTs", "html_url": "https://github.com/AlekseyTs", "followers_url": "https://api.github.com/users/AlekseyTs/followers", "following_url": "https://api.github.com/users/AlekseyTs/following{/other_user}", "gists_url": "https://api.github.com/users/AlekseyTs/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlekseyTs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlekseyTs/subscriptions", "organizations_url": "https://api.github.com/users/AlekseyTs/orgs", "repos_url": "https://api.github.com/users/AlekseyTs/repos", "events_url": "https://api.github.com/users/AlekseyTs/events{/privacy}", "received_events_url": "https://api.github.com/users/AlekseyTs/received_events", "type": "User", "site_admin": false}, "body": "Allow to specify a directory instead of a project/solution. \n", "created_at": "2015-03-07T01:10:06Z", "updated_at": "2017-10-31T22:55:14Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "3fecf0b39936a1bb3dfa1ba69162b3bd5b1da205", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/93/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/5da76f48f1c311294e247f6ce614d1be3bf6287c", "head": {"label": "AlekseyTs:RunOnFolder", "ref": "RunOnFolder", "sha": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "user": {"login": "AlekseyTs", "id": 10522107, "avatar_url": "https://avatars0.githubusercontent.com/u/10522107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlekseyTs", "html_url": "https://github.com/AlekseyTs", "followers_url": "https://api.github.com/users/AlekseyTs/followers", "following_url": "https://api.github.com/users/AlekseyTs/following{/other_user}", "gists_url": "https://api.github.com/users/AlekseyTs/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlekseyTs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlekseyTs/subscriptions", "organizations_url": "https://api.github.com/users/AlekseyTs/orgs", "repos_url": "https://api.github.com/users/AlekseyTs/repos", "events_url": "https://api.github.com/users/AlekseyTs/events{/privacy}", "received_events_url": "https://api.github.com/users/AlekseyTs/received_events", "type": "User", "site_admin": false}, "repo": {"id": 31795049, "name": "codeformatter", "full_name": "AlekseyTs/codeformatter", "owner": {"login": "AlekseyTs", "id": 10522107, "avatar_url": "https://avatars0.githubusercontent.com/u/10522107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlekseyTs", "html_url": "https://github.com/AlekseyTs", "followers_url": "https://api.github.com/users/AlekseyTs/followers", "following_url": "https://api.github.com/users/AlekseyTs/following{/other_user}", "gists_url": "https://api.github.com/users/AlekseyTs/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlekseyTs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlekseyTs/subscriptions", "organizations_url": "https://api.github.com/users/AlekseyTs/orgs", "repos_url": "https://api.github.com/users/AlekseyTs/repos", "events_url": "https://api.github.com/users/AlekseyTs/events{/privacy}", "received_events_url": "https://api.github.com/users/AlekseyTs/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/AlekseyTs/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": true, "url": "https://api.github.com/repos/AlekseyTs/codeformatter", "forks_url": "https://api.github.com/repos/AlekseyTs/codeformatter/forks", "keys_url": "https://api.github.com/repos/AlekseyTs/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/AlekseyTs/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/AlekseyTs/codeformatter/teams", "hooks_url": "https://api.github.com/repos/AlekseyTs/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/AlekseyTs/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/AlekseyTs/codeformatter/events", "assignees_url": "https://api.github.com/repos/AlekseyTs/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/AlekseyTs/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/AlekseyTs/codeformatter/tags", "blobs_url": "https://api.github.com/repos/AlekseyTs/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/AlekseyTs/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/AlekseyTs/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/AlekseyTs/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/AlekseyTs/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/AlekseyTs/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/AlekseyTs/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/AlekseyTs/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/AlekseyTs/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/AlekseyTs/codeformatter/subscription", "commits_url": "https://api.github.com/repos/AlekseyTs/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/AlekseyTs/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/AlekseyTs/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/AlekseyTs/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/AlekseyTs/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/AlekseyTs/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/AlekseyTs/codeformatter/merges", "archive_url": "https://api.github.com/repos/AlekseyTs/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/AlekseyTs/codeformatter/downloads", "issues_url": "https://api.github.com/repos/AlekseyTs/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/AlekseyTs/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/AlekseyTs/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/AlekseyTs/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/AlekseyTs/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/AlekseyTs/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/AlekseyTs/codeformatter/deployments", "created_at": "2015-03-07T00:17:10Z", "updated_at": "2015-03-07T00:17:11Z", "pushed_at": "2015-03-07T01:05:59Z", "git_url": "git://github.com/AlekseyTs/codeformatter.git", "ssh_url": "git@github.com:AlekseyTs/codeformatter.git", "clone_url": "https://github.com/AlekseyTs/codeformatter.git", "svn_url": "https://github.com/AlekseyTs/codeformatter", "homepage": "", "size": 600, "stargazers_count": 0, "watchers_count": 0, "language": "C#", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "427bc11cb28f7d3f8353c951a0290a93ce1b4974", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/93"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/93"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/93/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/5da76f48f1c311294e247f6ce614d1be3bf6287c"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64", "id": 29340996, "html_url": "https://github.com/dotnet/codeformatter/pull/64", "diff_url": "https://github.com/dotnet/codeformatter/pull/64.diff", "patch_url": "https://github.com/dotnet/codeformatter/pull/64.patch", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/64", "number": 64, "state": "open", "locked": false, "title": "Add rules for formatting attributes", "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "body": "This adds two additional rules for dealing with attributes:\n### Removing superfluous parentheses\n\nIt's conventional to omit parentheses when the attribute doesn't take any arguments, for example:\n\n``` CSharp\n[target: SomeAtt()]\n```\n\nbecomes\n\n``` CSharp\n[target: SomeAtt]\n```\n### Separating attribute lists\n\nMost folks only use a single attribute in an attribute list, although the syntax supports multiple attributes. In most cases, putting attributes in separate lists is beneficial because it improves readability and allows better diffs.\n\nThis changes code like this:\n\n``` CSharp\n[Serializable, Category(\"Catagory\"), DefaultValue(1)]\n```\n\nto \n\n``` CSharp\n[Serializable]\n[Category(\"Catagory\")]\n[DefaultValue(1)]\n```\n\nThe only exception are attributes for parameters. In interop code, it's quite common to mark parameters with `[In]` and `[Out]`. Since the attributes are usually written inline, i.e. not on separate lines, it's actually beneficial to no split them into separate lists.\n\nThis means that code like this is left as-is:\n\n``` CSharp\nvoid NativeFun([In, Out] int* target)\n```\n", "created_at": "2015-02-15T21:06:45Z", "updated_at": "2017-10-31T22:55:14Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "609d258cd81b5b98f3d1bec5d3f8464b0b7d4c0f", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64/commits", "review_comments_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64/comments", "review_comment_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/issues/64/comments", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "head": {"label": "dotnet:attributes", "ref": "attributes", "sha": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "base": {"label": "dotnet:master", "ref": "master", "sha": "c9490f1d6f6696c374f7106f70ad62613ebe8a77", "user": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 28896487, "name": "codeformatter", "full_name": "dotnet/codeformatter", "owner": {"login": "dotnet", "id": 9141961, "avatar_url": "https://avatars0.githubusercontent.com/u/9141961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotnet", "html_url": "https://github.com/dotnet", "followers_url": "https://api.github.com/users/dotnet/followers", "following_url": "https://api.github.com/users/dotnet/following{/other_user}", "gists_url": "https://api.github.com/users/dotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotnet/subscriptions", "organizations_url": "https://api.github.com/users/dotnet/orgs", "repos_url": "https://api.github.com/users/dotnet/repos", "events_url": "https://api.github.com/users/dotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/dotnet/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/dotnet/codeformatter", "description": "Tool that uses Roslyn to automatically rewrite the source to follow our coding styles", "fork": false, "url": "https://api.github.com/repos/dotnet/codeformatter", "forks_url": "https://api.github.com/repos/dotnet/codeformatter/forks", "keys_url": "https://api.github.com/repos/dotnet/codeformatter/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/dotnet/codeformatter/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/dotnet/codeformatter/teams", "hooks_url": "https://api.github.com/repos/dotnet/codeformatter/hooks", "issue_events_url": "https://api.github.com/repos/dotnet/codeformatter/issues/events{/number}", "events_url": "https://api.github.com/repos/dotnet/codeformatter/events", "assignees_url": "https://api.github.com/repos/dotnet/codeformatter/assignees{/user}", "branches_url": "https://api.github.com/repos/dotnet/codeformatter/branches{/branch}", "tags_url": "https://api.github.com/repos/dotnet/codeformatter/tags", "blobs_url": "https://api.github.com/repos/dotnet/codeformatter/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/dotnet/codeformatter/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/dotnet/codeformatter/git/refs{/sha}", "trees_url": "https://api.github.com/repos/dotnet/codeformatter/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/dotnet/codeformatter/statuses/{sha}", "languages_url": "https://api.github.com/repos/dotnet/codeformatter/languages", "stargazers_url": "https://api.github.com/repos/dotnet/codeformatter/stargazers", "contributors_url": "https://api.github.com/repos/dotnet/codeformatter/contributors", "subscribers_url": "https://api.github.com/repos/dotnet/codeformatter/subscribers", "subscription_url": "https://api.github.com/repos/dotnet/codeformatter/subscription", "commits_url": "https://api.github.com/repos/dotnet/codeformatter/commits{/sha}", "git_commits_url": "https://api.github.com/repos/dotnet/codeformatter/git/commits{/sha}", "comments_url": "https://api.github.com/repos/dotnet/codeformatter/comments{/number}", "issue_comment_url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments{/number}", "contents_url": "https://api.github.com/repos/dotnet/codeformatter/contents/{+path}", "compare_url": "https://api.github.com/repos/dotnet/codeformatter/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/dotnet/codeformatter/merges", "archive_url": "https://api.github.com/repos/dotnet/codeformatter/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/dotnet/codeformatter/downloads", "issues_url": "https://api.github.com/repos/dotnet/codeformatter/issues{/number}", "pulls_url": "https://api.github.com/repos/dotnet/codeformatter/pulls{/number}", "milestones_url": "https://api.github.com/repos/dotnet/codeformatter/milestones{/number}", "notifications_url": "https://api.github.com/repos/dotnet/codeformatter/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/dotnet/codeformatter/labels{/name}", "releases_url": "https://api.github.com/repos/dotnet/codeformatter/releases{/id}", "deployments_url": "https://api.github.com/repos/dotnet/codeformatter/deployments", "created_at": "2015-01-07T03:28:44Z", "updated_at": "2018-01-22T22:44:44Z", "pushed_at": "2017-12-15T21:04:11Z", "git_url": "git://github.com/dotnet/codeformatter.git", "ssh_url": "git@github.com:dotnet/codeformatter.git", "clone_url": "https://github.com/dotnet/codeformatter.git", "svn_url": "https://github.com/dotnet/codeformatter", "homepage": "", "size": 941, "stargazers_count": 842, "watchers_count": 842, "language": "C#", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 194, "mirror_url": null, "archived": false, "open_issues_count": 94, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit"}, "forks": 194, "open_issues": 94, "watchers": 842, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/64"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/64"}, "issue": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/64"}, "comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/issues/64/comments"}, "review_comments": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/64/comments"}, "review_comment": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/64/commits"}, "statuses": {"href": "https://api.github.com/repos/dotnet/codeformatter/statuses/0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09"}}, "author_association": "OWNER"}], "issue_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043373", "html_url": "https://github.com/dotnet/codeformatter/pull/1#issuecomment-69043373", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/1", "id": 69043373, "user": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T16:04:53Z", "updated_at": "2015-01-07T16:04:53Z", "author_association": "MEMBER", "body": "LGTM.  But maybe add a link (e.g. http://www.visualstudio.com/en-us/downloads/visual-studio-2015-downloads-vs.aspx) for VS2015 Preview so that folks can easily download it if desired?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043582", "html_url": "https://github.com/dotnet/codeformatter/pull/2#issuecomment-69043582", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/2", "id": 69043582, "user": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T16:06:10Z", "updated_at": "2015-01-07T16:06:10Z", "author_association": "MEMBER", "body": "Very meta :smile: LGTM.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043686", "html_url": "https://github.com/dotnet/codeformatter/pull/1#issuecomment-69043686", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/1", "id": 69043686, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T16:06:46Z", "updated_at": "2015-01-07T16:06:46Z", "author_association": "MEMBER", "body": "@stephentoub That link is in the change.  Are you wanting me to put it in there in expanded form?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043698", "html_url": "https://github.com/dotnet/codeformatter/pull/1#issuecomment-69043698", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/1", "id": 69043698, "user": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T16:06:50Z", "updated_at": "2015-01-07T16:06:50Z", "author_association": "MEMBER", "body": "Ugh, nevermind, you already have one :smile:\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043814", "html_url": "https://github.com/dotnet/codeformatter/pull/1#issuecomment-69043814", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/1", "id": 69043814, "user": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T16:07:28Z", "updated_at": "2015-01-07T16:07:28Z", "author_association": "MEMBER", "body": "@jaredpar, nope, sorry, I completely missed it... I didn't read carefully enough and thought the link was just for the tools, not for all of VS.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69043814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69062197", "html_url": "https://github.com/dotnet/codeformatter/pull/2#issuecomment-69062197", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/2", "id": 69062197, "user": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T17:56:55Z", "updated_at": "2015-01-07T17:56:55Z", "author_association": "MEMBER", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69062197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107013", "html_url": "https://github.com/dotnet/codeformatter/issues/7#issuecomment-69107013", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/7", "id": 69107013, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T22:49:47Z", "updated_at": "2015-01-07T22:49:47Z", "author_association": "MEMBER", "body": "+1 \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107112", "html_url": "https://github.com/dotnet/codeformatter/issues/7#issuecomment-69107112", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/7", "id": 69107112, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T22:50:35Z", "updated_at": "2015-01-07T22:50:35Z", "author_association": "CONTRIBUTOR", "body": "@jaredpar I will do this, if you'd like.  I suspect you're the only other one with stuff in flight right now that would need to deal with merges.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107125", "html_url": "https://github.com/dotnet/codeformatter/issues/7#issuecomment-69107125", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/7", "id": 69107125, "user": {"login": "FiveTimesTheFun", "id": 6598317, "avatar_url": "https://avatars2.githubusercontent.com/u/6598317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FiveTimesTheFun", "html_url": "https://github.com/FiveTimesTheFun", "followers_url": "https://api.github.com/users/FiveTimesTheFun/followers", "following_url": "https://api.github.com/users/FiveTimesTheFun/following{/other_user}", "gists_url": "https://api.github.com/users/FiveTimesTheFun/gists{/gist_id}", "starred_url": "https://api.github.com/users/FiveTimesTheFun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FiveTimesTheFun/subscriptions", "organizations_url": "https://api.github.com/users/FiveTimesTheFun/orgs", "repos_url": "https://api.github.com/users/FiveTimesTheFun/repos", "events_url": "https://api.github.com/users/FiveTimesTheFun/events{/privacy}", "received_events_url": "https://api.github.com/users/FiveTimesTheFun/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T22:50:39Z", "updated_at": "2015-01-07T22:50:39Z", "author_association": "CONTRIBUTOR", "body": "Concur.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107466", "html_url": "https://github.com/dotnet/codeformatter/issues/4#issuecomment-69107466", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/4", "id": 69107466, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T22:53:28Z", "updated_at": "2015-01-07T22:53:28Z", "author_association": "MEMBER", "body": "This is already enforced by the Roslyn Formatter API. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107667", "html_url": "https://github.com/dotnet/codeformatter/issues/3#issuecomment-69107667", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/3", "id": 69107667, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T22:54:59Z", "updated_at": "2015-01-07T22:54:59Z", "author_association": "MEMBER", "body": "This is already enforced for private fields to explicitly mention if they are private. Is this issue supposed to track this on types and methods as well?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107850", "html_url": "https://github.com/dotnet/codeformatter/issues/6#issuecomment-69107850", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/6", "id": 69107850, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T22:56:28Z", "updated_at": "2015-01-07T22:56:28Z", "author_association": "MEMBER", "body": "All the default VS formatting rules, are enforced by running the RoslynFormatter. Thats the last rule on the tool, IsFormattedFormattingRule..\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69107850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69108031", "html_url": "https://github.com/dotnet/codeformatter/issues/3#issuecomment-69108031", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/3", "id": 69108031, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T22:57:56Z", "updated_at": "2015-01-07T22:57:56Z", "author_association": "MEMBER", "body": "@Priya91 yes.  The guideline is meant for all members and types.  I expanded on the existing implementation to include all members. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69108031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69108157", "html_url": "https://github.com/dotnet/codeformatter/issues/7#issuecomment-69108157", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/7", "id": 69108157, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T22:58:54Z", "updated_at": "2015-01-07T22:58:54Z", "author_association": "MEMBER", "body": "@ellismg the only change i have in flight ATM is the PR.  So if you approve / merge that then this could be changed with 0 interference ;) \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69108157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69109036", "html_url": "https://github.com/dotnet/codeformatter/issues/4#issuecomment-69109036", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/4", "id": 69109036, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:05:56Z", "updated_at": "2015-01-07T23:05:56Z", "author_association": "MEMBER", "body": "@Priya91 nice.  Didn't realize the Roslyn formatter actually did that.  \n\nTook a quick look at the tests and there were a couple of scenarios that I wanted to add coverage for.  Will keep this issue open to cover those tests. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69109036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69109128", "html_url": "https://github.com/dotnet/codeformatter/issues/6#issuecomment-69109128", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/6", "id": 69109128, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:06:38Z", "updated_at": "2015-01-07T23:06:38Z", "author_association": "MEMBER", "body": "@Priya91 neat!  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69109128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110657", "html_url": "https://github.com/dotnet/codeformatter/issues/9#issuecomment-69110657", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/9", "id": 69110657, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:19:59Z", "updated_at": "2015-01-07T23:19:59Z", "author_association": "MEMBER", "body": "Having Dev14 installed is not a requirement.  The only requirement is having the Dev14 build tools installed (added to readme this morning).  \n\nI've been developing this project all morning on a machine with only 2013 installed.  If build.cmd forces Dev14 to be installed we should fix that.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110740", "html_url": "https://github.com/dotnet/codeformatter/issues/4#issuecomment-69110740", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/4", "id": 69110740, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:20:48Z", "updated_at": "2015-01-07T23:20:48Z", "author_association": "MEMBER", "body": "@jaredpar : Before adding custom format code for this, i would suggest to write those additional testcases and run through the existing rule, to ensure there's no redundancy. Also note, not all the rules are tested, the rules that just use the roslyn apis are not tested, as it should be tested by the roslyn team. The tests that exist are only for rules implemented on top of roslyn formatter.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110917", "html_url": "https://github.com/dotnet/codeformatter/issues/4#issuecomment-69110917", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/4", "id": 69110917, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:22:27Z", "updated_at": "2015-01-07T23:22:27Z", "author_association": "MEMBER", "body": "@Priya91 sorry, my last message was confusing. \n\nI have no intention of changing the existing rule right now.  I was only going to add test cases for the other scenarios.  If any gaps show up I will file the appropriate bugs to track it down. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69110917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69111200", "html_url": "https://github.com/dotnet/codeformatter/issues/9#issuecomment-69111200", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/9", "id": 69111200, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:24:51Z", "updated_at": "2015-01-07T23:24:51Z", "author_association": "CONTRIBUTOR", "body": "Thanks.  Installing the tools does work.  I was tripped up by the fact that the unit tests actually run if you don't have this set of tools installed.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69111200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69111375", "html_url": "https://github.com/dotnet/codeformatter/issues/4#issuecomment-69111375", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/4", "id": 69111375, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:26:34Z", "updated_at": "2015-01-07T23:26:34Z", "author_association": "MEMBER", "body": "@jaredpar :+1:  Changing the title to reflect the work to be done :)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69111375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113218", "html_url": "https://github.com/dotnet/codeformatter/pull/5#issuecomment-69113218", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/5", "id": 69113218, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:43:42Z", "updated_at": "2015-01-07T23:43:42Z", "author_association": "MEMBER", "body": ":+1: looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113515", "html_url": "https://github.com/dotnet/codeformatter/pull/8#issuecomment-69113515", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/8", "id": 69113515, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:46:37Z", "updated_at": "2015-01-07T23:46:37Z", "author_association": "MEMBER", "body": ":+1: looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113562", "html_url": "https://github.com/dotnet/codeformatter/pull/5#issuecomment-69113562", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/5", "id": 69113562, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:47:04Z", "updated_at": "2015-01-07T23:47:04Z", "author_association": "MEMBER", "body": "Thanks for the review everyone! \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113727", "html_url": "https://github.com/dotnet/codeformatter/pull/8#issuecomment-69113727", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/8", "id": 69113727, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T23:48:35Z", "updated_at": "2015-01-07T23:48:43Z", "author_association": "MEMBER", "body": ":+1: LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69113727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69115640", "html_url": "https://github.com/dotnet/codeformatter/pull/10#issuecomment-69115640", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/10", "id": 69115640, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T00:07:11Z", "updated_at": "2015-01-08T00:07:11Z", "author_association": "MEMBER", "body": "The commit username and author username are different.. You should amend the commit author info to dotnet-bot.. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69115640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69115848", "html_url": "https://github.com/dotnet/codeformatter/pull/10#issuecomment-69115848", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/10", "id": 69115848, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T00:09:10Z", "updated_at": "2015-01-08T00:09:10Z", "author_association": "MEMBER", "body": "Hmm, thought I had done that correctly.  Used the following:\n\n```\ngit commit --author \"beep boop <dotnet-bot@microsoft.com>\"\n```\n\nIs there a better command line to use?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69115848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69116121", "html_url": "https://github.com/dotnet/codeformatter/pull/10#issuecomment-69116121", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/10", "id": 69116121, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T00:12:13Z", "updated_at": "2015-01-08T00:12:13Z", "author_association": "MEMBER", "body": "We usually use git config to set the author although I think that looks good too.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69116121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69118104", "html_url": "https://github.com/dotnet/codeformatter/pull/10#issuecomment-69118104", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/10", "id": 69118104, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T00:34:00Z", "updated_at": "2015-01-08T00:34:00Z", "author_association": "MEMBER", "body": "you need to amend your previous commit.. the log shows dotnet-bot as author, but jaredpar committed the change.. so \n1. git config --global --replace-all user.name dotnet-bot\n2. git config --global --replace-all user.email dotnet-bot@microsoft.com\n3. git commit --amend --reset-author\n\nwill change the committer info to dotnet-bot\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69118104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69118464", "html_url": "https://github.com/dotnet/codeformatter/pull/10#issuecomment-69118464", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/10", "id": 69118464, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T00:38:22Z", "updated_at": "2015-01-08T00:38:22Z", "author_association": "MEMBER", "body": "The only reason we do that is to make sure that git blame will show dotnet-bot and not the person who only moved the code. Git blame is working fine in this case. I would rather make other people do the same instead of changing the person who commited. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69118464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69128031", "html_url": "https://github.com/dotnet/codeformatter/pull/11#issuecomment-69128031", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/11", "id": 69128031, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T02:39:25Z", "updated_at": "2015-01-08T02:39:25Z", "author_association": "MEMBER", "body": ":+1: LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69128031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69128538", "html_url": "https://github.com/dotnet/codeformatter/pull/10#issuecomment-69128538", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/10", "id": 69128538, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T02:47:00Z", "updated_at": "2015-01-08T02:47:00Z", "author_association": "MEMBER", "body": ":+1: LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69128538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69212867", "html_url": "https://github.com/dotnet/codeformatter/issues/13#issuecomment-69212867", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/13", "id": 69212867, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T17:13:33Z", "updated_at": "2015-01-08T17:13:33Z", "author_association": "MEMBER", "body": "Suggestion: We should consider using diagnostic analyzers with codefixes that show up as lightbulbs in VS. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69212867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69213014", "html_url": "https://github.com/dotnet/codeformatter/issues/13#issuecomment-69213014", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/13", "id": 69213014, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T17:14:31Z", "updated_at": "2015-01-08T17:14:31Z", "author_association": "MEMBER", "body": "@Priya91 i'm fine with integrating that functionality as well.  But I want to prioritize making style conformance easy.  Having to click a lot of drop downs isn't much faster than just fixing it yourself.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69213014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69239081", "html_url": "https://github.com/dotnet/codeformatter/pull/16#issuecomment-69239081", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/16", "id": 69239081, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T19:58:42Z", "updated_at": "2015-01-08T19:58:42Z", "author_association": "MEMBER", "body": "Yes, we want the values to be integers, and enum seems a good type to use than class. Maybe casting enum to int on the importing suface\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69239081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69249216", "html_url": "https://github.com/dotnet/codeformatter/pull/16#issuecomment-69249216", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/16", "id": 69249216, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T21:06:48Z", "updated_at": "2015-01-08T21:06:48Z", "author_association": "CONTRIBUTOR", "body": "It seems to me that RuleOrderAttribute should not take a surface area dependency on this RuleOrder enum.  Note that today RuleOrderAttribute is public but all the rules themselves are internal (and I expect we would want to make the enum internal as well).\n\nSo is the thinking that we do the following:\n\n``` csharp\n[RuleOrder((int)RuleOrder.HasNoCustomCopyrightHeaderFormattingRule)]\n```\n\nThat feels like a bunch of hoops to me for little gain.\n\nThoughts?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69249216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69254609", "html_url": "https://github.com/dotnet/codeformatter/pull/16#issuecomment-69254609", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/16", "id": 69254609, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T21:42:38Z", "updated_at": "2015-01-08T21:42:38Z", "author_association": "MEMBER", "body": "I'd prefer not casting in the attribute.  If we have to cast we should do it in the consumption of the attribute.  \n\nI'm fine with enum or the current approach.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69254609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69257812", "html_url": "https://github.com/dotnet/codeformatter/pull/16#issuecomment-69257812", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/16", "id": 69257812, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T22:02:18Z", "updated_at": "2015-01-08T22:02:18Z", "author_association": "MEMBER", "body": "Hmm, looks good then.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69257812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69258050", "html_url": "https://github.com/dotnet/codeformatter/pull/16#issuecomment-69258050", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/16", "id": 69258050, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T22:03:51Z", "updated_at": "2015-01-08T22:03:51Z", "author_association": "CONTRIBUTOR", "body": "Thanks @Priya91, @krwq and @jaredpar.\n\nHappy to revisit this later if we come up with a better approach.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69258050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69258196", "html_url": "https://github.com/dotnet/codeformatter/issues/12#issuecomment-69258196", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "id": 69258196, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T22:04:50Z", "updated_at": "2015-01-08T22:04:50Z", "author_association": "CONTRIBUTOR", "body": "What are you envisioning for reporting here?  Just an exit code that signals differences?  Some sort of diff written to standard out?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69258196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69269002", "html_url": "https://github.com/dotnet/codeformatter/issues/12#issuecomment-69269002", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "id": 69269002, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T23:24:55Z", "updated_at": "2015-01-08T23:24:55Z", "author_association": "MEMBER", "body": "@ellismg minimal implementation would just be a message + an exit code. \n\nIf we wanted to extend this mode later perhaps display the diffs of where the code needed to be changed.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69269002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69272089", "html_url": "https://github.com/dotnet/codeformatter/issues/17#issuecomment-69272089", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/17", "id": 69272089, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T23:53:56Z", "updated_at": "2015-01-08T23:53:56Z", "author_association": "MEMBER", "body": "Is this for the library portion?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69272089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69273272", "html_url": "https://github.com/dotnet/codeformatter/issues/17#issuecomment-69273272", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/17", "id": 69273272, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T00:06:02Z", "updated_at": "2015-01-09T00:06:02Z", "author_association": "MEMBER", "body": "No, a way to allow the codeformatter to be consumed internally for OSSing libraries. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69273272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69281167", "html_url": "https://github.com/dotnet/codeformatter/pull/18#issuecomment-69281167", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/18", "id": 69281167, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T01:35:58Z", "updated_at": "2015-01-09T01:35:58Z", "author_association": "MEMBER", "body": ":+1: LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69281167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69283526", "html_url": "https://github.com/dotnet/codeformatter/pull/18#issuecomment-69283526", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/18", "id": 69283526, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T02:08:28Z", "updated_at": "2015-01-09T02:09:15Z", "author_association": "OWNER", "body": "Instead of doing .nuspec files, can we use [NuProj](http://nuproj.net)? That's what @davkean is now using for building our packages as well. No need to install, simply follow [these steps](http://nuproj.net/documentation/#checked-in-toolkit).\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69283526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69393467", "html_url": "https://github.com/dotnet/codeformatter/pull/18#issuecomment-69393467", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/18", "id": 69393467, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T20:25:25Z", "updated_at": "2015-01-09T20:25:25Z", "author_association": "MEMBER", "body": "@terrajobst i'll do that in a new PR.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69393467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69395153", "html_url": "https://github.com/dotnet/codeformatter/pull/18#issuecomment-69395153", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/18", "id": 69395153, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T20:37:57Z", "updated_at": "2015-01-09T20:37:57Z", "author_association": "MEMBER", "body": "@jaredpar : Please review.. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69395153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69401286", "html_url": "https://github.com/dotnet/codeformatter/pull/18#issuecomment-69401286", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/18", "id": 69401286, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T21:24:24Z", "updated_at": "2015-01-09T21:24:24Z", "author_association": "OWNER", "body": "@Priya91 Seems reasonable. I can help you with that.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69401286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69416420", "html_url": "https://github.com/dotnet/codeformatter/pull/18#issuecomment-69416420", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/18", "id": 69416420, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T23:09:54Z", "updated_at": "2015-01-09T23:09:54Z", "author_association": "MEMBER", "body": ":+1: LGTM, thanks for digging into whether or not we needed the VB dependency!\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69416420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69460663", "html_url": "https://github.com/dotnet/codeformatter/issues/20#issuecomment-69460663", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/20", "id": 69460663, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-10T16:03:34Z", "updated_at": "2015-01-10T16:03:34Z", "author_association": "MEMBER", "body": "Do you mean via a `<see cref=\"fieldName\"/>` or simply an unqualified name in the comment?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69460663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69461317", "html_url": "https://github.com/dotnet/codeformatter/issues/20#issuecomment-69461317", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/20", "id": 69461317, "user": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-10T16:21:28Z", "updated_at": "2015-01-10T16:21:28Z", "author_association": "MEMBER", "body": "Regular comment, not XML. I realize it's just regular text, but without fixing it up, the code formatter in a sense breaks the comments. See https://github.com/dotnet/corefx/pull/390 for a bunch of examples.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69461317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69464109", "html_url": "https://github.com/dotnet/codeformatter/issues/20#issuecomment-69464109", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/20", "id": 69464109, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-10T17:35:54Z", "updated_at": "2015-01-10T17:35:54Z", "author_association": "MEMBER", "body": "I agree that we should do this but the change does have the potential to do incorrect edits in the code.  Refactor Rename in the IDE approaches this by making it an option in a rename operation.  I think we should do the same here.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69464109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69815526", "html_url": "https://github.com/dotnet/codeformatter/issues/21#issuecomment-69815526", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/21", "id": 69815526, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-13T20:39:26Z", "updated_at": "2015-01-13T20:39:26Z", "author_association": "MEMBER", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69815526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69847287", "html_url": "https://github.com/dotnet/codeformatter/issues/21#issuecomment-69847287", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/21", "id": 69847287, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-14T00:11:23Z", "updated_at": "2015-01-14T00:12:12Z", "author_association": "OWNER", "body": "~~That's fair. I wouldn't extend this to he libraries, though. I think we should use NuGet packages only. The feed doesn't have to be NuGet.org, though.~~\n\nNever mind. I was under the impression that this is the Roslyn repo.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69847287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69847374", "html_url": "https://github.com/dotnet/codeformatter/issues/21#issuecomment-69847374", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/21", "id": 69847374, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-14T00:12:24Z", "updated_at": "2015-01-14T00:12:24Z", "author_association": "OWNER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/69847374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70007468", "html_url": "https://github.com/dotnet/codeformatter/pull/22#issuecomment-70007468", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/22", "id": 70007468, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-14T22:42:19Z", "updated_at": "2015-01-14T22:42:19Z", "author_association": "MEMBER", "body": ":+1: LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70007468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70007536", "html_url": "https://github.com/dotnet/codeformatter/pull/22#issuecomment-70007536", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/22", "id": 70007536, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-14T22:42:53Z", "updated_at": "2015-01-14T22:42:53Z", "author_association": "MEMBER", "body": "As a part of checking this in could you also update readme.md to have the new command line usage as well? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70007536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70007596", "html_url": "https://github.com/dotnet/codeformatter/pull/22#issuecomment-70007596", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/22", "id": 70007596, "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-14T22:43:13Z", "updated_at": "2015-01-14T22:43:13Z", "author_association": "CONTRIBUTOR", "body": "Will do.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70007596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70007939", "html_url": "https://github.com/dotnet/codeformatter/pull/22#issuecomment-70007939", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/22", "id": 70007939, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-14T22:45:25Z", "updated_at": "2015-01-14T22:45:25Z", "author_association": "CONTRIBUTOR", "body": "LGTM to me as well, thanks for doing this.  Makes things much easier!\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70007939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70008674", "html_url": "https://github.com/dotnet/codeformatter/pull/22#issuecomment-70008674", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/22", "id": 70008674, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-14T22:50:24Z", "updated_at": "2015-01-14T22:50:24Z", "author_association": "MEMBER", "body": "Indeed.  I was actually going to come around later tonight and add this very feature.  Now I can just use it :) \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70008674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70045660", "html_url": "https://github.com/dotnet/codeformatter/pull/23#issuecomment-70045660", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/23", "id": 70045660, "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-15T06:36:16Z", "updated_at": "2015-01-15T06:36:16Z", "author_association": "CONTRIBUTOR", "body": "I should have realized this earlier, but it turns out that removing documents from a workspace then applying changes actually removes them from the project files themselves.  I've amended the change to add back any documents which were skipped because they were deemed unformattable.  This does not change the ordering of <Compile Include=\"\" /> lines in the project file.  Looking at the implementation of Workspace.TryApplyChanges(), specifically ProjectChanges.GetAdded/RemovedDocuments(), this seems to be one correct way to do this as changes are calculated at the time of trying to apply changes.\n\nIf this seems like too much of a hack, we could reconsider using Workspace.TryApplyChanges() and simply write out the text of each formatted document to its file path.  I don't have access to the source for MSBuildWorkspace to see how it handles the OnDocumentTextChanged event, but that is where I expect the text changes are written to disk.\n\nThoughts?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70045660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70046235", "html_url": "https://github.com/dotnet/codeformatter/pull/23#issuecomment-70046235", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/23", "id": 70046235, "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-15T06:44:56Z", "updated_at": "2015-01-15T06:44:56Z", "author_association": "CONTRIBUTOR", "body": "Nevermind. This does not get around the issue of the MsBuildWorkspace creating empty files where the project file contains paths which do not exist.  I'm not sure if this is an MsBuildWorkspace bug or feature.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70046235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70133084", "html_url": "https://github.com/dotnet/codeformatter/issues/24#issuecomment-70133084", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/24", "id": 70133084, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-15T18:14:57Z", "updated_at": "2015-01-15T18:14:57Z", "author_association": "CONTRIBUTOR", "body": "There is already code to do this:\n\nhttps://github.com/dotnet/codeformatter/blob/master/src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs\n\nIs it not working?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70133084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70135507", "html_url": "https://github.com/dotnet/codeformatter/issues/24#issuecomment-70135507", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/24", "id": 70135507, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-15T18:29:40Z", "updated_at": "2015-01-15T18:29:40Z", "author_association": "MEMBER", "body": "I actually did not check although the last time I run the tool it did not do this :) Closing the issue in this case\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70135507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70344208", "html_url": "https://github.com/dotnet/codeformatter/issues/21#issuecomment-70344208", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/21", "id": 70344208, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-17T00:25:45Z", "updated_at": "2015-01-17T00:25:45Z", "author_association": "MEMBER", "body": "Releases tab has a v1.0.0-alpha release.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70344208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70344815", "html_url": "https://github.com/dotnet/codeformatter/issues/21#issuecomment-70344815", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/21", "id": 70344815, "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-17T00:33:49Z", "updated_at": "2015-01-17T00:33:49Z", "author_association": "CONTRIBUTOR", "body": "![clapping](http://i.imgur.com/JSBTl.gif)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70344815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70684170", "html_url": "https://github.com/dotnet/codeformatter/issues/27#issuecomment-70684170", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/27", "id": 70684170, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-20T16:31:24Z", "updated_at": "2015-01-20T16:31:24Z", "author_association": "MEMBER", "body": "Hmm, this may not be feasible.  The resulting binary from ilmerge doesn't seem to hold up under normal usage.  This may require investigation.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70684170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70704408", "html_url": "https://github.com/dotnet/codeformatter/issues/26#issuecomment-70704408", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26", "id": 70704408, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-20T18:22:03Z", "updated_at": "2015-01-20T18:22:03Z", "author_association": "MEMBER", "body": "We should probably add a rule which cleans up usings\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70704408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70768136", "html_url": "https://github.com/dotnet/codeformatter/pull/28#issuecomment-70768136", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/28", "id": 70768136, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-21T01:19:51Z", "updated_at": "2015-01-21T01:19:51Z", "author_association": "MEMBER", "body": "@jasonmalinowski is there something that could just do this for us?  If so that would be great. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70768136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70771417", "html_url": "https://github.com/dotnet/codeformatter/pull/28#issuecomment-70771417", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/28", "id": 70771417, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-21T01:54:27Z", "updated_at": "2015-01-21T01:54:27Z", "author_association": "MEMBER", "body": "Talked with Jason and he's going to show me how to use the simplifier properly tomorrow.  For now checking in this targeted work around so I can get a large chunk of code converted. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70771417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70771443", "html_url": "https://github.com/dotnet/codeformatter/pull/30#issuecomment-70771443", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/30", "id": 70771443, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-21T01:54:43Z", "updated_at": "2015-01-21T01:54:43Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70771443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70950391", "html_url": "https://github.com/dotnet/codeformatter/pull/32#issuecomment-70950391", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/32", "id": 70950391, "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-22T00:31:50Z", "updated_at": "2015-01-22T00:31:50Z", "author_association": "MEMBER", "body": ":+1: :sparkles: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/70950391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71215171", "html_url": "https://github.com/dotnet/codeformatter/pull/34#issuecomment-71215171", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/34", "id": 71215171, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T16:01:30Z", "updated_at": "2015-01-23T16:01:30Z", "author_association": "MEMBER", "body": "This also addresses issue #25 via 98e13fa0b022cd3cf05a85c123f9458500ef7375\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71215171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71248626", "html_url": "https://github.com/dotnet/codeformatter/pull/34#issuecomment-71248626", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/34", "id": 71248626, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T19:18:45Z", "updated_at": "2015-01-23T19:18:45Z", "author_association": "MEMBER", "body": "This looks good to me.\n\nThe only question I have is around the local vs global distinction. I am not sure if semantic rules can always be guaranteed to only work on a single file. \n\nWhat would happen (for example) if we have a private member defined in one part of a partial class but referenced in the another file that contributes to the private class. Does that mean that the rule that deals with renaming private fields now needs to be a global one? \nHow would rule developers make sure they pick the right interface to implement (as they both have the same signature)?\n\nI do agree that there are 2 different kinds of rules: syntactic and semantic rules. \n\nDo you have a feel for how much worse the performance would be if we were to get rid of local semantic rules?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71248626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71249867", "html_url": "https://github.com/dotnet/codeformatter/pull/34#issuecomment-71249867", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/34", "id": 71249867, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T19:26:02Z", "updated_at": "2015-01-23T19:28:14Z", "author_association": "MEMBER", "body": "@AlexGhiondea \n\n> What would happen (for example) if we have a private member defined in one part of a partial class but referenced in the another file that contributes to the private class.\n\nThat scenario is exactly why the rename private rule is an `IGlobalSemanticFormattingRule` :)\n\n> How would rule developers make sure they pick the right interface to implement (as they both have the same signature)?\n\nIt just requires a bit of thought.  I think global rules are going to be the exception, not the rule.  Formatting changes are much more likely to be local.  \n\nNote: the rules don't have the same signature.  One returns a `Solution` the other returns a `SyntaxNode`.  This is an intentional difference meant to help push developers to choose the right rule.  If you do an operation that produces a new `Solution` there is no way to implement `ILocalSemanticFormattingRule` correctly.  You would be forced into `IGlobalSemanticFormattingRule`.\n\n> Do you have a feel for how much worse the performance would be if we were to get rid of local semantic rules?\n\nIt's pretty dramatic.  The difference between hours and minutes to run on moderate / large projects. \n\nThe key performance win is in the running of `ILocalSemanticFormattingRule`.  We are able to reuse a single `SemanticModel` instance for a given rule on every `Document` in the solution.  If the two rules were merged this would go away and we'd need to recreate a `SemanticModel` for every change the rule made.  Given that in Roslyn creating a `SemanticModel` can take 1-5 seconds it leads to a dramatic performance difference. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71249867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71252295", "html_url": "https://github.com/dotnet/codeformatter/pull/34#issuecomment-71252295", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/34", "id": 71252295, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T19:40:42Z", "updated_at": "2015-01-23T19:40:42Z", "author_association": "MEMBER", "body": "@jasonmalinowski has pointed out a small nit in my description of the issue.  Creating a `SemanticModel` is actually really cheap.  The expensive operation is creating the `Compilation` on which the `SemanticModel` depends.  Same end effect here but important to understand the distinction. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71252295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71253730", "html_url": "https://github.com/dotnet/codeformatter/issues/33#issuecomment-71253730", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/33", "id": 71253730, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T19:48:46Z", "updated_at": "2015-01-23T19:48:46Z", "author_association": "MEMBER", "body": "This was largely addressed by d24b9eecbcf9a41d5e44715ed24078f9cffef641\n\nThere is going to be more work going forward but this fixed the big blocking issues for large projects.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71253730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71253984", "html_url": "https://github.com/dotnet/codeformatter/pull/34#issuecomment-71253984", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/34", "id": 71253984, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T19:50:04Z", "updated_at": "2015-01-23T19:50:04Z", "author_association": "MEMBER", "body": "Ah - I missed the fact that they do not share the exact signature.\n\nCould you add some comment on the declarations for the Local/Global interface to make it clear when one vs the other should be used?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71253984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71254206", "html_url": "https://github.com/dotnet/codeformatter/pull/34#issuecomment-71254206", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/34", "id": 71254206, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T19:51:14Z", "updated_at": "2015-01-23T19:51:14Z", "author_association": "MEMBER", "body": "@AlexGhiondea sure.  I will try and make that clearer in the comments.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71254206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71254480", "html_url": "https://github.com/dotnet/codeformatter/issues/37#issuecomment-71254480", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/37", "id": 71254480, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T19:52:48Z", "updated_at": "2015-01-23T19:52:48Z", "author_association": "CONTRIBUTOR", "body": "I like it.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71254480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71255935", "html_url": "https://github.com/dotnet/codeformatter/issues/25#issuecomment-71255935", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/25", "id": 71255935, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T20:01:23Z", "updated_at": "2015-01-23T20:01:23Z", "author_association": "MEMBER", "body": "Fixed with 98e13fa0b022cd3cf05a85c123f9458500ef7375\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71255935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71284566", "html_url": "https://github.com/dotnet/codeformatter/issues/38#issuecomment-71284566", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/38", "id": 71284566, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:29:31Z", "updated_at": "2015-01-23T23:29:31Z", "author_association": "MEMBER", "body": "I would rather add a switch to disable it. We had a lot of cases like:\n#if platform\ncode();\n#else\ncode();\n#endif\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71284566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71285066", "html_url": "https://github.com/dotnet/codeformatter/issues/38#issuecomment-71285066", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/38", "id": 71285066, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:34:03Z", "updated_at": "2015-01-23T23:34:03Z", "author_association": "MEMBER", "body": "@krwq  I'd rather disable it by default. \n\nThis tool is expected to take in good code and produce good code.  This particular behavior is unsafe because it can incorrectly reformat code which is otherwise disabled.  This can provoke a strong negative reaction from developers and lead to a lack of confidence in the tool itself.\n\nAdditionally even if some of the `#if false` combinations are valid, there is no guarantee all of them are.  That is why we should force the developer to list all of the extra symbols they want defined at the command line.  \n\nBesides if you miss one, just rerun the tool one more time with the new symbol.  It only takes a few seconds to fix it up. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71285066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71285364", "html_url": "https://github.com/dotnet/codeformatter/issues/38#issuecomment-71285364", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/38", "id": 71285364, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:36:49Z", "updated_at": "2015-01-23T23:36:49Z", "author_association": "CONTRIBUTOR", "body": "For @krwq's concerns.  Would it be possible to modify the tool to take a set of configuration's when opening a sln or csproj and format a bunch of times, once for each configuration?  That would cause symbols to be defined correctly based on MSBuild's view of the world.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71285364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71285970", "html_url": "https://github.com/dotnet/codeformatter/issues/38#issuecomment-71285970", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/38", "id": 71285970, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:42:31Z", "updated_at": "2015-01-23T23:42:40Z", "author_association": "MEMBER", "body": "Adding @nslottow who has done a bunch of work around #if-defs recently\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71285970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286087", "html_url": "https://github.com/dotnet/codeformatter/issues/38#issuecomment-71286087", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/38", "id": 71286087, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:43:51Z", "updated_at": "2015-01-23T23:43:51Z", "author_association": "MEMBER", "body": "@ellismg that's exactly what I was envisioning.  By default the tool just uses whatever comes from loading the project.  The user can add extra configurations on the command line that the tool will also run.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286356", "html_url": "https://github.com/dotnet/codeformatter/issues/37#issuecomment-71286356", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/37", "id": 71286356, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:46:35Z", "updated_at": "2015-01-23T23:46:35Z", "author_association": "MEMBER", "body": "Using #ifdef to guard against a tool changing the code seems strange.\nInstead of #ifdefs could we use some structure in the comment instead (like a pattern that can be supplied by the person runnning the tool? Similar to what we do for other formatting changes)? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286455", "html_url": "https://github.com/dotnet/codeformatter/issues/38#issuecomment-71286455", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/38", "id": 71286455, "user": {"login": "agocke", "id": 515774, "avatar_url": "https://avatars2.githubusercontent.com/u/515774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agocke", "html_url": "https://github.com/agocke", "followers_url": "https://api.github.com/users/agocke/followers", "following_url": "https://api.github.com/users/agocke/following{/other_user}", "gists_url": "https://api.github.com/users/agocke/gists{/gist_id}", "starred_url": "https://api.github.com/users/agocke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agocke/subscriptions", "organizations_url": "https://api.github.com/users/agocke/orgs", "repos_url": "https://api.github.com/users/agocke/repos", "events_url": "https://api.github.com/users/agocke/events{/privacy}", "received_events_url": "https://api.github.com/users/agocke/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:47:41Z", "updated_at": "2015-01-23T23:47:41Z", "author_association": "NONE", "body": "Assuming that the stuff inside false #if directives is _even code_ is invalid.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286900", "html_url": "https://github.com/dotnet/codeformatter/issues/37#issuecomment-71286900", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/37", "id": 71286900, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:52:39Z", "updated_at": "2015-01-23T23:52:39Z", "author_association": "MEMBER", "body": "@AlexGhiondea \n\nComments unfortunately won't work.  It would require that every single rule implementation know and correctly account for these structured comments.  That's a good deal of work and something that is easy to get wrong.\n\nAdditionally we have no control over APIs like `Formatter`.  It can't be made to respect structured comments.\n\nThis idea does seem a bit strange at first but there are several aspects of it that are appealing:\n- It's very reliable:  The entire tool chain is already setup to ignore `#if false` regions so we get the behavior without any complicated logic.\n- It's ugly: Ignoring formatting rules should be the exception, not the rule.  This pattern makes that type of code stand and serves as discouragement to use it.\n\nIn another team I worked on we actually modified StyleCop to recognize this type of pattern (or maybe it was a part of the stock feature set, can't remember).  It was an effective mechanism. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286930", "html_url": "https://github.com/dotnet/codeformatter/pull/40#issuecomment-71286930", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/40", "id": 71286930, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:52:54Z", "updated_at": "2015-01-23T23:52:54Z", "author_association": "MEMBER", "body": "LGTM.\n\nWith the change to fix the casing of the renamed fields should we re-run this on the coreFX repo? Or that does not make sense?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71286930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71287060", "html_url": "https://github.com/dotnet/codeformatter/issues/26#issuecomment-71287060", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26", "id": 71287060, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:54:28Z", "updated_at": "2015-01-23T23:54:28Z", "author_association": "MEMBER", "body": "We should do that, but we should also catch this case when we promote usings.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71287060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71287074", "html_url": "https://github.com/dotnet/codeformatter/pull/40#issuecomment-71287074", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/40", "id": 71287074, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-23T23:54:39Z", "updated_at": "2015-01-23T23:54:39Z", "author_association": "MEMBER", "body": "@AlexGhiondea  probably depends on how bad the problem is over there.  In Roslyn there was a very specific naming pattern for statics which caused us to end up with hundreds of identifiers like:\n\n``` csharp\nprivate const int s_SomeValue;\n// vs.\nprivate const int s_someValue;\n```\n\nIt shouldn't hurt to run it again though and see how big the diff is.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71287074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71287977", "html_url": "https://github.com/dotnet/codeformatter/issues/37#issuecomment-71287977", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/37", "id": 71287977, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-24T00:05:05Z", "updated_at": "2015-01-24T00:05:05Z", "author_association": "MEMBER", "body": "Yeah, I see your point about having to change how we handle comments in all the rules.\n\nIt still looks very strange that you would have code in your project that uses a define that is only enabled when a tool is ran.\n\nI can't think of a different way (than comments) right now though.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71287977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71288741", "html_url": "https://github.com/dotnet/codeformatter/issues/38#issuecomment-71288741", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/38", "id": 71288741, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-24T00:14:15Z", "updated_at": "2015-01-24T00:14:15Z", "author_association": "MEMBER", "body": "Sometimes code speaks better than ... well ... me :)  So I uploaded a quick commit that shows the rough design I had in mind for this bug.  It should cover everyone's scenarios and concerns here.  \n\nhttps://github.com/dotnet/codeformatter/commit/875e61134be7f9c81fa00767de6e0d299081f201\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71288741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71293882", "html_url": "https://github.com/dotnet/codeformatter/pull/42#issuecomment-71293882", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/42", "id": 71293882, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-24T01:31:18Z", "updated_at": "2015-01-24T01:31:18Z", "author_association": "MEMBER", "body": "Closes #41 \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71293882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71294736", "html_url": "https://github.com/dotnet/codeformatter/pull/42#issuecomment-71294736", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/42", "id": 71294736, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-24T01:47:56Z", "updated_at": "2015-01-24T01:47:56Z", "author_association": "MEMBER", "body": "Can we tie the output of the individual files to the Verbose flag? On smaller projects outputting every file is readable but on 500+ file projects the output quickly scrolls off screen. \n\nOr it not let's delete the flag. Right now it doesn't appear to be used (at least from my tiny phone screen). \n\nLGTM. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71294736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71294861", "html_url": "https://github.com/dotnet/codeformatter/pull/42#issuecomment-71294861", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/42", "id": 71294861, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-24T01:50:37Z", "updated_at": "2015-01-24T01:50:37Z", "author_association": "MEMBER", "body": "Actually it should be fine as is. \n\nDo we still need the verbose flag though?  I think it can be deleted now. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71294861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71382390", "html_url": "https://github.com/dotnet/codeformatter/issues/41#issuecomment-71382390", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/41", "id": 71382390, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-25T17:31:48Z", "updated_at": "2015-01-25T17:31:48Z", "author_association": "MEMBER", "body": "These were mostly meant to help me track down the performance issues I was debugging.  I agree it's not ideal for the normal running of the tool.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71382390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71514429", "html_url": "https://github.com/dotnet/codeformatter/issues/26#issuecomment-71514429", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26", "id": 71514429, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-26T18:49:03Z", "updated_at": "2015-01-26T18:49:03Z", "author_association": "MEMBER", "body": "if we clean them up later then we can remove duplicates. I don't think there is a purpose in doing it twice\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71514429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71514837", "html_url": "https://github.com/dotnet/codeformatter/issues/41#issuecomment-71514837", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/41", "id": 71514837, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-26T18:51:26Z", "updated_at": "2015-01-26T18:51:26Z", "author_association": "MEMBER", "body": "I agree with the decorators (dots) but I think the times are fine. I don't have strong opinion about displaying rule names although if someone really needs it I would rather add switch /verbose to display it (same for time).\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71514837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71522367", "html_url": "https://github.com/dotnet/codeformatter/issues/26#issuecomment-71522367", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26", "id": 71522367, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-26T19:33:46Z", "updated_at": "2015-01-26T19:33:46Z", "author_association": "MEMBER", "body": "I think a rule should not make the code worse. What if the rule to clean-up the usings is not run? That will leave the code with a warning.\n\nI think we can code this rule in such a way that we don't introduce a warning.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71522367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71523036", "html_url": "https://github.com/dotnet/codeformatter/pull/42#issuecomment-71523036", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/42", "id": 71523036, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-26T19:37:44Z", "updated_at": "2015-01-26T19:37:44Z", "author_association": "MEMBER", "body": "@jaredpar Yes the verbose is not required now.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71523036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71528732", "html_url": "https://github.com/dotnet/codeformatter/pull/44#issuecomment-71528732", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/44", "id": 71528732, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-26T20:10:00Z", "updated_at": "2015-01-26T20:10:00Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71528732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71529021", "html_url": "https://github.com/dotnet/codeformatter/issues/26#issuecomment-71529021", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26", "id": 71529021, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-26T20:11:39Z", "updated_at": "2015-01-26T20:11:39Z", "author_association": "MEMBER", "body": "Properly implementing this rule requires some level of semantic analysis.  \n\nCC'd @jasonmalinowski in case he knows of an API that could help us here. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71529021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71533007", "html_url": "https://github.com/dotnet/codeformatter/issues/26#issuecomment-71533007", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26", "id": 71533007, "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-26T20:35:39Z", "updated_at": "2015-01-26T20:35:39Z", "author_association": "MEMBER", "body": "We don't have any public cleanup API for this, just the building blocks.\n\nDon't forget that promotion itself requires semantics: if you have \"using C\" inside a namespace A it might either bind to A.C or to global::C, and you don't know which. Also, using aliases can include unqualified types that can't be moved to the top level. Moving a declaration might also change binding and break other code if there's now an ambiguous type. This is very hard to get right. Unless we have a major codebase right now that's breaking the rule and we need and automated tool to fix it, I'd say just flag it, don't try to fix it, and have the developer do it for now.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71533007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71663253", "html_url": "https://github.com/dotnet/codeformatter/pull/43#issuecomment-71663253", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/43", "id": 71663253, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-27T15:11:24Z", "updated_at": "2015-01-27T15:11:24Z", "author_association": "MEMBER", "body": "@nslottow if code wants to exist solely for the code formatter they could change `#if false` to `#if DOTNET_CODEFORMATTER`.  \n\nI'm truthfully not very concerned about the `#if false` case though.  A developer has explicitly labeled code as dead, why bother maintaining it for them if they can't even get it to compile under any circumstances?  It's something I flag on code reviews and ask authors to simply delete.  No reason to keep it around.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/71663253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72111713", "html_url": "https://github.com/dotnet/codeformatter/issues/45#issuecomment-72111713", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/45", "id": 72111713, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-29T21:52:21Z", "updated_at": "2015-01-29T21:52:21Z", "author_association": "MEMBER", "body": "Need to update the release anyways.  I will add this collection in. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72111713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72111823", "html_url": "https://github.com/dotnet/codeformatter/issues/45#issuecomment-72111823", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/45", "id": 72111823, "user": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-29T21:52:57Z", "updated_at": "2015-01-29T21:52:57Z", "author_association": "MEMBER", "body": "It looks like you are relying on it being in the GAC, but VS owns that version and it might not match the version that you use.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72111823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72112074", "html_url": "https://github.com/dotnet/codeformatter/issues/45#issuecomment-72112074", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/45", "id": 72112074, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-29T21:54:32Z", "updated_at": "2015-01-29T21:54:32Z", "author_association": "MEMBER", "body": "@davkean no one owns the GAC.  Everyone is equally free to destroy it ;) \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72112074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72483038", "html_url": "https://github.com/dotnet/codeformatter/issues/41#issuecomment-72483038", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/41", "id": 72483038, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-02T16:08:00Z", "updated_at": "2015-02-02T16:08:00Z", "author_association": "MEMBER", "body": "Fixed by c52f32be924bf2bba48af979385cbac9da50c6f0\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72483038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72625353", "html_url": "https://github.com/dotnet/codeformatter/pull/47#issuecomment-72625353", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/47", "id": 72625353, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-03T10:12:01Z", "updated_at": "2015-02-03T10:12:01Z", "author_association": "CONTRIBUTOR", "body": "One comment.  LGTM otherwise.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72625353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72673158", "html_url": "https://github.com/dotnet/codeformatter/pull/47#issuecomment-72673158", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/47", "id": 72673158, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-03T15:45:04Z", "updated_at": "2015-02-03T15:45:04Z", "author_association": "MEMBER", "body": "Updated both the detailed help text and the README.md file for the new switch.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72673158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72882547", "html_url": "https://github.com/dotnet/codeformatter/issues/48#issuecomment-72882547", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/48", "id": 72882547, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-04T16:08:51Z", "updated_at": "2015-02-04T16:08:51Z", "author_association": "MEMBER", "body": "If there are no objections I plan on making this change later today. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72882547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72974874", "html_url": "https://github.com/dotnet/codeformatter/issues/48#issuecomment-72974874", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/48", "id": 72974874, "user": {"login": "agocke", "id": 515774, "avatar_url": "https://avatars2.githubusercontent.com/u/515774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agocke", "html_url": "https://github.com/agocke", "followers_url": "https://api.github.com/users/agocke/followers", "following_url": "https://api.github.com/users/agocke/following{/other_user}", "gists_url": "https://api.github.com/users/agocke/gists{/gist_id}", "starred_url": "https://api.github.com/users/agocke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agocke/subscriptions", "organizations_url": "https://api.github.com/users/agocke/orgs", "repos_url": "https://api.github.com/users/agocke/repos", "events_url": "https://api.github.com/users/agocke/events{/privacy}", "received_events_url": "https://api.github.com/users/agocke/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-05T01:02:52Z", "updated_at": "2015-02-05T01:02:52Z", "author_association": "NONE", "body": ":shipit: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72974874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72974953", "html_url": "https://github.com/dotnet/codeformatter/issues/48#issuecomment-72974953", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/48", "id": 72974953, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-05T01:03:32Z", "updated_at": "2015-02-05T01:03:32Z", "author_association": "MEMBER", "body": "@agocke did you mean to close the issue?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72974953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72975031", "html_url": "https://github.com/dotnet/codeformatter/issues/48#issuecomment-72975031", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/48", "id": 72975031, "user": {"login": "agocke", "id": 515774, "avatar_url": "https://avatars2.githubusercontent.com/u/515774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agocke", "html_url": "https://github.com/agocke", "followers_url": "https://api.github.com/users/agocke/followers", "following_url": "https://api.github.com/users/agocke/following{/other_user}", "gists_url": "https://api.github.com/users/agocke/gists{/gist_id}", "starred_url": "https://api.github.com/users/agocke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agocke/subscriptions", "organizations_url": "https://api.github.com/users/agocke/orgs", "repos_url": "https://api.github.com/users/agocke/repos", "events_url": "https://api.github.com/users/agocke/events{/privacy}", "received_events_url": "https://api.github.com/users/agocke/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-05T01:04:11Z", "updated_at": "2015-02-05T01:04:11Z", "author_association": "NONE", "body": "Nope :/\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/72975031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73283313", "html_url": "https://github.com/dotnet/codeformatter/issues/45#issuecomment-73283313", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/45", "id": 73283313, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-06T18:01:32Z", "updated_at": "2015-02-06T18:01:32Z", "author_association": "MEMBER", "body": "@davkean turns out we are not relying on it to be in the GAC.  Build expected it to be copy local like all of our other references.  It just turns out that something else installed it into the GAC so naturally MSBuild decided to stop putting it in the output.  Because what's installed in the GAC should definitely be changing what my build outputs are.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73283313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73399660", "html_url": "https://github.com/dotnet/codeformatter/pull/51#issuecomment-73399660", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/51", "id": 73399660, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-08T06:55:58Z", "updated_at": "2015-02-08T06:55:58Z", "author_association": "MEMBER", "body": "LGTM\n\nI wish there was a more direct way of checking for this but off hand I don't know of a good way.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73399660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73399675", "html_url": "https://github.com/dotnet/codeformatter/pull/50#issuecomment-73399675", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/50", "id": 73399675, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-08T06:56:32Z", "updated_at": "2015-02-08T06:56:32Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73399675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73400025", "html_url": "https://github.com/dotnet/codeformatter/pull/51#issuecomment-73400025", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/51", "id": 73400025, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-08T07:14:47Z", "updated_at": "2015-02-08T07:14:47Z", "author_association": "OWNER", "body": "Same here.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73400025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73574115", "html_url": "https://github.com/dotnet/codeformatter/issues/49#issuecomment-73574115", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/49", "id": 73574115, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-09T19:34:04Z", "updated_at": "2015-02-09T19:34:04Z", "author_association": "MEMBER", "body": "Is this a duplicate of #14 ?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73574115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73574337", "html_url": "https://github.com/dotnet/codeformatter/issues/49#issuecomment-73574337", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/49", "id": 73574337, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-09T19:35:13Z", "updated_at": "2015-02-09T19:35:13Z", "author_association": "MEMBER", "body": "Ha, yeah it is :smile: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73574337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73593782", "html_url": "https://github.com/dotnet/codeformatter/issues/52#issuecomment-73593782", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/52", "id": 73593782, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-09T21:28:05Z", "updated_at": "2015-02-09T21:28:05Z", "author_association": "OWNER", "body": "No, that's a case of us still making progress on making this tool more integrated in our own workflows.\n\n/cc @jaredpar \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73593782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73596579", "html_url": "https://github.com/dotnet/codeformatter/issues/53#issuecomment-73596579", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/53", "id": 73596579, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-09T21:43:34Z", "updated_at": "2015-02-09T21:43:34Z", "author_association": "MEMBER", "body": "Agree.  This is a gap between what the tool currently enforces and the guidelines.  Will add. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73596579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73597551", "html_url": "https://github.com/dotnet/codeformatter/issues/52#issuecomment-73597551", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/52", "id": 73597551, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-09T21:49:11Z", "updated_at": "2015-02-10T00:53:25Z", "author_association": "MEMBER", "body": "@terrajobst i was under the impression that single line properties were allowed.  If that's not the case it's probably a rule we should consider given the huge usage within all of the code bases.  \n\n@AdamSpeight2008 \n\nThe tool is indeed on occasion out of date with the standards.  As @terrajobst mentioned we still don't have the tooling level we'd like to make code formatting a silent and automatic part of our daily development.  It's planned but not here yet.\n\nAlso there are simply gaps between the what the style guidelines prefer and what the tool enforces.  All such known cases are filed as Issues and [labeled with Guideline Gap](https://github.com/dotnet/codeformatter/labels/guideline%20gap).  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73597551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73623562", "html_url": "https://github.com/dotnet/codeformatter/issues/52#issuecomment-73623562", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/52", "id": 73623562, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-10T00:52:21Z", "updated_at": "2015-02-10T00:52:32Z", "author_association": "OWNER", "body": "@jaredpar, sorry I misread. I was under the impression that it's about the messed up indentation. Yes, [single line accessors are explicitly allowed](https://github.com/dotnet/corefx/wiki/Contributing#example-file) by our example file:\n\n``` csharp\npublic int Count\n{\n    get { return _count; }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73623562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73624801", "html_url": "https://github.com/dotnet/codeformatter/issues/52#issuecomment-73624801", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/52", "id": 73624801, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-10T01:02:51Z", "updated_at": "2015-02-10T01:02:51Z", "author_association": "MEMBER", "body": "If that is the case then this appears to be by design. Closing.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73624801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73699882", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-73699882", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 73699882, "user": {"login": "jmarolf", "id": 9797472, "avatar_url": "https://avatars2.githubusercontent.com/u/9797472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmarolf", "html_url": "https://github.com/jmarolf", "followers_url": "https://api.github.com/users/jmarolf/followers", "following_url": "https://api.github.com/users/jmarolf/following{/other_user}", "gists_url": "https://api.github.com/users/jmarolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmarolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmarolf/subscriptions", "organizations_url": "https://api.github.com/users/jmarolf/orgs", "repos_url": "https://api.github.com/users/jmarolf/repos", "events_url": "https://api.github.com/users/jmarolf/events{/privacy}", "received_events_url": "https://api.github.com/users/jmarolf/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-10T13:38:46Z", "updated_at": "2015-02-10T13:38:46Z", "author_association": "MEMBER", "body": "What would be some example styling rules for VB?  C# has a much broader range of acceptable formats, whereas VB has much of its rules about style built into the language itself.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73699882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73764084", "html_url": "https://github.com/dotnet/codeformatter/pull/57#issuecomment-73764084", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/57", "id": 73764084, "user": {"login": "mmitche", "id": 8725170, "avatar_url": "https://avatars1.githubusercontent.com/u/8725170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmitche", "html_url": "https://github.com/mmitche", "followers_url": "https://api.github.com/users/mmitche/followers", "following_url": "https://api.github.com/users/mmitche/following{/other_user}", "gists_url": "https://api.github.com/users/mmitche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmitche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmitche/subscriptions", "organizations_url": "https://api.github.com/users/mmitche/orgs", "repos_url": "https://api.github.com/users/mmitche/repos", "events_url": "https://api.github.com/users/mmitche/events{/privacy}", "received_events_url": "https://api.github.com/users/mmitche/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-10T19:19:10Z", "updated_at": "2015-02-10T19:19:10Z", "author_association": "OWNER", "body": "@dotnet-bot test this please (test PR functionality)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73764084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73973584", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-73973584", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 73973584, "user": {"login": "Salz150", "id": 6776943, "avatar_url": "https://avatars2.githubusercontent.com/u/6776943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Salz150", "html_url": "https://github.com/Salz150", "followers_url": "https://api.github.com/users/Salz150/followers", "following_url": "https://api.github.com/users/Salz150/following{/other_user}", "gists_url": "https://api.github.com/users/Salz150/gists{/gist_id}", "starred_url": "https://api.github.com/users/Salz150/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Salz150/subscriptions", "organizations_url": "https://api.github.com/users/Salz150/orgs", "repos_url": "https://api.github.com/users/Salz150/repos", "events_url": "https://api.github.com/users/Salz150/events{/privacy}", "received_events_url": "https://api.github.com/users/Salz150/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-11T21:57:58Z", "updated_at": "2015-02-11T21:57:58Z", "author_association": "NONE", "body": "Couple of things I can think of\n1. Use only one statement per line. Don't use the Visual Basic line separator character (:).  \n   \n   For example  \n     `System.Threading.Thread.Sleep(Sleep) : AttemptFailure = True : TryAttempt += 1 : AttemptEX = ex`  \n   \n      becomes  \n   \n     `System.Threading.Thread.Sleep(Sleep)`\n     `AttemptFailure = True`\n     `TryAttempt += 1`\n     `AttemptEX = ex`\n2. Comments on seperate lines.  \n   \n   For example  \n   \n   `Dim foo As Integer ' foo is an integer.`  \n   \n   becomes  \n   \n   `' foo is an integer.`\n   `Dim foo As Integer`  \n\nThere are more here: [\"Visual Basic Coding Conventions\"](https://msdn.microsoft.com/en-us/library/h63fsef3%28v=vs.110%29.aspx)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73973584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73995588", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-73995588", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 73995588, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T00:35:14Z", "updated_at": "2015-02-12T00:35:14Z", "author_association": "MEMBER", "body": "I think for actual code formatting we should prefer the behavior of the pretty lister.  This is the standard by which the over whelming majority of VB developers write their code.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/73995588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74008835", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-74008835", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 74008835, "user": {"login": "AdamSpeight2008", "id": 900107, "avatar_url": "https://avatars1.githubusercontent.com/u/900107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamSpeight2008", "html_url": "https://github.com/AdamSpeight2008", "followers_url": "https://api.github.com/users/AdamSpeight2008/followers", "following_url": "https://api.github.com/users/AdamSpeight2008/following{/other_user}", "gists_url": "https://api.github.com/users/AdamSpeight2008/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamSpeight2008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamSpeight2008/subscriptions", "organizations_url": "https://api.github.com/users/AdamSpeight2008/orgs", "repos_url": "https://api.github.com/users/AdamSpeight2008/repos", "events_url": "https://api.github.com/users/AdamSpeight2008/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamSpeight2008/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T02:50:23Z", "updated_at": "2015-02-12T02:50:23Z", "author_association": "NONE", "body": "@Salz150 Enforcing comments being on a newline.\n\n``` vb.net\n    Function Foo(arg1 As Integer, ' a\n                 arg2 As Integer  ' b\n                 ) As Integer\n        Return 0\n    End Function\n```\n\nIs valid in the VS2015 CTP5, which allows comments after implicit line continuations.\n\nIt can also be used in LINQ Query style.\n\n``` vb\nDim addrs = From i In invites     ' go through list\n            Let addr = Lookup(i)  ' look it up\n            Select i,addr\n\n```\n\nCould potentially change the meaning of the code, or be syntax errors..\n\n---\n\n@jaredpar \nMaybe the Style Guidance should be updated (pre Roslyn). Since now the formatter can access more knowledge of what the source text actual represents.\nThe aims should;-  \n- less visual clutter whilst preserving the meaning.\n- Read-ability\n- Skim-ability\n  So you can quickly look through / at the code, which makes it easier to spot patterns _(which the brain is very good at)_. Those patterns could then be a target of refactoring.\n\nDon't bring the C-Style of code to VB.net,\n- Some ain't appropriate.\n- It can make the code less readable. or ugly.\n- 4 Space indentation? _It needed in C-Style so you can spot the enclosing braces._  \n  2 spaces is good enough in VB.net, because if verbosity of character of keyword and constructs. Block constructL `Block` some code `End Block`\n- Well formatted VB.net code can look as good as C-Style code when it's well.\n\n**Prefer Single Line for Simple code**\n\nWe don't always need multiple lines to express our intent. \n\n``` vb\nIf   ... Then ....\n'<---------------| ( <= 80c )\n```\n\nPrefer simplest IF form. _Especial if the total width of the single line version is `<= 80`_\n\n``` vb\nIf   ... Then ....\n```\n\nRather that the 3 line version.\n\n``` vb\nIf ... Then\n ...\nEnd If\n```\n\nRationale: Guard Statements\n\n**Simple Case-Clauses**\n\n``` vb\nSelect Case value\n  Case Is < 0 : Throw\n  Case 0      : Return \"Zero\"\n  Case 1      : Return \"One\"\n  Case 2      : Return \"Two\"\n  Case Else\nEnd Select\n```\n\n---\n\n**Break Method Parmeters at 80c limit**\n\nMethod should be broken at the 80c, then placed on then following.\n\n``` vb\nFunction Foo( argument0 As SomeReallyLongNamespaceAndClassName, argum1 As SomeReallyLongNamespaceAndClassName, arg2 As SomeReallyLongNamespaceAndClassName) As SomeReallyLongNamespaceAndClassName\n```\n\neg\n\n``` vb\nFunction Foo( argument0 As SomeReallyLongNamespaceAndClassName,\n              argum1    As SomeReallyLongNamespaceAndClassName,\n              arg2      As SomeReallyLongNamespaceAndClassName\n            ) As SomeReallyLongNamespaceAndClassName\n```\n\n---\n\n**Align Assignment**\n\n[source](https://github.com/dotnet/roslyn/blob/master/src/Compilers/VisualBasic/Portable/Scanner/CharacterInfo.vb)\n\n``` vb\n        Friend Const FULLWIDTH_LEFT_PARENTHESIS_STRING As String = FULLWIDTH_LEFT_PARENTHESIS\n        Friend Const FULLWIDTH_RIGHT_PARENTHESIS_STRING As String = ChrW(fullwidth + AscW(\")\"c))\n        Friend Const FULLWIDTH_LEFT_CURLY_BRACKET_STRING As String = FULLWIDTH_LEFT_CURLY_BRACKET\n        Friend Const FULLWIDTH_RIGHT_CURLY_BRACKET_STRING As String = FULLWIDTH_RIGHT_CURLY_BRACKET\n        Friend Const FULLWIDTH_FULL_STOP_STRING As String = FULLWIDTH_FULL_STOP\n        Friend Const FULLWIDTH_COMMA_STRING As String = FULLWIDTH_COMMA\n        Friend Const FULLWIDTH_EQUALS_SIGN_STRING As String = FULLWIDTH_EQUALS_SIGN\n        Friend Const FULLWIDTH_PLUS_SIGN_STRING As String = FULLWIDTH_PLUS_SIGN\n        Friend Const FULLWIDTH_HYPHEN_MINUS_STRING As String = FULLWIDTH_HYPHEN_MINUS\n        Friend Const FULLWIDTH_ASTERISK_STRING As String = ChrW(fullwidth + AscW(\"*\"c))\n        Friend Const FULLWIDTH_SOLIDUS_STRING As String = FULLWIDTH_SOLIDUS\n        Friend Const FULLWIDTH_REVERSE_SOLIDUS_STRING As String = ChrW(fullwidth + AscW(\"\\\"c))\n        Friend Const FULLWIDTH_COLON_STRING As String = FULLWIDTH_COLON\n        Friend Const FULLWIDTH_CIRCUMFLEX_ACCENT_STRING As String = ChrW(fullwidth + AscW(\"^\"c))\n        Friend Const FULLWIDTH_AMPERSAND_STRING As String = FULLWIDTH_AMPERSAND\n        Friend Const FULLWIDTH_NUMBER_SIGN_STRING As String = FULLWIDTH_NUMBER_SIGN\n        Friend Const FULLWIDTH_EXCLAMATION_MARK_STRING As String = ChrW(fullwidth + AscW(\"!\"c))\n        Friend Const FULLWIDTH_QUESTION_MARK_STRING As String = FULLWIDTH_QUESTION_MARK\n        Friend Const FULLWIDTH_COMMERCIAL_AT_STRING As String = ChrW(fullwidth + AscW(\"@\"c))\n        Friend Const FULLWIDTH_LESS_THAN_SIGN_STRING As String = FULLWIDTH_LESS_THAN_SIGN\n        Friend Const FULLWIDTH_GREATER_THAN_SIGN_STRING As String = FULLWIDTH_GREATER_THAN_SIGN\n```\n\n``` vb\n                Friend Const LEFT_PARENTHESIS$    = FULLWIDTH.LEFT_PARENTHESIS\n                Friend Const RIGHT_PARENTHESIS$   = ChrW(_fullwidth + AscW(\")\"c))\n                Friend Const LEFT_CURLY_BRACKET$  = FULLWIDTH.LEFT_CURLY_BRACKET\n                Friend Const RIGHT_CURLY_BRACKET$ = FULLWIDTH.RIGHT_CURLY_BRACKET\n                Friend Const FULL_STOP$           = FULLWIDTH.FULL_STOP\n                Friend Const COMMA$               = FULLWIDTH.COMMA\n                Friend Const EQUALS_SIGN$         = FULLWIDTH.EQUALS_SIGN\n                Friend Const PLUS_SIGN$           = FULLWIDTH.PLUS_SIGN\n                Friend Const HYPHEN_MINUS$        = FULLWIDTH.HYPHEN_MINUS\n                Friend Const ASTERISK$            = ChrW(_fullwidth + AscW(\"*\"c))\n                Friend Const SOLIDUS$             = FULLWIDTH.SOLIDUS\n                Friend Const REVERSE_SOLIDUS$     = ChrW(_fullwidth + AscW(\"\\\"c))\n                Friend Const COLON$               = FULLWIDTH.COLON\n                Friend Const CIRCUMFLEX_ACCENT$   = ChrW(_fullwidth + AscW(\"^\"c))\n                Friend Const AMPERSAND$           = FULLWIDTH.AMPERSAND\n                Friend Const NUMBER_SIGN$         = FULLWIDTH.NUMBER_SIGN\n                Friend Const EXCLAMATION_MARK$    = ChrW(_fullwidth + AscW(\"!\"c))\n                Friend Const QUESTION_MARK$       = FULLWIDTH.QUESTION_MARK\n                Friend Const COMMERCIAL_AT$       = ChrW(_fullwidth + AscW(\"@\"c))\n                Friend Const LESS_THAN_SIGN$      = FULLWIDTH.LESS_THAN_SIGN\n                Friend Const GREATER_THAN_SIGN$   = FULLWIDTH.GREATER_THAN_SIGN\n```\n\n_note: My personal version of Roslyn is structured slight differently, but it's a lot easier to glance over._\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74008835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74009095", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-74009095", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 74009095, "user": {"login": "AdamSpeight2008", "id": 900107, "avatar_url": "https://avatars1.githubusercontent.com/u/900107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamSpeight2008", "html_url": "https://github.com/AdamSpeight2008", "followers_url": "https://api.github.com/users/AdamSpeight2008/followers", "following_url": "https://api.github.com/users/AdamSpeight2008/following{/other_user}", "gists_url": "https://api.github.com/users/AdamSpeight2008/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamSpeight2008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamSpeight2008/subscriptions", "organizations_url": "https://api.github.com/users/AdamSpeight2008/orgs", "repos_url": "https://api.github.com/users/AdamSpeight2008/repos", "events_url": "https://api.github.com/users/AdamSpeight2008/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamSpeight2008/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T02:53:13Z", "updated_at": "2015-02-12T03:50:24Z", "author_association": "NONE", "body": "> @jaredpar \n> This is the standard by which the over whelming majority of VB developers write their code.\n\nNope, That's the default setting in VS and programmers are inherently lazy.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74009095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74024101", "html_url": "https://github.com/dotnet/codeformatter/issues/45#issuecomment-74024101", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/45", "id": 74024101, "user": {"login": "davkean", "id": 1103906, "avatar_url": "https://avatars1.githubusercontent.com/u/1103906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davkean", "html_url": "https://github.com/davkean", "followers_url": "https://api.github.com/users/davkean/followers", "following_url": "https://api.github.com/users/davkean/following{/other_user}", "gists_url": "https://api.github.com/users/davkean/gists{/gist_id}", "starred_url": "https://api.github.com/users/davkean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davkean/subscriptions", "organizations_url": "https://api.github.com/users/davkean/orgs", "repos_url": "https://api.github.com/users/davkean/repos", "events_url": "https://api.github.com/users/davkean/events{/privacy}", "received_events_url": "https://api.github.com/users/davkean/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T06:29:37Z", "updated_at": "2015-02-12T06:29:37Z", "author_association": "MEMBER", "body": "Side note, we've got a bug around this against the MSBuild team.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74024101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74094509", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-74094509", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 74094509, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T15:54:01Z", "updated_at": "2015-02-12T15:54:01Z", "author_association": "MEMBER", "body": "@AdamSpeight2008 \n\nSo because Visual Studio.chose defaults that appeal to a large number of VB developers that makes them lazy?  Sorry, that doesn't follow.  Additionally you didn't address the original point I was making; the pretty lister represents the style used by the majority of VB code.  \n\nChoosing a style should not be an argument about personal preferences.  It should instead be a discussion about making consistent and easily enforcable decisions.  Given that the pretty lister already formats most VB code out there, deviating from it would go against the easy enforcement goal.  \n\nIt would also increase the size of the change necessary to move existing code to the new model.  One of the nice items about the code formatter today is that it's actually not that disruptive for C# code.  With the exception of renaming private fields and adding explicit modifiers, items which would affect Visual Basic as well, it had little affect on the structure of programs.  \n\nI'm not saying we should be bound to the pretty lister strictly.  But we should only deviate from it when there is a clear and demonstrable readability win associated with it.  I haven't seen any such argument yet.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74094509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74096999", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-74096999", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 74096999, "user": {"login": "Salz150", "id": 6776943, "avatar_url": "https://avatars2.githubusercontent.com/u/6776943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Salz150", "html_url": "https://github.com/Salz150", "followers_url": "https://api.github.com/users/Salz150/followers", "following_url": "https://api.github.com/users/Salz150/following{/other_user}", "gists_url": "https://api.github.com/users/Salz150/gists{/gist_id}", "starred_url": "https://api.github.com/users/Salz150/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Salz150/subscriptions", "organizations_url": "https://api.github.com/users/Salz150/orgs", "repos_url": "https://api.github.com/users/Salz150/repos", "events_url": "https://api.github.com/users/Salz150/events{/privacy}", "received_events_url": "https://api.github.com/users/Salz150/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T16:06:05Z", "updated_at": "2015-02-12T16:06:05Z", "author_association": "NONE", "body": "@AdamSpeight2008 good point about inline comments - I didn't think that through.\n\n@jaredpar good point about the `:` - I guess it's in there for a reason. :)  \n\nI like the ideas about aligning assignment operators and breaking method parameters at 80c.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74096999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74098953", "html_url": "https://github.com/dotnet/codeformatter/issues/45#issuecomment-74098953", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/45", "id": 74098953, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T16:15:22Z", "updated_at": "2015-02-12T16:15:22Z", "author_association": "MEMBER", "body": "@davkean \n\nIs it something they indicated they will fix?  The behavior is actually really infectious and ends up affecting how Visual Studio projects generate reference entries in files. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74098953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74139026", "html_url": "https://github.com/dotnet/codeformatter/pull/60#issuecomment-74139026", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/60", "id": 74139026, "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T19:46:33Z", "updated_at": "2015-02-12T19:46:33Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74139026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74141885", "html_url": "https://github.com/dotnet/codeformatter/issues/54#issuecomment-74141885", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/54", "id": 74141885, "user": {"login": "dennis-apter", "id": 5576932, "avatar_url": "https://avatars2.githubusercontent.com/u/5576932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dennis-apter", "html_url": "https://github.com/dennis-apter", "followers_url": "https://api.github.com/users/dennis-apter/followers", "following_url": "https://api.github.com/users/dennis-apter/following{/other_user}", "gists_url": "https://api.github.com/users/dennis-apter/gists{/gist_id}", "starred_url": "https://api.github.com/users/dennis-apter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dennis-apter/subscriptions", "organizations_url": "https://api.github.com/users/dennis-apter/orgs", "repos_url": "https://api.github.com/users/dennis-apter/repos", "events_url": "https://api.github.com/users/dennis-apter/events{/privacy}", "received_events_url": "https://api.github.com/users/dennis-apter/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-12T20:02:31Z", "updated_at": "2015-02-12T20:02:31Z", "author_association": "NONE", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74141885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74188595", "html_url": "https://github.com/dotnet/codeformatter/pull/61#issuecomment-74188595", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/61", "id": 74188595, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T01:20:35Z", "updated_at": "2015-02-13T01:20:35Z", "author_association": "NONE", "body": "Hi **@khellang**, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    </span>\n\nTTYL, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74188595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74188934", "html_url": "https://github.com/dotnet/codeformatter/pull/61#issuecomment-74188934", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/61", "id": 74188934, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T01:23:57Z", "updated_at": "2015-02-13T01:23:57Z", "author_association": "NONE", "body": "**@khellang**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74188934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74190080", "html_url": "https://github.com/dotnet/codeformatter/pull/60#issuecomment-74190080", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/60", "id": 74190080, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T01:35:53Z", "updated_at": "2015-02-13T01:39:23Z", "author_association": "NONE", "body": "Shouldn't README.md match what's in [Program.cs](https://github.com/dotnet/codeformatter/blob/master/src/CodeFormatter/Program.cs#L27-L33)?\n\n> CodeFormatter &lt;project or solution&gt; [&lt;rule types&gt;] [/file:&lt;filename&gt;] [/nocopyright] [/c:&lt;config1,config2&gt;] [/copyright:file]\n>     &lt;rule types&gt; - Rule types to use in addition to the default ones.\n>                    Use ConvertTests to convert MSTest tests to xUnit.\n>     &lt;filename&gt;   - Only apply changes to files with specified name.\n>     &lt;configs&gt;    - Additional preprocessor configurations the formatter\n>                    should run under.\n>     &lt;copyright&gt;  - Specifies file containing copyright header.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74190080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74193806", "html_url": "https://github.com/dotnet/codeformatter/pull/62#issuecomment-74193806", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/62", "id": 74193806, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T02:17:40Z", "updated_at": "2015-02-13T02:17:40Z", "author_association": "CONTRIBUTOR", "body": "Can you redo this commit as yourself?  Set core.name and core.e-mail to your information and then git commit --amend --reset-author.  Then force push your branch with git push origin +assertrule:assertrule.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74193806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74194645", "html_url": "https://github.com/dotnet/codeformatter/pull/60#issuecomment-74194645", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/60", "id": 74194645, "user": {"login": "aaronpowell", "id": 434140, "avatar_url": "https://avatars0.githubusercontent.com/u/434140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronpowell", "html_url": "https://github.com/aaronpowell", "followers_url": "https://api.github.com/users/aaronpowell/followers", "following_url": "https://api.github.com/users/aaronpowell/following{/other_user}", "gists_url": "https://api.github.com/users/aaronpowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronpowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronpowell/subscriptions", "organizations_url": "https://api.github.com/users/aaronpowell/orgs", "repos_url": "https://api.github.com/users/aaronpowell/repos", "events_url": "https://api.github.com/users/aaronpowell/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronpowell/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T02:27:17Z", "updated_at": "2015-02-13T02:27:17Z", "author_association": "CONTRIBUTOR", "body": "Yeah I realised that later yesterday when I was digging in the code, I just hadn't updated my PR :stuck_out_tongue: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74194645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74195668", "html_url": "https://github.com/dotnet/codeformatter/pull/62#issuecomment-74195668", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/62", "id": 74195668, "user": {"login": "YingP99", "id": 9558545, "avatar_url": "https://avatars1.githubusercontent.com/u/9558545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YingP99", "html_url": "https://github.com/YingP99", "followers_url": "https://api.github.com/users/YingP99/followers", "following_url": "https://api.github.com/users/YingP99/following{/other_user}", "gists_url": "https://api.github.com/users/YingP99/gists{/gist_id}", "starred_url": "https://api.github.com/users/YingP99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YingP99/subscriptions", "organizations_url": "https://api.github.com/users/YingP99/orgs", "repos_url": "https://api.github.com/users/YingP99/repos", "events_url": "https://api.github.com/users/YingP99/events{/privacy}", "received_events_url": "https://api.github.com/users/YingP99/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T02:38:43Z", "updated_at": "2015-02-13T02:38:43Z", "author_association": "CONTRIBUTOR", "body": "@ellismg Done!\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74195668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74299239", "html_url": "https://github.com/dotnet/codeformatter/pull/62#issuecomment-74299239", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/62", "id": 74299239, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T18:14:02Z", "updated_at": "2015-02-13T18:14:02Z", "author_association": "MEMBER", "body": "I'm not sure this rule is appropriate for the code formatter for a couple of reasons:\n- It is not a part of our coding guidelines.  All rules today which aren't a part of the guidelines are being moved out and into separate projects.\n- This is not a rule that can be run safely on a code base.  At least not without introducing semantic analysis into the equation.  The translation between `Assert.True(x ==y)` to `Assert.Equals(x, y)` is not always correct.  It confuses reference and value equality without checking to see if the type in question does reference equality.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74299239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74316244", "html_url": "https://github.com/dotnet/codeformatter/pull/62#issuecomment-74316244", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/62", "id": 74316244, "user": {"login": "YingP99", "id": 9558545, "avatar_url": "https://avatars1.githubusercontent.com/u/9558545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YingP99", "html_url": "https://github.com/YingP99", "followers_url": "https://api.github.com/users/YingP99/followers", "following_url": "https://api.github.com/users/YingP99/following{/other_user}", "gists_url": "https://api.github.com/users/YingP99/gists{/gist_id}", "starred_url": "https://api.github.com/users/YingP99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YingP99/subscriptions", "organizations_url": "https://api.github.com/users/YingP99/orgs", "repos_url": "https://api.github.com/users/YingP99/repos", "events_url": "https://api.github.com/users/YingP99/events{/privacy}", "received_events_url": "https://api.github.com/users/YingP99/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T19:56:16Z", "updated_at": "2015-02-13T19:56:16Z", "author_association": "CONTRIBUTOR", "body": "@jaredpar you are right. This is not meant for product code, but for converting some Assert in xUnit tests, and I don't want to get it complicated by involving semantic analysis. I put here because other test related rules such as convert MSTest to xUnit tests are also in this project.\nWhere is or will be another project for non-coding guideline rules?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74316244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74318840", "html_url": "https://github.com/dotnet/codeformatter/pull/59#issuecomment-74318840", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/59", "id": 74318840, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T20:12:38Z", "updated_at": "2015-02-13T20:12:38Z", "author_association": "MEMBER", "body": "@FiveTimesTheFun can you sign the CLA for .NET contributions?\n\nhttps://cla2.dotnetfoundation.org/\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74318840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74318950", "html_url": "https://github.com/dotnet/codeformatter/pull/60#issuecomment-74318950", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/60", "id": 74318950, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T20:13:18Z", "updated_at": "2015-02-13T20:13:18Z", "author_association": "MEMBER", "body": "@aaronpowell can you please sign the CLA for .NET Foundation Contribution? \n\nhttps://cla2.dotnetfoundation.org/\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74318950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74319052", "html_url": "https://github.com/dotnet/codeformatter/pull/59#issuecomment-74319052", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/59", "id": 74319052, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T20:13:51Z", "updated_at": "2015-02-13T20:13:51Z", "author_association": "CONTRIBUTOR", "body": "He should have already signed it, for his work on CoreFx.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74319052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74319282", "html_url": "https://github.com/dotnet/codeformatter/pull/59#issuecomment-74319282", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/59", "id": 74319282, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T20:15:14Z", "updated_at": "2015-02-13T20:15:14Z", "author_association": "MEMBER", "body": "@ellismg if he has then that works fine.  The CLA bot got enabled after this PR was started so I just needed to manually verify the pre-existing PRs.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74319282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74319768", "html_url": "https://github.com/dotnet/codeformatter/pull/62#issuecomment-74319768", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/62", "id": 74319768, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T20:18:22Z", "updated_at": "2015-02-13T20:18:22Z", "author_association": "MEMBER", "body": "@YingP99 \n\nI think this repo is the right place for such conversion tools, we just need to create a different application for it.  I'm actually doing that right now for the rest of the xUnit conversion code.  I'm not sure if this rule should or shouldn't go into that one.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74319768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74340192", "html_url": "https://github.com/dotnet/codeformatter/pull/62#issuecomment-74340192", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/62", "id": 74340192, "user": {"login": "YingP99", "id": 9558545, "avatar_url": "https://avatars1.githubusercontent.com/u/9558545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YingP99", "html_url": "https://github.com/YingP99", "followers_url": "https://api.github.com/users/YingP99/followers", "following_url": "https://api.github.com/users/YingP99/following{/other_user}", "gists_url": "https://api.github.com/users/YingP99/gists{/gist_id}", "starred_url": "https://api.github.com/users/YingP99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YingP99/subscriptions", "organizations_url": "https://api.github.com/users/YingP99/orgs", "repos_url": "https://api.github.com/users/YingP99/repos", "events_url": "https://api.github.com/users/YingP99/events{/privacy}", "received_events_url": "https://api.github.com/users/YingP99/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T22:42:04Z", "updated_at": "2015-02-13T22:42:04Z", "author_association": "CONTRIBUTOR", "body": "@jaredpar  It definitely should go with the xUnit test convert rule. Can I merge this pull request first, then you move it? I'll be on vacation next week (leave on Sunday), so I'd like to get it in today.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74340192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74341244", "html_url": "https://github.com/dotnet/codeformatter/pull/62#issuecomment-74341244", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/62", "id": 74341244, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T22:50:29Z", "updated_at": "2015-02-13T22:50:29Z", "author_association": "MEMBER", "body": "@YingP99 sure, that's fine.  I can just pull it into my branch later today.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74341244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74342651", "html_url": "https://github.com/dotnet/codeformatter/pull/62#issuecomment-74342651", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/62", "id": 74342651, "user": {"login": "YingP99", "id": 9558545, "avatar_url": "https://avatars1.githubusercontent.com/u/9558545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YingP99", "html_url": "https://github.com/YingP99", "followers_url": "https://api.github.com/users/YingP99/followers", "following_url": "https://api.github.com/users/YingP99/following{/other_user}", "gists_url": "https://api.github.com/users/YingP99/gists{/gist_id}", "starred_url": "https://api.github.com/users/YingP99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YingP99/subscriptions", "organizations_url": "https://api.github.com/users/YingP99/orgs", "repos_url": "https://api.github.com/users/YingP99/repos", "events_url": "https://api.github.com/users/YingP99/events{/privacy}", "received_events_url": "https://api.github.com/users/YingP99/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-13T23:02:21Z", "updated_at": "2015-02-13T23:02:21Z", "author_association": "CONTRIBUTOR", "body": "@jaredpar merged. Please move it to another project.\nIf you have time and agree with @ellismg, please address his comments as well (I'm not disagree with him). Thx.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74342651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74411977", "html_url": "https://github.com/dotnet/codeformatter/pull/60#issuecomment-74411977", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/60", "id": 74411977, "user": {"login": "aaronpowell", "id": 434140, "avatar_url": "https://avatars0.githubusercontent.com/u/434140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronpowell", "html_url": "https://github.com/aaronpowell", "followers_url": "https://api.github.com/users/aaronpowell/followers", "following_url": "https://api.github.com/users/aaronpowell/following{/other_user}", "gists_url": "https://api.github.com/users/aaronpowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronpowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronpowell/subscriptions", "organizations_url": "https://api.github.com/users/aaronpowell/orgs", "repos_url": "https://api.github.com/users/aaronpowell/repos", "events_url": "https://api.github.com/users/aaronpowell/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronpowell/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-15T10:27:39Z", "updated_at": "2015-02-15T10:27:39Z", "author_association": "CONTRIBUTOR", "body": "@jaredpar - Seems that DocuSign have broken my account so there will be a delay on me signing my CLA while they try and resolve my account issues\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74411977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74412636", "html_url": "https://github.com/dotnet/codeformatter/pull/60#issuecomment-74412636", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/60", "id": 74412636, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-15T10:49:42Z", "updated_at": "2015-02-15T10:49:42Z", "author_association": "NONE", "body": "**@aaronpowell**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74412636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74430429", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74430429", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74430429, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-15T18:44:54Z", "updated_at": "2015-02-15T18:44:54Z", "author_association": "MEMBER", "body": "I just used this switch today on some code I was working on and it functioned as expected.  Could you show me the exact command line you were using?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74430429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74437025", "html_url": "https://github.com/dotnet/codeformatter/pull/64#issuecomment-74437025", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/64", "id": 74437025, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-15T21:07:00Z", "updated_at": "2015-02-15T21:07:00Z", "author_association": "OWNER", "body": "@jaredpar \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74437025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74468962", "html_url": "https://github.com/dotnet/codeformatter/issues/19#issuecomment-74468962", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/19", "id": 74468962, "user": {"login": "MovGP0", "id": 83339, "avatar_url": "https://avatars3.githubusercontent.com/u/83339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MovGP0", "html_url": "https://github.com/MovGP0", "followers_url": "https://api.github.com/users/MovGP0/followers", "following_url": "https://api.github.com/users/MovGP0/following{/other_user}", "gists_url": "https://api.github.com/users/MovGP0/gists{/gist_id}", "starred_url": "https://api.github.com/users/MovGP0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MovGP0/subscriptions", "organizations_url": "https://api.github.com/users/MovGP0/orgs", "repos_url": "https://api.github.com/users/MovGP0/repos", "events_url": "https://api.github.com/users/MovGP0/events{/privacy}", "received_events_url": "https://api.github.com/users/MovGP0/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T07:29:23Z", "updated_at": "2015-02-16T07:29:23Z", "author_association": "NONE", "body": "indeed they should. However, it might cause a breaking change. You would have to ensure that the code still compiles after changing something. I'd recommend to produce a warning rather than an automatic change. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74468962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74492687", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74492687", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74492687, "user": {"login": "marcelodeaguiar", "id": 1771472, "avatar_url": "https://avatars2.githubusercontent.com/u/1771472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelodeaguiar", "html_url": "https://github.com/marcelodeaguiar", "followers_url": "https://api.github.com/users/marcelodeaguiar/followers", "following_url": "https://api.github.com/users/marcelodeaguiar/following{/other_user}", "gists_url": "https://api.github.com/users/marcelodeaguiar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelodeaguiar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelodeaguiar/subscriptions", "organizations_url": "https://api.github.com/users/marcelodeaguiar/orgs", "repos_url": "https://api.github.com/users/marcelodeaguiar/repos", "events_url": "https://api.github.com/users/marcelodeaguiar/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelodeaguiar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T11:11:27Z", "updated_at": "2015-02-16T11:14:35Z", "author_association": "NONE", "body": "Sure,\n\n![error](https://cloud.githubusercontent.com/assets/1771472/6210753/da505d22-b5b9-11e4-9cdc-07af36ca40b1.png)\n\nI made some tests and it has nothing to do with the comparer, but with the way git bash interprets my commands. the argument is passed as **C:/Program Files (x86)/Git/nocopyright** intead of **/nocopyright** problably because of the **/**.\n\nChanging the params to start with dash (**-**) or double dashes (**--**) works fine.\n\nMy environment:\nWin 10 Tech Preview\nVS 2015\nGit/Bash 1.9.5\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74492687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74494439", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-74494439", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 74494439, "user": {"login": "AnthonyDGreen", "id": 10539978, "avatar_url": "https://avatars3.githubusercontent.com/u/10539978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthonyDGreen", "html_url": "https://github.com/AnthonyDGreen", "followers_url": "https://api.github.com/users/AnthonyDGreen/followers", "following_url": "https://api.github.com/users/AnthonyDGreen/following{/other_user}", "gists_url": "https://api.github.com/users/AnthonyDGreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthonyDGreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthonyDGreen/subscriptions", "organizations_url": "https://api.github.com/users/AnthonyDGreen/orgs", "repos_url": "https://api.github.com/users/AnthonyDGreen/repos", "events_url": "https://api.github.com/users/AnthonyDGreen/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthonyDGreen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T11:26:10Z", "updated_at": "2015-02-16T11:26:10Z", "author_association": "NONE", "body": "Hey @Kraeven,\n\nThanks for making this request. We've started work on porting some of the shared rules to VB. Expect to hear more from us on VB style in the coming days.\n\nRE: Kraeven said:\n\n> _...we have a lot of projects in VB (unfortunat[e]ly)_\n\nOur open source community is young yet and I think this raises a good opportunity to talk about how we all engage each other here.\n\nFirst and foremost, the .NET Foundation is and needs to remain a place where **all** .NET developers feel welcome to participate. That means C# developers, F# developers, and VB developers too. Of course we all have preferences, but, we absolutely do not want to create a culture here where developers feel a need when jumping into conversation to apologize for what languages or technologies they're using or not using, or to make disparaging remarks about Java, or JavaScript, or VB, or C++, or VB6, or anything else to establish any kind of \"street cred\". You shouldn't feel that when you come here and you have VB.NET code you need to drop a casual insult on the product so that other developers will respect you. There should be an expectation here that you and your inquiries and opinions, provided they are on topic and given in a civil manner are respected and responded to in kind as a matter of course. Remarks like this are at worst inflammatory and at best distracting and send the message to people who use VB (like myself) that the .NET Foundation open source community is hostile and not a place for them and it sends the message to people who don't use VB that they can get cool points here by dumping on it. Neither of those are the right messages to send.\n\nSecondly, it is important to keep in mind that this is a community where developers can engage members of the Microsoft product teams who work directly on a number of products, including VB and you never know when someone who is or has worked on a product, such as VB, may be listening or may even be the very person you're soliciting help from or making a suggestion to. For example, both Jared and I are members of the Visual Basic Language Design team. I've been a huge VB fan and advocate personally and professionally for years (even before joining Microsoft), have worked on the VB compiler as part of the \"Roslyn\" project for five years, and coincidentally own figuring out whether and how to extend the VB styling guidelines already provided by the formatter/pretty-lister. Jared has owned or worked in parts of the VB compiler, IDE, and debugger for many more years than that. We and dozens of others have worked very hard and very passionately on VB for years and we take an incredible amount of pride in that work and VB and its community just as much as we do in C# and F# and those communities. And by \"take pride in\" I mean we're _fans_ who have VB T-shirts, and VB coffee mugs, and VB banners in the hallways who use VB daily and delight in the opportunity to do so (and to be clear, _most_ of us, particularly on the Managed Languages team work on _and in_ more than one language). When you flippantly insult a product that dozens of people have poured a lot of love into in a forum that's kept vibrant in part by the dialog between consumers and those product owners you run the risk of creating either disengaged or defensive product group team members, neither of which contributes positively to the health of the .NET open source community.\n\nIn summary, let's keep this place fun, positive, and welcoming for everyone invested in .NET and its future and leave the language bashing and all the other stuff outside, ok?\n\nWarmest regards,\n\n**Anthony D. Green**\nProgram Manager\n**Visual Basic, C#, and F# Languages Team**\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74494439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74500958", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74500958", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74500958, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T12:24:13Z", "updated_at": "2015-02-16T12:24:13Z", "author_association": "NONE", "body": "Isn't this a shell problem rather than a bug in the formatter?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74500958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74502650", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74502650", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74502650, "user": {"login": "marcelodeaguiar", "id": 1771472, "avatar_url": "https://avatars2.githubusercontent.com/u/1771472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelodeaguiar", "html_url": "https://github.com/marcelodeaguiar", "followers_url": "https://api.github.com/users/marcelodeaguiar/followers", "following_url": "https://api.github.com/users/marcelodeaguiar/following{/other_user}", "gists_url": "https://api.github.com/users/marcelodeaguiar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelodeaguiar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelodeaguiar/subscriptions", "organizations_url": "https://api.github.com/users/marcelodeaguiar/orgs", "repos_url": "https://api.github.com/users/marcelodeaguiar/repos", "events_url": "https://api.github.com/users/marcelodeaguiar/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelodeaguiar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T12:40:51Z", "updated_at": "2015-02-16T12:40:51Z", "author_association": "NONE", "body": "@khellang I don't know if its _bug_. Isn't it the way unix based shells work? Git bash is a fairly common shell so I think it should be considered...\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74502650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74507094", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74507094", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74507094, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T13:21:09Z", "updated_at": "2015-02-16T13:21:09Z", "author_association": "NONE", "body": "Well, you might argue that `/` isn't the best way to denote a switch/flag cross-plat. I guess that's why most UNIX stuff use `-` or `--` :smile:\n\nI'm not sure there's a way around it other than switching the character, since Git Bash ends up passing a path. Maybe do the check using `.EndsWith`? :stuck_out_tongue_closed_eyes: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74507094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74508700", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74508700", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74508700, "user": {"login": "marcelodeaguiar", "id": 1771472, "avatar_url": "https://avatars2.githubusercontent.com/u/1771472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelodeaguiar", "html_url": "https://github.com/marcelodeaguiar", "followers_url": "https://api.github.com/users/marcelodeaguiar/followers", "following_url": "https://api.github.com/users/marcelodeaguiar/following{/other_user}", "gists_url": "https://api.github.com/users/marcelodeaguiar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelodeaguiar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelodeaguiar/subscriptions", "organizations_url": "https://api.github.com/users/marcelodeaguiar/orgs", "repos_url": "https://api.github.com/users/marcelodeaguiar/repos", "events_url": "https://api.github.com/users/marcelodeaguiar/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelodeaguiar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T13:34:54Z", "updated_at": "2015-02-16T13:34:54Z", "author_association": "NONE", "body": "@khellang \nI think the best approach is to use `--` as its pretty common and its an easy solution. \n`.EndsWith` looks more like a bad workaround I think.\n\nI can submit the change if it is accepted.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74508700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74512800", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74512800", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74512800, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T14:07:31Z", "updated_at": "2015-02-16T14:07:31Z", "author_association": "NONE", "body": "Maybe something like [Mono.Options](https://www.nuget.org/packages/Mono.Options/) or similar could be used?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74512800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74519680", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74519680", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74519680, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T14:54:44Z", "updated_at": "2015-02-16T14:54:44Z", "author_association": "MEMBER", "body": "I think we need to move to accept `-` as an option specifier.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74519680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74521939", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74521939", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74521939, "user": {"login": "richlander", "id": 2608468, "avatar_url": "https://avatars3.githubusercontent.com/u/2608468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richlander", "html_url": "https://github.com/richlander", "followers_url": "https://api.github.com/users/richlander/followers", "following_url": "https://api.github.com/users/richlander/following{/other_user}", "gists_url": "https://api.github.com/users/richlander/gists{/gist_id}", "starred_url": "https://api.github.com/users/richlander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richlander/subscriptions", "organizations_url": "https://api.github.com/users/richlander/orgs", "repos_url": "https://api.github.com/users/richlander/repos", "events_url": "https://api.github.com/users/richlander/events{/privacy}", "received_events_url": "https://api.github.com/users/richlander/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T15:09:43Z", "updated_at": "2015-02-16T15:09:43Z", "author_association": "OWNER", "body": "@jaredpar - I suspect that's right. After using git all the time, the dashes are starting to feel quite natural.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74521939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74536955", "html_url": "https://github.com/dotnet/codeformatter/pull/64#issuecomment-74536955", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/64", "id": 74536955, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T16:43:29Z", "updated_at": "2015-02-16T16:43:29Z", "author_association": "MEMBER", "body": ":+1:\n\nGave some feedback on a couple of small issues to consider.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74536955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74542073", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74542073", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74542073, "user": {"login": "marcelodeaguiar", "id": 1771472, "avatar_url": "https://avatars2.githubusercontent.com/u/1771472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelodeaguiar", "html_url": "https://github.com/marcelodeaguiar", "followers_url": "https://api.github.com/users/marcelodeaguiar/followers", "following_url": "https://api.github.com/users/marcelodeaguiar/following{/other_user}", "gists_url": "https://api.github.com/users/marcelodeaguiar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelodeaguiar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelodeaguiar/subscriptions", "organizations_url": "https://api.github.com/users/marcelodeaguiar/orgs", "repos_url": "https://api.github.com/users/marcelodeaguiar/repos", "events_url": "https://api.github.com/users/marcelodeaguiar/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelodeaguiar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T17:16:41Z", "updated_at": "2015-02-16T17:17:58Z", "author_association": "NONE", "body": "Most of the tools use 2 dashes for option full name and 1 dash for option shortcut. You can see this all over Git documentation, Eg: `--force` and `-f` or `--directory` and `-d`\n\n@khellang I did not know [Mono.Options](https://www.nuget.org/packages/Mono.Options/) but it looks awesome.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74542073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74551294", "html_url": "https://github.com/dotnet/codeformatter/pull/64#issuecomment-74551294", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/64", "id": 74551294, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T18:18:38Z", "updated_at": "2015-02-16T18:18:38Z", "author_association": "OWNER", "body": "Sorry, but I can't change the code anymore as I have the perfect number of lines being added! :-)\n\nJust kidding, I'll take a look.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74551294/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74567065", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-74567065", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 74567065, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-16T20:22:55Z", "updated_at": "2015-02-16T20:22:55Z", "author_association": "NONE", "body": "@marcelodeaguiar Yep, it's a quick way to get decent command line options (supporting `-`, `--` and `/` switches) with minimal fuzz (I think its just a single .cs file). :smile:\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/74567065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75108003", "html_url": "https://github.com/dotnet/codeformatter/issues/71#issuecomment-75108003", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/71", "id": 75108003, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-19T18:29:38Z", "updated_at": "2015-02-19T18:29:38Z", "author_association": "MEMBER", "body": "Thanks for reporting this issue!  I will get this looked at.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75108003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75108270", "html_url": "https://github.com/dotnet/codeformatter/issues/70#issuecomment-75108270", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/70", "id": 75108270, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-19T18:31:04Z", "updated_at": "2015-02-19T18:31:04Z", "author_association": "MEMBER", "body": "Thanks for reporting!\n\nThat's a really interesting case we hadn't considered when implementing that rule.  Will take a look at getting that fixed. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75108270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75108658", "html_url": "https://github.com/dotnet/codeformatter/issues/69#issuecomment-75108658", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/69", "id": 75108658, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-19T18:33:09Z", "updated_at": "2015-02-19T18:33:09Z", "author_association": "MEMBER", "body": "Thanks for reporting this issue.  This looks to be the following bug in Roslyn\n\n> https://github.com/dotnet/roslyn/issues/157\n\nThe code formatter as currently released was using Roslyn beta2.  I just upgrade it to RC1 and this issue should be fixed now.  Going to add a regression test for it today to ensure it was fixed.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75108658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75108873", "html_url": "https://github.com/dotnet/codeformatter/issues/68#issuecomment-75108873", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/68", "id": 75108873, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-19T18:34:22Z", "updated_at": "2015-02-19T18:34:22Z", "author_association": "MEMBER", "body": "Thanks for reporting.\n\nThat is very strange.  I think that may be another artifact of us using the beta2 version of Roslyn.  Will add a test to verify.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75108873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75118689", "html_url": "https://github.com/dotnet/codeformatter/issues/70#issuecomment-75118689", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/70", "id": 75118689, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-19T19:28:01Z", "updated_at": "2015-02-19T19:28:01Z", "author_association": "MEMBER", "body": "Actually on second thought that is just a bug.  `MyStruct` should be marked `private` by the code formatter as it is a nested struct and that is the default accessibility for such a construct.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75118689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75138015", "html_url": "https://github.com/dotnet/codeformatter/issues/70#issuecomment-75138015", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/70", "id": 75138015, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-19T21:17:59Z", "updated_at": "2015-02-19T21:17:59Z", "author_association": "MEMBER", "body": "@roncain \n\nDo you have a full sample for this that I could look at?  I tried putting just that code through the formatter and it produced the expected output. \n\n``` csharp\npublic class MyClass\n{\n    private enum MyEnum { }\n    private struct MyStruct\n    {\n        public MyStruct(MyEnum e) { }\n    }\n}\n```\n\nI've updated this code recently though so it's possible that it's a bug I already fixed. \n\nEither way there is a regression test for this scenario now.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75138015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75159550", "html_url": "https://github.com/dotnet/codeformatter/pull/72#issuecomment-75159550", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/72", "id": 75159550, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-19T23:15:34Z", "updated_at": "2015-02-19T23:15:34Z", "author_association": "NONE", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75159550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75270642", "html_url": "https://github.com/dotnet/codeformatter/issues/73#issuecomment-75270642", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/73", "id": 75270642, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-20T16:45:42Z", "updated_at": "2015-02-20T16:45:42Z", "author_association": "MEMBER", "body": "A couple of users have reported this now but we are having some problems tracking it down.  Can you give me a bit more info here?\n- Can you provide the exact command line used? \n- What versions of Visual Studio and MSBuild are installed on the machine? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75270642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75272882", "html_url": "https://github.com/dotnet/codeformatter/issues/73#issuecomment-75272882", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/73", "id": 75272882, "user": {"login": "oniony", "id": 5895, "avatar_url": "https://avatars2.githubusercontent.com/u/5895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oniony", "html_url": "https://github.com/oniony", "followers_url": "https://api.github.com/users/oniony/followers", "following_url": "https://api.github.com/users/oniony/following{/other_user}", "gists_url": "https://api.github.com/users/oniony/gists{/gist_id}", "starred_url": "https://api.github.com/users/oniony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oniony/subscriptions", "organizations_url": "https://api.github.com/users/oniony/orgs", "repos_url": "https://api.github.com/users/oniony/repos", "events_url": "https://api.github.com/users/oniony/events{/privacy}", "received_events_url": "https://api.github.com/users/oniony/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-20T16:56:56Z", "updated_at": "2015-02-20T16:56:56Z", "author_association": "NONE", "body": "I am running it, for example, like this:\n\n```\nd:\\WorkingCopy\\ThirdParty\\codeformatter>src\\CodeFormatter\\bin\\Debug\\CodeFormatter.exe src\\CodeFormatter.sln\n```\n\nI just today installed the Visual Studio 2015 Preview (14.0.22310.1 DP). The framework version reported by Visual Studio is 4.5.53349.\n\nHere is my NuGet cache:\n\n![image](https://cloud.githubusercontent.com/assets/5895/6305217/6a4642ce-b921-11e4-9266-e1517f12bf3e.png)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75272882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75273909", "html_url": "https://github.com/dotnet/codeformatter/issues/73#issuecomment-75273909", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/73", "id": 75273909, "user": {"login": "oniony", "id": 5895, "avatar_url": "https://avatars2.githubusercontent.com/u/5895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oniony", "html_url": "https://github.com/oniony", "followers_url": "https://api.github.com/users/oniony/followers", "following_url": "https://api.github.com/users/oniony/following{/other_user}", "gists_url": "https://api.github.com/users/oniony/gists{/gist_id}", "starred_url": "https://api.github.com/users/oniony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oniony/subscriptions", "organizations_url": "https://api.github.com/users/oniony/orgs", "repos_url": "https://api.github.com/users/oniony/repos", "events_url": "https://api.github.com/users/oniony/events{/privacy}", "received_events_url": "https://api.github.com/users/oniony/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-20T17:00:44Z", "updated_at": "2015-02-20T17:00:44Z", "author_association": "NONE", "body": "```\nD:\\WorkingCopy\\ThirdParty\\codeformatter>msbuild\nMicrosoft (R) Build Engine version 14.0.22310.1\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75273909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75335340", "html_url": "https://github.com/dotnet/codeformatter/issues/73#issuecomment-75335340", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/73", "id": 75335340, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-20T22:59:40Z", "updated_at": "2015-02-20T22:59:40Z", "author_association": "MEMBER", "body": "Thanks for the extra info.  I'm going to be looking into this over the weekend. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75335340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75613807", "html_url": "https://github.com/dotnet/codeformatter/issues/19#issuecomment-75613807", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/19", "id": 75613807, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-23T19:30:27Z", "updated_at": "2015-02-23T19:30:27Z", "author_association": "MEMBER", "body": "I'm not sure this is a good idea assuming that we have InternalsVisibleTo.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75613807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75628409", "html_url": "https://github.com/dotnet/codeformatter/pull/76#issuecomment-75628409", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/76", "id": 75628409, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-23T20:47:58Z", "updated_at": "2015-02-23T20:47:58Z", "author_association": "MEMBER", "body": "I just found an issue with that, doesn't work correctly with:\n\n```\n// Copyright blah\n// License X\n\n// My Comment\n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75628409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75629650", "html_url": "https://github.com/dotnet/codeformatter/pull/76#issuecomment-75629650", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/76", "id": 75629650, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-23T20:54:58Z", "updated_at": "2015-02-23T20:54:58Z", "author_association": "MEMBER", "body": "Above is fixed in the updated PR.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75629650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75633034", "html_url": "https://github.com/dotnet/codeformatter/pull/76#issuecomment-75633034", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/76", "id": 75633034, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-23T21:10:30Z", "updated_at": "2015-02-23T21:10:30Z", "author_association": "MEMBER", "body": "Above fixes the issue where there are whitespaces after the comment in the header (really rare but could happen).\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75633034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75689253", "html_url": "https://github.com/dotnet/codeformatter/issues/75#issuecomment-75689253", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/75", "id": 75689253, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-24T02:51:31Z", "updated_at": "2015-02-24T02:51:31Z", "author_association": "MEMBER", "body": "I would look at some Roslyn example projects. I.e:\nhttp://www.codeproject.com/Articles/302595/Roslyn-CTP-Three-Introductory-Projects\n\nto get the idea of how it works like. After that I would either base your projects on one of the example projects and fill any gaps in knowledge with the documentation:\nhttps://roslyn.codeplex.com/documentation\n(they have samples in the documentation too)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75689253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75690706", "html_url": "https://github.com/dotnet/codeformatter/issues/19#issuecomment-75690706", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/19", "id": 75690706, "user": {"login": "MovGP0", "id": 83339, "avatar_url": "https://avatars3.githubusercontent.com/u/83339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MovGP0", "html_url": "https://github.com/MovGP0", "followers_url": "https://api.github.com/users/MovGP0/followers", "following_url": "https://api.github.com/users/MovGP0/following{/other_user}", "gists_url": "https://api.github.com/users/MovGP0/gists{/gist_id}", "starred_url": "https://api.github.com/users/MovGP0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MovGP0/subscriptions", "organizations_url": "https://api.github.com/users/MovGP0/orgs", "repos_url": "https://api.github.com/users/MovGP0/repos", "events_url": "https://api.github.com/users/MovGP0/events{/privacy}", "received_events_url": "https://api.github.com/users/MovGP0/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-24T03:09:29Z", "updated_at": "2015-02-24T03:09:29Z", "author_association": "NONE", "body": "Assuming that the reformatting happens at a solution-wide scale, the `InternalsVisibleToAttribute` shouldn't be a problem. But that is not guaranteed. \n\nReformatting of public and internal names is always a problem. When Reflection is involved, even renaming of private objects might cause problems. \n\nI think it would be a good idea to implement such a feature. By default it should only cause a warning, and when enabled it should reformat. So an opt-in approach rather than an opt-out. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75690706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75780446", "html_url": "https://github.com/dotnet/codeformatter/issues/78#issuecomment-75780446", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/78", "id": 75780446, "user": {"login": "jterry75", "id": 5858142, "avatar_url": "https://avatars1.githubusercontent.com/u/5858142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jterry75", "html_url": "https://github.com/jterry75", "followers_url": "https://api.github.com/users/jterry75/followers", "following_url": "https://api.github.com/users/jterry75/following{/other_user}", "gists_url": "https://api.github.com/users/jterry75/gists{/gist_id}", "starred_url": "https://api.github.com/users/jterry75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jterry75/subscriptions", "organizations_url": "https://api.github.com/users/jterry75/orgs", "repos_url": "https://api.github.com/users/jterry75/repos", "events_url": "https://api.github.com/users/jterry75/events{/privacy}", "received_events_url": "https://api.github.com/users/jterry75/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-24T15:43:40Z", "updated_at": "2015-02-24T15:43:40Z", "author_association": "NONE", "body": "Sorry still learning\\* This is open.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/75780446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76048521", "html_url": "https://github.com/dotnet/codeformatter/pull/76#issuecomment-76048521", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/76", "id": 76048521, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-25T20:25:22Z", "updated_at": "2015-02-25T20:25:22Z", "author_association": "MEMBER", "body": "Hi @jaredpar, could you take a look at this PR?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76048521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76067062", "html_url": "https://github.com/dotnet/codeformatter/pull/76#issuecomment-76067062", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/76", "id": 76067062, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-25T21:44:52Z", "updated_at": "2015-02-25T21:44:52Z", "author_association": "MEMBER", "body": ":+1: \n\nThanks for fixing that. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76067062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76365511", "html_url": "https://github.com/dotnet/codeformatter/pull/81#issuecomment-76365511", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/81", "id": 76365511, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-27T09:49:42Z", "updated_at": "2015-02-27T09:49:42Z", "author_association": "MEMBER", "body": "Merging this new because I found a more serious issue I need to fix that depends on this change.  Even though I'm merging this now I will respond / update code based on any feedback left on this PR.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76365511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76440426", "html_url": "https://github.com/dotnet/codeformatter/issues/77#issuecomment-76440426", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/77", "id": 76440426, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-27T17:55:20Z", "updated_at": "2015-02-27T17:55:20Z", "author_association": "MEMBER", "body": "I don't understand what the error is here.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76440426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76450439", "html_url": "https://github.com/dotnet/codeformatter/issues/77#issuecomment-76450439", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/77", "id": 76450439, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-27T18:55:41Z", "updated_at": "2015-02-27T18:55:41Z", "author_association": "NONE", "body": "@jaredpar Trailing underscores are removed :smile:\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76450439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76459429", "html_url": "https://github.com/dotnet/codeformatter/issues/77#issuecomment-76459429", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/77", "id": 76459429, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-27T19:47:53Z", "updated_at": "2015-02-27T19:47:53Z", "author_association": "MEMBER", "body": "@khellang ah, thanks for pointing that out. \n\nThe logic for that part of the rule was to rename one of the other common private field name patterns:\n\n``` csharp\nprivate int field_;\n```\n\nI agree the behavior displayed here is bad, I'm just trying to find a way to rationalize the behavior so the intended case continues to get renamed but the above case does not.  Maybe it's as simple as only removing trailing slashes when the field is camel cased.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76459429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76537683", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-76537683", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 76537683, "user": {"login": "GaTechThomas", "id": 9170315, "avatar_url": "https://avatars1.githubusercontent.com/u/9170315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GaTechThomas", "html_url": "https://github.com/GaTechThomas", "followers_url": "https://api.github.com/users/GaTechThomas/followers", "following_url": "https://api.github.com/users/GaTechThomas/following{/other_user}", "gists_url": "https://api.github.com/users/GaTechThomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/GaTechThomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GaTechThomas/subscriptions", "organizations_url": "https://api.github.com/users/GaTechThomas/orgs", "repos_url": "https://api.github.com/users/GaTechThomas/repos", "events_url": "https://api.github.com/users/GaTechThomas/events{/privacy}", "received_events_url": "https://api.github.com/users/GaTechThomas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-28T18:06:44Z", "updated_at": "2015-02-28T18:06:44Z", "author_association": "NONE", "body": "It seems that more detail in the error message would be helpful.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76537683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76732905", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-76732905", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 76732905, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-02T15:34:38Z", "updated_at": "2015-03-02T15:34:38Z", "author_association": "MEMBER", "body": "@GaTechThomas what extra data could help here? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76732905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76765616", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-76765616", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 76765616, "user": {"login": "GaTechThomas", "id": 9170315, "avatar_url": "https://avatars1.githubusercontent.com/u/9170315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GaTechThomas", "html_url": "https://github.com/GaTechThomas", "followers_url": "https://api.github.com/users/GaTechThomas/followers", "following_url": "https://api.github.com/users/GaTechThomas/following{/other_user}", "gists_url": "https://api.github.com/users/GaTechThomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/GaTechThomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GaTechThomas/subscriptions", "organizations_url": "https://api.github.com/users/GaTechThomas/orgs", "repos_url": "https://api.github.com/users/GaTechThomas/repos", "events_url": "https://api.github.com/users/GaTechThomas/events{/privacy}", "received_events_url": "https://api.github.com/users/GaTechThomas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-02T18:09:29Z", "updated_at": "2015-03-02T18:09:29Z", "author_association": "NONE", "body": "I don't use unix, so I can't reproduce, but from the screenshot it looks like the error output is a bit confusing. Maybe showing something along the lines of \"Executing Codeformatter.exe using the following parameters: ...\".\n\nThat output may not be desirable for all runs, but maybe so when the -verbose option is set.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76765616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76766124", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-76766124", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 76766124, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-02T18:11:02Z", "updated_at": "2015-03-02T18:11:02Z", "author_association": "MEMBER", "body": "@GaTechThomas but what makes CodeFormatter special here?  Why shouldn't all console apps have this output? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76766124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76767749", "html_url": "https://github.com/dotnet/codeformatter/issues/70#issuecomment-76767749", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/70", "id": 76767749, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-02T18:16:34Z", "updated_at": "2015-03-02T18:16:34Z", "author_association": "MEMBER", "body": "Chatting with @roncain this morning I figured out why I could not reproduce this bug.  A bad link caused him to use a much older version of the tool where this bug did exist.  I was using the latest sources where it had been fixed.  The regression test should ensure we don't hit this again. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76767749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76783827", "html_url": "https://github.com/dotnet/codeformatter/pull/85#issuecomment-76783827", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/85", "id": 76783827, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-02T19:06:17Z", "updated_at": "2015-03-02T19:06:17Z", "author_association": "OWNER", "body": "@jaredpar, do you want to take a look?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76783827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76786485", "html_url": "https://github.com/dotnet/codeformatter/pull/85#issuecomment-76786485", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/85", "id": 76786485, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-02T19:13:29Z", "updated_at": "2015-03-02T19:13:29Z", "author_association": "MEMBER", "body": "Yes.  Will look. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76786485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76893876", "html_url": "https://github.com/dotnet/codeformatter/issues/87#issuecomment-76893876", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87", "id": 76893876, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-03T06:27:19Z", "updated_at": "2015-03-03T06:27:19Z", "author_association": "MEMBER", "body": "@jasonmalinowski is there any way to load up ASP.Net vNext projects in Roslyn today?  Right now the CodeFormatter just uses a MSBuildWorkspace.  If there is an easy way to load this project type I'm sure it wouldn't take much work to get the code formatter to support it. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76893876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76894234", "html_url": "https://github.com/dotnet/codeformatter/issues/87#issuecomment-76894234", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87", "id": 76894234, "user": {"login": "davidfowl", "id": 95136, "avatar_url": "https://avatars3.githubusercontent.com/u/95136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidfowl", "html_url": "https://github.com/davidfowl", "followers_url": "https://api.github.com/users/davidfowl/followers", "following_url": "https://api.github.com/users/davidfowl/following{/other_user}", "gists_url": "https://api.github.com/users/davidfowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidfowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidfowl/subscriptions", "organizations_url": "https://api.github.com/users/davidfowl/orgs", "repos_url": "https://api.github.com/users/davidfowl/repos", "events_url": "https://api.github.com/users/davidfowl/events{/privacy}", "received_events_url": "https://api.github.com/users/davidfowl/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-03T06:31:13Z", "updated_at": "2015-03-03T06:31:13Z", "author_association": "NONE", "body": "It's possible but not very nice right now. We're working on an API that will make this less sucky. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76894234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76894308", "html_url": "https://github.com/dotnet/codeformatter/issues/87#issuecomment-76894308", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87", "id": 76894308, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-03T06:31:55Z", "updated_at": "2015-03-03T06:31:55Z", "author_association": "MEMBER", "body": "@davidfowl is there a GitHub issue I can track for this API?  Once it's available I'd like to try it out here. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76894308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76894590", "html_url": "https://github.com/dotnet/codeformatter/issues/87#issuecomment-76894590", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87", "id": 76894590, "user": {"login": "davidfowl", "id": 95136, "avatar_url": "https://avatars3.githubusercontent.com/u/95136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidfowl", "html_url": "https://github.com/davidfowl", "followers_url": "https://api.github.com/users/davidfowl/followers", "following_url": "https://api.github.com/users/davidfowl/following{/other_user}", "gists_url": "https://api.github.com/users/davidfowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidfowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidfowl/subscriptions", "organizations_url": "https://api.github.com/users/davidfowl/orgs", "repos_url": "https://api.github.com/users/davidfowl/repos", "events_url": "https://api.github.com/users/davidfowl/events{/privacy}", "received_events_url": "https://api.github.com/users/davidfowl/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-03T06:35:19Z", "updated_at": "2015-03-03T06:35:19Z", "author_association": "NONE", "body": "Not really, we're mostly layering things differently (some in NuGet, some in XRE) to make this possible. I'll update this thread when we get closer to having something useful.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76894590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76941950", "html_url": "https://github.com/dotnet/codeformatter/issues/56#issuecomment-76941950", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/56", "id": 76941950, "user": {"login": "GaTechThomas", "id": 9170315, "avatar_url": "https://avatars1.githubusercontent.com/u/9170315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GaTechThomas", "html_url": "https://github.com/GaTechThomas", "followers_url": "https://api.github.com/users/GaTechThomas/followers", "following_url": "https://api.github.com/users/GaTechThomas/following{/other_user}", "gists_url": "https://api.github.com/users/GaTechThomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/GaTechThomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GaTechThomas/subscriptions", "organizations_url": "https://api.github.com/users/GaTechThomas/orgs", "repos_url": "https://api.github.com/users/GaTechThomas/repos", "events_url": "https://api.github.com/users/GaTechThomas/events{/privacy}", "received_events_url": "https://api.github.com/users/GaTechThomas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-03T13:08:38Z", "updated_at": "2015-03-03T13:08:38Z", "author_association": "NONE", "body": "I would expect that any app writing verbose output would be better served by displaying this sort of information. \n\nIt's the equivalent of, say, asking a contractor to do a series of things around the house, and then having them repeat back in detail what they're going to do... Sometimes things get lost in how they are asked or how they're heard, or both, and both parties are better off for having clarified the scope of work.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/76941950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77032952", "html_url": "https://github.com/dotnet/codeformatter/issues/87#issuecomment-77032952", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87", "id": 77032952, "user": {"login": "danroth27", "id": 1874516, "avatar_url": "https://avatars2.githubusercontent.com/u/1874516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danroth27", "html_url": "https://github.com/danroth27", "followers_url": "https://api.github.com/users/danroth27/followers", "following_url": "https://api.github.com/users/danroth27/following{/other_user}", "gists_url": "https://api.github.com/users/danroth27/gists{/gist_id}", "starred_url": "https://api.github.com/users/danroth27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danroth27/subscriptions", "organizations_url": "https://api.github.com/users/danroth27/orgs", "repos_url": "https://api.github.com/users/danroth27/repos", "events_url": "https://api.github.com/users/danroth27/events{/privacy}", "received_events_url": "https://api.github.com/users/danroth27/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-03T20:57:48Z", "updated_at": "2015-03-03T20:57:48Z", "author_association": "MEMBER", "body": "@conniey Please also note that you don't have to convert your existing library project to a kproj to be able to reference it from your ASP.NET 5 app as long as you are ok with the app running on the full .NET Framework. You can reference csproj based projects from an ASP.NET 5 app. You would need to port your existing project only if you wanted to be able to run on .NET Core.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77032952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77069168", "html_url": "https://github.com/dotnet/codeformatter/issues/87#issuecomment-77069168", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87", "id": 77069168, "user": {"login": "Petermarcu", "id": 8228359, "avatar_url": "https://avatars3.githubusercontent.com/u/8228359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Petermarcu", "html_url": "https://github.com/Petermarcu", "followers_url": "https://api.github.com/users/Petermarcu/followers", "following_url": "https://api.github.com/users/Petermarcu/following{/other_user}", "gists_url": "https://api.github.com/users/Petermarcu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Petermarcu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Petermarcu/subscriptions", "organizations_url": "https://api.github.com/users/Petermarcu/orgs", "repos_url": "https://api.github.com/users/Petermarcu/repos", "events_url": "https://api.github.com/users/Petermarcu/events{/privacy}", "received_events_url": "https://api.github.com/users/Petermarcu/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-04T00:11:09Z", "updated_at": "2015-03-04T00:11:09Z", "author_association": "MEMBER", "body": "@conniey @danroth27 We also plan on adding ASP.NET 5 as a target from a Portable Library so you wont need to have a seperate project file and multiple builds if you want to have you're shared logic applicable to multiple places.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77069168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77307722", "html_url": "https://github.com/dotnet/codeformatter/issues/12#issuecomment-77307722", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "id": 77307722, "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-05T05:12:00Z", "updated_at": "2015-03-05T05:12:00Z", "author_association": "CONTRIBUTOR", "body": "@jaredpar;@ellismg \nI agree and would also like to see if there could be a validation mode. One that doesn't modify the sources and we can run as part of the regular build. I would love to see two modes for this:\n1. Warn-mode: \n    \\* Each violation would be reported as a warning. I.e.\n                 MyFolder\\MyFile.cs(10,20): warning: Description of issue for use education. \n    \\* The exit code would be 0.\n    \\* This would be useful in the inner-dev loop: Provide early user education to dev, power squiggles in VS.\n2. Error-mode: \n    \\* Each violation would be reported as an error. I.e.\n                 MyFolder\\MyFile.cs(10,20): error: Description of issue for use education. \n    \\* The exit code would be 1.\n    \\* This would be useful as part of the pull-request validation.\n\nI don't have too much time. But I might be able to free some stuff up and pick up the work in the coming weeks (No guarantee though)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77307722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77330974", "html_url": "https://github.com/dotnet/codeformatter/issues/89#issuecomment-77330974", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/89", "id": 77330974, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-05T09:18:44Z", "updated_at": "2015-03-05T09:18:44Z", "author_association": "CONTRIBUTOR", "body": "Seems like a fine addition to me.  You'll also want to be able to pass define flags.  @dannyvv are you interested in doing the work and submitting a PR?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77330974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77398208", "html_url": "https://github.com/dotnet/codeformatter/issues/12#issuecomment-77398208", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "id": 77398208, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-05T16:37:03Z", "updated_at": "2015-03-05T16:37:03Z", "author_association": "MEMBER", "body": "@dannyvv \n\nImplementing validation mode is actually pretty straight forward functionally and could be done in a short amount of time.  Essentially at the very last step instead of calling `TryApplyChanges` we enter into a diffing mode where we simply compare the textual content of every `Document` object in the set of `DocumentId` being considered for changes.\n\nImplementing validation mode with good error messages though is trickier.  There are certain rules for which generating a good error message is easy: private field rename, explicit this, etc ...  Rules where we both identify and correct the problem.  \n\nBut rules like just formatting the code aren't even really doable.  We don't control the code in question there and simply rely on the operation being idempotent.  It's not really possible to detect the error up front.  \n\nIn some ways though maybe this is okay.  The tool is designed to make formatting easy, not bug developers about individual rule.  Perhaps a message that `Document.cs isn't formatted` correctly is enough.  Giving detail about the error would imply that we wanted them to fix it vs. say \"just run the formatter\".  \n\nFor context though we haven't really found a need for validation mode yet.  The way I've been handing Roslyn is I just run the formatter once a week, validate the tests are passing and push the change.  The only reason I even send the change out for review is because the IDE team is interested in inspecting the output to see if they've inadvertently introduced any errors into the code.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77398208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77483863", "html_url": "https://github.com/dotnet/codeformatter/issues/89#issuecomment-77483863", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/89", "id": 77483863, "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-06T00:36:27Z", "updated_at": "2015-03-06T00:36:27Z", "author_association": "CONTRIBUTOR", "body": "I'll go with an rsp file and do the work..\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77483863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77485142", "html_url": "https://github.com/dotnet/codeformatter/pull/91#issuecomment-77485142", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/91", "id": 77485142, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-06T00:47:45Z", "updated_at": "2015-03-06T00:47:45Z", "author_association": "NONE", "body": "Hi **@dannyvv**, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    </span>\n\nTTYL, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77485142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77486395", "html_url": "https://github.com/dotnet/codeformatter/pull/92#issuecomment-77486395", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/92", "id": 77486395, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-06T00:58:53Z", "updated_at": "2015-03-06T00:58:53Z", "author_association": "NONE", "body": "Hi **@dannyvv**, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    </span>\n\nTTYL, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77486395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77497434", "html_url": "https://github.com/dotnet/codeformatter/pull/92#issuecomment-77497434", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/92", "id": 77497434, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-06T02:46:35Z", "updated_at": "2015-03-06T02:46:35Z", "author_association": "NONE", "body": "**@dannyvv**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77497434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77497435", "html_url": "https://github.com/dotnet/codeformatter/pull/91#issuecomment-77497435", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/91", "id": 77497435, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-06T02:46:35Z", "updated_at": "2015-03-06T02:46:35Z", "author_association": "NONE", "body": "**@dannyvv**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77497435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77600797", "html_url": "https://github.com/dotnet/codeformatter/pull/85#issuecomment-77600797", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/85", "id": 77600797, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-06T17:38:08Z", "updated_at": "2015-03-06T17:38:08Z", "author_association": "MEMBER", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77600797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77612844", "html_url": "https://github.com/dotnet/codeformatter/pull/85#issuecomment-77612844", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/85", "id": 77612844, "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-06T18:47:02Z", "updated_at": "2015-03-06T18:47:02Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the review.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77612844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77788869", "html_url": "https://github.com/dotnet/codeformatter/pull/91#issuecomment-77788869", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/91", "id": 77788869, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T01:47:00Z", "updated_at": "2015-03-09T01:47:00Z", "author_association": "CONTRIBUTOR", "body": "LGTM.  @jaredpar do you have any feedback?  I think before merging we should rebase this down to one change without any merge commits.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77788869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77788911", "html_url": "https://github.com/dotnet/codeformatter/pull/92#issuecomment-77788911", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/92", "id": 77788911, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T01:47:39Z", "updated_at": "2015-03-09T01:47:39Z", "author_association": "CONTRIBUTOR", "body": "LGTM.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77788911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77798517", "html_url": "https://github.com/dotnet/codeformatter/issues/87#issuecomment-77798517", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/87", "id": 77798517, "user": {"login": "conniey", "id": 10136526, "avatar_url": "https://avatars3.githubusercontent.com/u/10136526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/conniey", "html_url": "https://github.com/conniey", "followers_url": "https://api.github.com/users/conniey/followers", "following_url": "https://api.github.com/users/conniey/following{/other_user}", "gists_url": "https://api.github.com/users/conniey/gists{/gist_id}", "starred_url": "https://api.github.com/users/conniey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/conniey/subscriptions", "organizations_url": "https://api.github.com/users/conniey/orgs", "repos_url": "https://api.github.com/users/conniey/repos", "events_url": "https://api.github.com/users/conniey/events{/privacy}", "received_events_url": "https://api.github.com/users/conniey/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T04:24:02Z", "updated_at": "2015-03-09T04:24:02Z", "author_association": "NONE", "body": "@danroth27 The application that uses the library, I want to run on .NET Core. :) Thanks for the tip though.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77798517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77890335", "html_url": "https://github.com/dotnet/codeformatter/pull/91#issuecomment-77890335", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/91", "id": 77890335, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T16:36:20Z", "updated_at": "2015-03-09T16:36:20Z", "author_association": "MEMBER", "body": "@dannyvv where are you seeing MSBuildWorkspace emit with a BOM?  That is definitely a bug if it is happening.  \n\nFWIW: It doesn't emit BOMs on any files when we run it against Roslyn. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77890335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77905529", "html_url": "https://github.com/dotnet/codeformatter/pull/93#issuecomment-77905529", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/93", "id": 77905529, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T17:50:15Z", "updated_at": "2015-03-09T17:50:15Z", "author_association": "MEMBER", "body": "I'm curious about why this approach vs. just using the shell to feed projects to the tool?  Usually I just do something like the following to run code formatter on large directory trees.  \n\n```\ngci -re -in *proj | %{ codeformatter $_ } \n```\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77905529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77907178", "html_url": "https://github.com/dotnet/codeformatter/pull/93#issuecomment-77907178", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/93", "id": 77907178, "user": {"login": "AlekseyTs", "id": 10522107, "avatar_url": "https://avatars0.githubusercontent.com/u/10522107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlekseyTs", "html_url": "https://github.com/AlekseyTs", "followers_url": "https://api.github.com/users/AlekseyTs/followers", "following_url": "https://api.github.com/users/AlekseyTs/following{/other_user}", "gists_url": "https://api.github.com/users/AlekseyTs/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlekseyTs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlekseyTs/subscriptions", "organizations_url": "https://api.github.com/users/AlekseyTs/orgs", "repos_url": "https://api.github.com/users/AlekseyTs/repos", "events_url": "https://api.github.com/users/AlekseyTs/events{/privacy}", "received_events_url": "https://api.github.com/users/AlekseyTs/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T17:58:34Z", "updated_at": "2015-03-09T17:58:34Z", "author_association": "NONE", "body": "I prefer tool handling this scenario and also giving me the tally at the end. Also, not everyone is proficient with shell commands.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77907178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77920720", "html_url": "https://github.com/dotnet/codeformatter/pull/91#issuecomment-77920720", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/91", "id": 77920720, "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T19:07:10Z", "updated_at": "2015-03-09T19:07:10Z", "author_association": "CONTRIBUTOR", "body": "@jaredpar : http://index/#Microsoft.CodeAnalysis.Workspaces.Desktop/Workspace/MSBuild/MSBuildWorkspace.cs,751dabb506683b7c\nLine 972.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77920720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77962274", "html_url": "https://github.com/dotnet/codeformatter/pull/91#issuecomment-77962274", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/91", "id": 77962274, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T22:55:05Z", "updated_at": "2015-03-09T22:55:05Z", "author_association": "MEMBER", "body": "@dannyvv that feels like a bug.  Filed the following to track it.\n\nhttps://github.com/dotnet/roslyn/issues/1146\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77962274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77962366", "html_url": "https://github.com/dotnet/codeformatter/pull/91#issuecomment-77962366", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/91", "id": 77962366, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-09T22:55:37Z", "updated_at": "2015-03-09T22:55:37Z", "author_association": "MEMBER", "body": "Thanks @dannyvv !!!\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77962366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77979803", "html_url": "https://github.com/dotnet/codeformatter/issues/12#issuecomment-77979803", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "id": 77979803, "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-10T01:31:06Z", "updated_at": "2015-03-10T01:31:06Z", "author_association": "CONTRIBUTOR", "body": "My idea was to create a ValidationLogger. Rules can report issues with a corresponding location info. Those reported will be printed to the user immediately\nBefore saving We'll do a diff between old and new. For each line that doesn't have a rule report associated with it, report a generic issue with the old + new line.\nWe can see how this works in practice and if we need to make the last step smarter and support diff regions.\n\nI can't seem to self-assign this issue, but feel free to assign to me.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77979803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77979938", "html_url": "https://github.com/dotnet/codeformatter/issues/12#issuecomment-77979938", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "id": 77979938, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-10T01:32:32Z", "updated_at": "2015-03-10T01:32:32Z", "author_association": "MEMBER", "body": "@dannyvv I'm curious what the goal of validation mode would be though?  At the point the tool knows what the violation is, it can fix it immediately.  What would be the value in giving the user an error when we could just fix it?  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77979938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77982671", "html_url": "https://github.com/dotnet/codeformatter/issues/12#issuecomment-77982671", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "id": 77982671, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-10T01:59:06Z", "updated_at": "2015-03-10T01:59:06Z", "author_association": "MEMBER", "body": "I do agree though this would be the most logical way to implement it. Specific where possible, diff where necessary.\n\nJaredPar from a phone\nhttp://blog.paranoidcoding.com/\n\n---\n\nFrom: dannyvv notifications@github.com\nSent: Monday, March 9, 2015 6:31:07 PM\nTo: dotnet/codeformatter\nCc: Jared Parsons\nSubject: Re: [codeformatter] Validation mode (#12)\n\nMy idea was to create a ValidationLogger. Rules can report issues with a corresponding location info. Those reported will be printed to the user immediately\nBefore saving We'll do a diff between old and new. For each line that doesn't have a rule report associated with it, report a generic issue with the old + new line.\nWe can see how this works in practice and if we need to make the last step smarter and support diff regions.\n\nI can't seem to self-assign this issue, but feel free to assign to me.\n\n## \n\nReply to this email directly or view it on GitHubhttps://github.com/dotnet/codeformatter/issues/12#issuecomment-77979803.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77982671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77982738", "html_url": "https://github.com/dotnet/codeformatter/issues/12#issuecomment-77982738", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/12", "id": 77982738, "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-10T01:59:51Z", "updated_at": "2015-03-10T01:59:51Z", "author_association": "CONTRIBUTOR", "body": "Short:\n\n\u00b7         I Want to be educated early on about what I am doing wrong\n\n\u00b7         I Don\u2019t want to be the one to always be cleaning up others stuff.\n\nI have certain coding guidelines hard-baked into my fingers. I work on various projects with various guidelines and it is impossible to remember all the details of each codebase.\nI have always managed to configure resharper for those projects in such a way that auto-cleanup from VS would get the code to the correct guidelines of the team.\n\nIt is always a pain when the guideline are not enforced somewhere because with this way of working I always end up having too many changes not related to the core fix and carry massive merge conflict penalties because of them.\nI therefore would like the tool to run as part of the checkin validation (either a unittest if we have to be on github, or a proper gate on the internal systems) Just to ensure nobody checks in bad formatting to protect me and my team members.\n\nI want this validation to run as part of the build, so we get early feedback on what we are doing wrong with proper squiggles in VS. So over time we can start typing new code that follows the guideline.\n\nI don\u2019t want to auto-fixup in the regular build either because a clean build system only writes to the obj and src tree. And never ever touches the source tree. So the fixup should be done by running external command.\n\nThanks,\nDanny\n\nFrom: Jared Parsons [mailto:notifications@github.com]\nSent: Monday, March 9, 2015 6:33 PM\nTo: dotnet/codeformatter\nCc: Danny van Velzen\nSubject: Re: [codeformatter] Validation mode (#12)\n\n@dannyvvhttps://github.com/dannyvv I'm curious what the goal of validation mode would be though? At the point the tool knows what the violation is, it can fix it immediately. What would be the value in giving the user an error when we could just fix it?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/dotnet/codeformatter/issues/12#issuecomment-77979938.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/77982738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/78333689", "html_url": "https://github.com/dotnet/codeformatter/pull/97#issuecomment-78333689", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/97", "id": 78333689, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-11T18:15:30Z", "updated_at": "2015-03-11T18:15:30Z", "author_association": "NONE", "body": "Hi **@AndyGerlicher**, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    </span>\n\nTTYL, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/78333689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/78336216", "html_url": "https://github.com/dotnet/codeformatter/pull/97#issuecomment-78336216", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/97", "id": 78336216, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-11T18:18:10Z", "updated_at": "2015-03-11T18:18:10Z", "author_association": "NONE", "body": "**@AndyGerlicher**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/78336216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/78574537", "html_url": "https://github.com/dotnet/codeformatter/pull/97#issuecomment-78574537", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/97", "id": 78574537, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-12T19:10:55Z", "updated_at": "2015-03-12T19:10:55Z", "author_association": "MEMBER", "body": "LGTM :+1: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/78574537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/79086627", "html_url": "https://github.com/dotnet/codeformatter/pull/97#issuecomment-79086627", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/97", "id": 79086627, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-13T16:11:08Z", "updated_at": "2015-03-13T16:11:08Z", "author_association": "MEMBER", "body": ":+1: \n\nThanks for contributing that fix! \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/79086627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/79111913", "html_url": "https://github.com/dotnet/codeformatter/issues/98#issuecomment-79111913", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/98", "id": 79111913, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-13T16:37:51Z", "updated_at": "2015-03-13T16:37:51Z", "author_association": "MEMBER", "body": "To my knowledge there is no XML configuration here.  The only config file added to my knowledge was done by https://github.com/dotnet/codeformatter/commit/05039a8c1a730ce53e9ecabfc22d3ae98a14f834 and that uses the C# / VB RSP file format which is not XML.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/79111913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/80548533", "html_url": "https://github.com/dotnet/codeformatter/issues/13#issuecomment-80548533", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/13", "id": 80548533, "user": {"login": "am11", "id": 3840695, "avatar_url": "https://avatars0.githubusercontent.com/u/3840695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/am11", "html_url": "https://github.com/am11", "followers_url": "https://api.github.com/users/am11/followers", "following_url": "https://api.github.com/users/am11/following{/other_user}", "gists_url": "https://api.github.com/users/am11/gists{/gist_id}", "starred_url": "https://api.github.com/users/am11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/am11/subscriptions", "organizations_url": "https://api.github.com/users/am11/orgs", "repos_url": "https://api.github.com/users/am11/repos", "events_url": "https://api.github.com/users/am11/events{/privacy}", "received_events_url": "https://api.github.com/users/am11/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-14T15:53:21Z", "updated_at": "2015-03-14T15:53:21Z", "author_association": "NONE", "body": ":+1: \n\nI use [BatchFormat](https://visualstudiogallery.msdn.microsoft.com/a7f75c34-82b4-4357-9c66-c18e32b9393e) VS extension (by @yongfa365 [yongfa365/BatchFormat](https://github.com/yongfa365/BatchFormat)) which formats and sort/remove-unused using directives solution-wide with a click in solution explorer.\n\nWould be really great if we get this Roslyn-driven intelligent code formatting tool as extension and as simple in usage as `BatchFormat`. Also, a simple MSBuild integration support (for pre-build task) would be a cherry on top. :cherries: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/80548533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/85858929", "html_url": "https://github.com/dotnet/codeformatter/issues/79#issuecomment-85858929", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/79", "id": 85858929, "user": {"login": "david-mitchell", "id": 540554, "avatar_url": "https://avatars3.githubusercontent.com/u/540554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-mitchell", "html_url": "https://github.com/david-mitchell", "followers_url": "https://api.github.com/users/david-mitchell/followers", "following_url": "https://api.github.com/users/david-mitchell/following{/other_user}", "gists_url": "https://api.github.com/users/david-mitchell/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-mitchell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-mitchell/subscriptions", "organizations_url": "https://api.github.com/users/david-mitchell/orgs", "repos_url": "https://api.github.com/users/david-mitchell/repos", "events_url": "https://api.github.com/users/david-mitchell/events{/privacy}", "received_events_url": "https://api.github.com/users/david-mitchell/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-25T05:47:50Z", "updated_at": "2015-03-25T05:47:50Z", "author_association": "NONE", "body": "I would like to take this one.\n\nFrom my understanding, support for this would require a new `ILocalSemanticFormattingRule` that would run the diagnostics looking for `CS8019` warnings and removing the offending `using` directives. As in the `UsingLocationRule`, files with preprocessor directives should probably be ignored.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/85858929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/86346090", "html_url": "https://github.com/dotnet/codeformatter/pull/101#issuecomment-86346090", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/101", "id": 86346090, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-26T05:12:18Z", "updated_at": "2015-03-26T05:12:18Z", "author_association": "NONE", "body": "Hi **@david-mitchell**, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    </span>\n\nTTYL, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/86346090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/86347446", "html_url": "https://github.com/dotnet/codeformatter/pull/101#issuecomment-86347446", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/101", "id": 86347446, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-26T05:19:32Z", "updated_at": "2015-03-26T05:19:32Z", "author_association": "NONE", "body": "**@david-mitchell**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/86347446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91611849", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-91611849", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 91611849, "user": {"login": "AndyGerlicher", "id": 9847849, "avatar_url": "https://avatars3.githubusercontent.com/u/9847849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyGerlicher", "html_url": "https://github.com/AndyGerlicher", "followers_url": "https://api.github.com/users/AndyGerlicher/followers", "following_url": "https://api.github.com/users/AndyGerlicher/following{/other_user}", "gists_url": "https://api.github.com/users/AndyGerlicher/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyGerlicher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyGerlicher/subscriptions", "organizations_url": "https://api.github.com/users/AndyGerlicher/orgs", "repos_url": "https://api.github.com/users/AndyGerlicher/repos", "events_url": "https://api.github.com/users/AndyGerlicher/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyGerlicher/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-10T16:39:20Z", "updated_at": "2015-04-10T16:39:20Z", "author_association": "CONTRIBUTOR", "body": "In the xplat branch, we've been using monodevelop / Xamarin Studio. Have you tried that branch? And if so what issues are you seeing?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91611849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91616476", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-91616476", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 91616476, "user": {"login": "mteper", "id": 1029340, "avatar_url": "https://avatars1.githubusercontent.com/u/1029340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mteper", "html_url": "https://github.com/mteper", "followers_url": "https://api.github.com/users/mteper/followers", "following_url": "https://api.github.com/users/mteper/following{/other_user}", "gists_url": "https://api.github.com/users/mteper/gists{/gist_id}", "starred_url": "https://api.github.com/users/mteper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mteper/subscriptions", "organizations_url": "https://api.github.com/users/mteper/orgs", "repos_url": "https://api.github.com/users/mteper/repos", "events_url": "https://api.github.com/users/mteper/events{/privacy}", "received_events_url": "https://api.github.com/users/mteper/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-10T16:46:42Z", "updated_at": "2015-04-10T16:46:42Z", "author_association": "NONE", "body": "Nope, haven't tried yet, wasn't aware of it. Thanks for the pointer!\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91616476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91617830", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-91617830", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 91617830, "user": {"login": "AndyGerlicher", "id": 9847849, "avatar_url": "https://avatars3.githubusercontent.com/u/9847849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyGerlicher", "html_url": "https://github.com/AndyGerlicher", "followers_url": "https://api.github.com/users/AndyGerlicher/followers", "following_url": "https://api.github.com/users/AndyGerlicher/following{/other_user}", "gists_url": "https://api.github.com/users/AndyGerlicher/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyGerlicher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyGerlicher/subscriptions", "organizations_url": "https://api.github.com/users/AndyGerlicher/orgs", "repos_url": "https://api.github.com/users/AndyGerlicher/repos", "events_url": "https://api.github.com/users/AndyGerlicher/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyGerlicher/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-10T16:49:01Z", "updated_at": "2015-04-10T16:49:01Z", "author_association": "CONTRIBUTOR", "body": "I'll close this then. Reopen if you have any issues.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91617830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91619308", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-91619308", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 91619308, "user": {"login": "AndyGerlicher", "id": 9847849, "avatar_url": "https://avatars3.githubusercontent.com/u/9847849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyGerlicher", "html_url": "https://github.com/AndyGerlicher", "followers_url": "https://api.github.com/users/AndyGerlicher/followers", "following_url": "https://api.github.com/users/AndyGerlicher/following{/other_user}", "gists_url": "https://api.github.com/users/AndyGerlicher/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyGerlicher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyGerlicher/subscriptions", "organizations_url": "https://api.github.com/users/AndyGerlicher/orgs", "repos_url": "https://api.github.com/users/AndyGerlicher/repos", "events_url": "https://api.github.com/users/AndyGerlicher/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyGerlicher/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-10T16:51:44Z", "updated_at": "2015-04-10T16:51:44Z", "author_association": "CONTRIBUTOR", "body": "Uhg, I was working in the msbuild repo and clicked on this issue link in my email... There's definitely not an xplat branch or Linux support here, so I'll reopen. Sorry about that!\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91619308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91708298", "html_url": "https://github.com/dotnet/codeformatter/issues/108#issuecomment-91708298", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/108", "id": 91708298, "user": {"login": "mellinoe", "id": 8918977, "avatar_url": "https://avatars1.githubusercontent.com/u/8918977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mellinoe", "html_url": "https://github.com/mellinoe", "followers_url": "https://api.github.com/users/mellinoe/followers", "following_url": "https://api.github.com/users/mellinoe/following{/other_user}", "gists_url": "https://api.github.com/users/mellinoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mellinoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mellinoe/subscriptions", "organizations_url": "https://api.github.com/users/mellinoe/orgs", "repos_url": "https://api.github.com/users/mellinoe/repos", "events_url": "https://api.github.com/users/mellinoe/events{/privacy}", "received_events_url": "https://api.github.com/users/mellinoe/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-10T22:27:04Z", "updated_at": "2015-04-10T22:27:04Z", "author_association": "NONE", "body": "Line 776 and 807 in the gist are the lines that are left unchanged.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/91708298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92071347", "html_url": "https://github.com/dotnet/codeformatter/issues/55#issuecomment-92071347", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/55", "id": 92071347, "user": {"login": "Kraeven", "id": 696633, "avatar_url": "https://avatars0.githubusercontent.com/u/696633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kraeven", "html_url": "https://github.com/Kraeven", "followers_url": "https://api.github.com/users/Kraeven/followers", "following_url": "https://api.github.com/users/Kraeven/following{/other_user}", "gists_url": "https://api.github.com/users/Kraeven/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kraeven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kraeven/subscriptions", "organizations_url": "https://api.github.com/users/Kraeven/orgs", "repos_url": "https://api.github.com/users/Kraeven/repos", "events_url": "https://api.github.com/users/Kraeven/events{/privacy}", "received_events_url": "https://api.github.com/users/Kraeven/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-12T14:36:22Z", "updated_at": "2015-04-12T14:36:22Z", "author_association": "NONE", "body": "Oh sorry, I really didn't 't mean it that way. I love VB.. Clear and very\nreadable.. It's a pity that it's not so popular, most tools and plugins are\nfocused on other languages, people tend to dismiss the power that lies\nunderneath just because C# has the masses acceptance. Thanks for answering\nmy request, I really appreciate it.\n\nGot to get me such a T-shirt.. :-)\n\nKeep up the good work!\n\nKraeven\n\nOp 16 feb. 2015 12:26 PM schreef \"Anthony D. Green\" <\nnotifications@github.com>:\n\n> Hey @Kraeven,\n> \n> Thanks for making this request. We've started work on porting some of the\n> shared rules to VB. Expect to hear more from us on VB style in the coming\n> days.\n> \n> RE: Kraeven said:\n> \n> > ...we have a lot of projects in VB (unfortunat[e]ly)\n> \n> Our open source community is young yet and I think this raises a good\n> opportunity to talk about how we all engage each other here.\n> \n> First and foremost, the .NET Foundation is and needs to remain a place\n> where all .NET developers feel welcome to participate. That means C#\n> developers, F# developers, and VB developers too. Of course we all have\n> preferences, but, we absolutely do not want to create a culture here where\n> developers feel a need when jumping into conversation to apologize for what\n> languages or technologies they're using or not using, or to make\n> disparaging remarks about Java, or JavaScript, or VB, or C++, or VB6, or\n> anything else to establish any kind of \"street cred\". You shouldn't feel\n> that when you come here and you have VB.NET code you need to drop a casual\n> insult on the product so that other developers will respect you. There\n> should be an expectation here that you and your inquiries and opinions,\n> provided they are on topic and given in a civil manner are respected and\n> responded to in kind as a matter of course. Remarks like this are at worst\n> inflammatory and at best distracting a nd send the message to people who\n> use VB (like myself) that the .NET Foundation open source community is\n> hostile and not a place for them and it sends the message to people who\n> don't use VB that they can get cool points here by dumping on it. Neither\n> of those are the right messages to send.\n> \n> Secondly, it is important to keep in mind that this is a community where\n> developers can engage members of the Microsoft product teams who work\n> directly on a number of products, including VB and you never know when\n> someone who is or has worked on a product, such as VB, may be listening or\n> may even be the very person you're soliciting help from or making a\n> suggestion to. For example, both Jared and I are members of the Visual\n> Basic Language Design team. I've been a huge VB fan and advocate personally\n> and professionally for years (even before joining Microsoft), have worked\n> on the VB compiler as part of the \"Roslyn\" project for five years, and\n> coincidentally own figuring out whether and how to extend the VB styling\n> guidelines already provided by the formatter/pretty-lister. Jared has owned\n> or worked in parts of the VB compiler, IDE, and debugger for many more\n> years than that. We and dozens of others have worked very hard and very\n> passionately on VB for years and we take an incredible amount of pride in\n> that work and VB and its community just as much as we do in C# and F# and\n> those communities. And by \"take pride in\" I mean we're fans who have VB\n> T-shirts, and VB coffee mugs, and VB banners in the hallways who use VB\n> daily and delight in the opportunity to do so (and to be clear, most of us,\n> particularly on the Managed Languages team work on and in more than one\n> language). When you flippantly insult a product that dozens of people have\n> poured a lot of love into in a forum that's kept vibrant in part by the\n> dialog between consumers and those product owners you run the risk of\n> creating either disengaged or defensive product group team members, neither\n> of which contributes positively to the health of the .NET open source\n> community.\n> \n> In summary, let's keep this place fun, positive, and welcoming for\n> everyone invested in .NET and its future and leave the language bashing and\n> all the other stuff outside, ok?\n> \n> Warmest regards,\n> \n> Anthony D. Green\n> Program Manager\n> Visual Basic, C#, and F# Languages Team\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92071347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92222040", "html_url": "https://github.com/dotnet/codeformatter/pull/107#issuecomment-92222040", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/107", "id": 92222040, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T05:46:36Z", "updated_at": "2015-04-13T05:46:36Z", "author_association": "CONTRIBUTOR", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92222040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92436297", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92436297", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92436297, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T17:24:43Z", "updated_at": "2015-04-13T17:24:43Z", "author_association": "NONE", "body": "Hi **@ChadNedzlek**, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    </span>\n\nTTYL, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92436297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92439000", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92439000", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92439000, "user": {"login": "dnfclas", "id": 10201666, "avatar_url": "https://avatars3.githubusercontent.com/u/10201666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnfclas", "html_url": "https://github.com/dnfclas", "followers_url": "https://api.github.com/users/dnfclas/followers", "following_url": "https://api.github.com/users/dnfclas/following{/other_user}", "gists_url": "https://api.github.com/users/dnfclas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnfclas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnfclas/subscriptions", "organizations_url": "https://api.github.com/users/dnfclas/orgs", "repos_url": "https://api.github.com/users/dnfclas/repos", "events_url": "https://api.github.com/users/dnfclas/events{/privacy}", "received_events_url": "https://api.github.com/users/dnfclas/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T17:28:27Z", "updated_at": "2015-04-13T17:28:27Z", "author_association": "NONE", "body": "**@ChadNedzlek**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, DNFBOT;\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92439000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92440577", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92440577", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92440577, "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T17:32:50Z", "updated_at": "2015-04-13T17:32:50Z", "author_association": "MEMBER", "body": "cc: @stephentoub, @jaredpar \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92440577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92441816", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92441816", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92441816, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T17:39:26Z", "updated_at": "2015-04-13T17:39:26Z", "author_association": "MEMBER", "body": "Another scenario we have to consider a write is when a method is invoked on a field which is a struct.  Making that field `readonly` would cause a behavior change because the method would be invoked on a copy of the struct.  In the case it was a mutating struct this would lead to a behavior change. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92441816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92447791", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92447791", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92447791, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T18:06:39Z", "updated_at": "2015-04-13T18:06:39Z", "author_association": "MEMBER", "body": "That's very interesting, and not something I knew before today. Shouldn't take more than an hour to add a test and check for that scenario. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92447791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92448091", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92448091", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92448091, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T18:08:15Z", "updated_at": "2015-04-13T18:08:15Z", "author_association": "MEMBER", "body": "Hrm... I can't figure out any safe way to exclude things like Int32.ToString().  Technically it's a behavioral change, since now the int will get copied, but that's a sad reason not to make something readonly, just because you read it's string value.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92448091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92452244", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92452244", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92452244, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T18:26:35Z", "updated_at": "2015-04-13T18:26:35Z", "author_association": "MEMBER", "body": "@ChadNedzlek hmm, it seems all of the useful extension methods to check this are `internal`.  That's unfortunate.  This though is logically what you need.  Could just copy / paste it into the rule.\n\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis/SpecialTypeExtensions.cs,103\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92452244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92461529", "html_url": "https://github.com/dotnet/codeformatter/issues/104#issuecomment-92461529", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/104", "id": 92461529, "user": {"login": "CyrusNajmabadi", "id": 4564579, "avatar_url": "https://avatars3.githubusercontent.com/u/4564579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CyrusNajmabadi", "html_url": "https://github.com/CyrusNajmabadi", "followers_url": "https://api.github.com/users/CyrusNajmabadi/followers", "following_url": "https://api.github.com/users/CyrusNajmabadi/following{/other_user}", "gists_url": "https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CyrusNajmabadi/subscriptions", "organizations_url": "https://api.github.com/users/CyrusNajmabadi/orgs", "repos_url": "https://api.github.com/users/CyrusNajmabadi/repos", "events_url": "https://api.github.com/users/CyrusNajmabadi/events{/privacy}", "received_events_url": "https://api.github.com/users/CyrusNajmabadi/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T19:00:53Z", "updated_at": "2015-04-13T19:00:53Z", "author_association": "NONE", "body": "Does this also handle fields that are MEF imported?  These should not be marked readonly as MEF will need to assign to them.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92461529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92462473", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92462473", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92462473, "user": {"login": "CyrusNajmabadi", "id": 4564579, "avatar_url": "https://avatars3.githubusercontent.com/u/4564579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CyrusNajmabadi", "html_url": "https://github.com/CyrusNajmabadi", "followers_url": "https://api.github.com/users/CyrusNajmabadi/followers", "following_url": "https://api.github.com/users/CyrusNajmabadi/following{/other_user}", "gists_url": "https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CyrusNajmabadi/subscriptions", "organizations_url": "https://api.github.com/users/CyrusNajmabadi/orgs", "repos_url": "https://api.github.com/users/CyrusNajmabadi/repos", "events_url": "https://api.github.com/users/CyrusNajmabadi/events{/privacy}", "received_events_url": "https://api.github.com/users/CyrusNajmabadi/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T19:03:48Z", "updated_at": "2015-04-13T19:03:48Z", "author_association": "NONE", "body": "Does this also handle fields that are MEF imported? These should not be marked readonly as MEF will need to assign to them.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92462473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92473660", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92473660", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92473660, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T19:39:01Z", "updated_at": "2015-04-13T19:39:01Z", "author_association": "MEMBER", "body": "I've updated ChadNedzlek/codeformatter/readonly-fields-working. It handles the method calls and the delegates inside of constructors.  Going to work on the MEF importing next.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92473660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92497036", "html_url": "https://github.com/dotnet/codeformatter/issues/104#issuecomment-92497036", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/104", "id": 92497036, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T21:01:02Z", "updated_at": "2015-04-13T21:01:02Z", "author_association": "MEMBER", "body": "It should (and now does).\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92497036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92510631", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92510631", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92510631, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T21:48:17Z", "updated_at": "2015-04-13T21:48:17Z", "author_association": "MEMBER", "body": "This failure seems to have nothing to do with my change, and looks like a nuget failure to pull some of the packages.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92510631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92511016", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92511016", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92511016, "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T21:49:55Z", "updated_at": "2015-04-13T21:49:55Z", "author_association": "MEMBER", "body": "@dotnet-bot test this please\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92511016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92511378", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-92511378", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 92511378, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-13T21:51:59Z", "updated_at": "2015-04-13T21:51:59Z", "author_association": "MEMBER", "body": "Thank you Jeremy.\n\nI've addressed all the comments in this thread, I believe.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/92511378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93549035", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-93549035", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 93549035, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T19:57:05Z", "updated_at": "2015-04-15T19:57:05Z", "author_association": "MEMBER", "body": "I think I've addressed everything I can address.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93549035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93550147", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-93550147", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 93550147, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T20:02:34Z", "updated_at": "2015-04-15T20:02:34Z", "author_association": "MEMBER", "body": "@ChadNedzlek sorry, I've gotten caught up in a series of fire drills and not been able to look at this. \n\nThe solution I was mulling over was adding this under a flag like /aggressive, /extra, etc ...  This was a flag we had considered adding already for other reasons:\n- The goal of the code formatter is provably safe rewrites.  But some enforcing some of our coding guidelines can't be done in a safe way in a reasonable amount of time.  \n- Some rewrites are valuable but inherently expensive.  We want to preserve the speed of the tool for the majority case but allow for the expensive but correct rewrites.  \n\nThis particular feature seems to fit that mold to me at least. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93550147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93553268", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-93553268", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 93553268, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T20:15:20Z", "updated_at": "2015-04-15T20:15:20Z", "author_association": "MEMBER", "body": "Hrm. Interesting. I could probably take a swing at trying to augment the system to have a sort of \"level\" of formatting (in a completely different pull request... I don't think I'd want to combine both things into one request).\n\nI'm curious about a few things before I begin.  When would something run the \"lite\" version of the formatter, and when would someone run the \"heavy\" version of it?\n\nAnd is it really a binary choice, or should there be levels of it (things that run in <1sec, <10sec, <1min, <10min, etc)? I can implement it either way, I'm just not 100% of the use cases right now, so I might not have all the context.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93553268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93554137", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-93554137", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 93554137, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T20:18:45Z", "updated_at": "2015-04-15T20:18:45Z", "author_association": "MEMBER", "body": "@ChadNedzlek the idea I had in my head, which may not be the same idea everyone else had, is the code formatter could be used in the following cadence:\n- Normal use is safe + fast enough to be a completely automated process.  Fast enough to potentially even be used on build or on the same level as running unit tests.  \n- Heavy use is done on a cadence basis say once a week, month.  Catches issues that had slipped in during the intervening time.  Hopefully done as a part of an automated job. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93554137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93554860", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-93554860", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 93554860, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T20:22:10Z", "updated_at": "2015-04-15T20:22:10Z", "author_association": "MEMBER", "body": "Alrighty. I'm working on adding the option now. I've also created issue #111 to track that.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93554860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93559230", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-93559230", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 93559230, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T20:29:59Z", "updated_at": "2015-04-15T20:29:59Z", "author_association": "MEMBER", "body": "@ChadNedzlek thanks for putting up with my crazy.  :smile: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93559230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93580777", "html_url": "https://github.com/dotnet/codeformatter/pull/112#issuecomment-93580777", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/112", "id": 93580777, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T21:58:54Z", "updated_at": "2015-04-15T21:58:54Z", "author_association": "MEMBER", "body": "@dotnet-bot test this please\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93580777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93585114", "html_url": "https://github.com/dotnet/codeformatter/pull/112#issuecomment-93585114", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/112", "id": 93585114, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T22:17:37Z", "updated_at": "2015-04-15T22:17:37Z", "author_association": "MEMBER", "body": "Jeremy pointed out I messed up the indentation of the usage text. Re-pushing.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93585114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93585704", "html_url": "https://github.com/dotnet/codeformatter/pull/112#issuecomment-93585704", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/112", "id": 93585704, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T22:21:11Z", "updated_at": "2015-04-15T22:21:11Z", "author_association": "MEMBER", "body": "@jaredpar Here's the pull request that allows segmenting rules off into \"simple\" and \"agressive\" ones.  I don't think we have anything that we would classify as \"agressive\" yet, but the readonly rule would be the first one.\n\nI used the attribute because this seemed the same sort of information as the \"order\" piece, and that was how we were encoding that information.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93585704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93588540", "html_url": "https://github.com/dotnet/codeformatter/pull/112#issuecomment-93588540", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/112", "id": 93588540, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T22:37:44Z", "updated_at": "2015-04-15T22:37:44Z", "author_association": "MEMBER", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93588540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93593709", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-93593709", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 93593709, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-15T23:10:25Z", "updated_at": "2015-04-15T23:10:25Z", "author_association": "MEMBER", "body": "Now using the /aggressive switch for this formatting rule.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93593709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93765946", "html_url": "https://github.com/dotnet/codeformatter/pull/109#issuecomment-93765946", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/109", "id": 93765946, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-16T15:36:56Z", "updated_at": "2015-04-16T15:36:56Z", "author_association": "MEMBER", "body": "Looks great! \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/93765946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94944247", "html_url": "https://github.com/dotnet/codeformatter/pull/114#issuecomment-94944247", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/114", "id": 94944247, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-21T21:09:20Z", "updated_at": "2015-04-21T21:09:20Z", "author_association": "MEMBER", "body": "Anyone have any thoughts about this one?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94944247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94966790", "html_url": "https://github.com/dotnet/codeformatter/pull/114#issuecomment-94966790", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/114", "id": 94966790, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-21T23:00:01Z", "updated_at": "2015-04-21T23:00:01Z", "author_association": "MEMBER", "body": "This seems like it should be in the XUnit formatter vs. the code formatter.  The code formatter is generally domain agnostic and focussed on coding style.  This is focusing on the correctness of a single domain.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94966790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94967053", "html_url": "https://github.com/dotnet/codeformatter/pull/114#issuecomment-94967053", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/114", "id": 94967053, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-21T23:01:45Z", "updated_at": "2015-04-21T23:01:45Z", "author_association": "MEMBER", "body": "Where is the \"XUnit formatter\"? I see the XUnitConverter, but that appears to be specifically about _moving_ tests from one framework to another... not something you'd run on existing XUnit code... Though I could be mistaken.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94967053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94967220", "html_url": "https://github.com/dotnet/codeformatter/pull/114#issuecomment-94967220", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/114", "id": 94967220, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-21T23:03:13Z", "updated_at": "2015-04-21T23:03:13Z", "author_association": "MEMBER", "body": "That is what I meant.  That should be idempotent as well.  \n\nThis may also be better as an analyzer / code fix.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94967220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94967994", "html_url": "https://github.com/dotnet/codeformatter/pull/114#issuecomment-94967994", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/114", "id": 94967994, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-21T23:07:13Z", "updated_at": "2015-04-21T23:07:13Z", "author_association": "MEMBER", "body": "Ah. I didn't realize it was intended to be run on already XUnit projects.  I should be able to move it fairly quickly.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94967994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94972745", "html_url": "https://github.com/dotnet/codeformatter/pull/114#issuecomment-94972745", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/114", "id": 94972745, "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-21T23:26:57Z", "updated_at": "2015-04-21T23:26:57Z", "author_association": "MEMBER", "body": "There. I've moved it to the XUnit converter project.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/94972745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96736765", "html_url": "https://github.com/dotnet/codeformatter/issues/117#issuecomment-96736765", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117", "id": 96736765, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T16:50:00Z", "updated_at": "2015-04-27T16:50:11Z", "author_association": "NONE", "body": "Should constants be prefixed with `_` even if they're private? :mask: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96736765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96736921", "html_url": "https://github.com/dotnet/codeformatter/issues/117#issuecomment-96736921", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117", "id": 96736921, "user": {"login": "stephentoub", "id": 2642209, "avatar_url": "https://avatars0.githubusercontent.com/u/2642209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephentoub", "html_url": "https://github.com/stephentoub", "followers_url": "https://api.github.com/users/stephentoub/followers", "following_url": "https://api.github.com/users/stephentoub/following{/other_user}", "gists_url": "https://api.github.com/users/stephentoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephentoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephentoub/subscriptions", "organizations_url": "https://api.github.com/users/stephentoub/orgs", "repos_url": "https://api.github.com/users/stephentoub/repos", "events_url": "https://api.github.com/users/stephentoub/events{/privacy}", "received_events_url": "https://api.github.com/users/stephentoub/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T16:50:39Z", "updated_at": "2015-04-27T16:50:39Z", "author_association": "MEMBER", "body": "At least for corefx, the decision that was reached was that constants would be pascal-cased and not prefixed with an underscore.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96736921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96737104", "html_url": "https://github.com/dotnet/codeformatter/issues/117#issuecomment-96737104", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117", "id": 96737104, "user": {"login": "FiveTimesTheFun", "id": 6598317, "avatar_url": "https://avatars2.githubusercontent.com/u/6598317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FiveTimesTheFun", "html_url": "https://github.com/FiveTimesTheFun", "followers_url": "https://api.github.com/users/FiveTimesTheFun/followers", "following_url": "https://api.github.com/users/FiveTimesTheFun/following{/other_user}", "gists_url": "https://api.github.com/users/FiveTimesTheFun/gists{/gist_id}", "starred_url": "https://api.github.com/users/FiveTimesTheFun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FiveTimesTheFun/subscriptions", "organizations_url": "https://api.github.com/users/FiveTimesTheFun/orgs", "repos_url": "https://api.github.com/users/FiveTimesTheFun/repos", "events_url": "https://api.github.com/users/FiveTimesTheFun/events{/privacy}", "received_events_url": "https://api.github.com/users/FiveTimesTheFun/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T16:51:11Z", "updated_at": "2015-04-27T16:51:11Z", "author_association": "CONTRIBUTOR", "body": "I'm basing this on\nhttps://github.com/dotnet/corefx/wiki/Coding-style # 12:\n\n12.We use PascalCasing to name all our constant local variables and fields. The only exception is for interop code where the constant value should exactly match the name and value of the code you are calling via interop.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96737104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96737153", "html_url": "https://github.com/dotnet/codeformatter/issues/117#issuecomment-96737153", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117", "id": 96737153, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T16:51:18Z", "updated_at": "2015-04-27T16:51:18Z", "author_association": "NONE", "body": ":+1: for @stephentoub's comment\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96737153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96737503", "html_url": "https://github.com/dotnet/codeformatter/issues/117#issuecomment-96737503", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117", "id": 96737503, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T16:52:11Z", "updated_at": "2015-04-27T16:52:11Z", "author_association": "NONE", "body": "@FiveTimesTheFun Even _local_ variables?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96737503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96741146", "html_url": "https://github.com/dotnet/codeformatter/issues/117#issuecomment-96741146", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/117", "id": 96741146, "user": {"login": "FiveTimesTheFun", "id": 6598317, "avatar_url": "https://avatars2.githubusercontent.com/u/6598317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FiveTimesTheFun", "html_url": "https://github.com/FiveTimesTheFun", "followers_url": "https://api.github.com/users/FiveTimesTheFun/followers", "following_url": "https://api.github.com/users/FiveTimesTheFun/following{/other_user}", "gists_url": "https://api.github.com/users/FiveTimesTheFun/gists{/gist_id}", "starred_url": "https://api.github.com/users/FiveTimesTheFun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FiveTimesTheFun/subscriptions", "organizations_url": "https://api.github.com/users/FiveTimesTheFun/orgs", "repos_url": "https://api.github.com/users/FiveTimesTheFun/repos", "events_url": "https://api.github.com/users/FiveTimesTheFun/events{/privacy}", "received_events_url": "https://api.github.com/users/FiveTimesTheFun/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T17:01:03Z", "updated_at": "2015-04-27T17:01:03Z", "author_association": "CONTRIBUTOR", "body": "That's from the corefx wiki :)  I don't personally disagree with it - that it's constant is more important to me than local vs. field scope.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96741146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96846847", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96846847", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96846847, "user": {"login": "ghuntley", "id": 127353, "avatar_url": "https://avatars0.githubusercontent.com/u/127353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghuntley", "html_url": "https://github.com/ghuntley", "followers_url": "https://api.github.com/users/ghuntley/followers", "following_url": "https://api.github.com/users/ghuntley/following{/other_user}", "gists_url": "https://api.github.com/users/ghuntley/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghuntley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghuntley/subscriptions", "organizations_url": "https://api.github.com/users/ghuntley/orgs", "repos_url": "https://api.github.com/users/ghuntley/repos", "events_url": "https://api.github.com/users/ghuntley/events{/privacy}", "received_events_url": "https://api.github.com/users/ghuntley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T23:15:16Z", "updated_at": "2015-04-28T03:30:55Z", "author_association": "MEMBER", "body": "Found out about this project early this morning and was all like\n\n![](http://24.media.tumblr.com/tumblr_lzctt8R7gE1qdg9v3o9_400.gif)\n\nthat was until:\n\n```\n\u203a mono CodeFormatter.exe ../../src/SuperSecret.sln\nERROR: Type loading error detected. In order to run this tool you need either \nVisual Studio 2015 or Microsoft Build Tools 2015 tools installed.\n- Could not load file or assembly or one of its dependencies.\n```\n\nA while back I took on ownership of a fork for `narrange` and wrote a corresponding plugin for  monodevelop. I would be keen in working with someone (@mteper)? to make `codeformater` a first class citizen.\n\n@AndyGerlicher is there a `xplat` branch hidden somewhere within MSFT for `codeformater`?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96846847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96855054", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96855054", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96855054, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T00:10:46Z", "updated_at": "2015-04-28T00:10:46Z", "author_association": "MEMBER", "body": "I think cross plat is a goal we should definitely shoot for on this tool.  The code in the tool itself should be fine for cross plat.  It may need a little work but nothing series.  The bigger issue is our dependencies.  \n\nThe Roslyn code uses the MSBuild APIs to create a Solution object from the provided solution and project files.  The MSBuild DLLs, and the Roslyn DLLs which depend on it, are not designed to be cross platform.  I imagine it will take some level of work to get this running cross platform.\n\nThe good news though is MSBuild is moving to cross plat support so this should be a very doable proposition for us.  It will probably take a bit of effort though.  \n\nAnother option is to have a cross plat version of the tool which only supports the rsp command line arguments.  This doesn't need cross plat support to read in and hence should in theory just work.  \n\nEither way, something to explore.  \n\nNote: in the future could we have less GIFs in the thread?  Having a toddler swaying back and forth on my screen is simply distracting when trying to type up responses to issues :smile: \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96855054/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96889973", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96889973", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96889973, "user": {"login": "mteper", "id": 1029340, "avatar_url": "https://avatars1.githubusercontent.com/u/1029340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mteper", "html_url": "https://github.com/mteper", "followers_url": "https://api.github.com/users/mteper/followers", "following_url": "https://api.github.com/users/mteper/following{/other_user}", "gists_url": "https://api.github.com/users/mteper/gists{/gist_id}", "starred_url": "https://api.github.com/users/mteper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mteper/subscriptions", "organizations_url": "https://api.github.com/users/mteper/orgs", "repos_url": "https://api.github.com/users/mteper/repos", "events_url": "https://api.github.com/users/mteper/events{/privacy}", "received_events_url": "https://api.github.com/users/mteper/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T02:43:34Z", "updated_at": "2015-04-28T02:43:34Z", "author_association": "NONE", "body": "I thought Roslyn was already xplat? Doesn't Refit rely in Roslyn bits?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96889973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96891474", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96891474", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96891474, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T02:52:49Z", "updated_at": "2015-04-28T02:52:49Z", "author_association": "MEMBER", "body": "@mteper large parts of Roslyn are cross platform.  The portion that uses MSBuild though is not.  At least to my knowledge.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96891474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96893417", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96893417", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96893417, "user": {"login": "mteper", "id": 1029340, "avatar_url": "https://avatars1.githubusercontent.com/u/1029340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mteper", "html_url": "https://github.com/mteper", "followers_url": "https://api.github.com/users/mteper/followers", "following_url": "https://api.github.com/users/mteper/following{/other_user}", "gists_url": "https://api.github.com/users/mteper/gists{/gist_id}", "starred_url": "https://api.github.com/users/mteper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mteper/subscriptions", "organizations_url": "https://api.github.com/users/mteper/orgs", "repos_url": "https://api.github.com/users/mteper/repos", "events_url": "https://api.github.com/users/mteper/events{/privacy}", "received_events_url": "https://api.github.com/users/mteper/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T03:00:59Z", "updated_at": "2015-04-28T03:00:59Z", "author_association": "NONE", "body": "@jaredpar Just quickly scanning the package files, is it the `Microsoft.CodeAnalysis.Workspaces.Common` stuff?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96893417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96894021", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96894021", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96894021, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T03:07:03Z", "updated_at": "2015-04-28T03:07:03Z", "author_association": "MEMBER", "body": "@mteper in general the rule is\n- If the Roslyn assembly name ends in `.Desktop` then it's not portable\n- Else it is portable\n\nIn this particular scenario the `Workspaces.*.Deskop` assemblies are the ones we'll need to look into.  They depend on MSBuild which is non-portable.  \n\nNote: Even if it is a Desktop assembly it still will often work just fine on Mono.  \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96894021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96895216", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96895216", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96895216, "user": {"login": "mteper", "id": 1029340, "avatar_url": "https://avatars1.githubusercontent.com/u/1029340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mteper", "html_url": "https://github.com/mteper", "followers_url": "https://api.github.com/users/mteper/followers", "following_url": "https://api.github.com/users/mteper/following{/other_user}", "gists_url": "https://api.github.com/users/mteper/gists{/gist_id}", "starred_url": "https://api.github.com/users/mteper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mteper/subscriptions", "organizations_url": "https://api.github.com/users/mteper/orgs", "repos_url": "https://api.github.com/users/mteper/repos", "events_url": "https://api.github.com/users/mteper/events{/privacy}", "received_events_url": "https://api.github.com/users/mteper/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T03:20:09Z", "updated_at": "2015-04-28T03:20:09Z", "author_association": "NONE", "body": "I looked at the Roslyn code on CodePlex and it looks like the .Desktop stuff takes direct dependencies on MSBuild assemblies that ship with VS. Next place to look would be to see whether there is a nuget-exposed artifact of the newly OSS'ed MSBuild code that can be plugged in instead. Unfortunately, I am too swamped to do even that much (little?) right now. Sorry!! :(\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96895216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96897464", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96897464", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96897464, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T03:33:39Z", "updated_at": "2015-04-28T03:33:39Z", "author_association": "MEMBER", "body": "@mteper\n\nMake sure to look on GitHub for the latest Roslyn sources. The CodePlex ones are about 4 months out of date by now. \n\nThe new OSS MSBuild does not yet expose a NuGet package that Roslyn could consume.  Hopefully meeting with them later this week to discuss producing some new packages (for other related reasons). If I can I met try and hook that up to Roslyn. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96897464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96901835", "html_url": "https://github.com/dotnet/codeformatter/issues/106#issuecomment-96901835", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/106", "id": 96901835, "user": {"login": "mteper", "id": 1029340, "avatar_url": "https://avatars1.githubusercontent.com/u/1029340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mteper", "html_url": "https://github.com/mteper", "followers_url": "https://api.github.com/users/mteper/followers", "following_url": "https://api.github.com/users/mteper/following{/other_user}", "gists_url": "https://api.github.com/users/mteper/gists{/gist_id}", "starred_url": "https://api.github.com/users/mteper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mteper/subscriptions", "organizations_url": "https://api.github.com/users/mteper/orgs", "repos_url": "https://api.github.com/users/mteper/repos", "events_url": "https://api.github.com/users/mteper/events{/privacy}", "received_events_url": "https://api.github.com/users/mteper/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T03:53:38Z", "updated_at": "2015-04-28T03:53:38Z", "author_association": "NONE", "body": ":+1: I googled Roslyn source and ended up on CodePlex, good to know they moved to GitHub. Will look there next time I come up for air. :)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/96901835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/104432484", "html_url": "https://github.com/dotnet/codeformatter/issues/26#issuecomment-104432484", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/26", "id": 104432484, "user": {"login": "bartonjs", "id": 10642668, "avatar_url": "https://avatars3.githubusercontent.com/u/10642668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartonjs", "html_url": "https://github.com/bartonjs", "followers_url": "https://api.github.com/users/bartonjs/followers", "following_url": "https://api.github.com/users/bartonjs/following{/other_user}", "gists_url": "https://api.github.com/users/bartonjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartonjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartonjs/subscriptions", "organizations_url": "https://api.github.com/users/bartonjs/orgs", "repos_url": "https://api.github.com/users/bartonjs/repos", "events_url": "https://api.github.com/users/bartonjs/events{/privacy}", "received_events_url": "https://api.github.com/users/bartonjs/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-21T21:51:40Z", "updated_at": "2015-05-21T21:51:40Z", "author_association": "MEMBER", "body": "Some instances of this seem detectable, like having the rule say \"if the exact clause I'm adding already exists, just ignore it\".  HashSet and sort the output to just rewrite the whole section.\n\nThis seemed particularly interesting on a file just now:\n\n```\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n\nusing global::System;\nusing global::System.Diagnostics;\nusing global::System.Security.Cryptography;\n\nnamespace System.Security.Cryptography\n{\n    using global::System;\n    using global::System.Diagnostics;\n    using global::System.Security.Cryptography;\n    public partial interface ICspAsymmetricAlgorithm\n    {\n        CspKeyContainerInfo CspKeyContainerInfo { get;}\n        byte[] ExportCspBlob(bool includePrivateParameters);\n        void ImportCspBlob(byte[] rawData);\n    }\n}\n```\n\nThe difference being \"but, it was already there...\" instead of \"oh, that's funny, you moved it twice.\"\n\n(And in this case it's particularly sad, because none of the types were resolved via usings, they were all \"in the current namespace\" or keywords)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/104432484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/107104920", "html_url": "https://github.com/dotnet/codeformatter/pull/127#issuecomment-107104920", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/127", "id": 107104920, "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-31T01:13:25Z", "updated_at": "2015-05-31T01:14:31Z", "author_association": "NONE", "body": "I guess I'll close #61 then. I never got to finishing it anyway. This closes #54.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/107104920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/108035349", "html_url": "https://github.com/dotnet/codeformatter/pull/127#issuecomment-108035349", "issue_url": "https://api.github.com/repos/dotnet/codeformatter/issues/127", "id": 108035349, "user": {"login": "dsplaisted", "id": 145043, "avatar_url": "https://avatars3.githubusercontent.com/u/145043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsplaisted", "html_url": "https://github.com/dsplaisted", "followers_url": "https://api.github.com/users/dsplaisted/followers", "following_url": "https://api.github.com/users/dsplaisted/following{/other_user}", "gists_url": "https://api.github.com/users/dsplaisted/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsplaisted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsplaisted/subscriptions", "organizations_url": "https://api.github.com/users/dsplaisted/orgs", "repos_url": "https://api.github.com/users/dsplaisted/repos", "events_url": "https://api.github.com/users/dsplaisted/events{/privacy}", "received_events_url": "https://api.github.com/users/dsplaisted/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-02T18:04:30Z", "updated_at": "2015-06-02T18:04:30Z", "author_association": "MEMBER", "body": "Thanks for the pointer to #61 @khellang.  Based on reading the discussion there, I've fixed the rule for cases where there are comments or compiler directives at the end of the file.\n\nFor simplicity, this PR merely makes sure that the file ends with a newline (in contrast with #61).  It doesn't try to prevent it from ending with multiple newlines.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/issues/comments/108035349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9207791", "html_url": "https://github.com/dotnet/codeformatter/commit/03b1c058a37f30b069ad315b8792d11cb4f1aa27#commitcomment-9207791", "id": 9207791, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "position": 13, "line": 13, "path": "src/Microsoft.DotNet.CodeFormatting/Rules/RuleOrder.cs", "commit_id": "03b1c058a37f30b069ad315b8792d11cb4f1aa27", "created_at": "2015-01-08T19:40:02Z", "updated_at": "2015-01-08T19:41:01Z", "author_association": "MEMBER", "body": "@ellismg why not make this enum instead of static class?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9207791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9207876", "html_url": "https://github.com/dotnet/codeformatter/commit/03b1c058a37f30b069ad315b8792d11cb4f1aa27#commitcomment-9207876", "id": 9207876, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "position": 13, "line": 13, "path": "src/Microsoft.DotNet.CodeFormatting/Rules/RuleOrder.cs", "commit_id": "03b1c058a37f30b069ad315b8792d11cb4f1aa27", "created_at": "2015-01-08T19:45:25Z", "updated_at": "2015-01-08T19:45:25Z", "author_association": "CONTRIBUTOR", "body": "In that case, we would need to update RuleOrderAttribute to accept RuleOrder instead of int.  In that case, it wasn't clear to me how it would interact with the [DefaultValue] attribute we have on the Order property.  I can play around with that if you'd prefer? \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9207876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9208547", "html_url": "https://github.com/dotnet/codeformatter/commit/03b1c058a37f30b069ad315b8792d11cb4f1aa27#commitcomment-9208547", "id": 9208547, "user": {"login": "krwq", "id": 660048, "avatar_url": "https://avatars1.githubusercontent.com/u/660048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krwq", "html_url": "https://github.com/krwq", "followers_url": "https://api.github.com/users/krwq/followers", "following_url": "https://api.github.com/users/krwq/following{/other_user}", "gists_url": "https://api.github.com/users/krwq/gists{/gist_id}", "starred_url": "https://api.github.com/users/krwq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krwq/subscriptions", "organizations_url": "https://api.github.com/users/krwq/orgs", "repos_url": "https://api.github.com/users/krwq/repos", "events_url": "https://api.github.com/users/krwq/events{/privacy}", "received_events_url": "https://api.github.com/users/krwq/received_events", "type": "User", "site_admin": false}, "position": 13, "line": 13, "path": "src/Microsoft.DotNet.CodeFormatting/Rules/RuleOrder.cs", "commit_id": "03b1c058a37f30b069ad315b8792d11cb4f1aa27", "created_at": "2015-01-08T20:25:27Z", "updated_at": "2015-01-08T20:26:29Z", "author_association": "MEMBER", "body": "I agree with Priya that enum would be better although in this case your solution is more intuitive and I personally prefer it. Unless you can change RuleOrderAttribute class then I would rather change it. Not sure if this is Roslyn type or type from this project\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9208547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9291380", "html_url": "https://github.com/dotnet/codeformatter/commit/36eb5a025c26a2c5a441e4971f5131f1d7e60a60#commitcomment-9291380", "id": 9291380, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "36eb5a025c26a2c5a441e4971f5131f1d7e60a60", "created_at": "2015-01-15T04:16:35Z", "updated_at": "2015-01-15T04:16:35Z", "author_association": "CONTRIBUTOR", "body": "Part of me wonders if you should write this to Console.Error instead, but it's not clear.  LGTM otherwise.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9291380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9308461", "html_url": "https://github.com/dotnet/codeformatter/commit/36eb5a025c26a2c5a441e4971f5131f1d7e60a60#commitcomment-9308461", "id": 9308461, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "36eb5a025c26a2c5a441e4971f5131f1d7e60a60", "created_at": "2015-01-16T02:27:32Z", "updated_at": "2015-01-17T18:37:05Z", "author_association": "OWNER", "body": "I don't think we should print to the console from the library at all. If we want to support warnings, we should expose the concept in the API layer. If we ever want to host the rules in some other environment (such as VS) printing to the raw console is less than ideal.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9308461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9308472", "html_url": "https://github.com/dotnet/codeformatter/commit/36eb5a025c26a2c5a441e4971f5131f1d7e60a60#commitcomment-9308472", "id": 9308472, "user": {"login": "terrajobst", "id": 5169960, "avatar_url": "https://avatars0.githubusercontent.com/u/5169960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrajobst", "html_url": "https://github.com/terrajobst", "followers_url": "https://api.github.com/users/terrajobst/followers", "following_url": "https://api.github.com/users/terrajobst/following{/other_user}", "gists_url": "https://api.github.com/users/terrajobst/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrajobst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrajobst/subscriptions", "organizations_url": "https://api.github.com/users/terrajobst/orgs", "repos_url": "https://api.github.com/users/terrajobst/repos", "events_url": "https://api.github.com/users/terrajobst/events{/privacy}", "received_events_url": "https://api.github.com/users/terrajobst/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "36eb5a025c26a2c5a441e4971f5131f1d7e60a60", "created_at": "2015-01-16T02:29:36Z", "updated_at": "2015-01-16T02:29:36Z", "author_association": "OWNER", "body": "Filed #25 to capture this.\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9308472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9320226", "html_url": "https://github.com/dotnet/codeformatter/commit/36eb5a025c26a2c5a441e4971f5131f1d7e60a60#commitcomment-9320226", "id": 9320226, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "36eb5a025c26a2c5a441e4971f5131f1d7e60a60", "created_at": "2015-01-16T19:27:22Z", "updated_at": "2015-01-16T19:27:22Z", "author_association": "MEMBER", "body": "@terrajobst agreed.  Can't be printing directly to the console from the rule implementations.  This is a layer that can be hosted else where. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9320226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367328", "html_url": "https://github.com/dotnet/codeformatter/commit/8290cef22b023160fdfb626b3adce4203395dc69#commitcomment-9367328", "id": 9367328, "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "position": 26, "line": 26, "path": "src/Microsoft.DotNet.CodeFormatting/Rules/ExplicitThisRule.cs", "commit_id": "8290cef22b023160fdfb626b3adce4203395dc69", "created_at": "2015-01-21T01:17:28Z", "updated_at": "2015-01-21T01:17:28Z", "author_association": "MEMBER", "body": "Why not just use the simplification engine to do this?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367353", "html_url": "https://github.com/dotnet/codeformatter/commit/8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18#commitcomment-9367353", "id": 9367353, "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "position": 126, "line": 139, "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "commit_id": "8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18", "created_at": "2015-01-21T01:20:34Z", "updated_at": "2015-01-21T01:20:34Z", "author_association": "MEMBER", "body": "Don't forget about structured trivia -- you may still have to descend further. (Scenario: cref referenced a field that was renamed.)\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367361", "html_url": "https://github.com/dotnet/codeformatter/commit/8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18#commitcomment-9367361", "id": 9367361, "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "position": 126, "line": 139, "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "commit_id": "8ffa8f959cfd2c4f7c755e25e2cf2528c48ecd18", "created_at": "2015-01-21T01:21:47Z", "updated_at": "2015-01-21T01:21:47Z", "author_association": "MEMBER", "body": "Interesting.  Didn't know that. \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9367361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9451919", "html_url": "https://github.com/dotnet/codeformatter/commit/875e61134be7f9c81fa00767de6e0d299081f201#commitcomment-9451919", "id": 9451919, "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "875e61134be7f9c81fa00767de6e0d299081f201", "created_at": "2015-01-27T02:29:24Z", "updated_at": "2015-01-27T02:29:24Z", "author_association": "CONTRIBUTOR", "body": "I meant to get around to this myself at some point last week.  Thanks for doing this.\n\nThe one thing that I would point out is, there is currently no way to format code inside literal `#if false` regions because a `false` literal is not a preprocessor symbol.  I'm not really sure of a good solution to this problem.  We could temporarily replace #if false directives with #if __CODE_FORMATTER_FALSE_PLACEHOLDER, set that symbol to true, format, then revert the symbol change...\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9451919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9559163", "html_url": "https://github.com/dotnet/codeformatter/commit/3b6afc95f94dac10fa02f1408bf5b6a67c902f78#commitcomment-9559163", "id": 9559163, "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "3b6afc95f94dac10fa02f1408bf5b6a67c902f78", "created_at": "2015-02-03T10:11:37Z", "updated_at": "2015-02-03T10:11:37Z", "author_association": "CONTRIBUTOR", "body": "Can you please add a description about the copyrught switch to the detailed help text?\n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/9559163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/11492536", "html_url": "https://github.com/dotnet/codeformatter/commit/244f007bf4fdd78901aed69c859581c716b6ed06#commitcomment-11492536", "id": 11492536, "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "244f007bf4fdd78901aed69c859581c716b6ed06", "created_at": "2015-06-03T07:18:16Z", "updated_at": "2015-06-03T07:18:16Z", "author_association": "MEMBER", "body": "this link has been changed again and dupe of #107 \n", "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/comments/11492536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624158", "pull_request_review_id": null, "id": 22624158, "diff_hunk": "@@ -0,0 +1,179 @@\n+\ufeffusing Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(9)]\n+    internal sealed class ExplicitVisibilityRule : IFormattingRule\n+    {\n+        private sealed class VisibilityRewriter : CSharpSyntaxRewriter\n+        {\n+            public override SyntaxNode VisitClassDeclaration(ClassDeclarationSyntax node)\n+            {\n+                node = (ClassDeclarationSyntax)base.VisitClassDeclaration(node);\n+                var visibilityKind = GetTypeDefaultVisibility(node);", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/ExplicitVisibilityRule.cs", "position": null, "original_position": 22, "commit_id": "b6c68f2d6d9f20fde0478f4797ae4091a37414e6", "original_commit_id": "1997a8cafba41f95be950ed805510837324a35c6", "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "body": "I think our guidelines say we don't use var here ;-).\n\nThere are other instances in this file of this as well.\n", "created_at": "2015-01-07T23:05:04Z", "updated_at": "2015-01-07T23:35:22Z", "html_url": "https://github.com/dotnet/codeformatter/pull/5#discussion_r22624158", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/5", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624158"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/5#discussion_r22624158"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624331", "pull_request_review_id": null, "id": 22624331, "diff_hunk": "@@ -0,0 +1,179 @@\n+\ufeffusing Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(9)]\n+    internal sealed class ExplicitVisibilityRule : IFormattingRule\n+    {\n+        private sealed class VisibilityRewriter : CSharpSyntaxRewriter\n+        {\n+            public override SyntaxNode VisitClassDeclaration(ClassDeclarationSyntax node)\n+            {\n+                node = (ClassDeclarationSyntax)base.VisitClassDeclaration(node);\n+                var visibilityKind = GetTypeDefaultVisibility(node);", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/ExplicitVisibilityRule.cs", "position": null, "original_position": 22, "commit_id": "b6c68f2d6d9f20fde0478f4797ae4091a37414e6", "original_commit_id": "1997a8cafba41f95be950ed805510837324a35c6", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Always great to have style violations in the style formatting tool :) \n\nFixed\n", "created_at": "2015-01-07T23:08:25Z", "updated_at": "2015-01-07T23:35:22Z", "html_url": "https://github.com/dotnet/codeformatter/pull/5#discussion_r22624331", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/5", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624331"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/5#discussion_r22624331"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624472", "pull_request_review_id": null, "id": 22624472, "diff_hunk": "@@ -0,0 +1,179 @@\n+\ufeffusing Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(9)]\n+    internal sealed class ExplicitVisibilityRule : IFormattingRule\n+    {\n+        private sealed class VisibilityRewriter : CSharpSyntaxRewriter\n+        {\n+            public override SyntaxNode VisitClassDeclaration(ClassDeclarationSyntax node)\n+            {\n+                node = (ClassDeclarationSyntax)base.VisitClassDeclaration(node);\n+                var visibilityKind = GetTypeDefaultVisibility(node);\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), visibilityKind);\n+            }\n+\n+            public override SyntaxNode VisitInterfaceDeclaration(InterfaceDeclarationSyntax node)\n+            {\n+                var visibilityKind = GetTypeDefaultVisibility(node);\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), visibilityKind);\n+            }\n+\n+            public override SyntaxNode VisitStructDeclaration(StructDeclarationSyntax node)\n+            {\n+                node = (StructDeclarationSyntax)base.VisitStructDeclaration(node);\n+                var visibilityKind = GetTypeDefaultVisibility(node);\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), visibilityKind);\n+            }\n+\n+            public override SyntaxNode VisitDelegateDeclaration(DelegateDeclarationSyntax node)\n+            {\n+                var visibilityKind = GetTypeDefaultVisibility(node);\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), visibilityKind);\n+            }\n+\n+            public override SyntaxNode VisitEnumDeclaration(EnumDeclarationSyntax node)\n+            {\n+                var visibilityKind = GetTypeDefaultVisibility(node);\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), visibilityKind);\n+            }\n+\n+            public override SyntaxNode VisitConstructorDeclaration(ConstructorDeclarationSyntax node)\n+            {\n+                if (node.Modifiers.Any(x => x.CSharpKind() == SyntaxKind.StaticKeyword))\n+                {\n+                    return node;\n+                }\n+\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), SyntaxKind.PrivateKeyword);\n+            }\n+\n+            public override SyntaxNode VisitMethodDeclaration(MethodDeclarationSyntax node)\n+            {\n+                if (node.ExplicitInterfaceSpecifier != null)\n+                {\n+                    return node;\n+                }\n+\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), SyntaxKind.PrivateKeyword);\n+            }\n+\n+            public override SyntaxNode VisitPropertyDeclaration(PropertyDeclarationSyntax node)\n+            {\n+                if (node.ExplicitInterfaceSpecifier != null)\n+                {\n+                    return node;\n+                }\n+\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), SyntaxKind.PrivateKeyword);\n+            }\n+\n+            public override SyntaxNode VisitEventDeclaration(EventDeclarationSyntax node)\n+            {\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), SyntaxKind.PrivateKeyword);\n+            }\n+\n+            public override SyntaxNode VisitEventFieldDeclaration(EventFieldDeclarationSyntax node)\n+            {\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), SyntaxKind.PrivateKeyword);\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                return EnsureVisibility(node, node.Modifiers, (x, l) => x.WithModifiers(l), SyntaxKind.PrivateKeyword);\n+            }\n+\n+            private static SyntaxKind GetTypeDefaultVisibility(SyntaxNode node)\n+            {\n+                return IsNestedDeclaration(node) ? SyntaxKind.PrivateKeyword : SyntaxKind.InternalKeyword;\n+            }\n+\n+            private static bool IsNestedDeclaration(SyntaxNode node)\n+            {\n+                var current = node.Parent;\n+                while (current != null)\n+                {\n+                    if (SyntaxFacts.IsTypeDeclaration(current.CSharpKind()))\n+                    {\n+                        return true;\n+                    }\n+\n+                    current = current.Parent;\n+                }\n+\n+                return false;\n+            }\n+\n+            /// <summary>\n+            /// Return a node declaration that has a visibility modifier.  If one isn't present it will be added as the \n+            /// first modifier.  Any trivia before the node will be added as leading trivia to the added <see cref=\"SyntaxToken\"/>.\n+            /// </summary>\n+            private static MemberDeclarationSyntax EnsureVisibility<T>(T node, SyntaxTokenList originalModifiers, Func<T, SyntaxTokenList, T> withModifiers, SyntaxKind visibilityKind) where T : MemberDeclarationSyntax", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/ExplicitVisibilityRule.cs", "position": 126, "original_position": 121, "commit_id": "b6c68f2d6d9f20fde0478f4797ae4091a37414e6", "original_commit_id": "1997a8cafba41f95be950ed805510837324a35c6", "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "body": "I will be the first to admit that I don't fully grok the Roslyn Syntax Object Model.  Why do we not care about flowing trailing trivia?  Is it that there will never be any?  Can we add an assert to that effect?\n", "created_at": "2015-01-07T23:11:06Z", "updated_at": "2015-01-07T23:35:22Z", "html_url": "https://github.com/dotnet/codeformatter/pull/5#discussion_r22624472", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/5", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624472"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/5#discussion_r22624472"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/5"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22624472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625750", "pull_request_review_id": null, "id": 22625750, "diff_hunk": "@@ -0,0 +1,126 @@\n+\ufeff// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under MIT. See LICENSE in the project root for license information.\n+using System;\n+using System.ComponentModel.Composition;\n+using System.Diagnostics;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    internal sealed class NonAsciiChractersAreEscapedInLiterals : IFormattingRule\n+    {\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var root = await document.GetSyntaxRootAsync(cancellationToken) as CompilationUnitSyntax;\n+\n+            if (root == null)\n+                return document;\n+\n+            var newRoot = UnicodeCharacterEscapingSyntaxRewriter.Rewriter.Visit(root);\n+\n+            return document.WithSyntaxRoot(newRoot);\n+        }\n+\n+        /// <summary>\n+        ///  Rewrites string and character literals which contain non ascii characters to instead use the \\uXXXX or \\UXXXXXXXX syntax.\n+        /// </summary>\n+        class UnicodeCharacterEscapingSyntaxRewriter : CSharpSyntaxRewriter", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs", "position": null, "original_position": 33, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Need explicit visibility\n", "created_at": "2015-01-07T23:37:18Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625750", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625750"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625750"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625765", "pull_request_review_id": null, "id": 22625765, "diff_hunk": "@@ -0,0 +1,56 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public class NonAsciiChractersAreEscapedInLiteralsTests : CodeFormattingTestBase\n+    {\n+        [Fact]\n+        public void CanUseNonAsciiCharactersInComments()\n+        {\n+            var text = string.Format(@\"\n+// It's oaky to use non ASCII characters like {0} (CHECK MARK U+2713) or {1} (RAINBOW U+1F308) in comments.\n+/*\n+It's oaky to use non ASCII characters like {0} (CHECK MARK U+2713) or {1} (RAINBOW U+1F308) in comments.\n+*/\n+\", '\\u2713', \"\\U0001F308\");\n+            var expected = text;\n+\n+            Verify(text, expected);\n+        }\n+\n+        [Fact]\n+        public void DoNotAllowUnicodeInLiterals()\n+        {\n+            var text = string.Format(@\"\n+using System;\n+\n+class Test\n+{{\n+    public static readonly string BadString = \"\"This has {0} and {1}, which are both bad.\"\";\n+    public static readonly string AnotherBadString = @\"\"This has {0} and {1}, which are both bad.\"\";\n+    public const char BadChar = '{0}';\n+}}\n+\", '\\u2713', \"\\U0001F308\");\n+", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Rules/NonAsciiCharactersAreEscapedInLiteralsRuleTests.cs", "position": 37, "original_position": 37, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Nice trick to avoid the formatter from formatting away your tests :) \n", "created_at": "2015-01-07T23:37:43Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625765", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625765"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625765"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625815", "pull_request_review_id": null, "id": 22625815, "diff_hunk": "@@ -0,0 +1,126 @@\n+\ufeff// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under MIT. See LICENSE in the project root for license information.\n+using System;\n+using System.ComponentModel.Composition;\n+using System.Diagnostics;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    internal sealed class NonAsciiChractersAreEscapedInLiterals : IFormattingRule\n+    {\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var root = await document.GetSyntaxRootAsync(cancellationToken) as CompilationUnitSyntax;\n+\n+            if (root == null)\n+                return document;\n+\n+            var newRoot = UnicodeCharacterEscapingSyntaxRewriter.Rewriter.Visit(root);\n+\n+            return document.WithSyntaxRoot(newRoot);\n+        }\n+\n+        /// <summary>\n+        ///  Rewrites string and character literals which contain non ascii characters to instead use the \\uXXXX or \\UXXXXXXXX syntax.\n+        /// </summary>\n+        class UnicodeCharacterEscapingSyntaxRewriter : CSharpSyntaxRewriter\n+        {\n+            public static readonly UnicodeCharacterEscapingSyntaxRewriter Rewriter = new UnicodeCharacterEscapingSyntaxRewriter();\n+\n+            private UnicodeCharacterEscapingSyntaxRewriter()\n+            {\n+            }\n+\n+            public override SyntaxNode VisitLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                switch (node.CSharpKind())\n+                {\n+                    case SyntaxKind.StringLiteralExpression:\n+                        return RewriteStringLiteralExpression(node);\n+                    case SyntaxKind.CharacterLiteralExpression:\n+                        return RewriteCharacterLiteralExpression(node);\n+                }\n+", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs", "position": 50, "original_position": 50, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Not sure how to handle this but C# 6.0 will be introducing interpolated strings.  Once that API comes on line this code will need to be updated to account for that.  Should we file an issue to be done in the future?  \n", "created_at": "2015-01-07T23:38:56Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625815", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625815"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625815"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625850", "pull_request_review_id": null, "id": 22625850, "diff_hunk": "@@ -0,0 +1,126 @@\n+\ufeff// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under MIT. See LICENSE in the project root for license information.\n+using System;\n+using System.ComponentModel.Composition;\n+using System.Diagnostics;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    internal sealed class NonAsciiChractersAreEscapedInLiterals : IFormattingRule\n+    {\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var root = await document.GetSyntaxRootAsync(cancellationToken) as CompilationUnitSyntax;\n+\n+            if (root == null)\n+                return document;\n+\n+            var newRoot = UnicodeCharacterEscapingSyntaxRewriter.Rewriter.Visit(root);\n+\n+            return document.WithSyntaxRoot(newRoot);\n+        }\n+\n+        /// <summary>\n+        ///  Rewrites string and character literals which contain non ascii characters to instead use the \\uXXXX or \\UXXXXXXXX syntax.\n+        /// </summary>\n+        class UnicodeCharacterEscapingSyntaxRewriter : CSharpSyntaxRewriter\n+        {\n+            public static readonly UnicodeCharacterEscapingSyntaxRewriter Rewriter = new UnicodeCharacterEscapingSyntaxRewriter();\n+\n+            private UnicodeCharacterEscapingSyntaxRewriter()\n+            {\n+            }\n+\n+            public override SyntaxNode VisitLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                switch (node.CSharpKind())\n+                {\n+                    case SyntaxKind.StringLiteralExpression:\n+                        return RewriteStringLiteralExpression(node);\n+                    case SyntaxKind.CharacterLiteralExpression:\n+                        return RewriteCharacterLiteralExpression(node);\n+                }\n+\n+                return base.Visit(node);                \n+            }\n+\n+            private static SyntaxNode RewriteStringLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                Debug.Assert(node.CSharpKind() == SyntaxKind.StringLiteralExpression);\n+\n+                if (HasNonAsciiCharacters(node.Token.Text))\n+                {\n+                    string convertedText = EscapeNonAsciiCharacters(node.Token.Text);\n+\n+                    SyntaxToken t = SyntaxFactory.Literal(node.Token.LeadingTrivia, convertedText, node.Token.ValueText, node.Token.TrailingTrivia);", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs", "position": 62, "original_position": 62, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Why do we not also convert ValueText here?  \n", "created_at": "2015-01-07T23:39:41Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625850", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625850"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625850"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625866", "pull_request_review_id": null, "id": 22625866, "diff_hunk": "@@ -0,0 +1,56 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public class NonAsciiChractersAreEscapedInLiteralsTests : CodeFormattingTestBase\n+    {\n+        [Fact]\n+        public void CanUseNonAsciiCharactersInComments()\n+        {\n+            var text = string.Format(@\"\n+// It's oaky to use non ASCII characters like {0} (CHECK MARK U+2713) or {1} (RAINBOW U+1F308) in comments.\n+/*\n+It's oaky to use non ASCII characters like {0} (CHECK MARK U+2713) or {1} (RAINBOW U+1F308) in comments.\n+*/\n+\", '\\u2713', \"\\U0001F308\");\n+            var expected = text;\n+\n+            Verify(text, expected);\n+        }\n+\n+        [Fact]\n+        public void DoNotAllowUnicodeInLiterals()\n+        {\n+            var text = string.Format(@\"\n+using System;\n+\n+class Test\n+{{\n+    public static readonly string BadString = \"\"This has {0} and {1}, which are both bad.\"\";\n+    public static readonly string AnotherBadString = @\"\"This has {0} and {1}, which are both bad.\"\";\n+    public const char BadChar = '{0}';\n+}}\n+\", '\\u2713', \"\\U0001F308\");\n+", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Rules/NonAsciiCharactersAreEscapedInLiteralsRuleTests.cs", "position": 37, "original_position": 37, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "body": "I was pretty pleased with myself.\n", "created_at": "2015-01-07T23:39:53Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625866", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625866"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625866"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625915", "pull_request_review_id": null, "id": 22625915, "diff_hunk": "@@ -0,0 +1,126 @@\n+\ufeff// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under MIT. See LICENSE in the project root for license information.\n+using System;\n+using System.ComponentModel.Composition;\n+using System.Diagnostics;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    internal sealed class NonAsciiChractersAreEscapedInLiterals : IFormattingRule\n+    {\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var root = await document.GetSyntaxRootAsync(cancellationToken) as CompilationUnitSyntax;\n+\n+            if (root == null)\n+                return document;\n+\n+            var newRoot = UnicodeCharacterEscapingSyntaxRewriter.Rewriter.Visit(root);\n+\n+            return document.WithSyntaxRoot(newRoot);\n+        }\n+\n+        /// <summary>\n+        ///  Rewrites string and character literals which contain non ascii characters to instead use the \\uXXXX or \\UXXXXXXXX syntax.\n+        /// </summary>\n+        class UnicodeCharacterEscapingSyntaxRewriter : CSharpSyntaxRewriter\n+        {\n+            public static readonly UnicodeCharacterEscapingSyntaxRewriter Rewriter = new UnicodeCharacterEscapingSyntaxRewriter();\n+\n+            private UnicodeCharacterEscapingSyntaxRewriter()\n+            {\n+            }\n+\n+            public override SyntaxNode VisitLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                switch (node.CSharpKind())\n+                {\n+                    case SyntaxKind.StringLiteralExpression:\n+                        return RewriteStringLiteralExpression(node);\n+                    case SyntaxKind.CharacterLiteralExpression:\n+                        return RewriteCharacterLiteralExpression(node);\n+                }\n+", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs", "position": 50, "original_position": 50, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "body": "Good call, I will file an issue.  I would prefer that we don't block this on that, since we don't currently use C# 6.0 features.\n", "created_at": "2015-01-07T23:40:59Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625915", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625915"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625915"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625960", "pull_request_review_id": null, "id": 22625960, "diff_hunk": "@@ -0,0 +1,126 @@\n+\ufeff// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under MIT. See LICENSE in the project root for license information.\n+using System;\n+using System.ComponentModel.Composition;\n+using System.Diagnostics;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    internal sealed class NonAsciiChractersAreEscapedInLiterals : IFormattingRule\n+    {\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var root = await document.GetSyntaxRootAsync(cancellationToken) as CompilationUnitSyntax;\n+\n+            if (root == null)\n+                return document;\n+\n+            var newRoot = UnicodeCharacterEscapingSyntaxRewriter.Rewriter.Visit(root);\n+\n+            return document.WithSyntaxRoot(newRoot);\n+        }\n+\n+        /// <summary>\n+        ///  Rewrites string and character literals which contain non ascii characters to instead use the \\uXXXX or \\UXXXXXXXX syntax.\n+        /// </summary>\n+        class UnicodeCharacterEscapingSyntaxRewriter : CSharpSyntaxRewriter\n+        {\n+            public static readonly UnicodeCharacterEscapingSyntaxRewriter Rewriter = new UnicodeCharacterEscapingSyntaxRewriter();\n+\n+            private UnicodeCharacterEscapingSyntaxRewriter()\n+            {\n+            }\n+\n+            public override SyntaxNode VisitLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                switch (node.CSharpKind())\n+                {\n+                    case SyntaxKind.StringLiteralExpression:\n+                        return RewriteStringLiteralExpression(node);\n+                    case SyntaxKind.CharacterLiteralExpression:\n+                        return RewriteCharacterLiteralExpression(node);\n+                }\n+", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs", "position": 50, "original_position": 50, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "@ellismg definitely don't block on this.  \n", "created_at": "2015-01-07T23:41:47Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625960", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625960"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22625960"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22625960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626040", "pull_request_review_id": null, "id": 22626040, "diff_hunk": "@@ -0,0 +1,126 @@\n+\ufeff// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under MIT. See LICENSE in the project root for license information.\n+using System;\n+using System.ComponentModel.Composition;\n+using System.Diagnostics;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    internal sealed class NonAsciiChractersAreEscapedInLiterals : IFormattingRule\n+    {\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var root = await document.GetSyntaxRootAsync(cancellationToken) as CompilationUnitSyntax;\n+\n+            if (root == null)\n+                return document;\n+\n+            var newRoot = UnicodeCharacterEscapingSyntaxRewriter.Rewriter.Visit(root);\n+\n+            return document.WithSyntaxRoot(newRoot);\n+        }\n+\n+        /// <summary>\n+        ///  Rewrites string and character literals which contain non ascii characters to instead use the \\uXXXX or \\UXXXXXXXX syntax.\n+        /// </summary>\n+        class UnicodeCharacterEscapingSyntaxRewriter : CSharpSyntaxRewriter\n+        {\n+            public static readonly UnicodeCharacterEscapingSyntaxRewriter Rewriter = new UnicodeCharacterEscapingSyntaxRewriter();\n+\n+            private UnicodeCharacterEscapingSyntaxRewriter()\n+            {\n+            }\n+\n+            public override SyntaxNode VisitLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                switch (node.CSharpKind())\n+                {\n+                    case SyntaxKind.StringLiteralExpression:\n+                        return RewriteStringLiteralExpression(node);\n+                    case SyntaxKind.CharacterLiteralExpression:\n+                        return RewriteCharacterLiteralExpression(node);\n+                }\n+\n+                return base.Visit(node);                \n+            }\n+\n+            private static SyntaxNode RewriteStringLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                Debug.Assert(node.CSharpKind() == SyntaxKind.StringLiteralExpression);\n+\n+                if (HasNonAsciiCharacters(node.Token.Text))\n+                {\n+                    string convertedText = EscapeNonAsciiCharacters(node.Token.Text);\n+\n+                    SyntaxToken t = SyntaxFactory.Literal(node.Token.LeadingTrivia, convertedText, node.Token.ValueText, node.Token.TrailingTrivia);", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs", "position": 62, "original_position": 62, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "ellismg", "id": 9602953, "avatar_url": "https://avatars0.githubusercontent.com/u/9602953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellismg", "html_url": "https://github.com/ellismg", "followers_url": "https://api.github.com/users/ellismg/followers", "following_url": "https://api.github.com/users/ellismg/following{/other_user}", "gists_url": "https://api.github.com/users/ellismg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellismg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellismg/subscriptions", "organizations_url": "https://api.github.com/users/ellismg/orgs", "repos_url": "https://api.github.com/users/ellismg/repos", "events_url": "https://api.github.com/users/ellismg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellismg/received_events", "type": "User", "site_admin": false}, "body": "Based on my playing around in the debugger, even when you have have unicode excape sequences,  ValueText has the actual Unicode characters, instead of the escape sequences.  So I keep the existing ValueText, since this transformation doesn't impact it.\n\nI could be off base with my understanding of ValueText.  IIRC the docs were not super enlightening to me at the time.  Do you think there's a problem doing this? \n", "created_at": "2015-01-07T23:43:32Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22626040", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626040"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22626040"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626265", "pull_request_review_id": null, "id": 22626265, "diff_hunk": "@@ -0,0 +1,126 @@\n+\ufeff// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under MIT. See LICENSE in the project root for license information.\n+using System;\n+using System.ComponentModel.Composition;\n+using System.Diagnostics;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    internal sealed class NonAsciiChractersAreEscapedInLiterals : IFormattingRule\n+    {\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var root = await document.GetSyntaxRootAsync(cancellationToken) as CompilationUnitSyntax;\n+\n+            if (root == null)\n+                return document;\n+\n+            var newRoot = UnicodeCharacterEscapingSyntaxRewriter.Rewriter.Visit(root);\n+\n+            return document.WithSyntaxRoot(newRoot);\n+        }\n+\n+        /// <summary>\n+        ///  Rewrites string and character literals which contain non ascii characters to instead use the \\uXXXX or \\UXXXXXXXX syntax.\n+        /// </summary>\n+        class UnicodeCharacterEscapingSyntaxRewriter : CSharpSyntaxRewriter\n+        {\n+            public static readonly UnicodeCharacterEscapingSyntaxRewriter Rewriter = new UnicodeCharacterEscapingSyntaxRewriter();\n+\n+            private UnicodeCharacterEscapingSyntaxRewriter()\n+            {\n+            }\n+\n+            public override SyntaxNode VisitLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                switch (node.CSharpKind())\n+                {\n+                    case SyntaxKind.StringLiteralExpression:\n+                        return RewriteStringLiteralExpression(node);\n+                    case SyntaxKind.CharacterLiteralExpression:\n+                        return RewriteCharacterLiteralExpression(node);\n+                }\n+\n+                return base.Visit(node);                \n+            }\n+\n+            private static SyntaxNode RewriteStringLiteralExpression(LiteralExpressionSyntax node)\n+            {\n+                Debug.Assert(node.CSharpKind() == SyntaxKind.StringLiteralExpression);\n+\n+                if (HasNonAsciiCharacters(node.Token.Text))\n+                {\n+                    string convertedText = EscapeNonAsciiCharacters(node.Token.Text);\n+\n+                    SyntaxToken t = SyntaxFactory.Literal(node.Token.LeadingTrivia, convertedText, node.Token.ValueText, node.Token.TrailingTrivia);", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs", "position": 62, "original_position": 62, "commit_id": "bc872e39537a6923a4896a0d04dccc1ef88c9a19", "original_commit_id": "34abb3308392857a6e5d6ad9f08856bbbb5958ce", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "@ellismg no problem. Many of the Roslyn APIs are still very new to me and I was just curious if there was a reason.  Seems like you are doing the right thing here. \n", "created_at": "2015-01-07T23:48:26Z", "updated_at": "2015-01-07T23:52:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22626265", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/8", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626265"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/8#discussion_r22626265"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22626265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697201", "pull_request_review_id": null, "id": 22697201, "diff_hunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\"?>\n+<package >\n+  <metadata>\n+    <id>CodeFormatter</id>\n+    <version>1.0.0-prerelease</version>\n+    <title>CodeFormatter</title>\n+    <authors>Microsoft</authors>\n+    <owners>Microsoft</owners>\n+    <description>CodeFormatter tool that enforces default coding guidelines.</description>\n+    <copyright>Copyright \u00a9 Microsoft Corporation</copyright>\n+    <dependencies>\n+      <dependency id=\"Microsoft.CodeAnalysis\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.VisualBasic.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />", "path": "src/nuget/CodeFormatter.nuspec", "position": null, "original_position": 14, "commit_id": "f57f0baec28223d617e54f3fc565bfa05386db56", "original_commit_id": "a55c56be0506de025b31b77597e13890cd9585de", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Do we actually depend on this?  Thought this was C# only ATM\n", "created_at": "2015-01-09T01:35:32Z", "updated_at": "2015-01-09T20:36:05Z", "html_url": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22697201", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/18", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697201"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22697201"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697358", "pull_request_review_id": null, "id": 22697358, "diff_hunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\"?>\n+<package >\n+  <metadata>\n+    <id>CodeFormatter</id>\n+    <version>1.0.0-prerelease</version>\n+    <title>CodeFormatter</title>\n+    <authors>Microsoft</authors>\n+    <owners>Microsoft</owners>\n+    <description>CodeFormatter tool that enforces default coding guidelines.</description>\n+    <copyright>Copyright \u00a9 Microsoft Corporation</copyright>\n+    <dependencies>\n+      <dependency id=\"Microsoft.CodeAnalysis\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.VisualBasic.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />", "path": "src/nuget/CodeFormatter.nuspec", "position": null, "original_position": 14, "commit_id": "f57f0baec28223d617e54f3fc565bfa05386db56", "original_commit_id": "a55c56be0506de025b31b77597e13890cd9585de", "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "body": "Yes.. during runtime, i got load exception.\n", "created_at": "2015-01-09T01:40:03Z", "updated_at": "2015-01-09T20:36:05Z", "html_url": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22697358", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/18", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697358"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22697358"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697432", "pull_request_review_id": null, "id": 22697432, "diff_hunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\"?>\n+<package >\n+  <metadata>\n+    <id>CodeFormatter</id>\n+    <version>1.0.0-prerelease</version>\n+    <title>CodeFormatter</title>\n+    <authors>Microsoft</authors>\n+    <owners>Microsoft</owners>\n+    <description>CodeFormatter tool that enforces default coding guidelines.</description>\n+    <copyright>Copyright \u00a9 Microsoft Corporation</copyright>\n+    <dependencies>\n+      <dependency id=\"Microsoft.CodeAnalysis\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.VisualBasic.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />", "path": "src/nuget/CodeFormatter.nuspec", "position": null, "original_position": 14, "commit_id": "f57f0baec28223d617e54f3fc565bfa05386db56", "original_commit_id": "a55c56be0506de025b31b77597e13890cd9585de", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Interesting.  I wouldn't expect that because we don't load any Visual Basic code in this scenario.\n\n@jasonmalinowski is this behavior expected? \n", "created_at": "2015-01-09T01:42:04Z", "updated_at": "2015-01-09T20:36:05Z", "html_url": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22697432", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/18", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697432"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22697432"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697625", "pull_request_review_id": null, "id": 22697625, "diff_hunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\"?>\n+<package >\n+  <metadata>\n+    <id>CodeFormatter</id>\n+    <version>1.0.0-prerelease</version>\n+    <title>CodeFormatter</title>\n+    <authors>Microsoft</authors>\n+    <owners>Microsoft</owners>\n+    <description>CodeFormatter tool that enforces default coding guidelines.</description>\n+    <copyright>Copyright \u00a9 Microsoft Corporation</copyright>\n+    <dependencies>\n+      <dependency id=\"Microsoft.CodeAnalysis\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.VisualBasic.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />", "path": "src/nuget/CodeFormatter.nuspec", "position": null, "original_position": 14, "commit_id": "f57f0baec28223d617e54f3fc565bfa05386db56", "original_commit_id": "a55c56be0506de025b31b77597e13890cd9585de", "user": {"login": "davidfowl", "id": 95136, "avatar_url": "https://avatars3.githubusercontent.com/u/95136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidfowl", "html_url": "https://github.com/davidfowl", "followers_url": "https://api.github.com/users/davidfowl/followers", "following_url": "https://api.github.com/users/davidfowl/following{/other_user}", "gists_url": "https://api.github.com/users/davidfowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidfowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidfowl/subscriptions", "organizations_url": "https://api.github.com/users/davidfowl/orgs", "repos_url": "https://api.github.com/users/davidfowl/repos", "events_url": "https://api.github.com/users/davidfowl/events{/privacy}", "received_events_url": "https://api.github.com/users/davidfowl/received_events", "type": "User", "site_admin": false}, "body": "Are you sure it isn't a first chance exception? The workspaces assembly is missing a dependency on MEF but leaving out VB should work (I believe).\n", "created_at": "2015-01-09T01:49:12Z", "updated_at": "2015-01-09T20:36:05Z", "html_url": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22697625", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/18", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697625"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22697625"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22697625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22698495", "pull_request_review_id": null, "id": 22698495, "diff_hunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\"?>\n+<package >\n+  <metadata>\n+    <id>CodeFormatter</id>\n+    <version>1.0.0-prerelease</version>\n+    <title>CodeFormatter</title>\n+    <authors>Microsoft</authors>\n+    <owners>Microsoft</owners>\n+    <description>CodeFormatter tool that enforces default coding guidelines.</description>\n+    <copyright>Copyright \u00a9 Microsoft Corporation</copyright>\n+    <dependencies>\n+      <dependency id=\"Microsoft.CodeAnalysis\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.VisualBasic.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />", "path": "src/nuget/CodeFormatter.nuspec", "position": null, "original_position": 14, "commit_id": "f57f0baec28223d617e54f3fc565bfa05386db56", "original_commit_id": "a55c56be0506de025b31b77597e13890cd9585de", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "I suspect @davidfowl is correct -- we'll do a first-chance attempt to load the assembly in MefHostServices.TryLoadNearbyAssembly, but if it fails we'll just gracefully fall back.\n", "created_at": "2015-01-09T02:20:14Z", "updated_at": "2015-01-09T20:36:05Z", "html_url": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22698495", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/18", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22698495"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22698495"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22698495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22740711", "pull_request_review_id": null, "id": 22740711, "diff_hunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\"?>\n+<package >\n+  <metadata>\n+    <id>CodeFormatter</id>\n+    <version>1.0.0-prerelease</version>\n+    <title>CodeFormatter</title>\n+    <authors>Microsoft</authors>\n+    <owners>Microsoft</owners>\n+    <description>CodeFormatter tool that enforces default coding guidelines.</description>\n+    <copyright>Copyright \u00a9 Microsoft Corporation</copyright>\n+    <dependencies>\n+      <dependency id=\"Microsoft.CodeAnalysis\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />\n+      <dependency id=\"Microsoft.CodeAnalysis.VisualBasic.Workspaces\" version=\"1.0.0-beta1-20141031-01\" />", "path": "src/nuget/CodeFormatter.nuspec", "position": null, "original_position": 14, "commit_id": "f57f0baec28223d617e54f3fc565bfa05386db56", "original_commit_id": "a55c56be0506de025b31b77597e13890cd9585de", "user": {"login": "Priya91", "id": 7853870, "avatar_url": "https://avatars3.githubusercontent.com/u/7853870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priya91", "html_url": "https://github.com/Priya91", "followers_url": "https://api.github.com/users/Priya91/followers", "following_url": "https://api.github.com/users/Priya91/following{/other_user}", "gists_url": "https://api.github.com/users/Priya91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priya91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priya91/subscriptions", "organizations_url": "https://api.github.com/users/Priya91/orgs", "repos_url": "https://api.github.com/users/Priya91/repos", "events_url": "https://api.github.com/users/Priya91/events{/privacy}", "received_events_url": "https://api.github.com/users/Priya91/received_events", "type": "User", "site_admin": false}, "body": "Hmm, i'll verify this again.\n", "created_at": "2015-01-09T20:24:35Z", "updated_at": "2015-01-09T20:36:05Z", "html_url": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22740711", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/18", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22740711"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/18#discussion_r22740711"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22740711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22977171", "pull_request_review_id": null, "id": 22977171, "diff_hunk": "@@ -59,15 +59,24 @@ private static int Main(string[] args)\n \n             Console.CancelKeyPress += delegate { cts.Cancel(); };\n \n-            RunAsync(solutionPath, ruleTypes, filenames, ct).Wait(ct);\n+            RunAsync(projectOrSolutionPath, ruleTypes, filenames, ct).Wait(ct);\n             Console.WriteLine(\"Completed formatting.\");\n             return 0;\n         }\n \n-        private static async Task RunAsync(string solutionFilePath, IEnumerable<string> ruleTypes, IEnumerable<string> filenames, CancellationToken cancellationToken)\n+        private static async Task RunAsync(string projectOrSolutionPath, IEnumerable<string> ruleTypes, IEnumerable<string> filenames, CancellationToken cancellationToken)\n         {\n             var workspace = MSBuildWorkspace.Create();\n-            await workspace.OpenSolutionAsync(solutionFilePath, cancellationToken);\n+\n+            string extension = Path.GetExtension(projectOrSolutionPath);\n+            if (extension == \".sln\")", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 39, "commit_id": "95b151325a8ab6f048e0fb718286c2651341e2b1", "original_commit_id": "91928975e5838e32d315f24e605fc6645826177d", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "StringComparer.OrdinalIgnoreCase.Equals(extension, \".sln\")\n", "created_at": "2015-01-14T22:41:52Z", "updated_at": "2015-01-14T22:54:09Z", "html_url": "https://github.com/dotnet/codeformatter/pull/22#discussion_r22977171", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/22", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22977171"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/22#discussion_r22977171"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/22"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/22977171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272106", "pull_request_review_id": null, "id": 23272106, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": 115, "original_position": 106, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "Why const? That doesn't change visibility AFAIK.\n", "created_at": "2015-01-21T01:23:34Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272106", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272106"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272106"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272142", "pull_request_review_id": null, "id": 23272142, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:\n+                        case SyntaxKind.InternalKeyword:\n+                        case SyntaxKind.ProtectedKeyword:\n+                            return false;\n+                    }\n+                }\n+\n+                return true;\n+            }\n+        }\n+\n+        /// <summary>\n+        /// This rewriter exists to work around DevDiv 1086632 in Roslyn.  The Rename action is \n+        /// leaving a set of annotations in the tree.  These annotations slow down further processing\n+        /// and eventually make the rename operation unusable.  As a temporary work around we manually\n+        /// remove these from the tree.\n+        /// </summary>\n+        private sealed class RemoveRenameAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            private const string RenameAnnotationName = \"Rename\";\n+\n+            public override SyntaxNode Visit(SyntaxNode node)\n+            {\n+                node = base.Visit(node);\n+                if (node != null && node.ContainsAnnotations && node.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    node = node.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return node;\n+            }\n+\n+            public override SyntaxToken VisitToken(SyntaxToken token)\n+            {\n+                if (token.ContainsAnnotations && token.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    token = token.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return token;\n+            }\n+        }\n+\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var syntaxRoot = await document.GetSyntaxRootAsync(cancellationToken) as CSharpSyntaxNode;\n+            if (syntaxRoot == null)\n+            {\n+                return document;\n+            }\n+\n+            int count;\n+            var newSyntaxRoot = PrivateFieldAnnotationsRewriter.AddAnnotations(syntaxRoot, out count);\n+\n+            if (count == 0)\n+            {\n+                return document;\n+            }\n+\n+            var documentId = document.Id;", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": 178, "original_position": 165, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "ID is unchanged, not sure why you're holding onto it explicitly.\n", "created_at": "2015-01-21T01:24:35Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272142", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272142"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272142"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272160", "pull_request_review_id": null, "id": 23272160, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": 115, "original_position": 106, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "The previous code had an exception for `const`.  I agree it doesn't seem to make sense.  I will change it.  \n", "created_at": "2015-01-21T01:25:04Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272160", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272160"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272160"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272167", "pull_request_review_id": null, "id": 23272167, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:\n+                        case SyntaxKind.InternalKeyword:\n+                        case SyntaxKind.ProtectedKeyword:\n+                            return false;\n+                    }\n+                }\n+\n+                return true;\n+            }\n+        }\n+\n+        /// <summary>\n+        /// This rewriter exists to work around DevDiv 1086632 in Roslyn.  The Rename action is \n+        /// leaving a set of annotations in the tree.  These annotations slow down further processing\n+        /// and eventually make the rename operation unusable.  As a temporary work around we manually\n+        /// remove these from the tree.\n+        /// </summary>\n+        private sealed class RemoveRenameAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            private const string RenameAnnotationName = \"Rename\";\n+\n+            public override SyntaxNode Visit(SyntaxNode node)\n+            {\n+                node = base.Visit(node);\n+                if (node != null && node.ContainsAnnotations && node.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    node = node.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return node;\n+            }\n+\n+            public override SyntaxToken VisitToken(SyntaxToken token)\n+            {\n+                if (token.ContainsAnnotations && token.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    token = token.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return token;\n+            }\n+        }\n+\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var syntaxRoot = await document.GetSyntaxRootAsync(cancellationToken) as CSharpSyntaxNode;\n+            if (syntaxRoot == null)\n+            {\n+                return document;\n+            }\n+\n+            int count;\n+            var newSyntaxRoot = PrivateFieldAnnotationsRewriter.AddAnnotations(syntaxRoot, out count);\n+\n+            if (count == 0)\n+            {\n+                return document;\n+            }\n+\n+            var documentId = document.Id;", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": 178, "original_position": 165, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Paranoia.  It's a wonderful thing. \n", "created_at": "2015-01-21T01:25:29Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272167", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272167"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272167"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272169", "pull_request_review_id": null, "id": 23272169, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:\n+                        case SyntaxKind.InternalKeyword:\n+                        case SyntaxKind.ProtectedKeyword:\n+                            return false;\n+                    }\n+                }\n+\n+                return true;\n+            }\n+        }\n+\n+        /// <summary>\n+        /// This rewriter exists to work around DevDiv 1086632 in Roslyn.  The Rename action is \n+        /// leaving a set of annotations in the tree.  These annotations slow down further processing\n+        /// and eventually make the rename operation unusable.  As a temporary work around we manually\n+        /// remove these from the tree.\n+        /// </summary>\n+        private sealed class RemoveRenameAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            private const string RenameAnnotationName = \"Rename\";\n+\n+            public override SyntaxNode Visit(SyntaxNode node)\n+            {\n+                node = base.Visit(node);\n+                if (node != null && node.ContainsAnnotations && node.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    node = node.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return node;\n+            }\n+\n+            public override SyntaxToken VisitToken(SyntaxToken token)\n+            {\n+                if (token.ContainsAnnotations && token.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    token = token.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return token;\n+            }\n+        }\n+\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var syntaxRoot = await document.GetSyntaxRootAsync(cancellationToken) as CSharpSyntaxNode;\n+            if (syntaxRoot == null)\n+            {\n+                return document;\n+            }\n+\n+            int count;\n+            var newSyntaxRoot = PrivateFieldAnnotationsRewriter.AddAnnotations(syntaxRoot, out count);\n+\n+            if (count == 0)\n+            {\n+                return document;\n+            }\n+\n+            var documentId = document.Id;\n+            var solution = document.Project.Solution;\n+            solution = solution.WithDocumentSyntaxRoot(documentId, newSyntaxRoot);\n+            solution = await RenameFields(solution, documentId, count, cancellationToken);\n+            return solution.GetDocument(documentId);\n+        }\n+\n+        private static async Task<Solution> RenameFields(Solution solution, DocumentId documentId, int count, CancellationToken cancellationToken)\n+        {\n+            Solution oldSolution = null;\n+            for (int i = 0; i < count; i++)\n+            {\n+                // If this is not the first field then clean up the Rename annotations left\n+                // in the tree.\n+                if (i > 0)\n+                {\n+                    solution = await CleanSolutionAsync(solution, oldSolution, cancellationToken);\n+                }\n+\n+                oldSolution = solution;\n+\n+                var semanticModel = await solution.GetDocument(documentId).GetSemanticModelAsync(cancellationToken);\n+                var root = await semanticModel.SyntaxTree.GetRootAsync(cancellationToken) as CSharpSyntaxNode;\n+                var declaration = root.GetAnnotatedNodes(PrivateFieldAnnotationsRewriter.Marker).ElementAt(i);\n+                var fieldSymbol = (IFieldSymbol)semanticModel.GetDeclaredSymbol(declaration, cancellationToken);\n+                var newName = GetNewFieldName(fieldSymbol);\n+                solution = await Renamer.RenameSymbolAsync(solution, fieldSymbol, newName, solution.Workspace.Options, cancellationToken).ConfigureAwait(false);\n+            }\n+\n+            return solution;\n+        }\n+\n+        private static string GetNewFieldName(IFieldSymbol fieldSymbol)\n+        {\n+            var name = fieldSymbol.Name;\n+            if (name.Length > 1)\n+            {\n+                if (name[0] == '_')\n+                {\n+                    name = name.TrimStart('_');\n+                }\n+                else if (char.IsLetter(name[0]) && name[1] == '_')", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": null, "original_position": 206, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "Is this to enforce m_ or s_? Better hope they didn't do something else.\n", "created_at": "2015-01-21T01:25:30Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272169", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272169"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272169"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272193", "pull_request_review_id": null, "id": 23272193, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:\n+                        case SyntaxKind.InternalKeyword:\n+                        case SyntaxKind.ProtectedKeyword:\n+                            return false;\n+                    }\n+                }\n+\n+                return true;\n+            }\n+        }\n+\n+        /// <summary>\n+        /// This rewriter exists to work around DevDiv 1086632 in Roslyn.  The Rename action is \n+        /// leaving a set of annotations in the tree.  These annotations slow down further processing\n+        /// and eventually make the rename operation unusable.  As a temporary work around we manually\n+        /// remove these from the tree.\n+        /// </summary>\n+        private sealed class RemoveRenameAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            private const string RenameAnnotationName = \"Rename\";\n+\n+            public override SyntaxNode Visit(SyntaxNode node)\n+            {\n+                node = base.Visit(node);\n+                if (node != null && node.ContainsAnnotations && node.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    node = node.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return node;\n+            }\n+\n+            public override SyntaxToken VisitToken(SyntaxToken token)\n+            {\n+                if (token.ContainsAnnotations && token.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    token = token.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return token;\n+            }\n+        }\n+\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var syntaxRoot = await document.GetSyntaxRootAsync(cancellationToken) as CSharpSyntaxNode;\n+            if (syntaxRoot == null)\n+            {\n+                return document;\n+            }\n+\n+            int count;\n+            var newSyntaxRoot = PrivateFieldAnnotationsRewriter.AddAnnotations(syntaxRoot, out count);\n+\n+            if (count == 0)\n+            {\n+                return document;\n+            }\n+\n+            var documentId = document.Id;\n+            var solution = document.Project.Solution;\n+            solution = solution.WithDocumentSyntaxRoot(documentId, newSyntaxRoot);\n+            solution = await RenameFields(solution, documentId, count, cancellationToken);\n+            return solution.GetDocument(documentId);\n+        }\n+\n+        private static async Task<Solution> RenameFields(Solution solution, DocumentId documentId, int count, CancellationToken cancellationToken)\n+        {\n+            Solution oldSolution = null;\n+            for (int i = 0; i < count; i++)\n+            {\n+                // If this is not the first field then clean up the Rename annotations left\n+                // in the tree.\n+                if (i > 0)\n+                {\n+                    solution = await CleanSolutionAsync(solution, oldSolution, cancellationToken);\n+                }\n+\n+                oldSolution = solution;\n+\n+                var semanticModel = await solution.GetDocument(documentId).GetSemanticModelAsync(cancellationToken);\n+                var root = await semanticModel.SyntaxTree.GetRootAsync(cancellationToken) as CSharpSyntaxNode;\n+                var declaration = root.GetAnnotatedNodes(PrivateFieldAnnotationsRewriter.Marker).ElementAt(i);\n+                var fieldSymbol = (IFieldSymbol)semanticModel.GetDeclaredSymbol(declaration, cancellationToken);\n+                var newName = GetNewFieldName(fieldSymbol);", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": 203, "original_position": 190, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "Not sure if we short-circuit the rename being a no-op.\n", "created_at": "2015-01-21T01:26:22Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272193", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272193"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272193"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272230", "pull_request_review_id": null, "id": 23272230, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": 115, "original_position": 106, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Actually, going to leave it for now.  Want to get feedback from the corefx team as to why they had that exception. \n", "created_at": "2015-01-21T01:27:16Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272230", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272230"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272230"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272233", "pull_request_review_id": null, "id": 23272233, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:\n+                        case SyntaxKind.InternalKeyword:\n+                        case SyntaxKind.ProtectedKeyword:\n+                            return false;\n+                    }\n+                }\n+\n+                return true;\n+            }\n+        }\n+\n+        /// <summary>\n+        /// This rewriter exists to work around DevDiv 1086632 in Roslyn.  The Rename action is \n+        /// leaving a set of annotations in the tree.  These annotations slow down further processing\n+        /// and eventually make the rename operation unusable.  As a temporary work around we manually\n+        /// remove these from the tree.\n+        /// </summary>\n+        private sealed class RemoveRenameAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            private const string RenameAnnotationName = \"Rename\";\n+\n+            public override SyntaxNode Visit(SyntaxNode node)\n+            {\n+                node = base.Visit(node);\n+                if (node != null && node.ContainsAnnotations && node.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    node = node.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return node;\n+            }\n+\n+            public override SyntaxToken VisitToken(SyntaxToken token)\n+            {\n+                if (token.ContainsAnnotations && token.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    token = token.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return token;\n+            }\n+        }\n+\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var syntaxRoot = await document.GetSyntaxRootAsync(cancellationToken) as CSharpSyntaxNode;\n+            if (syntaxRoot == null)\n+            {\n+                return document;\n+            }\n+\n+            int count;\n+            var newSyntaxRoot = PrivateFieldAnnotationsRewriter.AddAnnotations(syntaxRoot, out count);\n+\n+            if (count == 0)\n+            {\n+                return document;\n+            }\n+\n+            var documentId = document.Id;\n+            var solution = document.Project.Solution;\n+            solution = solution.WithDocumentSyntaxRoot(documentId, newSyntaxRoot);\n+            solution = await RenameFields(solution, documentId, count, cancellationToken);\n+            return solution.GetDocument(documentId);\n+        }\n+\n+        private static async Task<Solution> RenameFields(Solution solution, DocumentId documentId, int count, CancellationToken cancellationToken)\n+        {\n+            Solution oldSolution = null;\n+            for (int i = 0; i < count; i++)\n+            {\n+                // If this is not the first field then clean up the Rename annotations left\n+                // in the tree.\n+                if (i > 0)\n+                {\n+                    solution = await CleanSolutionAsync(solution, oldSolution, cancellationToken);\n+                }\n+\n+                oldSolution = solution;\n+\n+                var semanticModel = await solution.GetDocument(documentId).GetSemanticModelAsync(cancellationToken);\n+                var root = await semanticModel.SyntaxTree.GetRootAsync(cancellationToken) as CSharpSyntaxNode;\n+                var declaration = root.GetAnnotatedNodes(PrivateFieldAnnotationsRewriter.Marker).ElementAt(i);\n+                var fieldSymbol = (IFieldSymbol)semanticModel.GetDeclaredSymbol(declaration, cancellationToken);\n+                var newName = GetNewFieldName(fieldSymbol);\n+                solution = await Renamer.RenameSymbolAsync(solution, fieldSymbol, newName, solution.Workspace.Options, cancellationToken).ConfigureAwait(false);\n+            }\n+\n+            return solution;\n+        }\n+\n+        private static string GetNewFieldName(IFieldSymbol fieldSymbol)\n+        {\n+            var name = fieldSymbol.Name;\n+            if (name.Length > 1)\n+            {\n+                if (name[0] == '_')\n+                {\n+                    name = name.TrimStart('_');\n+                }\n+                else if (char.IsLetter(name[0]) && name[1] == '_')\n+                {\n+                    name = name.Substring(2);", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": null, "original_position": 208, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "A name of \"x_\" will end in an empty string.\n", "created_at": "2015-01-21T01:27:25Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272233", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272233"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272233"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272711", "pull_request_review_id": null, "id": 23272711, "diff_hunk": "@@ -0,0 +1,257 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.ComponentModel.Composition;\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Rename;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [RuleOrder(RuleOrder.PrivateFieldNamingRule)]\n+    internal sealed class PrivateFieldNamingRule : IFormattingRule\n+    {\n+        /// <summary>\n+        /// This will add an annotation to any private field that needs to be renamed.\n+        /// </summary>\n+        private sealed class PrivateFieldAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            internal readonly static SyntaxAnnotation Marker = new SyntaxAnnotation(\"PrivateFieldToRename\");\n+\n+            // Used to avoid the array allocation on calls to WithAdditionalAnnotations\n+            private readonly static SyntaxAnnotation[] s_markerArray;\n+\n+            static PrivateFieldAnnotationsRewriter()\n+            {\n+                s_markerArray = new SyntaxAnnotation[] { Marker };\n+            }\n+\n+            private int _count;\n+\n+            internal static SyntaxNode AddAnnotations(SyntaxNode node, out int count)\n+            {\n+                var rewriter = new PrivateFieldAnnotationsRewriter();\n+                var newNode = rewriter.Visit(node);\n+                count = rewriter._count;\n+                return newNode;\n+            }\n+\n+            public override SyntaxNode VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                if (NeedsRewrite(node))\n+                {\n+                    var list = new List<VariableDeclaratorSyntax>(node.Declaration.Variables.Count);\n+                    foreach (var v in node.Declaration.Variables)\n+                    {\n+                        if (IsBadName(v))\n+                        {\n+                            list.Add(v.WithAdditionalAnnotations(Marker));\n+                            _count++;\n+                        }\n+                        else\n+                        {\n+                            list.Add(v);\n+                        }\n+                    }\n+\n+                    var declaration = node.Declaration.WithVariables(SyntaxFactory.SeparatedList(list));\n+                    node = node.WithDeclaration(declaration);\n+\n+                    return node;\n+                }\n+\n+                return node;\n+            }\n+\n+            private static bool NeedsRewrite(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                if (!IsPrivateField(fieldSyntax))\n+                {\n+                    return false;\n+                }\n+\n+                foreach (var v in fieldSyntax.Declaration.Variables)\n+                {\n+                    if (IsBadName(v))\n+                    {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private static bool IsBadName(VariableDeclaratorSyntax node)\n+            {\n+                var name = node.Identifier.ValueText;\n+                return name.Length > 0 && name[0] != '_';\n+            }\n+\n+            private static bool IsPrivateField(FieldDeclarationSyntax fieldSyntax)\n+            {\n+                foreach (var modifier in fieldSyntax.Modifiers)\n+                {\n+                    switch (modifier.CSharpKind())\n+                    {\n+                        case SyntaxKind.PublicKeyword:\n+                        case SyntaxKind.ConstKeyword:\n+                        case SyntaxKind.InternalKeyword:\n+                        case SyntaxKind.ProtectedKeyword:\n+                            return false;\n+                    }\n+                }\n+\n+                return true;\n+            }\n+        }\n+\n+        /// <summary>\n+        /// This rewriter exists to work around DevDiv 1086632 in Roslyn.  The Rename action is \n+        /// leaving a set of annotations in the tree.  These annotations slow down further processing\n+        /// and eventually make the rename operation unusable.  As a temporary work around we manually\n+        /// remove these from the tree.\n+        /// </summary>\n+        private sealed class RemoveRenameAnnotationsRewriter : CSharpSyntaxRewriter\n+        {\n+            private const string RenameAnnotationName = \"Rename\";\n+\n+            public override SyntaxNode Visit(SyntaxNode node)\n+            {\n+                node = base.Visit(node);\n+                if (node != null && node.ContainsAnnotations && node.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    node = node.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return node;\n+            }\n+\n+            public override SyntaxToken VisitToken(SyntaxToken token)\n+            {\n+                if (token.ContainsAnnotations && token.GetAnnotations(RenameAnnotationName).Any())\n+                {\n+                    token = token.WithoutAnnotations(RenameAnnotationName);\n+                }\n+\n+                return token;\n+            }\n+        }\n+\n+        public async Task<Document> ProcessAsync(Document document, CancellationToken cancellationToken)\n+        {\n+            var syntaxRoot = await document.GetSyntaxRootAsync(cancellationToken) as CSharpSyntaxNode;\n+            if (syntaxRoot == null)\n+            {\n+                return document;\n+            }\n+\n+            int count;\n+            var newSyntaxRoot = PrivateFieldAnnotationsRewriter.AddAnnotations(syntaxRoot, out count);\n+\n+            if (count == 0)\n+            {\n+                return document;\n+            }\n+\n+            var documentId = document.Id;\n+            var solution = document.Project.Solution;\n+            solution = solution.WithDocumentSyntaxRoot(documentId, newSyntaxRoot);\n+            solution = await RenameFields(solution, documentId, count, cancellationToken);\n+            return solution.GetDocument(documentId);\n+        }\n+\n+        private static async Task<Solution> RenameFields(Solution solution, DocumentId documentId, int count, CancellationToken cancellationToken)\n+        {\n+            Solution oldSolution = null;\n+            for (int i = 0; i < count; i++)\n+            {\n+                // If this is not the first field then clean up the Rename annotations left\n+                // in the tree.\n+                if (i > 0)\n+                {\n+                    solution = await CleanSolutionAsync(solution, oldSolution, cancellationToken);\n+                }\n+\n+                oldSolution = solution;\n+\n+                var semanticModel = await solution.GetDocument(documentId).GetSemanticModelAsync(cancellationToken);\n+                var root = await semanticModel.SyntaxTree.GetRootAsync(cancellationToken) as CSharpSyntaxNode;\n+                var declaration = root.GetAnnotatedNodes(PrivateFieldAnnotationsRewriter.Marker).ElementAt(i);\n+                var fieldSymbol = (IFieldSymbol)semanticModel.GetDeclaredSymbol(declaration, cancellationToken);\n+                var newName = GetNewFieldName(fieldSymbol);\n+                solution = await Renamer.RenameSymbolAsync(solution, fieldSymbol, newName, solution.Workspace.Options, cancellationToken).ConfigureAwait(false);\n+            }\n+\n+            return solution;\n+        }\n+\n+        private static string GetNewFieldName(IFieldSymbol fieldSymbol)\n+        {\n+            var name = fieldSymbol.Name;\n+            if (name.Length > 1)\n+            {\n+                if (name[0] == '_')\n+                {\n+                    name = name.TrimStart('_');\n+                }\n+                else if (char.IsLetter(name[0]) && name[1] == '_')", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/PrivateFieldNamingRule.cs", "position": null, "original_position": 206, "commit_id": "b78f11d4fb3ab2543588a2d9edf8f26338465694", "original_commit_id": "5c2a312e5b8aeb7de60f6993f1ae9c4a1bd59423", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "This enforces the s_ prefix for static fields and the _ prefix for private fields.  See https://github.com/dotnet/corefx/wiki/Contributing#c-coding-style\n", "created_at": "2015-01-21T01:40:07Z", "updated_at": "2015-01-21T01:53:29Z", "html_url": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272711", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/31", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272711"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/31#discussion_r23272711"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/31"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23272711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347153", "pull_request_review_id": null, "id": 23347153, "diff_hunk": "@@ -70,7 +66,12 @@ private static NameSyntax RemoveQualification(MemberAccessExpressionSyntax membe\n             var semanticModel = await document.GetSemanticModelAsync(cancellationToken);\n             var rewriter = new ExplicitThisRewriter(semanticModel, cancellationToken);\n             var newNode = rewriter.Visit(syntaxNode);\n-            return document.WithSyntaxRoot(newNode);\n+            if (!rewriter.AddedAnnotations)", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/ExplicitThisRule.cs", "position": 54, "original_position": 54, "commit_id": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "original_commit_id": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "Rather than having to have the stateful flag, just check if newNode != syntaxNode. If the nodes are reference equal, then that means the rewriter did nothing.\n", "created_at": "2015-01-22T00:29:27Z", "updated_at": "2015-01-22T00:29:27Z", "html_url": "https://github.com/dotnet/codeformatter/pull/32#discussion_r23347153", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/32", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347153"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/32#discussion_r23347153"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/32"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347224", "pull_request_review_id": null, "id": 23347224, "diff_hunk": "@@ -38,25 +45,14 @@ public override SyntaxNode VisitMemberAccessExpression(MemberAccessExpressionSyn\n                         var field = (IFieldSymbol)symbolInfo.Symbol;", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/ExplicitThisRule.cs", "position": 22, "original_position": 22, "commit_id": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "original_commit_id": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "Is the policy no \"this.\" qualification for fields specifically, or no unnecessary qualification anywhere?\n", "created_at": "2015-01-22T00:30:55Z", "updated_at": "2015-01-22T00:30:55Z", "html_url": "https://github.com/dotnet/codeformatter/pull/32#discussion_r23347224", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/32", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347224"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/32#discussion_r23347224"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/32"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23347224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23383084", "pull_request_review_id": null, "id": 23383084, "diff_hunk": "@@ -70,7 +66,12 @@ private static NameSyntax RemoveQualification(MemberAccessExpressionSyntax membe\n             var semanticModel = await document.GetSemanticModelAsync(cancellationToken);\n             var rewriter = new ExplicitThisRewriter(semanticModel, cancellationToken);\n             var newNode = rewriter.Visit(syntaxNode);\n-            return document.WithSyntaxRoot(newNode);\n+            if (!rewriter.AddedAnnotations)", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/ExplicitThisRule.cs", "position": 54, "original_position": 54, "commit_id": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "original_commit_id": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Good point.  Will update that in my active branch. \n", "created_at": "2015-01-22T15:32:01Z", "updated_at": "2015-01-22T15:32:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/32#discussion_r23383084", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/32", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23383084"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/32#discussion_r23383084"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/32"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23383084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23383943", "pull_request_review_id": null, "id": 23383943, "diff_hunk": "@@ -38,25 +45,14 @@ public override SyntaxNode VisitMemberAccessExpression(MemberAccessExpressionSyn\n                         var field = (IFieldSymbol)symbolInfo.Symbol;", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/ExplicitThisRule.cs", "position": 22, "original_position": 22, "commit_id": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "original_commit_id": "2b6c2c12ae8b24161f26bff62246dc12ed6975ff", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "The general policy is avoid `this.` whenever possible.  \n\nRight now I'm focused on the Roslyn code base and the majority of `this.` uses relate to private fields.  Running this rule more generally on every file is not feasible because the performance just isn't correct.  I chatted with Kevin and Dustin about ways to make it faster and will be trying it out.  But for now I'm trying to key on the bit item scenarios. \n", "created_at": "2015-01-22T15:42:54Z", "updated_at": "2015-01-22T15:42:54Z", "html_url": "https://github.com/dotnet/codeformatter/pull/32#discussion_r23383943", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/32", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23383943"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/32#discussion_r23383943"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/32"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23383943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23489946", "pull_request_review_id": null, "id": 23489946, "diff_hunk": "@@ -47,28 +50,35 @@ private static int Main(string[] args)\n                         i++;\n                     }\n                 }\n+                else if (comparer.Equals(arg, \"/nocopyright\"))\n+                {\n+                    disableCopyright = true;\n+                }\n                 else\n                 {\n                     ruleTypes.Add(arg);\n                 }\n             }\n \n-\n             var cts = new CancellationTokenSource();\n             var ct = cts.Token;\n \n             Console.CancelKeyPress += delegate { cts.Cancel(); };\n \n-            RunAsync(projectOrSolutionPath, ruleTypes, filenames, ct).Wait(ct);\n+            RunAsync(projectOrSolutionPath, ruleTypes, filenames, disableCopyright, ct).Wait(ct);\n             Console.WriteLine(\"Completed formatting.\");\n             return 0;\n         }\n \n-        private static async Task RunAsync(string projectOrSolutionPath, IEnumerable<string> ruleTypes, IEnumerable<string> filenames, CancellationToken cancellationToken)\n+        private static async Task RunAsync(string projectOrSolutionPath, IEnumerable<string> ruleTypes, IEnumerable<string> filenames, bool disableCopright, CancellationToken cancellationToken)\n         {\n             var workspace = MSBuildWorkspace.Create();\n             var engine = FormattingEngine.Create(ruleTypes, filenames);\n             engine.Verbose = true;\n+            if (disableCopright)\n+            {\n+                engine.CopyrightHeader = ImmutableArray<string>.Empty;", "path": "src/CodeFormatter/Program.cs", "position": 61, "original_position": 61, "commit_id": "23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "original_commit_id": "23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "body": "Should we read the copyright here if this flag is not set? Instead of doing that in the rule?\n", "created_at": "2015-01-24T00:04:36Z", "updated_at": "2015-01-24T00:04:36Z", "html_url": "https://github.com/dotnet/codeformatter/pull/40#discussion_r23489946", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/40", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23489946"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/40#discussion_r23489946"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/40"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23489946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23490308", "pull_request_review_id": null, "id": 23490308, "diff_hunk": "@@ -47,28 +50,35 @@ private static int Main(string[] args)\n                         i++;\n                     }\n                 }\n+                else if (comparer.Equals(arg, \"/nocopyright\"))\n+                {\n+                    disableCopyright = true;\n+                }\n                 else\n                 {\n                     ruleTypes.Add(arg);\n                 }\n             }\n \n-\n             var cts = new CancellationTokenSource();\n             var ct = cts.Token;\n \n             Console.CancelKeyPress += delegate { cts.Cancel(); };\n \n-            RunAsync(projectOrSolutionPath, ruleTypes, filenames, ct).Wait(ct);\n+            RunAsync(projectOrSolutionPath, ruleTypes, filenames, disableCopyright, ct).Wait(ct);\n             Console.WriteLine(\"Completed formatting.\");\n             return 0;\n         }\n \n-        private static async Task RunAsync(string projectOrSolutionPath, IEnumerable<string> ruleTypes, IEnumerable<string> filenames, CancellationToken cancellationToken)\n+        private static async Task RunAsync(string projectOrSolutionPath, IEnumerable<string> ruleTypes, IEnumerable<string> filenames, bool disableCopright, CancellationToken cancellationToken)\n         {\n             var workspace = MSBuildWorkspace.Create();\n             var engine = FormattingEngine.Create(ruleTypes, filenames);\n             engine.Verbose = true;\n+            if (disableCopright)\n+            {\n+                engine.CopyrightHeader = ImmutableArray<string>.Empty;", "path": "src/CodeFormatter/Program.cs", "position": 61, "original_position": 61, "commit_id": "23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "original_commit_id": "23e3dca7f7e4ad252464b8174de7c9289e6c6bdb", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "The code which reads the copyright doesn't seem to work ATM.  Or at least it was failing on my machine.  I was going to try and get around to fixing that this weekend at some point. \n", "created_at": "2015-01-24T00:15:24Z", "updated_at": "2015-01-24T00:15:24Z", "html_url": "https://github.com/dotnet/codeformatter/pull/40#discussion_r23490308", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/40", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23490308"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/40#discussion_r23490308"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/40"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23490308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23560221", "pull_request_review_id": null, "id": 23560221, "diff_hunk": "@@ -51,6 +51,13 @@ private static SyntaxNode RewriteStringLiteralExpression(LiteralExpressionSyntax\n             {\n                 Debug.Assert(node.CSharpKind() == SyntaxKind.StringLiteralExpression);\n \n+                if (node.Token.IsVerbatimStringLiteral())\n+                {\n+                    // We do not correctly rewrite verbatim string literals yet.  Once Issue 39 is\n+                    // fixed we can remove this early out.", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/NonAsciiCharactersAreEscapedInLiteralsRule.cs", "position": 7, "original_position": 7, "commit_id": "9ed44d44cf8fc7508be12ffdfd72fac704c4b81b", "original_commit_id": "9ed44d44cf8fc7508be12ffdfd72fac704c4b81b", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Nit: If you change that to \"issue #39\" (pound symbol) it will create a clickable link when viewed in GitHub\n", "created_at": "2015-01-26T20:09:36Z", "updated_at": "2015-01-26T20:09:36Z", "html_url": "https://github.com/dotnet/codeformatter/pull/44#discussion_r23560221", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/44", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23560221"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/44#discussion_r23560221"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/44"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/23560221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24613377", "pull_request_review_id": null, "id": 24613377, "diff_hunk": "@@ -52,6 +52,23 @@ internal UsesXunitForTestsFormattingRule(Options options)\n \n             foreach (var usingSyntax in root.Usings)\n             {\n+                Action<UsingDirectiveSyntax> addUsing = (UsingDirectiveSyntax newUsingSyntax) =>", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/UsesXunitForTestsFormattingRule.cs", "position": null, "original_position": 4, "commit_id": "c672233be8b77572c435b502bdbb16bcdf5ab108", "original_commit_id": "25423c5864b09d73c6b3e8dfb0900e5de71b78ee", "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "body": "Should this be a separate method?\n", "created_at": "2015-02-12T19:47:11Z", "updated_at": "2015-02-12T20:09:59Z", "html_url": "https://github.com/dotnet/codeformatter/pull/59#discussion_r24613377", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/59", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24613377"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/59#discussion_r24613377"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/59"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24613377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24614830", "pull_request_review_id": null, "id": 24614830, "diff_hunk": "@@ -52,6 +52,23 @@ internal UsesXunitForTestsFormattingRule(Options options)\n \n             foreach (var usingSyntax in root.Usings)\n             {\n+                Action<UsingDirectiveSyntax> addUsing = (UsingDirectiveSyntax newUsingSyntax) =>", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/UsesXunitForTestsFormattingRule.cs", "position": null, "original_position": 4, "commit_id": "c672233be8b77572c435b502bdbb16bcdf5ab108", "original_commit_id": "25423c5864b09d73c6b3e8dfb0900e5de71b78ee", "user": {"login": "FiveTimesTheFun", "id": 6598317, "avatar_url": "https://avatars2.githubusercontent.com/u/6598317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FiveTimesTheFun", "html_url": "https://github.com/FiveTimesTheFun", "followers_url": "https://api.github.com/users/FiveTimesTheFun/followers", "following_url": "https://api.github.com/users/FiveTimesTheFun/following{/other_user}", "gists_url": "https://api.github.com/users/FiveTimesTheFun/gists{/gist_id}", "starred_url": "https://api.github.com/users/FiveTimesTheFun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FiveTimesTheFun/subscriptions", "organizations_url": "https://api.github.com/users/FiveTimesTheFun/orgs", "repos_url": "https://api.github.com/users/FiveTimesTheFun/repos", "events_url": "https://api.github.com/users/FiveTimesTheFun/events{/privacy}", "received_events_url": "https://api.github.com/users/FiveTimesTheFun/received_events", "type": "User", "site_admin": false}, "body": "Sure.  I'll implement it as UsingDirectiveSyntax RemoveLeadingAndTrailingCompilerDirectives(UsingDirectiveSyntax) and update the PR.\n", "created_at": "2015-02-12T20:02:29Z", "updated_at": "2015-02-12T20:09:59Z", "html_url": "https://github.com/dotnet/codeformatter/pull/59#discussion_r24614830", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/59", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24614830"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/59#discussion_r24614830"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/59"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24614830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684032", "pull_request_review_id": null, "id": 24684032, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 22, "original_position": 22, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "CC @jasonmalinowski because he will have better knowledge of the parse tree here.  My concern is whether or not we are guaranteed the `EndOfFileToken` will be the only descendant token here in all cases.  If not `Single` will throw and break the formatter.  \n", "created_at": "2015-02-13T18:16:54Z", "updated_at": "2015-02-13T18:16:54Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24684032", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684032"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24684032"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684094", "pull_request_review_id": null, "id": 24684094, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return token.WithLeadingTrivia(newTrivia.AddNewLine());\n+        }", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 49, "original_position": 49, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "The actual formatting step, invoking the Formatter, will remove the final new line in a file.  This is an uncontrollable option of the formatter at this time.  Hence adding this token here will just result in it being removed later.  I think we should just return token directly.  \n", "created_at": "2015-02-13T18:17:45Z", "updated_at": "2015-02-13T18:17:45Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24684094", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684094"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24684094"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684363", "pull_request_review_id": null, "id": 24684363, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 45, "original_position": 45, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "This needs to be a bit more nuanced here.  Consider the following code:\n\n``` csharp\nclass C\n{\n\n}\n// comment 1\n// comment 2 \n```\n\nThe result of running this rule would be \n\n``` csharp\nclass C\n{\n\n}\n// comment 1 // comment 2\n```\n\nThis is because the leading trivia can include comments (both structured and unstructured).  \n\nI had to make a similar change for braces above a new line.  It has virtually the same problems as this particular change.  May want to just make this a helper method. \n\nhttps://github.com/dotnet/codeformatter/blob/master/src/Microsoft.DotNet.CodeFormatting/Rules/BraceNewLineRule.cs#L142\n", "created_at": "2015-02-13T18:21:13Z", "updated_at": "2015-02-13T18:21:21Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24684363", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684363"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24684363"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24684363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24688077", "pull_request_review_id": null, "id": 24688077, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 22, "original_position": 22, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jasonmalinowski", "id": 201340, "avatar_url": "https://avatars3.githubusercontent.com/u/201340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmalinowski", "html_url": "https://github.com/jasonmalinowski", "followers_url": "https://api.github.com/users/jasonmalinowski/followers", "following_url": "https://api.github.com/users/jasonmalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmalinowski/subscriptions", "organizations_url": "https://api.github.com/users/jasonmalinowski/orgs", "repos_url": "https://api.github.com/users/jasonmalinowski/repos", "events_url": "https://api.github.com/users/jasonmalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmalinowski/received_events", "type": "User", "site_admin": false}, "body": "@basoundr @heejaechang would know more here than I.\n", "created_at": "2015-02-13T19:10:35Z", "updated_at": "2015-02-13T19:10:35Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24688077", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24688077"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24688077"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24688077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24693526", "pull_request_review_id": null, "id": 24693526, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 22, "original_position": 22, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "body": "@jaredpar It's not the only descendant token, it's getting _a single_ EndOfFile token. Wouldn't it be weird if there were multiple EOFs?\n", "created_at": "2015-02-13T20:21:19Z", "updated_at": "2015-02-13T20:21:19Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24693526", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24693526"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24693526"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24693526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694059", "pull_request_review_id": null, "id": 24694059, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 22, "original_position": 22, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "@khellang ah you are correct.  I wasn't reading the conditional on `Single` correctly.  \n", "created_at": "2015-02-13T20:28:44Z", "updated_at": "2015-02-13T20:28:44Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694059", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694059"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694059"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694193", "pull_request_review_id": null, "id": 24694193, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 22, "original_position": 22, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "body": "@jaredpar I could of course change it to `Last`, just in case?\n", "created_at": "2015-02-13T20:30:41Z", "updated_at": "2015-02-13T20:30:41Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694193", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694193"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694193"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694263", "pull_request_review_id": null, "id": 24694263, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 45, "original_position": 45, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "body": "Yeah, I'll get more tests in there to try to nail more edge cases :smile:\n", "created_at": "2015-02-13T20:31:53Z", "updated_at": "2015-02-13T20:31:53Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694263", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694263"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694263"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694444", "pull_request_review_id": null, "id": 24694444, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return token.WithLeadingTrivia(newTrivia.AddNewLine());\n+        }", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 49, "original_position": 49, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "body": "Not sure what you mean by \"adding the token\". Do you mean the CRLF trivia? Doesn't the tests invoke the formatter?\n", "created_at": "2015-02-13T20:34:23Z", "updated_at": "2015-02-13T20:34:23Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694444", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694444"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694444"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694603", "pull_request_review_id": null, "id": 24694603, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 22, "original_position": 22, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "@khellang I actually like it much better as written.  If there is more than one EndOfFileToken then that is a bug.  Want to make sure we seek it ;) \n", "created_at": "2015-02-13T20:36:43Z", "updated_at": "2015-02-13T20:36:43Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694603", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694603"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694603"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694631", "pull_request_review_id": null, "id": 24694631, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 22, "original_position": 22, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "So yes I did start this comment thread asking for a change to the code and end with asking for it to not change. \n", "created_at": "2015-02-13T20:37:20Z", "updated_at": "2015-02-13T20:37:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694631", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694631"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694631"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694682", "pull_request_review_id": null, "id": 24694682, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 45, "original_position": 45, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "@khellang just remember the golden rule of editing trivia in Roslyn\n\n> Trivia is never trivial \n\nIt's the Roslyn motto ;) \n", "created_at": "2015-02-13T20:37:56Z", "updated_at": "2015-02-13T20:37:56Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694682", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694682"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694682"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694722", "pull_request_review_id": null, "id": 24694722, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return token.WithLeadingTrivia(newTrivia.AddNewLine());\n+        }", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 49, "original_position": 49, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Correct, I meant adding the newline.  I was asking why we add it here knowing the formatter is just going to remove it soon after.  \n", "created_at": "2015-02-13T20:38:31Z", "updated_at": "2015-02-13T20:38:31Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694722", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694722"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24694722"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24694722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695488", "pull_request_review_id": null, "id": 24695488, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 22, "original_position": 22, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "body": "Great :+1:\n", "created_at": "2015-02-13T20:48:31Z", "updated_at": "2015-02-13T20:48:31Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24695488", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695488"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24695488"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695747", "pull_request_review_id": null, "id": 24695747, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return token.WithLeadingTrivia(newTrivia.AddNewLine());\n+        }", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 49, "original_position": 49, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "body": "So... That's why I asked if the tests run the formatter. I think I saw it in there somewhere :smile: They get the correct newline at the end. I also ran this over the Nancy and scriptcs codebase, and it seemed to work nicely.\n", "created_at": "2015-02-13T20:52:10Z", "updated_at": "2015-02-13T20:52:10Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24695747", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695747"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24695747"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695835", "pull_request_review_id": null, "id": 24695835, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 45, "original_position": 45, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "body": "LOL. Good to hear it's not just me that find this thing terrifying :wink:\n", "created_at": "2015-02-13T20:53:30Z", "updated_at": "2015-02-13T20:53:30Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24695835", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695835"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24695835"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695842", "pull_request_review_id": null, "id": 24695842, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return token.WithLeadingTrivia(newTrivia.AddNewLine());\n+        }", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 49, "original_position": 49, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "@khellang correct it will be removed.  But leaving it in this code can give the false impression to the casual reader that the intent is to have all files in end in a newline.  \n\nI know because I fell into this trap with a previous version of the code base ;) \n", "created_at": "2015-02-13T20:53:34Z", "updated_at": "2015-02-13T20:53:34Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24695842", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695842"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24695842"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24695842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24700895", "pull_request_review_id": null, "id": 24700895, "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.HasNewLineAtEndOfFile)]\n+    internal sealed class HasNewLineAtEndOfFileFormattingRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var node = syntaxRoot.DescendantNodes().LastOrDefault();\n+\n+            if (node != null)\n+            {\n+                syntaxRoot = syntaxRoot.ReplaceNode(node, RemoveNewLines(node));\n+            }\n+\n+            var token = syntaxRoot.DescendantTokens().Single(x => x.IsKind(SyntaxKind.EndOfFileToken));\n+\n+            return syntaxRoot.ReplaceToken(token, AdjustNewLines(token));\n+        }\n+\n+        private static SyntaxNode RemoveNewLines(SyntaxNode node)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (node.HasTrailingTrivia)\n+            {\n+                newTrivia = node.GetTrailingTrivia().Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return node.WithTrailingTrivia(newTrivia);\n+        }\n+\n+        private static SyntaxToken AdjustNewLines(SyntaxToken token)\n+        {\n+            var newTrivia = Enumerable.Empty<SyntaxTrivia>();\n+\n+            if (token.HasLeadingTrivia)\n+            {\n+                newTrivia = token.LeadingTrivia.Where(x => !x.IsKind(SyntaxKind.EndOfLineTrivia));\n+            }\n+\n+            return token.WithLeadingTrivia(newTrivia.AddNewLine());\n+        }", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/HasNewLineAtEndOfFileFormattingRule.cs", "position": 49, "original_position": 49, "commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "original_commit_id": "1383c3b04795acdd46a580651f112488dcbf4653", "user": {"login": "khellang", "id": 582487, "avatar_url": "https://avatars0.githubusercontent.com/u/582487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khellang", "html_url": "https://github.com/khellang", "followers_url": "https://api.github.com/users/khellang/followers", "following_url": "https://api.github.com/users/khellang/following{/other_user}", "gists_url": "https://api.github.com/users/khellang/gists{/gist_id}", "starred_url": "https://api.github.com/users/khellang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khellang/subscriptions", "organizations_url": "https://api.github.com/users/khellang/orgs", "repos_url": "https://api.github.com/users/khellang/repos", "events_url": "https://api.github.com/users/khellang/events{/privacy}", "received_events_url": "https://api.github.com/users/khellang/received_events", "type": "User", "site_admin": false}, "body": "_Isn't_ the intent that we want all files to end in a newline? Is there something I've misunderstood? And if it's removed, how come it's present in all flies of a sln after running it through the CodeFormatter with this rule enabled?\n", "created_at": "2015-02-13T22:07:00Z", "updated_at": "2015-02-13T22:08:55Z", "html_url": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24700895", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/61", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24700895"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/61#discussion_r24700895"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/61"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24700895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24759489", "pull_request_review_id": null, "id": 24759489, "diff_hunk": "@@ -0,0 +1,26 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.AttributeNoParenthesesRule)]\n+    internal sealed class AttributeNoParenthesesRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var attributes = syntaxRoot.DescendantNodes()\n+                                       .OfType<AttributeSyntax>()\n+                                       .Where(a => a.ArgumentList != null &&\n+                                                   a.ArgumentList.Arguments.Count == 0 &&\n+                                                   (!a.ArgumentList.OpenParenToken.IsMissing || !a.ArgumentList.CloseParenToken.IsMissing));\n+\n+            return syntaxRoot.ReplaceNodes(attributes, (a, n) => a.WithArgumentList(null));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/AttributeNoParenthesesRule.cs", "position": 23, "original_position": 23, "commit_id": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "original_commit_id": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Consider the following case:\n\n``` csharp\n[Fact(/* Comment */)]\n```\n\nThis code would strip away that comment.  Was that an intentional decision?  \n\nIn general I don't think we should be removing comments in a code formatter.  However I just can't see how such a comment would add value to the system so in this narrow case it seems okay.  \n", "created_at": "2015-02-16T16:09:09Z", "updated_at": "2015-02-16T16:09:09Z", "html_url": "https://github.com/dotnet/codeformatter/pull/64#discussion_r24759489", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24759489"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/64#discussion_r24759489"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/64"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24759489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24759923", "pull_request_review_id": null, "id": 24759923, "diff_hunk": "@@ -0,0 +1,26 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.AttributeNoParenthesesRule)]\n+    internal sealed class AttributeNoParenthesesRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var attributes = syntaxRoot.DescendantNodes()\n+                                       .OfType<AttributeSyntax>()\n+                                       .Where(a => a.ArgumentList != null &&\n+                                                   a.ArgumentList.Arguments.Count == 0 &&\n+                                                   (!a.ArgumentList.OpenParenToken.IsMissing || !a.ArgumentList.CloseParenToken.IsMissing));\n+\n+            return syntaxRoot.ReplaceNodes(attributes, (a, n) => a.WithArgumentList(null));", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/AttributeNoParenthesesRule.cs", "position": 23, "original_position": 23, "commit_id": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "original_commit_id": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Also I would use \n\n```\na.WithArgumentList(SyntaxFactory.ArgumentList())\n```\n\nI couldn't find any reference as to whether or not that property guaranteed non-nullness but it seems to for well formed code. \n", "created_at": "2015-02-16T16:16:53Z", "updated_at": "2015-02-16T16:16:53Z", "html_url": "https://github.com/dotnet/codeformatter/pull/64#discussion_r24759923", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24759923"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/64#discussion_r24759923"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/64"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24759923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24760858", "pull_request_review_id": null, "id": 24760858, "diff_hunk": "@@ -0,0 +1,84 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.AttributeSeparateListsRule)]\n+    internal sealed class AttributeSeparateListsRule : ISyntaxFormattingRule", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/AttributeSeparateListsRule.cs", "position": 15, "original_position": 15, "commit_id": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "original_commit_id": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Can you add a description of what this rule is trying to accomplish\n", "created_at": "2015-02-16T16:31:23Z", "updated_at": "2015-02-16T16:31:23Z", "html_url": "https://github.com/dotnet/codeformatter/pull/64#discussion_r24760858", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24760858"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/64#discussion_r24760858"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/64"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24760858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24761586", "pull_request_review_id": null, "id": 24761586, "diff_hunk": "@@ -0,0 +1,84 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    [SyntaxRuleOrder(SyntaxRuleOrder.AttributeSeparateListsRule)]\n+    internal sealed class AttributeSeparateListsRule : ISyntaxFormattingRule\n+    {\n+        public SyntaxNode Process(SyntaxNode syntaxRoot)\n+        {\n+            var rewriter = new AttributeListRewriter();\n+            return rewriter.Visit(syntaxRoot);\n+        }\n+\n+        private sealed class AttributeListRewriter : CSharpSyntaxRewriter\n+        {\n+            public override SyntaxNode VisitParameter(ParameterSyntax node)\n+            {\n+                // We don't want to flatten the attribute lists for parameters. Those are\n+                // usually short, such as [In, Out] and collapsing them can actually\n+                // improve readability.\n+                return node;\n+            }\n+\n+            public override SyntaxList<TNode> VisitList<TNode>(SyntaxList<TNode> list)\n+            {\n+                list = base.VisitList(list);\n+\n+                if (typeof (TNode) != typeof (AttributeListSyntax))\n+                    return list;\n+\n+                var attributeLists = (SyntaxList<AttributeListSyntax>) (object) list;\n+                return (SyntaxList<TNode>) (object) VisitAttributeLists(attributeLists);\n+            }\n+\n+            private static SyntaxList<AttributeListSyntax> VisitAttributeLists(SyntaxList<AttributeListSyntax> attributeLists)\n+            {\n+                var result = new List<AttributeListSyntax>();\n+\n+                foreach (var attributeList in attributeLists)\n+                {\n+                    var firstIndex = result.Count;\n+\n+                    for (var i = 0; i < attributeList.Attributes.Count; i++)\n+                    {\n+                        var attribute = attributeList.Attributes[i];\n+                        var separatorTrivia = i < attributeList.Attributes.Count - 1\n+                                                ? attributeList.Attributes.GetSeparator(i).GetAllTrivia()\n+                                                : Enumerable.Empty<SyntaxTrivia>();\n+\n+                        var attributeWithoutTrivia = attribute.WithoutLeadingTrivia().WithoutTrailingTrivia();\n+                        var singletonList = SyntaxFactory.AttributeList(attributeList.Target, SyntaxFactory.SeparatedList(new[] { attributeWithoutTrivia }))\n+                                                         .WithLeadingTrivia(attribute.GetLeadingTrivia())\n+                                                         .WithTrailingTrivia(attribute.GetTrailingTrivia().Concat(separatorTrivia));\n+                        result.Add(singletonList);\n+                    }\n+\n+                    var lastIndex = result.Count - 1;\n+\n+                    var leadingTrivia = attributeList.GetLeadingTrivia()\n+                                            .Concat(attributeList.OpenBracketToken.TrailingTrivia)\n+                                            .Concat(result[firstIndex].GetLeadingTrivia());\n+\n+                    var trailingTrivia = result[lastIndex].GetTrailingTrivia()\n+                                            .Concat(attributeList.CloseBracketToken.LeadingTrivia)\n+                                            .Concat(attributeList.GetTrailingTrivia());\n+\n+                    result[firstIndex] = result[firstIndex].WithLeadingTrivia(leadingTrivia);\n+                    result[lastIndex] = result[lastIndex].WithTrailingTrivia(trailingTrivia);", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/AttributeSeparateListsRule.cs", "position": 77, "original_position": 77, "commit_id": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "original_commit_id": "0b0ca8a9be3d2ec0e84df29217f09fccb87bfa09", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "I've been staring at this for ~5 minutes now thinking about the trivia implications.  Consider the following:\n\n``` csharp\n[Attr1,\n    Attr2]\n```\n\nI'm fairly certain this code would end up retaining the extra new line and spacing with the above logic.  \n\nI'm struggling to think of a better approach though.  I considered recommending that you strip everything but comments and structured trivia and add that back in but that has some pathological cases to consider.  \n\nTrivia isn't trivial :( \n", "created_at": "2015-02-16T16:42:06Z", "updated_at": "2015-02-16T16:42:06Z", "html_url": "https://github.com/dotnet/codeformatter/pull/64#discussion_r24761586", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/64", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24761586"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/64#discussion_r24761586"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/64"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/24761586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25627808", "pull_request_review_id": null, "id": 25627808, "diff_hunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n+  <PropertyGroup>\n+    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\n+    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\n+\t  <OutDir Condition=\"'$(OutDir)' == ''\">$(MsBuildThisFileDirectory)bin\\</OutDir>", "path": "build.props", "position": null, "original_position": 7, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Can be shifted left\n", "created_at": "2015-03-02T19:13:47Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25627808", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25627808"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25627808"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25627808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25627986", "pull_request_review_id": null, "id": 25627986, "diff_hunk": "@@ -1,35 +1,17 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <Project ToolsVersion=\"12.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n+  <Import Project=\"$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.props))\\build.props\" />", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": null, "original_position": 4, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Is there a reason to not simplify this to:\n\n``` xml\n<Import Project=\"..\\build.props />\n```\n", "created_at": "2015-03-02T19:15:27Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25627986", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25627986"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25627986"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25627986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628036", "pull_request_review_id": null, "id": 25628036, "diff_hunk": "@@ -1,35 +1,17 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <Project ToolsVersion=\"12.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n+  <Import Project=\"$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.props))\\build.props\" />\n   <PropertyGroup>\n-    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\n-    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\n     <ProjectGuid>{B0E1A988-F762-459D-AD0D-56A3CF4FFF3F}</ProjectGuid>\n     <OutputType>Exe</OutputType>\n     <AppDesignerFolder>Properties</AppDesignerFolder>\n     <RootNamespace>CodeFormatter</RootNamespace>\n     <AssemblyName>CodeFormatter</AssemblyName>\n-    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>\n-    <FileAlignment>512</FileAlignment>\n   </PropertyGroup>\n+  <!-- Default configurations to help VS understand -->\n   <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": null, "original_position": 17, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Nit: could simplify to a one liner `<PropertyGroup ... />`\n", "created_at": "2015-03-02T19:15:53Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25628036", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628036"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25628036"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628369", "pull_request_review_id": null, "id": 25628369, "diff_hunk": "@@ -0,0 +1,290 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.DotNet.DeadRegionAnalysis;\n+\n+namespace DeadRegions\n+{\n+    internal class DeadRegions\n+    {\n+        private static readonly char[] s_symbolSeparatorChars = new[] { ';', ',' };\n+\n+        private static OptionParser s_options = new OptionParser();\n+        private static AnalysisEngine s_engine;\n+\n+        private static IList<string> s_filePaths;\n+        private static List<string> s_ignoredSymbols = new List<string>();\n+        private static List<string> s_definedSymbols = new List<string>();\n+        private static List<string> s_disabledSymbols = new List<string>();\n+        private static List<IEnumerable<string>> s_symbolConfigurations = new List<IEnumerable<string>>();\n+        private static Tristate s_undefinedSymbolValue = Tristate.Varying;\n+\n+        private static bool s_printDisabled;", "path": "src/DeadRegions/Program.cs", "position": null, "original_position": 28, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Mutable statics ...  why not put all of this global state into a Options / State type and pass it to the appropriate code paths?  \n", "created_at": "2015-03-02T19:19:14Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25628369", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628369"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25628369"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628833", "pull_request_review_id": null, "id": 25628833, "diff_hunk": "@@ -0,0 +1,115 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Xunit;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis.Tests\n+{\n+    public class PreprocessorExpressionEvaluatorTests\n+    {\n+        [Fact]\n+        public void TrueLiteral()\n+        {\n+            Verify(\"true\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void FalseLiteral()\n+        {\n+            Verify(\"false\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalAnd()\n+        {\n+            Verify(\"true && true\", Tristate.True);\n+            Verify(\"true && false\", Tristate.False);\n+            Verify(\"true && varying\", Tristate.Varying);\n+            Verify(\"false && false\", Tristate.False);\n+            Verify(\"false && varying\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalOr()\n+        {\n+            Verify(\"true || true\", Tristate.True);\n+            Verify(\"true || false\", Tristate.True);\n+            Verify(\"true || varying\", Tristate.True);\n+            Verify(\"false || false\", Tristate.False);\n+            Verify(\"false || varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void LogicalNot()\n+        {\n+            Verify(\"!true\", Tristate.False);\n+            Verify(\"!false\", Tristate.True);\n+            Verify(\"!varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void ParentheicalExpressions()\n+        {\n+            Verify(\"!(true && (false || true))\", Tristate.False);\n+            Verify(\"(!((true)))\", Tristate.False);\n+            Verify(\"(!(!true))\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void InvalidExpressions()\n+        {\n+            VerifyInvalid(\"false + true\");\n+            VerifyInvalid(\"&varying\");\n+            VerifyInvalid(\"1\");\n+        }\n+\n+        [Fact]\n+        public void OverrideLiteralExpressions()\n+        {\n+            var evaluator = new PreprocessorExpressionEvaluator(\n+                new Dictionary<string, Tristate>()\n+                {\n+                    { \"true\", Tristate.False },\n+                    { \"false\", Tristate.True }\n+                },\n+                Tristate.Varying);\n+\n+            Assert.Equal(Tristate.False, EvaluateExpression(\"true\", evaluator));\n+            Assert.Equal(Tristate.True, EvaluateExpression(\"false\", evaluator));\n+        }\n+\n+        private static readonly CSharpParseOptions s_expressionParseOptions = new CSharpParseOptions(\n+            documentationMode: DocumentationMode.None,\n+            kind: SourceCodeKind.Interactive);\n+\n+        private static readonly PreprocessorExpressionEvaluator s_evaluator = new PreprocessorExpressionEvaluator(", "path": "src/Microsoft.DotNet.DeadRegionAnalysis.Tests/PreprocessorExpressionEvaluatorTests.cs", "position": 88, "original_position": 88, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Why static here?  This is a mutable type from what I can tell.  I would make it instance state.  Making it static means we have to proactively disable xUnit features like running in parallel. \n", "created_at": "2015-03-02T19:24:11Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25628833", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628833"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25628833"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628957", "pull_request_review_id": null, "id": 25628957, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 38, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Why not make using `await` here instead? \n", "created_at": "2015-03-02T19:25:30Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25628957", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628957"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25628957"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25628957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629062", "pull_request_review_id": null, "id": 25629062, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 58, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Using an explicit encoding here will break files with a non-UTF8 encoding.  We should just load with encoding detection enabled. \n", "created_at": "2015-03-02T19:26:31Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25629062", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629062"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25629062"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629147", "pull_request_review_id": null, "id": 25629147, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));\n+                    }\n+\n+                    Documents = solution.Projects.Single().Documents;\n+                }\n+\n+                _symbolConfigurations = CalculateSymbolConfigurations(\n+                    alwaysDisabledSymbols,\n+                    alwaysDefinedSymbols,\n+                    alwaysIgnoredSymbols,\n+                    symbolConfigurations);\n+\n+                _undefinedSymbolValue = undefinedSymbolValue;\n+            }\n+\n+            internal CompositePreprocessorExpressionEvaluator GetPreprocessorExpressionEvaluator()\n+            {\n+                var evaluators = _symbolConfigurations.Select(config => new PreprocessorExpressionEvaluator(config, _undefinedSymbolValue));\n+                return new CompositePreprocessorExpressionEvaluator(evaluators);\n+            }\n+\n+            internal PreprocessorSymbolTracker GetPreprocessorSymbolTracker()\n+            {\n+                var specifiedSymbols = new HashSet<string>();", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 81, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Nit: I would specify `StringComparer.Oridinal` just to be explicit here. \n", "created_at": "2015-03-02T19:27:21Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25629147", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629147"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25629147"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629214", "pull_request_review_id": null, "id": 25629214, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 24, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Enumerable suggests the values can change.  If they can't we should use `ImmutableArray<Document>` instead. \n", "created_at": "2015-03-02T19:28:01Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25629214", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629214"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25629214"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25629214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634497", "pull_request_review_id": null, "id": 25634497, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));\n+                    }\n+\n+                    Documents = solution.Projects.Single().Documents;\n+                }\n+\n+                _symbolConfigurations = CalculateSymbolConfigurations(\n+                    alwaysDisabledSymbols,\n+                    alwaysDefinedSymbols,\n+                    alwaysIgnoredSymbols,\n+                    symbolConfigurations);\n+\n+                _undefinedSymbolValue = undefinedSymbolValue;\n+            }\n+\n+            internal CompositePreprocessorExpressionEvaluator GetPreprocessorExpressionEvaluator()\n+            {\n+                var evaluators = _symbolConfigurations.Select(config => new PreprocessorExpressionEvaluator(config, _undefinedSymbolValue));\n+                return new CompositePreprocessorExpressionEvaluator(evaluators);\n+            }\n+\n+            internal PreprocessorSymbolTracker GetPreprocessorSymbolTracker()\n+            {\n+                var specifiedSymbols = new HashSet<string>();\n+\n+                foreach (var config in _symbolConfigurations)\n+                {\n+                    foreach (string symbol in config.Keys)\n+                    {\n+                        specifiedSymbols.Add(symbol);\n+                    }\n+                }\n+\n+                return new PreprocessorSymbolTracker(specifiedSymbols);\n+            }\n+\n+            private static IEnumerable<Document> GetSharedDocuments(IEnumerable<Project> projects)\n+            {\n+                var it = projects.GetEnumerator();", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 96, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Need to put this in a using block since `IEnumerator<T>` is disposable. \n", "created_at": "2015-03-02T20:22:18Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25634497", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634497"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25634497"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634571", "pull_request_review_id": null, "id": 25634571, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));\n+                    }\n+\n+                    Documents = solution.Projects.Single().Documents;\n+                }\n+\n+                _symbolConfigurations = CalculateSymbolConfigurations(\n+                    alwaysDisabledSymbols,\n+                    alwaysDefinedSymbols,\n+                    alwaysIgnoredSymbols,\n+                    symbolConfigurations);\n+\n+                _undefinedSymbolValue = undefinedSymbolValue;\n+            }\n+\n+            internal CompositePreprocessorExpressionEvaluator GetPreprocessorExpressionEvaluator()\n+            {\n+                var evaluators = _symbolConfigurations.Select(config => new PreprocessorExpressionEvaluator(config, _undefinedSymbolValue));\n+                return new CompositePreprocessorExpressionEvaluator(evaluators);\n+            }\n+\n+            internal PreprocessorSymbolTracker GetPreprocessorSymbolTracker()\n+            {\n+                var specifiedSymbols = new HashSet<string>();\n+\n+                foreach (var config in _symbolConfigurations)\n+                {\n+                    foreach (string symbol in config.Keys)\n+                    {\n+                        specifiedSymbols.Add(symbol);\n+                    }\n+                }\n+\n+                return new PreprocessorSymbolTracker(specifiedSymbols);\n+            }\n+\n+            private static IEnumerable<Document> GetSharedDocuments(IEnumerable<Project> projects)\n+            {\n+                var it = projects.GetEnumerator();\n+                if (!it.MoveNext())\n+                {\n+                    return Enumerable.Empty<Document>();\n+                }\n+\n+                var filePaths = it.Current.Documents.Select(d => d.FilePath);\n+\n+                while (it.MoveNext())\n+                {\n+                    filePaths = filePaths.Intersect(\n+                        it.Current.Documents.Select(d => d.FilePath),\n+                        StringComparer.InvariantCultureIgnoreCase);", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 108, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "File Path comparison should be `OrdinalIgnoreCase` \n", "created_at": "2015-03-02T20:22:58Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25634571", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634571"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25634571"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634821", "pull_request_review_id": null, "id": 25634821, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));\n+                    }\n+\n+                    Documents = solution.Projects.Single().Documents;\n+                }\n+\n+                _symbolConfigurations = CalculateSymbolConfigurations(\n+                    alwaysDisabledSymbols,\n+                    alwaysDefinedSymbols,\n+                    alwaysIgnoredSymbols,\n+                    symbolConfigurations);\n+\n+                _undefinedSymbolValue = undefinedSymbolValue;\n+            }\n+\n+            internal CompositePreprocessorExpressionEvaluator GetPreprocessorExpressionEvaluator()\n+            {\n+                var evaluators = _symbolConfigurations.Select(config => new PreprocessorExpressionEvaluator(config, _undefinedSymbolValue));\n+                return new CompositePreprocessorExpressionEvaluator(evaluators);\n+            }\n+\n+            internal PreprocessorSymbolTracker GetPreprocessorSymbolTracker()\n+            {\n+                var specifiedSymbols = new HashSet<string>();\n+\n+                foreach (var config in _symbolConfigurations)\n+                {\n+                    foreach (string symbol in config.Keys)\n+                    {\n+                        specifiedSymbols.Add(symbol);\n+                    }\n+                }\n+\n+                return new PreprocessorSymbolTracker(specifiedSymbols);\n+            }\n+\n+            private static IEnumerable<Document> GetSharedDocuments(IEnumerable<Project> projects)\n+            {\n+                var it = projects.GetEnumerator();\n+                if (!it.MoveNext())\n+                {\n+                    return Enumerable.Empty<Document>();\n+                }\n+\n+                var filePaths = it.Current.Documents.Select(d => d.FilePath);\n+\n+                while (it.MoveNext())\n+                {\n+                    filePaths = filePaths.Intersect(\n+                        it.Current.Documents.Select(d => d.FilePath),\n+                        StringComparer.InvariantCultureIgnoreCase);\n+                }\n+\n+                var filePathSet = new HashSet<string>(filePaths);", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 111, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Need to pass `StringComparer.OrdinalIgnoreCase` here as well.\n", "created_at": "2015-03-02T20:25:33Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25634821", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634821"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25634821"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25634821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635282", "pull_request_review_id": null, "id": 25635282, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));\n+                    }\n+\n+                    Documents = solution.Projects.Single().Documents;\n+                }\n+\n+                _symbolConfigurations = CalculateSymbolConfigurations(\n+                    alwaysDisabledSymbols,\n+                    alwaysDefinedSymbols,\n+                    alwaysIgnoredSymbols,\n+                    symbolConfigurations);\n+\n+                _undefinedSymbolValue = undefinedSymbolValue;\n+            }\n+\n+            internal CompositePreprocessorExpressionEvaluator GetPreprocessorExpressionEvaluator()\n+            {\n+                var evaluators = _symbolConfigurations.Select(config => new PreprocessorExpressionEvaluator(config, _undefinedSymbolValue));\n+                return new CompositePreprocessorExpressionEvaluator(evaluators);\n+            }\n+\n+            internal PreprocessorSymbolTracker GetPreprocessorSymbolTracker()\n+            {\n+                var specifiedSymbols = new HashSet<string>();\n+\n+                foreach (var config in _symbolConfigurations)\n+                {\n+                    foreach (string symbol in config.Keys)\n+                    {\n+                        specifiedSymbols.Add(symbol);\n+                    }\n+                }\n+\n+                return new PreprocessorSymbolTracker(specifiedSymbols);\n+            }\n+\n+            private static IEnumerable<Document> GetSharedDocuments(IEnumerable<Project> projects)", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 94, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "I think the logic of this method could be simplified to:\n\n``` csharp\nusing (var it = projects.GetEnumerator())\n{\n    if (!it.MoveNext())\n    {\n        return Enumerable.Empty<Document>()\n    }\n\n    var first = it.Current;\n    var filePaths = new HashSet<string>(StringComparer.OrdinalIgnoreCase);\n    while (it.MoveNext())\n    {\n        foreach (var doc in it.Documents)\n        {\n            filePaths.Add(doc.FilePath);\n        }\n    }\n\n    return first.Documents.Where(d => filePaths.Contains(d.FilePath));\n}\n```\n\nThis would avoid all of the internal allocations in `Intersect` \n", "created_at": "2015-03-02T20:30:28Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25635282", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635282"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25635282"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635494", "pull_request_review_id": null, "id": 25635494, "diff_hunk": "@@ -0,0 +1,196 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public async Task<Document> RemoveUnnecessaryRegions(DocumentConditionalRegionInfo info, CancellationToken cancellationToken = default(CancellationToken))\n+        {\n+            if (info == null)\n+            {\n+                throw new ArgumentNullException(\"info\");\n+            }\n+\n+            var changes = CalculateTextChanges(info.Chains);\n+            if (changes == null || changes.Count == 0)\n+            {\n+                return info.Document;\n+            }\n+\n+            var newText = await info.Document.GetTextAsync(cancellationToken);\n+\n+            try\n+            {\n+                newText = newText.WithChanges(changes);\n+            }\n+            catch (Exception)\n+            {\n+                var changesString = new StringBuilder();\n+                var syntaxTree = info.Document.GetSyntaxTreeAsync(cancellationToken).Result;\n+\n+                foreach (var change in changes)\n+                {\n+                    var lineSpan = Location.Create(syntaxTree, change.Span).GetLineSpan();\n+                    changesString.AppendFormat(\"({0}-{1}): {2}\", lineSpan.StartLinePosition.Line, lineSpan.EndLinePosition.Line, newText.GetSubText(change.Span).ToString());\n+                }\n+\n+                Console.WriteLine(string.Format(\"Failed to remove regions from document '{0}':{1}{2}\", info.Document.FilePath, Environment.NewLine, changesString.ToString()));", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.RegionRemoval.cs", "position": null, "original_position": 50, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "If this is meant to be re-hostable we should avoid the console here and instead abstract it out to an interface. \n", "created_at": "2015-03-02T20:32:54Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25635494", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635494"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25635494"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635677", "pull_request_review_id": null, "id": 25635677, "diff_hunk": "@@ -0,0 +1,196 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public async Task<Document> RemoveUnnecessaryRegions(DocumentConditionalRegionInfo info, CancellationToken cancellationToken = default(CancellationToken))\n+        {\n+            if (info == null)\n+            {\n+                throw new ArgumentNullException(\"info\");\n+            }\n+\n+            var changes = CalculateTextChanges(info.Chains);\n+            if (changes == null || changes.Count == 0)\n+            {\n+                return info.Document;\n+            }\n+\n+            var newText = await info.Document.GetTextAsync(cancellationToken);\n+\n+            try\n+            {\n+                newText = newText.WithChanges(changes);\n+            }\n+            catch (Exception)\n+            {\n+                var changesString = new StringBuilder();\n+                var syntaxTree = info.Document.GetSyntaxTreeAsync(cancellationToken).Result;\n+\n+                foreach (var change in changes)\n+                {\n+                    var lineSpan = Location.Create(syntaxTree, change.Span).GetLineSpan();\n+                    changesString.AppendFormat(\"({0}-{1}): {2}\", lineSpan.StartLinePosition.Line, lineSpan.EndLinePosition.Line, newText.GetSubText(change.Span).ToString());\n+                }\n+\n+                Console.WriteLine(string.Format(\"Failed to remove regions from document '{0}':{1}{2}\", info.Document.FilePath, Environment.NewLine, changesString.ToString()));\n+                return info.Document;\n+            }\n+\n+            return info.Document.WithText(newText);\n+        }\n+\n+        private static List<TextChange> CalculateTextChanges(List<ConditionalRegionChain> chains)\n+        {\n+            var changes = new List<TextChange>();\n+\n+            foreach (var chain in chains)\n+            {\n+                CalculateTextChanges(chain, changes);\n+            }\n+\n+            changes.Sort(CompareTextChanges);\n+            return MergeOverlappingRegions(changes);\n+        }\n+\n+        public static void CalculateTextChanges(ConditionalRegionChain chain, List<TextChange> changes)\n+        {\n+            bool removeEndif = true;\n+\n+            for (int i = 0; i < chain.Regions.Count; i++)\n+            {\n+                var region = chain.Regions[i];\n+                if (region.State != Tristate.Varying)\n+                {\n+                    var startDirective = region.StartDirective;\n+                    var endDirective = region.EndDirective;\n+                    string endDirectiveReplacementText = string.Empty;\n+\n+                    // Remove the start directive\n+                    changes.Add(new TextChange(new TextSpan(region.SpanStart, region.StartDirective.FullSpan.End - region.SpanStart), string.Empty));", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.RegionRemoval.cs", "position": 85, "original_position": 84, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Why can't we use `region.StartDirective.FullSpan` for `TextSpan`? \n", "created_at": "2015-03-02T20:34:57Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25635677", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635677"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25635677"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635953", "pull_request_review_id": null, "id": 25635953, "diff_hunk": "@@ -0,0 +1,196 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public async Task<Document> RemoveUnnecessaryRegions(DocumentConditionalRegionInfo info, CancellationToken cancellationToken = default(CancellationToken))\n+        {\n+            if (info == null)\n+            {\n+                throw new ArgumentNullException(\"info\");\n+            }\n+\n+            var changes = CalculateTextChanges(info.Chains);\n+            if (changes == null || changes.Count == 0)\n+            {\n+                return info.Document;\n+            }\n+\n+            var newText = await info.Document.GetTextAsync(cancellationToken);\n+\n+            try\n+            {\n+                newText = newText.WithChanges(changes);\n+            }\n+            catch (Exception)\n+            {\n+                var changesString = new StringBuilder();\n+                var syntaxTree = info.Document.GetSyntaxTreeAsync(cancellationToken).Result;\n+\n+                foreach (var change in changes)\n+                {\n+                    var lineSpan = Location.Create(syntaxTree, change.Span).GetLineSpan();\n+                    changesString.AppendFormat(\"({0}-{1}): {2}\", lineSpan.StartLinePosition.Line, lineSpan.EndLinePosition.Line, newText.GetSubText(change.Span).ToString());\n+                }\n+\n+                Console.WriteLine(string.Format(\"Failed to remove regions from document '{0}':{1}{2}\", info.Document.FilePath, Environment.NewLine, changesString.ToString()));\n+                return info.Document;\n+            }\n+\n+            return info.Document.WithText(newText);\n+        }\n+\n+        private static List<TextChange> CalculateTextChanges(List<ConditionalRegionChain> chains)\n+        {\n+            var changes = new List<TextChange>();\n+\n+            foreach (var chain in chains)\n+            {\n+                CalculateTextChanges(chain, changes);\n+            }\n+\n+            changes.Sort(CompareTextChanges);\n+            return MergeOverlappingRegions(changes);\n+        }\n+\n+        public static void CalculateTextChanges(ConditionalRegionChain chain, List<TextChange> changes)\n+        {\n+            bool removeEndif = true;\n+\n+            for (int i = 0; i < chain.Regions.Count; i++)\n+            {\n+                var region = chain.Regions[i];\n+                if (region.State != Tristate.Varying)\n+                {\n+                    var startDirective = region.StartDirective;\n+                    var endDirective = region.EndDirective;\n+                    string endDirectiveReplacementText = string.Empty;\n+\n+                    // Remove the start directive\n+                    changes.Add(new TextChange(new TextSpan(region.SpanStart, region.StartDirective.FullSpan.End - region.SpanStart), string.Empty));\n+\n+                    if (region.State == Tristate.False)\n+                    {\n+                        // Remove the contents of the region\n+                        changes.Add(new TextChange(new TextSpan(region.StartDirective.FullSpan.End, region.EndDirective.FullSpan.Start - region.StartDirective.FullSpan.End), string.Empty));\n+\n+                        // Grow the chain until we hit a region that is not always disabled\n+                        for (int j = i + 1; j < chain.Regions.Count; j++)\n+                        {\n+                            var nextRegion = chain.Regions[j];\n+                            if (nextRegion.State == Tristate.False)\n+                            {\n+                                endDirective = nextRegion.EndDirective;\n+                                region = nextRegion;\n+                                i = j;\n+\n+                                // Remove the start directive and the contents of the region\n+                                changes.Add(new TextChange(new TextSpan(region.SpanStart, region.StartDirective.FullSpan.End - region.SpanStart), string.Empty));\n+                                changes.Add(new TextChange(new TextSpan(region.StartDirective.FullSpan.End, region.EndDirective.FullSpan.Start - region.StartDirective.FullSpan.End), string.Empty));\n+                            }\n+                            else\n+                            {\n+                                // If the next region is varying, then the end directive needs replacement\n+                                if (nextRegion.State == Tristate.Varying)\n+                                {\n+                                    endDirectiveReplacementText = GetReplacementText(startDirective, endDirective);\n+                                    changes.Add(new TextChange(new TextSpan(region.EndDirective.FullSpan.Start, region.SpanEnd - region.EndDirective.FullSpan.Start), endDirectiveReplacementText));\n+                                }\n+                                break;\n+                            }\n+                        }\n+                    }\n+                }\n+                else\n+                {\n+                    removeEndif = false;\n+                }\n+            }\n+\n+            // Remove the final #endif all the other regions have been removed\n+            if (removeEndif)\n+            {\n+                var region = chain.Regions[chain.Regions.Count - 1];\n+                changes.Add(new TextChange(new TextSpan(region.EndDirective.FullSpan.Start, region.SpanEnd - region.EndDirective.FullSpan.Start), string.Empty));\n+            }\n+        }\n+\n+        private static string GetReplacementText(DirectiveTriviaSyntax startDirective, DirectiveTriviaSyntax endDirective)\n+        {\n+            if (startDirective.Kind() == SyntaxKind.IfDirectiveTrivia && endDirective.Kind() == SyntaxKind.ElifDirectiveTrivia)\n+            {\n+                var elifDirective = (ElifDirectiveTriviaSyntax)endDirective;\n+                var elifKeyword = elifDirective.ElifKeyword;\n+                var newIfDirective = SyntaxFactory.IfDirectiveTrivia(\n+                    elifDirective.HashToken,\n+                    SyntaxFactory.Token(elifKeyword.LeadingTrivia, SyntaxKind.IfKeyword, \"if\", \"if\", elifKeyword.TrailingTrivia),\n+                    elifDirective.Condition,\n+                    elifDirective.EndOfDirectiveToken,\n+                    elifDirective.IsActive,\n+                    elifDirective.BranchTaken,\n+                    elifDirective.ConditionValue);\n+\n+                return newIfDirective.ToFullString();\n+            }\n+            else\n+            {\n+                return endDirective.ToFullString();\n+            }\n+        }\n+\n+        private static int CompareTextChanges(TextChange x, TextChange y)\n+        {\n+            int result = x.Span.End - y.Span.End;", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.RegionRemoval.cs", "position": null, "original_position": 157, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Could simplify to `return x.Span.CompareTo(y.Span)`\n", "created_at": "2015-03-02T20:37:56Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25635953", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635953"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25635953"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25635953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25636216", "pull_request_review_id": null, "id": 25636216, "diff_hunk": "@@ -0,0 +1,125 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public class ConditionalRegion : IComparable<ConditionalRegion>, IEquatable<ConditionalRegion>\n+    {\n+        public DirectiveTriviaSyntax StartDirective { get; private set; }\n+\n+        public DirectiveTriviaSyntax EndDirective { get; private set; }\n+\n+        public int SpanStart { get; private set; }\n+\n+        public int SpanEnd { get; private set; }\n+\n+        public Location Location { get; private set; }\n+\n+        public Tristate State { get; private set; }\n+\n+        public ConditionalRegion(DirectiveTriviaSyntax startDirective, DirectiveTriviaSyntax endDirective, IReadOnlyList<ConditionalRegion> chain, int indexInChain, Tristate state)\n+        {\n+            Debug.Assert(startDirective.SyntaxTree.FilePath == endDirective.SyntaxTree.FilePath);\n+\n+            StartDirective = startDirective;\n+            EndDirective = endDirective;\n+\n+            SpanStart = CalculateSpanStart(startDirective);\n+            SpanEnd = endDirective.FullSpan.End;\n+            Location = Location.Create(startDirective.SyntaxTree, new TextSpan(SpanStart, SpanEnd - SpanStart));\n+            State = state;\n+        }\n+\n+        private static int CalculateSpanStart(DirectiveTriviaSyntax startDirective)\n+        {\n+            int start = startDirective.FullSpan.Start;\n+\n+            // Consume whitespace trivia preceding the start directive\n+            var leadingTrivia = startDirective.ParentTrivia.Token.LeadingTrivia;\n+            var triviaIndex = leadingTrivia.IndexOf(startDirective.ParentTrivia);\n+            if (triviaIndex > 0)\n+            {\n+                var previousTrivia = leadingTrivia[triviaIndex - 1];\n+                if (previousTrivia.Kind() == SyntaxKind.WhitespaceTrivia)\n+                {\n+                    start = previousTrivia.FullSpan.Start;\n+                }\n+            }\n+\n+            return start;\n+        }\n+\n+        public int CompareTo(ConditionalRegion other)\n+        {\n+            if (other == null)\n+            {\n+                return 1;\n+            }\n+\n+            int result = SpanStart - other.SpanStart;\n+            if (result == 0)\n+            {\n+                return SpanEnd - other.SpanEnd;\n+            }\n+\n+            return result;\n+        }\n+\n+        public bool Equals(ConditionalRegion other)\n+        {\n+            return CompareTo(other) == 0;\n+        }\n+\n+        public override bool Equals(object obj)\n+        {\n+            return Equals(obj as ConditionalRegion);\n+        }\n+\n+        public override int GetHashCode()\n+        {\n+            return base.GetHashCode();", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/ConditionalRegion.cs", "position": null, "original_position": 88, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "That can't be used here.  Two values which are `Equals` must also have the same hash code.  The base implementation of `GetHashCode` won't satisfy this requirement given the implementation of `Equals`\n", "created_at": "2015-03-02T20:40:44Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25636216", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25636216"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25636216"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25636216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25636290", "pull_request_review_id": null, "id": 25636290, "diff_hunk": "@@ -0,0 +1,125 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public class ConditionalRegion : IComparable<ConditionalRegion>, IEquatable<ConditionalRegion>\n+    {\n+        public DirectiveTriviaSyntax StartDirective { get; private set; }\n+\n+        public DirectiveTriviaSyntax EndDirective { get; private set; }\n+\n+        public int SpanStart { get; private set; }\n+\n+        public int SpanEnd { get; private set; }\n+\n+        public Location Location { get; private set; }\n+\n+        public Tristate State { get; private set; }\n+\n+        public ConditionalRegion(DirectiveTriviaSyntax startDirective, DirectiveTriviaSyntax endDirective, IReadOnlyList<ConditionalRegion> chain, int indexInChain, Tristate state)\n+        {\n+            Debug.Assert(startDirective.SyntaxTree.FilePath == endDirective.SyntaxTree.FilePath);\n+\n+            StartDirective = startDirective;\n+            EndDirective = endDirective;\n+\n+            SpanStart = CalculateSpanStart(startDirective);\n+            SpanEnd = endDirective.FullSpan.End;\n+            Location = Location.Create(startDirective.SyntaxTree, new TextSpan(SpanStart, SpanEnd - SpanStart));\n+            State = state;\n+        }\n+\n+        private static int CalculateSpanStart(DirectiveTriviaSyntax startDirective)\n+        {\n+            int start = startDirective.FullSpan.Start;\n+\n+            // Consume whitespace trivia preceding the start directive\n+            var leadingTrivia = startDirective.ParentTrivia.Token.LeadingTrivia;\n+            var triviaIndex = leadingTrivia.IndexOf(startDirective.ParentTrivia);\n+            if (triviaIndex > 0)\n+            {\n+                var previousTrivia = leadingTrivia[triviaIndex - 1];\n+                if (previousTrivia.Kind() == SyntaxKind.WhitespaceTrivia)\n+                {\n+                    start = previousTrivia.FullSpan.Start;\n+                }\n+            }\n+\n+            return start;\n+        }\n+\n+        public int CompareTo(ConditionalRegion other)\n+        {\n+            if (other == null)\n+            {\n+                return 1;", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/ConditionalRegion.cs", "position": null, "original_position": 64, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "This is saying that if a collection of `ConditionalRegion` is sorted the `null` should come first.  Generally they are placed last.  \n", "created_at": "2015-03-02T20:41:41Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25636290", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25636290"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25636290"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25636290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25639116", "pull_request_review_id": null, "id": 25639116, "diff_hunk": "@@ -0,0 +1,196 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public async Task<Document> RemoveUnnecessaryRegions(DocumentConditionalRegionInfo info, CancellationToken cancellationToken = default(CancellationToken))\n+        {\n+            if (info == null)\n+            {\n+                throw new ArgumentNullException(\"info\");\n+            }\n+\n+            var changes = CalculateTextChanges(info.Chains);\n+            if (changes == null || changes.Count == 0)\n+            {\n+                return info.Document;\n+            }\n+\n+            var newText = await info.Document.GetTextAsync(cancellationToken);\n+\n+            try\n+            {\n+                newText = newText.WithChanges(changes);\n+            }\n+            catch (Exception)\n+            {\n+                var changesString = new StringBuilder();\n+                var syntaxTree = info.Document.GetSyntaxTreeAsync(cancellationToken).Result;\n+\n+                foreach (var change in changes)\n+                {\n+                    var lineSpan = Location.Create(syntaxTree, change.Span).GetLineSpan();\n+                    changesString.AppendFormat(\"({0}-{1}): {2}\", lineSpan.StartLinePosition.Line, lineSpan.EndLinePosition.Line, newText.GetSubText(change.Span).ToString());\n+                }\n+\n+                Console.WriteLine(string.Format(\"Failed to remove regions from document '{0}':{1}{2}\", info.Document.FilePath, Environment.NewLine, changesString.ToString()));\n+                return info.Document;\n+            }\n+\n+            return info.Document.WithText(newText);\n+        }\n+\n+        private static List<TextChange> CalculateTextChanges(List<ConditionalRegionChain> chains)\n+        {\n+            var changes = new List<TextChange>();\n+\n+            foreach (var chain in chains)\n+            {\n+                CalculateTextChanges(chain, changes);\n+            }\n+\n+            changes.Sort(CompareTextChanges);\n+            return MergeOverlappingRegions(changes);\n+        }\n+\n+        public static void CalculateTextChanges(ConditionalRegionChain chain, List<TextChange> changes)\n+        {\n+            bool removeEndif = true;\n+\n+            for (int i = 0; i < chain.Regions.Count; i++)\n+            {\n+                var region = chain.Regions[i];\n+                if (region.State != Tristate.Varying)\n+                {\n+                    var startDirective = region.StartDirective;\n+                    var endDirective = region.EndDirective;\n+                    string endDirectiveReplacementText = string.Empty;\n+\n+                    // Remove the start directive\n+                    changes.Add(new TextChange(new TextSpan(region.SpanStart, region.StartDirective.FullSpan.End - region.SpanStart), string.Empty));", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.RegionRemoval.cs", "position": 85, "original_position": 84, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "region.StartDirective.FullSpan does not include any whitespace trivia preceding the DirectiveTriviaSyntax.  That's the reason for the region.SpanStart property.\n", "created_at": "2015-03-02T21:15:43Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25639116", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25639116"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25639116"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25639116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25640380", "pull_request_review_id": null, "id": 25640380, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));\n+                    }\n+\n+                    Documents = solution.Projects.Single().Documents;\n+                }\n+\n+                _symbolConfigurations = CalculateSymbolConfigurations(\n+                    alwaysDisabledSymbols,\n+                    alwaysDefinedSymbols,\n+                    alwaysIgnoredSymbols,\n+                    symbolConfigurations);\n+\n+                _undefinedSymbolValue = undefinedSymbolValue;\n+            }\n+\n+            internal CompositePreprocessorExpressionEvaluator GetPreprocessorExpressionEvaluator()\n+            {\n+                var evaluators = _symbolConfigurations.Select(config => new PreprocessorExpressionEvaluator(config, _undefinedSymbolValue));\n+                return new CompositePreprocessorExpressionEvaluator(evaluators);\n+            }\n+\n+            internal PreprocessorSymbolTracker GetPreprocessorSymbolTracker()\n+            {\n+                var specifiedSymbols = new HashSet<string>();\n+\n+                foreach (var config in _symbolConfigurations)\n+                {\n+                    foreach (string symbol in config.Keys)\n+                    {\n+                        specifiedSymbols.Add(symbol);\n+                    }\n+                }\n+\n+                return new PreprocessorSymbolTracker(specifiedSymbols);\n+            }\n+\n+            private static IEnumerable<Document> GetSharedDocuments(IEnumerable<Project> projects)", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 94, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Sounds good.\n\nAs a note to myself: I don't think I've documented the fact that we take the intersection of documents in the specified projects when multiple projects are passed on the command line.  Originally, I passed two projects which have different build configurations, but many shared files on the command line, and intersected the state of all the conditional regions in each project.\n\nSince updating the algorithm, the build configurations specified by the projects themselves are ignored because whichever configurations msbuild deduces from the project files is dependent on the environment.  It's clearer to specify each configuration explicitly on the command line, an easy way to get each configuration being to look at the csc commands run by msbuild.\n", "created_at": "2015-03-02T21:31:35Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25640380", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25640380"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25640380"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25640380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25645235", "pull_request_review_id": null, "id": 25645235, "diff_hunk": "@@ -0,0 +1,196 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public async Task<Document> RemoveUnnecessaryRegions(DocumentConditionalRegionInfo info, CancellationToken cancellationToken = default(CancellationToken))\n+        {\n+            if (info == null)\n+            {\n+                throw new ArgumentNullException(\"info\");\n+            }\n+\n+            var changes = CalculateTextChanges(info.Chains);\n+            if (changes == null || changes.Count == 0)\n+            {\n+                return info.Document;\n+            }\n+\n+            var newText = await info.Document.GetTextAsync(cancellationToken);\n+\n+            try\n+            {\n+                newText = newText.WithChanges(changes);\n+            }\n+            catch (Exception)\n+            {\n+                var changesString = new StringBuilder();\n+                var syntaxTree = info.Document.GetSyntaxTreeAsync(cancellationToken).Result;\n+\n+                foreach (var change in changes)\n+                {\n+                    var lineSpan = Location.Create(syntaxTree, change.Span).GetLineSpan();\n+                    changesString.AppendFormat(\"({0}-{1}): {2}\", lineSpan.StartLinePosition.Line, lineSpan.EndLinePosition.Line, newText.GetSubText(change.Span).ToString());\n+                }\n+\n+                Console.WriteLine(string.Format(\"Failed to remove regions from document '{0}':{1}{2}\", info.Document.FilePath, Environment.NewLine, changesString.ToString()));\n+                return info.Document;\n+            }\n+\n+            return info.Document.WithText(newText);\n+        }\n+\n+        private static List<TextChange> CalculateTextChanges(List<ConditionalRegionChain> chains)\n+        {\n+            var changes = new List<TextChange>();\n+\n+            foreach (var chain in chains)\n+            {\n+                CalculateTextChanges(chain, changes);\n+            }\n+\n+            changes.Sort(CompareTextChanges);\n+            return MergeOverlappingRegions(changes);\n+        }\n+\n+        public static void CalculateTextChanges(ConditionalRegionChain chain, List<TextChange> changes)\n+        {\n+            bool removeEndif = true;\n+\n+            for (int i = 0; i < chain.Regions.Count; i++)\n+            {\n+                var region = chain.Regions[i];\n+                if (region.State != Tristate.Varying)\n+                {\n+                    var startDirective = region.StartDirective;\n+                    var endDirective = region.EndDirective;\n+                    string endDirectiveReplacementText = string.Empty;\n+\n+                    // Remove the start directive\n+                    changes.Add(new TextChange(new TextSpan(region.SpanStart, region.StartDirective.FullSpan.End - region.SpanStart), string.Empty));", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.RegionRemoval.cs", "position": 85, "original_position": 84, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Interesting.  I didn't realize that. \n", "created_at": "2015-03-02T22:28:32Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25645235", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25645235"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25645235"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25645235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25651157", "pull_request_review_id": null, "id": 25651157, "diff_hunk": "@@ -1,35 +1,17 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <Project ToolsVersion=\"12.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n+  <Import Project=\"$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.props))\\build.props\" />", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": null, "original_position": 4, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "This would actually be `..\\..\\build.props` for all the projects we have right now.  I basically just did this so I could put the build.props at the top-level without having to specify exactly where the top-level is (in case things move it's one less thing to change for each project).  This is what we do in the corefx repo to find `dirs.props` and `dirs.targets`, but since the build here is not as complex this is probably not necessary.   I'll change this to `..\\..\\build.props`.\n", "created_at": "2015-03-02T23:52:42Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25651157", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25651157"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25651157"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25651157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25657996", "pull_request_review_id": null, "id": 25657996, "diff_hunk": "@@ -0,0 +1,115 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Xunit;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis.Tests\n+{\n+    public class PreprocessorExpressionEvaluatorTests\n+    {\n+        [Fact]\n+        public void TrueLiteral()\n+        {\n+            Verify(\"true\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void FalseLiteral()\n+        {\n+            Verify(\"false\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalAnd()\n+        {\n+            Verify(\"true && true\", Tristate.True);\n+            Verify(\"true && false\", Tristate.False);\n+            Verify(\"true && varying\", Tristate.Varying);\n+            Verify(\"false && false\", Tristate.False);\n+            Verify(\"false && varying\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalOr()\n+        {\n+            Verify(\"true || true\", Tristate.True);\n+            Verify(\"true || false\", Tristate.True);\n+            Verify(\"true || varying\", Tristate.True);\n+            Verify(\"false || false\", Tristate.False);\n+            Verify(\"false || varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void LogicalNot()\n+        {\n+            Verify(\"!true\", Tristate.False);\n+            Verify(\"!false\", Tristate.True);\n+            Verify(\"!varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void ParentheicalExpressions()\n+        {\n+            Verify(\"!(true && (false || true))\", Tristate.False);\n+            Verify(\"(!((true)))\", Tristate.False);\n+            Verify(\"(!(!true))\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void InvalidExpressions()\n+        {\n+            VerifyInvalid(\"false + true\");\n+            VerifyInvalid(\"&varying\");\n+            VerifyInvalid(\"1\");\n+        }\n+\n+        [Fact]\n+        public void OverrideLiteralExpressions()\n+        {\n+            var evaluator = new PreprocessorExpressionEvaluator(\n+                new Dictionary<string, Tristate>()\n+                {\n+                    { \"true\", Tristate.False },\n+                    { \"false\", Tristate.True }\n+                },\n+                Tristate.Varying);\n+\n+            Assert.Equal(Tristate.False, EvaluateExpression(\"true\", evaluator));\n+            Assert.Equal(Tristate.True, EvaluateExpression(\"false\", evaluator));\n+        }\n+\n+        private static readonly CSharpParseOptions s_expressionParseOptions = new CSharpParseOptions(\n+            documentationMode: DocumentationMode.None,\n+            kind: SourceCodeKind.Interactive);\n+\n+        private static readonly PreprocessorExpressionEvaluator s_evaluator = new PreprocessorExpressionEvaluator(", "path": "src/Microsoft.DotNet.DeadRegionAnalysis.Tests/PreprocessorExpressionEvaluatorTests.cs", "position": 88, "original_position": 88, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Does xUnit parallel test execution actually get automatically disabled if we have static fields in test classes?  The PreprocessorExpressionEvaluator and PreprocessorExpressionSimplifier do not actually have any mutable state.  I guess technically for me to claim that I would have to be copying the dictionaries passed into the constructors of these classes.  Is that what you're referring to when you say this type is mutable?\n", "created_at": "2015-03-03T02:04:13Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25657996", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25657996"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25657996"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25657996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658708", "pull_request_review_id": null, "id": 25658708, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));\n+                    }\n+\n+                    Documents = solution.Projects.Single().Documents;\n+                }\n+\n+                _symbolConfigurations = CalculateSymbolConfigurations(\n+                    alwaysDisabledSymbols,\n+                    alwaysDefinedSymbols,\n+                    alwaysIgnoredSymbols,\n+                    symbolConfigurations);\n+\n+                _undefinedSymbolValue = undefinedSymbolValue;\n+            }\n+\n+            internal CompositePreprocessorExpressionEvaluator GetPreprocessorExpressionEvaluator()\n+            {\n+                var evaluators = _symbolConfigurations.Select(config => new PreprocessorExpressionEvaluator(config, _undefinedSymbolValue));\n+                return new CompositePreprocessorExpressionEvaluator(evaluators);\n+            }\n+\n+            internal PreprocessorSymbolTracker GetPreprocessorSymbolTracker()\n+            {\n+                var specifiedSymbols = new HashSet<string>();\n+\n+                foreach (var config in _symbolConfigurations)\n+                {\n+                    foreach (string symbol in config.Keys)\n+                    {\n+                        specifiedSymbols.Add(symbol);\n+                    }\n+                }\n+\n+                return new PreprocessorSymbolTracker(specifiedSymbols);\n+            }\n+\n+            private static IEnumerable<Document> GetSharedDocuments(IEnumerable<Project> projects)", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 94, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Correction: I thought I had changed this, but it turns out I am not ignoring the symbol configuration specified in the project files in the AnalysisEngine.FromProjects() method (currently only used by tests).  I am currently using it in addition to any configurations specified with the `/config` option.  Given my explanation above though, I think it makes sense never to use the symbol configuration deduced by simply loading the project file in the current environment.\n", "created_at": "2015-03-03T02:22:12Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25658708", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658708"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25658708"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658725", "pull_request_review_id": null, "id": 25658725, "diff_hunk": "@@ -0,0 +1,290 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.DotNet.DeadRegionAnalysis;\n+\n+namespace DeadRegions\n+{\n+    internal class DeadRegions\n+    {\n+        private static readonly char[] s_symbolSeparatorChars = new[] { ';', ',' };\n+\n+        private static OptionParser s_options = new OptionParser();\n+        private static AnalysisEngine s_engine;\n+\n+        private static IList<string> s_filePaths;\n+        private static List<string> s_ignoredSymbols = new List<string>();\n+        private static List<string> s_definedSymbols = new List<string>();\n+        private static List<string> s_disabledSymbols = new List<string>();\n+        private static List<IEnumerable<string>> s_symbolConfigurations = new List<IEnumerable<string>>();\n+        private static Tristate s_undefinedSymbolValue = Tristate.Varying;\n+\n+        private static bool s_printDisabled;", "path": "src/DeadRegions/Program.cs", "position": null, "original_position": 28, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Sure.\n", "created_at": "2015-03-03T02:22:31Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25658725", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658725"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25658725"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658741", "pull_request_review_id": null, "id": 25658741, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 38, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "`await` can't be used inside a constructor, but I could pull out the project loading into AnalysisEngine.FromFilePaths() and make that async.\n", "created_at": "2015-03-03T02:23:05Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25658741", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658741"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25658741"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25658741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25659239", "pull_request_review_id": null, "id": 25659239, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 24, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Will fix.\n", "created_at": "2015-03-03T02:37:58Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25659239", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25659239"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25659239"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25659239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25774270", "pull_request_review_id": null, "id": 25774270, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 58, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Do you have a suggestion for how to do this?\n", "created_at": "2015-03-04T13:37:52Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25774270", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25774270"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25774270"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25774270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25775931", "pull_request_review_id": null, "id": 25775931, "diff_hunk": "@@ -1,42 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<configuration>\n-    <startup> \n-        <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />\n-    </startup>\n-  <runtime>\n-    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">", "path": "src/CodeFormatter/App.config", "position": null, "original_position": 7, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Are these binding redirects really necessary? Everything works fine for me without them, and I've tried this both with VS2013 and VS2015 CTP.\n", "created_at": "2015-03-04T14:04:11Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25775931", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25775931"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25775931"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25775931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25775995", "pull_request_review_id": null, "id": 25775995, "diff_hunk": "@@ -1,15 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<configuration>\n-  <runtime>\n-    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/app.config", "position": 4, "original_position": 4, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "This file is unnecessary: App.config files don't do anything for library projects by default.\n", "created_at": "2015-03-04T14:04:54Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25775995", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25775995"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25775995"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25775995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25776038", "pull_request_review_id": null, "id": 25776038, "diff_hunk": "@@ -1,15 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<configuration>\n-  <runtime>", "path": "src/Microsoft.DotNet.CodeFormatting/app.config", "position": 3, "original_position": 3, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Are these binding redirects really necessary?\n", "created_at": "2015-03-04T14:05:33Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25776038", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25776038"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25776038"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25776038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25787741", "pull_request_review_id": null, "id": 25787741, "diff_hunk": "@@ -0,0 +1,115 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Xunit;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis.Tests\n+{\n+    public class PreprocessorExpressionEvaluatorTests\n+    {\n+        [Fact]\n+        public void TrueLiteral()\n+        {\n+            Verify(\"true\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void FalseLiteral()\n+        {\n+            Verify(\"false\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalAnd()\n+        {\n+            Verify(\"true && true\", Tristate.True);\n+            Verify(\"true && false\", Tristate.False);\n+            Verify(\"true && varying\", Tristate.Varying);\n+            Verify(\"false && false\", Tristate.False);\n+            Verify(\"false && varying\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalOr()\n+        {\n+            Verify(\"true || true\", Tristate.True);\n+            Verify(\"true || false\", Tristate.True);\n+            Verify(\"true || varying\", Tristate.True);\n+            Verify(\"false || false\", Tristate.False);\n+            Verify(\"false || varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void LogicalNot()\n+        {\n+            Verify(\"!true\", Tristate.False);\n+            Verify(\"!false\", Tristate.True);\n+            Verify(\"!varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void ParentheicalExpressions()\n+        {\n+            Verify(\"!(true && (false || true))\", Tristate.False);\n+            Verify(\"(!((true)))\", Tristate.False);\n+            Verify(\"(!(!true))\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void InvalidExpressions()\n+        {\n+            VerifyInvalid(\"false + true\");\n+            VerifyInvalid(\"&varying\");\n+            VerifyInvalid(\"1\");\n+        }\n+\n+        [Fact]\n+        public void OverrideLiteralExpressions()\n+        {\n+            var evaluator = new PreprocessorExpressionEvaluator(\n+                new Dictionary<string, Tristate>()\n+                {\n+                    { \"true\", Tristate.False },\n+                    { \"false\", Tristate.True }\n+                },\n+                Tristate.Varying);\n+\n+            Assert.Equal(Tristate.False, EvaluateExpression(\"true\", evaluator));\n+            Assert.Equal(Tristate.True, EvaluateExpression(\"false\", evaluator));\n+        }\n+\n+        private static readonly CSharpParseOptions s_expressionParseOptions = new CSharpParseOptions(\n+            documentationMode: DocumentationMode.None,\n+            kind: SourceCodeKind.Interactive);\n+\n+        private static readonly PreprocessorExpressionEvaluator s_evaluator = new PreprocessorExpressionEvaluator(", "path": "src/Microsoft.DotNet.DeadRegionAnalysis.Tests/PreprocessorExpressionEvaluatorTests.cs", "position": 88, "original_position": 88, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "It depends on the host but by default it is okay to parallelize tests.  \n\nHmm, I just assumed those types were mutable hence would be a problem as a static.  If they are truly immutable it's fine to keep them there.  But still I would juts make them member fields and use them that way.  There is no real downside to them being instance fields. \n", "created_at": "2015-03-04T16:22:47Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25787741", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25787741"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25787741"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25787741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799138", "pull_request_review_id": null, "id": 25799138, "diff_hunk": "@@ -1,42 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<configuration>\n-    <startup> \n-        <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />\n-    </startup>\n-  <runtime>\n-    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">", "path": "src/CodeFormatter/App.config", "position": null, "original_position": 7, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Please add this file back.\n\nThese bindings are needed on machines which have older versions of MSBuild / Roslyn installed into the GAC.  \n", "created_at": "2015-03-04T18:27:39Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25799138", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799138"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25799138"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799436", "pull_request_review_id": null, "id": 25799436, "diff_hunk": "@@ -1,42 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<configuration>\n-    <startup> \n-        <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />\n-    </startup>\n-  <runtime>\n-    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">", "path": "src/CodeFormatter/App.config", "position": null, "original_position": 7, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Will do.  I'll also add a similar App.config for the DeadRegions executable.\n", "created_at": "2015-03-04T18:30:59Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25799436", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799436"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25799436"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799460", "pull_request_review_id": null, "id": 25799460, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 58, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Actually this API behaves already does this.  The `Encoding` argument isn't dictating an encoding but instead specifying a backup one.  Can you change this be passed as a named argument?  It helps remove this confusion.\n", "created_at": "2015-03-04T18:31:10Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25799460", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799460"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25799460"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799596", "pull_request_review_id": null, "id": 25799596, "diff_hunk": "@@ -0,0 +1,200 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.IO;\n+using System.Linq;\n+using System.Text;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.MSBuild;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis\n+{\n+    public partial class AnalysisEngine\n+    {\n+        public class Options\n+        {\n+            private IEnumerable<IReadOnlyDictionary<string, Tristate>> _symbolConfigurations;\n+            private Tristate _undefinedSymbolValue;\n+\n+            public IEnumerable<Document> Documents { get; private set; }\n+\n+            internal Options(\n+                IEnumerable<Project> projects = null,\n+                IEnumerable<string> projectPaths = null,\n+                IEnumerable<string> sourcePaths = null,\n+                IEnumerable<IEnumerable<string>> symbolConfigurations = null,\n+                IEnumerable<string> alwaysIgnoredSymbols = null,\n+                IEnumerable<string> alwaysDefinedSymbols = null,\n+                IEnumerable<string> alwaysDisabledSymbols = null,\n+                Tristate undefinedSymbolValue = default(Tristate))\n+            {\n+                if (projectPaths != null)\n+                {\n+                    projects = Task.WhenAll(from path in projectPaths select MSBuildWorkspace.Create().OpenProjectAsync(path, CancellationToken.None)).Result;\n+                }\n+                if (projects != null)\n+                {\n+                    Documents = GetSharedDocuments(projects);\n+                }\n+\n+                if (sourcePaths != null)\n+                {\n+                    var projectId = ProjectId.CreateNewId(\"AnalysisProject\");\n+                    var solution = new AdhocWorkspace()\n+                        .CurrentSolution\n+                        .AddProject(projectId, \"AnalysisProject\", \"AnalysisProject\", LanguageNames.CSharp);\n+\n+                    foreach (var path in sourcePaths)\n+                    {\n+                        var documentId = DocumentId.CreateNewId(projectId);\n+                        solution = solution.AddDocument(\n+                            documentId,\n+                            Path.GetFileName(path),\n+                            new FileTextLoader(path, Encoding.UTF8));", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/AnalysisEngine.Options.cs", "position": null, "original_position": 58, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "Sure.\n", "created_at": "2015-03-04T18:32:23Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25799596", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799596"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25799596"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25799596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25819030", "pull_request_review_id": null, "id": 25819030, "diff_hunk": "@@ -0,0 +1,115 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Xunit;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis.Tests\n+{\n+    public class PreprocessorExpressionEvaluatorTests\n+    {\n+        [Fact]\n+        public void TrueLiteral()\n+        {\n+            Verify(\"true\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void FalseLiteral()\n+        {\n+            Verify(\"false\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalAnd()\n+        {\n+            Verify(\"true && true\", Tristate.True);\n+            Verify(\"true && false\", Tristate.False);\n+            Verify(\"true && varying\", Tristate.Varying);\n+            Verify(\"false && false\", Tristate.False);\n+            Verify(\"false && varying\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalOr()\n+        {\n+            Verify(\"true || true\", Tristate.True);\n+            Verify(\"true || false\", Tristate.True);\n+            Verify(\"true || varying\", Tristate.True);\n+            Verify(\"false || false\", Tristate.False);\n+            Verify(\"false || varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void LogicalNot()\n+        {\n+            Verify(\"!true\", Tristate.False);\n+            Verify(\"!false\", Tristate.True);\n+            Verify(\"!varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void ParentheicalExpressions()\n+        {\n+            Verify(\"!(true && (false || true))\", Tristate.False);\n+            Verify(\"(!((true)))\", Tristate.False);\n+            Verify(\"(!(!true))\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void InvalidExpressions()\n+        {\n+            VerifyInvalid(\"false + true\");\n+            VerifyInvalid(\"&varying\");\n+            VerifyInvalid(\"1\");\n+        }\n+\n+        [Fact]\n+        public void OverrideLiteralExpressions()\n+        {\n+            var evaluator = new PreprocessorExpressionEvaluator(\n+                new Dictionary<string, Tristate>()\n+                {\n+                    { \"true\", Tristate.False },\n+                    { \"false\", Tristate.True }\n+                },\n+                Tristate.Varying);\n+\n+            Assert.Equal(Tristate.False, EvaluateExpression(\"true\", evaluator));\n+            Assert.Equal(Tristate.True, EvaluateExpression(\"false\", evaluator));\n+        }\n+\n+        private static readonly CSharpParseOptions s_expressionParseOptions = new CSharpParseOptions(\n+            documentationMode: DocumentationMode.None,\n+            kind: SourceCodeKind.Interactive);\n+\n+        private static readonly PreprocessorExpressionEvaluator s_evaluator = new PreprocessorExpressionEvaluator(", "path": "src/Microsoft.DotNet.DeadRegionAnalysis.Tests/PreprocessorExpressionEvaluatorTests.cs", "position": 88, "original_position": 88, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "The only downside is additional allocations per test method.  I'll assume we don't care about that though. Fixing.\n", "created_at": "2015-03-04T22:03:29Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25819030", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25819030"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25819030"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25819030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25819847", "pull_request_review_id": null, "id": 25819847, "diff_hunk": "@@ -0,0 +1,115 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Xunit;\n+\n+namespace Microsoft.DotNet.DeadRegionAnalysis.Tests\n+{\n+    public class PreprocessorExpressionEvaluatorTests\n+    {\n+        [Fact]\n+        public void TrueLiteral()\n+        {\n+            Verify(\"true\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void FalseLiteral()\n+        {\n+            Verify(\"false\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalAnd()\n+        {\n+            Verify(\"true && true\", Tristate.True);\n+            Verify(\"true && false\", Tristate.False);\n+            Verify(\"true && varying\", Tristate.Varying);\n+            Verify(\"false && false\", Tristate.False);\n+            Verify(\"false && varying\", Tristate.False);\n+        }\n+\n+        [Fact]\n+        public void LogicalOr()\n+        {\n+            Verify(\"true || true\", Tristate.True);\n+            Verify(\"true || false\", Tristate.True);\n+            Verify(\"true || varying\", Tristate.True);\n+            Verify(\"false || false\", Tristate.False);\n+            Verify(\"false || varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void LogicalNot()\n+        {\n+            Verify(\"!true\", Tristate.False);\n+            Verify(\"!false\", Tristate.True);\n+            Verify(\"!varying\", Tristate.Varying);\n+        }\n+\n+        [Fact]\n+        public void ParentheicalExpressions()\n+        {\n+            Verify(\"!(true && (false || true))\", Tristate.False);\n+            Verify(\"(!((true)))\", Tristate.False);\n+            Verify(\"(!(!true))\", Tristate.True);\n+        }\n+\n+        [Fact]\n+        public void InvalidExpressions()\n+        {\n+            VerifyInvalid(\"false + true\");\n+            VerifyInvalid(\"&varying\");\n+            VerifyInvalid(\"1\");\n+        }\n+\n+        [Fact]\n+        public void OverrideLiteralExpressions()\n+        {\n+            var evaluator = new PreprocessorExpressionEvaluator(\n+                new Dictionary<string, Tristate>()\n+                {\n+                    { \"true\", Tristate.False },\n+                    { \"false\", Tristate.True }\n+                },\n+                Tristate.Varying);\n+\n+            Assert.Equal(Tristate.False, EvaluateExpression(\"true\", evaluator));\n+            Assert.Equal(Tristate.True, EvaluateExpression(\"false\", evaluator));\n+        }\n+\n+        private static readonly CSharpParseOptions s_expressionParseOptions = new CSharpParseOptions(\n+            documentationMode: DocumentationMode.None,\n+            kind: SourceCodeKind.Interactive);\n+\n+        private static readonly PreprocessorExpressionEvaluator s_evaluator = new PreprocessorExpressionEvaluator(", "path": "src/Microsoft.DotNet.DeadRegionAnalysis.Tests/PreprocessorExpressionEvaluatorTests.cs", "position": 88, "original_position": 88, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "a4f92b2efccb5761ea928bd702be364a986c63d7", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "On second thought, I don't see a great reason to change this.  It's a common pattern for us to declare const or static readonly test objects.  For example: [ImmutableArrayTests.cs](https://github.com/dotnet/corefx/blob/master/src/System.Collections.Immutable/tests/ImmutableArrayTest.cs).\n", "created_at": "2015-03-04T22:13:37Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25819847", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25819847"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25819847"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25819847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25820351", "pull_request_review_id": null, "id": 25820351, "diff_hunk": "@@ -1,42 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<configuration>\n-    <startup> \n-        <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />\n-    </startup>\n-  <runtime>\n-    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">", "path": "src/CodeFormatter/App.config", "position": null, "original_position": 7, "commit_id": "bbaf219368e88ae589e56add7e614ec7e93c8538", "original_commit_id": "8a8ba3d13fd11c613ffec3368a1cf35eff46718c", "user": {"login": "nslottow", "id": 2304989, "avatar_url": "https://avatars0.githubusercontent.com/u/2304989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nslottow", "html_url": "https://github.com/nslottow", "followers_url": "https://api.github.com/users/nslottow/followers", "following_url": "https://api.github.com/users/nslottow/following{/other_user}", "gists_url": "https://api.github.com/users/nslottow/gists{/gist_id}", "starred_url": "https://api.github.com/users/nslottow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nslottow/subscriptions", "organizations_url": "https://api.github.com/users/nslottow/orgs", "repos_url": "https://api.github.com/users/nslottow/repos", "events_url": "https://api.github.com/users/nslottow/events{/privacy}", "received_events_url": "https://api.github.com/users/nslottow/received_events", "type": "User", "site_admin": false}, "body": "And the XunitConverter executable.\n", "created_at": "2015-03-04T22:19:29Z", "updated_at": "2015-03-04T22:21:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25820351", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/85", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25820351"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/85#discussion_r25820351"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/85"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/25820351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038166", "pull_request_review_id": null, "id": 26038166, "diff_hunk": "@@ -34,14 +35,30 @@ private static int Main(string[] args)\n                 Console.WriteLine(\"    <verbose>    - Verbose output\");\n                 Console.WriteLine(\"    <nounicode>  - Do not convert unicode strings to escape sequences\");\n                 Console.WriteLine(\"    <nocopyright>- Do not update the copyright message.\");\n+                Console.WriteLine(\"    <searchPattern>- Pattern to look for projects/solutions within the folder. Default '*.??proj'.\");\n                 return -1;\n             }\n \n-            var projectOrSolutionPath = args[0];\n-            if (!File.Exists(projectOrSolutionPath))\n+            var path = args[0];\n+            string[] projectOrSolutionPath;", "path": "src/CodeFormatter/Program.cs", "position": 26, "original_position": 26, "commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "original_commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "We should rename this type to reflect that it is a collection.  \n", "created_at": "2015-03-09T14:16:20Z", "updated_at": "2015-03-09T14:16:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26038166", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038166"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26038166"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038252", "pull_request_review_id": null, "id": 26038252, "diff_hunk": "@@ -111,17 +152,32 @@ private static int Main(string[] args)\n \n             try\n             {\n-                RunAsync(\n-                    projectOrSolutionPath,\n-                    ruleTypeBuilder.ToImmutableArray(),\n-                    fileNamesBuilder.ToImmutableArray(),\n-                    configBuilder.ToImmutableArray(),\n-                    copyrightHeader,\n-                    allowTables,\n-                    convertUnicode,\n-                    verbose,\n-                    ct).Wait(ct);\n-                Console.WriteLine(\"Completed formatting.\");\n+                var rules = ruleTypeBuilder.ToImmutableArray();\n+                var fileNames = fileNamesBuilder.ToImmutableArray();\n+                var config = configBuilder.ToImmutableArray();\n+\n+                foreach (string projectOrSolution in projectOrSolutionPath)\n+                {\n+                    RunAsync(\n+                        projectOrSolution,\n+                        rules,\n+                        fileNames,\n+                        config,\n+                        copyrightHeader,\n+                        allowTables,\n+                        convertUnicode,\n+                        verbose,\n+                        ct).Wait(ct);\n+                }\n+\n+                if (projectOrSolutionPath.Length > 1)\n+                {\n+                    Console.WriteLine(\"Completed formatting {0} projects/solutions.\", projectOrSolutionPath.Length);\n+                }\n+                else\n+                {\n+                    Console.WriteLine(\"Completed formatting.\");\n+                }", "path": "src/CodeFormatter/Program.cs", "position": 134, "original_position": 134, "commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "original_commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "We should move the status line up to be inside the loop.  That way the user gets feedback for every project / solution that is formatted.  \n", "created_at": "2015-03-09T14:17:27Z", "updated_at": "2015-03-09T14:17:27Z", "html_url": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26038252", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038252"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26038252"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26054542", "pull_request_review_id": null, "id": 26054542, "diff_hunk": "@@ -34,14 +35,30 @@ private static int Main(string[] args)\n                 Console.WriteLine(\"    <verbose>    - Verbose output\");\n                 Console.WriteLine(\"    <nounicode>  - Do not convert unicode strings to escape sequences\");\n                 Console.WriteLine(\"    <nocopyright>- Do not update the copyright message.\");\n+                Console.WriteLine(\"    <searchPattern>- Pattern to look for projects/solutions within the folder. Default '*.??proj'.\");\n                 return -1;\n             }\n \n-            var projectOrSolutionPath = args[0];\n-            if (!File.Exists(projectOrSolutionPath))\n+            var path = args[0];\n+            string[] projectOrSolutionPath;", "path": "src/CodeFormatter/Program.cs", "position": 26, "original_position": 26, "commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "original_commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "user": {"login": "AlekseyTs", "id": 10522107, "avatar_url": "https://avatars0.githubusercontent.com/u/10522107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlekseyTs", "html_url": "https://github.com/AlekseyTs", "followers_url": "https://api.github.com/users/AlekseyTs/followers", "following_url": "https://api.github.com/users/AlekseyTs/following{/other_user}", "gists_url": "https://api.github.com/users/AlekseyTs/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlekseyTs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlekseyTs/subscriptions", "organizations_url": "https://api.github.com/users/AlekseyTs/orgs", "repos_url": "https://api.github.com/users/AlekseyTs/repos", "events_url": "https://api.github.com/users/AlekseyTs/events{/privacy}", "received_events_url": "https://api.github.com/users/AlekseyTs/received_events", "type": "User", "site_admin": false}, "body": "Did you mean to rename the local?\n", "created_at": "2015-03-09T17:08:56Z", "updated_at": "2015-03-09T17:08:56Z", "html_url": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26054542", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26054542"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26054542"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26054542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26054839", "pull_request_review_id": null, "id": 26054839, "diff_hunk": "@@ -111,17 +152,32 @@ private static int Main(string[] args)\n \n             try\n             {\n-                RunAsync(\n-                    projectOrSolutionPath,\n-                    ruleTypeBuilder.ToImmutableArray(),\n-                    fileNamesBuilder.ToImmutableArray(),\n-                    configBuilder.ToImmutableArray(),\n-                    copyrightHeader,\n-                    allowTables,\n-                    convertUnicode,\n-                    verbose,\n-                    ct).Wait(ct);\n-                Console.WriteLine(\"Completed formatting.\");\n+                var rules = ruleTypeBuilder.ToImmutableArray();\n+                var fileNames = fileNamesBuilder.ToImmutableArray();\n+                var config = configBuilder.ToImmutableArray();\n+\n+                foreach (string projectOrSolution in projectOrSolutionPath)\n+                {\n+                    RunAsync(\n+                        projectOrSolution,\n+                        rules,\n+                        fileNames,\n+                        config,\n+                        copyrightHeader,\n+                        allowTables,\n+                        convertUnicode,\n+                        verbose,\n+                        ct).Wait(ct);\n+                }\n+\n+                if (projectOrSolutionPath.Length > 1)\n+                {\n+                    Console.WriteLine(\"Completed formatting {0} projects/solutions.\", projectOrSolutionPath.Length);\n+                }\n+                else\n+                {\n+                    Console.WriteLine(\"Completed formatting.\");\n+                }", "path": "src/CodeFormatter/Program.cs", "position": 134, "original_position": 134, "commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "original_commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "user": {"login": "AlekseyTs", "id": 10522107, "avatar_url": "https://avatars0.githubusercontent.com/u/10522107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlekseyTs", "html_url": "https://github.com/AlekseyTs", "followers_url": "https://api.github.com/users/AlekseyTs/followers", "following_url": "https://api.github.com/users/AlekseyTs/following{/other_user}", "gists_url": "https://api.github.com/users/AlekseyTs/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlekseyTs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlekseyTs/subscriptions", "organizations_url": "https://api.github.com/users/AlekseyTs/orgs", "repos_url": "https://api.github.com/users/AlekseyTs/repos", "events_url": "https://api.github.com/users/AlekseyTs/events{/privacy}", "received_events_url": "https://api.github.com/users/AlekseyTs/received_events", "type": "User", "site_admin": false}, "body": "User already gets feedback for every project / solution that is formatted. The output looks like this:\n\n---\n\nProj1.csproj\n        Syntax Pass\n        Local Semantic Pass\n        Global Semantic Pass\nTotal time 00:00:00.0798914\nProj2.csproj\n        Syntax Pass\n        Local Semantic Pass\n        Global Semantic Pass\nTotal time 00:00:00.0225966\nCompleted formatting 2 projects/solutions.\n", "created_at": "2015-03-09T17:12:30Z", "updated_at": "2015-03-09T17:13:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26054839", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26054839"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26054839"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26054839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26058158", "pull_request_review_id": null, "id": 26058158, "diff_hunk": "@@ -111,17 +152,32 @@ private static int Main(string[] args)\n \n             try\n             {\n-                RunAsync(\n-                    projectOrSolutionPath,\n-                    ruleTypeBuilder.ToImmutableArray(),\n-                    fileNamesBuilder.ToImmutableArray(),\n-                    configBuilder.ToImmutableArray(),\n-                    copyrightHeader,\n-                    allowTables,\n-                    convertUnicode,\n-                    verbose,\n-                    ct).Wait(ct);\n-                Console.WriteLine(\"Completed formatting.\");\n+                var rules = ruleTypeBuilder.ToImmutableArray();\n+                var fileNames = fileNamesBuilder.ToImmutableArray();\n+                var config = configBuilder.ToImmutableArray();\n+\n+                foreach (string projectOrSolution in projectOrSolutionPath)\n+                {\n+                    RunAsync(\n+                        projectOrSolution,\n+                        rules,\n+                        fileNames,\n+                        config,\n+                        copyrightHeader,\n+                        allowTables,\n+                        convertUnicode,\n+                        verbose,\n+                        ct).Wait(ct);\n+                }\n+\n+                if (projectOrSolutionPath.Length > 1)\n+                {\n+                    Console.WriteLine(\"Completed formatting {0} projects/solutions.\", projectOrSolutionPath.Length);\n+                }\n+                else\n+                {\n+                    Console.WriteLine(\"Completed formatting.\");\n+                }", "path": "src/CodeFormatter/Program.cs", "position": 134, "original_position": 134, "commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "original_commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Ah yes, I forgot about that. \n", "created_at": "2015-03-09T17:49:24Z", "updated_at": "2015-03-09T17:49:24Z", "html_url": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26058158", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26058158"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26058158"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26058158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26058264", "pull_request_review_id": null, "id": 26058264, "diff_hunk": "@@ -34,14 +35,30 @@ private static int Main(string[] args)\n                 Console.WriteLine(\"    <verbose>    - Verbose output\");\n                 Console.WriteLine(\"    <nounicode>  - Do not convert unicode strings to escape sequences\");\n                 Console.WriteLine(\"    <nocopyright>- Do not update the copyright message.\");\n+                Console.WriteLine(\"    <searchPattern>- Pattern to look for projects/solutions within the folder. Default '*.??proj'.\");\n                 return -1;\n             }\n \n-            var projectOrSolutionPath = args[0];\n-            if (!File.Exists(projectOrSolutionPath))\n+            var path = args[0];\n+            string[] projectOrSolutionPath;", "path": "src/CodeFormatter/Program.cs", "position": 26, "original_position": 26, "commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "original_commit_id": "5da76f48f1c311294e247f6ce614d1be3bf6287c", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "@AlekseyTs Yes.  \n", "created_at": "2015-03-09T17:50:39Z", "updated_at": "2015-03-09T17:50:39Z", "html_url": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26058264", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/93", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26058264"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/93#discussion_r26058264"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/93"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26058264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038456", "pull_request_review_id": null, "id": 26038456, "diff_hunk": "@@ -159,18 +168,32 @@ private static int Main(string[] args)\n             engine.ConvertUnicodeCharacters = convertUnicode;\n             engine.Verbose = verbose;\n \n-            Console.WriteLine(Path.GetFileName(projectOrSolutionPath));\n-            string extension = Path.GetExtension(projectOrSolutionPath);\n-            if (StringComparer.OrdinalIgnoreCase.Equals(extension, \".sln\"))\n+            Console.WriteLine(Path.GetFileName(projectSolutionOrRspPath));\n+            string extension = Path.GetExtension(projectSolutionOrRspPath);\n+            if (StringComparer.OrdinalIgnoreCase.Equals(extension, \".rsp\"))\n+            {\n+                using (var workspace = ResponseFileWorkspace.Create())\n+                {", "path": "src/CodeFormatter/Program.cs", "position": 106, "original_position": 118, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Should add the following line:\n\n``` csharp\nworkspace.LoadMetadataForReferencedProjects = true;\n```\n\nThis can help increase performance by loading referenced projects as metedata vs. source.  Shows up mostly with larger solutions (aka Roslyn). \n", "created_at": "2015-03-09T14:19:39Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26038456", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038456"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26038456"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038694", "pull_request_review_id": null, "id": 26038694, "diff_hunk": "@@ -0,0 +1,75 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));\n+                    using (var writer = new StreamWriter(filePath, append: false, encoding: Encoding.UTF8))", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 57, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Need to be **very** careful with encoding here.  Can't assume that the files are all in UTF8.\n\nThe best way to proceed here is to grab the encoding of the original `Document` and use that.  \n", "created_at": "2015-03-09T14:22:33Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26038694", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038694"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26038694"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038733", "pull_request_review_id": null, "id": 26038733, "diff_hunk": "@@ -0,0 +1,75 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 56, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "This seems unnecessary.  \n", "created_at": "2015-03-09T14:22:59Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26038733", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038733"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26038733"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26038733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26039550", "pull_request_review_id": null, "id": 26039550, "diff_hunk": "@@ -159,18 +168,32 @@ private static int Main(string[] args)\n             engine.ConvertUnicodeCharacters = convertUnicode;\n             engine.Verbose = verbose;\n \n-            Console.WriteLine(Path.GetFileName(projectOrSolutionPath));\n-            string extension = Path.GetExtension(projectOrSolutionPath);\n-            if (StringComparer.OrdinalIgnoreCase.Equals(extension, \".sln\"))\n+            Console.WriteLine(Path.GetFileName(projectSolutionOrRspPath));\n+            string extension = Path.GetExtension(projectSolutionOrRspPath);\n+            if (StringComparer.OrdinalIgnoreCase.Equals(extension, \".rsp\"))\n+            {\n+                using (var workspace = ResponseFileWorkspace.Create())\n+                {", "path": "src/CodeFormatter/Program.cs", "position": 106, "original_position": 118, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2015-03-09T14:32:17Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26039550", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26039550"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26039550"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26039550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26039668", "pull_request_review_id": null, "id": 26039668, "diff_hunk": "@@ -0,0 +1,75 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));\n+                    using (var writer = new StreamWriter(filePath, append: false, encoding: Encoding.UTF8))", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 57, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2015-03-09T14:34:00Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26039668", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26039668"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26039668"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26039668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040462", "pull_request_review_id": null, "id": 26040462, "diff_hunk": "@@ -0,0 +1,75 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 56, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "body": "MsBuild workspace creates the directory. I presume this was in case documents get added to the workspace. \nLet me know and I'll yank it. In my opinion the Filesystem should have created the parent dirs. if they didn't exist, or the .Net stream wrappers should have done it. \n", "created_at": "2015-03-09T14:42:41Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26040462", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040462"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26040462"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040638", "pull_request_review_id": null, "id": 26040638, "diff_hunk": "@@ -0,0 +1,75 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 56, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "What's confusing me is the code formatter shouldn't be creating any new files or renaming old ones.  Hence I'm unsure how we could ever get into a state where the `Document` being written didn't have a directory yet.  \n", "created_at": "2015-03-09T14:44:28Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26040638", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040638"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26040638"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040844", "pull_request_review_id": null, "id": 26040844, "diff_hunk": "@@ -0,0 +1,76 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+            LoadMetadataForReferencedProjects = true;\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));\n+                    using (var writer = new StreamWriter(filePath, append: false, encoding: text.Encoding ?? Encoding.UTF8))", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 58, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "f485c494e49abf1fd13033d025b43554e18b66c0", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "In the case the encoding doesn't exist we should use the `UTF8` encoding which doesn't emit a BOM.  Same type, just pass false to the UTF8 constructor.  \n\nThere is no right answer here because it's encoding.  But this is what we've found to be the most popular form in our uses.  \n", "created_at": "2015-03-09T14:46:34Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26040844", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040844"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26040844"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26040844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26043882", "pull_request_review_id": null, "id": 26043882, "diff_hunk": "@@ -0,0 +1,75 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 56, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "body": "K I'll yank it...\n", "created_at": "2015-03-09T15:17:08Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26043882", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26043882"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26043882"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26043882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26047744", "pull_request_review_id": null, "id": 26047744, "diff_hunk": "@@ -0,0 +1,75 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 56, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "d842ecdd9c76fdb777dbde525fd68d1394a4e837", "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "body": "done\n", "created_at": "2015-03-09T15:54:31Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26047744", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26047744"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26047744"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26047744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26048520", "pull_request_review_id": null, "id": 26048520, "diff_hunk": "@@ -0,0 +1,76 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Text;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Host.Mef;\n+using Microsoft.CodeAnalysis.Text;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    public sealed class ResponseFileWorkspace : Workspace\n+    {\n+        private ResponseFileWorkspace()\n+            : base(DesktopMefHostServices.DefaultServices, \"Custom\")\n+        {\n+            LoadMetadataForReferencedProjects = true;\n+        }\n+\n+        public static ResponseFileWorkspace Create()\n+        {\n+            return new ResponseFileWorkspace();\n+        }\n+\n+        public Project OpenCommandLineProject(string responseFile, string language)\n+        {\n+            // This line deserves better error handling, but the tools current model is just throwing exception for most errors.\n+            // Issue: #90\n+            string rspContents = File.ReadAllText(responseFile);\n+\n+            var projectInfo = CommandLineProject.CreateProjectInfo(\n+                projectName: Path.GetFileNameWithoutExtension(responseFile),\n+                language: language,\n+                commandLine: rspContents,\n+                baseDirectory: Path.GetDirectoryName(Path.GetFullPath(responseFile)),\n+                workspace: this);\n+\n+            this.OnProjectAdded(projectInfo);\n+\n+            return this.CurrentSolution.GetProject(projectInfo.Id);\n+        }\n+\n+        public override bool CanApplyChange(ApplyChangesKind feature)\n+        {\n+            return feature == ApplyChangesKind.ChangeDocument;\n+        }\n+\n+        protected override void ApplyDocumentTextChanged(DocumentId documentId, SourceText text)\n+        {\n+            var document = this.CurrentSolution.GetDocument(documentId);\n+            if (document != null)\n+            {\n+                try\n+                {\n+                    var filePath = document.FilePath;\n+                    Directory.CreateDirectory(Path.GetDirectoryName(filePath));\n+                    using (var writer = new StreamWriter(filePath, append: false, encoding: text.Encoding ?? Encoding.UTF8))", "path": "src/Microsoft.DotNet.CodeFormatting/ResponseFileWorkspace.cs", "position": null, "original_position": 58, "commit_id": "05039a8c1a730ce53e9ecabfc22d3ae98a14f834", "original_commit_id": "f485c494e49abf1fd13033d025b43554e18b66c0", "user": {"login": "dannyvv", "id": 11037542, "avatar_url": "https://avatars2.githubusercontent.com/u/11037542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyvv", "html_url": "https://github.com/dannyvv", "followers_url": "https://api.github.com/users/dannyvv/followers", "following_url": "https://api.github.com/users/dannyvv/following{/other_user}", "gists_url": "https://api.github.com/users/dannyvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyvv/subscriptions", "organizations_url": "https://api.github.com/users/dannyvv/orgs", "repos_url": "https://api.github.com/users/dannyvv/repos", "events_url": "https://api.github.com/users/dannyvv/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyvv/received_events", "type": "User", "site_admin": false}, "body": "Done, but you should probably file a bug on Roslyn because the MsBuildWorkspace emits with BOM. Other side-note: I've seen some of the git tools infer the wrong encoding if the BOM isn't there. Causing big issues with the windows vs Unix line endings mess.\n", "created_at": "2015-03-09T16:02:45Z", "updated_at": "2015-03-09T19:42:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26048520", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/91", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26048520"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/91#discussion_r26048520"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/91"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/26048520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28268256", "pull_request_review_id": null, "id": 28268256, "diff_hunk": "@@ -0,0 +1,458 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Concurrent;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Reflection;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [GlobalSemanticRuleOrder(GlobalSemanticRuleOrder.MarkReadonlyFieldsRule)]\n+    internal sealed class MarkReadonlyFieldsRule : IGlobalSemanticFormattingRule\n+    {\n+        private readonly SemaphoreSlim _processUsagesLock = new SemaphoreSlim(1, 1);\n+        private ConcurrentDictionary<IFieldSymbol, bool> _unwrittenWritableFields;\n+\n+        public bool SupportsLanguage(string languageName)\n+        {\n+            return languageName == LanguageNames.CSharp;\n+        }\n+\n+        public async Task<Solution> ProcessAsync(\n+            Document document,\n+            SyntaxNode syntaxRoot,\n+            CancellationToken cancellationToken)\n+        {\n+            if (_unwrittenWritableFields == null)\n+            {\n+                using (await SemaphoreLock.GetAsync(_processUsagesLock))\n+                {\n+                    // A global analysis must be run before we can do any actual processing, because a field might be written\n+                    // in a different file than it is declared (even private ones may be split between partial classes).\n+\n+                    // It's also quite expensive, which is why it's being done inside the lock, so\n+                    // that the entire solution is not processed for each input file individually\n+                    if (_unwrittenWritableFields == null)\n+                    {\n+                        List<Document> allDocuments =\n+                            document.Project.Solution.Projects.SelectMany(p => p.Documents).ToList();\n+                        HashSet<IFieldSymbol>[] fields = await Task.WhenAll(\n+                            allDocuments\n+                                .AsParallel()\n+                                .Select(\n+                                    doc => WritableFieldScanner.Scan(doc, cancellationToken)));\n+\n+                        var writableFields = new ConcurrentDictionary<IFieldSymbol, bool>(\n+                            fields.SelectMany(s => s).Select(f => new KeyValuePair<IFieldSymbol, bool>(f, true)));\n+\n+                        await Task.WhenAll(\n+                            allDocuments.AsParallel()\n+                                .Select(\n+                                    doc => WriteUsagesScanner.RemoveWrittenFields(\n+                                        doc,\n+                                        writableFields,\n+                                        cancellationToken)));\n+\n+                        _unwrittenWritableFields = writableFields;\n+                    }\n+                }\n+            }\n+\n+            SyntaxNode root = await document.GetSyntaxRootAsync(cancellationToken);\n+            var application = new ReadonlyRewriter(\n+                _unwrittenWritableFields,\n+                await document.GetSemanticModelAsync(cancellationToken));\n+            return document.Project.Solution.WithDocumentSyntaxRoot(document.Id, application.Visit(root));\n+        }\n+\n+        /// <summary>\n+        /// This is the first walker, which looks for fields that are valid to transform to readonly.\n+        /// It returns any private or internal fields that are not already marked readonly, and returns a hash set of them.\n+        /// Internal fields are only considered if the \"InternalsVisibleTo\" is a reference to something in the same solution,\n+        /// since it's possible to analyse the global usages of it. Otherwise there is an assembly we don't have access to\n+        /// that can see that field, so we have to treat is as public\n+        /// </summary>\n+        private sealed class WritableFieldScanner : CSharpSyntaxWalker\n+        {\n+            private readonly HashSet<IFieldSymbol> _fields = new HashSet<IFieldSymbol>();\n+            private readonly ISymbol _internalsVisibleToAttribute;\n+            private readonly SemanticModel _model;\n+            private readonly Solution _solution;\n+\n+            private readonly Dictionary<IAssemblySymbol, bool> _visibleOutsideAsembly =\n+                new Dictionary<IAssemblySymbol, bool>();\n+\n+            private WritableFieldScanner(SemanticModel model, Solution solution)\n+            {\n+                _model = model;\n+                _solution = solution;\n+                _internalsVisibleToAttribute =\n+                    model.Compilation.GetTypeByMetadataName(\n+                        \"System.Runtime.CompilerServices.InternalsVisibleToAttribute\");\n+            }\n+\n+            public static async Task<HashSet<IFieldSymbol>> Scan(Document document, CancellationToken cancellationToken)\n+            {\n+                var scanner = new WritableFieldScanner(\n+                    await document.GetSemanticModelAsync(cancellationToken),\n+                    document.Project.Solution);\n+                scanner.Visit(await document.GetSyntaxRootAsync(cancellationToken));\n+                return scanner._fields;\n+            }\n+\n+            public override void VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                var fieldSymbol = (IFieldSymbol)_model.GetDeclaredSymbol(node.Declaration.Variables[0]);\n+\n+                if (fieldSymbol.IsReadOnly || fieldSymbol.IsConst || fieldSymbol.IsExtern)\n+                {\n+                    return;\n+                }\n+\n+                if (IsSymbolVisibleOutsideSolution(fieldSymbol, _internalsVisibleToAttribute, _solution))\n+                {\n+                    return;\n+                }\n+\n+                _fields.Add(fieldSymbol);\n+            }\n+\n+            private bool IsSymbolVisibleOutsideSolution(\n+                ISymbol symbol,\n+                ISymbol internalsVisibleToAttribute,\n+                Solution solution)\n+            {\n+                Accessibility accessibility = symbol.DeclaredAccessibility;\n+\n+                if (accessibility == Accessibility.NotApplicable)\n+                {\n+                    if (symbol.Kind == SymbolKind.Field)\n+                    {\n+                        accessibility = Accessibility.Private;\n+                    }\n+                    else\n+                    {\n+                        accessibility = Accessibility.Internal;\n+                    }\n+                }\n+\n+                if (accessibility == Accessibility.Public || accessibility == Accessibility.Protected)\n+                {\n+                    if (symbol.ContainingType != null)\n+                    {\n+                        // a public symbol in a non-visible class isn't visible\n+                        return IsSymbolVisibleOutsideSolution(\n+                            symbol.ContainingType,\n+                            internalsVisibleToAttribute,\n+                            solution);\n+                    }\n+\n+                    // They are public, we are going to skip them.\n+                    return true;\n+                }\n+\n+                if (accessibility > Accessibility.Private)\n+                {\n+                    bool visibleOutsideSolution = IsVisibleOutsideSolution(\n+                        symbol,\n+                        internalsVisibleToAttribute,\n+                        solution);\n+\n+                    if (visibleOutsideSolution)\n+                    {\n+                        if (symbol.ContainingType != null)\n+                        {\n+                            // a visible symbol in a non-visible class isn't visible\n+                            return IsSymbolVisibleOutsideSolution(\n+                                symbol.ContainingType,\n+                                internalsVisibleToAttribute,\n+                                solution);\n+                        }\n+\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private bool IsVisibleOutsideSolution(ISymbol field, ISymbol internalsVisibleToAttribute, Solution solution)\n+            {\n+                bool isVisible;\n+                IAssemblySymbol assembly = field.ContainingAssembly;\n+                if (_visibleOutsideAsembly.TryGetValue(assembly, out isVisible))\n+                {\n+                    return isVisible;\n+                }\n+\n+                foreach (AttributeData internalsVisibleInstance in assembly.GetAttributes()\n+                    .Where(a => Equals(a.AttributeClass, internalsVisibleToAttribute)))\n+                {\n+                    if (internalsVisibleInstance.ConstructorArguments.Length != 1)\n+                    {\n+                        // Unexpected number of agruments, isn't really the correct type.\n+                        continue;\n+                    }\n+\n+                    TypedConstant assemblyNameArgument = internalsVisibleInstance.ConstructorArguments[0];\n+                    if (assemblyNameArgument.Kind != TypedConstantKind.Primitive)\n+                    {\n+                        // The first argument wasn't a primitave value, isn't really the correct type\n+                        continue;\n+                    }\n+\n+                    string assemblyName = assemblyNameArgument.Value as string;\n+                    if (String.IsNullOrEmpty(assemblyName))\n+                    {\n+                        // The first argument wasn't a string, isn't really the correct type\n+                        continue;\n+                    }\n+\n+                    if (!solution.Projects.Any(p => ProjectHasName(p, assemblyName)))\n+                    {\n+                        // None of the projects in this solution have the target name\n+                        // Which means that this is intended to reference something outside of this\n+                        // solution, in which the assignments cannot be found.\n+                        isVisible = true;\n+                        break;\n+                    }\n+                }\n+\n+                _visibleOutsideAsembly.Add(assembly, isVisible);\n+                return isVisible;\n+            }\n+\n+            private static bool ProjectHasName(Project project, string assemblyName)\n+            {\n+                var projectName = new AssemblyName(project.AssemblyName);\n+                var target = new AssemblyName(assemblyName);\n+                if (String.Equals(projectName.Name, target.Name, StringComparison.Ordinal))\n+                {\n+                    // Technically we should check version and public key token\n+                    // But if signing happens out of band, or there is a version bump\n+                    // That's almost certainly the same assembly anyway, so just go with true\n+                    return true;\n+                }\n+                return false;\n+            }\n+        }\n+\n+        /// <summary>\n+        /// This is the second walker. It checks all code for instances where one of the writable fields (as\n+        /// calculated by <see cref=\"WritableFieldScanner\" />) is written to, and removes it from the set.\n+        /// Once the scan is complete, the set will not contain any fields written in the specified document.\n+        /// </summary>\n+        private sealed class WriteUsagesScanner : CSharpSyntaxWalker\n+        {\n+            private readonly SemanticModel _semanticModel;\n+            private readonly ConcurrentDictionary<IFieldSymbol, bool> _writableFields;\n+\n+            private WriteUsagesScanner(\n+                SemanticModel semanticModel,\n+                ConcurrentDictionary<IFieldSymbol, bool> writableFields)\n+            {\n+                _semanticModel = semanticModel;\n+                _writableFields = writableFields;\n+            }\n+\n+            public override void VisitAssignmentExpression(AssignmentExpressionSyntax node)\n+            {\n+                base.VisitAssignmentExpression(node);\n+\n+                CheckForFieldWrite(node.Left);\n+            }\n+\n+            public override void VisitArgument(ArgumentSyntax node)\n+            {\n+                base.VisitArgument(node);\n+\n+                if (!node.RefOrOutKeyword.IsKind(SyntaxKind.None))\n+                {\n+                    CheckForFieldWrite(node.Expression);\n+                }\n+            }\n+\n+            public override void VisitMethodDeclaration(MethodDeclarationSyntax node)\n+            {\n+                base.VisitMethodDeclaration(node);\n+\n+                if (node.Modifiers.Any(m => m.IsKind(SyntaxKind.ExternKeyword)))\n+                {\n+                    // This method body is unable to be analysed, so may contain writer instances\n+                    CheckForRefParametersForExternMethod(node.ParameterList.Parameters);\n+                }\n+            }\n+\n+            public override void VisitIndexerDeclaration(IndexerDeclarationSyntax node)\n+            {\n+                base.VisitIndexerDeclaration(node);\n+\n+                if (node.Modifiers.Any(m => m.IsKind(SyntaxKind.ExternKeyword)))\n+                {\n+                    // This method body is unable to be analysed, so may contain writer instances\n+                    CheckForRefParametersForExternMethod(node.ParameterList.Parameters);\n+                }\n+            }\n+\n+            private void CheckForRefParametersForExternMethod(IEnumerable<ParameterSyntax> parameters)\n+            {\n+                foreach (ParameterSyntax parameter in parameters)\n+                {\n+                    ITypeSymbol parameterType = _semanticModel.GetTypeInfo(parameter.Type).Type;\n+                    if (parameterType == null)\n+                    {\n+                        continue;\n+                    }\n+\n+                    bool canModify = true;\n+                    if (parameterType.TypeKind == TypeKind.Struct)\n+                    {\n+                        canModify = parameter.Modifiers.Any(m => m.IsKind(SyntaxKind.RefKeyword));\n+                    }\n+\n+                    if (canModify)\n+                    {\n+                        // This parameter might be used to modify one of the fields, since the\n+                        // implmentation is hidden from this analysys. Assume all fields\n+                        // of the type are written to\n+\n+                        foreach (IFieldSymbol field in parameterType.GetMembers().OfType<IFieldSymbol>())\n+                        {\n+                            MarkWriteInstance(field);\n+                        }\n+                    }\n+                }\n+            }\n+\n+            public override void VisitBinaryExpression(BinaryExpressionSyntax node)\n+            {\n+                base.VisitBinaryExpression(node);\n+                switch (node.OperatorToken.Kind())\n+                {\n+                    case SyntaxKind.AddAssignmentExpression:\n+                    case SyntaxKind.AndAssignmentExpression:\n+                    case SyntaxKind.DivideAssignmentExpression:\n+                    case SyntaxKind.ExclusiveOrAssignmentExpression:\n+                    case SyntaxKind.LeftShiftAssignmentExpression:\n+                    case SyntaxKind.ModuloAssignmentExpression:\n+                    case SyntaxKind.MultiplyAssignmentExpression:\n+                    case SyntaxKind.OrAssignmentExpression:\n+                    case SyntaxKind.RightShiftAssignmentExpression:\n+                    case SyntaxKind.SubtractAssignmentExpression:\n+                        {\n+                            CheckForFieldWrite(node.Left);\n+                            break;\n+                        }\n+                }\n+            }\n+\n+            private void CheckForFieldWrite(ExpressionSyntax node)\n+            {\n+                var fieldSymbol = _semanticModel.GetSymbolInfo(node).Symbol as IFieldSymbol;\n+\n+                if (fieldSymbol != null)\n+                {\n+                    if (IsInsideOwnConstructor(node, fieldSymbol.ContainingType))", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/MarkReadonlyFieldsRule.cs", "position": null, "original_position": 366, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "b7de91654c7f20c725096e08864eb30335f85fd7", "user": {"login": "CyrusNajmabadi", "id": 4564579, "avatar_url": "https://avatars3.githubusercontent.com/u/4564579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CyrusNajmabadi", "html_url": "https://github.com/CyrusNajmabadi", "followers_url": "https://api.github.com/users/CyrusNajmabadi/followers", "following_url": "https://api.github.com/users/CyrusNajmabadi/following{/other_user}", "gists_url": "https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CyrusNajmabadi/subscriptions", "organizations_url": "https://api.github.com/users/CyrusNajmabadi/orgs", "repos_url": "https://api.github.com/users/CyrusNajmabadi/repos", "events_url": "https://api.github.com/users/CyrusNajmabadi/events{/privacy}", "received_events_url": "https://api.github.com/users/CyrusNajmabadi/received_events", "type": "User", "site_admin": false}, "body": "What if you're inside a lambda inside the constructor?  Is that legal?\n", "created_at": "2015-04-13T19:02:17Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28268256", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28268256"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28268256"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28268256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283251", "pull_request_review_id": null, "id": 28283251, "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.CodeAnalysis;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    /// <summary>\n+    /// Commonly used name functions\n+    /// </summary>\n+    internal static class NameHelper\n+    {\n+        /// <summary>\n+        /// Get the full name of a symbol. So a field might look like\n+        /// \"OuterNamespace.Inner.ClassName.FieldName\"\n+        /// </summary>\n+        /// <param name=\"symbol\">symbol to get name of</param>\n+        /// <returns>Full display name for a symbol</returns>\n+        internal static string GetFullName(ISymbol symbol)\n+        {\n+            return GetFullName(symbol.ContainingType) + \".\" + symbol.Name;", "path": "src/Microsoft.DotNet.CodeFormatting/NameHelper.cs", "position": 21, "original_position": 21, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Don't believe this will work for nested types.  They should use `+` instead of `.`\n", "created_at": "2015-04-13T21:54:06Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283251", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283251"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283251"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283377", "pull_request_review_id": null, "id": 28283377, "diff_hunk": "@@ -0,0 +1,527 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Concurrent;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Reflection;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [GlobalSemanticRuleOrder(GlobalSemanticRuleOrder.MarkReadonlyFieldsRule)]\n+    internal sealed class MarkReadonlyFieldsRule : IGlobalSemanticFormattingRule\n+    {\n+        private readonly SemaphoreSlim _processUsagesLock = new SemaphoreSlim(1, 1);\n+        private ConcurrentDictionary<IFieldSymbol, bool> _unwrittenWritableFields;\n+\n+        public bool SupportsLanguage(string languageName)\n+        {\n+            return languageName == LanguageNames.CSharp;\n+        }\n+\n+        public async Task<Solution> ProcessAsync(\n+            Document document,\n+            SyntaxNode syntaxRoot,\n+            CancellationToken cancellationToken)\n+        {\n+            if (_unwrittenWritableFields == null)\n+            {\n+                using (await SemaphoreLock.GetAsync(_processUsagesLock))\n+                {\n+                    // A global analysis must be run before we can do any actual processing, because a field might\n+                    // be written in a different file than it is declared (even private ones may be split between\n+                    // partial classes).\n+\n+                    // It's also quite expensive, which is why it's being done inside the lock, so\n+                    // that the entire solution is not processed for each input file individually\n+                    if (_unwrittenWritableFields == null)\n+                    {\n+                        List<Document> allDocuments =\n+                            document.Project.Solution.Projects.SelectMany(p => p.Documents).ToList();\n+                        HashSet<IFieldSymbol>[] fields = await Task.WhenAll(\n+                            allDocuments\n+                                .AsParallel()\n+                                .Select(\n+                                    doc => WritableFieldScanner.Scan(doc, cancellationToken)));\n+\n+                        var writableFields = new ConcurrentDictionary<IFieldSymbol, bool>(\n+                            fields.SelectMany(s => s).Select(f => new KeyValuePair<IFieldSymbol, bool>(f, true)));\n+\n+                        await Task.WhenAll(\n+                            allDocuments.AsParallel()\n+                                .Select(\n+                                    doc => WriteUsagesScanner.RemoveWrittenFields(\n+                                        doc,\n+                                        writableFields,\n+                                        cancellationToken)));\n+\n+                        _unwrittenWritableFields = writableFields;\n+                    }\n+                }\n+            }\n+\n+            SyntaxNode root = await document.GetSyntaxRootAsync(cancellationToken);\n+            var application = new ReadonlyRewriter(\n+                _unwrittenWritableFields,\n+                await document.GetSemanticModelAsync(cancellationToken));\n+            return document.Project.Solution.WithDocumentSyntaxRoot(document.Id, application.Visit(root));\n+        }\n+\n+        /// <summary>\n+        /// This is the first walker, which looks for fields that are valid to transform to readonly.\n+        /// It returns any private or internal fields that are not already marked readonly, and returns a hash set\n+        /// of them. Internal fields are only considered if the \"InternalsVisibleTo\" is a reference to something\n+        /// in the same solution, since it's possible to analyse the global usages of it. Otherwise there is an\n+        /// assembly we don't have access to that can see that field, so we have to treat is as public.\n+        /// </summary>\n+        private sealed class WritableFieldScanner : CSharpSyntaxWalker\n+        {\n+            private static readonly HashSet<string> SerializingFieldAttributes = new HashSet<string>\n+            {\n+                \"System.ComponentModel.Composition.ImportAttribute\",\n+                \"System.ComponentModel.Composition.ImportManyAttribute\",\n+            };\n+\n+            private readonly HashSet<IFieldSymbol> _fields = new HashSet<IFieldSymbol>();\n+            private readonly ISymbol _internalsVisibleToAttribute;\n+            private readonly SemanticModel _model;\n+            private readonly Solution _solution;\n+\n+            private readonly Dictionary<IAssemblySymbol, bool> _visibleOutsideAsembly =\n+                new Dictionary<IAssemblySymbol, bool>();\n+\n+            private WritableFieldScanner(SemanticModel model, Solution solution)\n+            {\n+                _model = model;\n+                _solution = solution;\n+                _internalsVisibleToAttribute =\n+                    model.Compilation.GetTypeByMetadataName(\n+                        \"System.Runtime.CompilerServices.InternalsVisibleToAttribute\");\n+            }\n+\n+            public static async Task<HashSet<IFieldSymbol>> Scan(\n+                Document document,\n+                CancellationToken cancellationToken)\n+            {\n+                var scanner = new WritableFieldScanner(\n+                    await document.GetSemanticModelAsync(cancellationToken),\n+                    document.Project.Solution);\n+                scanner.Visit(await document.GetSyntaxRootAsync(cancellationToken));\n+                return scanner._fields;\n+            }\n+\n+            public override void VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                var fieldSymbol = (IFieldSymbol)_model.GetDeclaredSymbol(node.Declaration.Variables[0]);\n+\n+                if (fieldSymbol.IsReadOnly || fieldSymbol.IsConst || fieldSymbol.IsExtern)\n+                {\n+                    return;\n+                }\n+\n+                if (IsSymbolVisibleOutsideSolution(fieldSymbol, _internalsVisibleToAttribute, _solution))\n+                {\n+                    return;\n+                }\n+\n+                if (IsFieldSerializableByAttributes(fieldSymbol))\n+                {\n+                    return;\n+                }\n+\n+                _fields.Add(fieldSymbol);\n+            }\n+\n+            private bool IsSymbolVisibleOutsideSolution(\n+                ISymbol symbol,\n+                ISymbol internalsVisibleToAttribute,\n+                Solution solution)\n+            {\n+                Accessibility accessibility = symbol.DeclaredAccessibility;\n+\n+                if (accessibility == Accessibility.NotApplicable)\n+                {\n+                    if (symbol.Kind == SymbolKind.Field)\n+                    {\n+                        accessibility = Accessibility.Private;\n+                    }\n+                    else\n+                    {\n+                        accessibility = Accessibility.Internal;\n+                    }\n+                }\n+\n+                if (accessibility == Accessibility.Public || accessibility == Accessibility.Protected)\n+                {\n+                    if (symbol.ContainingType != null)\n+                    {\n+                        // a public symbol in a non-visible class isn't visible\n+                        return IsSymbolVisibleOutsideSolution(\n+                            symbol.ContainingType,\n+                            internalsVisibleToAttribute,\n+                            solution);\n+                    }\n+\n+                    // They are public, we are going to skip them.\n+                    return true;\n+                }\n+\n+                if (accessibility > Accessibility.Private)\n+                {\n+                    bool visibleOutsideSolution = IsVisibleOutsideSolution(\n+                        symbol,\n+                        internalsVisibleToAttribute,\n+                        solution);\n+\n+                    if (visibleOutsideSolution)\n+                    {\n+                        if (symbol.ContainingType != null)\n+                        {\n+                            // a visible symbol in a non-visible class isn't visible\n+                            return IsSymbolVisibleOutsideSolution(\n+                                symbol.ContainingType,\n+                                internalsVisibleToAttribute,\n+                                solution);\n+                        }\n+\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private bool IsVisibleOutsideSolution(\n+                ISymbol field,\n+                ISymbol internalsVisibleToAttribute,\n+                Solution solution)\n+            {\n+                bool isVisible;\n+                IAssemblySymbol assembly = field.ContainingAssembly;\n+                if (_visibleOutsideAsembly.TryGetValue(assembly, out isVisible))\n+                {\n+                    return isVisible;\n+                }\n+\n+                foreach (AttributeData internalsVisibleInstance in assembly.GetAttributes()\n+                    .Where(a => Equals(a.AttributeClass, internalsVisibleToAttribute)))\n+                {\n+                    if (internalsVisibleInstance.ConstructorArguments.Length != 1)\n+                    {\n+                        // Unexpected number of agruments, isn't really the correct type.\n+                        continue;\n+                    }\n+\n+                    TypedConstant assemblyNameArgument = internalsVisibleInstance.ConstructorArguments[0];\n+                    if (assemblyNameArgument.Kind != TypedConstantKind.Primitive)\n+                    {\n+                        // The first argument wasn't a primitave value, isn't really the correct type\n+                        continue;\n+                    }\n+\n+                    string assemblyName = assemblyNameArgument.Value as string;\n+                    if (String.IsNullOrEmpty(assemblyName))\n+                    {\n+                        // The first argument wasn't a string, isn't really the correct type\n+                        continue;\n+                    }\n+\n+                    if (!solution.Projects.Any(p => ProjectHasName(p, assemblyName)))", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/MarkReadonlyFieldsRule.cs", "position": null, "original_position": 239, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "I don't think we can make this check safely.  It would cause different behavior for the formatter when it was run on a project vs. a solution.  Generally the two should be equal. \n", "created_at": "2015-04-13T21:55:43Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283377", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283377"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283377"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283409", "pull_request_review_id": null, "id": 28283409, "diff_hunk": "@@ -0,0 +1,527 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Concurrent;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Reflection;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [GlobalSemanticRuleOrder(GlobalSemanticRuleOrder.MarkReadonlyFieldsRule)]\n+    internal sealed class MarkReadonlyFieldsRule : IGlobalSemanticFormattingRule\n+    {\n+        private readonly SemaphoreSlim _processUsagesLock = new SemaphoreSlim(1, 1);\n+        private ConcurrentDictionary<IFieldSymbol, bool> _unwrittenWritableFields;\n+\n+        public bool SupportsLanguage(string languageName)\n+        {\n+            return languageName == LanguageNames.CSharp;\n+        }\n+\n+        public async Task<Solution> ProcessAsync(\n+            Document document,\n+            SyntaxNode syntaxRoot,\n+            CancellationToken cancellationToken)\n+        {\n+            if (_unwrittenWritableFields == null)\n+            {\n+                using (await SemaphoreLock.GetAsync(_processUsagesLock))\n+                {\n+                    // A global analysis must be run before we can do any actual processing, because a field might\n+                    // be written in a different file than it is declared (even private ones may be split between\n+                    // partial classes).\n+\n+                    // It's also quite expensive, which is why it's being done inside the lock, so\n+                    // that the entire solution is not processed for each input file individually\n+                    if (_unwrittenWritableFields == null)\n+                    {\n+                        List<Document> allDocuments =\n+                            document.Project.Solution.Projects.SelectMany(p => p.Documents).ToList();\n+                        HashSet<IFieldSymbol>[] fields = await Task.WhenAll(\n+                            allDocuments\n+                                .AsParallel()\n+                                .Select(\n+                                    doc => WritableFieldScanner.Scan(doc, cancellationToken)));\n+\n+                        var writableFields = new ConcurrentDictionary<IFieldSymbol, bool>(\n+                            fields.SelectMany(s => s).Select(f => new KeyValuePair<IFieldSymbol, bool>(f, true)));\n+\n+                        await Task.WhenAll(\n+                            allDocuments.AsParallel()\n+                                .Select(\n+                                    doc => WriteUsagesScanner.RemoveWrittenFields(\n+                                        doc,\n+                                        writableFields,\n+                                        cancellationToken)));\n+\n+                        _unwrittenWritableFields = writableFields;\n+                    }\n+                }\n+            }\n+\n+            SyntaxNode root = await document.GetSyntaxRootAsync(cancellationToken);\n+            var application = new ReadonlyRewriter(\n+                _unwrittenWritableFields,\n+                await document.GetSemanticModelAsync(cancellationToken));\n+            return document.Project.Solution.WithDocumentSyntaxRoot(document.Id, application.Visit(root));\n+        }\n+\n+        /// <summary>\n+        /// This is the first walker, which looks for fields that are valid to transform to readonly.\n+        /// It returns any private or internal fields that are not already marked readonly, and returns a hash set\n+        /// of them. Internal fields are only considered if the \"InternalsVisibleTo\" is a reference to something\n+        /// in the same solution, since it's possible to analyse the global usages of it. Otherwise there is an\n+        /// assembly we don't have access to that can see that field, so we have to treat is as public.\n+        /// </summary>\n+        private sealed class WritableFieldScanner : CSharpSyntaxWalker\n+        {\n+            private static readonly HashSet<string> SerializingFieldAttributes = new HashSet<string>\n+            {\n+                \"System.ComponentModel.Composition.ImportAttribute\",\n+                \"System.ComponentModel.Composition.ImportManyAttribute\",\n+            };\n+\n+            private readonly HashSet<IFieldSymbol> _fields = new HashSet<IFieldSymbol>();\n+            private readonly ISymbol _internalsVisibleToAttribute;\n+            private readonly SemanticModel _model;\n+            private readonly Solution _solution;\n+\n+            private readonly Dictionary<IAssemblySymbol, bool> _visibleOutsideAsembly =\n+                new Dictionary<IAssemblySymbol, bool>();\n+\n+            private WritableFieldScanner(SemanticModel model, Solution solution)\n+            {\n+                _model = model;\n+                _solution = solution;\n+                _internalsVisibleToAttribute =\n+                    model.Compilation.GetTypeByMetadataName(\n+                        \"System.Runtime.CompilerServices.InternalsVisibleToAttribute\");\n+            }\n+\n+            public static async Task<HashSet<IFieldSymbol>> Scan(\n+                Document document,\n+                CancellationToken cancellationToken)\n+            {\n+                var scanner = new WritableFieldScanner(\n+                    await document.GetSemanticModelAsync(cancellationToken),\n+                    document.Project.Solution);\n+                scanner.Visit(await document.GetSyntaxRootAsync(cancellationToken));\n+                return scanner._fields;\n+            }\n+\n+            public override void VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                var fieldSymbol = (IFieldSymbol)_model.GetDeclaredSymbol(node.Declaration.Variables[0]);\n+\n+                if (fieldSymbol.IsReadOnly || fieldSymbol.IsConst || fieldSymbol.IsExtern)\n+                {\n+                    return;\n+                }\n+\n+                if (IsSymbolVisibleOutsideSolution(fieldSymbol, _internalsVisibleToAttribute, _solution))\n+                {\n+                    return;\n+                }\n+\n+                if (IsFieldSerializableByAttributes(fieldSymbol))\n+                {\n+                    return;\n+                }\n+\n+                _fields.Add(fieldSymbol);\n+            }\n+\n+            private bool IsSymbolVisibleOutsideSolution(\n+                ISymbol symbol,\n+                ISymbol internalsVisibleToAttribute,\n+                Solution solution)\n+            {\n+                Accessibility accessibility = symbol.DeclaredAccessibility;\n+\n+                if (accessibility == Accessibility.NotApplicable)\n+                {\n+                    if (symbol.Kind == SymbolKind.Field)\n+                    {\n+                        accessibility = Accessibility.Private;\n+                    }\n+                    else\n+                    {\n+                        accessibility = Accessibility.Internal;\n+                    }\n+                }\n+\n+                if (accessibility == Accessibility.Public || accessibility == Accessibility.Protected)\n+                {\n+                    if (symbol.ContainingType != null)\n+                    {\n+                        // a public symbol in a non-visible class isn't visible\n+                        return IsSymbolVisibleOutsideSolution(\n+                            symbol.ContainingType,\n+                            internalsVisibleToAttribute,\n+                            solution);\n+                    }\n+\n+                    // They are public, we are going to skip them.\n+                    return true;\n+                }\n+\n+                if (accessibility > Accessibility.Private)\n+                {\n+                    bool visibleOutsideSolution = IsVisibleOutsideSolution(\n+                        symbol,\n+                        internalsVisibleToAttribute,\n+                        solution);\n+\n+                    if (visibleOutsideSolution)\n+                    {\n+                        if (symbol.ContainingType != null)\n+                        {\n+                            // a visible symbol in a non-visible class isn't visible\n+                            return IsSymbolVisibleOutsideSolution(\n+                                symbol.ContainingType,\n+                                internalsVisibleToAttribute,\n+                                solution);\n+                        }\n+\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private bool IsVisibleOutsideSolution(\n+                ISymbol field,\n+                ISymbol internalsVisibleToAttribute,\n+                Solution solution)\n+            {\n+                bool isVisible;\n+                IAssemblySymbol assembly = field.ContainingAssembly;\n+                if (_visibleOutsideAsembly.TryGetValue(assembly, out isVisible))\n+                {\n+                    return isVisible;\n+                }\n+\n+                foreach (AttributeData internalsVisibleInstance in assembly.GetAttributes()\n+                    .Where(a => Equals(a.AttributeClass, internalsVisibleToAttribute)))\n+                {\n+                    if (internalsVisibleInstance.ConstructorArguments.Length != 1)\n+                    {\n+                        // Unexpected number of agruments, isn't really the correct type.\n+                        continue;\n+                    }\n+\n+                    TypedConstant assemblyNameArgument = internalsVisibleInstance.ConstructorArguments[0];\n+                    if (assemblyNameArgument.Kind != TypedConstantKind.Primitive)\n+                    {\n+                        // The first argument wasn't a primitave value, isn't really the correct type\n+                        continue;\n+                    }\n+\n+                    string assemblyName = assemblyNameArgument.Value as string;\n+                    if (String.IsNullOrEmpty(assemblyName))\n+                    {\n+                        // The first argument wasn't a string, isn't really the correct type\n+                        continue;\n+                    }\n+\n+                    if (!solution.Projects.Any(p => ProjectHasName(p, assemblyName)))", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/MarkReadonlyFieldsRule.cs", "position": null, "original_position": 239, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "I would just simplify to if it has internals visible to then it's visible. \n", "created_at": "2015-04-13T21:56:06Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283409", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283409"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283409"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283415", "pull_request_review_id": null, "id": 28283415, "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.CodeAnalysis;\n+\n+namespace Microsoft.DotNet.CodeFormatting\n+{\n+    /// <summary>\n+    /// Commonly used name functions\n+    /// </summary>\n+    internal static class NameHelper\n+    {\n+        /// <summary>\n+        /// Get the full name of a symbol. So a field might look like\n+        /// \"OuterNamespace.Inner.ClassName.FieldName\"\n+        /// </summary>\n+        /// <param name=\"symbol\">symbol to get name of</param>\n+        /// <returns>Full display name for a symbol</returns>\n+        internal static string GetFullName(ISymbol symbol)\n+        {\n+            return GetFullName(symbol.ContainingType) + \".\" + symbol.Name;", "path": "src/Microsoft.DotNet.CodeFormatting/NameHelper.cs", "position": 21, "original_position": 21, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "body": "Indeed so. Even though it\u2019s only sort of a helper function internally (these names are only ever used to track down a type for a check), I\u2019m going to update it to use the +, since it\u2019s correct.\n", "created_at": "2015-04-13T21:56:09Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283415", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283415"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283415"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283468", "pull_request_review_id": null, "id": 28283468, "diff_hunk": "@@ -68,6 +68,7 @@\n       <SpecificVersion>False</SpecificVersion>\n       <HintPath>..\\packages\\System.Collections.Immutable.1.1.33-beta\\lib\\portable-net45+win8+wp8+wpa81\\System.Collections.Immutable.dll</HintPath>\n     </Reference>\n+    <Reference Include=\"System.ComponentModel.Composition\" />", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Microsoft.DotNet.CodeFormatting.Tests.csproj", "position": 4, "original_position": 4, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Most of your attribute checking seems to be by name vs. by type.  Given that is this reference needed anymore? \n", "created_at": "2015-04-13T21:56:56Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283468", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283468"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283468"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283664", "pull_request_review_id": null, "id": 28283664, "diff_hunk": "@@ -68,6 +68,7 @@\n       <SpecificVersion>False</SpecificVersion>\n       <HintPath>..\\packages\\System.Collections.Immutable.1.1.33-beta\\lib\\portable-net45+win8+wp8+wpa81\\System.Collections.Immutable.dll</HintPath>\n     </Reference>\n+    <Reference Include=\"System.ComponentModel.Composition\" />", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Microsoft.DotNet.CodeFormatting.Tests.csproj", "position": 4, "original_position": 4, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "body": "It\u2019s used because I need to be able to compile the test input code. I could try and go scrape the assembly off the computer running the tests somehow, but the easiest way (and most reliable I can figure out) is just to add a reference to the tests, and then use the loaded assembly as a MetadataReference. Without the assembly, the type won\u2019t get loaded, then I can\u2019t reliably get the full name of it.\n", "created_at": "2015-04-13T21:59:10Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283664", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283664"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28283664"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28283664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284034", "pull_request_review_id": null, "id": 28284034, "diff_hunk": "@@ -0,0 +1,527 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Concurrent;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Reflection;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [GlobalSemanticRuleOrder(GlobalSemanticRuleOrder.MarkReadonlyFieldsRule)]\n+    internal sealed class MarkReadonlyFieldsRule : IGlobalSemanticFormattingRule\n+    {\n+        private readonly SemaphoreSlim _processUsagesLock = new SemaphoreSlim(1, 1);\n+        private ConcurrentDictionary<IFieldSymbol, bool> _unwrittenWritableFields;\n+\n+        public bool SupportsLanguage(string languageName)\n+        {\n+            return languageName == LanguageNames.CSharp;\n+        }\n+\n+        public async Task<Solution> ProcessAsync(\n+            Document document,\n+            SyntaxNode syntaxRoot,\n+            CancellationToken cancellationToken)\n+        {\n+            if (_unwrittenWritableFields == null)\n+            {\n+                using (await SemaphoreLock.GetAsync(_processUsagesLock))\n+                {\n+                    // A global analysis must be run before we can do any actual processing, because a field might\n+                    // be written in a different file than it is declared (even private ones may be split between\n+                    // partial classes).\n+\n+                    // It's also quite expensive, which is why it's being done inside the lock, so\n+                    // that the entire solution is not processed for each input file individually\n+                    if (_unwrittenWritableFields == null)\n+                    {\n+                        List<Document> allDocuments =\n+                            document.Project.Solution.Projects.SelectMany(p => p.Documents).ToList();\n+                        HashSet<IFieldSymbol>[] fields = await Task.WhenAll(\n+                            allDocuments\n+                                .AsParallel()\n+                                .Select(\n+                                    doc => WritableFieldScanner.Scan(doc, cancellationToken)));\n+\n+                        var writableFields = new ConcurrentDictionary<IFieldSymbol, bool>(\n+                            fields.SelectMany(s => s).Select(f => new KeyValuePair<IFieldSymbol, bool>(f, true)));\n+\n+                        await Task.WhenAll(\n+                            allDocuments.AsParallel()\n+                                .Select(\n+                                    doc => WriteUsagesScanner.RemoveWrittenFields(\n+                                        doc,\n+                                        writableFields,\n+                                        cancellationToken)));\n+\n+                        _unwrittenWritableFields = writableFields;\n+                    }\n+                }\n+            }\n+\n+            SyntaxNode root = await document.GetSyntaxRootAsync(cancellationToken);\n+            var application = new ReadonlyRewriter(\n+                _unwrittenWritableFields,\n+                await document.GetSemanticModelAsync(cancellationToken));\n+            return document.Project.Solution.WithDocumentSyntaxRoot(document.Id, application.Visit(root));\n+        }\n+\n+        /// <summary>\n+        /// This is the first walker, which looks for fields that are valid to transform to readonly.\n+        /// It returns any private or internal fields that are not already marked readonly, and returns a hash set\n+        /// of them. Internal fields are only considered if the \"InternalsVisibleTo\" is a reference to something\n+        /// in the same solution, since it's possible to analyse the global usages of it. Otherwise there is an\n+        /// assembly we don't have access to that can see that field, so we have to treat is as public.\n+        /// </summary>\n+        private sealed class WritableFieldScanner : CSharpSyntaxWalker\n+        {\n+            private static readonly HashSet<string> SerializingFieldAttributes = new HashSet<string>\n+            {\n+                \"System.ComponentModel.Composition.ImportAttribute\",\n+                \"System.ComponentModel.Composition.ImportManyAttribute\",\n+            };\n+\n+            private readonly HashSet<IFieldSymbol> _fields = new HashSet<IFieldSymbol>();\n+            private readonly ISymbol _internalsVisibleToAttribute;\n+            private readonly SemanticModel _model;\n+            private readonly Solution _solution;\n+\n+            private readonly Dictionary<IAssemblySymbol, bool> _visibleOutsideAsembly =\n+                new Dictionary<IAssemblySymbol, bool>();\n+\n+            private WritableFieldScanner(SemanticModel model, Solution solution)\n+            {\n+                _model = model;\n+                _solution = solution;\n+                _internalsVisibleToAttribute =\n+                    model.Compilation.GetTypeByMetadataName(\n+                        \"System.Runtime.CompilerServices.InternalsVisibleToAttribute\");\n+            }\n+\n+            public static async Task<HashSet<IFieldSymbol>> Scan(\n+                Document document,\n+                CancellationToken cancellationToken)\n+            {\n+                var scanner = new WritableFieldScanner(\n+                    await document.GetSemanticModelAsync(cancellationToken),\n+                    document.Project.Solution);\n+                scanner.Visit(await document.GetSyntaxRootAsync(cancellationToken));\n+                return scanner._fields;\n+            }\n+\n+            public override void VisitFieldDeclaration(FieldDeclarationSyntax node)\n+            {\n+                var fieldSymbol = (IFieldSymbol)_model.GetDeclaredSymbol(node.Declaration.Variables[0]);\n+\n+                if (fieldSymbol.IsReadOnly || fieldSymbol.IsConst || fieldSymbol.IsExtern)\n+                {\n+                    return;\n+                }\n+\n+                if (IsSymbolVisibleOutsideSolution(fieldSymbol, _internalsVisibleToAttribute, _solution))\n+                {\n+                    return;\n+                }\n+\n+                if (IsFieldSerializableByAttributes(fieldSymbol))\n+                {\n+                    return;\n+                }\n+\n+                _fields.Add(fieldSymbol);\n+            }\n+\n+            private bool IsSymbolVisibleOutsideSolution(\n+                ISymbol symbol,\n+                ISymbol internalsVisibleToAttribute,\n+                Solution solution)\n+            {\n+                Accessibility accessibility = symbol.DeclaredAccessibility;\n+\n+                if (accessibility == Accessibility.NotApplicable)\n+                {\n+                    if (symbol.Kind == SymbolKind.Field)\n+                    {\n+                        accessibility = Accessibility.Private;\n+                    }\n+                    else\n+                    {\n+                        accessibility = Accessibility.Internal;\n+                    }\n+                }\n+\n+                if (accessibility == Accessibility.Public || accessibility == Accessibility.Protected)\n+                {\n+                    if (symbol.ContainingType != null)\n+                    {\n+                        // a public symbol in a non-visible class isn't visible\n+                        return IsSymbolVisibleOutsideSolution(\n+                            symbol.ContainingType,\n+                            internalsVisibleToAttribute,\n+                            solution);\n+                    }\n+\n+                    // They are public, we are going to skip them.\n+                    return true;\n+                }\n+\n+                if (accessibility > Accessibility.Private)\n+                {\n+                    bool visibleOutsideSolution = IsVisibleOutsideSolution(\n+                        symbol,\n+                        internalsVisibleToAttribute,\n+                        solution);\n+\n+                    if (visibleOutsideSolution)\n+                    {\n+                        if (symbol.ContainingType != null)\n+                        {\n+                            // a visible symbol in a non-visible class isn't visible\n+                            return IsSymbolVisibleOutsideSolution(\n+                                symbol.ContainingType,\n+                                internalsVisibleToAttribute,\n+                                solution);\n+                        }\n+\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n+            }\n+\n+            private bool IsVisibleOutsideSolution(\n+                ISymbol field,\n+                ISymbol internalsVisibleToAttribute,\n+                Solution solution)\n+            {\n+                bool isVisible;\n+                IAssemblySymbol assembly = field.ContainingAssembly;\n+                if (_visibleOutsideAsembly.TryGetValue(assembly, out isVisible))\n+                {\n+                    return isVisible;\n+                }\n+\n+                foreach (AttributeData internalsVisibleInstance in assembly.GetAttributes()\n+                    .Where(a => Equals(a.AttributeClass, internalsVisibleToAttribute)))\n+                {\n+                    if (internalsVisibleInstance.ConstructorArguments.Length != 1)\n+                    {\n+                        // Unexpected number of agruments, isn't really the correct type.\n+                        continue;\n+                    }\n+\n+                    TypedConstant assemblyNameArgument = internalsVisibleInstance.ConstructorArguments[0];\n+                    if (assemblyNameArgument.Kind != TypedConstantKind.Primitive)\n+                    {\n+                        // The first argument wasn't a primitave value, isn't really the correct type\n+                        continue;\n+                    }\n+\n+                    string assemblyName = assemblyNameArgument.Value as string;\n+                    if (String.IsNullOrEmpty(assemblyName))\n+                    {\n+                        // The first argument wasn't a string, isn't really the correct type\n+                        continue;\n+                    }\n+\n+                    if (!solution.Projects.Any(p => ProjectHasName(p, assemblyName)))", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/MarkReadonlyFieldsRule.cs", "position": null, "original_position": 239, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "body": "I worry that anything that has unit tests is going to expose their internals to the test assembly, which would disable readonly for any of the internal fields.  Running on the solution that contained both of them would solve the problem.  Running on the solution will mark more things (correctly) as readonly than running it only on the project.\n\nHowever, it looks like most of the framework doesn't actually expose many of it's internals, so I'll remove the solution level check for now.  I'll still have the commit in my fork if we want to add it back later.\n", "created_at": "2015-04-13T22:03:49Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28284034", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284034"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28284034"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284167", "pull_request_review_id": null, "id": 28284167, "diff_hunk": "@@ -0,0 +1,527 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Concurrent;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Reflection;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [GlobalSemanticRuleOrder(GlobalSemanticRuleOrder.MarkReadonlyFieldsRule)]\n+    internal sealed class MarkReadonlyFieldsRule : IGlobalSemanticFormattingRule\n+    {\n+        private readonly SemaphoreSlim _processUsagesLock = new SemaphoreSlim(1, 1);\n+        private ConcurrentDictionary<IFieldSymbol, bool> _unwrittenWritableFields;\n+\n+        public bool SupportsLanguage(string languageName)\n+        {\n+            return languageName == LanguageNames.CSharp;\n+        }\n+\n+        public async Task<Solution> ProcessAsync(\n+            Document document,\n+            SyntaxNode syntaxRoot,\n+            CancellationToken cancellationToken)\n+        {\n+            if (_unwrittenWritableFields == null)\n+            {\n+                using (await SemaphoreLock.GetAsync(_processUsagesLock))", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/MarkReadonlyFieldsRule.cs", "position": 38, "original_position": 39, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "This part makes me nervous.  The code formatter is optimized for two specific scenarios:\n1. For conforming code do as little as possible.\n2. For non-conforming code clean up the code as fast as possible\n\nThe first issue has higher priority than the second.  The logic being we want the tool to be fast enough that it could be run essentially on build.  \n\nThis particular check though does seem fairly expensive as you noted.  I'm worried about the perf impact it's going to have on clean runs of the tool. \n\nOther rules like the private field naming have the same problem.  It's mitigated by delaying the expensive checks by first doing a lot of inexpensive ones.  I'm trying to brainstorm ways that the same could be done here. \n\nGoing to run this on Roslyn later on to get a sense of the true impact.  Maybe it's not that bad and I'm being over paranoid. \n", "created_at": "2015-04-13T22:05:52Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28284167", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284167"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28284167"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284655", "pull_request_review_id": null, "id": 28284655, "diff_hunk": "@@ -0,0 +1,527 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Concurrent;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Reflection;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Rules\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [GlobalSemanticRuleOrder(GlobalSemanticRuleOrder.MarkReadonlyFieldsRule)]\n+    internal sealed class MarkReadonlyFieldsRule : IGlobalSemanticFormattingRule\n+    {\n+        private readonly SemaphoreSlim _processUsagesLock = new SemaphoreSlim(1, 1);\n+        private ConcurrentDictionary<IFieldSymbol, bool> _unwrittenWritableFields;\n+\n+        public bool SupportsLanguage(string languageName)\n+        {\n+            return languageName == LanguageNames.CSharp;\n+        }\n+\n+        public async Task<Solution> ProcessAsync(\n+            Document document,\n+            SyntaxNode syntaxRoot,\n+            CancellationToken cancellationToken)\n+        {\n+            if (_unwrittenWritableFields == null)\n+            {\n+                using (await SemaphoreLock.GetAsync(_processUsagesLock))", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/MarkReadonlyFieldsRule.cs", "position": 38, "original_position": 39, "commit_id": "e1fe896161bf48bdfa83ba52feaa92c9eb6904d3", "original_commit_id": "011326bf944ec310dbae54e1a93cde4ee275b473", "user": {"login": "ChadNedzlek", "id": 11790765, "avatar_url": "https://avatars2.githubusercontent.com/u/11790765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadNedzlek", "html_url": "https://github.com/ChadNedzlek", "followers_url": "https://api.github.com/users/ChadNedzlek/followers", "following_url": "https://api.github.com/users/ChadNedzlek/following{/other_user}", "gists_url": "https://api.github.com/users/ChadNedzlek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadNedzlek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadNedzlek/subscriptions", "organizations_url": "https://api.github.com/users/ChadNedzlek/orgs", "repos_url": "https://api.github.com/users/ChadNedzlek/repos", "events_url": "https://api.github.com/users/ChadNedzlek/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadNedzlek/received_events", "type": "User", "site_admin": false}, "body": "I can add a small optimization if the ConcurrentBag has a size of zero; since that would mean the code was conforming.  Then we don't actually have to rewrite anything, so at least all of the third walk could be skipped.  I'm not sure how to avoid the first two walks to actually tell if the code is conforming, though. The second could be skipped if there were no writable fields anywhere in the input, but that seems highly unlikely.\n", "created_at": "2015-04-13T22:13:13Z", "updated_at": "2015-04-15T23:10:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28284655", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/109", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284655"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/109#discussion_r28284655"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/109"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/28284655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34593611", "pull_request_review_id": null, "id": 34593611, "diff_hunk": "@@ -12,7 +12,7 @@ namespace Microsoft.DotNet.CodeFormatting.Rules\n     /// <summary>\n     /// This will ensure that using directives are placed outside of the namespace.\n     /// </summary>\n-    [SyntaxRule(Name = UsingLocationRule.Name, Description = UsingLocationRule.Description, Order = SyntaxRuleOrder.UsingLocationFormattingRule)]\n+    [SyntaxRule(Name = UsingLocationRule.Name, Description = UsingLocationRule.Description, Order = SyntaxRuleOrder.UsingLocationFormattingRule, DefaultRule = false)]", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/UsingLocationRule.cs", "position": 5, "original_position": 5, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "a921785e96d76556714eee88a20787b9a95bcc6e", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "When I was cherry-picking the four commits in this PR from another local branch onto my local anfix branch, this line came up as a conflict, and I chose the version with DefaultRule=false. It looks like that was wrong and that I had no reason to change this file.\n", "created_at": "2015-07-14T17:17:21Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34593611", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34593611"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34593611"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34593611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908458", "pull_request_review_id": null, "id": 34908458, "diff_hunk": "@@ -32,6 +32,18 @@ public sealed class CommandLineOptions\n             verbose: false,\n             useAnalyzers: false);\n \n+        public static readonly CommandLineOptions ListAnalyzers = new CommandLineOptions(", "path": "src/CodeFormatter/CommandLineParser.cs", "position": 4, "original_position": 4, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "A new \"canned\" set of command line options to support the newly added /analyzers option. This lists the available analyzers, by analogy to /rules, which lists the available rules. Actually what it really lists is the available diagnostics, so maybe it should be \"/diagnostics\" instead. Let me know if you prefer that.\n", "created_at": "2015-07-17T16:54:38Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34908458", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908458"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34908458"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908593", "pull_request_review_id": null, "id": 34908593, "diff_hunk": "@@ -12,10 +12,31 @@ public abstract class AnalyzerFixerTestBase : CodeFormattingTestBase\n     { \n         private IFormattingEngine _engine; \n \n-        protected AnalyzerFixerTestBase(IFormattingEngine engine)", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/AnalyzerFixerTestBase.cs", "position": 4, "original_position": 4, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Previously, I had each derived class create an engine and pass it down to the base class through this ctor. But the derived classes don't need the engine, so let the base class take care of it. This simplifies the derived classes.\n", "created_at": "2015-07-17T16:56:09Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34908593", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908593"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34908593"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908889", "pull_request_review_id": null, "id": 34908889, "diff_hunk": "@@ -12,10 +12,31 @@ public abstract class AnalyzerFixerTestBase : CodeFormattingTestBase\n     { \n         private IFormattingEngine _engine; \n \n-        protected AnalyzerFixerTestBase(IFormattingEngine engine)\n-        { \n-            _engine = engine; \n-        } \n+        private IFormattingEngine Engine\n+        {\n+            get\n+            {\n+                if (_engine == null)\n+                {\n+                    _engine = FormattingEngine.Create();\n+                }\n+\n+                return _engine;\n+            }\n+        }\n+\n+        protected void DisableAllDiagnostics()", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/AnalyzerFixerTestBase.cs", "position": 21, "original_position": 21, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Methods to enable derived classes to enable only the one diagnostic they are testing. The rule-based test classes didn't need this mechanism because they worked by explicitly calling ProcessAsync on the single rule they were testing. But the analyzer-based tests work by calling (ultimately) CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync -- so I have to make sure that only the desired analyzer gets into the CompilationWithAnalyzers.\n", "created_at": "2015-07-17T16:59:38Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34908889", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908889"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34908889"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908966", "pull_request_review_id": null, "id": 34908966, "diff_hunk": "@@ -97,73 +93,4 @@ protected void Verify(string source, string expected, bool runFormatter = true,\n         }\n \n     }\n-\n-    // TODO: Pull RuleTestBase and its three derived classes into separate file RuleTestBase.cs.", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/CodeFormattingTestBase.cs", "position": 20, "original_position": 20, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "The rest of this file is pulled into a separate file RuleTestBase.cs. No other code change (except to remove now-unused usings).\n", "created_at": "2015-07-17T17:00:28Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34908966", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908966"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34908966"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34908966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909016", "pull_request_review_id": null, "id": 34909016, "diff_hunk": "@@ -15,17 +16,16 @@ namespace Microsoft.DotNet.CodeFormatting.Analyzers\n     [DiagnosticAnalyzer(LanguageNames.CSharp)]\n     public class ExplicitThisAnalyzer : DiagnosticAnalyzer\n     {\n-        internal static DiagnosticDescriptor rule = new DiagnosticDescriptor(\"DNS0001\",", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitThisAnalyzer.cs", "position": 12, "original_position": 12, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Make the string available to the fixer so it doesn't have to repeat the hard-coded strings.\n", "created_at": "2015-07-17T17:01:06Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909016", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909016"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909016"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909040", "pull_request_review_id": null, "id": 34909040, "diff_hunk": "@@ -15,17 +16,16 @@ namespace Microsoft.DotNet.CodeFormatting.Analyzers\n     [DiagnosticAnalyzer(LanguageNames.CSharp)]\n     public class ExplicitThisAnalyzer : DiagnosticAnalyzer\n     {\n-        internal static DiagnosticDescriptor rule = new DiagnosticDescriptor(\"DNS0001\",\n-                                                                             \"Don't use explicit 'this' for private fields\",\n-                                                                             \"Don't use explicit 'this' for private fields\",", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitThisAnalyzer.cs", "position": 14, "original_position": 14, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Move to resources\n", "created_at": "2015-07-17T17:01:21Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909040", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909040"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909040"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909078", "pull_request_review_id": null, "id": 34909078, "diff_hunk": "@@ -39,7 +39,7 @@ public override void Initialize(AnalysisContext context)\n                         node.Expression.Kind() == SyntaxKind.ThisExpression &&\n                         IsPrivateField(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n                     {\n-                        syntaxContext.ReportDiagnostic(Diagnostic.Create(rule, node.GetLocation()));\n+                        syntaxContext.ReportDiagnostic(Diagnostic.Create(rule, node.GetLocation(), node.Name));", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitThisAnalyzer.cs", "position": 39, "original_position": 39, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Make diagnostic more informative.\n", "created_at": "2015-07-17T17:01:41Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909078", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909078"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909078"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909129", "pull_request_review_id": null, "id": 34909129, "diff_hunk": "@@ -24,6 +26,13 @@ public static ImmutableArray<IRuleMetadata> GetFormattingRules()\n             return engine.AllRules;\n         }\n \n+        public static ImmutableArray<DiagnosticDescriptor> GetSupportedDiagnostics()", "path": "src/Microsoft.DotNet.CodeFormatting/FormattingEngine.cs", "position": 13, "original_position": 13, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "This method supports the /analyzers command line option.\n", "created_at": "2015-07-17T17:02:19Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909129", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909129"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909129"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909209", "pull_request_review_id": null, "id": 34909209, "diff_hunk": "@@ -33,8 +33,9 @@ internal sealed partial class FormattingEngineImplementation : IFormattingEngine\n         private readonly IEnumerable<ExportFactory<ILocalSemanticFormattingRule, LocalSemanticRule>> _localSemanticRules;\n         private readonly IEnumerable<ExportFactory<IGlobalSemanticFormattingRule, GlobalSemanticRule>> _globalSemanticRules;\n         private readonly Stopwatch _watch = new Stopwatch();\n-        private readonly Dictionary<string, bool> _ruleMap = new Dictionary<string, bool>(StringComparer.OrdinalIgnoreCase);\n-        private readonly ImmutableDictionary<string, CodeFixProvider> _fixerMap;\n+        private readonly Dictionary<string, bool> _ruleEnabledMap = new Dictionary<string, bool>(StringComparer.OrdinalIgnoreCase);\n+        private readonly Dictionary<string, bool> _diagnosticEnabledMap;\n+        private readonly ImmutableDictionary<string, CodeFixProvider> _diagnosticIdToFixerMap;", "path": "src/Microsoft.DotNet.CodeFormatting/FormattingEngineImplementation.cs", "position": 8, "original_position": 8, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "I did some renaming here. In Sri's code he had a \"fixerMap\" but it served a different purpose than the \"ruleMap\". I renamed all the maps to clarify their purpose.\n", "created_at": "2015-07-17T17:03:05Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909209", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909209"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r34909209"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/34909209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016748", "pull_request_review_id": null, "id": 35016748, "diff_hunk": "@@ -0,0 +1,79 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Formatting;\n+using Microsoft.DotNet.CodeFormatting;\n+using Microsoft.DotNet.CodeFormatting.Tests;\n+\n+public abstract class RuleTestBase : CodeFormattingTestBase", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/RuleTestBase.cs", "position": null, "original_position": 13, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Should have a namespace in this file\n", "created_at": "2015-07-20T16:53:56Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35016748", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016748"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35016748"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016821", "pull_request_review_id": null, "id": 35016821, "diff_hunk": "@@ -0,0 +1,351 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldAnalyzer: DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0002\";\n+        private static DiagnosticDescriptor rule = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.UnwrittenWritableFieldAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.UnwrittenWritableFieldAnalyzer_MessageFormat)),\n+                                                                            \"Usage\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true);\n+\n+        private static readonly SyntaxKind[] compoundAssignmentExpressionKinds =", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldAnalyzer.cs", "position": 32, "original_position": 32, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Private static field should be prefixed with `s_`\n", "created_at": "2015-07-20T16:54:37Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35016821", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016821"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35016821"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016999", "pull_request_review_id": null, "id": 35016999, "diff_hunk": "@@ -0,0 +1,351 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldAnalyzer: DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0002\";\n+        private static DiagnosticDescriptor rule = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.UnwrittenWritableFieldAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.UnwrittenWritableFieldAnalyzer_MessageFormat)),\n+                                                                            \"Usage\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true);\n+\n+        private static readonly SyntaxKind[] compoundAssignmentExpressionKinds =\n+            {\n+                SyntaxKind.SimpleAssignmentExpression,\n+                SyntaxKind.AddAssignmentExpression,\n+                SyntaxKind.AndAssignmentExpression,\n+                SyntaxKind.DivideAssignmentExpression,\n+                SyntaxKind.ExclusiveOrAssignmentExpression,\n+                SyntaxKind.LeftShiftAssignmentExpression,\n+                SyntaxKind.ModuloAssignmentExpression,\n+                SyntaxKind.MultiplyAssignmentExpression,\n+                SyntaxKind.OrAssignmentExpression,\n+                SyntaxKind.RightShiftAssignmentExpression,\n+                SyntaxKind.SubtractAssignmentExpression\n+            };\n+\n+        private ISymbol _internalsVisibleToAttribute;\n+\n+        // The set of fields which it will be safe to mark as readonly, if we discover\n+        // that they are never written to in this solution.\n+        private HashSet<IFieldSymbol> _candidateReadonlyFields;\n+\n+        // The set of fields that are written to in this solution.\n+        private HashSet<IFieldSymbol> _writtenFields;\n+\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => ImmutableArray.Create(rule);\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterCompilationStartAction(OnCompilationStart);\n+        }\n+\n+        private void OnCompilationStart(CompilationStartAnalysisContext context)\n+        {\n+            _candidateReadonlyFields = new HashSet<IFieldSymbol>();\n+            _writtenFields = new HashSet<IFieldSymbol>();\n+\n+            _internalsVisibleToAttribute = context.Compilation.GetTypeByMetadataName(\n+                                                \"System.Runtime.CompilerServices.InternalsVisibleToAttribute\");\n+\n+            context.RegisterSymbolAction(LocateCandidateReadonlyFields, SymbolKind.Field);\n+            context.RegisterSyntaxNodeAction(CheckForAssignment, compoundAssignmentExpressionKinds);\n+            context.RegisterSyntaxNodeAction(CheckForRefOrOutParameter, SyntaxKind.Argument);\n+            context.RegisterSyntaxNodeAction(CheckForExternMethodWithRefParameters, SyntaxKind.MethodDeclaration);\n+            context.RegisterSyntaxNodeAction(CheckForExternIndexer, SyntaxKind.IndexerDeclaration);\n+            context.RegisterSyntaxNodeAction(CheckForInvocations, SyntaxKind.InvocationExpression);\n+            context.RegisterCompilationEndAction(ReportUnwrittenFields);\n+        }\n+\n+        private void LocateCandidateReadonlyFields(SymbolAnalysisContext context)\n+        {\n+            var fieldSymbol = (IFieldSymbol)context.Symbol;\n+            if (fieldSymbol.IsCandidateReadonlyField(_internalsVisibleToAttribute))\n+            {\n+                _candidateReadonlyFields.Add(fieldSymbol);\n+            }\n+        }\n+\n+        private void CheckForAssignment(SyntaxNodeAnalysisContext context)\n+        {\n+            var node = (AssignmentExpressionSyntax)context.Node;\n+            CheckForFieldWrite(node.Left, context.SemanticModel);\n+        }\n+\n+        private void CheckForRefOrOutParameter(SyntaxNodeAnalysisContext context)\n+        {\n+            var node = (ArgumentSyntax)context.Node;\n+            if (!node.RefOrOutKeyword.IsKind(SyntaxKind.None))\n+            {\n+                CheckForFieldWrite(node.Expression, context.SemanticModel);\n+            }\n+        }\n+\n+        // An extern method that takes a ref parameter of a value type, or a parameter\n+        // of a reference type (whether or not it is marked with \"ref\"), might modify\n+        // any field of that type. We can't tell, because we can't see the method body.\n+        // So don't mark any fields of that type as readonly.\n+        private void CheckForExternMethodWithRefParameters(SyntaxNodeAnalysisContext context)\n+        {\n+            MethodDeclarationSyntax node = (MethodDeclarationSyntax)context.Node;\n+            if (node.Modifiers.Any(m => m.IsKind(SyntaxKind.ExternKeyword)))\n+            {\n+                CheckForRefParameters(node.ParameterList.Parameters, context.SemanticModel);\n+            }\n+        }\n+\n+        private void CheckForRefParameters(IEnumerable<ParameterSyntax> parameters, SemanticModel model)\n+        {\n+            foreach (ParameterSyntax parameter in parameters)\n+            {\n+                ITypeSymbol parameterType = model.GetTypeInfo(parameter.Type).Type;\n+                if (parameterType == null)\n+                {\n+                    continue;\n+                }\n+\n+                bool canModify = true;\n+                if (parameterType.TypeKind == TypeKind.Struct)\n+                {\n+                    canModify = parameter.Modifiers.Any(m => m.IsKind(SyntaxKind.RefKeyword));\n+                }\n+\n+                if (canModify)\n+                {\n+                    // This parameter might be used to modify one of the fields, since the\n+                    // implmentation is hidden from this analysys. Assume all fields\n+                    // of the type are written to\n+                    foreach (IFieldSymbol field in parameterType.GetMembers().OfType<IFieldSymbol>())\n+                    {\n+                        MarkFieldAsWritten(field);\n+                    }\n+                }\n+            }\n+        }\n+\n+        private void CheckForExternIndexer(SyntaxNodeAnalysisContext context)\n+        {\n+            var node = (IndexerDeclarationSyntax)context.Node;\n+            if (node.Modifiers.Any(m => m.IsKind(SyntaxKind.ExternKeyword)))\n+            {\n+                // This method body is unable to be analysed, so may contain writer instances\n+                CheckForRefParameters(node.ParameterList.Parameters, context.SemanticModel);\n+            }\n+        }\n+\n+        // A call to myStruct.myField.myMethod() might change myField, since myMethod\n+        // might modify it. So those invocations need to be counted as writes.\n+        private void CheckForInvocations(SyntaxNodeAnalysisContext context)\n+        {\n+            var node = (InvocationExpressionSyntax)context.Node;\n+            if (node.Expression.IsKind(SyntaxKind.SimpleMemberAccessExpression))\n+            {\n+                var memberAccess = (MemberAccessExpressionSyntax)node.Expression;\n+                ISymbol symbol = context.SemanticModel.GetSymbolInfo(memberAccess.Expression).Symbol;\n+                if (symbol != null && symbol.Kind == SymbolKind.Field)\n+                {\n+                    var fieldSymbol = (IFieldSymbol)symbol;\n+                    if (fieldSymbol.Type.TypeKind == TypeKind.Struct)\n+                    {\n+                        if (!IsImmutablePrimitiveType(fieldSymbol.Type))\n+                        {\n+                            MarkFieldAsWritten(fieldSymbol);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        private bool IsImmutablePrimitiveType(ITypeSymbol type)\n+        {\n+            // All of the \"special type\" structs exposed are all immutable,\n+            // so it's safe to assume all methods on them are non-mutating, and\n+            // therefore safe to call on a readonly field\n+            return type.SpecialType != SpecialType.None && type.TypeKind == TypeKind.Struct;\n+        }\n+\n+        private void ReportUnwrittenFields(CompilationAnalysisContext context)\n+        {\n+            IEnumerable<IFieldSymbol> fieldsToMark = _candidateReadonlyFields.Except(_writtenFields);\n+            foreach (var field in fieldsToMark)\n+            {\n+                context.ReportDiagnostic(Diagnostic.Create(rule, field.Locations[0], field.Name));\n+            }\n+        }\n+\n+        private void CheckForFieldWrite(ExpressionSyntax node, SemanticModel model)\n+        {\n+            var fieldSymbol = model.GetSymbolInfo(node).Symbol as IFieldSymbol;\n+\n+            if (fieldSymbol != null)\n+            {\n+                if (IsInsideOwnConstructor(node, fieldSymbol.ContainingType, fieldSymbol.IsStatic, model))\n+                {\n+                    return;\n+                }\n+\n+                MarkFieldAsWritten(fieldSymbol);\n+            }\n+        }\n+\n+        private void MarkFieldAsWritten(IFieldSymbol field)\n+        {\n+            _writtenFields.Add(field);\n+        }\n+\n+        private bool IsInsideOwnConstructor(SyntaxNode node, ITypeSymbol type, bool isStatic, SemanticModel model)\n+        {\n+            while (node != null)\n+            {\n+                switch (node.Kind())\n+                {\n+                    case SyntaxKind.ConstructorDeclaration:\n+                        {\n+                            return model.GetDeclaredSymbol(node).IsStatic == isStatic &&\n+                                IsInType(node.Parent, type, model);\n+                        }\n+                    case SyntaxKind.ParenthesizedLambdaExpression:\n+                    case SyntaxKind.SimpleLambdaExpression:\n+                    case SyntaxKind.AnonymousMethodExpression:\n+                        return false;\n+                }\n+\n+                node = node.Parent;\n+            }\n+\n+            return false;\n+        }\n+\n+        private bool IsInType(SyntaxNode node, ITypeSymbol containingType, SemanticModel model)\n+        {\n+            while (node != null)\n+            {\n+                if (node.IsKind(SyntaxKind.ClassDeclaration) || node.IsKind(SyntaxKind.StructDeclaration))\n+                {\n+                    return Equals(containingType, model.GetDeclaredSymbol(node));\n+                }\n+\n+                node = node.Parent;\n+            }\n+\n+            return false;\n+        }\n+    }\n+\n+    internal static class FieldSymbolExtensions", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldAnalyzer.cs", "position": 256, "original_position": 256, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Would separate out these types to different files if they are generally useful types. \n", "created_at": "2015-07-20T16:56:28Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35016999", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016999"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35016999"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35016999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017209", "pull_request_review_id": null, "id": 35017209, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n+    {\n+        private static SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(context.CancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+            var fieldDeclarationNode = root\n+                .FindToken(diagnosticSpan.Start)\n+                .Parent\n+                .FirstAncestorOrSelf<FieldDeclarationSyntax>();\n+\n+            Debug.Assert(fieldDeclarationNode != null);\n+\n+            context.RegisterCodeFix(\n+                CodeAction.Create(\n+                    Resources.UnwrittenWritableFieldFixer_Title,\n+                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode)),\n+                diagnostic);\n+        }\n+\n+        private Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration)\n+        {\n+            FieldDeclarationSyntax newFieldDeclaration = fieldDeclaration\n+                .WithModifiers(fieldDeclaration.Modifiers.Add(s_readOnlyToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 45, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Do we have a test to see what happens if the field is prefixed with a comment?  Consider:\n\n``` csharp\n/// <summary> stuff </summary>\nint m_field;\n```\n\nIn the past the `WithModifiers` method has gotten me in trouble because it would put the modifier before the comment instead of after which is the more logical place.  I believe I got into the most troubleu here with methods though so the same problem may not apply to fields.  And maybe it is limited to non-XML comments but either way just want to check if we have a test here. \n", "created_at": "2015-07-20T16:58:32Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35017209", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017209"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35017209"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017233", "pull_request_review_id": null, "id": 35017233, "diff_hunk": "@@ -0,0 +1,79 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.Formatting;\n+using Microsoft.DotNet.CodeFormatting;\n+using Microsoft.DotNet.CodeFormatting.Tests;\n+\n+public abstract class RuleTestBase : CodeFormattingTestBase", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/RuleTestBase.cs", "position": null, "original_position": 13, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Fixed\n", "created_at": "2015-07-20T16:58:45Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35017233", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017233"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35017233"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017277", "pull_request_review_id": null, "id": 35017277, "diff_hunk": "@@ -0,0 +1,351 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldAnalyzer: DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0002\";\n+        private static DiagnosticDescriptor rule = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.UnwrittenWritableFieldAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.UnwrittenWritableFieldAnalyzer_MessageFormat)),\n+                                                                            \"Usage\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true);\n+\n+        private static readonly SyntaxKind[] compoundAssignmentExpressionKinds =", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldAnalyzer.cs", "position": 32, "original_position": 32, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-20T16:59:17Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35017277", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017277"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35017277"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35017277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35018431", "pull_request_review_id": null, "id": 35018431, "diff_hunk": "@@ -0,0 +1,351 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    /// <summary>\n+    /// Mark any fields that can provably be marked as readonly.\n+    /// </summary>\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldAnalyzer: DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0002\";\n+        private static DiagnosticDescriptor rule = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.UnwrittenWritableFieldAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.UnwrittenWritableFieldAnalyzer_MessageFormat)),\n+                                                                            \"Usage\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true);\n+\n+        private static readonly SyntaxKind[] compoundAssignmentExpressionKinds =\n+            {\n+                SyntaxKind.SimpleAssignmentExpression,\n+                SyntaxKind.AddAssignmentExpression,\n+                SyntaxKind.AndAssignmentExpression,\n+                SyntaxKind.DivideAssignmentExpression,\n+                SyntaxKind.ExclusiveOrAssignmentExpression,\n+                SyntaxKind.LeftShiftAssignmentExpression,\n+                SyntaxKind.ModuloAssignmentExpression,\n+                SyntaxKind.MultiplyAssignmentExpression,\n+                SyntaxKind.OrAssignmentExpression,\n+                SyntaxKind.RightShiftAssignmentExpression,\n+                SyntaxKind.SubtractAssignmentExpression\n+            };\n+\n+        private ISymbol _internalsVisibleToAttribute;\n+\n+        // The set of fields which it will be safe to mark as readonly, if we discover\n+        // that they are never written to in this solution.\n+        private HashSet<IFieldSymbol> _candidateReadonlyFields;\n+\n+        // The set of fields that are written to in this solution.\n+        private HashSet<IFieldSymbol> _writtenFields;\n+\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => ImmutableArray.Create(rule);\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterCompilationStartAction(OnCompilationStart);\n+        }\n+\n+        private void OnCompilationStart(CompilationStartAnalysisContext context)\n+        {\n+            _candidateReadonlyFields = new HashSet<IFieldSymbol>();\n+            _writtenFields = new HashSet<IFieldSymbol>();\n+\n+            _internalsVisibleToAttribute = context.Compilation.GetTypeByMetadataName(\n+                                                \"System.Runtime.CompilerServices.InternalsVisibleToAttribute\");\n+\n+            context.RegisterSymbolAction(LocateCandidateReadonlyFields, SymbolKind.Field);\n+            context.RegisterSyntaxNodeAction(CheckForAssignment, compoundAssignmentExpressionKinds);\n+            context.RegisterSyntaxNodeAction(CheckForRefOrOutParameter, SyntaxKind.Argument);\n+            context.RegisterSyntaxNodeAction(CheckForExternMethodWithRefParameters, SyntaxKind.MethodDeclaration);\n+            context.RegisterSyntaxNodeAction(CheckForExternIndexer, SyntaxKind.IndexerDeclaration);\n+            context.RegisterSyntaxNodeAction(CheckForInvocations, SyntaxKind.InvocationExpression);\n+            context.RegisterCompilationEndAction(ReportUnwrittenFields);\n+        }\n+\n+        private void LocateCandidateReadonlyFields(SymbolAnalysisContext context)\n+        {\n+            var fieldSymbol = (IFieldSymbol)context.Symbol;\n+            if (fieldSymbol.IsCandidateReadonlyField(_internalsVisibleToAttribute))\n+            {\n+                _candidateReadonlyFields.Add(fieldSymbol);\n+            }\n+        }\n+\n+        private void CheckForAssignment(SyntaxNodeAnalysisContext context)\n+        {\n+            var node = (AssignmentExpressionSyntax)context.Node;\n+            CheckForFieldWrite(node.Left, context.SemanticModel);\n+        }\n+\n+        private void CheckForRefOrOutParameter(SyntaxNodeAnalysisContext context)\n+        {\n+            var node = (ArgumentSyntax)context.Node;\n+            if (!node.RefOrOutKeyword.IsKind(SyntaxKind.None))\n+            {\n+                CheckForFieldWrite(node.Expression, context.SemanticModel);\n+            }\n+        }\n+\n+        // An extern method that takes a ref parameter of a value type, or a parameter\n+        // of a reference type (whether or not it is marked with \"ref\"), might modify\n+        // any field of that type. We can't tell, because we can't see the method body.\n+        // So don't mark any fields of that type as readonly.\n+        private void CheckForExternMethodWithRefParameters(SyntaxNodeAnalysisContext context)\n+        {\n+            MethodDeclarationSyntax node = (MethodDeclarationSyntax)context.Node;\n+            if (node.Modifiers.Any(m => m.IsKind(SyntaxKind.ExternKeyword)))\n+            {\n+                CheckForRefParameters(node.ParameterList.Parameters, context.SemanticModel);\n+            }\n+        }\n+\n+        private void CheckForRefParameters(IEnumerable<ParameterSyntax> parameters, SemanticModel model)\n+        {\n+            foreach (ParameterSyntax parameter in parameters)\n+            {\n+                ITypeSymbol parameterType = model.GetTypeInfo(parameter.Type).Type;\n+                if (parameterType == null)\n+                {\n+                    continue;\n+                }\n+\n+                bool canModify = true;\n+                if (parameterType.TypeKind == TypeKind.Struct)\n+                {\n+                    canModify = parameter.Modifiers.Any(m => m.IsKind(SyntaxKind.RefKeyword));\n+                }\n+\n+                if (canModify)\n+                {\n+                    // This parameter might be used to modify one of the fields, since the\n+                    // implmentation is hidden from this analysys. Assume all fields\n+                    // of the type are written to\n+                    foreach (IFieldSymbol field in parameterType.GetMembers().OfType<IFieldSymbol>())\n+                    {\n+                        MarkFieldAsWritten(field);\n+                    }\n+                }\n+            }\n+        }\n+\n+        private void CheckForExternIndexer(SyntaxNodeAnalysisContext context)\n+        {\n+            var node = (IndexerDeclarationSyntax)context.Node;\n+            if (node.Modifiers.Any(m => m.IsKind(SyntaxKind.ExternKeyword)))\n+            {\n+                // This method body is unable to be analysed, so may contain writer instances\n+                CheckForRefParameters(node.ParameterList.Parameters, context.SemanticModel);\n+            }\n+        }\n+\n+        // A call to myStruct.myField.myMethod() might change myField, since myMethod\n+        // might modify it. So those invocations need to be counted as writes.\n+        private void CheckForInvocations(SyntaxNodeAnalysisContext context)\n+        {\n+            var node = (InvocationExpressionSyntax)context.Node;\n+            if (node.Expression.IsKind(SyntaxKind.SimpleMemberAccessExpression))\n+            {\n+                var memberAccess = (MemberAccessExpressionSyntax)node.Expression;\n+                ISymbol symbol = context.SemanticModel.GetSymbolInfo(memberAccess.Expression).Symbol;\n+                if (symbol != null && symbol.Kind == SymbolKind.Field)\n+                {\n+                    var fieldSymbol = (IFieldSymbol)symbol;\n+                    if (fieldSymbol.Type.TypeKind == TypeKind.Struct)\n+                    {\n+                        if (!IsImmutablePrimitiveType(fieldSymbol.Type))\n+                        {\n+                            MarkFieldAsWritten(fieldSymbol);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        private bool IsImmutablePrimitiveType(ITypeSymbol type)\n+        {\n+            // All of the \"special type\" structs exposed are all immutable,\n+            // so it's safe to assume all methods on them are non-mutating, and\n+            // therefore safe to call on a readonly field\n+            return type.SpecialType != SpecialType.None && type.TypeKind == TypeKind.Struct;\n+        }\n+\n+        private void ReportUnwrittenFields(CompilationAnalysisContext context)\n+        {\n+            IEnumerable<IFieldSymbol> fieldsToMark = _candidateReadonlyFields.Except(_writtenFields);\n+            foreach (var field in fieldsToMark)\n+            {\n+                context.ReportDiagnostic(Diagnostic.Create(rule, field.Locations[0], field.Name));\n+            }\n+        }\n+\n+        private void CheckForFieldWrite(ExpressionSyntax node, SemanticModel model)\n+        {\n+            var fieldSymbol = model.GetSymbolInfo(node).Symbol as IFieldSymbol;\n+\n+            if (fieldSymbol != null)\n+            {\n+                if (IsInsideOwnConstructor(node, fieldSymbol.ContainingType, fieldSymbol.IsStatic, model))\n+                {\n+                    return;\n+                }\n+\n+                MarkFieldAsWritten(fieldSymbol);\n+            }\n+        }\n+\n+        private void MarkFieldAsWritten(IFieldSymbol field)\n+        {\n+            _writtenFields.Add(field);\n+        }\n+\n+        private bool IsInsideOwnConstructor(SyntaxNode node, ITypeSymbol type, bool isStatic, SemanticModel model)\n+        {\n+            while (node != null)\n+            {\n+                switch (node.Kind())\n+                {\n+                    case SyntaxKind.ConstructorDeclaration:\n+                        {\n+                            return model.GetDeclaredSymbol(node).IsStatic == isStatic &&\n+                                IsInType(node.Parent, type, model);\n+                        }\n+                    case SyntaxKind.ParenthesizedLambdaExpression:\n+                    case SyntaxKind.SimpleLambdaExpression:\n+                    case SyntaxKind.AnonymousMethodExpression:\n+                        return false;\n+                }\n+\n+                node = node.Parent;\n+            }\n+\n+            return false;\n+        }\n+\n+        private bool IsInType(SyntaxNode node, ITypeSymbol containingType, SemanticModel model)\n+        {\n+            while (node != null)\n+            {\n+                if (node.IsKind(SyntaxKind.ClassDeclaration) || node.IsKind(SyntaxKind.StructDeclaration))\n+                {\n+                    return Equals(containingType, model.GetDeclaredSymbol(node));\n+                }\n+\n+                node = node.Parent;\n+            }\n+\n+            return false;\n+        }\n+    }\n+\n+    internal static class FieldSymbolExtensions", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldAnalyzer.cs", "position": 256, "original_position": 256, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "I don't know yet that they are generally useful. These were originally private methods within the rule class, like `IsFieldSerializableByAttribute(IFieldSymbol)`, which I re-cast as extension methods because I like being able to write `if (symbol.IsSerializableByAttributes())`. If they come in useful elsewhere I'll extract them.\n", "created_at": "2015-07-20T17:10:37Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35018431", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35018431"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35018431"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35018431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019423", "pull_request_review_id": null, "id": 35019423, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n+    {\n+        private static SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(context.CancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+            var fieldDeclarationNode = root\n+                .FindToken(diagnosticSpan.Start)\n+                .Parent\n+                .FirstAncestorOrSelf<FieldDeclarationSyntax>();\n+\n+            Debug.Assert(fieldDeclarationNode != null);\n+\n+            context.RegisterCodeFix(\n+                CodeAction.Create(\n+                    Resources.UnwrittenWritableFieldFixer_Title,\n+                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode)),\n+                diagnostic);\n+        }\n+\n+        private Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration)\n+        {\n+            FieldDeclarationSyntax newFieldDeclaration = fieldDeclaration\n+                .WithModifiers(fieldDeclaration.Modifiers.Add(s_readOnlyToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 45, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Added tests for both XML and non-XML comments:\n\n``` csharp\nclass C\n{\n    /// <summary>Stuff</summary>\n    private READONLY int read;\n}\n```\n\nand\n\n``` csharp\nclass C\n{\n    // Stuff\n    private READONLY int read;\n}\n```\n\n Both passed. But without the access specified `private`, the test fails as you describe. Working on it.\n", "created_at": "2015-07-20T17:20:10Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35019423", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019423"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35019423"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019604", "pull_request_review_id": null, "id": 35019604, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n+    {\n+        private static SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(context.CancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+            var fieldDeclarationNode = root\n+                .FindToken(diagnosticSpan.Start)\n+                .Parent\n+                .FirstAncestorOrSelf<FieldDeclarationSyntax>();\n+\n+            Debug.Assert(fieldDeclarationNode != null);\n+\n+            context.RegisterCodeFix(\n+                CodeAction.Create(\n+                    Resources.UnwrittenWritableFieldFixer_Title,\n+                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode)),\n+                diagnostic);\n+        }\n+\n+        private Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration)\n+        {\n+            FieldDeclarationSyntax newFieldDeclaration = fieldDeclaration\n+                .WithModifiers(fieldDeclaration.Modifiers.Add(s_readOnlyToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 45, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Awesome.  Thanks for adding those tests. \n", "created_at": "2015-07-20T17:21:49Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35019604", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019604"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35019604"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019850", "pull_request_review_id": null, "id": 35019850, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n+    {\n+        private static SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(context.CancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+            var fieldDeclarationNode = root\n+                .FindToken(diagnosticSpan.Start)\n+                .Parent\n+                .FirstAncestorOrSelf<FieldDeclarationSyntax>();\n+\n+            Debug.Assert(fieldDeclarationNode != null);\n+\n+            context.RegisterCodeFix(\n+                CodeAction.Create(\n+                    Resources.UnwrittenWritableFieldFixer_Title,\n+                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode)),\n+                diagnostic);\n+        }\n+\n+        private Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration)\n+        {\n+            FieldDeclarationSyntax newFieldDeclaration = fieldDeclaration\n+                .WithModifiers(fieldDeclaration.Modifiers.Add(s_readOnlyToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 45, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Not so awesome :) See above. I edited my comment in place when I discovered that it fails if you omit the access specifier.\n", "created_at": "2015-07-20T17:23:45Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35019850", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019850"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35019850"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019964", "pull_request_review_id": null, "id": 35019964, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n+    {\n+        private static SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(context.CancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+            var fieldDeclarationNode = root\n+                .FindToken(diagnosticSpan.Start)\n+                .Parent\n+                .FirstAncestorOrSelf<FieldDeclarationSyntax>();\n+\n+            Debug.Assert(fieldDeclarationNode != null);\n+\n+            context.RegisterCodeFix(\n+                CodeAction.Create(\n+                    Resources.UnwrittenWritableFieldFixer_Title,\n+                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode)),\n+                diagnostic);\n+        }\n+\n+        private Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration)\n+        {\n+            FieldDeclarationSyntax newFieldDeclaration = fieldDeclaration\n+                .WithModifiers(fieldDeclaration.Modifiers.Add(s_readOnlyToken));", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 45, "commit_id": "f54f5ddbb0131e61251872c3905d531107b33135", "original_commit_id": "72c549741f9a4d889d723744e2caf59ccb3ebe85", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Ah yes that was the case that bit me before.  \n", "created_at": "2015-07-20T17:24:54Z", "updated_at": "2015-07-20T18:15:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35019964", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/146", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019964"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/146#discussion_r35019964"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/146"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35019964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35058734", "pull_request_review_id": null, "id": 35058734, "diff_hunk": "@@ -4,22 +4,23 @@\n using System.Collections.Immutable;\n using System.Diagnostics;\n using System.Linq;\n+using System.Threading;\n using System.Threading.Tasks;\n \n using Microsoft.CodeAnalysis;\n using Microsoft.CodeAnalysis.CodeActions;\n using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp;\n using Microsoft.CodeAnalysis.CSharp.Syntax;\n-using Microsoft.CodeAnalysis.Formatting;\n+using Microsoft.CodeAnalysis.Editing;\n using Microsoft.CodeAnalysis.Text;\n-using Microsoft.CodeAnalysis.CSharp;\n \n namespace Microsoft.DotNet.CodeFormatting.Analyzers\n {\n     [ExportCodeFixProvider(LanguageNames.CSharp)]\n     public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n     {\n-        private static SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);\n+        private static readonly SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 23, "commit_id": "2cc5fcb8f26e91548a45ab07a4058b7367db88e2", "original_commit_id": "ef540ac7073820e11b08c38c7aa631c8be8733b0", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Not needed anymore?\n", "created_at": "2015-07-21T00:09:52Z", "updated_at": "2015-07-21T02:34:32Z", "html_url": "https://github.com/dotnet/codeformatter/pull/148#discussion_r35058734", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/148", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35058734"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/148#discussion_r35058734"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/148"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35058734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35058765", "pull_request_review_id": null, "id": 35058765, "diff_hunk": "@@ -36,18 +37,21 @@ public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n             context.RegisterCodeFix(\n                 CodeAction.Create(\n                     Resources.UnwrittenWritableFieldFixer_Title,\n-                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode)),\n+                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode, context.CancellationToken)),\n                 diagnostic);\n         }\n \n-        private Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration)\n+        private async Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration, CancellationToken cancellationToken)\n         {\n-            FieldDeclarationSyntax newFieldDeclaration = fieldDeclaration\n-                .WithModifiers(fieldDeclaration.Modifiers.Add(s_readOnlyToken))\n-                .WithAdditionalAnnotations(Formatter.Annotation);\n-            SyntaxNode newRoot = root.ReplaceNode(fieldDeclaration, newFieldDeclaration);\n-            Document newDocument = document.WithSyntaxRoot(newRoot);\n-            return Task.FromResult(newDocument);\n+            SemanticModel model = await document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            ISymbol fieldSymbol = model.GetDeclaredSymbol(fieldDeclaration, cancellationToken);", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 46, "commit_id": "2cc5fcb8f26e91548a45ab07a4058b7367db88e2", "original_commit_id": "ef540ac7073820e11b08c38c7aa631c8be8733b0", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "unused?\n", "created_at": "2015-07-21T00:10:34Z", "updated_at": "2015-07-21T02:34:32Z", "html_url": "https://github.com/dotnet/codeformatter/pull/148#discussion_r35058765", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/148", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35058765"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/148#discussion_r35058765"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/148"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35058765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35062265", "pull_request_review_id": null, "id": 35062265, "diff_hunk": "@@ -4,22 +4,23 @@\n using System.Collections.Immutable;\n using System.Diagnostics;\n using System.Linq;\n+using System.Threading;\n using System.Threading.Tasks;\n \n using Microsoft.CodeAnalysis;\n using Microsoft.CodeAnalysis.CodeActions;\n using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp;\n using Microsoft.CodeAnalysis.CSharp.Syntax;\n-using Microsoft.CodeAnalysis.Formatting;\n+using Microsoft.CodeAnalysis.Editing;\n using Microsoft.CodeAnalysis.Text;\n-using Microsoft.CodeAnalysis.CSharp;\n \n namespace Microsoft.DotNet.CodeFormatting.Analyzers\n {\n     [ExportCodeFixProvider(LanguageNames.CSharp)]\n     public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n     {\n-        private static SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);\n+        private static readonly SyntaxToken s_readOnlyToken =  SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword);", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 23, "commit_id": "2cc5fcb8f26e91548a45ab07a4058b7367db88e2", "original_commit_id": "ef540ac7073820e11b08c38c7aa631c8be8733b0", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-21T01:17:56Z", "updated_at": "2015-07-21T02:34:32Z", "html_url": "https://github.com/dotnet/codeformatter/pull/148#discussion_r35062265", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/148", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35062265"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/148#discussion_r35062265"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/148"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35062265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35065057", "pull_request_review_id": null, "id": 35065057, "diff_hunk": "@@ -36,18 +37,21 @@ public class UnwrittenWritableFieldThisFixer : CodeFixProvider\n             context.RegisterCodeFix(\n                 CodeAction.Create(\n                     Resources.UnwrittenWritableFieldFixer_Title,\n-                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode)),\n+                    c => AddReadonlyModifier(context.Document, root, fieldDeclarationNode, context.CancellationToken)),\n                 diagnostic);\n         }\n \n-        private Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration)\n+        private async Task<Document> AddReadonlyModifier(Document document, SyntaxNode root, FieldDeclarationSyntax fieldDeclaration, CancellationToken cancellationToken)\n         {\n-            FieldDeclarationSyntax newFieldDeclaration = fieldDeclaration\n-                .WithModifiers(fieldDeclaration.Modifiers.Add(s_readOnlyToken))\n-                .WithAdditionalAnnotations(Formatter.Annotation);\n-            SyntaxNode newRoot = root.ReplaceNode(fieldDeclaration, newFieldDeclaration);\n-            Document newDocument = document.WithSyntaxRoot(newRoot);\n-            return Task.FromResult(newDocument);\n+            SemanticModel model = await document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            ISymbol fieldSymbol = model.GetDeclaredSymbol(fieldDeclaration, cancellationToken);", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/UnwrittenWritableFieldFixer.cs", "position": null, "original_position": 46, "commit_id": "2cc5fcb8f26e91548a45ab07a4058b7367db88e2", "original_commit_id": "ef540ac7073820e11b08c38c7aa631c8be8733b0", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Fixed\n", "created_at": "2015-07-21T02:34:57Z", "updated_at": "2015-07-21T02:34:57Z", "html_url": "https://github.com/dotnet/codeformatter/pull/148#discussion_r35065057", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/148", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35065057"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/148#discussion_r35065057"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/148"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35065057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35678360", "pull_request_review_id": null, "id": 35678360, "diff_hunk": "@@ -1,4 +1,7 @@\n-\ufeffusing System;\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/IAnalysisLogger.cs", "position": 5, "original_position": 5, "commit_id": "d598c077da427b3bcf147ca08e2d6c58659da1c0", "original_commit_id": "d598c077da427b3bcf147ca08e2d6c58659da1c0", "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "body": "Why is the reference to System added?\n", "created_at": "2015-07-28T17:56:13Z", "updated_at": "2015-07-28T17:56:13Z", "html_url": "https://github.com/dotnet/codeformatter/pull/153#discussion_r35678360", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/153", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35678360"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/153#discussion_r35678360"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/153"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35678360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35679736", "pull_request_review_id": null, "id": 35679736, "diff_hunk": "@@ -1,4 +1,7 @@\n-\ufeffusing System;\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/IAnalysisLogger.cs", "position": 5, "original_position": 5, "commit_id": "d598c077da427b3bcf147ca08e2d6c58659da1c0", "original_commit_id": "d598c077da427b3bcf147ca08e2d6c58659da1c0", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "He didn't add the reference, he added the copyright notice above it.\n", "created_at": "2015-07-28T18:07:03Z", "updated_at": "2015-07-28T18:07:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/153#discussion_r35679736", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/153", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35679736"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/153#discussion_r35679736"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/153"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35679736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35683342", "pull_request_review_id": null, "id": 35683342, "diff_hunk": "@@ -1,4 +1,7 @@\n-\ufeffusing System;\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;", "path": "src/Microsoft.DotNet.DeadRegionAnalysis/IAnalysisLogger.cs", "position": 5, "original_position": 5, "commit_id": "d598c077da427b3bcf147ca08e2d6c58659da1c0", "original_commit_id": "d598c077da427b3bcf147ca08e2d6c58659da1c0", "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "body": "Duh! :) Thanks!\n", "created_at": "2015-07-28T18:35:57Z", "updated_at": "2015-07-28T18:35:57Z", "html_url": "https://github.com/dotnet/codeformatter/pull/153#discussion_r35683342", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/153", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35683342"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/153#discussion_r35683342"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/153"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35683342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35803767", "pull_request_review_id": null, "id": 35803767, "diff_hunk": "@@ -0,0 +1,126 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class OptimizeNamespaceImportsTests : AnalyzerFixerTestBase\n+    {\n+        public OptimizeNamespaceImportsTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(OptimizeNamespaceImportsAnalyzer.DiagnosticId);\n+        }\n+\n+\n+        [Fact]\n+        public void OptimizeNamespaceImports_SimpleRemoveUnusedImports()\n+        {\n+            string input = @\"\n+using System.Runtime.InteropServices;\n+using AnotherUnreferencedNamespace;\n+using System.Threading;\n+using System;\n+using System.IO;\n+using System.Xml;\n+\n+public class Test\n+{\n+    public static void Main()\n+    {\n+        Console.WriteLine(\"\"Calling Console.WriteLine, a dependency on System namespace.\"\");\n+    }\n+}\n+\";\n+\n+            string expected = @\"\n+using System;\n+\n+public class Test\n+{\n+    public static void Main()\n+    {\n+        Console.WriteLine(\"\"Calling Console.WriteLine, a dependency on System namespace.\"\");\n+    }\n+}\n+\";\n+            Verify(input, expected, runFormatter: false);\n+        }", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/OptimizeNamespaceImportsTests.cs", "position": 51, "original_position": 51, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Blank line after closing braces.\n", "created_at": "2015-07-29T19:52:58Z", "updated_at": "2015-07-29T19:52:58Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35803767", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35803767"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35803767"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35803767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804598", "pull_request_review_id": null, "id": 35804598, "diff_hunk": "@@ -71,6 +71,10 @@\n       <HintPath>..\\packages\\System.Reflection.Metadata.1.0.21\\lib\\portable-net45+win8\\System.Reflection.Metadata.dll</HintPath>\n       <Private>True</Private>\n     </Reference>\n+    <Reference Include=\"System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n+      <SpecificVersion>False</SpecificVersion>\n+      <HintPath>..\\References\\System.Threading.Tasks.Dataflow.dll</HintPath>", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": 6, "original_position": 6, "commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "original_commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "user": {"login": "akoeplinger", "id": 1376924, "avatar_url": "https://avatars2.githubusercontent.com/u/1376924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akoeplinger", "html_url": "https://github.com/akoeplinger", "followers_url": "https://api.github.com/users/akoeplinger/followers", "following_url": "https://api.github.com/users/akoeplinger/following{/other_user}", "gists_url": "https://api.github.com/users/akoeplinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/akoeplinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akoeplinger/subscriptions", "organizations_url": "https://api.github.com/users/akoeplinger/orgs", "repos_url": "https://api.github.com/users/akoeplinger/repos", "events_url": "https://api.github.com/users/akoeplinger/events{/privacy}", "received_events_url": "https://api.github.com/users/akoeplinger/received_events", "type": "User", "site_admin": false}, "body": "Is there a reason you're checking in the binary as opposed to using the NuGet package?\n", "created_at": "2015-07-29T20:00:36Z", "updated_at": "2015-07-29T20:00:36Z", "html_url": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35804598", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/158", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804598"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35804598"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/158"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804612", "pull_request_review_id": null, "id": 35804612, "diff_hunk": "@@ -0,0 +1,66 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class OptimizeNamespaceImportsAnalyzer : DiagnosticAnalyzer", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/OptimizeNamespaceImportsAnalyzer.cs", "position": 17, "original_position": 17, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "Could be sealed\n", "created_at": "2015-07-29T20:00:48Z", "updated_at": "2015-07-29T20:00:48Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35804612", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804612"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35804612"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804747", "pull_request_review_id": null, "id": 35804747, "diff_hunk": "@@ -71,6 +71,10 @@\n       <HintPath>..\\packages\\System.Reflection.Metadata.1.0.21\\lib\\portable-net45+win8\\System.Reflection.Metadata.dll</HintPath>\n       <Private>True</Private>\n     </Reference>\n+    <Reference Include=\"System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n+      <SpecificVersion>False</SpecificVersion>\n+      <HintPath>..\\References\\System.Threading.Tasks.Dataflow.dll</HintPath>", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": 6, "original_position": 6, "commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "original_commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "This issue is apparently related to a bug in MSBUILD where this indirect dependency isn't properly copied during build to the output directory. This change is a temporary fix until that problem is resolved (which will be relatively soon). So I opted for this expedient change (which I will revert when the msbuild problem is resolved).\n", "created_at": "2015-07-29T20:02:24Z", "updated_at": "2015-07-29T20:02:24Z", "html_url": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35804747", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/158", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804747"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35804747"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/158"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804926", "pull_request_review_id": null, "id": 35804926, "diff_hunk": "@@ -0,0 +1,66 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class OptimizeNamespaceImportsAnalyzer : DiagnosticAnalyzer", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/OptimizeNamespaceImportsAnalyzer.cs", "position": 17, "original_position": 17, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "yes, will change. what do you think about this auto-fix 'automatically seal unextended classes'? :)\n", "created_at": "2015-07-29T20:04:28Z", "updated_at": "2015-07-29T20:04:28Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35804926", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804926"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35804926"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35804926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805087", "pull_request_review_id": null, "id": 35805087, "diff_hunk": "@@ -71,6 +71,10 @@\n       <HintPath>..\\packages\\System.Reflection.Metadata.1.0.21\\lib\\portable-net45+win8\\System.Reflection.Metadata.dll</HintPath>\n       <Private>True</Private>\n     </Reference>\n+    <Reference Include=\"System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n+      <SpecificVersion>False</SpecificVersion>\n+      <HintPath>..\\References\\System.Threading.Tasks.Dataflow.dll</HintPath>", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": 6, "original_position": 6, "commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "original_commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "user": {"login": "akoeplinger", "id": 1376924, "avatar_url": "https://avatars2.githubusercontent.com/u/1376924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akoeplinger", "html_url": "https://github.com/akoeplinger", "followers_url": "https://api.github.com/users/akoeplinger/followers", "following_url": "https://api.github.com/users/akoeplinger/following{/other_user}", "gists_url": "https://api.github.com/users/akoeplinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/akoeplinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akoeplinger/subscriptions", "organizations_url": "https://api.github.com/users/akoeplinger/orgs", "repos_url": "https://api.github.com/users/akoeplinger/repos", "events_url": "https://api.github.com/users/akoeplinger/events{/privacy}", "received_events_url": "https://api.github.com/users/akoeplinger/received_events", "type": "User", "site_admin": false}, "body": "That shouldn't matter, you can just add System.Threading.Tasks.Dataflow to packages.config and reference it like S.R.Metadata above. This way it's no longer an indirect dependency as well.\n", "created_at": "2015-07-29T20:05:54Z", "updated_at": "2015-07-29T20:05:54Z", "html_url": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35805087", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/158", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805087"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35805087"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/158"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805297", "pull_request_review_id": null, "id": 35805297, "diff_hunk": "@@ -0,0 +1,66 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class OptimizeNamespaceImportsAnalyzer : DiagnosticAnalyzer", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/OptimizeNamespaceImportsAnalyzer.cs", "position": 17, "original_position": 17, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "jaredpar", "id": 146967, "avatar_url": "https://avatars0.githubusercontent.com/u/146967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredpar", "html_url": "https://github.com/jaredpar", "followers_url": "https://api.github.com/users/jaredpar/followers", "following_url": "https://api.github.com/users/jaredpar/following{/other_user}", "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions", "organizations_url": "https://api.github.com/users/jaredpar/orgs", "repos_url": "https://api.github.com/users/jaredpar/repos", "events_url": "https://api.github.com/users/jaredpar/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredpar/received_events", "type": "User", "site_admin": false}, "body": "@michaelcfanning \n\nUnfortunately can't be done with `public` types :( \n", "created_at": "2015-07-29T20:07:45Z", "updated_at": "2015-07-29T20:07:45Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35805297", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805297"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35805297"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805324", "pull_request_review_id": null, "id": 35805324, "diff_hunk": "@@ -0,0 +1,66 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class OptimizeNamespaceImportsAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.OptimizeNamespaceImports;\n+        private static DiagnosticDescriptor s_rule = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.OptimizeNamespaceImportsAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.OptimizeNamespaceImportsAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true);\n+\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => ImmutableArray.Create(s_rule);\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSemanticModelAction(semanticModelAnalysisContext =>\n+            {\n+                SyntaxNode root;", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/OptimizeNamespaceImportsAnalyzer.cs", "position": 34, "original_position": 34, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Let us let @jaredpar be the authority on whether he wants to combine-declaration-with-initialization in this code base. You know how I feel about it ;-)\n", "created_at": "2015-07-29T20:07:59Z", "updated_at": "2015-07-29T20:07:59Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35805324", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805324"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35805324"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805327", "pull_request_review_id": null, "id": 35805327, "diff_hunk": "@@ -71,6 +71,10 @@\n       <HintPath>..\\packages\\System.Reflection.Metadata.1.0.21\\lib\\portable-net45+win8\\System.Reflection.Metadata.dll</HintPath>\n       <Private>True</Private>\n     </Reference>\n+    <Reference Include=\"System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n+      <SpecificVersion>False</SpecificVersion>\n+      <HintPath>..\\References\\System.Threading.Tasks.Dataflow.dll</HintPath>", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": 6, "original_position": 6, "commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "original_commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "Right, and I wouldn't be required to make another change in future. Will do this.\n", "created_at": "2015-07-29T20:08:00Z", "updated_at": "2015-07-29T20:08:00Z", "html_url": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35805327", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/158", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805327"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35805327"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/158"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805479", "pull_request_review_id": null, "id": 35805479, "diff_hunk": "@@ -0,0 +1,66 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class OptimizeNamespaceImportsAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.OptimizeNamespaceImports;\n+        private static DiagnosticDescriptor s_rule = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.OptimizeNamespaceImportsAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.OptimizeNamespaceImportsAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true);\n+\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => ImmutableArray.Create(s_rule);\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSemanticModelAction(semanticModelAnalysisContext =>\n+            {\n+                SyntaxNode root;\n+                SemanticModel semanticModel;\n+\n+                semanticModel = semanticModelAnalysisContext.SemanticModel;\n+                root = semanticModel.SyntaxTree.GetRoot();\n+\n+                // If we encounter any conditionally included code, we cannot be sure\n+                // that unused namespaces might not be relevant for some other compilation\n+                if (root.DescendantTrivia().Any(x => x.Kind() == SyntaxKind.IfDirectiveTrivia))", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/OptimizeNamespaceImportsAnalyzer.cs", "position": 42, "original_position": 42, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Likewise whether @jaredpar wants braces around single-line conditionals.\n", "created_at": "2015-07-29T20:09:25Z", "updated_at": "2015-07-29T20:09:25Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35805479", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805479"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35805479"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805742", "pull_request_review_id": null, "id": 35805742, "diff_hunk": "@@ -0,0 +1,66 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class OptimizeNamespaceImportsAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.OptimizeNamespaceImports;\n+        private static DiagnosticDescriptor s_rule = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.OptimizeNamespaceImportsAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.OptimizeNamespaceImportsAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true);\n+\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => ImmutableArray.Create(s_rule);\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSemanticModelAction(semanticModelAnalysisContext =>\n+            {\n+                SyntaxNode root;\n+                SemanticModel semanticModel;\n+\n+                semanticModel = semanticModelAnalysisContext.SemanticModel;\n+                root = semanticModel.SyntaxTree.GetRoot();\n+\n+                // If we encounter any conditionally included code, we cannot be sure\n+                // that unused namespaces might not be relevant for some other compilation\n+                if (root.DescendantTrivia().Any(x => x.Kind() == SyntaxKind.IfDirectiveTrivia))\n+                    return;\n+\n+                var diagnostics = semanticModel.GetDiagnostics(null, semanticModelAnalysisContext.CancellationToken);\n+                Diagnostic firstDiagnostic = null;\n+                var locations = new List<Location>();\n+\n+                foreach (Diagnostic diagnostic in diagnostics)\n+                {\n+                    if (diagnostic.Id == \"CS8019\")", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/OptimizeNamespaceImportsAnalyzer.cs", "position": 51, "original_position": 51, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "`private const string UnnecessaryUsingDirective = \"CS8019\";`\n", "created_at": "2015-07-29T20:11:34Z", "updated_at": "2015-07-29T20:11:34Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35805742", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805742"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35805742"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35805742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806511", "pull_request_review_id": null, "id": 35806511, "diff_hunk": "@@ -0,0 +1,66 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class OptimizeNamespaceImportsAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.OptimizeNamespaceImports;\n+        private static DiagnosticDescriptor s_rule = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.OptimizeNamespaceImportsAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.OptimizeNamespaceImportsAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true);\n+\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => ImmutableArray.Create(s_rule);\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSemanticModelAction(semanticModelAnalysisContext =>\n+            {\n+                SyntaxNode root;\n+                SemanticModel semanticModel;\n+\n+                semanticModel = semanticModelAnalysisContext.SemanticModel;\n+                root = semanticModel.SyntaxTree.GetRoot();\n+\n+                // If we encounter any conditionally included code, we cannot be sure\n+                // that unused namespaces might not be relevant for some other compilation\n+                if (root.DescendantTrivia().Any(x => x.Kind() == SyntaxKind.IfDirectiveTrivia))\n+                    return;\n+\n+                var diagnostics = semanticModel.GetDiagnostics(null, semanticModelAnalysisContext.CancellationToken);\n+                Diagnostic firstDiagnostic = null;\n+                var locations = new List<Location>();\n+\n+                foreach (Diagnostic diagnostic in diagnostics)\n+                {\n+                    if (diagnostic.Id == \"CS8019\")\n+                    {\n+                        firstDiagnostic = firstDiagnostic ?? diagnostic;\n+                        locations.Add(diagnostic.Location);", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/OptimizeNamespaceImportsAnalyzer.cs", "position": 54, "original_position": 54, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "As the code stands, `locations` combines all the locations, including the first one. But I don't think the `additionalLocations` parameter to `Diagnostic.Create` is supposed to include the first one.\n", "created_at": "2015-07-29T20:17:49Z", "updated_at": "2015-07-29T20:17:58Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35806511", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806511"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35806511"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806689", "pull_request_review_id": null, "id": 35806689, "diff_hunk": "@@ -0,0 +1,56 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class OptimizeNamespaceImportsFixer : CodeFixProvider\n+    {\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(context.CancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            var usingDirectiveNodes = new List<SyntaxNode>();\n+\n+            // We recapitulate the primary diagnostic location in the ", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/OptimizeNamespaceImportsFixer.cs", "position": 25, "original_position": 25, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "OK, this addresses my comment above as far as why you did it. Sri says that it was intended just to have the \"others\", but that is not documented, and Roslyn itself doesn't rely on that behavior anywhere. So I guess this is fine.\n", "created_at": "2015-07-29T20:19:27Z", "updated_at": "2015-07-29T20:19:27Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35806689", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806689"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35806689"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806844", "pull_request_review_id": null, "id": 35806844, "diff_hunk": "@@ -126,6 +126,15 @@\n   <data name=\"ExplicitThisFixer_Title\" xml:space=\"preserve\">\n     <value>Remove 'this' qualifier</value>\n   </data>\n+  <data name=\"OptimizeNamespaceImportsAnalyzer_MessageFormat\" xml:space=\"preserve\">", "path": "src/Microsoft.DotNet.CodeFormatting/Resources.resx", "position": 4, "original_position": 4, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Suggest calling the analyzer itself `UnusedNamespaceDirectivesAnalyzer`. Just my 2c.\n", "created_at": "2015-07-29T20:20:53Z", "updated_at": "2015-07-29T20:20:53Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35806844", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806844"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35806844"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35806844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807053", "pull_request_review_id": null, "id": 35807053, "diff_hunk": "@@ -126,6 +126,15 @@\n   <data name=\"ExplicitThisFixer_Title\" xml:space=\"preserve\">\n     <value>Remove 'this' qualifier</value>\n   </data>\n+  <data name=\"OptimizeNamespaceImportsAnalyzer_MessageFormat\" xml:space=\"preserve\">", "path": "src/Microsoft.DotNet.CodeFormatting/Resources.resx", "position": 4, "original_position": 4, "commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "original_commit_id": "a99c9c238c2943ca8685d41af6f0bdd349a61ec7", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "+1\n", "created_at": "2015-07-29T20:23:01Z", "updated_at": "2015-07-29T20:23:01Z", "html_url": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35807053", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/156", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807053"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/156#discussion_r35807053"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/156"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807533", "pull_request_review_id": null, "id": 35807533, "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.CodeAnalysis;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    /// <summary>\n+    /// Commonly used name functions\n+    /// </summary>\n+    internal static class NameHelper\n+    {\n+        /// <summary>\n+        /// Get the full name of a symbol. So a field might look like\n+        /// \"OuterNamespace.Inner.ClassName.FieldName\"\n+        /// </summary>\n+        /// <param name=\"symbol\">symbol to get name of</param>\n+        /// <returns>Full display name for a symbol</returns>\n+        internal static string GetFullName(ISymbol symbol)", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/NameHelper.cs", "position": 19, "original_position": 19, "commit_id": "103cee272364c135e381121336eee2016288b4e5", "original_commit_id": "103cee272364c135e381121336eee2016288b4e5", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Sri says there is a class `SymbolDisplay` that has a method to do this (so this file is not needed).\n", "created_at": "2015-07-29T20:27:25Z", "updated_at": "2015-07-29T20:27:55Z", "html_url": "https://github.com/dotnet/codeformatter/pull/157#discussion_r35807533", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/157", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807533"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/157#discussion_r35807533"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/157"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807636", "pull_request_review_id": null, "id": 35807636, "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.CodeAnalysis;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    /// <summary>\n+    /// Commonly used name functions\n+    /// </summary>\n+    internal static class NameHelper\n+    {\n+        /// <summary>\n+        /// Get the full name of a symbol. So a field might look like\n+        /// \"OuterNamespace.Inner.ClassName.FieldName\"\n+        /// </summary>\n+        /// <param name=\"symbol\">symbol to get name of</param>\n+        /// <returns>Full display name for a symbol</returns>\n+        internal static string GetFullName(ISymbol symbol)", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/NameHelper.cs", "position": 19, "original_position": 19, "commit_id": "103cee272364c135e381121336eee2016288b4e5", "original_commit_id": "103cee272364c135e381121336eee2016288b4e5", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "ok. This file not changed during this PR only moved. let's look at this in future\n", "created_at": "2015-07-29T20:28:23Z", "updated_at": "2015-07-29T20:28:23Z", "html_url": "https://github.com/dotnet/codeformatter/pull/157#discussion_r35807636", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/157", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807636"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/157#discussion_r35807636"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/157"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807762", "pull_request_review_id": null, "id": 35807762, "diff_hunk": "@@ -71,6 +71,10 @@\n       <HintPath>..\\packages\\System.Reflection.Metadata.1.0.21\\lib\\portable-net45+win8\\System.Reflection.Metadata.dll</HintPath>\n       <Private>True</Private>\n     </Reference>\n+    <Reference Include=\"System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n+      <SpecificVersion>False</SpecificVersion>\n+      <HintPath>..\\References\\System.Threading.Tasks.Dataflow.dll</HintPath>", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": 6, "original_position": 6, "commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "original_commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "+1 to using the package.\n", "created_at": "2015-07-29T20:29:15Z", "updated_at": "2015-07-29T20:29:15Z", "html_url": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35807762", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/158", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807762"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35807762"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/158"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35807762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35808051", "pull_request_review_id": null, "id": 35808051, "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.CodeAnalysis;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    /// <summary>\n+    /// Commonly used name functions\n+    /// </summary>\n+    internal static class NameHelper\n+    {\n+        /// <summary>\n+        /// Get the full name of a symbol. So a field might look like\n+        /// \"OuterNamespace.Inner.ClassName.FieldName\"\n+        /// </summary>\n+        /// <param name=\"symbol\">symbol to get name of</param>\n+        /// <returns>Full display name for a symbol</returns>\n+        internal static string GetFullName(ISymbol symbol)", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/NameHelper.cs", "position": 19, "original_position": 19, "commit_id": "103cee272364c135e381121336eee2016288b4e5", "original_commit_id": "103cee272364c135e381121336eee2016288b4e5", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Ya one can use `symbol.ToDisplayString(SymbolDisplayFormat.FullyQualifiedFormat)` to get the full name. I'll merge this is in now since you just moved the file.\n", "created_at": "2015-07-29T20:31:46Z", "updated_at": "2015-07-29T20:31:46Z", "html_url": "https://github.com/dotnet/codeformatter/pull/157#discussion_r35808051", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/157", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35808051"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/157#discussion_r35808051"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/157"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35808051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35808060", "pull_request_review_id": null, "id": 35808060, "diff_hunk": "@@ -71,6 +71,10 @@\n       <HintPath>..\\packages\\System.Reflection.Metadata.1.0.21\\lib\\portable-net45+win8\\System.Reflection.Metadata.dll</HintPath>\n       <Private>True</Private>\n     </Reference>\n+    <Reference Include=\"System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n+      <SpecificVersion>False</SpecificVersion>\n+      <HintPath>..\\References\\System.Threading.Tasks.Dataflow.dll</HintPath>", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": 6, "original_position": 6, "commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "original_commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "+2. Checked-in binaries are particularly bad with Git because when you clone a repo you get its entire history. So you get all the versions of all the binaries that have ever been checked in, even if they're not used any more.\n", "created_at": "2015-07-29T20:31:49Z", "updated_at": "2015-07-29T20:31:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35808060", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/158", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35808060"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35808060"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/158"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35808060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35809200", "pull_request_review_id": null, "id": 35809200, "diff_hunk": "@@ -71,6 +71,10 @@\n       <HintPath>..\\packages\\System.Reflection.Metadata.1.0.21\\lib\\portable-net45+win8\\System.Reflection.Metadata.dll</HintPath>\n       <Private>True</Private>\n     </Reference>\n+    <Reference Include=\"System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\">\n+      <SpecificVersion>False</SpecificVersion>\n+      <HintPath>..\\References\\System.Threading.Tasks.Dataflow.dll</HintPath>", "path": "src/CodeFormatter/CodeFormatter.csproj", "position": 6, "original_position": 6, "commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "original_commit_id": "cc701d76ffedfda017764e607cb4eff97085b950", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "Yes. I haven't succeeded in getting the recent update of this dependency to download from nuget. I will wait and sort this out, though.\n\nhttps://www.nuget.org/packages/System.Threading.Tasks.Dataflow/ \n", "created_at": "2015-07-29T20:42:41Z", "updated_at": "2015-07-29T20:42:41Z", "html_url": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35809200", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/158", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35809200"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/158#discussion_r35809200"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/158"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35809200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939479", "pull_request_review_id": null, "id": 35939479, "diff_hunk": "@@ -0,0 +1,99 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+\n+using CommandLine;\n+\n+namespace CodeFormatter\n+{\n+    [Verb(\"format\", HelpText = \"Apply code formatting rules and analyzers to specified project.\")]\n+    public class FormatOptions\n+    {\n+        [Option(\n+            't', \"target\", \n+            HelpText = \"Project, solution or response file to drive code formatting.\", \n+            Required = true)]\n+        public IEnumerable<string> FormatTargets { get; set; }\n+   \n+        [Option(\n+            \"fileFilter\", \n+            HelpText = \"Only apply changes to files with specified name(s).\", \n+            Separator = ',')]\n+        public IEnumerable<string> Files { get; set; }\n+\n+        [Option(\n+            'l', \"lang\", \n+            HelpText = \"Specifies the language to use when a response file is specified, e.g., 'C#', 'Visual Basic', ... (default: 'C#').\")]\n+        public string Language { get; set; }\n+\n+        [Option(\n+            'c', \"config\", \n+            HelpText = \"Additional preprocessor configurations the formatter should run under.\", \n+            Separator = ',')]\n+        public IEnumerable<string> PreprocessorConfigurations { get; set; }\n+\n+        [Option(\n+            \"copyright\", \n+            HelpText = \"Specifies file containing copyright header.\")]\n+        public string CopyrightHeader { get; set;  }\n+\n+        [Option(\n+            \"enable\", \n+            HelpText = \"Comma-separated list of rules to disable\", ", "path": "src/CodeFormatter/FormatOptions.cs", "position": null, "original_position": 44, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "enable\n", "created_at": "2015-07-31T01:19:55Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35939479", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939479"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35939479"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939501", "pull_request_review_id": null, "id": 35939501, "diff_hunk": "@@ -0,0 +1,99 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+\n+using CommandLine;\n+\n+namespace CodeFormatter\n+{\n+    [Verb(\"format\", HelpText = \"Apply code formatting rules and analyzers to specified project.\")]\n+    public class FormatOptions\n+    {\n+        [Option(\n+            't', \"target\", \n+            HelpText = \"Project, solution or response file to drive code formatting.\", \n+            Required = true)]\n+        public IEnumerable<string> FormatTargets { get; set; }\n+   \n+        [Option(\n+            \"fileFilter\", \n+            HelpText = \"Only apply changes to files with specified name(s).\", \n+            Separator = ',')]\n+        public IEnumerable<string> Files { get; set; }\n+\n+        [Option(\n+            'l', \"lang\", \n+            HelpText = \"Specifies the language to use when a response file is specified, e.g., 'C#', 'Visual Basic', ... (default: 'C#').\")]\n+        public string Language { get; set; }\n+\n+        [Option(\n+            'c', \"config\", \n+            HelpText = \"Additional preprocessor configurations the formatter should run under.\", ", "path": "src/CodeFormatter/FormatOptions.cs", "position": null, "original_position": 33, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"Comma-separated list of additional...\"\n", "created_at": "2015-07-31T01:20:18Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35939501", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939501"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35939501"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939988", "pull_request_review_id": null, "id": 35939988, "diff_hunk": "@@ -16,7 +16,7 @@ public interface IFormattingEngine\n         ImmutableArray<string> FileNames { get; set; }\n         ImmutableArray<IRuleMetadata> AllRules { get; }\n         ImmutableArray<DiagnosticDescriptor> AllSupportedDiagnostics { get; }\n-        bool AllowTables { get; set; }\n+        bool AllowTables { set; }", "path": "src/Microsoft.DotNet.CodeFormatting/IFormattingEngine.cs", "position": null, "original_position": 5, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "A write-only property?\n", "created_at": "2015-07-31T01:33:27Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35939988", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939988"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35939988"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940154", "pull_request_review_id": null, "id": 35940154, "diff_hunk": "@@ -18,46 +20,43 @@ namespace CodeFormatter\n {\n     internal static class Program\n     {\n-        private static Assembly[] s_defaultCompositionAssemblies = \n+        private static Assembly[] s_defaultCompositionAssemblies =\n                                         new Assembly[] {\n                                             typeof(FormattingEngine).Assembly,\n                                             typeof(OptimizeNamespaceImportsAnalyzer).Assembly\n                                         };\n \n         private static int Main(string[] args)\n+        {            \n+            return Parser.Default.ParseArguments<ListOptions, FormatOptions>(args)\n+              .Return(\n+                (ListOptions listOptions) => RunListCommandAndReturnExitCode(listOptions),", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 24, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Is the reason for including `AndReturnExitCode` in the method names to alert the reader that `ParseArguments.Return` will call `exit` with the return code from this method? I'm not usually a fan of `And` in method names because it suggests the method is doing more than one thing and should be refactored, but I guess it's ok here.\n", "created_at": "2015-07-31T01:37:41Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35940154", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940154"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35940154"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940249", "pull_request_review_id": null, "id": 35940249, "diff_hunk": "@@ -18,46 +20,43 @@ namespace CodeFormatter\n {\n     internal static class Program\n     {\n-        private static Assembly[] s_defaultCompositionAssemblies = \n+        private static Assembly[] s_defaultCompositionAssemblies =\n                                         new Assembly[] {\n                                             typeof(FormattingEngine).Assembly,\n                                             typeof(OptimizeNamespaceImportsAnalyzer).Assembly\n                                         };\n \n         private static int Main(string[] args)\n+        {            \n+            return Parser.Default.ParseArguments<ListOptions, FormatOptions>(args)\n+              .Return(\n+                (ListOptions listOptions) => RunListCommandAndReturnExitCode(listOptions),\n+                (FormatOptions formatOptions) => RunFormatCommandAndReturnExitCode(formatOptions),\n+                errs => 1);\n+\n+        }\n+\n+        private static int RunListCommandAndReturnExitCode(ListOptions options)\n         {\n-            var result = CommandLineParser.Parse(args);\n-            if (result.IsError)\n+            // If user did not explicitly reference either analyzers or\n+            // rules in list command, we will dump both sets.\n+            if (!options.Analyzers && !options.Rules)\n             {\n-                Console.Error.WriteLine(result.Error);\n-                CommandLineParser.PrintUsage();\n-                return -1;\n+                options.Analyzers = true;\n+                options.Rules = true;\n             }\n \n-            var options = result.Options;\n-            int exitCode;\n-            switch (options.Operation)\n-            {\n-                case Operation.ListRules:\n-                    RunListRules(options.UseAnalyzers);\n-                    exitCode = 0;\n-                    break;\n-                case Operation.Format:\n-                    exitCode = RunFormat(options);\n-                    break;\n-                default:\n-                    throw new Exception(\"Invalid enum value: \" + options.Operation);\n-            }\n+            ListRulesAndAnalyzer(options.Analyzers, options.Rules);", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 59, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "`ListRulesAndAnalyzers`\n", "created_at": "2015-07-31T01:39:36Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35940249", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940249"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35940249"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940375", "pull_request_review_id": null, "id": 35940375, "diff_hunk": "@@ -84,7 +88,7 @@\n   </ItemGroup>\n   <ItemGroup>\n     <Compile Include=\"CodeFormattingTestBase.cs\" />\n-    <Compile Include=\"CommandLineParserTests.cs\" />\n+    <Compile Include=\"FormatOptionsParsingTests.cs\" />", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Microsoft.DotNet.CodeFormatting.Tests.csproj", "position": 16, "original_position": 16, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "I don't see `FormatOptionsParsingTests.cs` in this pull request.\n", "created_at": "2015-07-31T01:42:38Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35940375", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940375"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35940375"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35940375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35988785", "pull_request_review_id": null, "id": 35988785, "diff_hunk": "@@ -0,0 +1,99 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+\n+using CommandLine;\n+\n+namespace CodeFormatter\n+{\n+    [Verb(\"format\", HelpText = \"Apply code formatting rules and analyzers to specified project.\")]\n+    public class FormatOptions\n+    {\n+        [Option(\n+            't', \"target\", \n+            HelpText = \"Project, solution or response file to drive code formatting.\", \n+            Required = true)]\n+        public IEnumerable<string> FormatTargets { get; set; }\n+   \n+        [Option(\n+            \"fileFilter\", \n+            HelpText = \"Only apply changes to files with specified name(s).\", \n+            Separator = ',')]\n+        public IEnumerable<string> Files { get; set; }\n+\n+        [Option(\n+            'l', \"lang\", \n+            HelpText = \"Specifies the language to use when a response file is specified, e.g., 'C#', 'Visual Basic', ... (default: 'C#').\")]\n+        public string Language { get; set; }\n+\n+        [Option(\n+            'c', \"config\", \n+            HelpText = \"Additional preprocessor configurations the formatter should run under.\", \n+            Separator = ',')]\n+        public IEnumerable<string> PreprocessorConfigurations { get; set; }\n+\n+        [Option(\n+            \"copyright\", \n+            HelpText = \"Specifies file containing copyright header.\")]\n+        public string CopyrightHeader { get; set;  }\n+\n+        [Option(\n+            \"enable\", \n+            HelpText = \"Comma-separated list of rules to disable\", ", "path": "src/CodeFormatter/FormatOptions.cs", "position": null, "original_position": 44, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "fixed thx\n", "created_at": "2015-07-31T16:16:04Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35988785", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35988785"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35988785"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35988785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35988918", "pull_request_review_id": null, "id": 35988918, "diff_hunk": "@@ -0,0 +1,99 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+\n+using CommandLine;\n+\n+namespace CodeFormatter\n+{\n+    [Verb(\"format\", HelpText = \"Apply code formatting rules and analyzers to specified project.\")]\n+    public class FormatOptions\n+    {\n+        [Option(\n+            't', \"target\", \n+            HelpText = \"Project, solution or response file to drive code formatting.\", \n+            Required = true)]\n+        public IEnumerable<string> FormatTargets { get; set; }\n+   \n+        [Option(\n+            \"fileFilter\", \n+            HelpText = \"Only apply changes to files with specified name(s).\", \n+            Separator = ',')]\n+        public IEnumerable<string> Files { get; set; }\n+\n+        [Option(\n+            'l', \"lang\", \n+            HelpText = \"Specifies the language to use when a response file is specified, e.g., 'C#', 'Visual Basic', ... (default: 'C#').\")]\n+        public string Language { get; set; }\n+\n+        [Option(\n+            'c', \"config\", \n+            HelpText = \"Additional preprocessor configurations the formatter should run under.\", ", "path": "src/CodeFormatter/FormatOptions.cs", "position": null, "original_position": 33, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "yes, fixed, thx\n", "created_at": "2015-07-31T16:17:34Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35988918", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35988918"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35988918"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35988918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989010", "pull_request_review_id": null, "id": 35989010, "diff_hunk": "@@ -16,7 +16,7 @@ public interface IFormattingEngine\n         ImmutableArray<string> FileNames { get; set; }\n         ImmutableArray<IRuleMetadata> AllRules { get; }\n         ImmutableArray<DiagnosticDescriptor> AllSupportedDiagnostics { get; }\n-        bool AllowTables { get; set; }\n+        bool AllowTables { set; }", "path": "src/Microsoft.DotNet.CodeFormatting/IFormattingEngine.cs", "position": null, "original_position": 5, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "oops. was looking at dependencies on the write. this property probably warrants a rename but I want to verify with @jared or @Priya91 that I get what it's used for.\n", "created_at": "2015-07-31T16:18:39Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35989010", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989010"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35989010"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989136", "pull_request_review_id": null, "id": 35989136, "diff_hunk": "@@ -18,46 +20,43 @@ namespace CodeFormatter\n {\n     internal static class Program\n     {\n-        private static Assembly[] s_defaultCompositionAssemblies = \n+        private static Assembly[] s_defaultCompositionAssemblies =\n                                         new Assembly[] {\n                                             typeof(FormattingEngine).Assembly,\n                                             typeof(OptimizeNamespaceImportsAnalyzer).Assembly\n                                         };\n \n         private static int Main(string[] args)\n+        {            \n+            return Parser.Default.ParseArguments<ListOptions, FormatOptions>(args)\n+              .Return(\n+                (ListOptions listOptions) => RunListCommandAndReturnExitCode(listOptions),", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 24, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "pattern taken from commandline samples. but I agree with you, changed\n", "created_at": "2015-07-31T16:20:03Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35989136", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989136"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35989136"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989195", "pull_request_review_id": null, "id": 35989195, "diff_hunk": "@@ -18,46 +20,43 @@ namespace CodeFormatter\n {\n     internal static class Program\n     {\n-        private static Assembly[] s_defaultCompositionAssemblies = \n+        private static Assembly[] s_defaultCompositionAssemblies =\n                                         new Assembly[] {\n                                             typeof(FormattingEngine).Assembly,\n                                             typeof(OptimizeNamespaceImportsAnalyzer).Assembly\n                                         };\n \n         private static int Main(string[] args)\n+        {            \n+            return Parser.Default.ParseArguments<ListOptions, FormatOptions>(args)\n+              .Return(\n+                (ListOptions listOptions) => RunListCommandAndReturnExitCode(listOptions),\n+                (FormatOptions formatOptions) => RunFormatCommandAndReturnExitCode(formatOptions),\n+                errs => 1);\n+\n+        }\n+\n+        private static int RunListCommandAndReturnExitCode(ListOptions options)\n         {\n-            var result = CommandLineParser.Parse(args);\n-            if (result.IsError)\n+            // If user did not explicitly reference either analyzers or\n+            // rules in list command, we will dump both sets.\n+            if (!options.Analyzers && !options.Rules)\n             {\n-                Console.Error.WriteLine(result.Error);\n-                CommandLineParser.PrintUsage();\n-                return -1;\n+                options.Analyzers = true;\n+                options.Rules = true;\n             }\n \n-            var options = result.Options;\n-            int exitCode;\n-            switch (options.Operation)\n-            {\n-                case Operation.ListRules:\n-                    RunListRules(options.UseAnalyzers);\n-                    exitCode = 0;\n-                    break;\n-                case Operation.Format:\n-                    exitCode = RunFormat(options);\n-                    break;\n-                default:\n-                    throw new Exception(\"Invalid enum value: \" + options.Operation);\n-            }\n+            ListRulesAndAnalyzer(options.Analyzers, options.Rules);", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 59, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "fixed\n", "created_at": "2015-07-31T16:20:32Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35989195", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989195"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35989195"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989310", "pull_request_review_id": null, "id": 35989310, "diff_hunk": "@@ -84,7 +88,7 @@\n   </ItemGroup>\n   <ItemGroup>\n     <Compile Include=\"CodeFormattingTestBase.cs\" />\n-    <Compile Include=\"CommandLineParserTests.cs\" />\n+    <Compile Include=\"FormatOptionsParsingTests.cs\" />", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Microsoft.DotNet.CodeFormatting.Tests.csproj", "position": 16, "original_position": 16, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "d5731092e3d9169b1935fda9896c1ef034ae5b1c", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "file was untracked, thanks, resolved\n", "created_at": "2015-07-31T16:21:35Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35989310", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989310"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35989310"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35989310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35994253", "pull_request_review_id": null, "id": 35994253, "diff_hunk": "@@ -0,0 +1,152 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+using CodeFormatter;", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/FormatOptionsParsingTests.cs", "position": 9, "original_position": 9, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Do we have a standard for spelling out the namespaces?\n", "created_at": "2015-07-31T17:16:32Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35994253", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35994253"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35994253"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35994253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35994417", "pull_request_review_id": null, "id": 35994417, "diff_hunk": "@@ -16,7 +16,7 @@ public interface IFormattingEngine\n         ImmutableArray<string> FileNames { get; set; }\n         ImmutableArray<IRuleMetadata> AllRules { get; }\n         ImmutableArray<DiagnosticDescriptor> AllSupportedDiagnostics { get; }\n-        bool AllowTables { get; set; }\n+        bool AllowTables { get;  set; }", "path": "src/Microsoft.DotNet.CodeFormatting/IFormattingEngine.cs", "position": null, "original_position": 5, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Only change to this file is now introduction of extraneous white space. Just revert the file.\n", "created_at": "2015-07-31T17:18:08Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35994417", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35994417"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35994417"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35994417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995053", "pull_request_review_id": null, "id": 35995053, "diff_hunk": "@@ -0,0 +1,152 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+using CodeFormatter;\n+\n+using CommandLine;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public class FormatOptionsParsingTests\n+    {\n+        private FormatOptions Parse(out int result, params string[] args)\n+        {\n+            result = 1;\n+            FormatOptions options = null;\n+\n+            using (var writer = new StringWriter())", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/FormatOptionsParsingTests.cs", "position": null, "original_position": 24, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "It doesn't look like `writer` is used anywhere.\n", "created_at": "2015-07-31T17:24:28Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35995053", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995053"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35995053"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995236", "pull_request_review_id": null, "id": 35995236, "diff_hunk": "@@ -0,0 +1,152 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+using CodeFormatter;\n+\n+using CommandLine;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public class FormatOptionsParsingTests\n+    {\n+        private FormatOptions Parse(out int result, params string[] args)\n+        {\n+            result = 1;\n+            FormatOptions options = null;\n+\n+            using (var writer = new StringWriter())\n+            {\n+                var parser = new Parser(settings =>\n+                {\n+                    // CommandLine library help output is not thread-safe. We\n+                    // disable console output entirely by providing a null writer\n+                    settings.HelpWriter = null;\n+                });\n+\n+                result = parser.ParseArguments<FormatOptions>(args)\n+                    .Return(\n+                    (FormatOptions parsedOptions) => { options = parsedOptions; return 0; },\n+                    errs => ReportErrors(errs));\n+            }\n+\n+            return options;\n+        }\n+\n+        private int ReportErrors(IEnumerable<Error> errs)\n+        {\n+            return 1;\n+        }\n+\n+        [Fact]\n+        public void EnableRule()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable enabledRule -t test.csproj\n+            var options = Parse(out result, \"format\", \"--enable\", \"enabledRule\", \"-t\", \"test.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+            Assert.True(options.RuleMap[\"enabledRule\"]);\n+            Assert.True(options.RuleMap.Count == 1);", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/FormatOptionsParsingTests.cs", "position": null, "original_position": 58, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "I think equalities are more clearly asserted with `Assert.Equal(1, options.RuleMap.Count)` (here and below)\n", "created_at": "2015-07-31T17:26:22Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35995236", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995236"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35995236"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995387", "pull_request_review_id": null, "id": 35995387, "diff_hunk": "@@ -0,0 +1,152 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+using CodeFormatter;\n+\n+using CommandLine;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public class FormatOptionsParsingTests\n+    {\n+        private FormatOptions Parse(out int result, params string[] args)\n+        {\n+            result = 1;\n+            FormatOptions options = null;\n+\n+            using (var writer = new StringWriter())\n+            {\n+                var parser = new Parser(settings =>\n+                {\n+                    // CommandLine library help output is not thread-safe. We\n+                    // disable console output entirely by providing a null writer\n+                    settings.HelpWriter = null;\n+                });\n+\n+                result = parser.ParseArguments<FormatOptions>(args)\n+                    .Return(\n+                    (FormatOptions parsedOptions) => { options = parsedOptions; return 0; },\n+                    errs => ReportErrors(errs));\n+            }\n+\n+            return options;\n+        }\n+\n+        private int ReportErrors(IEnumerable<Error> errs)\n+        {\n+            return 1;\n+        }\n+\n+        [Fact]\n+        public void EnableRule()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable enabledRule -t test.csproj\n+            var options = Parse(out result, \"format\", \"--enable\", \"enabledRule\", \"-t\", \"test.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+            Assert.True(options.RuleMap[\"enabledRule\"]);\n+            Assert.True(options.RuleMap.Count == 1);\n+            Assert.Equal(new[] { \"test.csproj\" }, options.FormatTargets);\n+        }\n+\n+\n+        [Fact]\n+        public void DisableRule()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --disable disabledRule -t test.csproj\n+            var options = Parse(out result, \"format\", \"--disable\", \"disabledRule\", \"-t\", \"test.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+            Assert.False(options.RuleMap[\"disabledRule\"]);\n+            Assert.True(options.RuleMap.Count == 1);\n+            Assert.Equal(new[] { \"test.csproj\" }, options.FormatTargets);\n+        }\n+\n+        [Fact]\n+        public void EnableAndDisableMultipleRules()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable e1,e2 --disable d1,d2,d3 --enable e3 -t test.csproj\n+            var options = Parse(out result, \"format\", \"--enable\", \"e1,e2,e3\", \"--disable\", \"d1,d2,d3\", \"-t\", \"test.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+\n+            Assert.True(options.RuleMap[\"e1\"]);\n+            Assert.True(options.RuleMap[\"e2\"]);\n+            Assert.True(options.RuleMap[\"e3\"]);\n+\n+            Assert.False(options.RuleMap[\"d1\"]);\n+            Assert.False(options.RuleMap[\"d2\"]);\n+            Assert.False(options.RuleMap[\"d3\"]);\n+\n+            Assert.True(options.RuleMap.Count == 6);\n+            Assert.Equal(new[] { \"test.csproj\" }, options.FormatTargets);\n+        }\n+\n+        [Fact]\n+        public void TargetOmitted()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable enabledRule\n+            var options = Parse(out result, \"format\", \"--enable\", \"enabledRule\");\n+\n+            Assert.Equal(1, result);\n+            Assert.Null(options);\n+        }\n+\n+        [Fact]\n+        public void MultipleTargets()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable enabledRule\n+            var options = Parse(out result, \"format\", \"-t\", \"projectOne.csproj\", \"projectTwo.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+            Assert.Equal(2, options.FormatTargets.Count());", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/FormatOptionsParsingTests.cs", "position": 120, "original_position": 123, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Add test of contents? `Assert.True(options.FormatTargets.Contains(projectOne.csproj))`, etc.\n", "created_at": "2015-07-31T17:27:51Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35995387", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995387"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35995387"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35995387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996772", "pull_request_review_id": null, "id": 35996772, "diff_hunk": "@@ -0,0 +1,152 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+using CodeFormatter;", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/FormatOptionsParsingTests.cs", "position": 9, "original_position": 9, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "would be glad to make a scrub for this later but let's loop in jared/Priya. this code is a rename/updating of existing tests, so i'll leave the NS alone for now\n", "created_at": "2015-07-31T17:42:26Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35996772", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996772"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35996772"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996873", "pull_request_review_id": null, "id": 35996873, "diff_hunk": "@@ -0,0 +1,152 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+using CodeFormatter;\n+\n+using CommandLine;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public class FormatOptionsParsingTests\n+    {\n+        private FormatOptions Parse(out int result, params string[] args)\n+        {\n+            result = 1;\n+            FormatOptions options = null;\n+\n+            using (var writer = new StringWriter())", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/FormatOptionsParsingTests.cs", "position": null, "original_position": 24, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "yes, good catch, vestiges of a broken attempt to fix a test multi-threading issue\n", "created_at": "2015-07-31T17:43:29Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35996873", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996873"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35996873"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996938", "pull_request_review_id": null, "id": 35996938, "diff_hunk": "@@ -0,0 +1,152 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+using CodeFormatter;\n+\n+using CommandLine;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public class FormatOptionsParsingTests\n+    {\n+        private FormatOptions Parse(out int result, params string[] args)\n+        {\n+            result = 1;\n+            FormatOptions options = null;\n+\n+            using (var writer = new StringWriter())\n+            {\n+                var parser = new Parser(settings =>\n+                {\n+                    // CommandLine library help output is not thread-safe. We\n+                    // disable console output entirely by providing a null writer\n+                    settings.HelpWriter = null;\n+                });\n+\n+                result = parser.ParseArguments<FormatOptions>(args)\n+                    .Return(\n+                    (FormatOptions parsedOptions) => { options = parsedOptions; return 0; },\n+                    errs => ReportErrors(errs));\n+            }\n+\n+            return options;\n+        }\n+\n+        private int ReportErrors(IEnumerable<Error> errs)\n+        {\n+            return 1;\n+        }\n+\n+        [Fact]\n+        public void EnableRule()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable enabledRule -t test.csproj\n+            var options = Parse(out result, \"format\", \"--enable\", \"enabledRule\", \"-t\", \"test.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+            Assert.True(options.RuleMap[\"enabledRule\"]);\n+            Assert.True(options.RuleMap.Count == 1);", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/FormatOptionsParsingTests.cs", "position": null, "original_position": 58, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "ok\n", "created_at": "2015-07-31T17:44:15Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35996938", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996938"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35996938"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35996938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35997098", "pull_request_review_id": null, "id": 35997098, "diff_hunk": "@@ -0,0 +1,152 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.IO;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+using CodeFormatter;\n+\n+using CommandLine;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public class FormatOptionsParsingTests\n+    {\n+        private FormatOptions Parse(out int result, params string[] args)\n+        {\n+            result = 1;\n+            FormatOptions options = null;\n+\n+            using (var writer = new StringWriter())\n+            {\n+                var parser = new Parser(settings =>\n+                {\n+                    // CommandLine library help output is not thread-safe. We\n+                    // disable console output entirely by providing a null writer\n+                    settings.HelpWriter = null;\n+                });\n+\n+                result = parser.ParseArguments<FormatOptions>(args)\n+                    .Return(\n+                    (FormatOptions parsedOptions) => { options = parsedOptions; return 0; },\n+                    errs => ReportErrors(errs));\n+            }\n+\n+            return options;\n+        }\n+\n+        private int ReportErrors(IEnumerable<Error> errs)\n+        {\n+            return 1;\n+        }\n+\n+        [Fact]\n+        public void EnableRule()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable enabledRule -t test.csproj\n+            var options = Parse(out result, \"format\", \"--enable\", \"enabledRule\", \"-t\", \"test.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+            Assert.True(options.RuleMap[\"enabledRule\"]);\n+            Assert.True(options.RuleMap.Count == 1);\n+            Assert.Equal(new[] { \"test.csproj\" }, options.FormatTargets);\n+        }\n+\n+\n+        [Fact]\n+        public void DisableRule()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --disable disabledRule -t test.csproj\n+            var options = Parse(out result, \"format\", \"--disable\", \"disabledRule\", \"-t\", \"test.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+            Assert.False(options.RuleMap[\"disabledRule\"]);\n+            Assert.True(options.RuleMap.Count == 1);\n+            Assert.Equal(new[] { \"test.csproj\" }, options.FormatTargets);\n+        }\n+\n+        [Fact]\n+        public void EnableAndDisableMultipleRules()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable e1,e2 --disable d1,d2,d3 --enable e3 -t test.csproj\n+            var options = Parse(out result, \"format\", \"--enable\", \"e1,e2,e3\", \"--disable\", \"d1,d2,d3\", \"-t\", \"test.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+\n+            Assert.True(options.RuleMap[\"e1\"]);\n+            Assert.True(options.RuleMap[\"e2\"]);\n+            Assert.True(options.RuleMap[\"e3\"]);\n+\n+            Assert.False(options.RuleMap[\"d1\"]);\n+            Assert.False(options.RuleMap[\"d2\"]);\n+            Assert.False(options.RuleMap[\"d3\"]);\n+\n+            Assert.True(options.RuleMap.Count == 6);\n+            Assert.Equal(new[] { \"test.csproj\" }, options.FormatTargets);\n+        }\n+\n+        [Fact]\n+        public void TargetOmitted()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable enabledRule\n+            var options = Parse(out result, \"format\", \"--enable\", \"enabledRule\");\n+\n+            Assert.Equal(1, result);\n+            Assert.Null(options);\n+        }\n+\n+        [Fact]\n+        public void MultipleTargets()\n+        {\n+            int result;\n+\n+            // CodeFormatter format --enable enabledRule\n+            var options = Parse(out result, \"format\", \"-t\", \"projectOne.csproj\", \"projectTwo.csproj\");\n+\n+            Assert.Equal(0, result);\n+            Assert.NotNull(options);\n+            Assert.Equal(2, options.FormatTargets.Count());", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/FormatOptionsParsingTests.cs", "position": 120, "original_position": 123, "commit_id": "98a1e92bf9953946ea97f4d8571e534c49b0d479", "original_commit_id": "446000a7db224b0f140cf35859693a186363faf2", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "yessir\n", "created_at": "2015-07-31T17:45:33Z", "updated_at": "2015-07-31T17:51:20Z", "html_url": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35997098", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35997098"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/161#discussion_r35997098"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/161"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35997098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36049139", "pull_request_review_id": null, "id": 36049139, "diff_hunk": "@@ -44,6 +44,14 @@ public class UnwrittenWritableFieldAnalyzer : DiagnosticAnalyzer\n                 SyntaxKind.SubtractAssignmentExpression\n             };\n \n+        private static readonly SyntaxKind[] s_unaryAssignmentKinds =", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/UnwrittenWritableFieldAnalyzer.cs", "position": null, "original_position": 4, "commit_id": "327648e0bd348b8756fd97587b33e1b9a9bc2dcd", "original_commit_id": "1ba65f483758b9ef606998d467b857e2a8ac3c3b", "user": {"login": "AlexGhiondea", "id": 8396979, "avatar_url": "https://avatars3.githubusercontent.com/u/8396979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexGhiondea", "html_url": "https://github.com/AlexGhiondea", "followers_url": "https://api.github.com/users/AlexGhiondea/followers", "following_url": "https://api.github.com/users/AlexGhiondea/following{/other_user}", "gists_url": "https://api.github.com/users/AlexGhiondea/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexGhiondea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexGhiondea/subscriptions", "organizations_url": "https://api.github.com/users/AlexGhiondea/orgs", "repos_url": "https://api.github.com/users/AlexGhiondea/repos", "events_url": "https://api.github.com/users/AlexGhiondea/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexGhiondea/received_events", "type": "User", "site_admin": false}, "body": "Could you have merged these with the compound operators? \n", "created_at": "2015-08-02T22:44:36Z", "updated_at": "2015-08-03T22:17:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/163#discussion_r36049139", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/163", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36049139"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/163#discussion_r36049139"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/163"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36049139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36137632", "pull_request_review_id": null, "id": 36137632, "diff_hunk": "@@ -44,6 +44,14 @@ public class UnwrittenWritableFieldAnalyzer : DiagnosticAnalyzer\n                 SyntaxKind.SubtractAssignmentExpression\n             };\n \n+        private static readonly SyntaxKind[] s_unaryAssignmentKinds =", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/UnwrittenWritableFieldAnalyzer.cs", "position": null, "original_position": 4, "commit_id": "327648e0bd348b8756fd97587b33e1b9a9bc2dcd", "original_commit_id": "1ba65f483758b9ef606998d467b857e2a8ac3c3b", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@AlexGhiondea Sure.\n", "created_at": "2015-08-03T22:09:37Z", "updated_at": "2015-08-03T22:17:03Z", "html_url": "https://github.com/dotnet/codeformatter/pull/163#discussion_r36137632", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/163", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36137632"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/163#discussion_r36137632"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/163"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36137632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692418", "pull_request_review_id": null, "id": 35692418, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 16, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Blank line after closing brace of method.\n", "created_at": "2015-07-28T19:53:23Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35692418", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692418"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35692418"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692720", "pull_request_review_id": null, "id": 35692720, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 30, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Since you expect no change, you can save typing by just setting `expected = test`. I had to read the whole \"expected\" string to convince myself there was no change.\n\nAlso I'd make those strings const. (I see I didn't do that in mine, either.)\n", "created_at": "2015-07-28T19:56:13Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35692720", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692720"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35692720"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692859", "pull_request_review_id": null, "id": 35692859, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new[] { true, false };  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        Int32 x = 0;\n+        Boolean[] y = new[] { true, false };  \n+        Int32[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 65, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "I think for clarity this last one is a separate test: `TestAnonymousTypeDeclaration`. (nice test case, btw)\n", "created_at": "2015-07-28T19:57:35Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35692859", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692859"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35692859"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35692859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693078", "pull_request_review_id": null, "id": 35693078, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new[] { true, false };  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        Int32 x = 0;\n+        Boolean[] y = new[] { true, false };  \n+        Int32[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            var expected = @\"", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 96, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Again, expected = text would be clearer, or even omit the variable and say\n\n```\nVerify(text, text, runFormatter: false);\n```\n", "created_at": "2015-07-28T19:59:27Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693078", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693078"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693078"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693175", "pull_request_review_id": null, "id": 35693175, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new[] { true, false };  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        Int32 x = 0;\n+        Boolean[] y = new[] { true, false };  \n+        Int32[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        var z = U3.E1;\n+        using (var x = new U1())", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 142, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Again I think this is clearer as a separate test: TestVarDeclarationInUsing\n", "created_at": "2015-07-28T20:00:14Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693175", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693175"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693175"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693316", "pull_request_review_id": null, "id": 35693316, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new[] { true, false };  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        Int32 x = 0;\n+        Boolean[] y = new[] { true, false };  \n+        Int32[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        var z = U3.E1;\n+        using (var x = new U1())\n+        { }         \n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M(string[] a1, string[][] a2)\n+    {\n+        foreach (string element in a1)\n+        { }  \n+ \n+        foreach (string[] element in a2)\n+        { }\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M(string[] a1, string[][] a2)\n+    {\n+        foreach (string element in a1)\n+        { }  \n+ \n+        foreach (string[] element in a2)\n+        { }\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachVarDeclaration()", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 202, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Are there other places you could test, like\n\n```\nfor (var i = 0; i < max; ++i)\n```\n", "created_at": "2015-07-28T20:01:26Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693316", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693316"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693316"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693395", "pull_request_review_id": null, "id": 35693395, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 23, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Any reason not to use DNS0003?\n", "created_at": "2015-07-28T20:02:10Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693395", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693395"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693395"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693562", "pull_request_review_id": null, "id": 35693562, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static DiagnosticDescriptor ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 27, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "CodeFormatter will want you name static variables with `s_`.\n\nAlso, CodeFormatter will notice that these can be made `readonly`.\n", "created_at": "2015-07-28T20:03:38Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693562", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693562"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693562"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693658", "pull_request_review_id": null, "id": 35693658, "diff_hunk": "@@ -126,6 +126,15 @@\n   <data name=\"ExplicitThisFixer_Title\" xml:space=\"preserve\">\n     <value>Remove 'this' qualifier</value>\n   </data>\n+  <data name=\"ExplicitVariableTypeAnalyzer_MessageFormat\" xml:space=\"preserve\">\n+    <value>Use VariableTypeDeclaration</value>\n+  </data>\n+  <data name=\"ExplicitVariableTypeAnalyzer_Title\" xml:space=\"preserve\">\n+    <value>Variable '{0}' should be declared with explicit type </value>", "path": "src/Microsoft.DotNet.CodeFormatting/Resources.resx", "position": null, "original_position": 8, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Remove trailing space after \"type\".\n", "created_at": "2015-07-28T20:04:34Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693658", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693658"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35693658"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35693658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35695771", "pull_request_review_id": null, "id": 35695771, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 23, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Just thought you might have those reserved for existing rules. Should I take 0003?\n", "created_at": "2015-07-28T20:23:51Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35695771", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35695771"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35695771"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35695771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35695827", "pull_request_review_id": null, "id": 35695827, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new[] { true, false };  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        Int32 x = 0;\n+        Boolean[] y = new[] { true, false };  \n+        Int32[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        var z = U3.E1;\n+        using (var x = new U1())\n+        { }         \n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M(string[] a1, string[][] a2)\n+    {\n+        foreach (string element in a1)\n+        { }  \n+ \n+        foreach (string[] element in a2)\n+        { }\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M(string[] a1, string[][] a2)\n+    {\n+        foreach (string element in a1)\n+        { }  \n+ \n+        foreach (string[] element in a2)\n+        { }\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachVarDeclaration()", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 202, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding I think it is just a `VariableDeclarationSyntax` in a for loop, but sure, I will add one for it.\n", "created_at": "2015-07-28T20:24:22Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35695827", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35695827"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35695827"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35695827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35696238", "pull_request_review_id": null, "id": 35696238, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 30, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Sure. Will fix. (and other identical strings)\n", "created_at": "2015-07-28T20:27:21Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35696238", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35696238"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35696238"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35696238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35697267", "pull_request_review_id": null, "id": 35697267, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new[] { true, false };  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        Int32 x = 0;\n+        Boolean[] y = new[] { true, false };  \n+        Int32[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 65, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding OK.\n", "created_at": "2015-07-28T20:35:55Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35697267", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35697267"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35697267"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35697267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35699583", "pull_request_review_id": null, "id": 35699583, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static DiagnosticDescriptor ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static DiagnosticDescriptor ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(ruleVariableDeclaration, ruleForEachStatement);", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 43, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Blank line below.\n", "created_at": "2015-07-28T20:54:26Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35699583", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35699583"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35699583"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35699583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35699743", "pull_request_review_id": null, "id": 35699743, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static DiagnosticDescriptor ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static DiagnosticDescriptor ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(ruleVariableDeclaration, ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+        {\n+            get", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 46, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Consider using C# 6.0 expression body syntax:\n\n```\n... SupportedDiagnostics\n    => s_supportedRules;\n```\n", "created_at": "2015-07-28T20:55:41Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35699743", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35699743"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35699743"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35699743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35700706", "pull_request_review_id": null, "id": 35700706, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 16, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Put with the other `System.` directives.\n", "created_at": "2015-07-28T21:03:38Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35700706", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35700706"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35700706"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35700706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701066", "pull_request_review_id": null, "id": 35701066, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new[] { true, false };  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        Int32 x = 0;\n+        Boolean[] y = new[] { true, false };  \n+        Int32[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            var expected = @\"", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 96, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Fixed.\n", "created_at": "2015-07-28T21:06:19Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701066", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701066"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701066"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701082", "pull_request_review_id": null, "id": 35701082, "diff_hunk": "@@ -0,0 +1,237 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatting.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new[] { true, false };  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        Int32 x = 0;\n+        Boolean[] y = new[] { true, false };  \n+        Int32[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+        var anon = new { Name = \"\"Terry\"\", Age = 34 };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            var expected = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;\n+        using (U1 x = new U1())\n+        { }         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeVarDeclaration()\n+        {\n+            var text = @\"\n+class C1\n+{\n+    class U1 : IDisposable\n+    {\n+        public void Dispose(){}\n+    }\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        var z = U3.E1;\n+        using (var x = new U1())", "path": "src/Microsoft.DotNet.CodeFormatting.Tests/Analyzers/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 142, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Fixed.\n", "created_at": "2015-07-28T21:06:27Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701082", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701082"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701082"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701155", "pull_request_review_id": null, "id": 35701155, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 23, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Taking DNS0003 as discussed offline.\n", "created_at": "2015-07-28T21:06:59Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701155", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701155"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701155"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701580", "pull_request_review_id": null, "id": 35701580, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeFixer : CodeFixProvider", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 21, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "`public`\n", "created_at": "2015-07-28T21:10:23Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701580", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701580"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701580"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701585", "pull_request_review_id": null, "id": 35701585, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static DiagnosticDescriptor ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 27, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Fixed.\n", "created_at": "2015-07-28T21:10:25Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701585", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701585"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701585"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701667", "pull_request_review_id": null, "id": 35701667, "diff_hunk": "@@ -126,6 +126,15 @@\n   <data name=\"ExplicitThisFixer_Title\" xml:space=\"preserve\">\n     <value>Remove 'this' qualifier</value>\n   </data>\n+  <data name=\"ExplicitVariableTypeAnalyzer_MessageFormat\" xml:space=\"preserve\">\n+    <value>Use VariableTypeDeclaration</value>\n+  </data>\n+  <data name=\"ExplicitVariableTypeAnalyzer_Title\" xml:space=\"preserve\">\n+    <value>Variable '{0}' should be declared with explicit type </value>", "path": "src/Microsoft.DotNet.CodeFormatting/Resources.resx", "position": null, "original_position": 8, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Fixed.\n", "created_at": "2015-07-28T21:11:08Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701667", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701667"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701667"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701727", "pull_request_review_id": null, "id": 35701727, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static DiagnosticDescriptor ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static DiagnosticDescriptor ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(ruleVariableDeclaration, ruleForEachStatement);", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 43, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Fixed.\n", "created_at": "2015-07-28T21:11:36Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701727", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701727"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701727"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701874", "pull_request_review_id": null, "id": 35701874, "diff_hunk": "@@ -0,0 +1,81 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Collections.Generic;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = \"DNS0099\";\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static DiagnosticDescriptor ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static DiagnosticDescriptor ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(ruleVariableDeclaration, ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+        {\n+            get", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 46, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding  OK.\n", "created_at": "2015-07-28T21:12:44Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701874", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701874"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35701874"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35701874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702110", "pull_request_review_id": null, "id": 35702110, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            TypeSyntax oldTypeSyntaxNode = null;\n+            TypeSyntax newTypeSyntaxNode = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    oldTypeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(variableDeclarationNode.Variables.Single(), model, cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    oldTypeSyntaxNode = forEachStatementNode.Type;\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(forEachStatementNode, model, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+\n+            if (oldTypeSyntaxNode != null && newTypeSyntaxNode != null)\n+            {\n+                context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, root, oldTypeSyntaxNode, newTypeSyntaxNode.WithTriviaFrom(oldTypeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode ExplicitTypeNode)", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 77, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "`ExplicitTypeNode` variable name should be camelCase `explicitTypeNode`.\n", "created_at": "2015-07-28T21:14:37Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702110", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702110"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702110"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702357", "pull_request_review_id": null, "id": 35702357, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            TypeSyntax oldTypeSyntaxNode = null;\n+            TypeSyntax newTypeSyntaxNode = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    oldTypeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(variableDeclarationNode.Variables.Single(), model, cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    oldTypeSyntaxNode = forEachStatementNode.Type;\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(forEachStatementNode, model, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+\n+            if (oldTypeSyntaxNode != null && newTypeSyntaxNode != null)\n+            {\n+                context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, root, oldTypeSyntaxNode, newTypeSyntaxNode.WithTriviaFrom(oldTypeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode ExplicitTypeNode)\n+        {\n+            return Task.FromResult(\n+                document.WithSyntaxRoot(root.ReplaceNode(varNode, ExplicitTypeNode.WithAdditionalAnnotations(Simplifier.Annotation))));\n+        }\n+\n+        // return null if could not construct a TypeSyntax with explicit type.\n+        private static TypeSyntax GetTypeSyntaxNode(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 84, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "I'd call this `Make...` or `Create...` because to me \"`Get`\" implies that the thing already exists.\n", "created_at": "2015-07-28T21:16:59Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702357", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702357"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702357"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702612", "pull_request_review_id": null, "id": 35702612, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            TypeSyntax oldTypeSyntaxNode = null;\n+            TypeSyntax newTypeSyntaxNode = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    oldTypeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(variableDeclarationNode.Variables.Single(), model, cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    oldTypeSyntaxNode = forEachStatementNode.Type;\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(forEachStatementNode, model, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+\n+            if (oldTypeSyntaxNode != null && newTypeSyntaxNode != null)\n+            {\n+                context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, root, oldTypeSyntaxNode, newTypeSyntaxNode.WithTriviaFrom(oldTypeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode ExplicitTypeNode)\n+        {\n+            return Task.FromResult(\n+                document.WithSyntaxRoot(root.ReplaceNode(varNode, ExplicitTypeNode.WithAdditionalAnnotations(Simplifier.Annotation))));\n+        }\n+\n+        // return null if could not construct a TypeSyntax with explicit type.\n+        private static TypeSyntax GetTypeSyntaxNode(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            if (node == null || model == null)\n+            {\n+                return null;\n+            }\n+\n+            var symbol = (ILocalSymbol)model.GetDeclaredSymbol(node, cancellationToken); \n+            ITypeSymbol typeSymbol = symbol.Type;\n+            // typeSymbol.IsAnonymousType is guaranteed to be false since we already filtered out anonymous type in analyzer\n+            Debug.Assert(!typeSymbol.IsAnonymousType);\n+            TypeSyntax newTypeSyntaxNode = null;\n+            switch (typeSymbol.TypeKind)\n+            {", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 97, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "@jaredpar is there a higher-level way to do this? This seems like very low-level syntax manipulation.\n", "created_at": "2015-07-28T21:19:17Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702612", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702612"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702612"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702720", "pull_request_review_id": null, "id": 35702720, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 16, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Fixed.\n", "created_at": "2015-07-28T21:20:15Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702720", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702720"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702720"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702873", "pull_request_review_id": null, "id": 35702873, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeFixer : CodeFixProvider", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 21, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Fixed.\n", "created_at": "2015-07-28T21:21:46Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702873", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702873"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702873"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702948", "pull_request_review_id": null, "id": 35702948, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            TypeSyntax oldTypeSyntaxNode = null;\n+            TypeSyntax newTypeSyntaxNode = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    oldTypeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(variableDeclarationNode.Variables.Single(), model, cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    oldTypeSyntaxNode = forEachStatementNode.Type;\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(forEachStatementNode, model, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+\n+            if (oldTypeSyntaxNode != null && newTypeSyntaxNode != null)\n+            {\n+                context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, root, oldTypeSyntaxNode, newTypeSyntaxNode.WithTriviaFrom(oldTypeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode ExplicitTypeNode)", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 77, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Ah, yes.\n", "created_at": "2015-07-28T21:22:29Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702948", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702948"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35702948"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35702948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35703660", "pull_request_review_id": null, "id": 35703660, "diff_hunk": "@@ -0,0 +1,153 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading.Tasks;\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using System.Threading;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            TypeSyntax oldTypeSyntaxNode = null;\n+            TypeSyntax newTypeSyntaxNode = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    oldTypeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(variableDeclarationNode.Variables.Single(), model, cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    oldTypeSyntaxNode = forEachStatementNode.Type;\n+                    newTypeSyntaxNode = GetTypeSyntaxNode(forEachStatementNode, model, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+\n+            if (oldTypeSyntaxNode != null && newTypeSyntaxNode != null)\n+            {\n+                context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, root, oldTypeSyntaxNode, newTypeSyntaxNode.WithTriviaFrom(oldTypeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode ExplicitTypeNode)\n+        {\n+            return Task.FromResult(\n+                document.WithSyntaxRoot(root.ReplaceNode(varNode, ExplicitTypeNode.WithAdditionalAnnotations(Simplifier.Annotation))));\n+        }\n+\n+        // return null if could not construct a TypeSyntax with explicit type.\n+        private static TypeSyntax GetTypeSyntaxNode(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 84, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "489a5f77829c5224f982985b38af47e5ab2d8a29", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Sounds good. Changed to `CreateTypeSyntaxNode`.\n", "created_at": "2015-07-28T21:29:19Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35703660", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35703660"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35703660"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35703660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35721959", "pull_request_review_id": null, "id": 35721959, "diff_hunk": "@@ -0,0 +1,154 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+\n+namespace Microsoft.DotNet.CodeFormatting.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            TypeSyntax oldTypeSyntaxNode = null;\n+            TypeSyntax newTypeSyntaxNode = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    oldTypeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    newTypeSyntaxNode = CreateTypeSyntaxNode(variableDeclarationNode.Variables.Single(), model, cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    oldTypeSyntaxNode = forEachStatementNode.Type;\n+                    newTypeSyntaxNode = CreateTypeSyntaxNode(forEachStatementNode, model, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+\n+            if (oldTypeSyntaxNode != null && newTypeSyntaxNode != null)\n+            {\n+                context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, root, oldTypeSyntaxNode, newTypeSyntaxNode.WithTriviaFrom(oldTypeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode explicitTypeNode)\n+        {\n+            return Task.FromResult(\n+                document.WithSyntaxRoot(root.ReplaceNode(varNode, explicitTypeNode.WithAdditionalAnnotations(Simplifier.Annotation))));", "path": "src/Microsoft.DotNet.CodeFormatting/Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 81, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "954d7bef67c02884b106e5b8248da1080a88f23c", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@jaredpar @Priya91 So this doesn't simplify system types like `Int32` and `String` to keyword `int` and `string`. Did I do anything wrong here?\n", "created_at": "2015-07-29T01:57:14Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35721959", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35721959"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35721959"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35721959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930772", "pull_request_review_id": null, "id": 35930772, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)\n+            {\n+                DocumentEditor documentEditor = await DocumentEditor.CreateAsync(context.Document, cancellationToken);context.RegisterCodeFix(", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 70, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "You can move the creation of the DocumentEditor into the ReplaceVarWithExplicittype method and call TypeExpression(..) in there. It's generally good practice to defer most of the work to inside the delegate for the codeaction because that only runs when the actual fix is invoked as opposed to any code outside that will have to run when we need to determine if there is any fix at all.\n", "created_at": "2015-07-30T22:53:31Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35930772", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930772"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35930772"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930821", "pull_request_review_id": null, "id": 35930821, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)\n+            {\n+                DocumentEditor documentEditor = await DocumentEditor.CreateAsync(context.Document, cancellationToken);context.RegisterCodeFix(", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 70, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "missing newline for the context.Register.. statement\n", "created_at": "2015-07-30T22:54:05Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35930821", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930821"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35930821"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930901", "pull_request_review_id": null, "id": 35930901, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)\n+            {\n+                DocumentEditor documentEditor = await DocumentEditor.CreateAsync(context.Document, cancellationToken);context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, \n+                                                        root, \n+                                                        typeSyntaxNode, \n+                                                        documentEditor.Generator.TypeExpression(varSymbol.Type).WithTriviaFrom(typeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode explicitTypeNode)\n+        {\n+            return Task.FromResult(", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 83, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "You could simply call documentEdtior.ReplaceNode and then return documentEdtior.GetchangedDocument()\n", "created_at": "2015-07-30T22:55:13Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35930901", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930901"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35930901"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35930901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931035", "pull_request_review_id": null, "id": 35931035, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 52, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Do you want to do a check to see if this is implicitly declared? Otherwise .Single() would throw an exception.\n", "created_at": "2015-07-30T22:56:52Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931035", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931035"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931035"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931298", "pull_request_review_id": null, "id": 35931298, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 52, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@srivatsn The analyzer only triggers on implicit declarations, is the check still necessary here? i.e. Is it possible for the fixer to see a different AST than the analyzer? \n", "created_at": "2015-07-30T23:00:29Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931298", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931298"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931298"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931354", "pull_request_review_id": null, "id": 35931354, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 68, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "check for null for typeSyntaxNode as well. In incomplete code scenarios, you could have that be null for a variable.\n", "created_at": "2015-07-30T23:01:14Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931354", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931354"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931354"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931425", "pull_request_review_id": null, "id": 35931425, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 58, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Is Parent guaranteed to be non-null? I'd use .Parent?.FirstAncestor....\n", "created_at": "2015-07-30T23:02:22Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931425", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931425"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931425"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931499", "pull_request_review_id": null, "id": 35931499, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;\n+        }\n+\n+        // Return true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and ", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 76, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Use XML doc comments instead of regular comments.\n", "created_at": "2015-07-30T23:03:25Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931499", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931499"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931499"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931512", "pull_request_review_id": null, "id": 35931512, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 69, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Use XML doc comments.\n", "created_at": "2015-07-30T23:03:33Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931512", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931512"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931512"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931645", "pull_request_review_id": null, "id": 35931645, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 73, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Use  ?.s liberally. In incomplete code situations, any of this could be null.\n", "created_at": "2015-07-30T23:05:13Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931645", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931645"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931645"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931870", "pull_request_review_id": null, "id": 35931870, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 52, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Ah ok .that's fine then.\n", "created_at": "2015-07-30T23:08:02Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931870", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931870"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35931870"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35931870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35934946", "pull_request_review_id": null, "id": 35934946, "diff_hunk": "@@ -0,0 +1,408 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\"; \n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 55, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "test = expected in this test.\n", "created_at": "2015-07-30T23:55:11Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35934946", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35934946"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35934946"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35934946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35935219", "pull_request_review_id": null, "id": 35935219, "diff_hunk": "@@ -0,0 +1,408 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\"; \n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleNonobviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    bool[] T() \n+    {\n+        return new[] { true };\n+    }\n+\n+    void M(int a, bool[] b)\n+    {\n+        var x = a;\n+        var y = T();  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    bool[] T() \n+    {\n+        return new[] { true };\n+    }\n+\n+    void M(int a, bool[] b)\n+    {\n+        int x = a;\n+        bool[] y = T();\n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;        \n+    }\n+}\";\n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        var z = U3.E1;         \n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        U3 z = U3.E1;         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedNonobviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M(U1 u1, U2 u2, U3 u3)\n+    {\n+        var x = u1;\n+        var y = u2;\n+        var z = u3;         \n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M(U1 u1, U2 u2, U3 u3)\n+    {\n+        U1 x = u1;\n+        U2 y = u2;\n+        U3 z = u3;         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M(string[] a1, string[][] a2)\n+    {\n+        foreach (string element in a1)\n+        { }  \n+ \n+        foreach (string[] element in a2)\n+        { }\n+    }\n+}\";\n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachObviousVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        foreach (var element in new string[] { \"\" })\n+        { }  \n+ \n+        foreach (var element in new int[] { new int[] { 1, 2, 3 }, new int[] { 4, 5, 6 } })", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 231, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "In test `TestSimpleNonobviousTypeVarDeclaration` above, you had a similar `var` declaration initialized with a nested initializer, and you replaced `var` with `int[][]`. Why in the `foreach` case is it ok for it to remain `var`?\n", "created_at": "2015-07-30T23:59:28Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35935219", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35935219"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35935219"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35935219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35935831", "pull_request_review_id": null, "id": 35935831, "diff_hunk": "@@ -0,0 +1,408 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\"; \n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleNonobviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    bool[] T() \n+    {\n+        return new[] { true };\n+    }\n+\n+    void M(int a, bool[] b)\n+    {\n+        var x = a;\n+        var y = T();  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    bool[] T() \n+    {\n+        return new[] { true };\n+    }\n+\n+    void M(int a, bool[] b)\n+    {\n+        int x = a;\n+        bool[] y = T();\n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;        \n+    }\n+}\";\n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        var z = U3.E1;         \n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        U3 z = U3.E1;         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedNonobviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M(U1 u1, U2 u2, U3 u3)\n+    {\n+        var x = u1;\n+        var y = u2;\n+        var z = u3;         \n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M(U1 u1, U2 u2, U3 u3)\n+    {\n+        U1 x = u1;\n+        U2 y = u2;\n+        U3 z = u3;         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M(string[] a1, string[][] a2)\n+    {\n+        foreach (string element in a1)\n+        { }  \n+ \n+        foreach (string[] element in a2)\n+        { }\n+    }\n+}\";\n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachObviousVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        foreach (var element in new string[] { \"\" })\n+        { }  \n+ \n+        foreach (var element in new int[] { new int[] { 1, 2, 3 }, new int[] { 4, 5, 6 } })", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 231, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding In the test you mentioned, it is `var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };`, which is an anonymous array creation such that the type is not given directly in the declaration like a regular array declaration (even though it is kinda obvious in this case). \n", "created_at": "2015-07-31T00:08:38Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35935831", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35935831"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35935831"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35935831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35936807", "pull_request_review_id": null, "id": 35936807, "diff_hunk": "@@ -0,0 +1,408 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\"; \n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleNonobviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    bool[] T() \n+    {\n+        return new[] { true };\n+    }\n+\n+    void M(int a, bool[] b)\n+    {\n+        var x = a;\n+        var y = T();  \n+        var z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    bool[] T() \n+    {\n+        return new[] { true };\n+    }\n+\n+    void M(int a, bool[] b)\n+    {\n+        int x = a;\n+        bool[] y = T();\n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        U1 x = new U1();\n+        U2 y = new U2();\n+        U3 z = U3.E1;        \n+    }\n+}\";\n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        var z = U3.E1;         \n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M()\n+    {\n+        var x = new U1();\n+        var y = new U2();\n+        U3 z = U3.E1;         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestUserDefinedNonobviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M(U1 u1, U2 u2, U3 u3)\n+    {\n+        var x = u1;\n+        var y = u2;\n+        var z = u3;         \n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    class U1\n+    {}\n+\n+    struct U2\n+    {}\n+\n+    enum U3 { E1, E2 }\n+\n+    void M(U1 u1, U2 u2, U3 u3)\n+    {\n+        U1 x = u1;\n+        U2 y = u2;\n+        U3 z = u3;         \n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M(string[] a1, string[][] a2)\n+    {\n+        foreach (string element in a1)\n+        { }  \n+ \n+        foreach (string[] element in a2)\n+        { }\n+    }\n+}\";\n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleForEachObviousVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        foreach (var element in new string[] { \"\" })\n+        { }  \n+ \n+        foreach (var element in new int[] { new int[] { 1, 2, 3 }, new int[] { 4, 5, 6 } })", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 231, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "@genlu Ah, right.\n", "created_at": "2015-07-31T00:25:18Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35936807", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35936807"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35936807"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35936807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937033", "pull_request_review_id": null, "id": 35937033, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 18, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Do analyzers need to be marked `public`? (If not, explicitly mark it `internal`.)\n", "created_at": "2015-07-31T00:29:24Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937033", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937033"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937033"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937197", "pull_request_review_id": null, "id": 35937197, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 18, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Ah.. I missed this one. Thanks for notice that. Since @michaelcfanning has refactored the code such that analyzers are now in a separate binary, I think it should be `public`.\n", "created_at": "2015-07-31T00:32:36Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937197", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937197"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937197"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937275", "pull_request_review_id": null, "id": 35937275, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;\n+        }\n+\n+        // Return true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        // VariableDeclarationSyntax.Variables.Single().Initializer.Value or ForEachStatementSyntax.Expression is:", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 77, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "This puts a lot of implementation into the comment. I'd replace the text on this line (that is, the text following the \"and\" on the previous line) with:\n\n\"... the variable is initialized with one of the following:\"\n", "created_at": "2015-07-31T00:34:29Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937275", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937275"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937275"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937404", "pull_request_review_id": null, "id": 35937404, "diff_hunk": "@@ -126,6 +126,15 @@\n   <data name=\"ExplicitThisFixer_Title\" xml:space=\"preserve\">\n     <value>Remove 'this' qualifier</value>\n   </data>\n+  <data name=\"ExplicitVariableTypeAnalyzer_MessageFormat\" xml:space=\"preserve\">\n+    <value>Variable '{0}' should be declared with explicit type</value>\n+  </data>\n+  <data name=\"ExplicitVariableTypeAnalyzer_Title\" xml:space=\"preserve\">\n+    <value>Replace the usage of 'var' with an explicit type</value>\n+  </data>\n+  <data name=\"ExplicitVariableTypeFixer_Title\" xml:space=\"preserve\">\n+    <value>Replace the usage of 'var' with explicit type</value>", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/Resources.resx", "position": null, "original_position": 11, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"... with _an_ explicit type\" (for consistency with the fixer title). And I think the message format should also be \".. with _an_ explicit type\".\n", "created_at": "2015-07-31T00:37:02Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937404", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937404"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937404"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937436", "pull_request_review_id": null, "id": 35937436, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;\n+        }\n+\n+        // Return true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        // VariableDeclarationSyntax.Variables.Single().Initializer.Value or ForEachStatementSyntax.Expression is:\n+        //   1. LiteralExpressionSyntax, e.g. var x = 10;\n+        //   2. CastExpressionSyntax, e.g. var x = (Foo)f;\n+        //   3. BinaryExpressionSyntax with Kind == AsExpression\n+        //   4. A object creation syntax node, which (at least) includes:\n+        //          - ObjectCreationExpressionSyntax\n+        //          - ArrayCreationExpressionSyntax\n+        // \n+        //      ImplicitArrayCreationExpressionSyntax: This one is not included. e.g. new[] {}\n+        //\n+        // TODO: AnonymousObjectCreationExpressionSyntax could be filtered out here as well, maybe we want to do that?\n+        //       The trade-off here is the logic we use to check syntax node is not as accurate as a query to SemanticModel, \n+        //       which is (presumbly) much slower\n+        private static bool IsTypeObvious(SyntaxNode node)\n+        {\n+            ", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 92, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Remove extra blank line.\n", "created_at": "2015-07-31T00:37:46Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937436", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937436"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937436"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937546", "pull_request_review_id": null, "id": 35937546, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;\n+        }\n+\n+        // Return true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        // VariableDeclarationSyntax.Variables.Single().Initializer.Value or ForEachStatementSyntax.Expression is:\n+        //   1. LiteralExpressionSyntax, e.g. var x = 10;\n+        //   2. CastExpressionSyntax, e.g. var x = (Foo)f;\n+        //   3. BinaryExpressionSyntax with Kind == AsExpression\n+        //   4. A object creation syntax node, which (at least) includes:\n+        //          - ObjectCreationExpressionSyntax\n+        //          - ArrayCreationExpressionSyntax\n+        // \n+        //      ImplicitArrayCreationExpressionSyntax: This one is not included. e.g. new[] {}\n+        //\n+        // TODO: AnonymousObjectCreationExpressionSyntax could be filtered out here as well, maybe we want to do that?\n+        //       The trade-off here is the logic we use to check syntax node is not as accurate as a query to SemanticModel, \n+        //       which is (presumbly) much slower\n+        private static bool IsTypeObvious(SyntaxNode node)\n+        {\n+            \n+            if (node == null)\n+            {\n+                return false;\n+            }\n+\n+            ExpressionSyntax expressionNode = null;\n+            if (node is VariableDeclarationSyntax)\n+            {\n+                expressionNode = ((VariableDeclarationSyntax)node).Variables.Single().Initializer.Value;", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 101, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "FxCop would complain about the inefficiency of casting twice (once in the `is` expression, once with the explicit cast). Instead:\n\n```\nvar variableDeclaration = node as VariableDeclarationSyntax;\nif (variableDeclaration != null)\n{\n    expressionNode = variableDeclaration.Variables.Single().Initializer.Value;\n    ...\n```\n\n...and similarly with the casts to `ForEachStatementSyntax` below.\n", "created_at": "2015-07-31T00:40:28Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937546", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937546"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937546"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937726", "pull_request_review_id": null, "id": 35937726, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)\n+            {\n+                DocumentEditor documentEditor = await DocumentEditor.CreateAsync(context.Document, cancellationToken);context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, \n+                                                        root, \n+                                                        typeSyntaxNode, \n+                                                        documentEditor.Generator.TypeExpression(varSymbol.Type).WithTriviaFrom(typeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode explicitTypeNode)\n+        {\n+            return Task.FromResult(\n+                document.WithSyntaxRoot(root.ReplaceNode(varNode, explicitTypeNode.WithAdditionalAnnotations(Simplifier.Annotation))));\n+        }\n+\n+        private static RuleType GetRuleType(Diagnostic diagnostic)\n+        {\n+            Debug.Assert(diagnostic != null);\n+\n+            foreach (string customTag in diagnostic.Descriptor.CustomTags)\n+            {\n+                switch (customTag)\n+                {\n+                    case ExplicitVariableTypeAnalyzer.VariableDeclarationCustomTag:\n+                        return RuleType.RuleVariableDeclaration;\n+                    case ExplicitVariableTypeAnalyzer.ForEachStatementCustomTag:\n+                        return RuleType.RuleForEachStatement;\n+                    // Diagnostics corresponding to this fixer must has either one of these above two custom tags", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 99, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"has\" => \"have\"\n", "created_at": "2015-07-31T00:44:38Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937726", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937726"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937726"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937781", "pull_request_review_id": null, "id": 35937781, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 51, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"declarators\"\n", "created_at": "2015-07-31T00:45:31Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937781", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937781"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35937781"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35937781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939563", "pull_request_review_id": null, "id": 35939563, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;\n+        }\n+\n+        // Return true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        // VariableDeclarationSyntax.Variables.Single().Initializer.Value or ForEachStatementSyntax.Expression is:\n+        //   1. LiteralExpressionSyntax, e.g. var x = 10;\n+        //   2. CastExpressionSyntax, e.g. var x = (Foo)f;\n+        //   3. BinaryExpressionSyntax with Kind == AsExpression\n+        //   4. A object creation syntax node, which (at least) includes:\n+        //          - ObjectCreationExpressionSyntax\n+        //          - ArrayCreationExpressionSyntax\n+        // \n+        //      ImplicitArrayCreationExpressionSyntax: This one is not included. e.g. new[] {}\n+        //\n+        // TODO: AnonymousObjectCreationExpressionSyntax could be filtered out here as well, maybe we want to do that?\n+        //       The trade-off here is the logic we use to check syntax node is not as accurate as a query to SemanticModel, \n+        //       which is (presumbly) much slower\n+        private static bool IsTypeObvious(SyntaxNode node)\n+        {\n+            \n+            if (node == null)\n+            {\n+                return false;\n+            }\n+\n+            ExpressionSyntax expressionNode = null;\n+            if (node is VariableDeclarationSyntax)\n+            {\n+                expressionNode = ((VariableDeclarationSyntax)node).Variables.Single().Initializer.Value;", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 101, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@lgolding Although it does 2 extra casting, I think the if - elseif makes the logic clearer.\n", "created_at": "2015-07-31T01:22:00Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35939563", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939563"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35939563"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35939563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35947470", "pull_request_review_id": null, "id": 35947470, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)\n+            {\n+                DocumentEditor documentEditor = await DocumentEditor.CreateAsync(context.Document, cancellationToken);context.RegisterCodeFix(", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 70, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T05:31:01Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35947470", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35947470"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35947470"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35947470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35947837", "pull_request_review_id": null, "id": 35947837, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 68, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@srivatsn Hmm... in this case, I think the null check should be in analyzer, and fixer wouldn't need to check again. \n", "created_at": "2015-07-31T05:43:03Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35947837", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35947837"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35947837"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35947837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948064", "pull_request_review_id": null, "id": 35948064, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 58, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@srivatsn The span provided by diagnostic is retrieved by `ForEachStatementSyntax.Identifier.GetLocation()`, and the existence of the `ForEachStatementSyntax` node guarantees the Parent is non-null I think. On the other hand, I probably need to do a null check for `Identifier` property in the analyzer... \n", "created_at": "2015-07-31T05:50:33Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948064", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948064"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948064"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948149", "pull_request_review_id": null, "id": 35948149, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;\n+        }\n+\n+        // Return true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        // VariableDeclarationSyntax.Variables.Single().Initializer.Value or ForEachStatementSyntax.Expression is:", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 77, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T05:53:01Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948149", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948149"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948149"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948155", "pull_request_review_id": null, "id": 35948155, "diff_hunk": "@@ -126,6 +126,15 @@\n   <data name=\"ExplicitThisFixer_Title\" xml:space=\"preserve\">\n     <value>Remove 'this' qualifier</value>\n   </data>\n+  <data name=\"ExplicitVariableTypeAnalyzer_MessageFormat\" xml:space=\"preserve\">\n+    <value>Variable '{0}' should be declared with explicit type</value>\n+  </data>\n+  <data name=\"ExplicitVariableTypeAnalyzer_Title\" xml:space=\"preserve\">\n+    <value>Replace the usage of 'var' with an explicit type</value>\n+  </data>\n+  <data name=\"ExplicitVariableTypeFixer_Title\" xml:space=\"preserve\">\n+    <value>Replace the usage of 'var' with explicit type</value>", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/Resources.resx", "position": null, "original_position": 11, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T05:53:10Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948155", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948155"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948155"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948165", "pull_request_review_id": null, "id": 35948165, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;\n+        }\n+\n+        // Return true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        // VariableDeclarationSyntax.Variables.Single().Initializer.Value or ForEachStatementSyntax.Expression is:\n+        //   1. LiteralExpressionSyntax, e.g. var x = 10;\n+        //   2. CastExpressionSyntax, e.g. var x = (Foo)f;\n+        //   3. BinaryExpressionSyntax with Kind == AsExpression\n+        //   4. A object creation syntax node, which (at least) includes:\n+        //          - ObjectCreationExpressionSyntax\n+        //          - ArrayCreationExpressionSyntax\n+        // \n+        //      ImplicitArrayCreationExpressionSyntax: This one is not included. e.g. new[] {}\n+        //\n+        // TODO: AnonymousObjectCreationExpressionSyntax could be filtered out here as well, maybe we want to do that?\n+        //       The trade-off here is the logic we use to check syntax node is not as accurate as a query to SemanticModel, \n+        //       which is (presumbly) much slower\n+        private static bool IsTypeObvious(SyntaxNode node)\n+        {\n+            ", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 92, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T05:53:26Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948165", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948165"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948165"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948168", "pull_request_review_id": null, "id": 35948168, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)\n+            {\n+                DocumentEditor documentEditor = await DocumentEditor.CreateAsync(context.Document, cancellationToken);context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, \n+                                                        root, \n+                                                        typeSyntaxNode, \n+                                                        documentEditor.Generator.TypeExpression(varSymbol.Type).WithTriviaFrom(typeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode explicitTypeNode)\n+        {\n+            return Task.FromResult(\n+                document.WithSyntaxRoot(root.ReplaceNode(varNode, explicitTypeNode.WithAdditionalAnnotations(Simplifier.Annotation))));\n+        }\n+\n+        private static RuleType GetRuleType(Diagnostic diagnostic)\n+        {\n+            Debug.Assert(diagnostic != null);\n+\n+            foreach (string customTag in diagnostic.Descriptor.CustomTags)\n+            {\n+                switch (customTag)\n+                {\n+                    case ExplicitVariableTypeAnalyzer.VariableDeclarationCustomTag:\n+                        return RuleType.RuleVariableDeclaration;\n+                    case ExplicitVariableTypeAnalyzer.ForEachStatementCustomTag:\n+                        return RuleType.RuleForEachStatement;\n+                    // Diagnostics corresponding to this fixer must has either one of these above two custom tags", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 99, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T05:53:48Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948168", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948168"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948168"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948175", "pull_request_review_id": null, "id": 35948175, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 51, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T05:53:56Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948175", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948175"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948175"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948185", "pull_request_review_id": null, "id": 35948185, "diff_hunk": "@@ -0,0 +1,408 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\"; \n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            const string expected = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        var x = 0;\n+        var y = new bool[] { true, false };\n+    }\n+}\";\n+            Verify(text, expected, runFormatter: false);", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 55, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T05:54:21Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948185", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948185"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948185"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948391", "pull_request_review_id": null, "id": 35948391, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            return ((ILocalSymbol)symbol).Type.IsAnonymousType;\n+        }\n+\n+        // Return true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and ", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 76, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T06:01:32Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948391", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948391"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948391"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948397", "pull_request_review_id": null, "id": 35948397, "diff_hunk": "@@ -0,0 +1,116 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+\n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // Implicit typed variables cannot have multiple declartors  \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.Single(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        // Return true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 69, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T06:01:40Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948397", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948397"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948397"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948407", "pull_request_review_id": null, "id": 35948407, "diff_hunk": "@@ -0,0 +1,114 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System;\n+using System.Collections.Immutable;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CodeActions;\n+using Microsoft.CodeAnalysis.CodeFixes;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Simplification;\n+using Microsoft.CodeAnalysis.Text;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.Editing;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [ExportCodeFixProvider(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeFixer : CodeFixProvider\n+    {\n+        public override ImmutableArray<string> FixableDiagnosticIds\n+            => ImmutableArray.Create(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+\n+        public override FixAllProvider GetFixAllProvider()\n+        {\n+            return WellKnownFixAllProviders.BatchFixer;\n+        }\n+\n+        public override async Task RegisterCodeFixesAsync(CodeFixContext context)\n+        {\n+            CancellationToken cancellationToken = context.CancellationToken;\n+            SyntaxNode root = await context.Document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);\n+            SemanticModel model = await context.Document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false);\n+            Diagnostic diagnostic = context.Diagnostics.First();\n+            TextSpan diagnosticSpan = diagnostic.Location.SourceSpan;\n+\n+            SyntaxNode typeSyntaxNode = null;\n+            ILocalSymbol varSymbol = null;\n+            switch (GetRuleType(diagnostic))\n+            {\n+                case RuleType.RuleVariableDeclaration:\n+                    var variableDeclarationNode = root.\n+                        FindNode(diagnosticSpan).\n+                        FirstAncestorOrSelf<VariableDeclarationSyntax>();\n+                    Debug.Assert(variableDeclarationNode != null);\n+                    typeSyntaxNode = variableDeclarationNode.Type;\n+                    // Implicit typed variables cannot have multiple declartors\n+                    varSymbol = (ILocalSymbol)model.GetDeclaredSymbol(variableDeclarationNode.Variables.Single(), cancellationToken);\n+                    break;\n+\n+                case RuleType.RuleForEachStatement:\n+                    var forEachStatementNode = root.\n+                        FindToken(diagnosticSpan.Start).\n+                        Parent.\n+                        FirstAncestorOrSelf<ForEachStatementSyntax>();\n+                    Debug.Assert(forEachStatementNode != null);\n+                    typeSyntaxNode = forEachStatementNode.Type;\n+                    varSymbol = model.GetDeclaredSymbol(forEachStatementNode, cancellationToken);\n+                    break;\n+\n+                case RuleType.None:\n+                    break;\n+            }\n+            if (varSymbol != null)\n+            {\n+                DocumentEditor documentEditor = await DocumentEditor.CreateAsync(context.Document, cancellationToken);context.RegisterCodeFix(\n+                    CodeAction.Create(\n+                        Resources.ExplicitVariableTypeFixer_Title,\n+                        c => ReplaceVarWithExplicitType(context.Document, \n+                                                        root, \n+                                                        typeSyntaxNode, \n+                                                        documentEditor.Generator.TypeExpression(varSymbol.Type).WithTriviaFrom(typeSyntaxNode))),\n+                    diagnostic);\n+            }\n+        }\n+\n+        private Task<Document> ReplaceVarWithExplicitType(Document document, SyntaxNode root, SyntaxNode varNode, SyntaxNode explicitTypeNode)\n+        {\n+            return Task.FromResult(", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeFixer.cs", "position": null, "original_position": 83, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "fa9d08e0c4a87454e1cbf17b76f1ae4d9a32dec2", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Fixed.\n", "created_at": "2015-07-31T06:02:07Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948407", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948407"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r35948407"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/35948407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374719", "pull_request_review_id": null, "id": 36374719, "diff_hunk": "@@ -0,0 +1,399 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 10, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "I think something like 'ProvideExplicitVariableType' might be a more complete/descriptive name\n", "created_at": "2015-08-06T01:43:41Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36374719", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374719"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36374719"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374786", "pull_request_review_id": null, "id": 36374786, "diff_hunk": "@@ -0,0 +1,399 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 14, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "very likely disabling all diagnostics is something common to these tests that could be in a test base class. something to think about for a future change\n", "created_at": "2015-08-06T01:45:17Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36374786", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374786"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36374786"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374956", "pull_request_review_id": null, "id": 36374956, "diff_hunk": "@@ -0,0 +1,399 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\"; \n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 37, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "consider using 'input' as a name instead of text. also suggest always creating an 'expected' string variable. set expected = input; where that makes sense. alternately you could name your parameters in your verify call, like so:\n\nVerify(input, expected : input, runFormatter: false)\n\nI think the former would be better. this is a nit. your tests are very nice\n", "created_at": "2015-08-06T01:48:46Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36374956", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374956"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36374956"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36374956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375055", "pull_request_review_id": null, "id": 36375055, "diff_hunk": "@@ -0,0 +1,134 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 28, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "this needs to be put into a const string class at some point. \n", "created_at": "2015-08-06T01:51:18Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36375055", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375055"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36375055"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375107", "pull_request_review_id": null, "id": 36375107, "diff_hunk": "@@ -0,0 +1,134 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+                                              \n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // C# syntax doesn't allow implicitly typed variables have multiple declartors,", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 49, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "misspelling here and s/be 'to have multiple declarators'?\n", "created_at": "2015-08-06T01:52:21Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36375107", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375107"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36375107"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375505", "pull_request_review_id": null, "id": 36375505, "diff_hunk": "@@ -0,0 +1,134 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+                                              \n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // C# syntax doesn't allow implicitly typed variables have multiple declartors,\n+                // but we need to handle error situations (incomplete or extra declarators).   \n+                if (node.Type != null &&\n+                    node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.FirstOrDefault(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type != null &&\n+                    node.Identifier != null &&\n+                    node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        /// </summary>\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            bool? isAnonymousType = ((ILocalSymbol)symbol)?.Type?.IsAnonymousType;\n+            return isAnonymousType.HasValue && isAnonymousType.Value;\n+        }\n+\n+        /// <summary>\n+        /// Returns true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        /// the variable is initialized with Non-obvious type.\n+        /// \n+        ///  We define \"non-obvious\" as one of the following:\n+        ///   1. LiteralExpressionSyntax, e.g. var x = 10;\n+        ///   2. CastExpressionSyntax, e.g. var x = (Foo)f;\n+        ///   3. BinaryExpressionSyntax with Kind == AsExpression\n+        ///   4. A object creation syntax node, which (at least) includes:\n+        ///      4.1 ObjectCreationExpressionSyntax\n+        ///      4.2 ArrayCreationExpressionSyntax\n+        /// \n+        ///  ImplicitArrayCreationExpressionSyntax: This one is not included. e.g. new[] {}\n+        /// </summary>\n+        // TODO: AnonymousObjectCreationExpressionSyntax could be filtered out here as well, maybe we want to do that?\n+        //       The trade-off here is the logic we use to check syntax node is not as accurate as a query to SemanticModel, \n+        //       which is (presumbly) much slower. \n+        private static bool IsTypeObvious(SyntaxNode node)\n+        {            \n+            if (node == null)\n+            {\n+                return false;\n+            }\n+\n+            ExpressionSyntax expressionNode = null;\n+            if (node is VariableDeclarationSyntax)\n+            {\n+                expressionNode = ((VariableDeclarationSyntax)node)?.Variables.FirstOrDefault()?.Initializer?.Value;\n+            }\n+            else if (node is ForEachStatementSyntax)", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 113, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "I would just use else here. the cast to ForEachStatementSyntax would throw an exception in the following clause if it is the wrong type (because you know it is non-null). So the Debug.Fail would be unnecessary\n", "created_at": "2015-08-06T01:57:13Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36375505", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375505"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36375505"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375587", "pull_request_review_id": null, "id": 36375587, "diff_hunk": "@@ -0,0 +1,134 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+                                              \n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // C# syntax doesn't allow implicitly typed variables have multiple declartors,\n+                // but we need to handle error situations (incomplete or extra declarators).   \n+                if (node.Type != null &&\n+                    node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.FirstOrDefault(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type != null &&\n+                    node.Identifier != null &&\n+                    node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        /// </summary>\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            bool? isAnonymousType = ((ILocalSymbol)symbol)?.Type?.IsAnonymousType;\n+            return isAnonymousType.HasValue && isAnonymousType.Value;\n+        }\n+\n+        /// <summary>\n+        /// Returns true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        /// the variable is initialized with Non-obvious type.\n+        /// \n+        ///  We define \"non-obvious\" as one of the following:\n+        ///   1. LiteralExpressionSyntax, e.g. var x = 10;\n+        ///   2. CastExpressionSyntax, e.g. var x = (Foo)f;\n+        ///   3. BinaryExpressionSyntax with Kind == AsExpression\n+        ///   4. A object creation syntax node, which (at least) includes:\n+        ///      4.1 ObjectCreationExpressionSyntax\n+        ///      4.2 ArrayCreationExpressionSyntax\n+        /// \n+        ///  ImplicitArrayCreationExpressionSyntax: This one is not included. e.g. new[] {}\n+        /// </summary>\n+        // TODO: AnonymousObjectCreationExpressionSyntax could be filtered out here as well, maybe we want to do that?\n+        //       The trade-off here is the logic we use to check syntax node is not as accurate as a query to SemanticModel, \n+        //       which is (presumbly) much slower. \n+        private static bool IsTypeObvious(SyntaxNode node)\n+        {            \n+            if (node == null)\n+            {\n+                return false;\n+            }\n+\n+            ExpressionSyntax expressionNode = null;\n+            if (node is VariableDeclarationSyntax)\n+            {\n+                expressionNode = ((VariableDeclarationSyntax)node)?.Variables.FirstOrDefault()?.Initializer?.Value;\n+            }\n+            else if (node is ForEachStatementSyntax)\n+            {\n+                expressionNode = ((ForEachStatementSyntax)node)?.Expression;\n+            }\n+            else\n+            {\n+                Debug.Fail(\"This program location is thought to be unreachable.\");\n+            }\n+            // 'expressionNode == null' means the code under inspection has errors,\n+            // so we return 'true' to avoid firing a warning.\n+            return expressionNode == null ?\n+                   true :\n+                   expressionNode != null &&\n+                 ((expressionNode is BinaryExpressionSyntax &&\n+                   expressionNode.Kind() == SyntaxKind.AsExpression) ||", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 127, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "don't you just need the SyntaxKind.AsExpression test here? IE, is it ever possible that Syntax.AsExpression is true but the item is not a BinaryExpressionSyntax? Probably not, I'm guessing\n", "created_at": "2015-08-06T01:58:27Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36375587", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375587"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36375587"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36375587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379330", "pull_request_review_id": null, "id": 36379330, "diff_hunk": "@@ -0,0 +1,399 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 10, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@michaelcfanning Sounds good. Fixed.\n", "created_at": "2015-08-06T03:52:58Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36379330", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379330"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36379330"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379346", "pull_request_review_id": null, "id": 36379346, "diff_hunk": "@@ -0,0 +1,399 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using Microsoft.DotNet.CodeFormatter.Analyzers;\n+\n+using Xunit;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers.Tests\n+{\n+    public sealed class ExplicitVariableTypeAnalyzerTests : AnalyzerFixerTestBase\n+    {\n+        public ExplicitVariableTypeAnalyzerTests()\n+        {\n+            DisableAllDiagnostics();\n+            EnableDiagnostic(ExplicitVariableTypeAnalyzer.DiagnosticId);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleTypeExplicitDeclaration()\n+        {\n+            const string text = @\"\n+class C1\n+{\n+    void M()\n+    {\n+        int x = 0;\n+        bool[] y = { true };  \n+        int[][] z = new[] { new[] { 1, 2, 3 }, new[] { 4, 5, 6 } };\n+    }\n+}\"; \n+            Verify(text, text, runFormatter: false);\n+        }\n+\n+        [Fact]\n+        public void TestSimpleObviousTypeVarDeclaration()\n+        {\n+            const string text = @\"", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers.Tests/ExplicitVariableTypeAnalyzerTests.cs", "position": null, "original_position": 37, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@michaelcfanning Fixed.\n", "created_at": "2015-08-06T03:53:19Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36379346", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379346"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36379346"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379700", "pull_request_review_id": null, "id": 36379700, "diff_hunk": "@@ -0,0 +1,134 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+                                              \n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // C# syntax doesn't allow implicitly typed variables have multiple declartors,\n+                // but we need to handle error situations (incomplete or extra declarators).   \n+                if (node.Type != null &&\n+                    node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.FirstOrDefault(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type != null &&\n+                    node.Identifier != null &&\n+                    node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        /// </summary>\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            bool? isAnonymousType = ((ILocalSymbol)symbol)?.Type?.IsAnonymousType;\n+            return isAnonymousType.HasValue && isAnonymousType.Value;\n+        }\n+\n+        /// <summary>\n+        /// Returns true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        /// the variable is initialized with Non-obvious type.\n+        /// \n+        ///  We define \"non-obvious\" as one of the following:\n+        ///   1. LiteralExpressionSyntax, e.g. var x = 10;\n+        ///   2. CastExpressionSyntax, e.g. var x = (Foo)f;\n+        ///   3. BinaryExpressionSyntax with Kind == AsExpression\n+        ///   4. A object creation syntax node, which (at least) includes:\n+        ///      4.1 ObjectCreationExpressionSyntax\n+        ///      4.2 ArrayCreationExpressionSyntax\n+        /// \n+        ///  ImplicitArrayCreationExpressionSyntax: This one is not included. e.g. new[] {}\n+        /// </summary>\n+        // TODO: AnonymousObjectCreationExpressionSyntax could be filtered out here as well, maybe we want to do that?\n+        //       The trade-off here is the logic we use to check syntax node is not as accurate as a query to SemanticModel, \n+        //       which is (presumbly) much slower. \n+        private static bool IsTypeObvious(SyntaxNode node)\n+        {            \n+            if (node == null)\n+            {\n+                return false;\n+            }\n+\n+            ExpressionSyntax expressionNode = null;\n+            if (node is VariableDeclarationSyntax)\n+            {\n+                expressionNode = ((VariableDeclarationSyntax)node)?.Variables.FirstOrDefault()?.Initializer?.Value;\n+            }\n+            else if (node is ForEachStatementSyntax)\n+            {\n+                expressionNode = ((ForEachStatementSyntax)node)?.Expression;\n+            }\n+            else\n+            {\n+                Debug.Fail(\"This program location is thought to be unreachable.\");\n+            }\n+            // 'expressionNode == null' means the code under inspection has errors,\n+            // so we return 'true' to avoid firing a warning.\n+            return expressionNode == null ?\n+                   true :\n+                   expressionNode != null &&\n+                 ((expressionNode is BinaryExpressionSyntax &&\n+                   expressionNode.Kind() == SyntaxKind.AsExpression) ||", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 127, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@michaelcfanning You are right. Fixed.\n", "created_at": "2015-08-06T04:02:12Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36379700", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379700"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36379700"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379943", "pull_request_review_id": null, "id": 36379943, "diff_hunk": "@@ -0,0 +1,134 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Immutable;\n+using System.Composition;\n+using System.Diagnostics;\n+using System.Linq;\n+using System.Threading;\n+\n+using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(DiagnosticAnalyzer))]\n+    [DiagnosticAnalyzer(LanguageNames.CSharp)]\n+    public class ExplicitVariableTypeAnalyzer : DiagnosticAnalyzer\n+    {\n+        internal const string DiagnosticId = AnalyzerIds.ExplicitVariableType;\n+        internal const string VariableDeclarationCustomTag = \"VariableDeclarationTag\";\n+        internal const string ForEachStatementCustomTag = \"ForEachStatementTag\";\n+\n+        private static readonly DiagnosticDescriptor s_ruleVariableDeclaration = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: VariableDeclarationCustomTag);\n+        private static readonly DiagnosticDescriptor s_ruleForEachStatement = new DiagnosticDescriptor(DiagnosticId,\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_Title)),\n+                                                                            ResourceHelper.MakeLocalizableString(nameof(Resources.ExplicitVariableTypeAnalyzer_MessageFormat)),\n+                                                                            \"Style\",\n+                                                                            DiagnosticSeverity.Warning,\n+                                                                            true,\n+                                                                            customTags: ForEachStatementCustomTag);\n+\n+        private static readonly ImmutableArray<DiagnosticDescriptor> s_supportedRules = ImmutableArray.Create(s_ruleVariableDeclaration, s_ruleForEachStatement);\n+        public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics\n+            => s_supportedRules;\n+                                              \n+        public override void Initialize(AnalysisContext context)\n+        {\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (VariableDeclarationSyntax)syntaxContext.Node;\n+                // C# syntax doesn't allow implicitly typed variables have multiple declartors,\n+                // but we need to handle error situations (incomplete or extra declarators).   \n+                if (node.Type != null &&\n+                    node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node.Variables.FirstOrDefault(), syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleVariableDeclaration, node.GetLocation(), node.Variables.Single().Identifier.Text));\n+                }\n+            }, SyntaxKind.VariableDeclaration);\n+\n+            context.RegisterSyntaxNodeAction(syntaxContext =>\n+            {\n+                var node = (ForEachStatementSyntax)syntaxContext.Node; \n+                if (node.Type != null &&\n+                    node.Identifier != null &&\n+                    node.Type.IsVar &&\n+                    !IsTypeObvious(node) &&\n+                    !IsAnonymousType(node, syntaxContext.SemanticModel, syntaxContext.CancellationToken))\n+                {\n+                    syntaxContext.ReportDiagnostic(Diagnostic.Create(s_ruleForEachStatement, node.Identifier.GetLocation(), node.Identifier.Text));\n+                }\n+            }, SyntaxKind.ForEachStatement);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if given SyntaxNode has an anonymous type, which can't be replaced by an explicit type.\n+        /// </summary>\n+        private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, CancellationToken cancellationToken)\n+        {\n+            ISymbol symbol = model.GetDeclaredSymbol(node, cancellationToken); \n+            bool? isAnonymousType = ((ILocalSymbol)symbol)?.Type?.IsAnonymousType;\n+            return isAnonymousType.HasValue && isAnonymousType.Value;\n+        }\n+\n+        /// <summary>\n+        /// Returns true if given SyntaxNode is either VariableDeclarationSyntax or ForEachStatementSyntax and \n+        /// the variable is initialized with Non-obvious type.\n+        /// \n+        ///  We define \"non-obvious\" as one of the following:\n+        ///   1. LiteralExpressionSyntax, e.g. var x = 10;\n+        ///   2. CastExpressionSyntax, e.g. var x = (Foo)f;\n+        ///   3. BinaryExpressionSyntax with Kind == AsExpression\n+        ///   4. A object creation syntax node, which (at least) includes:\n+        ///      4.1 ObjectCreationExpressionSyntax\n+        ///      4.2 ArrayCreationExpressionSyntax\n+        /// \n+        ///  ImplicitArrayCreationExpressionSyntax: This one is not included. e.g. new[] {}\n+        /// </summary>\n+        // TODO: AnonymousObjectCreationExpressionSyntax could be filtered out here as well, maybe we want to do that?\n+        //       The trade-off here is the logic we use to check syntax node is not as accurate as a query to SemanticModel, \n+        //       which is (presumbly) much slower. \n+        private static bool IsTypeObvious(SyntaxNode node)\n+        {            \n+            if (node == null)\n+            {\n+                return false;\n+            }\n+\n+            ExpressionSyntax expressionNode = null;\n+            if (node is VariableDeclarationSyntax)\n+            {\n+                expressionNode = ((VariableDeclarationSyntax)node)?.Variables.FirstOrDefault()?.Initializer?.Value;\n+            }\n+            else if (node is ForEachStatementSyntax)", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 113, "commit_id": "7eff6d036710c801c4ef716b8c54cd2cd4f67308", "original_commit_id": "52243b41d9ab42acbf235bb6a3e3e5ee982921aa", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@michaelcfanning Fixed.\n", "created_at": "2015-08-06T04:09:07Z", "updated_at": "2015-08-06T04:15:49Z", "html_url": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36379943", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/155", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379943"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/155#discussion_r36379943"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/155"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36379943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36569624", "pull_request_review_id": null, "id": 36569624, "diff_hunk": "@@ -101,9 +101,13 @@ private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, Cancel\n         //       which is (presumbly) much slower. \n         private static bool IsTypeObvious(SyntaxNode node)\n         {            \n-            if (node == null)\n+            // Since parser would generate the missing node (IsMissing == true) and attach a diagnostic to it,\n+            // we traverse the sub tree only if a diagnostic is attached as optimization\n+            if (node == null || \n+               (node.ContainsDiagnostics && \n+                node.DescendantNodesAndTokensAndSelf().Where(n => n.IsMissing).Any()))", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ProvideExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 9, "commit_id": "cd6f8573dffddf6fbe638d532110992c7673fec3", "original_commit_id": "83f2242f311628843ae4864325536a6456ab630f", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "I am sure we want to minimize node descendants traversal. I suggest you rewrite this code a bit to defer this call until later in the method, when you've conclusively determined you would otherwise return false. Make sense? IOW, eliminate these checks here. Evaluate the rest of the function. If retval appears to be false, put in this logic to sanity check you don't need to flip the result to true due to the missing node case you've identified.\n", "created_at": "2015-08-07T23:17:43Z", "updated_at": "2015-08-07T23:32:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/166#discussion_r36569624", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/166", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36569624"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/166#discussion_r36569624"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/166"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36569624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36570142", "pull_request_review_id": null, "id": 36570142, "diff_hunk": "@@ -101,9 +101,13 @@ private static bool IsAnonymousType(SyntaxNode node, SemanticModel model, Cancel\n         //       which is (presumbly) much slower. \n         private static bool IsTypeObvious(SyntaxNode node)\n         {            \n-            if (node == null)\n+            // Since parser would generate the missing node (IsMissing == true) and attach a diagnostic to it,\n+            // we traverse the sub tree only if a diagnostic is attached as optimization\n+            if (node == null || \n+               (node.ContainsDiagnostics && \n+                node.DescendantNodesAndTokensAndSelf().Where(n => n.IsMissing).Any()))", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/ProvideExplicitVariableTypeAnalyzer.cs", "position": null, "original_position": 9, "commit_id": "cd6f8573dffddf6fbe638d532110992c7673fec3", "original_commit_id": "83f2242f311628843ae4864325536a6456ab630f", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "@michaelcfanning Fixed. Thanks!\n", "created_at": "2015-08-07T23:29:54Z", "updated_at": "2015-08-07T23:32:40Z", "html_url": "https://github.com/dotnet/codeformatter/pull/166#discussion_r36570142", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/166", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36570142"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/166#discussion_r36570142"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/166"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/36570142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812603", "pull_request_review_id": null, "id": 37812603, "diff_hunk": "@@ -11,11 +11,17 @@ namespace CodeFormatter\n     [Verb(\"format\", HelpText = \"Apply code formatting rules and analyzers to specified project.\")]\n     public class FormatOptions\n     {\n-        [Option(\n-            't', \"target\", \n+        [Value(", "path": "src/CodeFormatter/FormatOptions.cs", "position": null, "original_position": 6, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "This change drops the requirement to prefix a SLN or project file target with -t or --target. All targets have to precede any other arguments on the command-line now, however.\n", "created_at": "2015-08-24T22:26:25Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r37812603", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812603"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r37812603"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812734", "pull_request_review_id": null, "id": 37812734, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+\n+using Microsoft.CodeAnalysis.Options;\n+ \n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(IOptionsProvider)), Shared]\n+    internal class OptimizeNamespaceImportsOptions : IOptionsProvider\n+    {        \n+        public IEnumerable<IOption> GetOptions()\n+        {\n+            return new List<IOption>\n+            {\n+                Enabled,\n+                RemoveUnnecessaryImports,", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/OptimizeNamespaceImportsOptions.cs", "position": 20, "original_position": 20, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "We don't support all these options, obviously. I've filled out a prospective set that we might support in the analyzer, to give a better sense of what this pattern looks like in practice.\n", "created_at": "2015-08-24T22:27:52Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r37812734", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812734"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r37812734"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812934", "pull_request_review_id": null, "id": 37812934, "diff_hunk": "@@ -0,0 +1,39 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Concurrent;\n+using System.Diagnostics;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using Microsoft.CodeAnalysis.Options;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    internal static class OptionsHelper\n+    {\n+        private static PropertyBag defaultProperties = new PropertyBag();\n+\n+        private static ConcurrentDictionary<string, PropertyBag> additionalFileToOptionsMap = new ConcurrentDictionary<string, PropertyBag>();\n+\n+        public static PropertyBag GetProperties(AnalyzerOptions analyzerOptions)\n+        {             \n+            if (analyzerOptions.AdditionalFiles == null ||  analyzerOptions.AdditionalFiles.Length == 0)\n+            {\n+                return defaultProperties;\n+            }\n+\n+            Debug.Assert(analyzerOptions.AdditionalFiles.Length == 1);\n+\n+            string optionsFilePath = analyzerOptions.AdditionalFiles[0].Path;", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/OptionsHelper.cs", "position": null, "original_position": 26, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "Per Sri, we utilize the existing Roslyn AdditionalFiles argument to refer to options. By convention, we expect a single file to be provided in this way. If it exists, it should refer to a serialized set of analyzer options.\n", "created_at": "2015-08-24T22:29:39Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r37812934", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812934"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r37812934"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37812934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37831153", "pull_request_review_id": null, "id": 37831153, "diff_hunk": "@@ -59,7 +66,16 @@ private static ConventionBuilder GetConventions()\n                 .Export<ILocalSemanticFormattingRule>();\n             conventions.ForTypesDerivedFrom<IGlobalSemanticFormattingRule>()\n                 .Export<IGlobalSemanticFormattingRule>();\n+            conventions.ForTypesDerivedFrom<IGlobalSemanticFormattingRule>()\n+                            .Export<IGlobalSemanticFormattingRule>();", "path": "src/Microsoft.DotNet.CodeFormatting/FormattingEngine.cs", "position": null, "original_position": 26, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Duplicate statement.\n", "created_at": "2015-08-25T04:11:28Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r37831153", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37831153"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r37831153"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/37831153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38009503", "pull_request_review_id": null, "id": 38009503, "diff_hunk": "@@ -59,7 +66,16 @@ private static ConventionBuilder GetConventions()\n                 .Export<ILocalSemanticFormattingRule>();\n             conventions.ForTypesDerivedFrom<IGlobalSemanticFormattingRule>()\n                 .Export<IGlobalSemanticFormattingRule>();\n+            conventions.ForTypesDerivedFrom<IGlobalSemanticFormattingRule>()\n+                            .Export<IGlobalSemanticFormattingRule>();", "path": "src/Microsoft.DotNet.CodeFormatting/FormattingEngine.cs", "position": null, "original_position": 26, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "michaelcfanning", "id": 13526455, "avatar_url": "https://avatars3.githubusercontent.com/u/13526455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelcfanning", "html_url": "https://github.com/michaelcfanning", "followers_url": "https://api.github.com/users/michaelcfanning/followers", "following_url": "https://api.github.com/users/michaelcfanning/following{/other_user}", "gists_url": "https://api.github.com/users/michaelcfanning/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelcfanning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelcfanning/subscriptions", "organizations_url": "https://api.github.com/users/michaelcfanning/orgs", "repos_url": "https://api.github.com/users/michaelcfanning/repos", "events_url": "https://api.github.com/users/michaelcfanning/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelcfanning/received_events", "type": "User", "site_admin": false}, "body": "Good catch, thanks.\n", "created_at": "2015-08-26T17:25:32Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38009503", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38009503"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38009503"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38009503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38143352", "pull_request_review_id": null, "id": 38143352, "diff_hunk": "@@ -0,0 +1,47 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+\n+using Microsoft.CodeAnalysis.Options;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(IOptionsProvider)), Shared]\n+    internal class RuleOptions : IOptionsProvider\n+    {\n+        public IEnumerable<IOption> GetOptions()\n+        {\n+            return new List<IOption>\n+            {\n+                BraceNewLineEnabled,\n+                CopyrightHeaderEnabled,\n+                ExplicitThisEnabled,\n+                ExplicitVisibilityEnabled,\n+                FormatDocumentEnabled,\n+                RemoveCustomCopyrightEnabled,\n+                RemoveIllegalHeadersEnabled,\n+                MarkReadonlyFieldsEnabled,\n+                NewLineAboveEnabled,\n+                UnicodeLiteralsEnabled,\n+                UsingLocationEnabled", "path": "src/Microsoft.DotNet.CodeFormatting/Rules/RuleOptions.cs", "position": 29, "original_position": 29, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "genlu", "id": 788783, "avatar_url": "https://avatars0.githubusercontent.com/u/788783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genlu", "html_url": "https://github.com/genlu", "followers_url": "https://api.github.com/users/genlu/followers", "following_url": "https://api.github.com/users/genlu/following{/other_user}", "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genlu/subscriptions", "organizations_url": "https://api.github.com/users/genlu/orgs", "repos_url": "https://api.github.com/users/genlu/repos", "events_url": "https://api.github.com/users/genlu/events{/privacy}", "received_events_url": "https://api.github.com/users/genlu/received_events", "type": "User", "site_admin": false}, "body": "Even though these options are not currently used, we probably still should add `ExplicitVariableTypeEnabled` here when resolving conflicts.\n", "created_at": "2015-08-27T20:40:31Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38143352", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38143352"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38143352"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38143352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38151072", "pull_request_review_id": null, "id": 38151072, "diff_hunk": "@@ -28,12 +29,44 @@ internal static class Program\n \n         private static int Main(string[] args)\n         {            \n-            return Parser.Default.ParseArguments<ListOptions, FormatOptions>(args)\n+            return Parser.Default.ParseArguments<\n+                ListOptions, \n+                ExportOptions,\n+                FormatOptions>(args)\n               .Return(\n                 (ListOptions listOptions) => RunListCommand(listOptions),\n+                (ExportOptions exportOptions) => RunExportOptionsCommand(exportOptions),\n                 (FormatOptions formatOptions) => RunFormatCommand(formatOptions),\n                 errs => 1);\n+        }\n+\n+        private static int RunExportOptionsCommand(ExportOptions exportOptions)\n+        {\n+            int result = 1;\n+\n+            try\n+            {\n+                PropertyBag allOptions = new PropertyBag();\n+ \n+                // The export command could be updated in the future to accept an arbitrary set\n+                // of analyzers for which to build an options XML file suitable for configuring them.\n+                foreach (IOptionsProvider provider in FormattingEngine.GetOptionsProviders(s_defaultCompositionAssemblies))\n+                {\n+                    foreach (IOption option in provider.GetOptions())\n+                    {\n+                        allOptions.SetProperty(option, option.DefaultValue);\n+                    }\n+                }\n+                allOptions.SaveTo(exportOptions.OutputPath, id: \"codeformatter-options\");\n+                Console.WriteLine(\"Options file saved to:\" + Path.GetFullPath(exportOptions.OutputPath));\n+                result = 0;\n+            }\n+            catch (IOException) { }", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 45, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Add comment explaining why you chose not to report these particular exceptions.\n", "created_at": "2015-08-27T21:55:25Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38151072", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38151072"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38151072"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38151072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221000", "pull_request_review_id": null, "id": 38221000, "diff_hunk": "@@ -0,0 +1,14 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using CommandLine;\n+\n+namespace CodeFormatter\n+{\n+    [Verb(\"options\", HelpText = \"Export rule options to an XML file that can edited and used to configure subsequents formattings.\")]", "path": "src/CodeFormatter/ExportOptions.cs", "position": null, "original_position": 8, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"can be edited\"... \"subsequent\"\n", "created_at": "2015-08-28T17:04:01Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221000", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221000"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221000"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221186", "pull_request_review_id": null, "id": 38221186, "diff_hunk": "@@ -0,0 +1,14 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using CommandLine;\n+\n+namespace CodeFormatter\n+{\n+    [Verb(\"options\", HelpText = \"Export rule options to an XML file that can edited and used to configure subsequents formattings.\")]\n+    internal class ExportOptions\n+    {\n+        [Value(0, HelpText = \"List available built-in rules\", Required = true)]", "path": "src/CodeFormatter/ExportOptions.cs", "position": null, "original_position": 11, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"Output path for exported formatting options\"\n", "created_at": "2015-08-28T17:06:10Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221186", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221186"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221186"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221334", "pull_request_review_id": null, "id": 38221334, "diff_hunk": "@@ -11,11 +11,17 @@ namespace CodeFormatter\n     [Verb(\"format\", HelpText = \"Apply code formatting rules and analyzers to specified project.\")]\n     public class FormatOptions\n     {\n-        [Option(\n-            't', \"target\", \n+        [Value(\n+            0,\n             HelpText = \"Project, solution or response file to drive code formatting.\", \n             Required = true)]\n         public IEnumerable<string> FormatTargets { get; set; }\n+\n+        [Option(\n+            'o',\n+            \"options\",\n+            HelpText = \"Path to an options file that should be used to configure analysis\")]", "path": "src/CodeFormatter/FormatOptions.cs", "position": null, "original_position": 15, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"Path to file containing formatting options\"\n", "created_at": "2015-08-28T17:07:47Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221334", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221334"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221334"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221569", "pull_request_review_id": null, "id": 38221569, "diff_hunk": "@@ -11,11 +11,17 @@ namespace CodeFormatter\n     [Verb(\"format\", HelpText = \"Apply code formatting rules and analyzers to specified project.\")]\n     public class FormatOptions\n     {\n-        [Option(\n-            't', \"target\", \n+        [Value(\n+            0,\n             HelpText = \"Project, solution or response file to drive code formatting.\", \n             Required = true)]\n         public IEnumerable<string> FormatTargets { get; set; }\n+\n+        [Option(\n+            'o',\n+            \"options\",", "path": "src/CodeFormatter/FormatOptions.cs", "position": null, "original_position": 14, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"options-file-path\"\n", "created_at": "2015-08-28T17:10:12Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221569", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221569"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221569"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221598", "pull_request_review_id": null, "id": 38221598, "diff_hunk": "@@ -11,11 +11,17 @@ namespace CodeFormatter\n     [Verb(\"format\", HelpText = \"Apply code formatting rules and analyzers to specified project.\")]\n     public class FormatOptions\n     {\n-        [Option(\n-            't', \"target\", \n+        [Value(\n+            0,\n             HelpText = \"Project, solution or response file to drive code formatting.\", \n             Required = true)]\n         public IEnumerable<string> FormatTargets { get; set; }\n+\n+        [Option(\n+            'o',\n+            \"options\",\n+            HelpText = \"Path to an options file that should be used to configure analysis\")]\n+        public string OptionsFile { get; set; }\n    ", "path": "src/CodeFormatter/FormatOptions.cs", "position": null, "original_position": 17, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "OptionsFilePath\n", "created_at": "2015-08-28T17:10:21Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221598", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221598"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38221598"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38221598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222037", "pull_request_review_id": null, "id": 38222037, "diff_hunk": "@@ -28,12 +29,44 @@ internal static class Program\n \n         private static int Main(string[] args)\n         {            \n-            return Parser.Default.ParseArguments<ListOptions, FormatOptions>(args)\n+            return Parser.Default.ParseArguments<\n+                ListOptions, \n+                ExportOptions,\n+                FormatOptions>(args)\n               .Return(\n                 (ListOptions listOptions) => RunListCommand(listOptions),\n+                (ExportOptions exportOptions) => RunExportOptionsCommand(exportOptions),\n                 (FormatOptions formatOptions) => RunFormatCommand(formatOptions),\n                 errs => 1);\n+        }\n+\n+        private static int RunExportOptionsCommand(ExportOptions exportOptions)\n+        {\n+            int result = 1;\n+\n+            try\n+            {\n+                PropertyBag allOptions = new PropertyBag();\n+ \n+                // The export command could be updated in the future to accept an arbitrary set\n+                // of analyzers for which to build an options XML file suitable for configuring them.\n+                foreach (IOptionsProvider provider in FormattingEngine.GetOptionsProviders(s_defaultCompositionAssemblies))", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 34, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"At present it implicitly uses the analyzers defined by CodeFormatter itself.\"\n", "created_at": "2015-08-28T17:14:54Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222037", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222037"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222037"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222254", "pull_request_review_id": null, "id": 38222254, "diff_hunk": "@@ -28,12 +29,44 @@ internal static class Program\n \n         private static int Main(string[] args)\n         {            \n-            return Parser.Default.ParseArguments<ListOptions, FormatOptions>(args)\n+            return Parser.Default.ParseArguments<\n+                ListOptions, \n+                ExportOptions,\n+                FormatOptions>(args)\n               .Return(\n                 (ListOptions listOptions) => RunListCommand(listOptions),\n+                (ExportOptions exportOptions) => RunExportOptionsCommand(exportOptions),\n                 (FormatOptions formatOptions) => RunFormatCommand(formatOptions),\n                 errs => 1);\n+        }\n+\n+        private static int RunExportOptionsCommand(ExportOptions exportOptions)\n+        {\n+            int result = 1;\n+\n+            try\n+            {\n+                PropertyBag allOptions = new PropertyBag();\n+ \n+                // The export command could be updated in the future to accept an arbitrary set\n+                // of analyzers for which to build an options XML file suitable for configuring them.\n+                foreach (IOptionsProvider provider in FormattingEngine.GetOptionsProviders(s_defaultCompositionAssemblies))\n+                {\n+                    foreach (IOption option in provider.GetOptions())\n+                    {\n+                        allOptions.SetProperty(option, option.DefaultValue);\n+                    }\n+                }\n+                allOptions.SaveTo(exportOptions.OutputPath, id: \"codeformatter-options\");\n+                Console.WriteLine(\"Options file saved to:\" + Path.GetFullPath(exportOptions.OutputPath));", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 42, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Space after \":\".\n", "created_at": "2015-08-28T17:17:13Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222254", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222254"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222254"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222466", "pull_request_review_id": null, "id": 38222466, "diff_hunk": "@@ -114,6 +147,7 @@ private static int RunFormatCommand(FormatOptions options)\n             engine.FileNames = options.Files.ToImmutableArray();\n             engine.CopyrightHeader = ImmutableArray.ToImmutableArray<string>(new string[] { options.CopyrightHeader });\n             engine.AllowTables = options.DefineDotNetFormatter;\n+            engine.AnalyzerOptionsFile = options.OptionsFile;", "path": "src/CodeFormatter/Program.cs", "position": null, "original_position": 58, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "`FormattingOptionsFilePath`?\n", "created_at": "2015-08-28T17:19:35Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222466", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222466"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222466"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222470", "pull_request_review_id": null, "id": 38222470, "diff_hunk": "@@ -0,0 +1,39 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Concurrent;\n+using System.Diagnostics;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using Microsoft.CodeAnalysis.Options;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    internal static class OptionsHelper\n+    {\n+        private static PropertyBag defaultProperties = new PropertyBag();\n+\n+        private static ConcurrentDictionary<string, PropertyBag> additionalFileToOptionsMap = new ConcurrentDictionary<string, PropertyBag>();\n+\n+        public static PropertyBag GetProperties(AnalyzerOptions analyzerOptions)\n+        {             \n+            if (analyzerOptions.AdditionalFiles == null ||  analyzerOptions.AdditionalFiles.Length == 0)\n+            {\n+                return defaultProperties;\n+            }\n+\n+            Debug.Assert(analyzerOptions.AdditionalFiles.Length == 1);\n+\n+            string optionsFilePath = analyzerOptions.AdditionalFiles[0].Path;", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/OptionsHelper.cs", "position": null, "original_position": 26, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "Actually it's not necessary that there'll be one file. In fact users would say pass msbuild items of type \"Foo\" to the compiler as additionalfiles -so more often than not there will be multiple files. We should have some name or extension by which we should filter.\n", "created_at": "2015-08-28T17:19:37Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222470", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222470"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222470"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222559", "pull_request_review_id": null, "id": 38222559, "diff_hunk": "@@ -75,6 +75,8 @@\n     <Compile Include=\"NameHelper.cs\" />\n     <Compile Include=\"OptimizeNamespaceImportsAnalyzer.cs\" />\n     <Compile Include=\"OptimizeNamespaceImportsFixer.cs\" />\n+    <Compile Include=\"OptimizeNamespaceImportsOptions.cs\" />", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/Microsoft.DotNet.CodeFormatter.Analyzers.csproj", "position": null, "original_position": 4, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Add stub options classes to the other analyzers.\n", "created_at": "2015-08-28T17:20:39Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222559", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222559"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222559"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222711", "pull_request_review_id": null, "id": 38222711, "diff_hunk": "@@ -0,0 +1,39 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Concurrent;\n+using System.Diagnostics;\n+using Microsoft.CodeAnalysis.Diagnostics;\n+using Microsoft.CodeAnalysis.Options;\n+\n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    internal static class OptionsHelper\n+    {\n+        private static PropertyBag defaultProperties = new PropertyBag();\n+\n+        private static ConcurrentDictionary<string, PropertyBag> additionalFileToOptionsMap = new ConcurrentDictionary<string, PropertyBag>();\n+\n+        public static PropertyBag GetProperties(AnalyzerOptions analyzerOptions)\n+        {             \n+            if (analyzerOptions.AdditionalFiles == null ||  analyzerOptions.AdditionalFiles.Length == 0)\n+            {\n+                return defaultProperties;\n+            }\n+\n+            Debug.Assert(analyzerOptions.AdditionalFiles.Length == 1);\n+\n+            string optionsFilePath = analyzerOptions.AdditionalFiles[0].Path;", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/OptionsHelper.cs", "position": null, "original_position": 26, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "srivatsn", "id": 20570, "avatar_url": "https://avatars3.githubusercontent.com/u/20570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srivatsn", "html_url": "https://github.com/srivatsn", "followers_url": "https://api.github.com/users/srivatsn/followers", "following_url": "https://api.github.com/users/srivatsn/following{/other_user}", "gists_url": "https://api.github.com/users/srivatsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/srivatsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srivatsn/subscriptions", "organizations_url": "https://api.github.com/users/srivatsn/orgs", "repos_url": "https://api.github.com/users/srivatsn/repos", "events_url": "https://api.github.com/users/srivatsn/events{/privacy}", "received_events_url": "https://api.github.com/users/srivatsn/received_events", "type": "User", "site_admin": false}, "body": "I see below that while creating the compilation one additional file is being passed in and so that would be the justification for doing [0] here? That's worth a comment.\n", "created_at": "2015-08-28T17:22:05Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222711", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222711"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222711"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222750", "pull_request_review_id": null, "id": 38222750, "diff_hunk": "@@ -9,6 +9,7 @@\n using Microsoft.CodeAnalysis;\n using Microsoft.CodeAnalysis.CSharp;\n using Microsoft.CodeAnalysis.Diagnostics;\n+using Microsoft.CodeAnalysis.Options;", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/OptimizeNamespaceImportsAnalyzer.cs", "position": 4, "original_position": 4, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "You added classes to CodeFormatter but put them in a Roslyn namespace?\n", "created_at": "2015-08-28T17:22:30Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222750", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222750"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38222750"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38222750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223280", "pull_request_review_id": null, "id": 38223280, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+\n+using Microsoft.CodeAnalysis.Options;\n+ \n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(IOptionsProvider)), Shared]\n+    internal class OptimizeNamespaceImportsOptions : IOptionsProvider\n+    {        \n+        public IEnumerable<IOption> GetOptions()\n+        {\n+            return new List<IOption>\n+            {\n+                Enabled,\n+                RemoveUnnecessaryImports,\n+                SortImports,\n+                MoveImportsOutsideNamespaceDeclaration,\n+                PlaceSystemImportsFirst,\n+                InsertLineBetweenImportGroups\n+            }.ToImmutableArray();\n+        }\n+\n+        private const string AnalyzerName = AnalyzerIds.OptimizeNamespaceImports + \".\" + \"OptimizeNamespaceImports\";\n+\n+        /// <summary>\n+        /// Enable namepsace optimization\n+        /// </summary>\n+        public static PerLanguageOption<bool> Enabled { get; } = new PerLanguageOption<bool>(AnalyzerName, \"Enabled\", defaultValue: true);", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/OptimizeNamespaceImportsOptions.cs", "position": null, "original_position": 33, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Use `nameof(Enabled)`\n", "created_at": "2015-08-28T17:27:45Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38223280", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223280"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38223280"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223381", "pull_request_review_id": null, "id": 38223381, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+\n+using Microsoft.CodeAnalysis.Options;\n+ \n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(IOptionsProvider)), Shared]\n+    internal class OptimizeNamespaceImportsOptions : IOptionsProvider\n+    {        \n+        public IEnumerable<IOption> GetOptions()\n+        {\n+            return new List<IOption>\n+            {\n+                Enabled,\n+                RemoveUnnecessaryImports,\n+                SortImports,\n+                MoveImportsOutsideNamespaceDeclaration,\n+                PlaceSystemImportsFirst,\n+                InsertLineBetweenImportGroups\n+            }.ToImmutableArray();\n+        }\n+\n+        private const string AnalyzerName = AnalyzerIds.OptimizeNamespaceImports + \".\" + \"OptimizeNamespaceImports\";\n+\n+        /// <summary>\n+        /// Enable namepsace optimization\n+        /// </summary>\n+        public static PerLanguageOption<bool> Enabled { get; } = new PerLanguageOption<bool>(AnalyzerName, \"Enabled\", defaultValue: true);\n+\n+        /// <summary>\n+        /// Remove  imports that aren't required for compilation", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/OptimizeNamespaceImportsOptions.cs", "position": null, "original_position": 36, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "Extra space in \"Remove  imports\"\n", "created_at": "2015-08-28T17:29:00Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38223381", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223381"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38223381"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223497", "pull_request_review_id": null, "id": 38223497, "diff_hunk": "@@ -0,0 +1,59 @@\n+\ufeff// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+using System.Collections.Generic;\n+using System.Collections.Immutable;\n+using System.Composition;\n+\n+using Microsoft.CodeAnalysis.Options;\n+ \n+namespace Microsoft.DotNet.CodeFormatter.Analyzers\n+{\n+    [Export(typeof(IOptionsProvider)), Shared]\n+    internal class OptimizeNamespaceImportsOptions : IOptionsProvider\n+    {        \n+        public IEnumerable<IOption> GetOptions()\n+        {\n+            return new List<IOption>\n+            {\n+                Enabled,\n+                RemoveUnnecessaryImports,\n+                SortImports,\n+                MoveImportsOutsideNamespaceDeclaration,\n+                PlaceSystemImportsFirst,\n+                InsertLineBetweenImportGroups\n+            }.ToImmutableArray();\n+        }\n+\n+        private const string AnalyzerName = AnalyzerIds.OptimizeNamespaceImports + \".\" + \"OptimizeNamespaceImports\";\n+\n+        /// <summary>\n+        /// Enable namepsace optimization\n+        /// </summary>\n+        public static PerLanguageOption<bool> Enabled { get; } = new PerLanguageOption<bool>(AnalyzerName, \"Enabled\", defaultValue: true);\n+\n+        /// <summary>\n+        /// Remove  imports that aren't required for compilation\n+        /// </summary>\n+        public static PerLanguageOption<bool> RemoveUnnecessaryImports { get; } = new PerLanguageOption<bool>(AnalyzerName, \"RemoveUnnecessaryImports\", defaultValue: true);\n+\n+        /// <summary>\n+        /// Sort namespaces", "path": "src/Microsoft.DotNet.CodeFormatter.Analyzers/OptimizeNamespaceImportsOptions.cs", "position": null, "original_position": 41, "commit_id": "9bd819a084653b4fc44e3e9fdfea5ac24877448c", "original_commit_id": "52106a2b7977c79c0ddbbe4d807740f04c21d560", "user": {"login": "lgolding", "id": 11762653, "avatar_url": "https://avatars0.githubusercontent.com/u/11762653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgolding", "html_url": "https://github.com/lgolding", "followers_url": "https://api.github.com/users/lgolding/followers", "following_url": "https://api.github.com/users/lgolding/following{/other_user}", "gists_url": "https://api.github.com/users/lgolding/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgolding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgolding/subscriptions", "organizations_url": "https://api.github.com/users/lgolding/orgs", "repos_url": "https://api.github.com/users/lgolding/repos", "events_url": "https://api.github.com/users/lgolding/events{/privacy}", "received_events_url": "https://api.github.com/users/lgolding/received_events", "type": "User", "site_admin": false}, "body": "\"Sort import directives by namespace\"\n", "created_at": "2015-08-28T17:30:03Z", "updated_at": "2015-08-28T19:24:26Z", "html_url": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38223497", "pull_request_url": "https://api.github.com/repos/dotnet/codeformatter/pulls/170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223497"}, "html": {"href": "https://github.com/dotnet/codeformatter/pull/170#discussion_r38223497"}, "pull_request": {"href": "https://api.github.com/repos/dotnet/codeformatter/pulls/170"}}, "reactions": {"url": "https://api.github.com/repos/dotnet/codeformatter/pulls/comments/38223497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}}}