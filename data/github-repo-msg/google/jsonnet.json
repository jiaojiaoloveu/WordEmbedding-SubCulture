{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/google/jsonnet/issues/445", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/445/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/445/events", "html_url": "https://github.com/google/jsonnet/issues/445", "id": 289720001, "number": 445, "title": "Canonicalize ||| line endings", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-18T17:51:57Z", "updated_at": "2018-01-18T17:51:57Z", "closed_at": null, "author_association": "MEMBER", "body": "Ensure unix2dos does not change output of Jsonnet execution.\r\n\r\nDiscussion was in #421", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/441", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/441/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/441/events", "html_url": "https://github.com/google/jsonnet/issues/441", "id": 289410734, "number": 441, "title": "Any plan for a new release?", "user": {"login": "fajran", "id": 8653, "avatar_url": "https://avatars1.githubusercontent.com/u/8653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fajran", "html_url": "https://github.com/fajran", "followers_url": "https://api.github.com/users/fajran/followers", "following_url": "https://api.github.com/users/fajran/following{/other_user}", "gists_url": "https://api.github.com/users/fajran/gists{/gist_id}", "starred_url": "https://api.github.com/users/fajran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fajran/subscriptions", "organizations_url": "https://api.github.com/users/fajran/orgs", "repos_url": "https://api.github.com/users/fajran/repos", "events_url": "https://api.github.com/users/fajran/events{/privacy}", "received_events_url": "https://api.github.com/users/fajran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-17T20:56:34Z", "updated_at": "2018-01-17T20:56:34Z", "closed_at": null, "author_association": "NONE", "body": "I would like to use Bazel to call Jsonnet and produce a Yaml file of Json documents. I have [my changes](https://github.com/fajran/rules_jsonnet/commit/42d467a0f95cc96678031383def89f070c8a3335) ready for the Jsonnet Bazel rules but it requires a newer version of Jsonnet, newer than 0.9.5, or something that includes 381d7ddd.\r\n\r\nIf we have a new release, I will create a PR to [bazelbuild/rules_jsonnet](https://github.com/bazelbuild/rules_jsonnet) project to use the new version.\r\n\r\nthanks!", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/440", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/440/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/440/events", "html_url": "https://github.com/google/jsonnet/issues/440", "id": 289349104, "number": 440, "title": "[Documentation] asserts ", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-17T17:27:26Z", "updated_at": "2018-01-17T21:43:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Let the users know that asserts exist, especially asserts with custom messages.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/437", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/437/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/437/events", "html_url": "https://github.com/google/jsonnet/issues/437", "id": 289121898, "number": 437, "title": "Keyword that returns most recently nested field.", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-17T02:24:34Z", "updated_at": "2018-01-17T02:29:48Z", "closed_at": null, "author_association": "MEMBER", "body": "edit: Completely rewrote the example as it was nonsense...\r\n\r\n```\r\nlocal Template(name) = { name: name };\r\n\r\n{\r\n  local outer = self,\r\n  path: [],\r\n  f: Template(here) {\r\n    local outer2 = self,\r\n    path: outer.path + [self.name],\r\n    g: Template(here) {\r\n      local outer3 = self,\r\n      path: outer2.path + [self.name],\r\n    },\r\n  },\r\n} \r\n```\r\n\r\nyields\r\n\r\n```\r\n{\r\n   \"f\": {\r\n      \"g\": {\r\n         \"name\": \"g\",\r\n         \"path\": [\r\n            \"f\",\r\n            \"g\"\r\n         ]\r\n      },\r\n      \"name\": \"f\",\r\n      \"path\": [\r\n         \"f\"\r\n      ]\r\n   },\r\n   \"path\": [ ]\r\n}\r\n```\r\n\r\n@andreabedini expressed interest in this feature", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/437/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/425", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/425/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/425/events", "html_url": "https://github.com/google/jsonnet/issues/425", "id": 284703964, "number": 425, "title": "Support oct/hex number literals", "user": {"login": "ashi009", "id": 687367, "avatar_url": "https://avatars1.githubusercontent.com/u/687367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashi009", "html_url": "https://github.com/ashi009", "followers_url": "https://api.github.com/users/ashi009/followers", "following_url": "https://api.github.com/users/ashi009/following{/other_user}", "gists_url": "https://api.github.com/users/ashi009/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashi009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashi009/subscriptions", "organizations_url": "https://api.github.com/users/ashi009/orgs", "repos_url": "https://api.github.com/users/ashi009/repos", "events_url": "https://api.github.com/users/ashi009/events{/privacy}", "received_events_url": "https://api.github.com/users/ashi009/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-27T11:20:07Z", "updated_at": "2018-01-03T15:34:00Z", "closed_at": null, "author_association": "NONE", "body": "It's weird to not support non-decimal literals in a configuration language.\r\n\r\n```\r\n{\r\n container: k8s.Container {\r\n  ...,\r\n  args: {\r\n   fileMode: 0644,  <----- STATIC ERROR: Expected a comma before next field.\r\n  },\r\n  ...\r\n }\r\n}\r\n```", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/422", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/422/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/422/events", "html_url": "https://github.com/google/jsonnet/issues/422", "id": 282181151, "number": 422, "title": "Add more file functions to stdlib", "user": {"login": "nikolay", "id": 2882, "avatar_url": "https://avatars2.githubusercontent.com/u/2882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolay", "html_url": "https://github.com/nikolay", "followers_url": "https://api.github.com/users/nikolay/followers", "following_url": "https://api.github.com/users/nikolay/following{/other_user}", "gists_url": "https://api.github.com/users/nikolay/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolay/subscriptions", "organizations_url": "https://api.github.com/users/nikolay/orgs", "repos_url": "https://api.github.com/users/nikolay/repos", "events_url": "https://api.github.com/users/nikolay/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-14T17:33:27Z", "updated_at": "2017-12-22T15:23:23Z", "closed_at": null, "author_association": "NONE", "body": "So far, the only function for file paths is `std.thisFile`, but its utility is questionable.\r\n\r\nWe need functions giving us the full pathname of the current file, just the filename, and just the directory. It would be even better if we can get a function that extracts the filename, and the directory of a given file path, too.\r\n\r\nI've been trying to use `importstr` and include configuration files, but I cannot make it work when the containing file is symlinked and it uses relative to its configuration files. Of course, the same applies to `import`, too.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/415", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/415/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/415/events", "html_url": "https://github.com/google/jsonnet/issues/415", "id": 278358333, "number": 415, "title": "Consider try / catch functionality", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-01T04:59:45Z", "updated_at": "2017-12-01T05:11:16Z", "closed_at": null, "author_association": "MEMBER", "body": "Currently `error \"foo\"` is like throwing an exception, but there is no way to catch the exception.\r\n\r\nMotivations for \"catch\":\r\n1) Routines that loop over data and trigger errors for particular items don't have useful stack traces because the line of code in the stack trace doesn't tell you e.g. which array index caused the problem.  This is particularly important in custom manifestation functions where we typically iterate over the tree forcing fields.\r\n2) It is currently not possible to write test cases in Jsonnet that check that the correct error is raised.\r\n3) It is not possible to detect using reflection that a field requires overriding, because we typically represent that with `f: error \"Must overide f\"` see #414.\r\n\r\nCaveats:\r\n- Should it be possible to catch \"runtime errors\" like `1/0` or `[1,2,3][10]`?  If not, how do we distinguish?\r\n- Should it be possible to catch major errors like exceeding stack size?  If not, how do we distinguish?\r\n- It is clearly not possible to catch non-termination (halting problem).\r\n- Should error values be cached in thunks?\r\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/405", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/405/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/405/events", "html_url": "https://github.com/google/jsonnet/issues/405", "id": 270882286, "number": 405, "title": "cpp stack traces are lagging behind go ones", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-03T05:31:35Z", "updated_at": "2017-11-03T05:31:35Z", "closed_at": null, "author_association": "MEMBER", "body": "See test cases:\r\n\r\ntest_cmd/ext3\r\ntest_cmd/max_stack1\r\ntest_cmd/max_stack2\r\ntest_cmd/max_trace1\r\ntest_cmd/max_trace2\r\ntest_cmd/max_trace3\r\ntest_cmd/max_trace4\r\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/394", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/394/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/394/events", "html_url": "https://github.com/google/jsonnet/issues/394", "id": 266558452, "number": 394, "title": "Test jsonnet on more architectures (x86, arm)", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-18T16:30:33Z", "updated_at": "2017-10-18T16:30:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It would be nice to test it on x86 (32-bit) and maybe arm, instead of just amd64.\r\n\r\nIt's possible that the numeric function behave differently. Some `size_t`-related bugs are also possible. \r\n\r\nSome compilation flags should be enough to check x86.\r\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/390", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/390/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/390/events", "html_url": "https://github.com/google/jsonnet/issues/390", "id": 265833083, "number": 390, "title": "Comprehension performance matches Go implementation", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-16T16:29:42Z", "updated_at": "2017-10-16T16:29:42Z", "closed_at": null, "author_association": "MEMBER", "body": "std.flatMap already exists, just need to desugar them to use it.  Go code serves as a guide.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/389", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/389/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/389/events", "html_url": "https://github.com/google/jsonnet/issues/389", "id": 265832876, "number": 389, "title": "importstr should fail on bad UTF-8", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-16T16:29:05Z", "updated_at": "2017-10-17T18:21:44Z", "closed_at": null, "author_association": "MEMBER", "body": "The current behavior (transparently inserting unicode error chars) is not very helpful.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/385", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/385/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/385/events", "html_url": "https://github.com/google/jsonnet/issues/385", "id": 263501036, "number": 385, "title": "Named parameters used as positional for builtins", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-06T16:22:29Z", "updated_at": "2017-10-06T18:47:18Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "This works:\r\n```\r\nstd.makeArray(func=function(i) i, sz=5)\r\n```\r\nBut this does not work:\r\n```\r\nstd.makeArray(sz=5, func=function(i) i)\r\n```\r\nError:\r\n```\r\nRUNTIME ERROR: Builtin function makeArray expected (number, function) but got (function, number)\r\n        testdata/std.makeArrayNamed2.jsonnet:1:1-39\r\n```\r\n\r\nThe names are checked, but then arguments are treated as positional anyway.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/379", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/379/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/379/events", "html_url": "https://github.com/google/jsonnet/issues/379", "id": 261431688, "number": 379, "title": "Fractal demo down?", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-28T19:21:02Z", "updated_at": "2017-09-28T19:21:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "http://www.fractaldemo.com/ is linked from http://jsonnet.org/case_studies/casestudy_fractal.1.html\r\n\r\nBut it times out.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/378", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/378/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/378/events", "html_url": "https://github.com/google/jsonnet/issues/378", "id": 261204315, "number": 378, "title": "Prevent changing meaning of std in desugared expressions", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-28T06:15:49Z", "updated_at": "2017-09-28T06:15:49Z", "closed_at": null, "author_association": "MEMBER", "body": "See https://github.com/google/go-jsonnet/issues/69", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/373", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/373/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/373/events", "html_url": "https://github.com/google/jsonnet/issues/373", "id": 259162229, "number": 373, "title": "Weird indentation after alignment", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-20T13:25:52Z", "updated_at": "2017-09-20T13:25:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "This code is formatted with jsonnet fmt:\r\n```\r\nlocal stringToInt(s) =\r\n  local zeroCodepoint = std.codepoint(\"0\"),\r\n        stringToIntHelper(s, idx, acc) =\r\n    if idx == std.length(s) then // see what happened here?\r\n      acc\r\n    else\r\n      local digit = std.codepoint(s[idx]) - zeroCodepoint;\r\n      stringToIntHelper(s, idx + 1, acc * 10 + digit);\r\n  stringToIntHelper(s, 0, 0);\r\nstringToInt(\"42\")\r\n```\r\n\r\nA simpler artificial example:\r\n```\r\nlocal xxxxxxxxxxxxxxxxxxxx = 42,\r\n      yyyyyyy =\r\n  {\r\n    something_long: 42,\r\n  };\r\ntrue\r\n```\r\n\r\nSo if there are multiple binds in a local, and one of them has a body starting on a new line, that body gets weirdly dedented.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/370", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/370/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/370/events", "html_url": "https://github.com/google/jsonnet/issues/370", "id": 258362177, "number": 370, "title": "Make macOS builds optional?", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-18T03:22:59Z", "updated_at": "2018-01-22T01:02:37Z", "closed_at": null, "author_association": "MEMBER", "body": "Due to Apple licensing restrictions, macOS can only be run on Apple hardware. That means that CI services such as Travis CI are limited in the number of concurrent macOS builds based on the amount of actual hardware they have on hand (or can rent remotely, if that's even possible), whereas Linux builds can be parallelized using bare-metal hardware or VMs, including cloud providers, so they can easily scale elastically to meet demand.\r\n\r\nAs a result, Travis CI very quickly runs the Linux builds, but macOS builds are queued, and make take quite a bit longer to process. In other projects, I have run into issues where macOS builds were queued for a very long time, leading to blocked code reviews or finding out much later that the build had a basic issue, which is not visible if just looking at GitHub, the Travis status is \"pending\". I also noticed a similar situation\r\n\r\nI would like to propose that the Jsonnet project consider making the following  changes:\r\n\r\n* macOS builds are marked as \"optional\", so their delays or failures don't block builds\r\n* a build where Linux build succeeds is marked as \"passing\"\r\n\r\nThis can be done easily using `.travis.yml` config.\r\n\r\nThis is especially the case if we add Bazel-based builds in addition to Make-based builds in issue #137.\r\n\r\nThoughts?", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/368", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/368/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/368/events", "html_url": "https://github.com/google/jsonnet/issues/368", "id": 258114731, "number": 368, "title": "Object assertions caching/performance issue", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-15T17:45:20Z", "updated_at": "2017-09-15T17:45:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Consider the following code:\r\n```\r\nlocal n = 150;\r\nlocal arr = [{v: -1}] + std.makeArray(n, function(x) { v: x, assert arr[x].v == self.v - 1 });\r\narr\r\n```\r\n\r\nIt looks relatively innocent, but there are two problems with it:\r\n* It's quadratic (with regard to `n`)\r\n* It puts >3n frames on stack, so it easily goes over max stack frames limit.\r\nThis happens, because assertions are checked each time we index an object.\r\n\r\nIt's enough to check them once per object. \r\n\r\nThe PR adding the support object invariants in Go version already caches the result of assertion checking and doesn't have this problem.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/366", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/366/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/366/events", "html_url": "https://github.com/google/jsonnet/issues/366", "id": 257531750, "number": 366, "title": "idea: json error output for consumption by tools", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-13T21:48:38Z", "updated_at": "2017-09-14T15:00:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "To avoid the need to parse custom format (and worrying about colons in filenames etc.).", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/365", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/365/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/365/events", "html_url": "https://github.com/google/jsonnet/issues/365", "id": 257496151, "number": 365, "title": "fmt -i with multiple files aborting on first error", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-13T19:35:44Z", "updated_at": "2017-09-13T19:38:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Maybe it could continue and report any errors from other files. ", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/363", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/363/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/363/events", "html_url": "https://github.com/google/jsonnet/issues/363", "id": 256811728, "number": 363, "title": "Strings not escaped in assertEqual errors", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-11T19:13:50Z", "updated_at": "2017-09-11T19:13:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Code:\r\n```\r\nstd.assertEqual(\"\\n \", \"\\n\")\r\n```\r\n\r\nExpected output:\r\n```\r\nRUNTIME ERROR: Assertion failed. \"\\n \" != \"\\n\"\r\n        std.jsonnet:649:13-91   function <anonymous>\r\n        testdata/assert_equal5.input:1:1-28\r\n```\r\n\r\nActual output:\r\n```\r\nRUNTIME ERROR: Assertion failed. \r\n  != \r\n\r\n        std.jsonnet:649:13-55   function <anonymous>\r\n        testdata/assert_equal5.input:1:1-28\r\n```\r\n\r\nAnother example where it is pretty important:\r\n```\r\nstd.assertEqual(\"\\u001b[31m\", \"\")\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/362", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/362/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/362/events", "html_url": "https://github.com/google/jsonnet/issues/362", "id": 256774627, "number": 362, "title": "More efficient array comprehensions and join", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-11T17:01:07Z", "updated_at": "2017-09-11T17:01:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Currently they are unnecessarily quadratic - underneath they just use +. We can be easily improve that by using a builtin that builds the result array in one go. This was already done in experimental Go version using `flatMap` builtin. \r\n\r\nRelated #222. \r\n\r\nIdeally it would be verified automatically by some benchmarks (#360). ", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/361", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/361/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/361/events", "html_url": "https://github.com/google/jsonnet/issues/361", "id": 256378141, "number": 361, "title": "Better error message for newbie mistake +: vs :+", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-08T21:38:24Z", "updated_at": "2017-09-11T19:25:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I don't think this is actually very important, but it was a source of confusion at some point so here it is.\r\n\r\nIt's quite easy to write something like:\r\n```\r\n{x: {y: 1}} {x:+ { z: 2 }}\r\n```\r\nIt doesn't work and error message is mildly confusing:\r\n```\r\nRUNTIME ERROR: Unary operator + does not operate on type object\r\n```\r\n\r\nIt's worse on integer types (that I initially got a problem with), but I suppose this is not what `+:` was designed for anyway:\r\n```\r\n{x: 1} { x :+ 42}\r\n```\r\nIt doesn't fail, but the result is not what I expected:\r\n```\r\n{\r\n   \"x\": 42\r\n}\r\n```\r\n\r\nI think it can be easily made better by lexing `:+` as a single token. Then a much more friendly static error would appear:\r\n```\r\nExpected one of :, ::, :::, +:, +::, +:::, got: :+\r\n```", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/360", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/360/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/360/events", "html_url": "https://github.com/google/jsonnet/issues/360", "id": 256372163, "number": 360, "title": "Benchmarks", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-08T21:09:10Z", "updated_at": "2017-09-08T21:09:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Having a set of standard benchmarks will help us improve performance in systematic way and avoid performance regressions.\r\n\r\nIt's also going to help making sure Go version is good enough performance-wise.\r\n\r\nSome benchmarks proposed by @sparkprime :\r\ndcunnin@casterly:~$ time jsonnet -e 'std.length([\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" for x in std.range(1,10000)])' > /dev/null\r\n\r\nreal    0m0.539s\r\nuser    0m0.472s\r\nsys     0m0.064s\r\ndcunnin@casterly:~$ time jsonnet -e 'std.length(std.join(\"\\n\", [\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" for x in std.range(1,10000)]))' > /dev/null\r\n\r\nreal    0m3.675s\r\nuser    0m2.928s\r\nsys     0m0.744s\r\n\r\nOne question is how to present the results (i.e. running time) in a way that can be easily compared across versions/implementations.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/359", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/359/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/359/events", "html_url": "https://github.com/google/jsonnet/issues/359", "id": 255996230, "number": 359, "title": "Better defaults for jsonnet fmt", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-07T16:25:46Z", "updated_at": "2017-11-12T00:55:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Right now `jsonnet fmt` by default does less than I would expect, e.g. it doesn't fix indentation. \r\n\r\nSomething like `jsonnet fmt -n 2 --max-blank-lines 1 --sort-imports` could be the default. \r\n\r\nI think that ideally long-term we would have something like `gofmt` which provides heavily opinionated, \"the only true\" formatting, without any knobs. Having reasonable defaults is the first step in this direction.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/359/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/358", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/358/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/358/events", "html_url": "https://github.com/google/jsonnet/issues/358", "id": 255717992, "number": 358, "title": "Failed to build libjsonnet.js using emscripten", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-06T19:34:06Z", "updated_at": "2017-09-07T21:13:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I tried building js version, but emscripten failed in a way that is completely mysterious to me. I don't really need js version for anything now, but, though.\r\n```\r\nsbarzowski@sbarzowski01:~/Work/jsonnet$ make libjsonnet.js \r\nem++ -s 'EXPORTED_FUNCTIONS=[\"_jsonnet_make\", \"_jsonnet_evaluate_snippet\", \"_jsonnet_realloc\", \"_jsonnet_destroy\"]' -g -O3 -Wall -Wextra -Woverloaded-virtual -pedantic -std=c++0x -fPIC -Iinclude -Ithird_party/md5 -Os --memory-init-file 0 -s DISABLE_EXCEPTION_CATCHING=0 -s OUTLINING_LIMIT=10000  core/desugarer.cpp core/formatter.cpp core/lexer.cpp core/libjsonnet.cpp core/parser.cpp core/pass.cpp core/static_analysis.cpp core/string_utils.cpp core/vm.cpp third_party/md5/md5.cpp -o libjsonnet.js\r\naborting from js compiler due to exception: unknown vector type <4 x i8> | undefined\r\naborting from js compiler due to exception: unknown vector type <4 x i8> | undefined\r\naborting from js compiler due to exception: unknown vector type <4 x i8> | undefined\r\naborting from js compiler due to exception: unknown vector type <4 x i8> | undefined\r\naborting from js compiler due to exception: unknown vector type <4 x i8> | undefined\r\nTraceback (most recent call last):\r\n  File \"/usr/share/emscripten/emscripten.py\", line 1352, in <module>\r\n    _main(environ=os.environ)\r\n  File \"/usr/share/emscripten/emscripten.py\", line 1340, in _main\r\n    temp_files.run_and_clean(lambda: main(\r\n  File \"/usr/share/emscripten/tools/tempfiles.py\", line 39, in run_and_clean\r\n    return func()\r\n  File \"/usr/share/emscripten/emscripten.py\", line 1348, in <lambda>\r\n    DEBUG_CACHE=DEBUG_CACHE,\r\n  File \"/usr/share/emscripten/emscripten.py\", line 1235, in main\r\n    jcache=jcache, temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)\r\n  File \"/usr/share/emscripten/emscripten.py\", line 292, in emscript\r\n    assert len(output) == 2, 'Did not receive forwarded data in an output - process failed? We only got: ' + output[0][-3000:]\r\nAssertionError: Did not receive forwarded data in an output - process failed? We only got: 0) {\r\n    $_01=-1;\r\n\r\n    return (($_01)|0);\r\n   }\r\n   $22=(($this+20)|0);\r\n   $23=((HEAP32[(($22)>>2)])|0);\r\n   $24=$12;\r\n   $25=$23;\r\n   $26=((($24)-($25))|0);\r\n   $27=(($this+44)|0);\r\n   $28=((HEAP32[(($27)>>2)])|0);\r\n   $29=$28;\r\n   $30=((($29)-($25))|0);\r\n   $31=(($this+32)|0);\r\n   __THREW__ = 0;invoke_vii('{{ FI___ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc }}',(($31)|0),((0)|0));\r\n   do {\r\n    if (!__THREW__) {\r\n     $33=$31;\r\n     $34=$31;\r\n     $35=((HEAP8[($34)])|0);\r\n     $36=$35&1;\r\n     $37=(($36<<24)>>24)==0;\r\n     if ($37) {\r\n      $42=10;\r\n     } else {\r\n      $39=(($31)|0);\r\n      $40=((HEAP32[(($39)>>2)])|0);\r\n      $41=$40&-2;\r\n      $phitmp=((($41)-(1))|0);\r\n      $42=$phitmp;\r\n     }\r\n\r\n     __THREW__ = 0;invoke_viii('{{ FI___ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc }}',(($31)|0),(($42)|0),((0)|0));\r\n     if (!(!__THREW__)) {\r\n      __THREW__ = 0;\r\n      break;\r\n     }\r\n     $43=((HEAP8[($34)])|0);\r\n     $44=$43&1;\r\n     $45=(($44<<24)>>24)==0;\r\n     if ($45) {\r\n      $50=(($33+1)|0);\r\n      $51=$50;\r\n     } else {\r\n      $47=(($this+40)|0);\r\n      $48=((HEAP32[(($47)>>2)])|0);\r\n      $51=$48;\r\n     }\r\n\r\n     $52=($43&255);\r\n     $53=$52&1;\r\n     $54=($53|0)==0;\r\n     if ($54) {\r\n      $59=$52>>>1;\r\n      $60=$59;\r\n     } else {\r\n      $56=(($this+36)|0);\r\n      $57=((HEAP32[(($56)>>2)])|0);\r\n      $60=$57;\r\n     }\r\n\r\n     $61=(($51+$60)|0);\r\n     HEAP32[(($22)>>2)]=$51;\r\n     HEAP32[(($13)>>2)]=$61;\r\n     $62=(($51+$26)|0);\r\n     HEAP32[(($11)>>2)]=$62;\r\n     $63=(($51+$30)|0);\r\n     HEAP32[(($27)>>2)]=$63;\r\n     $70=$62;$69=$63;$68=$61;$_pre_phi=$17;\r\n     break L4;\r\n    } else {\r\n     __THREW__ = 0;\r\n    }\r\n   } while(0);\r\n   $65$0 = ((___cxa_find_matching_catch(-1, -1,((0)|0)))|0); $65$1 = tempRet0;\r\n   $66=$65$0;\r\n   $67=((___cxa_begin_catch((($66)|0)))|0);\r\n   ___cxa_end_catch();\r\n   $_01=-1;\r\n\r\n   return (($_01)|0);\r\n  } else {\r\n   $_phi_trans_insert=(($this+44)|0);\r\n   $_pre=((HEAP32[(($_phi_trans_insert)>>2)])|0);\r\n   $_pre2=(($this+48)|0);\r\n   $70=$12;$69=$_pre;$68=$14;$_pre_phi=$_pre2;\r\n  }\r\n } while(0);\r\n\r\n\r\n\r\n\r\n $71=(($70+1)|0);\r\n $72=(($this+44)|0);\r\n $73=($71>>>0)<($69>>>0);\r\n $74=($73?$69:$71);\r\n HEAP32[(($72)>>2)]=$74;\r\n $75=((HEAP32[(($_pre_phi)>>2)])|0);\r\n $76=$75&8;\r\n $77=($76|0)==0;\r\n if (!($77)) {\r\n  $79=(($this+32)|0);\r\n  $80=$79;\r\n  $81=((HEAP8[($80)])|0);\r\n  $82=$81&1;\r\n  $83=(($82<<24)>>24)==0;\r\n  if ($83) {\r\n   $88=$79;\r\n   $89=(($88+1)|0);\r\n   $90=$89;\r\n  } else {\r\n   $85=(($this+40)|0);\r\n   $86=((HEAP32[(($85)>>2)])|0);\r\n   $90=$86;\r\n  }\r\n\r\n  $91=(($90+$10)|0);\r\n  HEAP32[(($6)>>2)]=$90;\r\n  HEAP32[(($4)>>2)]=$91;\r\n  $92=(($this+16)|0);\r\n  HEAP32[(($92)>>2)]=$74;\r\n }\r\n $94=($70|0)==($68|0);\r\n if ($94) {\r\n  $96=$this;\r\n  $97=((HEAP32[(($96)>>2)])|0);\r\n  $98=(($97+52)|0);\r\n  $99=((HEAP32[(($98)>>2)])|0);\r\n  $100=$__c&255;\r\n  $101=((FUNCTION_TABLE_iii[($99)&{{{ FTM_iii }}}]($3,$100))|0);\r\n  $_01=$101;\r\n\r\n  return (($_01)|0);\r\n } else {\r\n  $103=(($__c)&255);\r\n  HEAP32[(($11)>>2)]=$71;\r\n  HEAP8[($70)]=$103;\r\n  $104=$__c&255;\r\n  $_01=$104;\r\n\r\n  return (($_01)|0);\r\n }\r\n  return 0;\r\n}\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/share/emscripten/emcc\", line 1864, in <module>\r\n    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)\r\n  File \"/usr/share/emscripten/tools/shared.py\", line 1276, in emscripten\r\n    assert os.path.exists(filename + '.o.js') and len(open(filename + '.o.js', 'r').read()) > 0, 'Emscripten failed to generate .js: ' + str(compiler_output)\r\nAssertionError: Emscripten failed to generate .js: \r\nmake: *** [libjsonnet.js] Error 1\r\n\r\nsbarzowski@sbarzowski01:~/Work/jsonnet$ em++ --version\r\nemcc (Emscripten GCC-like replacement) 1.10.0 ()\r\nCopyright (C) 2013 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/355", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/355/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/355/events", "html_url": "https://github.com/google/jsonnet/issues/355", "id": 253766781, "number": 355, "title": "Add YAML gotchas to comparisons page", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-29T18:52:58Z", "updated_at": "2017-08-29T18:52:58Z", "closed_at": null, "author_association": "MEMBER", "body": "http://blog.teamlazerbeez.com/2009/04/15/yaml-gotchas/\r\nhttps://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html\r\nhttps://www.elastic.co/guide/en/beats/filebeat/5.3/yaml-tips.html\r\nhttps://www.reddit.com/r/programming/comments/8cpe2/yaml_gotchas_we_learned_the_hard_way/\r\n\r\n@mbrukman ", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/354", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/354/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/354/events", "html_url": "https://github.com/google/jsonnet/issues/354", "id": 253135006, "number": 354, "title": "Static analysis for Jsonnet C++ code", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-27T01:49:15Z", "updated_at": "2017-09-08T21:12:59Z", "closed_at": null, "author_association": "MEMBER", "body": "Given that Jsonnet is written in C++, there are many potential issues that can lurk in C++ code, such as undefined behavior, buffer overruns, etc.\r\n\r\nWhile unit tests help ensure that code does what it's supposed to (and handles errors correctly), there are other classes of issues that can be found via static analysis. Some of the tools that can be used for this are:\r\n\r\n* Coverity, which provides [free scans](https://scan.coverity.com/) to open-source projects\r\n* LLVM/Clang tools such as: AddressSanitizer, ThreadSanitizer, MemorySanitizer, UndefinedBehaviorSanitizer, etc.\r\n\r\nThese and other similar tools can help find bugs without writing explicit tests, so they provide a lot of value with little additional effort.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/353", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/353/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/353/events", "html_url": "https://github.com/google/jsonnet/issues/353", "id": 253134586, "number": 353, "title": "Explain how to unit test Jsonnet files", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-27T01:36:52Z", "updated_at": "2017-08-29T17:15:10Z", "closed_at": null, "author_association": "MEMBER", "body": "What is the recommendation for users who are writing non-trivial Jsonnet configs and would like to test them from within Jsonnet itself?\r\n\r\nI came across https://github.com/yugui/jsonnetunit \u2014 has this framework been reviewed / evaluated? Is this something that should be recommended as a general tool to Jsonnet users? If not, what would be the recommendation to users of Jsonnet interested in unit testing their configs?", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/352", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/352/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/352/events", "html_url": "https://github.com/google/jsonnet/issues/352", "id": 253134514, "number": 352, "title": "Explain how to use Bazel with Jsonnet", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-27T01:34:44Z", "updated_at": "2017-10-25T17:32:56Z", "closed_at": null, "author_association": "MEMBER", "body": "By which I mean, not build Jsonnet with Bazel, but how a Jsonnet user can use Bazel.\r\n\r\nSpecifically, I'm referring to explaining how one can use https://github.com/bazelbuild/rules_jsonnet in their own Jsonnet project. Jsonnet project itself uses these rules, but to an external observer, there does not appear to be docs in this repo to explain how to use Bazel + Jsonnet in the context of another project.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/351", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/351/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/351/events", "html_url": "https://github.com/google/jsonnet/issues/351", "id": 253133848, "number": 351, "title": "Centralize links to community forums", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-27T01:14:24Z", "updated_at": "2017-08-27T01:50:35Z", "closed_at": null, "author_association": "MEMBER", "body": "There are two places to learn about community for Jsonnet:\r\n\r\n1. https://github.com/google/jsonnet/blob/master/README.md\r\n2. http://jsonnet.org/contributing.html\r\n\r\n(1) only lists the mailing list, and in passing and makes no mention of the IRC channel. (2) lists both. If one looks only on the GitHub repo, one might not realize that the IRC channel even exists.\r\n\r\nI've also found that without providing instructions, users assume that one must have a Google account to join an email list on Google Groups (which is not the case), so I created this set of instructions for JanusGraph:\r\n\r\nhttps://github.com/JanusGraph/janusgraph#community\r\n\r\nProposal to update the `README.md` file:\r\n\r\n* add a Community section the README in the repo\r\n* list both email list and IRC channel there\r\n* explain how to join the mailing list without a Google account", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/350", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/350/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/350/events", "html_url": "https://github.com/google/jsonnet/issues/350", "id": 253133588, "number": 350, "title": "Merge the two contributing guides into one", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-27T01:06:38Z", "updated_at": "2017-08-27T01:06:38Z", "closed_at": null, "author_association": "MEMBER", "body": "There are currently two contributing guides:\r\n\r\n1. https://github.com/google/jsonnet/blob/master/CONTRIBUTING\r\n2. http://jsonnet.org/contributing.html\r\n\r\nand the first one refers users to the second one (but it's a plain text file so the link is not even clickable). For simplicity and to improve usability, I recommend merging them into a single one, and that one should be in the code tree, because that is where the potential contributors will expect to find it.\r\n\r\nA sample contributing file with plenty of details can be found in [this repo](https://github.com/mbrukman/autogen/blob/master/CONTRIBUTING.md). Thoughts / objections?", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/349", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/349/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/349/events", "html_url": "https://github.com/google/jsonnet/issues/349", "id": 253122967, "number": 349, "title": "Add a list of companies using Jsonnet to GitHub repo", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-26T21:07:52Z", "updated_at": "2017-08-26T21:07:52Z", "closed_at": null, "author_association": "MEMBER", "body": "New users often like to know who else is already using a project, who is already running it in production or otherwise critically depending on it, before deciding to bet on it themselves. Also, even if you have a developer who's a fan of Jsonnet, they will have to convince their leads / management to run it in production, and having third-party voices that are already doing that makes more users comfortable with taking the leap of putting Jsonnet in the critical production stacks.\r\n\r\nIn other words: everyone wants someone else to be the pioneer / bleeding edge tester, but once it's proven, it's a snowball effect since everyone wants to be using what other successful users are already using. Thus, having a list of existing production users is critical to growing the Jsonnet user base.\r\n\r\n**Note: please be sure to get explicit permission from each of the companies before adding their name to a public list.**\r\n\r\nHere are some companies that are pretty clearly using Jsonnet already:\r\n\r\n* Box - see [blog post](https://blog.box.com/blog/kubernetes-box-microservices-maximum-velocity/)\r\n* Databricks - see [blog post](https://databricks.com/blog/2017/06/26/declarative-infrastructure-jsonnet-templating-language.html)\r\n* Heptio - see [ksonnet project](https://github.com/ksonnet/)\r\n\r\nPotential sources of other users:\r\n\r\n* [LinkedIn search for \"jsonnet\"](https://www.linkedin.com/search/results/index/?keywords=jsonnet)\r\n* comments such as [this one](https://news.ycombinator.com/item?id=13901416) on HackerNews:\r\n  > Take a look at jsonnet: http://jsonnet.org. It extends JSON with loops, conditionals, variables and more in an elegant way. We don't write JSON anymore and treat it like an \"assembly language.\" We use jsonnet to generate CloudFormation templates, terraform templates and Kubernetes resource definitions.\r\n\r\nFor inspiration from other projects, see these lists:\r\n\r\n* [Apache Airflow (incubating)](https://github.com/apache/incubator-airflow#who-uses-airflow)\r\n* [JanusGraph](https://github.com/janusgraph/janusgraph/#users)", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/348", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/348/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/348/events", "html_url": "https://github.com/google/jsonnet/issues/348", "id": 252990207, "number": 348, "title": "Add instructions for building with Clang", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-08-25T18:57:03Z", "updated_at": "2017-09-16T01:57:33Z", "closed_at": null, "author_association": "MEMBER", "body": "The [README](https://github.com/google/jsonnet/blob/93476c27a03cac3841fafc597cf124cc55035079/README.md) currently says:\r\n\r\n> The GCC C++ (g++) compiler is required to build Jsonnet. Clang is also supported.\r\n\r\nHowever, the only instructions are for building with g++:\r\n\r\n> ### Makefile\r\n> To build jsonnet with g++, run:\r\n>\r\n> ```\r\n> make\r\n> ```\r\n\r\nPerhaps it should also say:\r\n\r\n> To build with Clang, run:\r\n>\r\n> ```\r\n> make CXX=clang++ CC=clang\r\n> ```\r\n\r\nIs that sufficient? Any other vars that need to be set?\r\n\r\n---\r\n\r\nAlso, there are instructions for building with Bazel, but it's non-obvious (without reading all the `BUILD` / `*.bzl` files) which compiler it will use by default, and if it's g++, how to switch to Clang instead.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/347", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/347/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/347/events", "html_url": "https://github.com/google/jsonnet/issues/347", "id": 252643431, "number": 347, "title": "external variables / top-level arguments not mentioned in the tutorial", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-24T15:39:09Z", "updated_at": "2017-08-24T15:39:25Z", "closed_at": null, "author_association": "MEMBER", "body": "", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/347/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/345", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/345/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/345/events", "html_url": "https://github.com/google/jsonnet/issues/345", "id": 252132935, "number": 345, "title": "Desugaring of +: substitutes self/super too deeply", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848199, "url": "https://api.github.com/repos/google/jsonnet/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-23T01:22:20Z", "updated_at": "2017-08-23T01:22:36Z", "closed_at": null, "author_association": "MEMBER", "body": "When implementing +:, the desugarer currently substitutes self and super out of deeply nested objects when it is not necessary.  See this thread and example:\r\n\r\nhttps://groups.google.com/forum/#!topic/jsonnet/IYrLl-6MpZY\r\n\r\n`{[{a: \"y\"}{b: super.a}.b]+: 1}`\r\n\r\n@guoshimin ", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/343", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/343/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/343/events", "html_url": "https://github.com/google/jsonnet/issues/343", "id": 250176107, "number": 343, "title": "document tailstrict", "user": {"login": "guoshimin", "id": 11787293, "avatar_url": "https://avatars2.githubusercontent.com/u/11787293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoshimin", "html_url": "https://github.com/guoshimin", "followers_url": "https://api.github.com/users/guoshimin/followers", "following_url": "https://api.github.com/users/guoshimin/following{/other_user}", "gists_url": "https://api.github.com/users/guoshimin/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoshimin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoshimin/subscriptions", "organizations_url": "https://api.github.com/users/guoshimin/orgs", "repos_url": "https://api.github.com/users/guoshimin/repos", "events_url": "https://api.github.com/users/guoshimin/events{/privacy}", "received_events_url": "https://api.github.com/users/guoshimin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-14T22:51:45Z", "updated_at": "2017-08-30T13:19:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Include tailstrict in the tutorial and language specification.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/321", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/321/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/321/events", "html_url": "https://github.com/google/jsonnet/issues/321", "id": 240282519, "number": 321, "title": "Parsing a string to JSON", "user": {"login": "hausdorff", "id": 1409156, "avatar_url": "https://avatars1.githubusercontent.com/u/1409156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hausdorff", "html_url": "https://github.com/hausdorff", "followers_url": "https://api.github.com/users/hausdorff/followers", "following_url": "https://api.github.com/users/hausdorff/following{/other_user}", "gists_url": "https://api.github.com/users/hausdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hausdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hausdorff/subscriptions", "organizations_url": "https://api.github.com/users/hausdorff/orgs", "repos_url": "https://api.github.com/users/hausdorff/repos", "events_url": "https://api.github.com/users/hausdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/hausdorff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-03T23:48:35Z", "updated_at": "2017-07-05T15:51:34Z", "closed_at": null, "author_association": "NONE", "body": "@jbeda was kicking around the idea (which I quite like) of having jq-style filters, which would look something like this:\r\n\r\n```\r\ncat foo.yaml | addMixin honeycomb.jsonnet  | kubectl apply -f ...\r\n```\r\n\r\nwhere `addMixin` turns `foo.yaml` into a JSON document, and honeycomb.jsonnet takes it as a parameter and embeds some sidecar.\r\n\r\nIn order for this to work, I think `honeycomb.jsonnet` would have to parse a string and turn it into JSON.\r\n\r\nWhat is the recommended way to do this sort of thing? Native extensions?", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/316", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/316/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/316/events", "html_url": "https://github.com/google/jsonnet/issues/316", "id": 232767390, "number": 316, "title": "Safe way to detect whether a native function exists before trying to call it", "user": {"login": "anguslees", "id": 224224, "avatar_url": "https://avatars0.githubusercontent.com/u/224224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anguslees", "html_url": "https://github.com/anguslees", "followers_url": "https://api.github.com/users/anguslees/followers", "following_url": "https://api.github.com/users/anguslees/following{/other_user}", "gists_url": "https://api.github.com/users/anguslees/gists{/gist_id}", "starred_url": "https://api.github.com/users/anguslees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anguslees/subscriptions", "organizations_url": "https://api.github.com/users/anguslees/orgs", "repos_url": "https://api.github.com/users/anguslees/repos", "events_url": "https://api.github.com/users/anguslees/events{/privacy}", "received_events_url": "https://api.github.com/users/anguslees/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-01T05:09:55Z", "updated_at": "2017-06-04T21:52:31Z", "closed_at": null, "author_association": "NONE", "body": "Currently calling `std.native(\"noexist\")` explodes with a runtime error.\r\n\r\nA jsonnet library may want to try a native function if it exists, or fall back to some safe/slower alternative.   It would be neat if there was some way to do this.  (This is not hypothetical, we are about to have exactly this situation in ksonnet-lib)\r\n\r\nI suggest adding a `std.hasNative(\"foo\") -> bool` function, but another fine alternative would be to make `std.native(\"noexist\")` just return `null` and leave it up to the jsonnet caller to check/assert the result.  (Trying to call a `null` function will be just as fatal (so no change there), but the error message might be less helpful without an explicit assert.)\r\n\r\nNote a similar problem exists with things like external variables (`std.extVar(\"noexist\")` explodes).  Returning `null` here seems like a good choice - so perhaps we should just do that for `std.native` too for consistency...  Any opinions before I go and propose a PR?", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/312", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/312/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/312/events", "html_url": "https://github.com/google/jsonnet/issues/312", "id": 231628081, "number": 312, "title": "Remove a field from an object", "user": {"login": "ant31", "id": 1044332, "avatar_url": "https://avatars2.githubusercontent.com/u/1044332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ant31", "html_url": "https://github.com/ant31", "followers_url": "https://api.github.com/users/ant31/followers", "following_url": "https://api.github.com/users/ant31/following{/other_user}", "gists_url": "https://api.github.com/users/ant31/gists{/gist_id}", "starred_url": "https://api.github.com/users/ant31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ant31/subscriptions", "organizations_url": "https://api.github.com/users/ant31/orgs", "repos_url": "https://api.github.com/users/ant31/repos", "events_url": "https://api.github.com/users/ant31/events{/privacy}", "received_events_url": "https://api.github.com/users/ant31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-26T13:34:07Z", "updated_at": "2017-06-08T17:48:07Z", "closed_at": null, "author_association": "NONE", "body": "I haven't found examples nor a way to easily remove a field from an object. \r\n\r\nI can eventually iterate over all key and skip the one I want to remove to build a new object with dict comprehension, but the object would lost hidden fields. ", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/307", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/307/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/307/events", "html_url": "https://github.com/google/jsonnet/issues/307", "id": 217411417, "number": 307, "title": "Consider implementing `import * from \"x\"`", "user": {"login": "hausdorff", "id": 1409156, "avatar_url": "https://avatars1.githubusercontent.com/u/1409156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hausdorff", "html_url": "https://github.com/hausdorff", "followers_url": "https://api.github.com/users/hausdorff/followers", "following_url": "https://api.github.com/users/hausdorff/following{/other_user}", "gists_url": "https://api.github.com/users/hausdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hausdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hausdorff/subscriptions", "organizations_url": "https://api.github.com/users/hausdorff/orgs", "repos_url": "https://api.github.com/users/hausdorff/repos", "events_url": "https://api.github.com/users/hausdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/hausdorff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-03-28T00:10:53Z", "updated_at": "2017-12-12T04:10:20Z", "closed_at": null, "author_association": "NONE", "body": "We use Jsonnet to express the Kubernetes API objects. The namespace is quite dense, so we end up with a lot of imports, something like [EDITED FOR CLARITY]:\r\n\r\n```\r\nlocal core = import \"core.libsonnet\";\r\n\r\nlocal container = core.v1.container;\r\nlocal claim = core.v1.volume.claim;\r\nlocal probe = core.v1.probe;\r\nlocal service = core.v1.service;\r\nlocal secret = core.v1.secret;\r\nlocal volume = core.v1.volume;\r\nlocal configMap = core.v1.configMap;\r\n```\r\n\r\nIt would be great to have sugar for this, _e.g._, JavaScript-style `import * from \"core.libsonnet\"`, which would generate `local` definitions similar to those above.\r\n\r\nWould doing this upend some important part of the language?", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/306", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/306/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/306/events", "html_url": "https://github.com/google/jsonnet/issues/306", "id": 212804713, "number": 306, "title": "\"Returning\" an item from a function", "user": {"login": "hausdorff", "id": 1409156, "avatar_url": "https://avatars1.githubusercontent.com/u/1409156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hausdorff", "html_url": "https://github.com/hausdorff", "followers_url": "https://api.github.com/users/hausdorff/followers", "following_url": "https://api.github.com/users/hausdorff/following{/other_user}", "gists_url": "https://api.github.com/users/hausdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hausdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hausdorff/subscriptions", "organizations_url": "https://api.github.com/users/hausdorff/orgs", "repos_url": "https://api.github.com/users/hausdorff/repos", "events_url": "https://api.github.com/users/hausdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/hausdorff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-08T17:39:13Z", "updated_at": "2017-05-31T17:23:39Z", "closed_at": null, "author_association": "NONE", "body": "This is somewhat related to the (OT) [tangent discussion](https://github.com/google/jsonnet/issues/302#issuecomment-282866371) I brought up on issue #302. So, I apologize if this stutters a bit, but I'm curious to hear what you think about a more general pattern that this tangent fits in to.\r\n\r\nIn Jsonnet I often find myself wanting to use an object in a function to \"hide\" locals, but then later \"return\" one of the locals I used. For example, if you imagine some syntax for `return` (I'm not proposing this as a solution, but presenting it as a way of expressing what I'd like to do), you might write something like:\r\n\r\n```c++\r\n{\r\n  foo():: {\r\n    // `bar` is \"hidden\" in the body of `foo` because it is `local`.\r\n    local bar = [... do some fancy work here ...]\r\n\r\n    // But we want to \"return\" the result of `processBar`, rather\r\n    // than an object containing it.\r\n    return processBar(baz),\r\n  },\r\n}\r\n```\r\n\r\nWhat is the Jsonnet-y way to accomplish this?", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/301", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/301/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/301/events", "html_url": "https://github.com/google/jsonnet/issues/301", "id": 206974436, "number": 301, "title": "C#/.NET language bindings", "user": {"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-11T11:24:01Z", "updated_at": "2017-02-11T11:24:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It would be nice to have C# language bindings for Jsonnet. C# is a great language for web sites and services, and is a very popular language in enterprise. A simple wrapper library could call a libjsonnet DLL via [PInvoke](https://msdn.microsoft.com/en-us/library/55d3thsc.aspx).\r\n\r\n.NET assemblies are cross-language compatible, so the C# bindings could be used in Visual Basic and F#. .NET Core and Mono support would be nice to have since they are cross-platform, but neither have anywhere near the userbase of the standard .NET framework. So this Issue is scoped to only the standard framework.\r\n\r\nDependent on Visual Studio/VC++ support (#300). PInvoke works with any DLL so it's possible to do this using MinGW DLLs, but that makes building more complicated.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/301/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/300", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/300/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/300/events", "html_url": "https://github.com/google/jsonnet/issues/300", "id": 206973926, "number": 300, "title": "Support Visual C++/Visual Studio toolchain", "user": {"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-02-11T11:13:02Z", "updated_at": "2017-02-17T16:14:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Jsonnet and libjsonnet/libjsonnet++ should be buildable with the Visual C/C++ (VC/VC++) compiler. The project should include build files for a tool that integrates well with Visual Studio (VS) such as MSBuild, CMake, or NMake.\r\n\r\n## Rationale\r\n\r\nMicrosoft's Visual C/C++ compiler is widely used on Windows. It's bundled with and integrated with Visual Studio, probably the most widely used IDE for C/C++ development on Windows. A small amount of development would give a wide community of developers easy access to Jsonnet.\r\n\r\nJsonnet currently supports Windows builds using Cygwin and MinGW, using make as a build system. These don't integrate well with VS. Cygwin .so libraries can't be used by other Windows development tools. VS can use DLLs and possibly even object files from MinGW's gcc, but not g++ as name mangling works differently. VS also doesn't integrate with the GNU toolchain: no make or gcc support (although there may be plugins for this). Developers wishing to use Jsonnet in a VC++ project must either forgo advanced IDE features like code search and debugging, or manually create their own project file.\r\n\r\nVS is also the de facto IDE for .NET development. Supporting VS/VC++ will make writing and maintaining C#/.NET bindings for Jsonnet easier in the future.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/292", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/292/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/292/events", "html_url": "https://github.com/google/jsonnet/issues/292", "id": 203770313, "number": 292, "title": "Support ruby / jq style array subtraction", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-28T00:04:51Z", "updated_at": "2017-01-28T00:04:51Z", "closed_at": null, "author_association": "MEMBER", "body": "Request from the Google group: https://groups.google.com/forum/#!topic/jsonnet/4u23V3alGMw", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/292/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/289", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/289/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/289/events", "html_url": "https://github.com/google/jsonnet/issues/289", "id": 201651751, "number": 289, "title": "Support |||- from YAML", "user": {"login": "guoshimin", "id": 11787293, "avatar_url": "https://avatars2.githubusercontent.com/u/11787293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoshimin", "html_url": "https://github.com/guoshimin", "followers_url": "https://api.github.com/users/guoshimin/followers", "following_url": "https://api.github.com/users/guoshimin/following{/other_user}", "gists_url": "https://api.github.com/users/guoshimin/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoshimin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoshimin/subscriptions", "organizations_url": "https://api.github.com/users/guoshimin/orgs", "repos_url": "https://api.github.com/users/guoshimin/repos", "events_url": "https://api.github.com/users/guoshimin/events{/privacy}", "received_events_url": "https://api.github.com/users/guoshimin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-01-18T18:14:55Z", "updated_at": "2017-02-03T18:15:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "This will send jsonnet spinning, consuming 100% of CPU:\r\n```\r\njsonnet -e '|||-\r\n  abc\r\n|||'\r\n```\r\nTested with v0.9.0.\r\n\r\nI was trying to see if jsonnet supported chomping the final newline in text blocks similar to how it's done in YAML. Consider this both a bug report and a feature request :D", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/276", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/276/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/276/events", "html_url": "https://github.com/google/jsonnet/issues/276", "id": 198734751, "number": 276, "title": "Expose `fmt` command over python interface", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-04T15:31:04Z", "updated_at": "2017-09-19T20:44:14Z", "closed_at": null, "author_association": "NONE", "body": "It would be nice if I could call `_jsonnet.fmt` in python and have it do the equivalent of the command-line version.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/274", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/274/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/274/events", "html_url": "https://github.com/google/jsonnet/issues/274", "id": 196666483, "number": 274, "title": "Usage in NodeJS applications as build transform", "user": {"login": "dewdad", "id": 6195827, "avatar_url": "https://avatars1.githubusercontent.com/u/6195827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dewdad", "html_url": "https://github.com/dewdad", "followers_url": "https://api.github.com/users/dewdad/followers", "following_url": "https://api.github.com/users/dewdad/following{/other_user}", "gists_url": "https://api.github.com/users/dewdad/gists{/gist_id}", "starred_url": "https://api.github.com/users/dewdad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dewdad/subscriptions", "organizations_url": "https://api.github.com/users/dewdad/orgs", "repos_url": "https://api.github.com/users/dewdad/repos", "events_url": "https://api.github.com/users/dewdad/events{/privacy}", "received_events_url": "https://api.github.com/users/dewdad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-20T12:58:06Z", "updated_at": "2016-12-21T07:15:54Z", "closed_at": null, "author_association": "NONE", "body": "I would like to use Jsonnet as a build tool in my NodeJS project. I've tried using some ports to JS with no luck. I have succeeded in using the cmd tool, but then I would need a separate binary for each platform installed in my project sources.\r\n\r\nIs there a way to compile Jsonnet to JavaScript along with the command line interface like the executable build?", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/249", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/249/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/249/events", "html_url": "https://github.com/google/jsonnet/issues/249", "id": 186686584, "number": 249, "title": "wishlist: --yaml-stream should accept similar object structure to --multi", "user": {"login": "anguslees", "id": 224224, "avatar_url": "https://avatars0.githubusercontent.com/u/224224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anguslees", "html_url": "https://github.com/anguslees", "followers_url": "https://api.github.com/users/anguslees/followers", "following_url": "https://api.github.com/users/anguslees/following{/other_user}", "gists_url": "https://api.github.com/users/anguslees/gists{/gist_id}", "starred_url": "https://api.github.com/users/anguslees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anguslees/subscriptions", "organizations_url": "https://api.github.com/users/anguslees/orgs", "repos_url": "https://api.github.com/users/anguslees/repos", "events_url": "https://api.github.com/users/anguslees/events{/privacy}", "received_events_url": "https://api.github.com/users/anguslees/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-02T00:51:46Z", "updated_at": "2016-11-02T02:09:10Z", "closed_at": null, "author_association": "NONE", "body": "For composability, I like my jsonnet files to all evaluate to objects, in a style similar to that required for output by `--multi`.  I want to actually output a YAML stream however (for piping to k8s' `kubectl`), so this means I now have \"stub\" jsonnet files everywhere that effectively import a bunch of jsonnet files, smoosh the objects together (possibly overriding some small number of values), and then end with some variant of `[objects[k] for k in std.objectFields(objects)]`.\r\n\r\nThis all works great, except now that new file can't be imported again in the same fashion.  It would be neat if `--yaml-stream` just did something like that last expression (ie: take the object values) when presented with a file that evaluated to an object.\r\n\r\nIf the answer is \"all this output tweaking is getting out of hand, we'd prefer you just write your own wrapper tool that uses the library\" then I understand, and I'm ok with that.", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/239", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/239/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/239/events", "html_url": "https://github.com/google/jsonnet/issues/239", "id": 180940075, "number": 239, "title": "Import callback should separate relative path conversion from returning file content", "user": {"login": "fare", "id": 8073, "avatar_url": "https://avatars0.githubusercontent.com/u/8073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fare", "html_url": "https://github.com/fare", "followers_url": "https://api.github.com/users/fare/followers", "following_url": "https://api.github.com/users/fare/following{/other_user}", "gists_url": "https://api.github.com/users/fare/gists{/gist_id}", "starred_url": "https://api.github.com/users/fare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fare/subscriptions", "organizations_url": "https://api.github.com/users/fare/orgs", "repos_url": "https://api.github.com/users/fare/repos", "events_url": "https://api.github.com/users/fare/events{/privacy}", "received_events_url": "https://api.github.com/users/fare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-04T16:20:43Z", "updated_at": "2016-10-17T17:22:52Z", "closed_at": null, "author_association": "NONE", "body": "When you import a same file twice, the evaluation results are not cached.\n\nWorse: the callback API for import does not distinguish (1) a file lookup step, (2) a file read step and (3) a code evaluation step. Therefore, a second import of the same file will have the callback return new file contents, which makes either cache or reevaluation cumbersome.\n\nFor compatibility with existing API, a SHA checksum for the contents could serve as the key to cache evaluation results.\n\nIn a newer API, the import function would be broken in three steps, and each could be cached separately, so that (1) file lookup returns an absolute file path or URL from the (probably relative) string of the requested import depending on the current file, (2) file read returns the file contents given the path or URL, and (3) code evaluation evaluates the code.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/234", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/234/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/234/events", "html_url": "https://github.com/google/jsonnet/issues/234", "id": 174330750, "number": 234, "title": "Syntax for optional array concatenation", "user": {"login": "huggsboson", "id": 3486668, "avatar_url": "https://avatars1.githubusercontent.com/u/3486668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huggsboson", "html_url": "https://github.com/huggsboson", "followers_url": "https://api.github.com/users/huggsboson/followers", "following_url": "https://api.github.com/users/huggsboson/following{/other_user}", "gists_url": "https://api.github.com/users/huggsboson/gists{/gist_id}", "starred_url": "https://api.github.com/users/huggsboson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huggsboson/subscriptions", "organizations_url": "https://api.github.com/users/huggsboson/orgs", "repos_url": "https://api.github.com/users/huggsboson/repos", "events_url": "https://api.github.com/users/huggsboson/events{/privacy}", "received_events_url": "https://api.github.com/users/huggsboson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-31T17:23:14Z", "updated_at": "2018-01-13T20:13:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "At Box we've often had a need to optionally include elements in an array, e.g.\n\n```\nutil.list([\n        namespace.object(),\n        deployment.object(logtailer),\n        service.object(),\n    ] + logtailer.configMaps\n      + if cluster.isDSV31 then [ logback.configMap() ] else []\n)\n```\n\nWhile the current approach is effective it has two downsides:\n1. It isn't super readable.\n2. The tendency is to prepend or append the items so you don't have to break up the list to insert an array.\n\nEither some guidance on how best to handle cases like this, or an extension to the syntax would be nice.  I talked to @sparkprime yesterday in slack and he spun up a suggestion to talk about:\n\n```\nutil.list([\n        namespace.object(),\n        configMap for configMap in logtailer.configMaps,\n        logback.configMap() if cluster.isDSV31,\n        deployment.object(logtailer),\n        service.object(),\n])\n```\n\nWhich is much more readable and deals with #1 and #2.\n\nWe began talking about potential implementations for this, and explored the idea of an undefined type/value which stays in the list until render time (and comparison) at which point it is removed.  That idea has a lot of merit and would even allow functions to return undefined thereby pushing certain branching logic down, but there are obviously a lot of interesting corner cases.\n\nDave also mentioned that if such a proposal went through he'd probably want to move from\n{ [if false then \"foo\"]: \"bar\" } to { foo: \"bar\" if false }.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/234/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/230", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/230/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/230/events", "html_url": "https://github.com/google/jsonnet/issues/230", "id": 172034907, "number": 230, "title": "Formatter should handle [{...}] better", "user": {"login": "huggsboson", "id": 3486668, "avatar_url": "https://avatars1.githubusercontent.com/u/3486668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huggsboson", "html_url": "https://github.com/huggsboson", "followers_url": "https://api.github.com/users/huggsboson/followers", "following_url": "https://api.github.com/users/huggsboson/following{/other_user}", "gists_url": "https://api.github.com/users/huggsboson/gists{/gist_id}", "starred_url": "https://api.github.com/users/huggsboson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huggsboson/subscriptions", "organizations_url": "https://api.github.com/users/huggsboson/orgs", "repos_url": "https://api.github.com/users/huggsboson/repos", "events_url": "https://api.github.com/users/huggsboson/events{/privacy}", "received_events_url": "https://api.github.com/users/huggsboson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-19T01:12:50Z", "updated_at": "2016-10-17T17:19:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "jsonnet fmt changed the following code from:\n\n```\n                        volumeMounts: [\n                            {\n                                name: \"deployment-config\",\n                                mountPath:\n                                    if cluster.isLocal then\n                                        \"/box/deployment-config\"\n                                    else\n                                        \"/box\"\n                                ,\n                            },\n                        ],\n```\n\nto:\n\n```\n                        volumeMounts: [\n                            {\n                                name: \"deployment-config\",\n                                mountPath:\n                                    if cluster.isLocal then\n                                        \"/box/deployment-config\"\n                                    else\n                                        \"/box\",\n                                },\n                        ],\n```\n\nwhich is mis-indented.  My personal taste would have had the whole thing turned to:\n\n```\n                        volumeMounts: [{\n                            name: \"deployment-config\",\n                            mountPath:\n                                if cluster.isLocal then\n                                    \"/box/deployment-config\"\n                                else\n                                    \"/box\",\n                        }],\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/227", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/227/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/227/events", "html_url": "https://github.com/google/jsonnet/issues/227", "id": 171260209, "number": 227, "title": "shorthand for deep field overrides", "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-15T20:57:23Z", "updated_at": "2017-07-05T20:05:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "``` jsonnet\n\nlocal foo = {\n  a: { b: { c: { d: 1234 } } },\n  e: 1\n};\n\nfoo + { a.b.c.d: 999 } \n```\n\nIt would be really cool if the above (or something along those lines) worked and evaluated to:\n\n``` jsonnet\n{\n  a: { b: { c: { d: 999 } } },\n  e: 1\n}\n```\n\nTo achieve the same in today's jsonnet you would have to write:\n\n``` jsonnet\nlocal foo = {\n  a: { b: { c: { d: 1234 } } },\n  e: 1\n};\n\nfoo + { a+: { b+: { c+: { d: 9999} }\n```\n\nI don't know how difficult and/or sane this would be to implement, but there is a similar construct in Nix that is quite useful :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/227/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/226", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/226/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/226/events", "html_url": "https://github.com/google/jsonnet/issues/226", "id": 168660856, "number": 226, "title": "Access to function \"arity\"", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-01T14:34:38Z", "updated_at": "2016-10-17T17:45:57Z", "closed_at": null, "author_association": "NONE", "body": "Once we get a [splat operator](https://github.com/google/jsonnet/issues/203), this functionality will be more useful, but a fun feature in Nix (cc @oconnorr) is the ability to ask a function about what arguments it takes (assuming it uses the attribute pattern matching construct). Given that jsonnet now has named arguments, it seems like a similar primop could work. I'd imagine it would tell you the number of positional arguments and the names of the attributes for named arguments. You could then use that to implement a form of pseudo-dependency-injection like [the one we use in nixpkgs](https://github.com/NixOS/nixpkgs/blob/master/lib/customisation.nix#L100-L112).\n\nSo basically, what I imagine is something like:\n\n```\nlocal foo(x, y=5, z=y) = ...;\n\nstd.functionSpec(foo) => { positional: 1, named: ['y', 'z'] }\n```\n\nIdeal would be some way to access defaults as well. I could imagine that since you're lazy, you could have `named` return an actual object whose values reference the other arguments, but I don't know how that dict interacts with positional arguments today so it might be a little tricky.\n\nP.S: the Haskeller in me is screaming at me for wanting such an obviously evil function but it does seem pretty handy.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/223", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/223/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/223/events", "html_url": "https://github.com/google/jsonnet/issues/223", "id": 167251814, "number": 223, "title": "Shorthand for curried functions", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-24T20:14:50Z", "updated_at": "2016-07-25T21:30:47Z", "closed_at": null, "author_association": "NONE", "body": "I love partial application, especially in the presence of HOFs, but especially with the [long syntax for lambdas](https://github.com/google/jsonnet/issues/129) it's currently pretty heavyweight to write those. Even if the syntax were more lightweight, I believe the following could be quite nice:\n\n```\nlocal foo(params1)(params2) = ...;\n```\n\nas shorthand for:\n\n```\nlocal foo(params1) = function (params2) ...;\n```\n\nGiven that we already have the `local foo(params) = ...` as sugar for `local foo = function(params) ...`, it seems like iterating the current rule for each group of parentheses would be a nice generalization of the syntax. Same would apply to object \"keys\", as well as anonymous functions.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/222", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/222/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/222/events", "html_url": "https://github.com/google/jsonnet/issues/222", "id": 167236546, "number": 222, "title": "Nontrivial string processing can get very slow", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-24T14:40:06Z", "updated_at": "2016-09-06T21:06:20Z", "closed_at": null, "author_association": "NONE", "body": "I think it's mostly caused the back-and-forth between lists of characters and strings.\n\nFor example, I have a function that takes a list of strings and \"camelCases\" the list, so that `[\"foo\", \"bar\", \"baz\"]` turns into \"fooBarBaz\". Using that function on lots of strings in my larger evaluation makes the whole thing take about 40s. Replacing it with a simple `function (x) std.join(\"-\", x)` for hyphenated names reduces total evaluation time to 10s, keeping other things equal.\n\nThe camelcase code is as follows:\n\n```\nlocal upper(c): local cp = std.codepoint(c); if cp >= 97 && cp < 123 then std.char(cp - 32) else c;\nlocal capitalize(str): util.upper(str[0]) + std.substr(str, 1, std.length(str) - 1);\nlocal zipWithIndex(f, list): std.makeArray(std.length(list), function (i) f(i, list[i]));\nlocal camelcase(list): std.join(\"\", util.zipWithIndex(function (i, x) if i == 0 then x else util.capitalize(x), list));\n```\n\nNot the most beautiful thing ever, but it works as intended, other than being super slow.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/221", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/221/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/221/events", "html_url": "https://github.com/google/jsonnet/issues/221", "id": 167079873, "number": 221, "title": "Friendlier error message for invalid indices", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-22T16:10:47Z", "updated_at": "2016-07-28T19:45:32Z", "closed_at": null, "author_association": "NONE", "body": "For example, I got:\n\n```\nRUNTIME ERROR: Array index must be number, got string.\n```\n\nIt would be easier to track down what was wrong if it told me what unexpected string it got\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/220", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/220/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/220/events", "html_url": "https://github.com/google/jsonnet/issues/220", "id": 166897710, "number": 220, "title": "Dictionaries with no sense of self", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-21T19:23:22Z", "updated_at": "2016-10-17T17:46:11Z", "closed_at": null, "author_association": "NONE", "body": "I find that most of the time I'm writing jsonnet, having an object bring a magic `self` into scope is a bit of a pain. I usually end up having to define a `local realSelf = self` in the outer scope to retain the `self` that I actually wanted.\n\nCan we have raw dictionaries with no magic `self` in scope for those times we just want to operate on a pure datastructure?\n\nThis is _almost_ the opposite of the `rec` keyword in Nix. For context, `rec` brings a dictionary's keys into scope within that dictionary, and the default is to have no access to the equivalent of `self`. I'm not proposing changing the default at this stage, but it would be nice to have a way to opt out.\n\ncc @roconnor, since whenever I mention Nix @sparkprime cc's him anyway \ud83d\ude04 \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/220/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/206", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/206/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/206/events", "html_url": "https://github.com/google/jsonnet/issues/206", "id": 159493431, "number": 206, "title": "it should be possible to load native extensions from an object file at runtime", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-09T19:52:38Z", "updated_at": "2016-06-24T19:28:52Z", "closed_at": null, "author_association": "MEMBER", "body": "Similart to --jpath, we need an --npath that is search for symbols that match a convention, then dlopen and register them as native extensions. Lua supports a similar feature.\n\nhttps://www.lua.org/pil/8.2.html\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/203", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/203/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/203/events", "html_url": "https://github.com/google/jsonnet/issues/203", "id": 158253779, "number": 203, "title": "A (un)splat operator for named arguments", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-06-02T22:27:16Z", "updated_at": "2016-08-09T20:40:40Z", "closed_at": null, "author_association": "NONE", "body": "What I'd like is for it to behave just like a regular function application, so:\n\n```\nlocal foo(x, y=100, z) = { x: x, y: y, z: z }\n\nlocal bar = {\n  x: 1,\n  y: 2\n}\n\nfoo(**bar) # Should return { x: 1, y: 100, z: 2 }\n```\n\nGoing the other way would also be nice:\n\n```\nlocal foo(**kwargs) = kwargs\n\nfoo(x=6, y=1) # Should return { x: 6, y: 1 }\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/202", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/202/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/202/events", "html_url": "https://github.com/google/jsonnet/issues/202", "id": 157394949, "number": 202, "title": "native extensions should support returning all jsonnet types.", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-29T16:52:11Z", "updated_at": "2016-06-06T15:29:18Z", "closed_at": null, "author_association": "MEMBER", "body": "numbers, objects, arrays, functions?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/200", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/200/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/200/events", "html_url": "https://github.com/google/jsonnet/issues/200", "id": 157394658, "number": 200, "title": "C api should expose jsonnet types", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-29T16:45:57Z", "updated_at": "2016-05-30T16:56:37Z", "closed_at": null, "author_association": "MEMBER", "body": "To embbed jsonnet in an application as a config language, you often want it to produce a traversable structure. Right now you can evaluate and then reinterpret the char\\* with a different json parser which is painful:\n\nhttps://github.com/mikedanese/overlay/blob/master/main.c#L195-L206\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/196", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/196/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/196/events", "html_url": "https://github.com/google/jsonnet/issues/196", "id": 156930065, "number": 196, "title": "Relax computed importstr ?", "user": {"login": "ant31", "id": 1044332, "avatar_url": "https://avatars2.githubusercontent.com/u/1044332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ant31", "html_url": "https://github.com/ant31", "followers_url": "https://api.github.com/users/ant31/followers", "following_url": "https://api.github.com/users/ant31/following{/other_user}", "gists_url": "https://api.github.com/users/ant31/gists{/gist_id}", "starred_url": "https://api.github.com/users/ant31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ant31/subscriptions", "organizations_url": "https://api.github.com/users/ant31/orgs", "repos_url": "https://api.github.com/users/ant31/repos", "events_url": "https://api.github.com/users/ant31/events{/privacy}", "received_events_url": "https://api.github.com/users/ant31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-05-26T08:24:33Z", "updated_at": "2018-01-13T22:18:07Z", "closed_at": null, "author_association": "NONE", "body": "Do you think it will be possible to use `importstr` with variable? \n\ne.g: \n\n``` yaml\n {\n files: [\n        { \n         file: filepath,\n         content: importstr filepath\n         } for filepath in ['a.txt', 'b.txt', 'c.txt']\n  ],\n}\n```\n\n``` yaml\nsome_function(file):: (\n    local content = importstr file;\n    #process the content\n  )\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/195", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/195/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/195/events", "html_url": "https://github.com/google/jsonnet/issues/195", "id": 156824303, "number": 195, "title": "Create output directories if they do not exist", "user": {"login": "brbbs", "id": 18661073, "avatar_url": "https://avatars1.githubusercontent.com/u/18661073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brbbs", "html_url": "https://github.com/brbbs", "followers_url": "https://api.github.com/users/brbbs/followers", "following_url": "https://api.github.com/users/brbbs/following{/other_user}", "gists_url": "https://api.github.com/users/brbbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/brbbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brbbs/subscriptions", "organizations_url": "https://api.github.com/users/brbbs/orgs", "repos_url": "https://api.github.com/users/brbbs/repos", "events_url": "https://api.github.com/users/brbbs/events{/privacy}", "received_events_url": "https://api.github.com/users/brbbs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-25T18:55:21Z", "updated_at": "2016-05-25T20:52:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I'd like to be able to invoke jsonnet like: `jsonnet -o foo/bar.json -e \"{ foo: 'bar' }\"` and have it create the `foo/` directory if it does not already exist. I'd like this to apply to multi-file output invocations as well. My use case is to have a file of the form:\n\n```\n{\n  'a.json': { /* snip */ },\n  'subdir/b.json': /* ... */,\n  'subdir/c.json': /* ... */,\n}\n```\n\nbut I'd like to be able to invoke `jsonnet -m` without having to know which subdirectories to create beforehand.\n\nCurrently, both invocations fail with the error:\n\n```\n$ jsonnet -o foo/bar.json -e \"{ foo: 'bar' }\"\nWriting to output file: foo/bar.json: No such file or directory\n$ jsonnet -m . foo.jsonnet\n./a.json\n./subdir/b.json\nOpening output file: ./subdir/b.json: No such file or directory\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/185", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/185/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/185/events", "html_url": "https://github.com/google/jsonnet/issues/185", "id": 155419823, "number": 185, "title": "Object asserts not run by std.objectFieldsEx and std.objectHasEx", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848199, "url": "https://api.github.com/repos/google/jsonnet/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-18T05:32:01Z", "updated_at": "2016-11-23T00:35:42Z", "closed_at": null, "author_association": "MEMBER", "body": "```\n$ jsonnet -e '{} == {assert false}'\ntrue\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/153", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/153/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/153/events", "html_url": "https://github.com/google/jsonnet/issues/153", "id": 145251758, "number": 153, "title": "Add an easier way to check function params", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-01T18:35:38Z", "updated_at": "2016-04-01T18:38:33Z", "closed_at": null, "author_association": "MEMBER", "body": "@huggsboson asked \"Any interest in static or dynamically checked type assertions on parameters?\"\n\nYou're the first to draw attention to this.\n\nWe decided pretty early on that dynamic typing would be most approachable.  It fits in better with the laziness and dynamic binding, and avoids all the syntactic overhead of type annotations.  There was a previous language that used type inference (HM system) but people found the unification errors hard to understand.  Adding some form of gradual typing into the language now would probably be a bit incongruous.  However some middle ground might be to have a dynamic checking framework, e.g. maybe something that looks like:\n\n```\nlocal f(x, y) = \n    assert std.check({x: x, y: y}, { ... some spec here ... });\n    ...\n```\n\nThis is just a library addition That would allow consistent and (relatively) concise checking of function preconditions for libraries.  It could also be conservatively interpreted by linting tools.  We could add more syntax sugar to make it even more concise:\n\n```\nlocal f(x, y) =\n    checkparams { ... some spec here ... };\n    ....\n```\n\nThe hardest problem here is defining what the spec should be -- how expressive is it, should it use some existing thing or subset of an existing thing (jsonschema is probably overkill).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/149", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/149/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/149/events", "html_url": "https://github.com/google/jsonnet/issues/149", "id": 144767311, "number": 149, "title": "add manifestToml(v) function", "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-31T01:56:21Z", "updated_at": "2016-05-10T22:10:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It should be fairly easy to write a TOML output function; the syntax is simple and it maps unambiguously to json objects.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/149/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/143", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/143/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/143/events", "html_url": "https://github.com/google/jsonnet/issues/143", "id": 143673146, "number": 143, "title": "Write .clang-format for C++ style", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-26T07:08:58Z", "updated_at": "2016-03-27T21:51:03Z", "closed_at": null, "author_association": "MEMBER", "body": "Related to #142, add a .clang-format that codifies the C++ style for Jsonnet.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/142", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/142/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/142/events", "html_url": "https://github.com/google/jsonnet/issues/142", "id": 143673013, "number": 142, "title": "Write C++ style guide documentation", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-26T07:07:56Z", "updated_at": "2016-03-26T07:07:56Z", "closed_at": null, "author_association": "MEMBER", "body": "Let's write a doc specifying the C++ style used for Jsonnet and link it in both CONTRIBUTING.md and http://jsonnet.org/contributing.html.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/141", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/141/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/141/events", "html_url": "https://github.com/google/jsonnet/issues/141", "id": 143472824, "number": 141, "title": "Standalone Jsonnet integration test suite", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-03-25T10:27:25Z", "updated_at": "2016-03-31T01:00:43Z", "closed_at": null, "author_association": "MEMBER", "body": "Now that a pure-Go implementation of Jsonnet is being developed (google/go-jsonnet) is being developed, it would be a good idea to make it possible to share the Jsonnet's rich test suite across different implementations.\n\nPerhaps we can move the test suite into a separate repo and set it up so that it can be used to test any Jsonnet implementation that exposes the same command line interface. It should be possible to set this up using Bazel. We already have a [`jsonnet_to_json_test`](https://github.com/bazelbuild/rules_jsonnet#jsonnet_to_json_test) rule that can be used to run all of the integration tests aside from the formatter tests, for which it would be easy to write a test rule for. We can then use Bazel's external repository mechanism to include this test suite and add the test targets.\n\nHere is how I imagine this will work:\n\nSay that we move the test suite to the repository google/jsonnet-test-suite. We can add a [Skylark macro](http://bazel.io/docs/skylark/macros.html) called `jsonnet_test_suite` that would take a label for a Jsonnet command line binary as an argument. When this macro is used, it will add a bunch of `jsonnet_to_json_test` test targets that would be run with the given Jsonnet binary.\n\nThen, in `google/jsonnet` and `google/go-jsonnet`, we can include the `google/jsonnet-test-suite` repository by adding the following to the WORKSPACE file:\n\n``` python\ngit_repository(\n    name = \"jsonnet_test_suite\",\n    remote = \"https://github.com/google/jsonnet-test-suite\",\n    tag = \"v0.0.1\",\n)\n```\n\nSay that `//cmd:jsonnet` is the build label for the `jsonnet` binary. Then, we can add a BUILD file under the `test_suites` directory with the following:\n\n``` python\nload(\"@jsonnet_test_suite//:test_suite.bzl\", \"jsonnet_test_suite\")\n\njsonnet_test_suite(\n    name = \"test_suite\",\n    jsonnet = \"//cmd:jsonnet\",\n)\n```\n\nThen, the entire test suite can be run against the given jsonnet binary with `bazel test //test_suite:all`.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/137", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/137/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/137/events", "html_url": "https://github.com/google/jsonnet/issues/137", "id": 142807100, "number": 137, "title": "Set up Bazel build for Travis", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-03-22T23:08:06Z", "updated_at": "2017-09-16T20:47:53Z", "closed_at": null, "author_association": "MEMBER", "body": "Currently, we are only running make test in the Travis build.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/137/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/130", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/130/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/130/events", "html_url": "https://github.com/google/jsonnet/issues/130", "id": 140857442, "number": 130, "title": "A trace function", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-15T03:00:03Z", "updated_at": "2016-03-16T05:58:26Z", "closed_at": null, "author_association": "NONE", "body": "There might well be one already, but I looked under the \"Assertions and Debugging\" section of the stdlib docs and only saw assertions.\n\nBasically, I want a function that is equivalent to\n\n`local const(str, x) = x;`\n\nBut that prints `str` to `stderr` as a side effect when forced. Very handy for debugging odd execution flow and the like.\n\nBoth Haskell and Nix call this function `trace`, but I'm open to other ideas.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/130/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/129", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/129/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/129/events", "html_url": "https://github.com/google/jsonnet/issues/129", "id": 140689367, "number": 129, "title": "Lightweight lambda syntax", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-03-14T14:31:00Z", "updated_at": "2016-07-26T21:00:37Z", "closed_at": null, "author_association": "NONE", "body": "One of jsonnet's big selling points is being able to write functions and pass them around as values. Can we have a more lightweight syntax for anonymous functions than the `function (args) ...` one? I catch myself deliberately trying to to avoid writing them due to the syntactic noise.\n\nI don't really have a proposal for the syntax I want, but here are a few lightweight ones (not sure how compatible they are with your current grammar):\n- Scala: `(arg1, arg2) => body` (probably requires nontrivial lookahead and complicates the parser, but is pretty appealing from a human standpoint)\n- Haskell: `\\arg1 arg2 -> body` (all functions are unary, but this is a shorthand for two lambdas)\n- Nix: `arg: body` (all functions are unary)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/126", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/126/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/126/events", "html_url": "https://github.com/google/jsonnet/issues/126", "id": 139744041, "number": 126, "title": "Mechanism for catching errors for tests", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 338419289, "url": "https://api.github.com/repos/google/jsonnet/labels/rfc", "name": "rfc", "color": "5319e7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-10T00:23:42Z", "updated_at": "2016-08-09T19:12:29Z", "closed_at": null, "author_association": "MEMBER", "body": "From our discussion on Tuesday: in general, we should not add a catch mechanism to the language, but having a specific mechanism such as `assertThrows` or `assertError` would be useful for testing.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/126/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/125", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/125/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/125/events", "html_url": "https://github.com/google/jsonnet/issues/125", "id": 139743836, "number": 125, "title": "Use a library for argument parsing", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-10T00:22:13Z", "updated_at": "2016-03-16T05:57:57Z", "closed_at": null, "author_association": "MEMBER", "body": "I think using a library such as getopt or gflags for argument parsing can make the code in the jsonnet tool a lot cleaner. We would probably want to go with getopt since gflags has a slightly different syntax for flags (getopt --long-opt vs gflags --long_opt).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/124", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/124/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/124/events", "html_url": "https://github.com/google/jsonnet/issues/124", "id": 139494746, "number": 124, "title": "Strengthen tutorial", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}, {"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-09T07:12:26Z", "updated_at": "2016-03-09T07:12:26Z", "closed_at": null, "author_association": "MEMBER", "body": "No mention of asserts and a bunch of other new features.\n\nFeedback from box: should expand on the discussion of object orientation.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/123", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/123/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/123/events", "html_url": "https://github.com/google/jsonnet/issues/123", "id": 139412754, "number": 123, "title": "No stacktrace during manifestation when error occurs at object level", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848199, "url": "https://api.github.com/repos/google/jsonnet/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-08T22:27:17Z", "updated_at": "2016-03-09T07:04:20Z", "closed_at": null, "author_association": "MEMBER", "body": "```\n$ cat stacktrace_bug.jsonnet \n\nlocal A = {\n    f +: {},\n};\n\nA {\n}\n$ jsonnet stacktrace_bug.jsonnet \nRUNTIME ERROR: Attempt to use super when there is no super class.\n                object <anonymous>\n        During manifestation\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/122", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/122/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/122/events", "html_url": "https://github.com/google/jsonnet/issues/122", "id": 139408364, "number": 122, "title": "Documentation generator for Jsonnet", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}, {"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 338419289, "url": "https://api.github.com/repos/google/jsonnet/labels/rfc", "name": "rfc", "color": "5319e7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-03-08T22:11:51Z", "updated_at": "2017-11-09T01:25:04Z", "closed_at": null, "author_association": "MEMBER", "body": "Since we are storing comments in the AST, we can make use of this to build a documentation generator for Jsonnet, such as for documentation for functions.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/119", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/119/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/119/events", "html_url": "https://github.com/google/jsonnet/issues/119", "id": 138066532, "number": 119, "title": "Shorthand for \"pattern matching\" on an object parameter", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848204, "url": "https://api.github.com/repos/google/jsonnet/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-03-03T03:42:25Z", "updated_at": "2016-06-02T21:47:49Z", "closed_at": null, "author_association": "NONE", "body": "One thing I really miss when writing jsonnet after writing Nix for a while is the ability to deconstruct an object being passed in as a parameter. For example:\n\n``` nix\n{ a, b, c }: a + b + c\n```\n\nis a one-parameter lambda (arguably the only sort that matters!) that expects the caller to pass it a dict with those three keys in it. You can also set defaults and match on the aggregate.\n\nWould it be possible to get something similar in jsonnet?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/119/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/118", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/118/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/118/events", "html_url": "https://github.com/google/jsonnet/issues/118", "id": 137831076, "number": 118, "title": "Jsonnet Style Guide", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-02T10:12:13Z", "updated_at": "2016-09-21T23:28:47Z", "closed_at": null, "author_association": "MEMBER", "body": "Since we have the reformatter, let's also write a style guide.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/111", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/111/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/111/events", "html_url": "https://github.com/google/jsonnet/pull/111", "id": 136282121, "number": 111, "title": "RFC: implement unit testing framework", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 329657097, "url": "https://api.github.com/repos/google/jsonnet/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-25T05:00:57Z", "updated_at": "2016-03-02T10:13:44Z", "closed_at": null, "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/google/jsonnet/pulls/111", "html_url": "https://github.com/google/jsonnet/pull/111", "diff_url": "https://github.com/google/jsonnet/pull/111.diff", "patch_url": "https://github.com/google/jsonnet/pull/111.patch"}, "body": "Supports tests of type function, and \"table tests\". Output looks like:\n\n```\nRunning tests/arith_bool.jsonnet...\n--- PASS 'Test !'\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n--- PASS 'Test !='\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n--- PASS 'Test &&'\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n--- PASS 'Test =='\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n--- PASS 'Test if'\n        pass    'case 0'\n        pass    'case 1'\n--- PASS 'Test no implicit conversions'\n        pass    'case 0'\n        pass    'case 1'\n--- PASS 'Test shortcut semantics'\n        pass    'case 0'\n        pass    'case 1'\n--- PASS 'Test ||'\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n\nRunning tests/merge.jsonnet...\n--- PASS 'Test std.mergePatch'\n        pass    'case 0'\n        pass    'case 1'\n        pass    'override with null'\n        pass    'case 3'\n        pass    'case 4'\n        pass    'case 5'\n        pass    'case 6'\n        pass    'case 7'\n        pass    'case 8'\n        pass    'case 9'\n        pass    'case 10'\n        pass    'case 11'\n        pass    'case 12'\n        pass    'case 13'\n\nOK\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/111/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/109", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/109/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/109/events", "html_url": "https://github.com/google/jsonnet/issues/109", "id": 135508922, "number": 109, "title": "Publish binary releases", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-02-22T18:58:33Z", "updated_at": "2017-10-07T10:00:35Z", "closed_at": null, "author_association": "MEMBER", "body": "Preferably nightly and at every tag for mac osx and linux.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/107", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/107/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/107/events", "html_url": "https://github.com/google/jsonnet/issues/107", "id": 134478055, "number": 107, "title": "stdlib: add support regexp match and replace for strings", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-02-18T04:21:10Z", "updated_at": "2017-12-13T21:20:58Z", "closed_at": null, "author_association": "MEMBER", "body": "Would be easy to implement as a builtin.\n\nhttps://github.com/google/re2\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/103", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/103/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/103/events", "html_url": "https://github.com/google/jsonnet/issues/103", "id": 133235270, "number": 103, "title": "Expand on the comparison page against Nix", "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333939409, "url": "https://api.github.com/repos/google/jsonnet/labels/documentation", "name": "documentation", "color": "fad8c7", "default": false}, {"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-12T13:00:20Z", "updated_at": "2016-11-02T04:22:13Z", "closed_at": null, "author_association": "NONE", "body": "It feels a little light on details. Given the extreme similarity between the language semantics, I'm curious what the motivation for creating jsonnet was in the first place. Was it a syntactic thing, aiming to be a superset of JSON, or were there other reasons? I see the OO stuff cited, but it's also not particularly hard to embed those semantics in a lazy language like Nix or jsonnet.\n\nMore than an answer on this ticket, I'd appreciate seeing the reasons expanded upon in the comparisons page (for posterity), although I certainly wouldn't object to both.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/90", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/90/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/90/events", "html_url": "https://github.com/google/jsonnet/issues/90", "id": 125062167, "number": 90, "title": "Allow local definition in comprehension syntax", "user": {"login": "oconnorr", "id": 8388126, "avatar_url": "https://avatars3.githubusercontent.com/u/8388126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnorr", "html_url": "https://github.com/oconnorr", "followers_url": "https://api.github.com/users/oconnorr/followers", "following_url": "https://api.github.com/users/oconnorr/following{/other_user}", "gists_url": "https://api.github.com/users/oconnorr/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnorr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnorr/subscriptions", "organizations_url": "https://api.github.com/users/oconnorr/orgs", "repos_url": "https://api.github.com/users/oconnorr/repos", "events_url": "https://api.github.com/users/oconnorr/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnorr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-05T22:05:36Z", "updated_at": "2017-06-05T00:55:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "For example I could replace the expression\n\n   { [k]: processedField[k]\n      for field in std.objectFields(feature)\n      for processedField in [processFeature(field)]\n      for k in std.objectFields(processedField) }\n\nwith\n\n```\n{ [k]: processedField[k]\n  for field in std.objectFields(feature)\n  local processedField = processFeature(field)\n  for k in std.objectFields(processedField) }\n```\n\nwhich is a bit more clear syntactically.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/90/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/83", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/83/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/83/events", "html_url": "https://github.com/google/jsonnet/issues/83", "id": 119494847, "number": 83, "title": "Add support for Jsonnet to Pygments", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-30T13:47:56Z", "updated_at": "2016-01-11T06:12:15Z", "closed_at": null, "author_association": "MEMBER", "body": "It would be nice to add Jsonnet highlighting to Pygments so that we can have syntax highlighting for Jsonnet code in Markdown fenced code blocks in static site generators such as Jekyll, which is also used for GitHub pages:\n\n<pre>\n```jsonnet\n{\n  local Foo = {\n    bar: \"Some jsonnet code here\"\n  },\n  baz: Foo {\n    bar: \"nicely syntax highlighted\"\n  }\n}\n```\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/83/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/64", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/64/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/64/events", "html_url": "https://github.com/google/jsonnet/issues/64", "id": 105572644, "number": 64, "title": "Java bindings", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-09T10:51:59Z", "updated_at": "2015-09-23T18:34:44Z", "closed_at": null, "author_association": "MEMBER", "body": "It would be great to have Java bindings for Jsonnet. I'm thinking let's create JNI bindings as an initial implementation.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/64/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/61", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/61/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/61/events", "html_url": "https://github.com/google/jsonnet/issues/61", "id": 102264925, "number": 61, "title": "Warn if a variable is not used.", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-21T00:04:11Z", "updated_at": "2015-09-21T12:28:37Z", "closed_at": null, "author_association": "MEMBER", "body": "This is probably a small modification to the static checking code.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/61/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/53", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/53/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/53/events", "html_url": "https://github.com/google/jsonnet/issues/53", "id": 74259532, "number": 53, "title": "Addition of a build system generator", "user": {"login": "elfring", "id": 660477, "avatar_url": "https://avatars1.githubusercontent.com/u/660477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elfring", "html_url": "https://github.com/elfring", "followers_url": "https://api.github.com/users/elfring/followers", "following_url": "https://api.github.com/users/elfring/following{/other_user}", "gists_url": "https://api.github.com/users/elfring/gists{/gist_id}", "starred_url": "https://api.github.com/users/elfring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elfring/subscriptions", "organizations_url": "https://api.github.com/users/elfring/orgs", "repos_url": "https://api.github.com/users/elfring/repos", "events_url": "https://api.github.com/users/elfring/events{/privacy}", "received_events_url": "https://api.github.com/users/elfring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-08T07:03:02Z", "updated_at": "2015-12-09T05:28:53Z", "closed_at": null, "author_association": "NONE", "body": "I suggest to reuse a higher level build system than [your current small make file](https://github.com/google/jsonnet/blob/a6b18fc485233e86db953a658e6c68371d296e2e/Makefile#L1) so that powerful checks for software features will become easier.\n- [CMake](http://cmake.org/)\n- [Autotools](http://www.gnu.org/software/autoconf/#TOCintroduction)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/53/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/45", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/45/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/45/events", "html_url": "https://github.com/google/jsonnet/issues/45", "id": 70201658, "number": 45, "title": "Please support ES6 back-tick for strings", "user": {"login": "intervalia", "id": 1587937, "avatar_url": "https://avatars3.githubusercontent.com/u/1587937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intervalia", "html_url": "https://github.com/intervalia", "followers_url": "https://api.github.com/users/intervalia/followers", "following_url": "https://api.github.com/users/intervalia/following{/other_user}", "gists_url": "https://api.github.com/users/intervalia/gists{/gist_id}", "starred_url": "https://api.github.com/users/intervalia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intervalia/subscriptions", "organizations_url": "https://api.github.com/users/intervalia/orgs", "repos_url": "https://api.github.com/users/intervalia/repos", "events_url": "https://api.github.com/users/intervalia/events{/privacy}", "received_events_url": "https://api.github.com/users/intervalia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-22T18:30:52Z", "updated_at": "2015-09-21T12:28:18Z", "closed_at": null, "author_association": "NONE", "body": "ES6 has some wonderful functionality based on strings wrapped in the back-tick (`) instead of the standard double-quote (\") and single-quote (') characters.\n\nPlease, PLEASE add full support for the ES6 back-tick functionality!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/45/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/44", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/44/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/44/events", "html_url": "https://github.com/google/jsonnet/issues/44", "id": 69890455, "number": 44, "title": "Documentation: Compare to HOCON", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-04-21T16:22:11Z", "updated_at": "2015-04-21T16:22:11Z", "closed_at": null, "author_association": "MEMBER", "body": "HOCON is a configuration language that is part of the typesafehub config library https://github.com/typesafehub/config\n\nIt has some similarities with Jsonnet.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/44/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/43", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/43/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/43/events", "html_url": "https://github.com/google/jsonnet/issues/43", "id": 65775084, "number": 43, "title": "Add GitHub Linguist config for Jsonnet", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-04-01T20:42:34Z", "updated_at": "2015-09-17T19:47:48Z", "closed_at": null, "author_association": "MEMBER", "body": "We should add an entry to [github/linguist](https://github.com/github/linguist) for Jsonnet so that GitHub can 1) add proper syntax highlighting for displaying .jsonnet files and 2) include them in the language stats for repositories.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/43/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/33", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/33/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/33/events", "html_url": "https://github.com/google/jsonnet/issues/33", "id": 56713549, "number": 33, "title": "Cmdline flag to check two jsonnet files manifest equivalently", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-05T19:02:35Z", "updated_at": "2015-02-05T19:02:35Z", "closed_at": null, "author_association": "MEMBER", "body": "Evaluate both files and check JSON output is the same.\n\nThis is useful when refactoring to know whether or not the changes were purely internal (good) or had some external effect (bad).\n\nE.g. if you're a vim user:\n\njsonnet --compare Foo.jsonnet Foo.jsonnet~\n\nCan output a diff of the two JSON strings.\n\nConflicts with --multi.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/33/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/31", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/31/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/31/events", "html_url": "https://github.com/google/jsonnet/issues/31", "id": 51892852, "number": 31, "title": "Continue after syntax error, present more than one error at a time.", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-13T16:53:43Z", "updated_at": "2014-12-13T16:53:43Z", "closed_at": null, "author_association": "MEMBER", "body": "", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/31/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/30", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/30/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/30/events", "html_url": "https://github.com/google/jsonnet/issues/30", "id": 51892774, "number": 30, "title": "Improve syntax error in case of { a: e <kwd> }", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-13T16:51:05Z", "updated_at": "2014-12-13T16:54:02Z", "closed_at": null, "author_association": "MEMBER", "body": "This can easily be done if you miss a }, but the error message currently complains about the lack of comma after the e.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/30/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/21", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/21/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/21/events", "html_url": "https://github.com/google/jsonnet/issues/21", "id": 47922956, "number": 21, "title": "Add a date library", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-11-06T04:41:34Z", "updated_at": "2016-01-22T14:56:33Z", "closed_at": null, "author_association": "MEMBER", "body": "Code to convert to/from tuples like {year: x, month:x, ... seconds: x } into textual / other structured representations (seconds since epoch, etc).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/21/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/17", "repository_url": "https://api.github.com/repos/google/jsonnet", "labels_url": "https://api.github.com/repos/google/jsonnet/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/17/comments", "events_url": "https://api.github.com/repos/google/jsonnet/issues/17/events", "html_url": "https://github.com/google/jsonnet/issues/17", "id": 43199560, "number": 17, "title": "Add a REPL", "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 118848201, "url": "https://api.github.com/repos/google/jsonnet/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-09-19T02:52:20Z", "updated_at": "2017-08-14T20:52:10Z", "closed_at": null, "author_association": "MEMBER", "body": "For exploring Jsonnet, it would be nice to have a REPL, e.g., via `jsonnet -i`. For inspiration, I would look to Scala's REPL as an example.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/17/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "4f876247352505141d83e235f0b9dd3ce6acc75d", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2018-01-20T15:10:53Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-20T15:58:46Z"}, "message": "Improve error message for [1, 2, 3].map(...)", "tree": {"sha": "696e2f072fb6ce616e88382e6c3b847c873c1ed1", "url": "https://api.github.com/repos/google/jsonnet/git/trees/696e2f072fb6ce616e88382e6c3b847c873c1ed1"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4f876247352505141d83e235f0b9dd3ce6acc75d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4f876247352505141d83e235f0b9dd3ce6acc75d", "html_url": "https://github.com/google/jsonnet/commit/4f876247352505141d83e235f0b9dd3ce6acc75d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4f876247352505141d83e235f0b9dd3ce6acc75d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9297d93640d4534bb6cc22ae34c42cc50db371db", "url": "https://api.github.com/repos/google/jsonnet/commits/9297d93640d4534bb6cc22ae34c42cc50db371db", "html_url": "https://github.com/google/jsonnet/commit/9297d93640d4534bb6cc22ae34c42cc50db371db"}]}, {"sha": "9297d93640d4534bb6cc22ae34c42cc50db371db", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2018-01-20T14:27:40Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-20T14:36:06Z"}, "message": "Formatter never emits code with \\r in it.", "tree": {"sha": "c4c121dcfdb5740b840bd0d121e5052745cc530f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c4c121dcfdb5740b840bd0d121e5052745cc530f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9297d93640d4534bb6cc22ae34c42cc50db371db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9297d93640d4534bb6cc22ae34c42cc50db371db", "html_url": "https://github.com/google/jsonnet/commit/9297d93640d4534bb6cc22ae34c42cc50db371db", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9297d93640d4534bb6cc22ae34c42cc50db371db/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dbd30b5427c7b3718bdc6f6de0412849aacca22", "url": "https://api.github.com/repos/google/jsonnet/commits/6dbd30b5427c7b3718bdc6f6de0412849aacca22", "html_url": "https://github.com/google/jsonnet/commit/6dbd30b5427c7b3718bdc6f6de0412849aacca22"}]}, {"sha": "6dbd30b5427c7b3718bdc6f6de0412849aacca22", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-20T14:32:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-20T14:32:34Z"}, "message": "Add std.isFoo for various types (#444)\n\n* Add std.isFoo for various types\r\nFix #393", "tree": {"sha": "0f7f1c47fe72e44d1d53a6d049f922f8cca03016", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0f7f1c47fe72e44d1d53a6d049f922f8cca03016"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/6dbd30b5427c7b3718bdc6f6de0412849aacca22", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaY1MCCRBK7hj4Ov3rIwAAdHIIABRIbA6TCzdxoAUeDu+XsYeA\nMLEYYIzeZ19qeoynonZEQEvht14NYqzAqoOjmDU2a8d3p8khBaVtQSartlO58tFE\nYHz1zgRoQE+ysduWmwKvE1h8Tlbixx6S1w9hJXM1GKv0UEF+cd9Z+WeKoGi2k8Mu\ncA2XdbPi+xSsA15D3v6rjmR4WoGk30JMIJ3tennfibwKRLKzay5B/fgDPEjhGHwK\n9WfK4Hvp+HJmv5svUEgK+AZaF2TGY8XFZMPgNOHxGH7183grncvLFyvUNIaViN0l\n94VoDAdOEv/morGaaLP0Q+q+vRa4WpEQTK1PCfYqSzXWcJLvjLDbazvmUWDfvyA=\n=Iz34\n-----END PGP SIGNATURE-----\n", "payload": "tree 0f7f1c47fe72e44d1d53a6d049f922f8cca03016\nparent 94829caabe9356d09063a674d512ce26f9450be9\nauthor Dave Cunningham <sparkprime@gmail.com> 1516458754 -0500\ncommitter GitHub <noreply@github.com> 1516458754 -0500\n\nAdd std.isFoo for various types (#444)\n\n* Add std.isFoo for various types\r\nFix #393\r\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/6dbd30b5427c7b3718bdc6f6de0412849aacca22", "html_url": "https://github.com/google/jsonnet/commit/6dbd30b5427c7b3718bdc6f6de0412849aacca22", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/6dbd30b5427c7b3718bdc6f6de0412849aacca22/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94829caabe9356d09063a674d512ce26f9450be9", "url": "https://api.github.com/repos/google/jsonnet/commits/94829caabe9356d09063a674d512ce26f9450be9", "html_url": "https://github.com/google/jsonnet/commit/94829caabe9356d09063a674d512ce26f9450be9"}]}, {"sha": "94829caabe9356d09063a674d512ce26f9450be9", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-18T03:37:22Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-18T17:52:10Z"}, "message": "Chomp whitespace after |||, including \\r, fix #421", "tree": {"sha": "979c4fa9771643340a4641371722005d41c9ea4f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/979c4fa9771643340a4641371722005d41c9ea4f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/94829caabe9356d09063a674d512ce26f9450be9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/94829caabe9356d09063a674d512ce26f9450be9", "html_url": "https://github.com/google/jsonnet/commit/94829caabe9356d09063a674d512ce26f9450be9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/94829caabe9356d09063a674d512ce26f9450be9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44dbc4342e41913e88ca3642ba69fe1d4c134194", "url": "https://api.github.com/repos/google/jsonnet/commits/44dbc4342e41913e88ca3642ba69fe1d4c134194", "html_url": "https://github.com/google/jsonnet/commit/44dbc4342e41913e88ca3642ba69fe1d4c134194"}]}, {"sha": "44dbc4342e41913e88ca3642ba69fe1d4c134194", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-18T02:49:14Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-18T17:50:33Z"}, "message": "Escape filename in import error, fix #372", "tree": {"sha": "c9e60f6c91c11693a396809d2b30f35199f21621", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c9e60f6c91c11693a396809d2b30f35199f21621"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/44dbc4342e41913e88ca3642ba69fe1d4c134194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/44dbc4342e41913e88ca3642ba69fe1d4c134194", "html_url": "https://github.com/google/jsonnet/commit/44dbc4342e41913e88ca3642ba69fe1d4c134194", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/44dbc4342e41913e88ca3642ba69fe1d4c134194/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cb8d4d5e7a3accb116b0fcf79240137be420dd5", "url": "https://api.github.com/repos/google/jsonnet/commits/6cb8d4d5e7a3accb116b0fcf79240137be420dd5", "html_url": "https://github.com/google/jsonnet/commit/6cb8d4d5e7a3accb116b0fcf79240137be420dd5"}]}, {"sha": "6cb8d4d5e7a3accb116b0fcf79240137be420dd5", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2018-01-17T06:08:06Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-17T19:24:45Z"}, "message": "Add string replace function", "tree": {"sha": "ec678cd64ba40562d96279d3a256b9d827e32e07", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ec678cd64ba40562d96279d3a256b9d827e32e07"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/6cb8d4d5e7a3accb116b0fcf79240137be420dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/6cb8d4d5e7a3accb116b0fcf79240137be420dd5", "html_url": "https://github.com/google/jsonnet/commit/6cb8d4d5e7a3accb116b0fcf79240137be420dd5", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/6cb8d4d5e7a3accb116b0fcf79240137be420dd5/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce82241452e5c496496086d38770eaa0fa9c8a57", "url": "https://api.github.com/repos/google/jsonnet/commits/ce82241452e5c496496086d38770eaa0fa9c8a57", "html_url": "https://github.com/google/jsonnet/commit/ce82241452e5c496496086d38770eaa0fa9c8a57"}]}, {"sha": "ce82241452e5c496496086d38770eaa0fa9c8a57", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-17T00:43:11Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-17T06:12:02Z"}, "message": "Null field values now ignored in object comps, just like regular objects", "tree": {"sha": "85c56e32ddc33464913d0ab5f0016e9394a139d0", "url": "https://api.github.com/repos/google/jsonnet/git/trees/85c56e32ddc33464913d0ab5f0016e9394a139d0"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ce82241452e5c496496086d38770eaa0fa9c8a57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ce82241452e5c496496086d38770eaa0fa9c8a57", "html_url": "https://github.com/google/jsonnet/commit/ce82241452e5c496496086d38770eaa0fa9c8a57", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ce82241452e5c496496086d38770eaa0fa9c8a57/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d17db72a8222d26894f17ce650591d44e7bd8577", "url": "https://api.github.com/repos/google/jsonnet/commits/d17db72a8222d26894f17ce650591d44e7bd8577", "html_url": "https://github.com/google/jsonnet/commit/d17db72a8222d26894f17ce650591d44e7bd8577"}]}, {"sha": "d17db72a8222d26894f17ce650591d44e7bd8577", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2018-01-17T06:07:30Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-17T06:10:17Z"}, "message": "Script now refreshes all args", "tree": {"sha": "4048ee0746bd592921117df06a1dcbf1aa5e84a0", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4048ee0746bd592921117df06a1dcbf1aa5e84a0"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d17db72a8222d26894f17ce650591d44e7bd8577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d17db72a8222d26894f17ce650591d44e7bd8577", "html_url": "https://github.com/google/jsonnet/commit/d17db72a8222d26894f17ce650591d44e7bd8577", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d17db72a8222d26894f17ce650591d44e7bd8577/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12db0bda9227c9cb5cd73b3cf57beeea2ecd446f", "url": "https://api.github.com/repos/google/jsonnet/commits/12db0bda9227c9cb5cd73b3cf57beeea2ecd446f", "html_url": "https://github.com/google/jsonnet/commit/12db0bda9227c9cb5cd73b3cf57beeea2ecd446f"}]}, {"sha": "12db0bda9227c9cb5cd73b3cf57beeea2ecd446f", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2018-01-16T23:40:16Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-16T23:40:52Z"}, "message": "Fix use of e in abstract syntax", "tree": {"sha": "931e41020168109bc546c4d0c28359d7952c6b3f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/931e41020168109bc546c4d0c28359d7952c6b3f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/12db0bda9227c9cb5cd73b3cf57beeea2ecd446f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/12db0bda9227c9cb5cd73b3cf57beeea2ecd446f", "html_url": "https://github.com/google/jsonnet/commit/12db0bda9227c9cb5cd73b3cf57beeea2ecd446f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/12db0bda9227c9cb5cd73b3cf57beeea2ecd446f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e7e8360269a2718a1e9ae09bbca71ae8b6a579", "url": "https://api.github.com/repos/google/jsonnet/commits/e5e7e8360269a2718a1e9ae09bbca71ae8b6a579", "html_url": "https://github.com/google/jsonnet/commit/e5e7e8360269a2718a1e9ae09bbca71ae8b6a579"}]}, {"sha": "e5e7e8360269a2718a1e9ae09bbca71ae8b6a579", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-16T02:54:33Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-16T03:01:44Z"}, "message": "Fix operational semantics of object comprehension when field expression was stuck", "tree": {"sha": "d240bcd935bc0af2cd7ac4397ba2282484ef3029", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d240bcd935bc0af2cd7ac4397ba2282484ef3029"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e5e7e8360269a2718a1e9ae09bbca71ae8b6a579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e5e7e8360269a2718a1e9ae09bbca71ae8b6a579", "html_url": "https://github.com/google/jsonnet/commit/e5e7e8360269a2718a1e9ae09bbca71ae8b6a579", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e5e7e8360269a2718a1e9ae09bbca71ae8b6a579/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30240d9658540c73b349dde23f482285c5b433fb", "url": "https://api.github.com/repos/google/jsonnet/commits/30240d9658540c73b349dde23f482285c5b433fb", "html_url": "https://github.com/google/jsonnet/commit/30240d9658540c73b349dde23f482285c5b433fb"}]}, {"sha": "30240d9658540c73b349dde23f482285c5b433fb", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-13T20:01:35Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-13T20:34:42Z"}, "message": "give full commandline in failing test", "tree": {"sha": "f9744db1885024819a8c2cb850686a01c2a0f235", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f9744db1885024819a8c2cb850686a01c2a0f235"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/30240d9658540c73b349dde23f482285c5b433fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/30240d9658540c73b349dde23f482285c5b433fb", "html_url": "https://github.com/google/jsonnet/commit/30240d9658540c73b349dde23f482285c5b433fb", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/30240d9658540c73b349dde23f482285c5b433fb/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9e9d920bdd31eb7ddd284212ef8fa0c8cc7a420", "url": "https://api.github.com/repos/google/jsonnet/commits/d9e9d920bdd31eb7ddd284212ef8fa0c8cc7a420", "html_url": "https://github.com/google/jsonnet/commit/d9e9d920bdd31eb7ddd284212ef8fa0c8cc7a420"}]}, {"sha": "d9e9d920bdd31eb7ddd284212ef8fa0c8cc7a420", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-13T16:10:22Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-13T16:10:22Z"}, "message": "Ensure libjsonnet.js is always built before pushing website", "tree": {"sha": "b88bfc05d5120a973aa0caed0ca3214cc75e222f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b88bfc05d5120a973aa0caed0ca3214cc75e222f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d9e9d920bdd31eb7ddd284212ef8fa0c8cc7a420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d9e9d920bdd31eb7ddd284212ef8fa0c8cc7a420", "html_url": "https://github.com/google/jsonnet/commit/d9e9d920bdd31eb7ddd284212ef8fa0c8cc7a420", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d9e9d920bdd31eb7ddd284212ef8fa0c8cc7a420/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ad88ce929c6716e921e357a7f7ea2d2966d48b5", "url": "https://api.github.com/repos/google/jsonnet/commits/8ad88ce929c6716e921e357a7f7ea2d2966d48b5", "html_url": "https://github.com/google/jsonnet/commit/8ad88ce929c6716e921e357a7f7ea2d2966d48b5"}]}, {"sha": "8ad88ce929c6716e921e357a7f7ea2d2966d48b5", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-13T16:02:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-13T16:02:28Z"}, "message": "Don't waste as much stack space while parsing. (#431)\n\nRedesign parser to use less stack space", "tree": {"sha": "82c4edea3ec01832fa457e1f900100bba7693d84", "url": "https://api.github.com/repos/google/jsonnet/git/trees/82c4edea3ec01832fa457e1f900100bba7693d84"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8ad88ce929c6716e921e357a7f7ea2d2966d48b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaWi2UCRBK7hj4Ov3rIwAAdHIIAIgRDBOQ5FahcyCYbKTwi8/2\nCYVCkWLP29DUOncE5WDIYpCB7O/kDYks5EmzkZWyo9DNQcHscqrPCgwpE0nOtrJ9\nzxlIKT14Vp1UWDzG/jGM1Emd7/c9v5ndjqYMLCqDxvd19TenAcCCoRbZ7Kf7MHFj\nu6Sw8Z4HUPuH5ChdfuDT1aOghzXOjLc8FBS1Ra/S7W10KY5/jZ33YImkO2CC6MzP\njrcd2W4InmroGz+qEB5F2t4d8d2mzITRZtyah7QYTrd0WMYMflmW4KbJIPPFoZTJ\n0tO04rdpYNBw0HqGIDTGNYZejkAF2yeMPbZmgLSBYY0fptnMXLqr5cRXz2rgawI=\n=lMpy\n-----END PGP SIGNATURE-----\n", "payload": "tree 82c4edea3ec01832fa457e1f900100bba7693d84\nparent 4a0a103b50c509bb41d56d7aad3a8195a8b11713\nauthor Dave Cunningham <sparkprime@gmail.com> 1515859348 -0500\ncommitter GitHub <noreply@github.com> 1515859348 -0500\n\nDon't waste as much stack space while parsing. (#431)\n\nRedesign parser to use less stack space"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8ad88ce929c6716e921e357a7f7ea2d2966d48b5", "html_url": "https://github.com/google/jsonnet/commit/8ad88ce929c6716e921e357a7f7ea2d2966d48b5", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8ad88ce929c6716e921e357a7f7ea2d2966d48b5/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a0a103b50c509bb41d56d7aad3a8195a8b11713", "url": "https://api.github.com/repos/google/jsonnet/commits/4a0a103b50c509bb41d56d7aad3a8195a8b11713", "html_url": "https://github.com/google/jsonnet/commit/4a0a103b50c509bb41d56d7aad3a8195a8b11713"}]}, {"sha": "4a0a103b50c509bb41d56d7aad3a8195a8b11713", "commit": {"author": {"name": "Gavin Dodd", "email": "gavindodd@google.com", "date": "2018-01-11T18:46:55Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-11T20:36:30Z"}, "message": "Replace long with int64_t in virtual machine numeric evaluations\n\nBy the C/C++ standard long is only at least as large as an int.\nFor MSVC it is the same size as an int which caused some jsonnet scripts that work for other platforms to fail on Windows.\nUsing int64_t guarantees all platforms have the same precision.", "tree": {"sha": "39000513a65c38bd5830410368192d016e878c63", "url": "https://api.github.com/repos/google/jsonnet/git/trees/39000513a65c38bd5830410368192d016e878c63"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4a0a103b50c509bb41d56d7aad3a8195a8b11713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4a0a103b50c509bb41d56d7aad3a8195a8b11713", "html_url": "https://github.com/google/jsonnet/commit/4a0a103b50c509bb41d56d7aad3a8195a8b11713", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4a0a103b50c509bb41d56d7aad3a8195a8b11713/comments", "author": {"login": "greatgoogleymoogley", "id": 35280039, "avatar_url": "https://avatars0.githubusercontent.com/u/35280039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greatgoogleymoogley", "html_url": "https://github.com/greatgoogleymoogley", "followers_url": "https://api.github.com/users/greatgoogleymoogley/followers", "following_url": "https://api.github.com/users/greatgoogleymoogley/following{/other_user}", "gists_url": "https://api.github.com/users/greatgoogleymoogley/gists{/gist_id}", "starred_url": "https://api.github.com/users/greatgoogleymoogley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greatgoogleymoogley/subscriptions", "organizations_url": "https://api.github.com/users/greatgoogleymoogley/orgs", "repos_url": "https://api.github.com/users/greatgoogleymoogley/repos", "events_url": "https://api.github.com/users/greatgoogleymoogley/events{/privacy}", "received_events_url": "https://api.github.com/users/greatgoogleymoogley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9da1f795edd6036437b7674e91bbb2e156af78db", "url": "https://api.github.com/repos/google/jsonnet/commits/9da1f795edd6036437b7674e91bbb2e156af78db", "html_url": "https://github.com/google/jsonnet/commit/9da1f795edd6036437b7674e91bbb2e156af78db"}]}, {"sha": "9da1f795edd6036437b7674e91bbb2e156af78db", "commit": {"author": {"name": "Gavin Dodd", "email": "gavindodd@google.com", "date": "2018-01-11T18:45:11Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-11T20:36:30Z"}, "message": "Adding #include <string> for windows build\n\ncompilation failed in MSVC with\njsonnet\\third_party\\md5\\md5.cpp(353): warning C4717: 'operator<<': recursive on all control paths, function will cause runtime stack overflow\nbecause\nstd::ostream& operator<<(std::ostream&, std::string)\nwas not defined, so it implicitly converted the hex digest back to MD5", "tree": {"sha": "de03d764cd0521160f6a18a27cff932f2fea7cdf", "url": "https://api.github.com/repos/google/jsonnet/git/trees/de03d764cd0521160f6a18a27cff932f2fea7cdf"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9da1f795edd6036437b7674e91bbb2e156af78db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9da1f795edd6036437b7674e91bbb2e156af78db", "html_url": "https://github.com/google/jsonnet/commit/9da1f795edd6036437b7674e91bbb2e156af78db", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9da1f795edd6036437b7674e91bbb2e156af78db/comments", "author": {"login": "greatgoogleymoogley", "id": 35280039, "avatar_url": "https://avatars0.githubusercontent.com/u/35280039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greatgoogleymoogley", "html_url": "https://github.com/greatgoogleymoogley", "followers_url": "https://api.github.com/users/greatgoogleymoogley/followers", "following_url": "https://api.github.com/users/greatgoogleymoogley/following{/other_user}", "gists_url": "https://api.github.com/users/greatgoogleymoogley/gists{/gist_id}", "starred_url": "https://api.github.com/users/greatgoogleymoogley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greatgoogleymoogley/subscriptions", "organizations_url": "https://api.github.com/users/greatgoogleymoogley/orgs", "repos_url": "https://api.github.com/users/greatgoogleymoogley/repos", "events_url": "https://api.github.com/users/greatgoogleymoogley/events{/privacy}", "received_events_url": "https://api.github.com/users/greatgoogleymoogley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d25d9e38db86e5f4b59fd231f80c3fb47336e0e", "url": "https://api.github.com/repos/google/jsonnet/commits/2d25d9e38db86e5f4b59fd231f80c3fb47336e0e", "html_url": "https://github.com/google/jsonnet/commit/2d25d9e38db86e5f4b59fd231f80c3fb47336e0e"}]}, {"sha": "2d25d9e38db86e5f4b59fd231f80c3fb47336e0e", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2018-01-10T15:37:15Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2018-01-11T00:45:14Z"}, "message": "Add top level function test with no tla", "tree": {"sha": "d5057fde186563332725370caa1b63fe37cb69b7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d5057fde186563332725370caa1b63fe37cb69b7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2d25d9e38db86e5f4b59fd231f80c3fb47336e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2d25d9e38db86e5f4b59fd231f80c3fb47336e0e", "html_url": "https://github.com/google/jsonnet/commit/2d25d9e38db86e5f4b59fd231f80c3fb47336e0e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2d25d9e38db86e5f4b59fd231f80c3fb47336e0e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fe9bf5e05e1cedf27d187f8050313d6c96186ef", "url": "https://api.github.com/repos/google/jsonnet/commits/8fe9bf5e05e1cedf27d187f8050313d6c96186ef", "html_url": "https://github.com/google/jsonnet/commit/8fe9bf5e05e1cedf27d187f8050313d6c96186ef"}]}, {"sha": "8fe9bf5e05e1cedf27d187f8050313d6c96186ef", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-19T10:58:56Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-19T10:58:56Z"}, "message": "fix bazel", "tree": {"sha": "42dc58cea37c9a3e719d202f04312631564da068", "url": "https://api.github.com/repos/google/jsonnet/git/trees/42dc58cea37c9a3e719d202f04312631564da068"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8fe9bf5e05e1cedf27d187f8050313d6c96186ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8fe9bf5e05e1cedf27d187f8050313d6c96186ef", "html_url": "https://github.com/google/jsonnet/commit/8fe9bf5e05e1cedf27d187f8050313d6c96186ef", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8fe9bf5e05e1cedf27d187f8050313d6c96186ef/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b11fc89c94492941ea8c908602f9885947dc18c7", "url": "https://api.github.com/repos/google/jsonnet/commits/b11fc89c94492941ea8c908602f9885947dc18c7", "html_url": "https://github.com/google/jsonnet/commit/b11fc89c94492941ea8c908602f9885947dc18c7"}]}, {"sha": "b11fc89c94492941ea8c908602f9885947dc18c7", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-19T10:31:29Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-19T10:33:45Z"}, "message": "Add server side recommendation", "tree": {"sha": "54a0f5c53d6cbcbd834c0f70bd4a3f13cbbf3035", "url": "https://api.github.com/repos/google/jsonnet/git/trees/54a0f5c53d6cbcbd834c0f70bd4a3f13cbbf3035"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/b11fc89c94492941ea8c908602f9885947dc18c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/b11fc89c94492941ea8c908602f9885947dc18c7", "html_url": "https://github.com/google/jsonnet/commit/b11fc89c94492941ea8c908602f9885947dc18c7", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/b11fc89c94492941ea8c908602f9885947dc18c7/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8a626a7854af5a49d24f0174b537ae57e462739", "url": "https://api.github.com/repos/google/jsonnet/commits/b8a626a7854af5a49d24f0174b537ae57e462739", "html_url": "https://github.com/google/jsonnet/commit/b8a626a7854af5a49d24f0174b537ae57e462739"}]}, {"sha": "b8a626a7854af5a49d24f0174b537ae57e462739", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-19T10:31:09Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-19T10:33:45Z"}, "message": "Update to latest jekyll", "tree": {"sha": "2301565eb3244784736df2ef4a0a03f531805aa6", "url": "https://api.github.com/repos/google/jsonnet/git/trees/2301565eb3244784736df2ef4a0a03f531805aa6"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/b8a626a7854af5a49d24f0174b537ae57e462739", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/b8a626a7854af5a49d24f0174b537ae57e462739", "html_url": "https://github.com/google/jsonnet/commit/b8a626a7854af5a49d24f0174b537ae57e462739", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/b8a626a7854af5a49d24f0174b537ae57e462739/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e810b43ccee0e57423b3669ba393dda34e94cd36", "url": "https://api.github.com/repos/google/jsonnet/commits/e810b43ccee0e57423b3669ba393dda34e94cd36", "html_url": "https://github.com/google/jsonnet/commit/e810b43ccee0e57423b3669ba393dda34e94cd36"}]}, {"sha": "e810b43ccee0e57423b3669ba393dda34e94cd36", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-12-13T21:22:36Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-12-13T21:22:36Z"}, "message": "Remove \"rvm get head\" workaround to see what happens", "tree": {"sha": "fceb424dc31c532da036d98a2d1b3cee430a5e60", "url": "https://api.github.com/repos/google/jsonnet/git/trees/fceb424dc31c532da036d98a2d1b3cee430a5e60"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e810b43ccee0e57423b3669ba393dda34e94cd36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e810b43ccee0e57423b3669ba393dda34e94cd36", "html_url": "https://github.com/google/jsonnet/commit/e810b43ccee0e57423b3669ba393dda34e94cd36", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e810b43ccee0e57423b3669ba393dda34e94cd36/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e78a7e5a05e8bcd7d952f210630dc1bdcb49ecdd", "url": "https://api.github.com/repos/google/jsonnet/commits/e78a7e5a05e8bcd7d952f210630dc1bdcb49ecdd", "html_url": "https://github.com/google/jsonnet/commit/e78a7e5a05e8bcd7d952f210630dc1bdcb49ecdd"}]}, {"sha": "e78a7e5a05e8bcd7d952f210630dc1bdcb49ecdd", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-12T04:40:22Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-13T20:15:49Z"}, "message": "backwards incompatible: make std.join more strict about types", "tree": {"sha": "2c07e8422e4c326c704d0fb79b65ad05ed5b3fab", "url": "https://api.github.com/repos/google/jsonnet/git/trees/2c07e8422e4c326c704d0fb79b65ad05ed5b3fab"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e78a7e5a05e8bcd7d952f210630dc1bdcb49ecdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e78a7e5a05e8bcd7d952f210630dc1bdcb49ecdd", "html_url": "https://github.com/google/jsonnet/commit/e78a7e5a05e8bcd7d952f210630dc1bdcb49ecdd", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e78a7e5a05e8bcd7d952f210630dc1bdcb49ecdd/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97a24f7026e95d2dde1894ab86f96373047a21f7", "url": "https://api.github.com/repos/google/jsonnet/commits/97a24f7026e95d2dde1894ab86f96373047a21f7", "html_url": "https://github.com/google/jsonnet/commit/97a24f7026e95d2dde1894ab86f96373047a21f7"}]}, {"sha": "97a24f7026e95d2dde1894ab86f96373047a21f7", "commit": {"author": {"name": "Dimiter 'malkia' Stanev", "email": "malkia@gmail.com", "date": "2017-12-13T20:15:25Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-13T20:15:25Z"}, "message": "Use directly static_cast, rather than probing with dynamic_cast (#416)\n\n* Use directly static_cast, based on the stored node type, rather than probing with dynamic_cast. Add AST_APPLY_BRACE node type. One benchmark showed x2 cpu increase: https://github.com/ksonnet/ksonnet-lib/blob/master/examples/readme/hello-nginx.jsonnet", "tree": {"sha": "3f0c40328304ef3447ed3f5bc63208d1ae941b92", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3f0c40328304ef3447ed3f5bc63208d1ae941b92"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/97a24f7026e95d2dde1894ab86f96373047a21f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/97a24f7026e95d2dde1894ab86f96373047a21f7", "html_url": "https://github.com/google/jsonnet/commit/97a24f7026e95d2dde1894ab86f96373047a21f7", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/97a24f7026e95d2dde1894ab86f96373047a21f7/comments", "author": {"login": "malkia", "id": 51738, "avatar_url": "https://avatars2.githubusercontent.com/u/51738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malkia", "html_url": "https://github.com/malkia", "followers_url": "https://api.github.com/users/malkia/followers", "following_url": "https://api.github.com/users/malkia/following{/other_user}", "gists_url": "https://api.github.com/users/malkia/gists{/gist_id}", "starred_url": "https://api.github.com/users/malkia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malkia/subscriptions", "organizations_url": "https://api.github.com/users/malkia/orgs", "repos_url": "https://api.github.com/users/malkia/repos", "events_url": "https://api.github.com/users/malkia/events{/privacy}", "received_events_url": "https://api.github.com/users/malkia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "005d048507b8bbf74aaeea9bd8fe3c7687c9a7bb", "url": "https://api.github.com/repos/google/jsonnet/commits/005d048507b8bbf74aaeea9bd8fe3c7687c9a7bb", "html_url": "https://github.com/google/jsonnet/commit/005d048507b8bbf74aaeea9bd8fe3c7687c9a7bb"}]}, {"sha": "005d048507b8bbf74aaeea9bd8fe3c7687c9a7bb", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-12T04:55:38Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-12T04:57:53Z"}, "message": "attempt to work around broken travis", "tree": {"sha": "b61f3cbe3c8a8fa31dc686a17bf48e8986c52a6c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b61f3cbe3c8a8fa31dc686a17bf48e8986c52a6c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/005d048507b8bbf74aaeea9bd8fe3c7687c9a7bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/005d048507b8bbf74aaeea9bd8fe3c7687c9a7bb", "html_url": "https://github.com/google/jsonnet/commit/005d048507b8bbf74aaeea9bd8fe3c7687c9a7bb", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/005d048507b8bbf74aaeea9bd8fe3c7687c9a7bb/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ddf38e6f697d95c413c488a22fb0f63e1f50a83", "url": "https://api.github.com/repos/google/jsonnet/commits/1ddf38e6f697d95c413c488a22fb0f63e1f50a83", "html_url": "https://github.com/google/jsonnet/commit/1ddf38e6f697d95c413c488a22fb0f63e1f50a83"}]}, {"sha": "1ddf38e6f697d95c413c488a22fb0f63e1f50a83", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-12T04:15:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-12T04:15:54Z"}, "message": "fix escape codes in spec (#418)", "tree": {"sha": "1ab1df78f2ba282e755c0f6c18867e0f7a1ca0b2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/1ab1df78f2ba282e755c0f6c18867e0f7a1ca0b2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1ddf38e6f697d95c413c488a22fb0f63e1f50a83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaL1f6CRBK7hj4Ov3rIwAAdHIIAE4bwxJ75IgXNbH40L4AxxtB\nwyfbRN2R4u+ep0X5RC65drG9s7jMTAF4SIuk4btcKlZzTW+X+pQtQTkccHD6FUmL\nt6IOfe4vKAffrjz8IKyStK94kfinHN7rY0KjX4VBw2bXnLhNv3SGUBxbbT4iT02L\nA/+JOxi+gq2zZIpYLBej/t/n4LOXgvqLzG4tbITNzAEre7U2hlF8BoiE/R+8GMgT\nhScP3j86j3S412KNKgFEFL1rRmwUQ4adrLKVm8Lnv4TCUwJhAji3COFSarS19Id7\nSbblJvk9bTNzs6mB7SkS392BAMLJClYAkoRmw8BVvsBaoTC/gQ8XB5nfzbrJAIA=\n=nWDP\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ab1df78f2ba282e755c0f6c18867e0f7a1ca0b2\nparent d41445767f7528c9dd8096c158d366f05188cda3\nauthor Dave Cunningham <sparkprime@gmail.com> 1513052154 -0500\ncommitter GitHub <noreply@github.com> 1513052154 -0500\n\nfix escape codes in spec (#418)\n\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1ddf38e6f697d95c413c488a22fb0f63e1f50a83", "html_url": "https://github.com/google/jsonnet/commit/1ddf38e6f697d95c413c488a22fb0f63e1f50a83", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1ddf38e6f697d95c413c488a22fb0f63e1f50a83/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d41445767f7528c9dd8096c158d366f05188cda3", "url": "https://api.github.com/repos/google/jsonnet/commits/d41445767f7528c9dd8096c158d366f05188cda3", "html_url": "https://github.com/google/jsonnet/commit/d41445767f7528c9dd8096c158d366f05188cda3"}]}, {"sha": "d41445767f7528c9dd8096c158d366f05188cda3", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-12-12T04:08:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-12T04:08:24Z"}, "message": "Add JSONNET_PATH environment variable. (#417)\n\n* Add JSONNET_PATH environment variable.", "tree": {"sha": "6ad5959d8c8a17dd58a27b6f5ddd68bfae2d79e6", "url": "https://api.github.com/repos/google/jsonnet/git/trees/6ad5959d8c8a17dd58a27b6f5ddd68bfae2d79e6"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d41445767f7528c9dd8096c158d366f05188cda3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaL1Y4CRBK7hj4Ov3rIwAAdHIIAAy1Y8ddLxQscxdYMn8N8tWw\nXcHxOtFhAsAOZrMOGOOzhRFe7WsAyXaodmq0B8nrktcLcRaeAJCP+Jy3jDQ7LYu9\nTfOyZFM99KKOu9pf8t21p4KNXAKL6AmIkh/FEXGTI/6uPqiDC6ikiThv1CmI3DJO\nG38ThIQjUWDayHcjtzR4u7KdiWylDH8gsOcptXk36VwOug9+3Mcq8/3y+nnApRQm\n3ItdnR/Sm/9GL1r8yhsqk0RqvpUhzISYzJwH2mWO8WyZXf/5cn/rNpwUdhxpPIGj\nhj43GU5TFrCKb0r/mIRW0C9jfEVjjUCtUcB3kM+DuQfTRWwDWY5vc8EQquNntYE=\n=tHEY\n-----END PGP SIGNATURE-----\n", "payload": "tree 6ad5959d8c8a17dd58a27b6f5ddd68bfae2d79e6\nparent d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826\nauthor Dave Cunningham <sparkprime@gmail.com> 1513051704 -0500\ncommitter GitHub <noreply@github.com> 1513051704 -0500\n\nAdd JSONNET_PATH environment variable. (#417)\n\n* Add JSONNET_PATH environment variable.\r\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d41445767f7528c9dd8096c158d366f05188cda3", "html_url": "https://github.com/google/jsonnet/commit/d41445767f7528c9dd8096c158d366f05188cda3", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d41445767f7528c9dd8096c158d366f05188cda3/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826", "url": "https://api.github.com/repos/google/jsonnet/commits/d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826", "html_url": "https://github.com/google/jsonnet/commit/d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826"}]}, {"sha": "d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-29T03:06:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-29T03:06:46Z"}, "message": "Fix EOF token, parser tests (#413)", "tree": {"sha": "42a9bd07b20cc6aa882bcad3e6dfd2ae7acf4772", "url": "https://api.github.com/repos/google/jsonnet/git/trees/42a9bd07b20cc6aa882bcad3e6dfd2ae7acf4772"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaHiRGCRBK7hj4Ov3rIwAAdHIIAHkZvRdqEJJPr3Y68ZFfkjkN\nxpH0HcPX3X718+TP1mS2zMjghMvec2zgR/sKJZ42aoo2Pv44wZ0XOMvCpFj5cFnz\nU2tywTEfCued58yMLJ/MQam48RIG5+JbZTcmvHj3iyPlyaXb/MdJpy6l1sV8ysaQ\n1TvQUaO3CN3ZJOK1R3W2agM+u6oR2PykRNwwhMSYqN6/j1l3Rrj6fpHPHJ5hQudh\n2CudQ5EEOqjh+hdRcpG9IHUdri4Z0FJu1iAAXsJVAM2ePlHAUU3ZA2vsXKbS0PiL\nDCyJRj0KlrPxA5QEDa6Vvu/nH8VVJw4pM2lL1u3GGMUyNgvnT0dNHeDUGBtqpxk=\n=GPlT\n-----END PGP SIGNATURE-----\n", "payload": "tree 42a9bd07b20cc6aa882bcad3e6dfd2ae7acf4772\nparent 5c17788d4d692f0012592e9dd8e1914a0c2444fc\nauthor Dave Cunningham <sparkprime@gmail.com> 1511924806 -0500\ncommitter GitHub <noreply@github.com> 1511924806 -0500\n\nFix EOF token, parser tests (#413)\n\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826", "html_url": "https://github.com/google/jsonnet/commit/d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d8d3f88bb2a04665fec9c9ea30ffeb54a86d5826/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c17788d4d692f0012592e9dd8e1914a0c2444fc", "url": "https://api.github.com/repos/google/jsonnet/commits/5c17788d4d692f0012592e9dd8e1914a0c2444fc", "html_url": "https://github.com/google/jsonnet/commit/5c17788d4d692f0012592e9dd8e1914a0c2444fc"}]}, {"sha": "5c17788d4d692f0012592e9dd8e1914a0c2444fc", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-28T22:44:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-28T22:44:11Z"}, "message": "Fix format of object with empty field name '' (#412)", "tree": {"sha": "426d344c8eb98e0f8e3ad730eebfaa881bf37d99", "url": "https://api.github.com/repos/google/jsonnet/git/trees/426d344c8eb98e0f8e3ad730eebfaa881bf37d99"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/5c17788d4d692f0012592e9dd8e1914a0c2444fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaHea7CRBK7hj4Ov3rIwAAdHIIAG+lqsjZ9w/wwF0VQbrvlIUa\n1Tn0uE2y3aX8shdvfcMzKiGQnKbMD0sh4ej/uGXSnFiM0fbHrIw+eqRcAhT9vAa8\n9GumACJpOEFGEnK8clYYj438WgIisNxZSYseLdcsXMYvTwn6/Ufh5UQin/iNDE1f\n/kZSIluLCusa6GEWxYuSYBdTQhS1AxOvCax6+r0PvNrJOdQ1tleTW7YKVZN68zIW\nqFSV56WP55mdRFp2NxfmNa3Kkiz4uIvGAZrgyvwWFSBD0R6e6Tj7xGRu6f25oBd/\nJwWITx8UF5HhF04ByNVQ67gBLXkwhluOc+RAdiKtaLD6hKKFExIqTVxXsUWlgmo=\n=MOSt\n-----END PGP SIGNATURE-----\n", "payload": "tree 426d344c8eb98e0f8e3ad730eebfaa881bf37d99\nparent 74eb5efa5e8838b72489f556f1c289696ea2e67c\nauthor Dave Cunningham <sparkprime@gmail.com> 1511909051 -0500\ncommitter GitHub <noreply@github.com> 1511909051 -0500\n\nFix format of object with empty field name '' (#412)\n\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/5c17788d4d692f0012592e9dd8e1914a0c2444fc", "html_url": "https://github.com/google/jsonnet/commit/5c17788d4d692f0012592e9dd8e1914a0c2444fc", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/5c17788d4d692f0012592e9dd8e1914a0c2444fc/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74eb5efa5e8838b72489f556f1c289696ea2e67c", "url": "https://api.github.com/repos/google/jsonnet/commits/74eb5efa5e8838b72489f556f1c289696ea2e67c", "html_url": "https://github.com/google/jsonnet/commit/74eb5efa5e8838b72489f556f1c289696ea2e67c"}]}, {"sha": "74eb5efa5e8838b72489f556f1c289696ea2e67c", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-04T06:11:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-04T06:11:07Z"}, "message": "Add some Jsonnet programs that take a while to execute. (#399)\n\n* Add some Jsonnet programs that take a while to execute.", "tree": {"sha": "039d58d1873688b6be331f59b37f006d64eec9ee", "url": "https://api.github.com/repos/google/jsonnet/git/trees/039d58d1873688b6be331f59b37f006d64eec9ee"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/74eb5efa5e8838b72489f556f1c289696ea2e67c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJZ/Vn7CRBK7hj4Ov3rIwAAdHIIAB1LP7KnTpal9OdVzK3H9lCD\n+jUhjSod3J/3wt27APANfVp+auMoXDmv6Bxa0USHlLCoDDdZtsm2pXggbocNBVx3\nVlIIhPxkzb/Xk2/CliTiwHBlGusFdlHMbpyO4/w82JDeihA2tx40eAuPUaRqfrjt\nXCLz2Kvizhry2d1S2o2FpnnlmfUBgpc0z68r5HJjPiUShdDDiDuIv+gayUZsPCX+\nhxBMuuJHdUxiCcCZDa4q93K5ArHIa052xRrXqYP+TlKGU1dVENz8gBYvqEd5mbVk\nJ70K+CiYuuJYFzpZIEF2xIbowGtcIDKz3MdrwyPSLoEgHnx0OCnL8gMVj5hRCyI=\n=OsHf\n-----END PGP SIGNATURE-----\n", "payload": "tree 039d58d1873688b6be331f59b37f006d64eec9ee\nparent d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d\nauthor Dave Cunningham <sparkprime@gmail.com> 1509775867 -0400\ncommitter GitHub <noreply@github.com> 1509775867 -0400\n\nAdd some Jsonnet programs that take a while to execute. (#399)\n\n* Add some Jsonnet programs that take a while to execute."}}, "url": "https://api.github.com/repos/google/jsonnet/commits/74eb5efa5e8838b72489f556f1c289696ea2e67c", "html_url": "https://github.com/google/jsonnet/commit/74eb5efa5e8838b72489f556f1c289696ea2e67c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/74eb5efa5e8838b72489f556f1c289696ea2e67c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d", "url": "https://api.github.com/repos/google/jsonnet/commits/d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d", "html_url": "https://github.com/google/jsonnet/commit/d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d"}]}, {"sha": "d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-04T03:14:16Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-04T04:51:17Z"}, "message": "improve compatability of go stack traces", "tree": {"sha": "ff2393c38ffd7f2d72fc1560162c2313124ebe05", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ff2393c38ffd7f2d72fc1560162c2313124ebe05"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d", "html_url": "https://github.com/google/jsonnet/commit/d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d5c3431f5cc9e6f86be821ea3a8c3181ceda2e1d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93055441975d874bf03e832f4ef8b71bc2eef882", "url": "https://api.github.com/repos/google/jsonnet/commits/93055441975d874bf03e832f4ef8b71bc2eef882", "html_url": "https://github.com/google/jsonnet/commit/93055441975d874bf03e832f4ef8b71bc2eef882"}]}, {"sha": "93055441975d874bf03e832f4ef8b71bc2eef882", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-31T01:53:05Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-04T04:51:17Z"}, "message": "Some UX improvements to commandline tool + cmdline tests", "tree": {"sha": "ee2c2b1957282449007341a56d8821ef263e241b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ee2c2b1957282449007341a56d8821ef263e241b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/93055441975d874bf03e832f4ef8b71bc2eef882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/93055441975d874bf03e832f4ef8b71bc2eef882", "html_url": "https://github.com/google/jsonnet/commit/93055441975d874bf03e832f4ef8b71bc2eef882", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/93055441975d874bf03e832f4ef8b71bc2eef882/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14805f679db844921c17ecd338c71f4f08749fed", "url": "https://api.github.com/repos/google/jsonnet/commits/14805f679db844921c17ecd338c71f4f08749fed", "html_url": "https://github.com/google/jsonnet/commit/14805f679db844921c17ecd338c71f4f08749fed"}]}, {"sha": "14805f679db844921c17ecd338c71f4f08749fed", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-03T01:43:44Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-04T04:51:17Z"}, "message": "Fix git diff not showing anything sometimes", "tree": {"sha": "48bbe8835c08a866fbb8a3192846a0d4b94bee7c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/48bbe8835c08a866fbb8a3192846a0d4b94bee7c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/14805f679db844921c17ecd338c71f4f08749fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/14805f679db844921c17ecd338c71f4f08749fed", "html_url": "https://github.com/google/jsonnet/commit/14805f679db844921c17ecd338c71f4f08749fed", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/14805f679db844921c17ecd338c71f4f08749fed/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c20caa0f627bfee1fc98f02b162e6656c1bc3343", "url": "https://api.github.com/repos/google/jsonnet/commits/c20caa0f627bfee1fc98f02b162e6656c1bc3343", "html_url": "https://github.com/google/jsonnet/commit/c20caa0f627bfee1fc98f02b162e6656c1bc3343"}]}, {"sha": "c20caa0f627bfee1fc98f02b162e6656c1bc3343", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-03T01:45:48Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-11-03T01:47:11Z"}, "message": "Change column in error messages to be half-open [,) for consistency with other compilers", "tree": {"sha": "f6ce97edd30d3cba40e65da925d034f8efa8f737", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f6ce97edd30d3cba40e65da925d034f8efa8f737"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c20caa0f627bfee1fc98f02b162e6656c1bc3343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c20caa0f627bfee1fc98f02b162e6656c1bc3343", "html_url": "https://github.com/google/jsonnet/commit/c20caa0f627bfee1fc98f02b162e6656c1bc3343", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c20caa0f627bfee1fc98f02b162e6656c1bc3343/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4434c8df41c46d4ed11958677a655f0d1c52f87", "url": "https://api.github.com/repos/google/jsonnet/commits/d4434c8df41c46d4ed11958677a655f0d1c52f87", "html_url": "https://github.com/google/jsonnet/commit/d4434c8df41c46d4ed11958677a655f0d1c52f87"}]}, {"sha": "d4434c8df41c46d4ed11958677a655f0d1c52f87", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-31T01:33:29Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-31T06:20:35Z"}, "message": "Fix #386", "tree": {"sha": "ce1146ce39ddce0d4b85fe1e4b6c39866d4fde64", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ce1146ce39ddce0d4b85fe1e4b6c39866d4fde64"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d4434c8df41c46d4ed11958677a655f0d1c52f87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d4434c8df41c46d4ed11958677a655f0d1c52f87", "html_url": "https://github.com/google/jsonnet/commit/d4434c8df41c46d4ed11958677a655f0d1c52f87", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d4434c8df41c46d4ed11958677a655f0d1c52f87/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af2afbd25262a92b4b1bac5ab9c1fb5ab4c7a4b6", "url": "https://api.github.com/repos/google/jsonnet/commits/af2afbd25262a92b4b1bac5ab9c1fb5ab4c7a4b6", "html_url": "https://github.com/google/jsonnet/commit/af2afbd25262a92b4b1bac5ab9c1fb5ab4c7a4b6"}]}, {"sha": "af2afbd25262a92b4b1bac5ab9c1fb5ab4c7a4b6", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-31T02:53:53Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-31T02:55:11Z"}, "message": "Compensate for desugaring in max-stack size", "tree": {"sha": "17c1be43379fe258f2ec7b0d1c1988b4dd8e3686", "url": "https://api.github.com/repos/google/jsonnet/git/trees/17c1be43379fe258f2ec7b0d1c1988b4dd8e3686"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/af2afbd25262a92b4b1bac5ab9c1fb5ab4c7a4b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/af2afbd25262a92b4b1bac5ab9c1fb5ab4c7a4b6", "html_url": "https://github.com/google/jsonnet/commit/af2afbd25262a92b4b1bac5ab9c1fb5ab4c7a4b6", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/af2afbd25262a92b4b1bac5ab9c1fb5ab4c7a4b6/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79577a671a3e1f36d02952bb302897e759f3179f", "url": "https://api.github.com/repos/google/jsonnet/commits/79577a671a3e1f36d02952bb302897e759f3179f", "html_url": "https://github.com/google/jsonnet/commit/79577a671a3e1f36d02952bb302897e759f3179f"}]}, {"sha": "79577a671a3e1f36d02952bb302897e759f3179f", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-29T20:53:39Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-29T23:25:30Z"}, "message": "Run reformatter", "tree": {"sha": "1ef70fec9fad3fd38e3d72e68715c23b34745f0d", "url": "https://api.github.com/repos/google/jsonnet/git/trees/1ef70fec9fad3fd38e3d72e68715c23b34745f0d"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/79577a671a3e1f36d02952bb302897e759f3179f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/79577a671a3e1f36d02952bb302897e759f3179f", "html_url": "https://github.com/google/jsonnet/commit/79577a671a3e1f36d02952bb302897e759f3179f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/79577a671a3e1f36d02952bb302897e759f3179f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "381d7ddded601b54333669003efffff8f3199367", "url": "https://api.github.com/repos/google/jsonnet/commits/381d7ddded601b54333669003efffff8f3199367", "html_url": "https://github.com/google/jsonnet/commit/381d7ddded601b54333669003efffff8f3199367"}]}, {"sha": "381d7ddded601b54333669003efffff8f3199367", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-29T20:33:50Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-29T23:25:30Z"}, "message": "-y and -m now respect -o", "tree": {"sha": "df8bbb0f0ac8f9635c8aae7db1fab59b352caf66", "url": "https://api.github.com/repos/google/jsonnet/git/trees/df8bbb0f0ac8f9635c8aae7db1fab59b352caf66"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/381d7ddded601b54333669003efffff8f3199367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/381d7ddded601b54333669003efffff8f3199367", "html_url": "https://github.com/google/jsonnet/commit/381d7ddded601b54333669003efffff8f3199367", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/381d7ddded601b54333669003efffff8f3199367/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71bed72a16a8713d1f3f2b86b3d54ddff8f8947e", "url": "https://api.github.com/repos/google/jsonnet/commits/71bed72a16a8713d1f3f2b86b3d54ddff8f8947e", "html_url": "https://github.com/google/jsonnet/commit/71bed72a16a8713d1f3f2b86b3d54ddff8f8947e"}]}, {"sha": "71bed72a16a8713d1f3f2b86b3d54ddff8f8947e", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-10-26T21:17:04Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-26T21:17:33Z"}, "message": "Thread commandline parameter through to format pass", "tree": {"sha": "e17bf6879e1e1ce0a604dd49dd5338793b826966", "url": "https://api.github.com/repos/google/jsonnet/git/trees/e17bf6879e1e1ce0a604dd49dd5338793b826966"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/71bed72a16a8713d1f3f2b86b3d54ddff8f8947e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/71bed72a16a8713d1f3f2b86b3d54ddff8f8947e", "html_url": "https://github.com/google/jsonnet/commit/71bed72a16a8713d1f3f2b86b3d54ddff8f8947e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/71bed72a16a8713d1f3f2b86b3d54ddff8f8947e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "715cdcff04410406760d430ce28a519a105f49ab", "url": "https://api.github.com/repos/google/jsonnet/commits/715cdcff04410406760d430ce28a519a105f49ab", "html_url": "https://github.com/google/jsonnet/commit/715cdcff04410406760d430ce28a519a105f49ab"}]}, {"sha": "715cdcff04410406760d430ce28a519a105f49ab", "commit": {"author": {"name": "Dar\u00edo Here\u00f1\u00fa", "email": "magallania@gmail.com", "date": "2017-10-17T01:48:03Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-18T19:21:37Z"}, "message": "Minor fix (proposal)", "tree": {"sha": "3e09ff5cde2501849d7cea0773231eeb138a79a9", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3e09ff5cde2501849d7cea0773231eeb138a79a9"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/715cdcff04410406760d430ce28a519a105f49ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/715cdcff04410406760d430ce28a519a105f49ab", "html_url": "https://github.com/google/jsonnet/commit/715cdcff04410406760d430ce28a519a105f49ab", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/715cdcff04410406760d430ce28a519a105f49ab/comments", "author": {"login": "kant", "id": 32717, "avatar_url": "https://avatars1.githubusercontent.com/u/32717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kant", "html_url": "https://github.com/kant", "followers_url": "https://api.github.com/users/kant/followers", "following_url": "https://api.github.com/users/kant/following{/other_user}", "gists_url": "https://api.github.com/users/kant/gists{/gist_id}", "starred_url": "https://api.github.com/users/kant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kant/subscriptions", "organizations_url": "https://api.github.com/users/kant/orgs", "repos_url": "https://api.github.com/users/kant/repos", "events_url": "https://api.github.com/users/kant/events{/privacy}", "received_events_url": "https://api.github.com/users/kant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a522815957893b375444196343498fc2829c9ceb", "url": "https://api.github.com/repos/google/jsonnet/commits/a522815957893b375444196343498fc2829c9ceb", "html_url": "https://github.com/google/jsonnet/commit/a522815957893b375444196343498fc2829c9ceb"}]}, {"sha": "a522815957893b375444196343498fc2829c9ceb", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-16T16:48:46Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-17T00:43:06Z"}, "message": "Spec now says std.makeArray(0, null) and std.filter(null, []) are errors.", "tree": {"sha": "f932c66d01114364713bb4f6861a2c97d609f280", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f932c66d01114364713bb4f6861a2c97d609f280"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a522815957893b375444196343498fc2829c9ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a522815957893b375444196343498fc2829c9ceb", "html_url": "https://github.com/google/jsonnet/commit/a522815957893b375444196343498fc2829c9ceb", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a522815957893b375444196343498fc2829c9ceb/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e68c0e4b22d22f39407c3f685a947325b29190fd", "url": "https://api.github.com/repos/google/jsonnet/commits/e68c0e4b22d22f39407c3f685a947325b29190fd", "html_url": "https://github.com/google/jsonnet/commit/e68c0e4b22d22f39407c3f685a947325b29190fd"}]}, {"sha": "e68c0e4b22d22f39407c3f685a947325b29190fd", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-14T01:45:07Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-14T04:48:45Z"}, "message": "Fix #377 and also avoid integer overflow for huge indexes", "tree": {"sha": "e203bcf8eccadce7247eb1f75ff5cc3f7f0458d7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/e203bcf8eccadce7247eb1f75ff5cc3f7f0458d7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e68c0e4b22d22f39407c3f685a947325b29190fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e68c0e4b22d22f39407c3f685a947325b29190fd", "html_url": "https://github.com/google/jsonnet/commit/e68c0e4b22d22f39407c3f685a947325b29190fd", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e68c0e4b22d22f39407c3f685a947325b29190fd/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76c486c0c81211149bfb27ccec69e6535c215677", "url": "https://api.github.com/repos/google/jsonnet/commits/76c486c0c81211149bfb27ccec69e6535c215677", "html_url": "https://github.com/google/jsonnet/commit/76c486c0c81211149bfb27ccec69e6535c215677"}]}, {"sha": "76c486c0c81211149bfb27ccec69e6535c215677", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "stanislaw.barzowski@gmail.com", "date": "2017-10-13T19:33:52Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-13T19:33:52Z"}, "message": "Add --sort-imports to help, add --no-sort-imports (#387)", "tree": {"sha": "2118c8cf3f497a5ee30f65bababe5db2a6126c6e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/2118c8cf3f497a5ee30f65bababe5db2a6126c6e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/76c486c0c81211149bfb27ccec69e6535c215677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/76c486c0c81211149bfb27ccec69e6535c215677", "html_url": "https://github.com/google/jsonnet/commit/76c486c0c81211149bfb27ccec69e6535c215677", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/76c486c0c81211149bfb27ccec69e6535c215677/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b18966a5aa6cdf46067c53b6c97fabce67d4c0aa", "url": "https://api.github.com/repos/google/jsonnet/commits/b18966a5aa6cdf46067c53b6c97fabce67d4c0aa", "html_url": "https://github.com/google/jsonnet/commit/b18966a5aa6cdf46067c53b6c97fabce67d4c0aa"}]}, {"sha": "b18966a5aa6cdf46067c53b6c97fabce67d4c0aa", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-10-13T15:14:00Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-10-13T15:14:00Z"}, "message": "Fix reformatter unparsing - $.f as -$.f", "tree": {"sha": "aae4083c6a7c2ff07e2fd9278c419225590656db", "url": "https://api.github.com/repos/google/jsonnet/git/trees/aae4083c6a7c2ff07e2fd9278c419225590656db"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/b18966a5aa6cdf46067c53b6c97fabce67d4c0aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/b18966a5aa6cdf46067c53b6c97fabce67d4c0aa", "html_url": "https://github.com/google/jsonnet/commit/b18966a5aa6cdf46067c53b6c97fabce67d4c0aa", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/b18966a5aa6cdf46067c53b6c97fabce67d4c0aa/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30f4739543c662498fdd2f510ad8bf51b0ba1f24", "url": "https://api.github.com/repos/google/jsonnet/commits/30f4739543c662498fdd2f510ad8bf51b0ba1f24", "html_url": "https://github.com/google/jsonnet/commit/30f4739543c662498fdd2f510ad8bf51b0ba1f24"}]}, {"sha": "30f4739543c662498fdd2f510ad8bf51b0ba1f24", "commit": {"author": {"name": "Spencer Stephens", "email": "spencer.leo.stephens@gmail.com", "date": "2017-10-11T20:09:13Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-11T20:09:13Z"}, "message": "CMake build and test. (#303)\n\n* CMake build and test.\r\n\r\nNot supported yet:\r\n* Windows\r\n* Emscripten\r\n* Compilers other than GCC and Clang.\r\n\r\n* Fixed CMake issue where GLOBAL_OUTPUT_PATH was a bool.\r\n\r\n* Added CMake build and test to Travis.\r\n\r\n* Ignore .DS_Store\r\n\r\n* Use CMake 2.8.7 as the minimum version.\r\n\r\nTravis does not support CMake 3.0.\r\n\r\n* Fix googletest. CMake stdlib build.\r\n\r\n* Download googletest at CMake generation time. This makes linking\r\nsimpler and should fix the Linux Travis build.\r\n\r\n* Build the jsonnet standard library header (std.jsonnet.h) via CMake.\r\nDoing this in a cross-platform fashion required a small C++ utility to\r\ngenerate the code.\r\n\r\n* Added header files to targets.\r\n\r\nCMake will compile targets without header files listed as files, but it won't recompile when changes are made unless the files are listed as dependencies.\r\n\r\n* Added regression test CMake target.\r\n\r\n* Fix cmake build errors.\r\n\r\n* Add some documentation to the CMake scripts.", "tree": {"sha": "0c5e826c7fa184dee89fa63f4bc656744cd81311", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0c5e826c7fa184dee89fa63f4bc656744cd81311"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/30f4739543c662498fdd2f510ad8bf51b0ba1f24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/30f4739543c662498fdd2f510ad8bf51b0ba1f24", "html_url": "https://github.com/google/jsonnet/commit/30f4739543c662498fdd2f510ad8bf51b0ba1f24", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/30f4739543c662498fdd2f510ad8bf51b0ba1f24/comments", "author": {"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb50389f1b5880eb4e58dcfe6779527db07ac1bb", "url": "https://api.github.com/repos/google/jsonnet/commits/cb50389f1b5880eb4e58dcfe6779527db07ac1bb", "html_url": "https://github.com/google/jsonnet/commit/cb50389f1b5880eb4e58dcfe6779527db07ac1bb"}]}, {"sha": "cb50389f1b5880eb4e58dcfe6779527db07ac1bb", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-10-03T18:52:46Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-10-05T21:43:53Z"}, "message": "Fix tests failing, but passing on Travis\n\nWe've shown the error message, but the exit code was still 0", "tree": {"sha": "45bc3cb444710694c4539dd9a0b64e53106d0427", "url": "https://api.github.com/repos/google/jsonnet/git/trees/45bc3cb444710694c4539dd9a0b64e53106d0427"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/cb50389f1b5880eb4e58dcfe6779527db07ac1bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/cb50389f1b5880eb4e58dcfe6779527db07ac1bb", "html_url": "https://github.com/google/jsonnet/commit/cb50389f1b5880eb4e58dcfe6779527db07ac1bb", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/cb50389f1b5880eb4e58dcfe6779527db07ac1bb/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b7f64c136156ca67371be6089d2b89d5f0dab9e", "url": "https://api.github.com/repos/google/jsonnet/commits/6b7f64c136156ca67371be6089d2b89d5f0dab9e", "html_url": "https://github.com/google/jsonnet/commit/6b7f64c136156ca67371be6089d2b89d5f0dab9e"}]}, {"sha": "6b7f64c136156ca67371be6089d2b89d5f0dab9e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-30T07:43:05Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-30T07:43:05Z"}, "message": "Bump version to v0.9.5", "tree": {"sha": "3df21eeac336cd134004bb593bbfda9effa95d23", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3df21eeac336cd134004bb593bbfda9effa95d23"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/6b7f64c136156ca67371be6089d2b89d5f0dab9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/6b7f64c136156ca67371be6089d2b89d5f0dab9e", "html_url": "https://github.com/google/jsonnet/commit/6b7f64c136156ca67371be6089d2b89d5f0dab9e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/6b7f64c136156ca67371be6089d2b89d5f0dab9e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04cf4fd00fdd75a22af195439bbf9cd4e2318ec7", "url": "https://api.github.com/repos/google/jsonnet/commits/04cf4fd00fdd75a22af195439bbf9cd4e2318ec7", "html_url": "https://github.com/google/jsonnet/commit/04cf4fd00fdd75a22af195439bbf9cd4e2318ec7"}]}, {"sha": "04cf4fd00fdd75a22af195439bbf9cd4e2318ec7", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-30T06:56:55Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-30T06:56:55Z"}, "message": "Bump version of rules_jsonnet.git to avoid depset warning", "tree": {"sha": "a56c3e5c458b0e2a4f8ecc1ab2c2ec6475f31990", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a56c3e5c458b0e2a4f8ecc1ab2c2ec6475f31990"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/04cf4fd00fdd75a22af195439bbf9cd4e2318ec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/04cf4fd00fdd75a22af195439bbf9cd4e2318ec7", "html_url": "https://github.com/google/jsonnet/commit/04cf4fd00fdd75a22af195439bbf9cd4e2318ec7", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/04cf4fd00fdd75a22af195439bbf9cd4e2318ec7/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f88a5c45455767255a1852473b66cedf5226492", "url": "https://api.github.com/repos/google/jsonnet/commits/3f88a5c45455767255a1852473b66cedf5226492", "html_url": "https://github.com/google/jsonnet/commit/3f88a5c45455767255a1852473b66cedf5226492"}]}, {"sha": "3f88a5c45455767255a1852473b66cedf5226492", "commit": {"author": {"name": "Alex Helfet", "email": "alex.helfet@gmail.com", "date": "2017-09-22T17:15:31Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-22T17:38:19Z"}, "message": "Added importstr to the tutorial.", "tree": {"sha": "64cf798d921e7d62cef23acb0671a514066c76df", "url": "https://api.github.com/repos/google/jsonnet/git/trees/64cf798d921e7d62cef23acb0671a514066c76df"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/3f88a5c45455767255a1852473b66cedf5226492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/3f88a5c45455767255a1852473b66cedf5226492", "html_url": "https://github.com/google/jsonnet/commit/3f88a5c45455767255a1852473b66cedf5226492", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/3f88a5c45455767255a1852473b66cedf5226492/comments", "author": null, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3210d6c0b2947596bcd955dbec247b466cdd5661", "url": "https://api.github.com/repos/google/jsonnet/commits/3210d6c0b2947596bcd955dbec247b466cdd5661", "html_url": "https://github.com/google/jsonnet/commit/3210d6c0b2947596bcd955dbec247b466cdd5661"}]}, {"sha": "3210d6c0b2947596bcd955dbec247b466cdd5661", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-21T18:54:32Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-22T00:40:13Z"}, "message": "Fix clang range error in Python test", "tree": {"sha": "4f483f8fbfd726b92e78b4e7827cbf1619d7c50e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4f483f8fbfd726b92e78b4e7827cbf1619d7c50e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/3210d6c0b2947596bcd955dbec247b466cdd5661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/3210d6c0b2947596bcd955dbec247b466cdd5661", "html_url": "https://github.com/google/jsonnet/commit/3210d6c0b2947596bcd955dbec247b466cdd5661", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/3210d6c0b2947596bcd955dbec247b466cdd5661/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a422d1dae898f7c7d8d7c2f36134519ac962a2bd", "url": "https://api.github.com/repos/google/jsonnet/commits/a422d1dae898f7c7d8d7c2f36134519ac962a2bd", "html_url": "https://github.com/google/jsonnet/commit/a422d1dae898f7c7d8d7c2f36134519ac962a2bd"}]}, {"sha": "a422d1dae898f7c7d8d7c2f36134519ac962a2bd", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-21T19:25:07Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-22T00:37:59Z"}, "message": "Add some import error checking tests", "tree": {"sha": "d2dcea1c05f567b2da532ddd135b5f8c22434647", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d2dcea1c05f567b2da532ddd135b5f8c22434647"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a422d1dae898f7c7d8d7c2f36134519ac962a2bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a422d1dae898f7c7d8d7c2f36134519ac962a2bd", "html_url": "https://github.com/google/jsonnet/commit/a422d1dae898f7c7d8d7c2f36134519ac962a2bd", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a422d1dae898f7c7d8d7c2f36134519ac962a2bd/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce800d45286f1ecec79c422365b12587cd774d5b", "url": "https://api.github.com/repos/google/jsonnet/commits/ce800d45286f1ecec79c422365b12587cd774d5b", "html_url": "https://github.com/google/jsonnet/commit/ce800d45286f1ecec79c422365b12587cd774d5b"}]}, {"sha": "ce800d45286f1ecec79c422365b12587cd774d5b", "commit": {"author": {"name": "Misha Brukman", "email": "mbrukman@google.com", "date": "2017-09-16T19:58:32Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-20T03:01:29Z"}, "message": "Add instructions for building with Bazel + Clang.", "tree": {"sha": "bbc66bebff674fec3940300ac472a9920246310b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/bbc66bebff674fec3940300ac472a9920246310b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ce800d45286f1ecec79c422365b12587cd774d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ce800d45286f1ecec79c422365b12587cd774d5b", "html_url": "https://github.com/google/jsonnet/commit/ce800d45286f1ecec79c422365b12587cd774d5b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ce800d45286f1ecec79c422365b12587cd774d5b/comments", "author": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cc576e7a9e762af0ca369c6331912a2f6668bec", "url": "https://api.github.com/repos/google/jsonnet/commits/7cc576e7a9e762af0ca369c6331912a2f6668bec", "html_url": "https://github.com/google/jsonnet/commit/7cc576e7a9e762af0ca369c6331912a2f6668bec"}]}, {"sha": "7cc576e7a9e762af0ca369c6331912a2f6668bec", "commit": {"author": {"name": "Misha Brukman", "email": "mbrukman@google.com", "date": "2017-09-16T17:44:33Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-20T03:01:29Z"}, "message": "Add instructions for building with Make + Clang.", "tree": {"sha": "130d920353df371d880ea64379a4f0e694e91c39", "url": "https://api.github.com/repos/google/jsonnet/git/trees/130d920353df371d880ea64379a4f0e694e91c39"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7cc576e7a9e762af0ca369c6331912a2f6668bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7cc576e7a9e762af0ca369c6331912a2f6668bec", "html_url": "https://github.com/google/jsonnet/commit/7cc576e7a9e762af0ca369c6331912a2f6668bec", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7cc576e7a9e762af0ca369c6331912a2f6668bec/comments", "author": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea0255a4a3cacc1a2b00742b1a7e38618d431145", "url": "https://api.github.com/repos/google/jsonnet/commits/ea0255a4a3cacc1a2b00742b1a7e38618d431145", "html_url": "https://github.com/google/jsonnet/commit/ea0255a4a3cacc1a2b00742b1a7e38618d431145"}]}, {"sha": "ea0255a4a3cacc1a2b00742b1a7e38618d431145", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "stanislaw.barzowski@gmail.com", "date": "2017-09-20T03:00:36Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-20T03:00:36Z"}, "message": "Fix swapped indexes in spec (object-inherit) (#367)\n\n* Fix swapped indexes and apostrophes in spec (object-inherit)", "tree": {"sha": "21358055abee303c1f6c51478146e2ea315a63b2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/21358055abee303c1f6c51478146e2ea315a63b2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ea0255a4a3cacc1a2b00742b1a7e38618d431145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ea0255a4a3cacc1a2b00742b1a7e38618d431145", "html_url": "https://github.com/google/jsonnet/commit/ea0255a4a3cacc1a2b00742b1a7e38618d431145", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ea0255a4a3cacc1a2b00742b1a7e38618d431145/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aa90e27d8ff698410dee33a0eeca94b5b58854b", "url": "https://api.github.com/repos/google/jsonnet/commits/9aa90e27d8ff698410dee33a0eeca94b5b58854b", "html_url": "https://github.com/google/jsonnet/commit/9aa90e27d8ff698410dee33a0eeca94b5b58854b"}]}, {"sha": "9aa90e27d8ff698410dee33a0eeca94b5b58854b", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-09-13T15:02:56Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-14T00:19:15Z"}, "message": "Consistently use name \"number\" rather than \"double\"\n\nIn jsonnet there is a single number type which is\nin fact IEEE 754 double. We refer to it as \"number\"\nwhen using `std.type` and in specification. However\nin error messages and in our code it was still called double.\nThis change fixes this inconsistency by changing all occurances\nto \"number\".", "tree": {"sha": "1b18c2b0a35b5460ff819b959b7471ced81a0e7c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/1b18c2b0a35b5460ff819b959b7471ced81a0e7c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9aa90e27d8ff698410dee33a0eeca94b5b58854b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9aa90e27d8ff698410dee33a0eeca94b5b58854b", "html_url": "https://github.com/google/jsonnet/commit/9aa90e27d8ff698410dee33a0eeca94b5b58854b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9aa90e27d8ff698410dee33a0eeca94b5b58854b/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9de34579029b512be14abe01514c73041b9443e", "url": "https://api.github.com/repos/google/jsonnet/commits/b9de34579029b512be14abe01514c73041b9443e", "html_url": "https://github.com/google/jsonnet/commit/b9de34579029b512be14abe01514c73041b9443e"}]}, {"sha": "b9de34579029b512be14abe01514c73041b9443e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-09-07T15:55:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-07T15:55:20Z"}, "message": "Merge pull request #357 from sbarzowski/spelling\n\nUse a more common spelling: Pre-Procesor -> preprocessor", "tree": {"sha": "415f6ef33213d59373c82d11fccbdc1e4ba1c7a3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/415f6ef33213d59373c82d11fccbdc1e4ba1c7a3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/b9de34579029b512be14abe01514c73041b9443e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/b9de34579029b512be14abe01514c73041b9443e", "html_url": "https://github.com/google/jsonnet/commit/b9de34579029b512be14abe01514c73041b9443e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/b9de34579029b512be14abe01514c73041b9443e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11cf9fa9f2fe8acbb14b096316006082564ca580", "url": "https://api.github.com/repos/google/jsonnet/commits/11cf9fa9f2fe8acbb14b096316006082564ca580", "html_url": "https://github.com/google/jsonnet/commit/11cf9fa9f2fe8acbb14b096316006082564ca580"}, {"sha": "71912dc005991a6f408d18c607ff5b94f5a758eb", "url": "https://api.github.com/repos/google/jsonnet/commits/71912dc005991a6f408d18c607ff5b94f5a758eb", "html_url": "https://github.com/google/jsonnet/commit/71912dc005991a6f408d18c607ff5b94f5a758eb"}]}, {"sha": "71912dc005991a6f408d18c607ff5b94f5a758eb", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-09-06T19:14:08Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-09-06T19:14:08Z"}, "message": "Use a more common spelling: Pre-Procesor -> preprocessor", "tree": {"sha": "1465e8c9fa19e11233f1e6300fe02424cd04c702", "url": "https://api.github.com/repos/google/jsonnet/git/trees/1465e8c9fa19e11233f1e6300fe02424cd04c702"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/71912dc005991a6f408d18c607ff5b94f5a758eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/71912dc005991a6f408d18c607ff5b94f5a758eb", "html_url": "https://github.com/google/jsonnet/commit/71912dc005991a6f408d18c607ff5b94f5a758eb", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/71912dc005991a6f408d18c607ff5b94f5a758eb/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2000e6855b879954bb45bd10fb10a68572259ca", "url": "https://api.github.com/repos/google/jsonnet/commits/c2000e6855b879954bb45bd10fb10a68572259ca", "html_url": "https://github.com/google/jsonnet/commit/c2000e6855b879954bb45bd10fb10a68572259ca"}]}, {"sha": "11cf9fa9f2fe8acbb14b096316006082564ca580", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-23T03:28:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-23T03:28:38Z"}, "message": "Merge pull request #344 from andreadps/feature/vs2017-support\n\nSupport Visual Studio 2017", "tree": {"sha": "f2dc31a67a32b07591cb696814aa156f12be0672", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f2dc31a67a32b07591cb696814aa156f12be0672"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/11cf9fa9f2fe8acbb14b096316006082564ca580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/11cf9fa9f2fe8acbb14b096316006082564ca580", "html_url": "https://github.com/google/jsonnet/commit/11cf9fa9f2fe8acbb14b096316006082564ca580", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/11cf9fa9f2fe8acbb14b096316006082564ca580/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b240be4c02eafeb068b07eb979d45f1777cbbd24", "url": "https://api.github.com/repos/google/jsonnet/commits/b240be4c02eafeb068b07eb979d45f1777cbbd24", "html_url": "https://github.com/google/jsonnet/commit/b240be4c02eafeb068b07eb979d45f1777cbbd24"}, {"sha": "116cb2196b8b67460429c9734b784363ee2a663d", "url": "https://api.github.com/repos/google/jsonnet/commits/116cb2196b8b67460429c9734b784363ee2a663d", "html_url": "https://github.com/google/jsonnet/commit/116cb2196b8b67460429c9734b784363ee2a663d"}]}, {"sha": "b240be4c02eafeb068b07eb979d45f1777cbbd24", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-23T03:12:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-23T03:12:35Z"}, "message": "Merge pull request #346 from sparkprime/fix_default_lib_path\n\nFix default -J to use a jsonnet-prefixed path in usr and usr/local", "tree": {"sha": "4681d2f5fb84d05ad2e8a2e0b31ef2b68d873341", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4681d2f5fb84d05ad2e8a2e0b31ef2b68d873341"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/b240be4c02eafeb068b07eb979d45f1777cbbd24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/b240be4c02eafeb068b07eb979d45f1777cbbd24", "html_url": "https://github.com/google/jsonnet/commit/b240be4c02eafeb068b07eb979d45f1777cbbd24", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/b240be4c02eafeb068b07eb979d45f1777cbbd24/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9265a9cdcc86007b069b86875114910908d120b6", "url": "https://api.github.com/repos/google/jsonnet/commits/9265a9cdcc86007b069b86875114910908d120b6", "html_url": "https://github.com/google/jsonnet/commit/9265a9cdcc86007b069b86875114910908d120b6"}, {"sha": "d1228de0110a25c7ba443bbcc276804bcc2e63b8", "url": "https://api.github.com/repos/google/jsonnet/commits/d1228de0110a25c7ba443bbcc276804bcc2e63b8", "html_url": "https://github.com/google/jsonnet/commit/d1228de0110a25c7ba443bbcc276804bcc2e63b8"}]}, {"sha": "d1228de0110a25c7ba443bbcc276804bcc2e63b8", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-23T01:53:04Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-23T01:53:38Z"}, "message": "Fix default -J to use a jsonnet-prefixed path in usr and usr/local", "tree": {"sha": "ec198368698da92b77fb0eb338e18bbd75142144", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ec198368698da92b77fb0eb338e18bbd75142144"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d1228de0110a25c7ba443bbcc276804bcc2e63b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d1228de0110a25c7ba443bbcc276804bcc2e63b8", "html_url": "https://github.com/google/jsonnet/commit/d1228de0110a25c7ba443bbcc276804bcc2e63b8", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d1228de0110a25c7ba443bbcc276804bcc2e63b8/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a2a781395a51e42e28da6d351555b9b5aa3810d", "url": "https://api.github.com/repos/google/jsonnet/commits/4a2a781395a51e42e28da6d351555b9b5aa3810d", "html_url": "https://github.com/google/jsonnet/commit/4a2a781395a51e42e28da6d351555b9b5aa3810d"}]}, {"sha": "116cb2196b8b67460429c9734b784363ee2a663d", "commit": {"author": {"name": "Andre Abrantes", "email": "andreadps@gmail.com", "date": "2017-08-22T20:37:47Z"}, "committer": {"name": "Andre Abrantes", "email": "andreadps@gmail.com", "date": "2017-08-22T20:37:47Z"}, "message": "adding a VS2017 solution and adapting JsonnetJsonValue to be compatible with its compiler", "tree": {"sha": "4cb67da43e1ba22cc01f3055fb0eea5378a160f0", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4cb67da43e1ba22cc01f3055fb0eea5378a160f0"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/116cb2196b8b67460429c9734b784363ee2a663d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/116cb2196b8b67460429c9734b784363ee2a663d", "html_url": "https://github.com/google/jsonnet/commit/116cb2196b8b67460429c9734b784363ee2a663d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/116cb2196b8b67460429c9734b784363ee2a663d/comments", "author": {"login": "andreadps", "id": 6360059, "avatar_url": "https://avatars3.githubusercontent.com/u/6360059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreadps", "html_url": "https://github.com/andreadps", "followers_url": "https://api.github.com/users/andreadps/followers", "following_url": "https://api.github.com/users/andreadps/following{/other_user}", "gists_url": "https://api.github.com/users/andreadps/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreadps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreadps/subscriptions", "organizations_url": "https://api.github.com/users/andreadps/orgs", "repos_url": "https://api.github.com/users/andreadps/repos", "events_url": "https://api.github.com/users/andreadps/events{/privacy}", "received_events_url": "https://api.github.com/users/andreadps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andreadps", "id": 6360059, "avatar_url": "https://avatars3.githubusercontent.com/u/6360059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreadps", "html_url": "https://github.com/andreadps", "followers_url": "https://api.github.com/users/andreadps/followers", "following_url": "https://api.github.com/users/andreadps/following{/other_user}", "gists_url": "https://api.github.com/users/andreadps/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreadps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreadps/subscriptions", "organizations_url": "https://api.github.com/users/andreadps/orgs", "repos_url": "https://api.github.com/users/andreadps/repos", "events_url": "https://api.github.com/users/andreadps/events{/privacy}", "received_events_url": "https://api.github.com/users/andreadps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9265a9cdcc86007b069b86875114910908d120b6", "url": "https://api.github.com/repos/google/jsonnet/commits/9265a9cdcc86007b069b86875114910908d120b6", "html_url": "https://github.com/google/jsonnet/commit/9265a9cdcc86007b069b86875114910908d120b6"}]}, {"sha": "9265a9cdcc86007b069b86875114910908d120b6", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-15T18:00:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-15T18:00:56Z"}, "message": "Merge pull request #342 from sparkprime/fix_import_desugar\n\nFix #172", "tree": {"sha": "d7ae12bed2a24e37d8405f48aa67396da5c33d00", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d7ae12bed2a24e37d8405f48aa67396da5c33d00"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9265a9cdcc86007b069b86875114910908d120b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9265a9cdcc86007b069b86875114910908d120b6", "html_url": "https://github.com/google/jsonnet/commit/9265a9cdcc86007b069b86875114910908d120b6", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9265a9cdcc86007b069b86875114910908d120b6/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c32e1bab867a15c83515474c16ea6001827c69c9", "url": "https://api.github.com/repos/google/jsonnet/commits/c32e1bab867a15c83515474c16ea6001827c69c9", "html_url": "https://github.com/google/jsonnet/commit/c32e1bab867a15c83515474c16ea6001827c69c9"}, {"sha": "dc7798e661b82dc47aaf10325351784986a17a01", "url": "https://api.github.com/repos/google/jsonnet/commits/dc7798e661b82dc47aaf10325351784986a17a01", "html_url": "https://github.com/google/jsonnet/commit/dc7798e661b82dc47aaf10325351784986a17a01"}]}, {"sha": "dc7798e661b82dc47aaf10325351784986a17a01", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-15T17:00:26Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-15T17:16:46Z"}, "message": "Test scripts output the names of the test suite with pass/fail status", "tree": {"sha": "894839bffc88abda2544fdffab7ed2c7bf76a70f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/894839bffc88abda2544fdffab7ed2c7bf76a70f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/dc7798e661b82dc47aaf10325351784986a17a01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/dc7798e661b82dc47aaf10325351784986a17a01", "html_url": "https://github.com/google/jsonnet/commit/dc7798e661b82dc47aaf10325351784986a17a01", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/dc7798e661b82dc47aaf10325351784986a17a01/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "294b8a37a95f932090401eb769887d8254de88dc", "url": "https://api.github.com/repos/google/jsonnet/commits/294b8a37a95f932090401eb769887d8254de88dc", "html_url": "https://github.com/google/jsonnet/commit/294b8a37a95f932090401eb769887d8254de88dc"}]}, {"sha": "c32e1bab867a15c83515474c16ea6001827c69c9", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-15T17:15:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-15T17:15:42Z"}, "message": "Merge pull request #339 from sbarzowski/master\n\nMake comment more accurate", "tree": {"sha": "78a145a497bc66460a6b4a5416f2ad7cd0ec3057", "url": "https://api.github.com/repos/google/jsonnet/git/trees/78a145a497bc66460a6b4a5416f2ad7cd0ec3057"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c32e1bab867a15c83515474c16ea6001827c69c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c32e1bab867a15c83515474c16ea6001827c69c9", "html_url": "https://github.com/google/jsonnet/commit/c32e1bab867a15c83515474c16ea6001827c69c9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c32e1bab867a15c83515474c16ea6001827c69c9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96fe73f64ed57245ee8f8a3cc6eda1f235bf006c", "url": "https://api.github.com/repos/google/jsonnet/commits/96fe73f64ed57245ee8f8a3cc6eda1f235bf006c", "html_url": "https://github.com/google/jsonnet/commit/96fe73f64ed57245ee8f8a3cc6eda1f235bf006c"}, {"sha": "c2000e6855b879954bb45bd10fb10a68572259ca", "url": "https://api.github.com/repos/google/jsonnet/commits/c2000e6855b879954bb45bd10fb10a68572259ca", "html_url": "https://github.com/google/jsonnet/commit/c2000e6855b879954bb45bd10fb10a68572259ca"}]}, {"sha": "294b8a37a95f932090401eb769887d8254de88dc", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-08-14T20:12:04Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-15T17:00:38Z"}, "message": "Fix #172 by desugaring Import filenames.", "tree": {"sha": "89b0ad436a582ca57e9289bff0a3305f84d65660", "url": "https://api.github.com/repos/google/jsonnet/git/trees/89b0ad436a582ca57e9289bff0a3305f84d65660"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/294b8a37a95f932090401eb769887d8254de88dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/294b8a37a95f932090401eb769887d8254de88dc", "html_url": "https://github.com/google/jsonnet/commit/294b8a37a95f932090401eb769887d8254de88dc", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/294b8a37a95f932090401eb769887d8254de88dc/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a2a781395a51e42e28da6d351555b9b5aa3810d", "url": "https://api.github.com/repos/google/jsonnet/commits/4a2a781395a51e42e28da6d351555b9b5aa3810d", "html_url": "https://github.com/google/jsonnet/commit/4a2a781395a51e42e28da6d351555b9b5aa3810d"}]}, {"sha": "96fe73f64ed57245ee8f8a3cc6eda1f235bf006c", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-14T19:00:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-14T19:00:48Z"}, "message": "Merge pull request #341 from sparkprime/fix_spec\n\nSpec no-longer allows { f() +: e }", "tree": {"sha": "0d116b146d380960ad4e515c477b9bdbb6690bd3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0d116b146d380960ad4e515c477b9bdbb6690bd3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/96fe73f64ed57245ee8f8a3cc6eda1f235bf006c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/96fe73f64ed57245ee8f8a3cc6eda1f235bf006c", "html_url": "https://github.com/google/jsonnet/commit/96fe73f64ed57245ee8f8a3cc6eda1f235bf006c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/96fe73f64ed57245ee8f8a3cc6eda1f235bf006c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a2a781395a51e42e28da6d351555b9b5aa3810d", "url": "https://api.github.com/repos/google/jsonnet/commits/4a2a781395a51e42e28da6d351555b9b5aa3810d", "html_url": "https://github.com/google/jsonnet/commit/4a2a781395a51e42e28da6d351555b9b5aa3810d"}, {"sha": "1a5dcac3e4d4c71a4564762f2d58c92840733b91", "url": "https://api.github.com/repos/google/jsonnet/commits/1a5dcac3e4d4c71a4564762f2d58c92840733b91", "html_url": "https://github.com/google/jsonnet/commit/1a5dcac3e4d4c71a4564762f2d58c92840733b91"}]}, {"sha": "1a5dcac3e4d4c71a4564762f2d58c92840733b91", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-08-14T18:19:55Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-08-14T18:19:55Z"}, "message": "Spec no-longer allows { f() +: e }", "tree": {"sha": "0d116b146d380960ad4e515c477b9bdbb6690bd3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0d116b146d380960ad4e515c477b9bdbb6690bd3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1a5dcac3e4d4c71a4564762f2d58c92840733b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1a5dcac3e4d4c71a4564762f2d58c92840733b91", "html_url": "https://github.com/google/jsonnet/commit/1a5dcac3e4d4c71a4564762f2d58c92840733b91", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1a5dcac3e4d4c71a4564762f2d58c92840733b91/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a2a781395a51e42e28da6d351555b9b5aa3810d", "url": "https://api.github.com/repos/google/jsonnet/commits/4a2a781395a51e42e28da6d351555b9b5aa3810d", "html_url": "https://github.com/google/jsonnet/commit/4a2a781395a51e42e28da6d351555b9b5aa3810d"}]}, {"sha": "4a2a781395a51e42e28da6d351555b9b5aa3810d", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-14T18:08:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-14T18:08:39Z"}, "message": "Merge pull request #340 from sparkprime/fix_verbatim_strings\n\nFix handling of verbatim strings as object fields", "tree": {"sha": "7960925cba7073271b599b9a80ba4ff53ccd33a8", "url": "https://api.github.com/repos/google/jsonnet/git/trees/7960925cba7073271b599b9a80ba4ff53ccd33a8"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4a2a781395a51e42e28da6d351555b9b5aa3810d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4a2a781395a51e42e28da6d351555b9b5aa3810d", "html_url": "https://github.com/google/jsonnet/commit/4a2a781395a51e42e28da6d351555b9b5aa3810d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4a2a781395a51e42e28da6d351555b9b5aa3810d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "url": "https://api.github.com/repos/google/jsonnet/commits/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "html_url": "https://github.com/google/jsonnet/commit/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2"}, {"sha": "411afd75a7a386a7621475a45ddfb44b95f6d49a", "url": "https://api.github.com/repos/google/jsonnet/commits/411afd75a7a386a7621475a45ddfb44b95f6d49a", "html_url": "https://github.com/google/jsonnet/commit/411afd75a7a386a7621475a45ddfb44b95f6d49a"}]}, {"sha": "411afd75a7a386a7621475a45ddfb44b95f6d49a", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-14T16:58:22Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-14T16:58:22Z"}, "message": "Fix handling of verbatim strings as object fields", "tree": {"sha": "7960925cba7073271b599b9a80ba4ff53ccd33a8", "url": "https://api.github.com/repos/google/jsonnet/git/trees/7960925cba7073271b599b9a80ba4ff53ccd33a8"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/411afd75a7a386a7621475a45ddfb44b95f6d49a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/411afd75a7a386a7621475a45ddfb44b95f6d49a", "html_url": "https://github.com/google/jsonnet/commit/411afd75a7a386a7621475a45ddfb44b95f6d49a", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/411afd75a7a386a7621475a45ddfb44b95f6d49a/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "url": "https://api.github.com/repos/google/jsonnet/commits/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "html_url": "https://github.com/google/jsonnet/commit/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2"}]}, {"sha": "c2000e6855b879954bb45bd10fb10a68572259ca", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-10T22:25:10Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-10T22:25:10Z"}, "message": "Make comment more accurate", "tree": {"sha": "355d1af604e676eebea3734304c45fddda48aa8f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/355d1af604e676eebea3734304c45fddda48aa8f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c2000e6855b879954bb45bd10fb10a68572259ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c2000e6855b879954bb45bd10fb10a68572259ca", "html_url": "https://github.com/google/jsonnet/commit/c2000e6855b879954bb45bd10fb10a68572259ca", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c2000e6855b879954bb45bd10fb10a68572259ca/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "url": "https://api.github.com/repos/google/jsonnet/commits/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "html_url": "https://github.com/google/jsonnet/commit/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2"}]}, {"sha": "51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-08T22:40:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-08T22:40:33Z"}, "message": "Merge pull request #335 from benley/python-3\n\nPython 3 compatibility", "tree": {"sha": "ae9167d8e8d7cd2c41da6be5c27fef283e37a1e6", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ae9167d8e8d7cd2c41da6be5c27fef283e37a1e6"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "html_url": "https://github.com/google/jsonnet/commit/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/51d657dd0aff4e90cb8a3fb8fa5c4fe12c89b1f2/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d59af3d12508b6e14cbce89e622b6536ec0b459", "url": "https://api.github.com/repos/google/jsonnet/commits/8d59af3d12508b6e14cbce89e622b6536ec0b459", "html_url": "https://github.com/google/jsonnet/commit/8d59af3d12508b6e14cbce89e622b6536ec0b459"}, {"sha": "2176ba2da03d05f89337d257d2f254bae56f0bed", "url": "https://api.github.com/repos/google/jsonnet/commits/2176ba2da03d05f89337d257d2f254bae56f0bed", "html_url": "https://github.com/google/jsonnet/commit/2176ba2da03d05f89337d257d2f254bae56f0bed"}]}, {"sha": "8d59af3d12508b6e14cbce89e622b6536ec0b459", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-08T19:02:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-08T19:02:15Z"}, "message": "Merge pull request #338 from sbarzowski/specfix\n\nAdd missing argument to the slice spec", "tree": {"sha": "11cfc39dd73204393d63dd7c4e66b0222917d208", "url": "https://api.github.com/repos/google/jsonnet/git/trees/11cfc39dd73204393d63dd7c4e66b0222917d208"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8d59af3d12508b6e14cbce89e622b6536ec0b459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8d59af3d12508b6e14cbce89e622b6536ec0b459", "html_url": "https://github.com/google/jsonnet/commit/8d59af3d12508b6e14cbce89e622b6536ec0b459", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8d59af3d12508b6e14cbce89e622b6536ec0b459/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09f8edf0c7b63c6f729e27a42a6cd0f756ee94ce", "url": "https://api.github.com/repos/google/jsonnet/commits/09f8edf0c7b63c6f729e27a42a6cd0f756ee94ce", "html_url": "https://github.com/google/jsonnet/commit/09f8edf0c7b63c6f729e27a42a6cd0f756ee94ce"}, {"sha": "820f619f74a5adc0045ba3b420bed808c6184f25", "url": "https://api.github.com/repos/google/jsonnet/commits/820f619f74a5adc0045ba3b420bed808c6184f25", "html_url": "https://github.com/google/jsonnet/commit/820f619f74a5adc0045ba3b420bed808c6184f25"}]}, {"sha": "09f8edf0c7b63c6f729e27a42a6cd0f756ee94ce", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-08T18:17:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-08T18:17:11Z"}, "message": "Merge pull request #337 from sbarzowski/tests_external\n\nAn option to disable error tests", "tree": {"sha": "ca3d5fd8e7be90aeb3ed3e3c7ed783c65ee3b5e7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ca3d5fd8e7be90aeb3ed3e3c7ed783c65ee3b5e7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/09f8edf0c7b63c6f729e27a42a6cd0f756ee94ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/09f8edf0c7b63c6f729e27a42a6cd0f756ee94ce", "html_url": "https://github.com/google/jsonnet/commit/09f8edf0c7b63c6f729e27a42a6cd0f756ee94ce", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/09f8edf0c7b63c6f729e27a42a6cd0f756ee94ce/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93476c27a03cac3841fafc597cf124cc55035079", "url": "https://api.github.com/repos/google/jsonnet/commits/93476c27a03cac3841fafc597cf124cc55035079", "html_url": "https://github.com/google/jsonnet/commit/93476c27a03cac3841fafc597cf124cc55035079"}, {"sha": "bc80c8384bec16403750dcab9c64e7dacae6abc4", "url": "https://api.github.com/repos/google/jsonnet/commits/bc80c8384bec16403750dcab9c64e7dacae6abc4", "html_url": "https://github.com/google/jsonnet/commit/bc80c8384bec16403750dcab9c64e7dacae6abc4"}]}, {"sha": "820f619f74a5adc0045ba3b420bed808c6184f25", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-08T17:50:26Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-08T17:51:17Z"}, "message": "Add missing argument to the slice spec", "tree": {"sha": "a3134d1d2606a7d7551d1850e954dd69ad86b5af", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a3134d1d2606a7d7551d1850e954dd69ad86b5af"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/820f619f74a5adc0045ba3b420bed808c6184f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/820f619f74a5adc0045ba3b420bed808c6184f25", "html_url": "https://github.com/google/jsonnet/commit/820f619f74a5adc0045ba3b420bed808c6184f25", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/820f619f74a5adc0045ba3b420bed808c6184f25/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93476c27a03cac3841fafc597cf124cc55035079", "url": "https://api.github.com/repos/google/jsonnet/commits/93476c27a03cac3841fafc597cf124cc55035079", "html_url": "https://github.com/google/jsonnet/commit/93476c27a03cac3841fafc597cf124cc55035079"}]}, {"sha": "bc80c8384bec16403750dcab9c64e7dacae6abc4", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-08T17:26:39Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-08T17:47:59Z"}, "message": "An option to disable error tests", "tree": {"sha": "7016fc7e033ac7eb5e14b3be147aa086dfe6632a", "url": "https://api.github.com/repos/google/jsonnet/git/trees/7016fc7e033ac7eb5e14b3be147aa086dfe6632a"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/bc80c8384bec16403750dcab9c64e7dacae6abc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/bc80c8384bec16403750dcab9c64e7dacae6abc4", "html_url": "https://github.com/google/jsonnet/commit/bc80c8384bec16403750dcab9c64e7dacae6abc4", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/bc80c8384bec16403750dcab9c64e7dacae6abc4/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4c9b2a7e113d2ef587f4a14dfa286148afdace1", "url": "https://api.github.com/repos/google/jsonnet/commits/a4c9b2a7e113d2ef587f4a14dfa286148afdace1", "html_url": "https://github.com/google/jsonnet/commit/a4c9b2a7e113d2ef587f4a14dfa286148afdace1"}]}, {"sha": "93476c27a03cac3841fafc597cf124cc55035079", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-08-07T20:49:06Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-08-07T20:55:27Z"}, "message": "Try to fix JS stack overflow by avoiding long functions", "tree": {"sha": "808e631aa7932a63a061b2b458a2bfe75466b716", "url": "https://api.github.com/repos/google/jsonnet/git/trees/808e631aa7932a63a061b2b458a2bfe75466b716"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/93476c27a03cac3841fafc597cf124cc55035079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/93476c27a03cac3841fafc597cf124cc55035079", "html_url": "https://github.com/google/jsonnet/commit/93476c27a03cac3841fafc597cf124cc55035079", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/93476c27a03cac3841fafc597cf124cc55035079/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ef4765c0bc84c14302a078acefaa033a776f024", "url": "https://api.github.com/repos/google/jsonnet/commits/2ef4765c0bc84c14302a078acefaa033a776f024", "html_url": "https://github.com/google/jsonnet/commit/2ef4765c0bc84c14302a078acefaa033a776f024"}]}, {"sha": "2ef4765c0bc84c14302a078acefaa033a776f024", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-07T20:08:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-07T20:08:43Z"}, "message": "Merge pull request #336 from sbarzowski/tests_external\n\nExternal testing support", "tree": {"sha": "206227b2b6e2715e60c145c6b77a36ca7b1244d3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/206227b2b6e2715e60c145c6b77a36ca7b1244d3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2ef4765c0bc84c14302a078acefaa033a776f024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2ef4765c0bc84c14302a078acefaa033a776f024", "html_url": "https://github.com/google/jsonnet/commit/2ef4765c0bc84c14302a078acefaa033a776f024", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2ef4765c0bc84c14302a078acefaa033a776f024/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03e0c922fd38b464c23043818ebb63b88522098b", "url": "https://api.github.com/repos/google/jsonnet/commits/03e0c922fd38b464c23043818ebb63b88522098b", "html_url": "https://github.com/google/jsonnet/commit/03e0c922fd38b464c23043818ebb63b88522098b"}, {"sha": "a4c9b2a7e113d2ef587f4a14dfa286148afdace1", "url": "https://api.github.com/repos/google/jsonnet/commits/a4c9b2a7e113d2ef587f4a14dfa286148afdace1", "html_url": "https://github.com/google/jsonnet/commit/a4c9b2a7e113d2ef587f4a14dfa286148afdace1"}]}, {"sha": "a4c9b2a7e113d2ef587f4a14dfa286148afdace1", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-07T18:19:44Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-07T18:21:13Z"}, "message": "External testing support\n\nMake it easier to use the test suite with other implementatons.\nFor example: https://github.com/google/go-jsonnet", "tree": {"sha": "206227b2b6e2715e60c145c6b77a36ca7b1244d3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/206227b2b6e2715e60c145c6b77a36ca7b1244d3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a4c9b2a7e113d2ef587f4a14dfa286148afdace1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a4c9b2a7e113d2ef587f4a14dfa286148afdace1", "html_url": "https://github.com/google/jsonnet/commit/a4c9b2a7e113d2ef587f4a14dfa286148afdace1", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a4c9b2a7e113d2ef587f4a14dfa286148afdace1/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03e0c922fd38b464c23043818ebb63b88522098b", "url": "https://api.github.com/repos/google/jsonnet/commits/03e0c922fd38b464c23043818ebb63b88522098b", "html_url": "https://github.com/google/jsonnet/commit/03e0c922fd38b464c23043818ebb63b88522098b"}]}, {"sha": "2176ba2da03d05f89337d257d2f254bae56f0bed", "commit": {"author": {"name": "Benjamin Staffin", "email": "benley@gmail.com", "date": "2017-08-06T20:36:38Z"}, "committer": {"name": "Benjamin Staffin", "email": "benley@gmail.com", "date": "2017-08-07T02:44:35Z"}, "message": "Python 3 compatibility", "tree": {"sha": "da1c372efa6eedb1f53c479b73dba17f750b1cbd", "url": "https://api.github.com/repos/google/jsonnet/git/trees/da1c372efa6eedb1f53c479b73dba17f750b1cbd"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2176ba2da03d05f89337d257d2f254bae56f0bed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE/bo47ngaadQ5qHClpJDAE04Jr0oFAlmH1BUACgkQpJDAE04J\nr0pLSQ/8C+8W08fbBjYMREHqavioQuVr7pFwZS6B6Y6VhTo200rx0KHkA6V/NBGJ\nzeXS9F6aM2b3wjckTifJ8DmE/Xd7Clof5Iv6M4PUEY4fM9EYrHP7K6SiYx6Eze71\n//gqiS18TiehkFk29fWVXjdShNKOMfgkq7C50YFtq4WyWFONo4CjYdLE9pIq1Z+m\n/oz3p7VVRnK1ddJ/qyp8W0LEDSqXCEgLg1hWK1YlCohAakVGV3fKzucqmjiKhrGx\nuqYj5bpR2tpMVZb6Mpk9pZRggN3R+JXY2gONl934ae2R1UWwW/+q3YkLMyfF1sZe\njv9zNAnnXKkKpJSEZXpHbsUNMgAyDS5LO/IZMs4Wf4YCSvb6/kUUkuORkXOWjr5K\nUsDWui9XcM0DLdSKIfayKaLxlT/hnN8qiOp+AqQrSEMXinYwB1PmQ6N9TjI8NBor\n+tv4ZIypb+/BRJOEsGC4IrDkNAlZ99Z8oQOLmq2x/idxy32clPY6HWkq8CQasd70\nCkmLhW9F6t7pcnJzYNAELoKzpNoW75WtvrRttQct2xF7PDFXep8fk6MRjAZrucQj\nkQPYRjehe5TNA1VtF89oM/dGoKJQr0X7CeGWgGpUqYoN7LbqcTLvP9EhYeEnGo0J\nXp47zLd3aly9g5rCREUcyJT5oxBeJS8LC20HyCZugcnTok9EGUY=\n=aZ6I\n-----END PGP SIGNATURE-----", "payload": "tree da1c372efa6eedb1f53c479b73dba17f750b1cbd\nparent 03e0c922fd38b464c23043818ebb63b88522098b\nauthor Benjamin Staffin <benley@gmail.com> 1502051798 -0400\ncommitter Benjamin Staffin <benley@gmail.com> 1502073875 -0400\n\nPython 3 compatibility\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2176ba2da03d05f89337d257d2f254bae56f0bed", "html_url": "https://github.com/google/jsonnet/commit/2176ba2da03d05f89337d257d2f254bae56f0bed", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2176ba2da03d05f89337d257d2f254bae56f0bed/comments", "author": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03e0c922fd38b464c23043818ebb63b88522098b", "url": "https://api.github.com/repos/google/jsonnet/commits/03e0c922fd38b464c23043818ebb63b88522098b", "html_url": "https://github.com/google/jsonnet/commit/03e0c922fd38b464c23043818ebb63b88522098b"}]}, {"sha": "03e0c922fd38b464c23043818ebb63b88522098b", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-03T19:26:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-03T19:26:26Z"}, "message": "Merge pull request #326 from sbarzowski/reformat\n\nReformat code (and add make target to do so)", "tree": {"sha": "e612f0e0c2093f543ac3313f4015cfbae5b57377", "url": "https://api.github.com/repos/google/jsonnet/git/trees/e612f0e0c2093f543ac3313f4015cfbae5b57377"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/03e0c922fd38b464c23043818ebb63b88522098b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/03e0c922fd38b464c23043818ebb63b88522098b", "html_url": "https://github.com/google/jsonnet/commit/03e0c922fd38b464c23043818ebb63b88522098b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/03e0c922fd38b464c23043818ebb63b88522098b/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7453280404a4bc0e81aad342255c732111afb626", "url": "https://api.github.com/repos/google/jsonnet/commits/7453280404a4bc0e81aad342255c732111afb626", "html_url": "https://github.com/google/jsonnet/commit/7453280404a4bc0e81aad342255c732111afb626"}, {"sha": "9f5697c3d752172128f895bbd0977552aeef04ff", "url": "https://api.github.com/repos/google/jsonnet/commits/9f5697c3d752172128f895bbd0977552aeef04ff", "html_url": "https://github.com/google/jsonnet/commit/9f5697c3d752172128f895bbd0977552aeef04ff"}]}, {"sha": "9f5697c3d752172128f895bbd0977552aeef04ff", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-20T16:43:12Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-02T15:28:39Z"}, "message": "Reformat code (and add make target to do so)", "tree": {"sha": "e612f0e0c2093f543ac3313f4015cfbae5b57377", "url": "https://api.github.com/repos/google/jsonnet/git/trees/e612f0e0c2093f543ac3313f4015cfbae5b57377"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9f5697c3d752172128f895bbd0977552aeef04ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9f5697c3d752172128f895bbd0977552aeef04ff", "html_url": "https://github.com/google/jsonnet/commit/9f5697c3d752172128f895bbd0977552aeef04ff", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9f5697c3d752172128f895bbd0977552aeef04ff/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7453280404a4bc0e81aad342255c732111afb626", "url": "https://api.github.com/repos/google/jsonnet/commits/7453280404a4bc0e81aad342255c732111afb626", "html_url": "https://github.com/google/jsonnet/commit/7453280404a4bc0e81aad342255c732111afb626"}]}, {"sha": "7453280404a4bc0e81aad342255c732111afb626", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-08-01T23:53:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-01T23:53:27Z"}, "message": "Merge pull request #334 from sbarzowski/bracebug\n\nAdd simple newline insertion to formatter", "tree": {"sha": "c5a440ae0bd0ec93a03a334feecae87d26a5eb29", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c5a440ae0bd0ec93a03a334feecae87d26a5eb29"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7453280404a4bc0e81aad342255c732111afb626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7453280404a4bc0e81aad342255c732111afb626", "html_url": "https://github.com/google/jsonnet/commit/7453280404a4bc0e81aad342255c732111afb626", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7453280404a4bc0e81aad342255c732111afb626/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78a7023f417a15ddd98bd44965bb446c19b9387e", "url": "https://api.github.com/repos/google/jsonnet/commits/78a7023f417a15ddd98bd44965bb446c19b9387e", "html_url": "https://github.com/google/jsonnet/commit/78a7023f417a15ddd98bd44965bb446c19b9387e"}, {"sha": "fb952b0bbc876f381c7b13f06811f36de67725b3", "url": "https://api.github.com/repos/google/jsonnet/commits/fb952b0bbc876f381c7b13f06811f36de67725b3", "html_url": "https://github.com/google/jsonnet/commit/fb952b0bbc876f381c7b13f06811f36de67725b3"}]}, {"sha": "fb952b0bbc876f381c7b13f06811f36de67725b3", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-01T17:39:13Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-08-01T17:41:08Z"}, "message": "Improve comment", "tree": {"sha": "3081e92437bd2a7fb50fd6099a486a392cc89520", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3081e92437bd2a7fb50fd6099a486a392cc89520"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/fb952b0bbc876f381c7b13f06811f36de67725b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/fb952b0bbc876f381c7b13f06811f36de67725b3", "html_url": "https://github.com/google/jsonnet/commit/fb952b0bbc876f381c7b13f06811f36de67725b3", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/fb952b0bbc876f381c7b13f06811f36de67725b3/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d1ad19a84537d2724c5dfc167fb52c168bbe0be", "url": "https://api.github.com/repos/google/jsonnet/commits/9d1ad19a84537d2724c5dfc167fb52c168bbe0be", "html_url": "https://github.com/google/jsonnet/commit/9d1ad19a84537d2724c5dfc167fb52c168bbe0be"}]}, {"sha": "9d1ad19a84537d2724c5dfc167fb52c168bbe0be", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-31T18:21:21Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-31T18:21:21Z"}, "message": "Fix comment", "tree": {"sha": "452081382c06dc8a19b6bebd9df575d3754c1492", "url": "https://api.github.com/repos/google/jsonnet/git/trees/452081382c06dc8a19b6bebd9df575d3754c1492"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9d1ad19a84537d2724c5dfc167fb52c168bbe0be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9d1ad19a84537d2724c5dfc167fb52c168bbe0be", "html_url": "https://github.com/google/jsonnet/commit/9d1ad19a84537d2724c5dfc167fb52c168bbe0be", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9d1ad19a84537d2724c5dfc167fb52c168bbe0be/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9fc3e8df4e1da8617fcf5a50d4ba5098d805b0f", "url": "https://api.github.com/repos/google/jsonnet/commits/d9fc3e8df4e1da8617fcf5a50d4ba5098d805b0f", "html_url": "https://github.com/google/jsonnet/commit/d9fc3e8df4e1da8617fcf5a50d4ba5098d805b0f"}]}, {"sha": "d9fc3e8df4e1da8617fcf5a50d4ba5098d805b0f", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-31T18:01:27Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-31T18:09:48Z"}, "message": "Change a test, so that it is no longer redundant", "tree": {"sha": "37defe0df1ac748b939beacb68b52fc81f1a6d89", "url": "https://api.github.com/repos/google/jsonnet/git/trees/37defe0df1ac748b939beacb68b52fc81f1a6d89"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d9fc3e8df4e1da8617fcf5a50d4ba5098d805b0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d9fc3e8df4e1da8617fcf5a50d4ba5098d805b0f", "html_url": "https://github.com/google/jsonnet/commit/d9fc3e8df4e1da8617fcf5a50d4ba5098d805b0f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d9fc3e8df4e1da8617fcf5a50d4ba5098d805b0f/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4904e8be2deedfb230a884b37d134fdb073a8641", "url": "https://api.github.com/repos/google/jsonnet/commits/4904e8be2deedfb230a884b37d134fdb073a8641", "html_url": "https://github.com/google/jsonnet/commit/4904e8be2deedfb230a884b37d134fdb073a8641"}]}, {"sha": "4904e8be2deedfb230a884b37d134fdb073a8641", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-31T15:21:42Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-31T15:21:42Z"}, "message": "Comment improvements", "tree": {"sha": "2f3cfe5074b55b8cede774191851304cb2302627", "url": "https://api.github.com/repos/google/jsonnet/git/trees/2f3cfe5074b55b8cede774191851304cb2302627"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4904e8be2deedfb230a884b37d134fdb073a8641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4904e8be2deedfb230a884b37d134fdb073a8641", "html_url": "https://github.com/google/jsonnet/commit/4904e8be2deedfb230a884b37d134fdb073a8641", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4904e8be2deedfb230a884b37d134fdb073a8641/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "url": "https://api.github.com/repos/google/jsonnet/commits/452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "html_url": "https://github.com/google/jsonnet/commit/452a24c6cbfd2a0d7cb5ea749df8855cda534d12"}]}, {"sha": "78a7023f417a15ddd98bd44965bb446c19b9387e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-31T05:45:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-31T05:45:29Z"}, "message": "Merge pull request #333 from benley/fix-bazel-python\n\nFix the bazel python build", "tree": {"sha": "cc46f59b549212fec01250251fde6539dcc64bd3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/cc46f59b549212fec01250251fde6539dcc64bd3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/78a7023f417a15ddd98bd44965bb446c19b9387e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/78a7023f417a15ddd98bd44965bb446c19b9387e", "html_url": "https://github.com/google/jsonnet/commit/78a7023f417a15ddd98bd44965bb446c19b9387e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/78a7023f417a15ddd98bd44965bb446c19b9387e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cfa8ea41a0495d4c795d2cef34b91458f894919", "url": "https://api.github.com/repos/google/jsonnet/commits/2cfa8ea41a0495d4c795d2cef34b91458f894919", "html_url": "https://github.com/google/jsonnet/commit/2cfa8ea41a0495d4c795d2cef34b91458f894919"}, {"sha": "5f9975104137b08c932145582b9c40348d5961c9", "url": "https://api.github.com/repos/google/jsonnet/commits/5f9975104137b08c932145582b9c40348d5961c9", "html_url": "https://github.com/google/jsonnet/commit/5f9975104137b08c932145582b9c40348d5961c9"}]}, {"sha": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-21T18:59:44Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-28T19:52:09Z"}, "message": "Add simple newline insertion to formatter\n\nThis fixes \"bracebug\" (reported here: #299) and many\nvariants of it.\n\nOf course it's not a complete solution to any newline problems.\nIn particular it never removes or rearranges newlines, it only\nadds some. But it still should help a lot.", "tree": {"sha": "c496618b505735d9d45c7633e17e51041f817555", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c496618b505735d9d45c7633e17e51041f817555"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "html_url": "https://github.com/google/jsonnet/commit/452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/452a24c6cbfd2a0d7cb5ea749df8855cda534d12/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8477f03733529107cb591c06e9678f36174ebb88", "url": "https://api.github.com/repos/google/jsonnet/commits/8477f03733529107cb591c06e9678f36174ebb88", "html_url": "https://github.com/google/jsonnet/commit/8477f03733529107cb591c06e9678f36174ebb88"}]}, {"sha": "5f9975104137b08c932145582b9c40348d5961c9", "commit": {"author": {"name": "Benjamin Staffin", "email": "benley@gmail.com", "date": "2017-07-27T19:54:25Z"}, "committer": {"name": "Benjamin Staffin", "email": "benley@gmail.com", "date": "2017-07-27T19:54:25Z"}, "message": "Fix the bazel python build\n\nFor some reason `sysconfig.get_path(\"include\")` incorrectly returns\n/usr/local/include/python2.7 on Debian (and probably Ubuntu) systems.\nFortunately, `distutils.sysconfig.get_python_inc()` seems to do the\nright thing across platforms.", "tree": {"sha": "cc46f59b549212fec01250251fde6539dcc64bd3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/cc46f59b549212fec01250251fde6539dcc64bd3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/5f9975104137b08c932145582b9c40348d5961c9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE/bo47ngaadQ5qHClpJDAE04Jr0oFAll6RVAACgkQpJDAE04J\nr0pWCQ/+KpGRW51sEndI7kqFP8msVG/n5IILxYxXOx0Bj/4N2hQtbTS+1vg3T5vs\nNWXNQhvgIUgY8cRz/MdaB5uqt2SpuO1SNTmnMrxRteO055ZOalZB6dNgOJ75p9DL\nhqral2Utbj4Krk5N0qDLLRfeDH94+SZJ8rU7Gp7z0rtpZ88bY96PiZ5JXakCZXra\n27bJAZQY5uj/zhABpD9GQPOCcVrMId6Rw/nw+QeXvr2arjTHuXo+XRA40o+hCrAW\nVYiYg/FOJ0OP3XKbg5UIdSKQIFvmWH9LEuREliV9rbVx1dd3DqSVTBx3M3JxVA4m\na/6c0SiizSNh8wiedxfvPr3L0QF65wJwndJIqFY2YcmARvup6icrNFLSRAhyLn0o\nnYIwiKSYI7D3GVkL+Ag5rS/icxvioxJUhXqkni1m7hQkA4rHTCeNZSvWRqXkvVXm\nH9vMHFswIo1OUQEFCfZoNoRIG14sOcbdJQCn42/6QGGtYY+DzpxTu5QyzsLfZmEJ\ngxtB9bkPm6kV2OA1mio3yfqpcpBhFvsZ8qhE0gMw7B1t2G8QXwp7lP3IXMbvijNd\nyKG866BM79udd5XgMHy3vjkakU73R0JdIh0OIx2KrcOsHZuGDRkByDQ9FTDgFaIz\nkUjy1tuxPPmkQVC3EWcg0zKOf5/lFZF397hEbq11W/ZWhrRbcZk=\n=19Sb\n-----END PGP SIGNATURE-----", "payload": "tree cc46f59b549212fec01250251fde6539dcc64bd3\nparent 2cfa8ea41a0495d4c795d2cef34b91458f894919\nauthor Benjamin Staffin <benley@gmail.com> 1501185265 -0400\ncommitter Benjamin Staffin <benley@gmail.com> 1501185265 -0400\n\nFix the bazel python build\n\nFor some reason `sysconfig.get_path(\"include\")` incorrectly returns\n/usr/local/include/python2.7 on Debian (and probably Ubuntu) systems.\nFortunately, `distutils.sysconfig.get_python_inc()` seems to do the\nright thing across platforms.\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/5f9975104137b08c932145582b9c40348d5961c9", "html_url": "https://github.com/google/jsonnet/commit/5f9975104137b08c932145582b9c40348d5961c9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/5f9975104137b08c932145582b9c40348d5961c9/comments", "author": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cfa8ea41a0495d4c795d2cef34b91458f894919", "url": "https://api.github.com/repos/google/jsonnet/commits/2cfa8ea41a0495d4c795d2cef34b91458f894919", "html_url": "https://github.com/google/jsonnet/commit/2cfa8ea41a0495d4c795d2cef34b91458f894919"}]}, {"sha": "2cfa8ea41a0495d4c795d2cef34b91458f894919", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-26T21:20:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-26T21:20:39Z"}, "message": "Merge pull request #332 from sbarzowski/fix-travis\n\nMake TravisCI fail when tests fail.", "tree": {"sha": "f467f413811e5124e6e26536cfbc0bc7c0112535", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f467f413811e5124e6e26536cfbc0bc7c0112535"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2cfa8ea41a0495d4c795d2cef34b91458f894919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2cfa8ea41a0495d4c795d2cef34b91458f894919", "html_url": "https://github.com/google/jsonnet/commit/2cfa8ea41a0495d4c795d2cef34b91458f894919", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2cfa8ea41a0495d4c795d2cef34b91458f894919/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a993d163ee60ece25de40c7a8eeabc8a9c289b", "url": "https://api.github.com/repos/google/jsonnet/commits/35a993d163ee60ece25de40c7a8eeabc8a9c289b", "html_url": "https://github.com/google/jsonnet/commit/35a993d163ee60ece25de40c7a8eeabc8a9c289b"}, {"sha": "654f96a8a2113d62f8ff4918964d828b3e33aaf0", "url": "https://api.github.com/repos/google/jsonnet/commits/654f96a8a2113d62f8ff4918964d828b3e33aaf0", "html_url": "https://github.com/google/jsonnet/commit/654f96a8a2113d62f8ff4918964d828b3e33aaf0"}]}, {"sha": "654f96a8a2113d62f8ff4918964d828b3e33aaf0", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-26T20:39:16Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-26T20:42:45Z"}, "message": "Make TravisCI fail when tests fail.\n\nTravisCI used to ignore return code of make test\nand report success even when tests failed.", "tree": {"sha": "f467f413811e5124e6e26536cfbc0bc7c0112535", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f467f413811e5124e6e26536cfbc0bc7c0112535"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/654f96a8a2113d62f8ff4918964d828b3e33aaf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/654f96a8a2113d62f8ff4918964d828b3e33aaf0", "html_url": "https://github.com/google/jsonnet/commit/654f96a8a2113d62f8ff4918964d828b3e33aaf0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/654f96a8a2113d62f8ff4918964d828b3e33aaf0/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a993d163ee60ece25de40c7a8eeabc8a9c289b", "url": "https://api.github.com/repos/google/jsonnet/commits/35a993d163ee60ece25de40c7a8eeabc8a9c289b", "html_url": "https://github.com/google/jsonnet/commit/35a993d163ee60ece25de40c7a8eeabc8a9c289b"}]}, {"sha": "35a993d163ee60ece25de40c7a8eeabc8a9c289b", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-26T19:56:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-26T19:56:44Z"}, "message": "Merge pull request #331 from sbarzowski/commentfix\n\nRegenerate golden output (comment change).", "tree": {"sha": "8acec063da8dd5d884a75aa5b3559239c18b4b20", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8acec063da8dd5d884a75aa5b3559239c18b4b20"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/35a993d163ee60ece25de40c7a8eeabc8a9c289b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/35a993d163ee60ece25de40c7a8eeabc8a9c289b", "html_url": "https://github.com/google/jsonnet/commit/35a993d163ee60ece25de40c7a8eeabc8a9c289b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/35a993d163ee60ece25de40c7a8eeabc8a9c289b/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef886a2da031c4ce89d26f3100a3416dfd05b40a", "url": "https://api.github.com/repos/google/jsonnet/commits/ef886a2da031c4ce89d26f3100a3416dfd05b40a", "html_url": "https://github.com/google/jsonnet/commit/ef886a2da031c4ce89d26f3100a3416dfd05b40a"}, {"sha": "8477f03733529107cb591c06e9678f36174ebb88", "url": "https://api.github.com/repos/google/jsonnet/commits/8477f03733529107cb591c06e9678f36174ebb88", "html_url": "https://github.com/google/jsonnet/commit/8477f03733529107cb591c06e9678f36174ebb88"}]}, {"sha": "8477f03733529107cb591c06e9678f36174ebb88", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-26T19:13:31Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-26T19:13:31Z"}, "message": "Regenerate golden output (comment change).\n\nThis is embarassing, but I forgot to regenerate one of the test\noutputs after some trivial comment change.", "tree": {"sha": "8acec063da8dd5d884a75aa5b3559239c18b4b20", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8acec063da8dd5d884a75aa5b3559239c18b4b20"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8477f03733529107cb591c06e9678f36174ebb88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8477f03733529107cb591c06e9678f36174ebb88", "html_url": "https://github.com/google/jsonnet/commit/8477f03733529107cb591c06e9678f36174ebb88", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8477f03733529107cb591c06e9678f36174ebb88/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef886a2da031c4ce89d26f3100a3416dfd05b40a", "url": "https://api.github.com/repos/google/jsonnet/commits/ef886a2da031c4ce89d26f3100a3416dfd05b40a", "html_url": "https://github.com/google/jsonnet/commit/ef886a2da031c4ce89d26f3100a3416dfd05b40a"}]}, {"sha": "ef886a2da031c4ce89d26f3100a3416dfd05b40a", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-26T18:53:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-26T18:53:01Z"}, "message": "Merge pull request #329 from sbarzowski/idempotence-tests\n\nAdd idempotence tests", "tree": {"sha": "a95be8a011c6f0f126f719250b245e7388b4e026", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a95be8a011c6f0f126f719250b245e7388b4e026"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ef886a2da031c4ce89d26f3100a3416dfd05b40a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ef886a2da031c4ce89d26f3100a3416dfd05b40a", "html_url": "https://github.com/google/jsonnet/commit/ef886a2da031c4ce89d26f3100a3416dfd05b40a", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ef886a2da031c4ce89d26f3100a3416dfd05b40a/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "720b4e58579d9e48fea125a2c2b0808f3590e058", "url": "https://api.github.com/repos/google/jsonnet/commits/720b4e58579d9e48fea125a2c2b0808f3590e058", "html_url": "https://github.com/google/jsonnet/commit/720b4e58579d9e48fea125a2c2b0808f3590e058"}, {"sha": "1da05d57cf075a798018dcd3afff31da43b84b60", "url": "https://api.github.com/repos/google/jsonnet/commits/1da05d57cf075a798018dcd3afff31da43b84b60", "html_url": "https://github.com/google/jsonnet/commit/1da05d57cf075a798018dcd3afff31da43b84b60"}]}, {"sha": "720b4e58579d9e48fea125a2c2b0808f3590e058", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "stanislaw.barzowski@gmail.com", "date": "2017-07-26T18:51:07Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-26T18:51:07Z"}, "message": "Add an option for import sorting in fmt mode (#325)\n\nAdd an option for import sorting in fmt mode", "tree": {"sha": "5b757567f85b2c3e32f4e4cd845a2e7703978a04", "url": "https://api.github.com/repos/google/jsonnet/git/trees/5b757567f85b2c3e32f4e4cd845a2e7703978a04"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/720b4e58579d9e48fea125a2c2b0808f3590e058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/720b4e58579d9e48fea125a2c2b0808f3590e058", "html_url": "https://github.com/google/jsonnet/commit/720b4e58579d9e48fea125a2c2b0808f3590e058", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/720b4e58579d9e48fea125a2c2b0808f3590e058/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71f524197979f19c34897d57f85ceb6dfa369f8a", "url": "https://api.github.com/repos/google/jsonnet/commits/71f524197979f19c34897d57f85ceb6dfa369f8a", "html_url": "https://github.com/google/jsonnet/commit/71f524197979f19c34897d57f85ceb6dfa369f8a"}]}, {"sha": "1da05d57cf075a798018dcd3afff31da43b84b60", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-25T01:04:49Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-25T01:08:11Z"}, "message": "Add idempotence tests\n\nJust run formatter again on golden and see if something changes.\nIt shouldn't.", "tree": {"sha": "bc64551f76a81a611f7826a984901466700ae5d3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/bc64551f76a81a611f7826a984901466700ae5d3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1da05d57cf075a798018dcd3afff31da43b84b60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1da05d57cf075a798018dcd3afff31da43b84b60", "html_url": "https://github.com/google/jsonnet/commit/1da05d57cf075a798018dcd3afff31da43b84b60", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1da05d57cf075a798018dcd3afff31da43b84b60/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71f524197979f19c34897d57f85ceb6dfa369f8a", "url": "https://api.github.com/repos/google/jsonnet/commits/71f524197979f19c34897d57f85ceb6dfa369f8a", "html_url": "https://github.com/google/jsonnet/commit/71f524197979f19c34897d57f85ceb6dfa369f8a"}]}, {"sha": "71f524197979f19c34897d57f85ceb6dfa369f8a", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-24T16:14:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-24T16:14:35Z"}, "message": "Merge pull request #327 from sparkprime/todos\n\nMove TODOs inside their branches", "tree": {"sha": "b8cc804171f5fceb61159911363437aba2069add", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b8cc804171f5fceb61159911363437aba2069add"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/71f524197979f19c34897d57f85ceb6dfa369f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/71f524197979f19c34897d57f85ceb6dfa369f8a", "html_url": "https://github.com/google/jsonnet/commit/71f524197979f19c34897d57f85ceb6dfa369f8a", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/71f524197979f19c34897d57f85ceb6dfa369f8a/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c72b64155d428979ca687be4138bca79bf6640d3", "url": "https://api.github.com/repos/google/jsonnet/commits/c72b64155d428979ca687be4138bca79bf6640d3", "html_url": "https://github.com/google/jsonnet/commit/c72b64155d428979ca687be4138bca79bf6640d3"}, {"sha": "ee1b07c8be2221d2e01be83269a430c665b83909", "url": "https://api.github.com/repos/google/jsonnet/commits/ee1b07c8be2221d2e01be83269a430c665b83909", "html_url": "https://github.com/google/jsonnet/commit/ee1b07c8be2221d2e01be83269a430c665b83909"}]}, {"sha": "ee1b07c8be2221d2e01be83269a430c665b83909", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-23T00:29:23Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-23T00:31:51Z"}, "message": "Move TODOs inside their branches", "tree": {"sha": "b8cc804171f5fceb61159911363437aba2069add", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b8cc804171f5fceb61159911363437aba2069add"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ee1b07c8be2221d2e01be83269a430c665b83909", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ee1b07c8be2221d2e01be83269a430c665b83909", "html_url": "https://github.com/google/jsonnet/commit/ee1b07c8be2221d2e01be83269a430c665b83909", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ee1b07c8be2221d2e01be83269a430c665b83909/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c72b64155d428979ca687be4138bca79bf6640d3", "url": "https://api.github.com/repos/google/jsonnet/commits/c72b64155d428979ca687be4138bca79bf6640d3", "html_url": "https://github.com/google/jsonnet/commit/c72b64155d428979ca687be4138bca79bf6640d3"}]}, {"sha": "c72b64155d428979ca687be4138bca79bf6640d3", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-22T21:59:44Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-22T22:00:16Z"}, "message": "Add comments giving more detail on fodder representation", "tree": {"sha": "95ad56ba1819a525a0ffabffae212be5641b1f5e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/95ad56ba1819a525a0ffabffae212be5641b1f5e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c72b64155d428979ca687be4138bca79bf6640d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c72b64155d428979ca687be4138bca79bf6640d3", "html_url": "https://github.com/google/jsonnet/commit/c72b64155d428979ca687be4138bca79bf6640d3", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c72b64155d428979ca687be4138bca79bf6640d3/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "316068be7fd2511d554686ae4994426d4471e44f", "url": "https://api.github.com/repos/google/jsonnet/commits/316068be7fd2511d554686ae4994426d4471e44f", "html_url": "https://github.com/google/jsonnet/commit/316068be7fd2511d554686ae4994426d4471e44f"}]}, {"sha": "316068be7fd2511d554686ae4994426d4471e44f", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-17T18:25:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-17T18:25:21Z"}, "message": "Merge pull request #324 from sbarzowski/multiple-files\n\nAllow reformatting of multiple files", "tree": {"sha": "acc1c581709b49eec23a78ff82e89f7541422096", "url": "https://api.github.com/repos/google/jsonnet/git/trees/acc1c581709b49eec23a78ff82e89f7541422096"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/316068be7fd2511d554686ae4994426d4471e44f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/316068be7fd2511d554686ae4994426d4471e44f", "html_url": "https://github.com/google/jsonnet/commit/316068be7fd2511d554686ae4994426d4471e44f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/316068be7fd2511d554686ae4994426d4471e44f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ee46bcdeac3cfda1a97095761acb84acd0ae567", "url": "https://api.github.com/repos/google/jsonnet/commits/0ee46bcdeac3cfda1a97095761acb84acd0ae567", "html_url": "https://github.com/google/jsonnet/commit/0ee46bcdeac3cfda1a97095761acb84acd0ae567"}, {"sha": "c52761c868c86a0b616189983f6842dfa18193c4", "url": "https://api.github.com/repos/google/jsonnet/commits/c52761c868c86a0b616189983f6842dfa18193c4", "html_url": "https://github.com/google/jsonnet/commit/c52761c868c86a0b616189983f6842dfa18193c4"}]}, {"sha": "c52761c868c86a0b616189983f6842dfa18193c4", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-11T20:03:55Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-17T18:04:14Z"}, "message": "Allow reformatting of multiple files\n\nWhen using -i or --test.\n\nSee #210.", "tree": {"sha": "ca1ce705da5482c921243e40a1c40be5580ee6bf", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ca1ce705da5482c921243e40a1c40be5580ee6bf"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c52761c868c86a0b616189983f6842dfa18193c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c52761c868c86a0b616189983f6842dfa18193c4", "html_url": "https://github.com/google/jsonnet/commit/c52761c868c86a0b616189983f6842dfa18193c4", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c52761c868c86a0b616189983f6842dfa18193c4/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d0d1f9ce8e609b85b51484d487cace6c5574a0", "url": "https://api.github.com/repos/google/jsonnet/commits/12d0d1f9ce8e609b85b51484d487cace6c5574a0", "html_url": "https://github.com/google/jsonnet/commit/12d0d1f9ce8e609b85b51484d487cace6c5574a0"}]}, {"sha": "0ee46bcdeac3cfda1a97095761acb84acd0ae567", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-07-12T14:01:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-12T14:01:08Z"}, "message": "Merge pull request #323 from sbarzowski/typos\n\nFix spelling", "tree": {"sha": "4366286405b2571cf1ce8bf90efb58b658789b22", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4366286405b2571cf1ce8bf90efb58b658789b22"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/0ee46bcdeac3cfda1a97095761acb84acd0ae567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/0ee46bcdeac3cfda1a97095761acb84acd0ae567", "html_url": "https://github.com/google/jsonnet/commit/0ee46bcdeac3cfda1a97095761acb84acd0ae567", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/0ee46bcdeac3cfda1a97095761acb84acd0ae567/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d0d1f9ce8e609b85b51484d487cace6c5574a0", "url": "https://api.github.com/repos/google/jsonnet/commits/12d0d1f9ce8e609b85b51484d487cace6c5574a0", "html_url": "https://github.com/google/jsonnet/commit/12d0d1f9ce8e609b85b51484d487cace6c5574a0"}, {"sha": "5a30a8d66529c1cd03f9fa3cbdf386fe9ffcba97", "url": "https://api.github.com/repos/google/jsonnet/commits/5a30a8d66529c1cd03f9fa3cbdf386fe9ffcba97", "html_url": "https://github.com/google/jsonnet/commit/5a30a8d66529c1cd03f9fa3cbdf386fe9ffcba97"}]}, {"sha": "5a30a8d66529c1cd03f9fa3cbdf386fe9ffcba97", "commit": {"author": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-11T19:33:29Z"}, "committer": {"name": "Stanis\u0142aw Barzowski", "email": "sbarzowski@google.com", "date": "2017-07-11T19:33:29Z"}, "message": "Fix spelling", "tree": {"sha": "4366286405b2571cf1ce8bf90efb58b658789b22", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4366286405b2571cf1ce8bf90efb58b658789b22"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/5a30a8d66529c1cd03f9fa3cbdf386fe9ffcba97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/5a30a8d66529c1cd03f9fa3cbdf386fe9ffcba97", "html_url": "https://github.com/google/jsonnet/commit/5a30a8d66529c1cd03f9fa3cbdf386fe9ffcba97", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/5a30a8d66529c1cd03f9fa3cbdf386fe9ffcba97/comments", "author": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d0d1f9ce8e609b85b51484d487cace6c5574a0", "url": "https://api.github.com/repos/google/jsonnet/commits/12d0d1f9ce8e609b85b51484d487cace6c5574a0", "html_url": "https://github.com/google/jsonnet/commit/12d0d1f9ce8e609b85b51484d487cace6c5574a0"}]}, {"sha": "12d0d1f9ce8e609b85b51484d487cace6c5574a0", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T03:24:29Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T03:24:29Z"}, "message": "Fix typo in spec", "tree": {"sha": "9a5c1de9ac282f82b7588fe6ff66e6fc97b5ac64", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9a5c1de9ac282f82b7588fe6ff66e6fc97b5ac64"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/12d0d1f9ce8e609b85b51484d487cace6c5574a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/12d0d1f9ce8e609b85b51484d487cace6c5574a0", "html_url": "https://github.com/google/jsonnet/commit/12d0d1f9ce8e609b85b51484d487cace6c5574a0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/12d0d1f9ce8e609b85b51484d487cace6c5574a0/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d198cf81a5e910a82b0a1843cfd0c3dd648a904e", "url": "https://api.github.com/repos/google/jsonnet/commits/d198cf81a5e910a82b0a1843cfd0c3dd648a904e", "html_url": "https://github.com/google/jsonnet/commit/d198cf81a5e910a82b0a1843cfd0c3dd648a904e"}]}, {"sha": "d198cf81a5e910a82b0a1843cfd0c3dd648a904e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:59:07Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:59:07Z"}, "message": "Bump version", "tree": {"sha": "d23ce0e9c01ef144eac43bc3a4894b197c21ed85", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d23ce0e9c01ef144eac43bc3a4894b197c21ed85"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d198cf81a5e910a82b0a1843cfd0c3dd648a904e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d198cf81a5e910a82b0a1843cfd0c3dd648a904e", "html_url": "https://github.com/google/jsonnet/commit/d198cf81a5e910a82b0a1843cfd0c3dd648a904e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d198cf81a5e910a82b0a1843cfd0c3dd648a904e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e3e9c7cbda8ca749f54428484c9ebb365d07421", "url": "https://api.github.com/repos/google/jsonnet/commits/7e3e9c7cbda8ca749f54428484c9ebb365d07421", "html_url": "https://github.com/google/jsonnet/commit/7e3e9c7cbda8ca749f54428484c9ebb365d07421"}]}, {"sha": "7e3e9c7cbda8ca749f54428484c9ebb365d07421", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:49:12Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:49:12Z"}, "message": "Bump version to -pre", "tree": {"sha": "59f28f90cf05e759c02bc363be82523dd2bab533", "url": "https://api.github.com/repos/google/jsonnet/git/trees/59f28f90cf05e759c02bc363be82523dd2bab533"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7e3e9c7cbda8ca749f54428484c9ebb365d07421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7e3e9c7cbda8ca749f54428484c9ebb365d07421", "html_url": "https://github.com/google/jsonnet/commit/7e3e9c7cbda8ca749f54428484c9ebb365d07421", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7e3e9c7cbda8ca749f54428484c9ebb365d07421/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3b1fa72e2407a42a8ede9c481cbe5353b9d6c6b", "url": "https://api.github.com/repos/google/jsonnet/commits/f3b1fa72e2407a42a8ede9c481cbe5353b9d6c6b", "html_url": "https://github.com/google/jsonnet/commit/f3b1fa72e2407a42a8ede9c481cbe5353b9d6c6b"}]}, {"sha": "f3b1fa72e2407a42a8ede9c481cbe5353b9d6c6b", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:48:00Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:48:00Z"}, "message": "Disable python module in Bazel", "tree": {"sha": "07d3be5f08d8e4a18fdee3436188a36981a0aab5", "url": "https://api.github.com/repos/google/jsonnet/git/trees/07d3be5f08d8e4a18fdee3436188a36981a0aab5"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/f3b1fa72e2407a42a8ede9c481cbe5353b9d6c6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/f3b1fa72e2407a42a8ede9c481cbe5353b9d6c6b", "html_url": "https://github.com/google/jsonnet/commit/f3b1fa72e2407a42a8ede9c481cbe5353b9d6c6b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/f3b1fa72e2407a42a8ede9c481cbe5353b9d6c6b/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05da44191206b0d943f41f870f7fee7c5e5a2cbc", "url": "https://api.github.com/repos/google/jsonnet/commits/05da44191206b0d943f41f870f7fee7c5e5a2cbc", "html_url": "https://github.com/google/jsonnet/commit/05da44191206b0d943f41f870f7fee7c5e5a2cbc"}]}, {"sha": "05da44191206b0d943f41f870f7fee7c5e5a2cbc", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:14:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-21T02:14:27Z"}, "message": "Merge pull request #318 from sparkprime/permissive_extends\n\nPermissive extends", "tree": {"sha": "c4cc4997c0338b7edee352835b01f9525b814d0d", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c4cc4997c0338b7edee352835b01f9525b814d0d"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/05da44191206b0d943f41f870f7fee7c5e5a2cbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/05da44191206b0d943f41f870f7fee7c5e5a2cbc", "html_url": "https://github.com/google/jsonnet/commit/05da44191206b0d943f41f870f7fee7c5e5a2cbc", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/05da44191206b0d943f41f870f7fee7c5e5a2cbc/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36001c09a3a06dae63a57eaf075a76abdc6dd13d", "url": "https://api.github.com/repos/google/jsonnet/commits/36001c09a3a06dae63a57eaf075a76abdc6dd13d", "html_url": "https://github.com/google/jsonnet/commit/36001c09a3a06dae63a57eaf075a76abdc6dd13d"}, {"sha": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "url": "https://api.github.com/repos/google/jsonnet/commits/c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "html_url": "https://github.com/google/jsonnet/commit/c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447"}]}, {"sha": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-20T18:51:58Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:04:50Z"}, "message": "Update tutorial", "tree": {"sha": "c4cc4997c0338b7edee352835b01f9525b814d0d", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c4cc4997c0338b7edee352835b01f9525b814d0d"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "html_url": "https://github.com/google/jsonnet/commit/c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "380b6e94cf059709a0e63b10a4406bca7d916e3a", "url": "https://api.github.com/repos/google/jsonnet/commits/380b6e94cf059709a0e63b10a4406bca7d916e3a", "html_url": "https://github.com/google/jsonnet/commit/380b6e94cf059709a0e63b10a4406bca7d916e3a"}]}, {"sha": "380b6e94cf059709a0e63b10a4406bca7d916e3a", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-20T17:39:21Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:04:50Z"}, "message": "Modify +: semantics", "tree": {"sha": "7d254b444b1020f351aaa918f3eb9ea92d09278b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/7d254b444b1020f351aaa918f3eb9ea92d09278b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/380b6e94cf059709a0e63b10a4406bca7d916e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/380b6e94cf059709a0e63b10a4406bca7d916e3a", "html_url": "https://github.com/google/jsonnet/commit/380b6e94cf059709a0e63b10a4406bca7d916e3a", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/380b6e94cf059709a0e63b10a4406bca7d916e3a/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05b3fe691cd6b0ad0c6fbc024f3edd0a69497c41", "url": "https://api.github.com/repos/google/jsonnet/commits/05b3fe691cd6b0ad0c6fbc024f3edd0a69497c41", "html_url": "https://github.com/google/jsonnet/commit/05b3fe691cd6b0ad0c6fbc024f3edd0a69497c41"}]}, {"sha": "05b3fe691cd6b0ad0c6fbc024f3edd0a69497c41", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-19T22:49:14Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:04:50Z"}, "message": "add \"super in\" and \"e in e\"", "tree": {"sha": "b7b549320e59078ad636a85d513ac5fdfc284cae", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b7b549320e59078ad636a85d513ac5fdfc284cae"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/05b3fe691cd6b0ad0c6fbc024f3edd0a69497c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/05b3fe691cd6b0ad0c6fbc024f3edd0a69497c41", "html_url": "https://github.com/google/jsonnet/commit/05b3fe691cd6b0ad0c6fbc024f3edd0a69497c41", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/05b3fe691cd6b0ad0c6fbc024f3edd0a69497c41/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e2749d65e603a52b42cf9ad6fb406fa004301f0", "url": "https://api.github.com/repos/google/jsonnet/commits/0e2749d65e603a52b42cf9ad6fb406fa004301f0", "html_url": "https://github.com/google/jsonnet/commit/0e2749d65e603a52b42cf9ad6fb406fa004301f0"}]}, {"sha": "0e2749d65e603a52b42cf9ad6fb406fa004301f0", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-03T22:33:58Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T02:04:47Z"}, "message": "Add `e in e` and `e in super`, desugar +: in a more permissive way", "tree": {"sha": "987272a3883af39480d352124fa1c3ae3fc1b6f4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/987272a3883af39480d352124fa1c3ae3fc1b6f4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/0e2749d65e603a52b42cf9ad6fb406fa004301f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/0e2749d65e603a52b42cf9ad6fb406fa004301f0", "html_url": "https://github.com/google/jsonnet/commit/0e2749d65e603a52b42cf9ad6fb406fa004301f0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/0e2749d65e603a52b42cf9ad6fb406fa004301f0/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36001c09a3a06dae63a57eaf075a76abdc6dd13d", "url": "https://api.github.com/repos/google/jsonnet/commits/36001c09a3a06dae63a57eaf075a76abdc6dd13d", "html_url": "https://github.com/google/jsonnet/commit/36001c09a3a06dae63a57eaf075a76abdc6dd13d"}]}, {"sha": "36001c09a3a06dae63a57eaf075a76abdc6dd13d", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T01:58:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-21T01:58:11Z"}, "message": "Merge pull request #320 from sparkprime/refactor\n\nRefactor", "tree": {"sha": "9ae907a618dfca7bcb764cc8deebe7c85c84eab7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9ae907a618dfca7bcb764cc8deebe7c85c84eab7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/36001c09a3a06dae63a57eaf075a76abdc6dd13d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/36001c09a3a06dae63a57eaf075a76abdc6dd13d", "html_url": "https://github.com/google/jsonnet/commit/36001c09a3a06dae63a57eaf075a76abdc6dd13d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/36001c09a3a06dae63a57eaf075a76abdc6dd13d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30b104586e84259eb7570b7f8af5eeee4c4cc2b1", "url": "https://api.github.com/repos/google/jsonnet/commits/30b104586e84259eb7570b7f8af5eeee4c4cc2b1", "html_url": "https://github.com/google/jsonnet/commit/30b104586e84259eb7570b7f8af5eeee4c4cc2b1"}, {"sha": "60af260dfa8db3a6f0304dddf6942a78cd879424", "url": "https://api.github.com/repos/google/jsonnet/commits/60af260dfa8db3a6f0304dddf6942a78cd879424", "html_url": "https://github.com/google/jsonnet/commit/60af260dfa8db3a6f0304dddf6942a78cd879424"}]}, {"sha": "60af260dfa8db3a6f0304dddf6942a78cd879424", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-19T22:48:36Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T01:55:26Z"}, "message": "Refactor and improve existing spec", "tree": {"sha": "36bb22b8a0c00adf8d07d25eb7771ebf6c4c5af3", "url": "https://api.github.com/repos/google/jsonnet/git/trees/36bb22b8a0c00adf8d07d25eb7771ebf6c4c5af3"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/60af260dfa8db3a6f0304dddf6942a78cd879424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/60af260dfa8db3a6f0304dddf6942a78cd879424", "html_url": "https://github.com/google/jsonnet/commit/60af260dfa8db3a6f0304dddf6942a78cd879424", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/60af260dfa8db3a6f0304dddf6942a78cd879424/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06c72c1a399eba631d420c885c9883d6af9f4c44", "url": "https://api.github.com/repos/google/jsonnet/commits/06c72c1a399eba631d420c885c9883d6af9f4c44", "html_url": "https://github.com/google/jsonnet/commit/06c72c1a399eba631d420c885c9883d6af9f4c44"}]}, {"sha": "06c72c1a399eba631d420c885c9883d6af9f4c44", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-13T16:17:45Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-21T01:55:23Z"}, "message": "Rename to UString, UStringStream", "tree": {"sha": "494dd1c7d84490d15b1228ce4b17702266887561", "url": "https://api.github.com/repos/google/jsonnet/git/trees/494dd1c7d84490d15b1228ce4b17702266887561"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/06c72c1a399eba631d420c885c9883d6af9f4c44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/06c72c1a399eba631d420c885c9883d6af9f4c44", "html_url": "https://github.com/google/jsonnet/commit/06c72c1a399eba631d420c885c9883d6af9f4c44", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/06c72c1a399eba631d420c885c9883d6af9f4c44/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d565c690b50844d330774477021dde3754ab22c", "url": "https://api.github.com/repos/google/jsonnet/commits/7d565c690b50844d330774477021dde3754ab22c", "html_url": "https://github.com/google/jsonnet/commit/7d565c690b50844d330774477021dde3754ab22c"}]}, {"sha": "7d565c690b50844d330774477021dde3754ab22c", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-13T16:14:19Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-20T22:28:18Z"}, "message": "Lines were too long", "tree": {"sha": "5ae2f51b6bb33771ac65fe12618e6d1b7b2062a8", "url": "https://api.github.com/repos/google/jsonnet/git/trees/5ae2f51b6bb33771ac65fe12618e6d1b7b2062a8"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7d565c690b50844d330774477021dde3754ab22c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7d565c690b50844d330774477021dde3754ab22c", "html_url": "https://github.com/google/jsonnet/commit/7d565c690b50844d330774477021dde3754ab22c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7d565c690b50844d330774477021dde3754ab22c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f6480f86e43492f14a50ebdc64d3978d56af412", "url": "https://api.github.com/repos/google/jsonnet/commits/7f6480f86e43492f14a50ebdc64d3978d56af412", "html_url": "https://github.com/google/jsonnet/commit/7f6480f86e43492f14a50ebdc64d3978d56af412"}]}, {"sha": "30b104586e84259eb7570b7f8af5eeee4c4cc2b1", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-20T18:57:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-20T18:57:12Z"}, "message": "Merge pull request #317 from sparkprime/gcc_depends\n\nReplace make depend with g++ -MM", "tree": {"sha": "e919c6e2cc86c26a316dac1ecd1c0da01074891e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/e919c6e2cc86c26a316dac1ecd1c0da01074891e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/30b104586e84259eb7570b7f8af5eeee4c4cc2b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/30b104586e84259eb7570b7f8af5eeee4c4cc2b1", "html_url": "https://github.com/google/jsonnet/commit/30b104586e84259eb7570b7f8af5eeee4c4cc2b1", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/30b104586e84259eb7570b7f8af5eeee4c4cc2b1/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f6480f86e43492f14a50ebdc64d3978d56af412", "url": "https://api.github.com/repos/google/jsonnet/commits/7f6480f86e43492f14a50ebdc64d3978d56af412", "html_url": "https://github.com/google/jsonnet/commit/7f6480f86e43492f14a50ebdc64d3978d56af412"}, {"sha": "3e84a6ced0064ce74403c30861ee0c1ec4966ca9", "url": "https://api.github.com/repos/google/jsonnet/commits/3e84a6ced0064ce74403c30861ee0c1ec4966ca9", "html_url": "https://github.com/google/jsonnet/commit/3e84a6ced0064ce74403c30861ee0c1ec4966ca9"}]}, {"sha": "7f6480f86e43492f14a50ebdc64d3978d56af412", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-03T18:35:29Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-03T22:35:09Z"}, "message": "Fix uninitialized value UB", "tree": {"sha": "6257735a6f390288719583282e5b96f05dff9d46", "url": "https://api.github.com/repos/google/jsonnet/git/trees/6257735a6f390288719583282e5b96f05dff9d46"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7f6480f86e43492f14a50ebdc64d3978d56af412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7f6480f86e43492f14a50ebdc64d3978d56af412", "html_url": "https://github.com/google/jsonnet/commit/7f6480f86e43492f14a50ebdc64d3978d56af412", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7f6480f86e43492f14a50ebdc64d3978d56af412/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d71e3eca84069174ee12c7b636142b6438df8273", "url": "https://api.github.com/repos/google/jsonnet/commits/d71e3eca84069174ee12c7b636142b6438df8273", "html_url": "https://github.com/google/jsonnet/commit/d71e3eca84069174ee12c7b636142b6438df8273"}]}, {"sha": "3e84a6ced0064ce74403c30861ee0c1ec4966ca9", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-01T17:24:38Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-01T17:24:38Z"}, "message": "Replace make depend with g++ -MM", "tree": {"sha": "dd059a3894f51e533a7406b4c2a91b3b3d63ab6b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/dd059a3894f51e533a7406b4c2a91b3b3d63ab6b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/3e84a6ced0064ce74403c30861ee0c1ec4966ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/3e84a6ced0064ce74403c30861ee0c1ec4966ca9", "html_url": "https://github.com/google/jsonnet/commit/3e84a6ced0064ce74403c30861ee0c1ec4966ca9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/3e84a6ced0064ce74403c30861ee0c1ec4966ca9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d71e3eca84069174ee12c7b636142b6438df8273", "url": "https://api.github.com/repos/google/jsonnet/commits/d71e3eca84069174ee12c7b636142b6438df8273", "html_url": "https://github.com/google/jsonnet/commit/d71e3eca84069174ee12c7b636142b6438df8273"}]}, {"sha": "d71e3eca84069174ee12c7b636142b6438df8273", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-01T02:15:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-01T02:15:39Z"}, "message": "Merge pull request #315 from jbeda/fix-depend\n\nFix `make depend` to look at right paths", "tree": {"sha": "72ee16a6cecb1caa3e5532fbdee4014cf98a9e4a", "url": "https://api.github.com/repos/google/jsonnet/git/trees/72ee16a6cecb1caa3e5532fbdee4014cf98a9e4a"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d71e3eca84069174ee12c7b636142b6438df8273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d71e3eca84069174ee12c7b636142b6438df8273", "html_url": "https://github.com/google/jsonnet/commit/d71e3eca84069174ee12c7b636142b6438df8273", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d71e3eca84069174ee12c7b636142b6438df8273/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e88b9e3a4046be1d7312cef3fca09c35eaa0fa94", "url": "https://api.github.com/repos/google/jsonnet/commits/e88b9e3a4046be1d7312cef3fca09c35eaa0fa94", "html_url": "https://github.com/google/jsonnet/commit/e88b9e3a4046be1d7312cef3fca09c35eaa0fa94"}, {"sha": "d875726ff3acce468c75b4fb486770511670d926", "url": "https://api.github.com/repos/google/jsonnet/commits/d875726ff3acce468c75b4fb486770511670d926", "html_url": "https://github.com/google/jsonnet/commit/d875726ff3acce468c75b4fb486770511670d926"}]}, {"sha": "e88b9e3a4046be1d7312cef3fca09c35eaa0fa94", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-06-01T02:14:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-01T02:14:16Z"}, "message": "Merge pull request #314 from jbeda/prune\n\nAdd `prune` to stdlib", "tree": {"sha": "bbf8f47504128da2a983826e2309baf706eac391", "url": "https://api.github.com/repos/google/jsonnet/git/trees/bbf8f47504128da2a983826e2309baf706eac391"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e88b9e3a4046be1d7312cef3fca09c35eaa0fa94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e88b9e3a4046be1d7312cef3fca09c35eaa0fa94", "html_url": "https://github.com/google/jsonnet/commit/e88b9e3a4046be1d7312cef3fca09c35eaa0fa94", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e88b9e3a4046be1d7312cef3fca09c35eaa0fa94/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c99297cc84df6ace5bf14f94064c0f9ecca51524", "url": "https://api.github.com/repos/google/jsonnet/commits/c99297cc84df6ace5bf14f94064c0f9ecca51524", "html_url": "https://github.com/google/jsonnet/commit/c99297cc84df6ace5bf14f94064c0f9ecca51524"}, {"sha": "a6209f0d2a0a03345740a1df4ad0b0d6a671c8b0", "url": "https://api.github.com/repos/google/jsonnet/commits/a6209f0d2a0a03345740a1df4ad0b0d6a671c8b0", "html_url": "https://github.com/google/jsonnet/commit/a6209f0d2a0a03345740a1df4ad0b0d6a671c8b0"}]}, {"sha": "d875726ff3acce468c75b4fb486770511670d926", "commit": {"author": {"name": "Joe Beda", "email": "joe.github@bedafamily.com", "date": "2017-05-31T23:46:10Z"}, "committer": {"name": "Joe Beda", "email": "joe.github@bedafamily.com", "date": "2017-06-01T01:13:02Z"}, "message": "Fix `make depend` to look at right paths", "tree": {"sha": "7b9323757b133fb3f222623211a4f895d367c6c0", "url": "https://api.github.com/repos/google/jsonnet/git/trees/7b9323757b133fb3f222623211a4f895d367c6c0"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d875726ff3acce468c75b4fb486770511670d926", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZL2ohAAoJEEKWiYxjo1kdVNgP/3mIsdMbVOiI23u5rDfGuSeP\nqCY+UyiVTZhIMJzGOcvGyp3ZupBoUxNyHrYqRaI2QtaKtXJ2p+V2xjwq7qbeIjNf\nPvJPzYv4ith17n7jytR2hHTaxGqEBqskDozKs4l1uHdl410QiT0gjTnY6bKvzVeq\noOwxVNiFQumfSFt/5qbfFpucH6GNpbA8kDv2TBfZpmMq7iVZJHV+ZJtJnzpDqIzw\nxY7zK+PMoi+/c51LG9ZCnARHfmNg0NqK+rEEZaE0miKfC5cXsEPJNmn7cqHgS2+L\nTfdgAyYDzUwuCsqChluWAV3QZ00svhqZULzorPPDf3XyhEdVnhSUnVGDm7sNj0Ac\n8MMTNlWRo+lL1QD6sUbQzIKHnreSAOOqotQbaCXCAnly5+HBgw8mUvgxI87gKJ8K\nY42H/jKv/gl5UMqwwHCp46LSNUQjEx1DrM8SpNmKyIfY2sgZRhAJEZK5E4fNfZKQ\nqU1okp2JtgRa/kOmro1qEuE12pQ/Zj6OK8DoC8o8pqXtHG8bac99RCQJShqmnhqG\nGwP56vycWsYWI+RxG/cFtgl+VQbGtMl47Q6tTq7Fr4TJcgUAXdk2g50B2asiJmIF\ns0ZyCqfLeeGWfpNcDpJQZbQ36b3eqVLMyGFdvSHvvH3TodZeG8anaqfH7YMeoJFs\nsL0iQgDh4yVVsSS2Ztt2\n=d/Vc\n-----END PGP SIGNATURE-----", "payload": "tree 7b9323757b133fb3f222623211a4f895d367c6c0\nparent c99297cc84df6ace5bf14f94064c0f9ecca51524\nauthor Joe Beda <joe.github@bedafamily.com> 1496274370 -0700\ncommitter Joe Beda <joe.github@bedafamily.com> 1496279582 -0700\n\nFix `make depend` to look at right paths\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d875726ff3acce468c75b4fb486770511670d926", "html_url": "https://github.com/google/jsonnet/commit/d875726ff3acce468c75b4fb486770511670d926", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d875726ff3acce468c75b4fb486770511670d926/comments", "author": {"login": "jbeda", "id": 37310, "avatar_url": "https://avatars2.githubusercontent.com/u/37310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeda", "html_url": "https://github.com/jbeda", "followers_url": "https://api.github.com/users/jbeda/followers", "following_url": "https://api.github.com/users/jbeda/following{/other_user}", "gists_url": "https://api.github.com/users/jbeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeda/subscriptions", "organizations_url": "https://api.github.com/users/jbeda/orgs", "repos_url": "https://api.github.com/users/jbeda/repos", "events_url": "https://api.github.com/users/jbeda/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbeda", "id": 37310, "avatar_url": "https://avatars2.githubusercontent.com/u/37310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeda", "html_url": "https://github.com/jbeda", "followers_url": "https://api.github.com/users/jbeda/followers", "following_url": "https://api.github.com/users/jbeda/following{/other_user}", "gists_url": "https://api.github.com/users/jbeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeda/subscriptions", "organizations_url": "https://api.github.com/users/jbeda/orgs", "repos_url": "https://api.github.com/users/jbeda/repos", "events_url": "https://api.github.com/users/jbeda/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c99297cc84df6ace5bf14f94064c0f9ecca51524", "url": "https://api.github.com/repos/google/jsonnet/commits/c99297cc84df6ace5bf14f94064c0f9ecca51524", "html_url": "https://github.com/google/jsonnet/commit/c99297cc84df6ace5bf14f94064c0f9ecca51524"}]}, {"sha": "a6209f0d2a0a03345740a1df4ad0b0d6a671c8b0", "commit": {"author": {"name": "Joe Beda", "email": "joe.github@bedafamily.com", "date": "2017-06-01T00:06:47Z"}, "committer": {"name": "Joe Beda", "email": "joe.github@bedafamily.com", "date": "2017-06-01T00:57:49Z"}, "message": "Add prune to stdlib", "tree": {"sha": "bbf8f47504128da2a983826e2309baf706eac391", "url": "https://api.github.com/repos/google/jsonnet/git/trees/bbf8f47504128da2a983826e2309baf706eac391"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a6209f0d2a0a03345740a1df4ad0b0d6a671c8b0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZL2aNAAoJEEKWiYxjo1kdkgoP/jdVis4wZDfEUrhv3BOuQ1CT\nNz0lCtf94asv0iNR/SvPaNOtvCBrMIG/rEirIxBAGlL8SNRk5LksfVKa/ty77xaJ\nCcPdOYCHCErSqVLlPYpQoQSR1LarwKGNGr/c3RW5Hm6XSJbjkQQOtXIhcuKXu/Oh\nPCRtcYUTaRbqD4eX7nGOZUnSxaHrRrwqgavxr7UyUKil0jEy7uU5GZH3iKdMIQZO\nDL+H2ISaKLp2f/1G4KjCP4QuVTsJKZZNRtzUECKkWOKcNlKP4UgO2c9Y62Hn279G\nYd+tkicePeYgctTp3z4w7G1CtIw7wb9az4VMoxNlHG5qxtC6MMhz7Q9fRbXXmVcJ\nD0epmEeVZiHswjGm71f5c8nwX8bsLki59bL8IeGGYax7Lq052LTWUJXzOKKx82Ie\n/Ge4lGXDVdnGw+T5qisnvG2H+cxXVoffJ8Ia5swLNl+L0vp35OiUvbnmZHFMCf9L\n83VGSdCcl45jCvKxjCuh5CExmW+lN8NeQLlyAh9Zc4BbV2x9v7V4+L07k8eYf0qB\ne6xNowXYTFqBSoQbweSR5Uj1DJETqXltfpTqeo+vgP7Orox7n0xxG5NvZEUkXoVY\nb4XDGERN6uElSkR171BiLEHw7w4G0YCKOqcw8jnX2rTOPke3+dCarQiI8pcf2WxZ\niLcFo9Jq5oJ2kcb7tKm+\n=fqO2\n-----END PGP SIGNATURE-----", "payload": "tree bbf8f47504128da2a983826e2309baf706eac391\nparent c99297cc84df6ace5bf14f94064c0f9ecca51524\nauthor Joe Beda <joe.github@bedafamily.com> 1496275607 -0700\ncommitter Joe Beda <joe.github@bedafamily.com> 1496278669 -0700\n\nAdd prune to stdlib\n"}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a6209f0d2a0a03345740a1df4ad0b0d6a671c8b0", "html_url": "https://github.com/google/jsonnet/commit/a6209f0d2a0a03345740a1df4ad0b0d6a671c8b0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a6209f0d2a0a03345740a1df4ad0b0d6a671c8b0/comments", "author": {"login": "jbeda", "id": 37310, "avatar_url": "https://avatars2.githubusercontent.com/u/37310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeda", "html_url": "https://github.com/jbeda", "followers_url": "https://api.github.com/users/jbeda/followers", "following_url": "https://api.github.com/users/jbeda/following{/other_user}", "gists_url": "https://api.github.com/users/jbeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeda/subscriptions", "organizations_url": "https://api.github.com/users/jbeda/orgs", "repos_url": "https://api.github.com/users/jbeda/repos", "events_url": "https://api.github.com/users/jbeda/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbeda", "id": 37310, "avatar_url": "https://avatars2.githubusercontent.com/u/37310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeda", "html_url": "https://github.com/jbeda", "followers_url": "https://api.github.com/users/jbeda/followers", "following_url": "https://api.github.com/users/jbeda/following{/other_user}", "gists_url": "https://api.github.com/users/jbeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeda/subscriptions", "organizations_url": "https://api.github.com/users/jbeda/orgs", "repos_url": "https://api.github.com/users/jbeda/repos", "events_url": "https://api.github.com/users/jbeda/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c99297cc84df6ace5bf14f94064c0f9ecca51524", "url": "https://api.github.com/repos/google/jsonnet/commits/c99297cc84df6ace5bf14f94064c0f9ecca51524", "html_url": "https://github.com/google/jsonnet/commit/c99297cc84df6ace5bf14f94064c0f9ecca51524"}]}, {"sha": "c99297cc84df6ace5bf14f94064c0f9ecca51524", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-05-31T15:38:06Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-05-31T15:38:06Z"}, "message": "Fix stale comments", "tree": {"sha": "78cb5c2d7fb48ae44133c33138687af621c75ffa", "url": "https://api.github.com/repos/google/jsonnet/git/trees/78cb5c2d7fb48ae44133c33138687af621c75ffa"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c99297cc84df6ace5bf14f94064c0f9ecca51524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c99297cc84df6ace5bf14f94064c0f9ecca51524", "html_url": "https://github.com/google/jsonnet/commit/c99297cc84df6ace5bf14f94064c0f9ecca51524", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c99297cc84df6ace5bf14f94064c0f9ecca51524/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a2d481485f7a1535160d2052f240db2a5b69a8e", "url": "https://api.github.com/repos/google/jsonnet/commits/1a2d481485f7a1535160d2052f240db2a5b69a8e", "html_url": "https://github.com/google/jsonnet/commit/1a2d481485f7a1535160d2052f240db2a5b69a8e"}]}, {"sha": "1a2d481485f7a1535160d2052f240db2a5b69a8e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-05-24T20:25:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-24T20:25:09Z"}, "message": "Merge pull request #309 from devth/master\n\nUse alpine based Docker image and set its entrypoint", "tree": {"sha": "851b13b6cae84299def68da8616f4cdd44af3c47", "url": "https://api.github.com/repos/google/jsonnet/git/trees/851b13b6cae84299def68da8616f4cdd44af3c47"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1a2d481485f7a1535160d2052f240db2a5b69a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1a2d481485f7a1535160d2052f240db2a5b69a8e", "html_url": "https://github.com/google/jsonnet/commit/1a2d481485f7a1535160d2052f240db2a5b69a8e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1a2d481485f7a1535160d2052f240db2a5b69a8e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "942b12a82c2cc57d20391e02195e446d3ebecb06", "url": "https://api.github.com/repos/google/jsonnet/commits/942b12a82c2cc57d20391e02195e446d3ebecb06", "html_url": "https://github.com/google/jsonnet/commit/942b12a82c2cc57d20391e02195e446d3ebecb06"}, {"sha": "2f5ae7694c830f19ecbe6a02d7c6605e8c97712b", "url": "https://api.github.com/repos/google/jsonnet/commits/2f5ae7694c830f19ecbe6a02d7c6605e8c97712b", "html_url": "https://github.com/google/jsonnet/commit/2f5ae7694c830f19ecbe6a02d7c6605e8c97712b"}]}, {"sha": "2f5ae7694c830f19ecbe6a02d7c6605e8c97712b", "commit": {"author": {"name": "Trevor Hartman", "email": "trevorhartman@gmail.com", "date": "2017-05-09T14:15:34Z"}, "committer": {"name": "Trevor Hartman", "email": "trevorhartman@gmail.com", "date": "2017-05-09T14:15:34Z"}, "message": "Use alpine based Docker image and set its entrypoint", "tree": {"sha": "851b13b6cae84299def68da8616f4cdd44af3c47", "url": "https://api.github.com/repos/google/jsonnet/git/trees/851b13b6cae84299def68da8616f4cdd44af3c47"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2f5ae7694c830f19ecbe6a02d7c6605e8c97712b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2f5ae7694c830f19ecbe6a02d7c6605e8c97712b", "html_url": "https://github.com/google/jsonnet/commit/2f5ae7694c830f19ecbe6a02d7c6605e8c97712b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2f5ae7694c830f19ecbe6a02d7c6605e8c97712b/comments", "author": {"login": "devth", "id": 86107, "avatar_url": "https://avatars1.githubusercontent.com/u/86107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devth", "html_url": "https://github.com/devth", "followers_url": "https://api.github.com/users/devth/followers", "following_url": "https://api.github.com/users/devth/following{/other_user}", "gists_url": "https://api.github.com/users/devth/gists{/gist_id}", "starred_url": "https://api.github.com/users/devth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devth/subscriptions", "organizations_url": "https://api.github.com/users/devth/orgs", "repos_url": "https://api.github.com/users/devth/repos", "events_url": "https://api.github.com/users/devth/events{/privacy}", "received_events_url": "https://api.github.com/users/devth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devth", "id": 86107, "avatar_url": "https://avatars1.githubusercontent.com/u/86107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devth", "html_url": "https://github.com/devth", "followers_url": "https://api.github.com/users/devth/followers", "following_url": "https://api.github.com/users/devth/following{/other_user}", "gists_url": "https://api.github.com/users/devth/gists{/gist_id}", "starred_url": "https://api.github.com/users/devth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devth/subscriptions", "organizations_url": "https://api.github.com/users/devth/orgs", "repos_url": "https://api.github.com/users/devth/repos", "events_url": "https://api.github.com/users/devth/events{/privacy}", "received_events_url": "https://api.github.com/users/devth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "942b12a82c2cc57d20391e02195e446d3ebecb06", "url": "https://api.github.com/repos/google/jsonnet/commits/942b12a82c2cc57d20391e02195e446d3ebecb06", "html_url": "https://github.com/google/jsonnet/commit/942b12a82c2cc57d20391e02195e446d3ebecb06"}]}, {"sha": "942b12a82c2cc57d20391e02195e446d3ebecb06", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-02-01T01:17:47Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-02-01T01:17:47Z"}, "message": "Bump version to 0.9.3", "tree": {"sha": "1a1723e9f1aab437ba1b722c1123ca95840c0e51", "url": "https://api.github.com/repos/google/jsonnet/git/trees/1a1723e9f1aab437ba1b722c1123ca95840c0e51"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/942b12a82c2cc57d20391e02195e446d3ebecb06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/942b12a82c2cc57d20391e02195e446d3ebecb06", "html_url": "https://github.com/google/jsonnet/commit/942b12a82c2cc57d20391e02195e446d3ebecb06", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/942b12a82c2cc57d20391e02195e446d3ebecb06/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c746649c14cd19ad6b02f6fad4d3589fa4b61cc", "url": "https://api.github.com/repos/google/jsonnet/commits/6c746649c14cd19ad6b02f6fad4d3589fa4b61cc", "html_url": "https://github.com/google/jsonnet/commit/6c746649c14cd19ad6b02f6fad4d3589fa4b61cc"}]}, {"sha": "6c746649c14cd19ad6b02f6fad4d3589fa4b61cc", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-02-01T01:17:35Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-02-01T01:17:35Z"}, "message": "Fix Python package", "tree": {"sha": "41df1d0a64ce4f6a3d1e05ae328b294cba437886", "url": "https://api.github.com/repos/google/jsonnet/git/trees/41df1d0a64ce4f6a3d1e05ae328b294cba437886"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/6c746649c14cd19ad6b02f6fad4d3589fa4b61cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/6c746649c14cd19ad6b02f6fad4d3589fa4b61cc", "html_url": "https://github.com/google/jsonnet/commit/6c746649c14cd19ad6b02f6fad4d3589fa4b61cc", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/6c746649c14cd19ad6b02f6fad4d3589fa4b61cc/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "238a96a916e1a3d33cd17ec764119664008f4e5d", "url": "https://api.github.com/repos/google/jsonnet/commits/238a96a916e1a3d33cd17ec764119664008f4e5d", "html_url": "https://github.com/google/jsonnet/commit/238a96a916e1a3d33cd17ec764119664008f4e5d"}]}, {"sha": "238a96a916e1a3d33cd17ec764119664008f4e5d", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-31T00:39:43Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-31T00:39:43Z"}, "message": "Bump version to v0.9.2", "tree": {"sha": "94be07471718aabf96c3e4b283cc295d42f7fc03", "url": "https://api.github.com/repos/google/jsonnet/git/trees/94be07471718aabf96c3e4b283cc295d42f7fc03"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/238a96a916e1a3d33cd17ec764119664008f4e5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/238a96a916e1a3d33cd17ec764119664008f4e5d", "html_url": "https://github.com/google/jsonnet/commit/238a96a916e1a3d33cd17ec764119664008f4e5d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/238a96a916e1a3d33cd17ec764119664008f4e5d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e3a127b9c4accf9d22847e0fe0173404f6587f5", "url": "https://api.github.com/repos/google/jsonnet/commits/4e3a127b9c4accf9d22847e0fe0173404f6587f5", "html_url": "https://github.com/google/jsonnet/commit/4e3a127b9c4accf9d22847e0fe0173404f6587f5"}]}, {"sha": "4e3a127b9c4accf9d22847e0fe0173404f6587f5", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-30T20:59:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-30T20:59:08Z"}, "message": "Merge pull request #296 from sparkprime/fix_buffer_overflow\n\nAvoid popping off the end of the token stream", "tree": {"sha": "c5fc21e335934865bb7b89ad41460619c483e537", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c5fc21e335934865bb7b89ad41460619c483e537"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4e3a127b9c4accf9d22847e0fe0173404f6587f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4e3a127b9c4accf9d22847e0fe0173404f6587f5", "html_url": "https://github.com/google/jsonnet/commit/4e3a127b9c4accf9d22847e0fe0173404f6587f5", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4e3a127b9c4accf9d22847e0fe0173404f6587f5/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c08593f289b828357e6d8090d637b4fc6eb8282", "url": "https://api.github.com/repos/google/jsonnet/commits/3c08593f289b828357e6d8090d637b4fc6eb8282", "html_url": "https://github.com/google/jsonnet/commit/3c08593f289b828357e6d8090d637b4fc6eb8282"}, {"sha": "456793b02c945b3fab3217df14634011f2dfe8f9", "url": "https://api.github.com/repos/google/jsonnet/commits/456793b02c945b3fab3217df14634011f2dfe8f9", "html_url": "https://github.com/google/jsonnet/commit/456793b02c945b3fab3217df14634011f2dfe8f9"}]}, {"sha": "3c08593f289b828357e6d8090d637b4fc6eb8282", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-30T20:57:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-30T20:57:36Z"}, "message": "Merge pull request #297 from sparkprime/always_cleanup_vm\n\nFix #295", "tree": {"sha": "481eb62fb464afb4da9db716e281f456634dd3fe", "url": "https://api.github.com/repos/google/jsonnet/git/trees/481eb62fb464afb4da9db716e281f456634dd3fe"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/3c08593f289b828357e6d8090d637b4fc6eb8282", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/3c08593f289b828357e6d8090d637b4fc6eb8282", "html_url": "https://github.com/google/jsonnet/commit/3c08593f289b828357e6d8090d637b4fc6eb8282", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/3c08593f289b828357e6d8090d637b4fc6eb8282/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "061374008db62ee019d85c6f2bb242e47a996df4", "url": "https://api.github.com/repos/google/jsonnet/commits/061374008db62ee019d85c6f2bb242e47a996df4", "html_url": "https://github.com/google/jsonnet/commit/061374008db62ee019d85c6f2bb242e47a996df4"}, {"sha": "801fd2597bbaaa3c0f0c8f8c9236eadb71424df9", "url": "https://api.github.com/repos/google/jsonnet/commits/801fd2597bbaaa3c0f0c8f8c9236eadb71424df9", "html_url": "https://github.com/google/jsonnet/commit/801fd2597bbaaa3c0f0c8f8c9236eadb71424df9"}]}, {"sha": "801fd2597bbaaa3c0f0c8f8c9236eadb71424df9", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-30T20:56:37Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-30T20:56:37Z"}, "message": "Fix #295", "tree": {"sha": "481eb62fb464afb4da9db716e281f456634dd3fe", "url": "https://api.github.com/repos/google/jsonnet/git/trees/481eb62fb464afb4da9db716e281f456634dd3fe"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/801fd2597bbaaa3c0f0c8f8c9236eadb71424df9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/801fd2597bbaaa3c0f0c8f8c9236eadb71424df9", "html_url": "https://github.com/google/jsonnet/commit/801fd2597bbaaa3c0f0c8f8c9236eadb71424df9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/801fd2597bbaaa3c0f0c8f8c9236eadb71424df9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "061374008db62ee019d85c6f2bb242e47a996df4", "url": "https://api.github.com/repos/google/jsonnet/commits/061374008db62ee019d85c6f2bb242e47a996df4", "html_url": "https://github.com/google/jsonnet/commit/061374008db62ee019d85c6f2bb242e47a996df4"}]}, {"sha": "456793b02c945b3fab3217df14634011f2dfe8f9", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-30T19:10:26Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-30T20:34:55Z"}, "message": "Avoid popping off the end of the token stream, fix parsing of [e::]", "tree": {"sha": "8a28e0f5df5d03ede8d46bdee743f9e820331aae", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8a28e0f5df5d03ede8d46bdee743f9e820331aae"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/456793b02c945b3fab3217df14634011f2dfe8f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/456793b02c945b3fab3217df14634011f2dfe8f9", "html_url": "https://github.com/google/jsonnet/commit/456793b02c945b3fab3217df14634011f2dfe8f9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/456793b02c945b3fab3217df14634011f2dfe8f9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "061374008db62ee019d85c6f2bb242e47a996df4", "url": "https://api.github.com/repos/google/jsonnet/commits/061374008db62ee019d85c6f2bb242e47a996df4", "html_url": "https://github.com/google/jsonnet/commit/061374008db62ee019d85c6f2bb242e47a996df4"}]}, {"sha": "061374008db62ee019d85c6f2bb242e47a996df4", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-29T17:36:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-29T17:36:10Z"}, "message": "Merge pull request #294 from sparkprime/fix_formatter_named_arg_newline\n\nFix formatter behavior around + and ()", "tree": {"sha": "a317bc48f9b00bc7e4e96e9343529234edd4db04", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a317bc48f9b00bc7e4e96e9343529234edd4db04"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/061374008db62ee019d85c6f2bb242e47a996df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/061374008db62ee019d85c6f2bb242e47a996df4", "html_url": "https://github.com/google/jsonnet/commit/061374008db62ee019d85c6f2bb242e47a996df4", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/061374008db62ee019d85c6f2bb242e47a996df4/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dee7f8f34923a2f8ab9e041218bd42d7aad89ba", "url": "https://api.github.com/repos/google/jsonnet/commits/7dee7f8f34923a2f8ab9e041218bd42d7aad89ba", "html_url": "https://github.com/google/jsonnet/commit/7dee7f8f34923a2f8ab9e041218bd42d7aad89ba"}, {"sha": "bf3e11a664e64030b5893ea37a925b8c81d95588", "url": "https://api.github.com/repos/google/jsonnet/commits/bf3e11a664e64030b5893ea37a925b8c81d95588", "html_url": "https://github.com/google/jsonnet/commit/bf3e11a664e64030b5893ea37a925b8c81d95588"}]}, {"sha": "bf3e11a664e64030b5893ea37a925b8c81d95588", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-29T17:34:00Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-29T17:34:14Z"}, "message": "stdlib now passes fmt -n 4", "tree": {"sha": "a317bc48f9b00bc7e4e96e9343529234edd4db04", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a317bc48f9b00bc7e4e96e9343529234edd4db04"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/bf3e11a664e64030b5893ea37a925b8c81d95588", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/bf3e11a664e64030b5893ea37a925b8c81d95588", "html_url": "https://github.com/google/jsonnet/commit/bf3e11a664e64030b5893ea37a925b8c81d95588", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/bf3e11a664e64030b5893ea37a925b8c81d95588/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0f50f7c142958e55be76bcef29ac55b90ba0a0d", "url": "https://api.github.com/repos/google/jsonnet/commits/a0f50f7c142958e55be76bcef29ac55b90ba0a0d", "html_url": "https://github.com/google/jsonnet/commit/a0f50f7c142958e55be76bcef29ac55b90ba0a0d"}]}, {"sha": "a0f50f7c142958e55be76bcef29ac55b90ba0a0d", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-27T22:47:28Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-29T17:20:31Z"}, "message": "Improve reindenter handling of +", "tree": {"sha": "d8b0af7b2ef7cd2fdedcb1258d39d75caf8e91af", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d8b0af7b2ef7cd2fdedcb1258d39d75caf8e91af"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a0f50f7c142958e55be76bcef29ac55b90ba0a0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a0f50f7c142958e55be76bcef29ac55b90ba0a0d", "html_url": "https://github.com/google/jsonnet/commit/a0f50f7c142958e55be76bcef29ac55b90ba0a0d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a0f50f7c142958e55be76bcef29ac55b90ba0a0d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02c02258ffa258635d45ee504bdb00ff3a57ea34", "url": "https://api.github.com/repos/google/jsonnet/commits/02c02258ffa258635d45ee504bdb00ff3a57ea34", "html_url": "https://github.com/google/jsonnet/commit/02c02258ffa258635d45ee504bdb00ff3a57ea34"}]}, {"sha": "02c02258ffa258635d45ee504bdb00ff3a57ea34", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-27T22:47:28Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-29T17:19:14Z"}, "message": "Re-indentation inside paren is now aligned with (", "tree": {"sha": "8c3de1456d76b675d674fc6352762468aba881b8", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8c3de1456d76b675d674fc6352762468aba881b8"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/02c02258ffa258635d45ee504bdb00ff3a57ea34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/02c02258ffa258635d45ee504bdb00ff3a57ea34", "html_url": "https://github.com/google/jsonnet/commit/02c02258ffa258635d45ee504bdb00ff3a57ea34", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/02c02258ffa258635d45ee504bdb00ff3a57ea34/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dee7f8f34923a2f8ab9e041218bd42d7aad89ba", "url": "https://api.github.com/repos/google/jsonnet/commits/7dee7f8f34923a2f8ab9e041218bd42d7aad89ba", "html_url": "https://github.com/google/jsonnet/commit/7dee7f8f34923a2f8ab9e041218bd42d7aad89ba"}]}, {"sha": "7dee7f8f34923a2f8ab9e041218bd42d7aad89ba", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-28T03:02:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-28T03:02:57Z"}, "message": "Merge pull request #293 from sparkprime/add_readme\n\nAdded build instructions to readme.", "tree": {"sha": "a4d2a4b6a4570c555347259ef6e5557bf7e1a23c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a4d2a4b6a4570c555347259ef6e5557bf7e1a23c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7dee7f8f34923a2f8ab9e041218bd42d7aad89ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7dee7f8f34923a2f8ab9e041218bd42d7aad89ba", "html_url": "https://github.com/google/jsonnet/commit/7dee7f8f34923a2f8ab9e041218bd42d7aad89ba", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7dee7f8f34923a2f8ab9e041218bd42d7aad89ba/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700", "url": "https://api.github.com/repos/google/jsonnet/commits/9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700", "html_url": "https://github.com/google/jsonnet/commit/9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700"}, {"sha": "27bf03c1cc0221200735f4a886060626667a5d35", "url": "https://api.github.com/repos/google/jsonnet/commits/27bf03c1cc0221200735f4a886060626667a5d35", "html_url": "https://github.com/google/jsonnet/commit/27bf03c1cc0221200735f4a886060626667a5d35"}]}, {"sha": "27bf03c1cc0221200735f4a886060626667a5d35", "commit": {"author": {"name": "Spencer Stephens", "email": "spencels@google.com", "date": "2016-10-27T20:01:34Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-28T03:01:39Z"}, "message": "Added build instructions to readme.", "tree": {"sha": "a4d2a4b6a4570c555347259ef6e5557bf7e1a23c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a4d2a4b6a4570c555347259ef6e5557bf7e1a23c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/27bf03c1cc0221200735f4a886060626667a5d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/27bf03c1cc0221200735f4a886060626667a5d35", "html_url": "https://github.com/google/jsonnet/commit/27bf03c1cc0221200735f4a886060626667a5d35", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/27bf03c1cc0221200735f4a886060626667a5d35/comments", "author": {"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700", "url": "https://api.github.com/repos/google/jsonnet/commits/9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700", "html_url": "https://github.com/google/jsonnet/commit/9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700"}]}, {"sha": "9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-28T02:54:36Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-28T02:54:36Z"}, "message": "Add new Rust binding", "tree": {"sha": "b07440a932e364cdeb02e25762459845dd0e25a2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b07440a932e364cdeb02e25762459845dd0e25a2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700", "html_url": "https://github.com/google/jsonnet/commit/9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9d7d8d94ed6f9d0e158a53ce894aa6940f5cf700/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d07ba4fd0e9672a8121a75c190aa2e8b862bf8af", "url": "https://api.github.com/repos/google/jsonnet/commits/d07ba4fd0e9672a8121a75c190aa2e8b862bf8af", "html_url": "https://github.com/google/jsonnet/commit/d07ba4fd0e9672a8121a75c190aa2e8b862bf8af"}]}, {"sha": "d07ba4fd0e9672a8121a75c190aa2e8b862bf8af", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-27T23:50:06Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-27T23:50:06Z"}, "message": "Bump version fo v0.9.1", "tree": {"sha": "927d55989cae1a76bf62c5a8fa3cda8548c7fa30", "url": "https://api.github.com/repos/google/jsonnet/git/trees/927d55989cae1a76bf62c5a8fa3cda8548c7fa30"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d07ba4fd0e9672a8121a75c190aa2e8b862bf8af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d07ba4fd0e9672a8121a75c190aa2e8b862bf8af", "html_url": "https://github.com/google/jsonnet/commit/d07ba4fd0e9672a8121a75c190aa2e8b862bf8af", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d07ba4fd0e9672a8121a75c190aa2e8b862bf8af/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f1ee36145a89f9c8cec0064264071cb50b3823f", "url": "https://api.github.com/repos/google/jsonnet/commits/5f1ee36145a89f9c8cec0064264071cb50b3823f", "html_url": "https://github.com/google/jsonnet/commit/5f1ee36145a89f9c8cec0064264071cb50b3823f"}]}, {"sha": "5f1ee36145a89f9c8cec0064264071cb50b3823f", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-27T23:49:54Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-27T23:49:54Z"}, "message": "soften some tabs", "tree": {"sha": "defb233eac1fa8c76b52531fc12ea757b4142377", "url": "https://api.github.com/repos/google/jsonnet/git/trees/defb233eac1fa8c76b52531fc12ea757b4142377"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/5f1ee36145a89f9c8cec0064264071cb50b3823f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/5f1ee36145a89f9c8cec0064264071cb50b3823f", "html_url": "https://github.com/google/jsonnet/commit/5f1ee36145a89f9c8cec0064264071cb50b3823f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/5f1ee36145a89f9c8cec0064264071cb50b3823f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af04b05003ea8c49611b53a78dcc10c215c17ff", "url": "https://api.github.com/repos/google/jsonnet/commits/4af04b05003ea8c49611b53a78dcc10c215c17ff", "html_url": "https://github.com/google/jsonnet/commit/4af04b05003ea8c49611b53a78dcc10c215c17ff"}]}, {"sha": "4af04b05003ea8c49611b53a78dcc10c215c17ff", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-27T20:16:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-27T20:16:25Z"}, "message": "Merge pull request #291 from huggsboson/master\n\nAdd stdlib md5 function", "tree": {"sha": "681b007edcfa0f5566a6e290942b27ec874cee3b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/681b007edcfa0f5566a6e290942b27ec874cee3b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4af04b05003ea8c49611b53a78dcc10c215c17ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4af04b05003ea8c49611b53a78dcc10c215c17ff", "html_url": "https://github.com/google/jsonnet/commit/4af04b05003ea8c49611b53a78dcc10c215c17ff", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4af04b05003ea8c49611b53a78dcc10c215c17ff/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a26de96ff15cd9f44ea11ebeaf36339553b40235", "url": "https://api.github.com/repos/google/jsonnet/commits/a26de96ff15cd9f44ea11ebeaf36339553b40235", "html_url": "https://github.com/google/jsonnet/commit/a26de96ff15cd9f44ea11ebeaf36339553b40235"}, {"sha": "768a0e0c8b1c4d55d099aff6d98d564dcafbda7c", "url": "https://api.github.com/repos/google/jsonnet/commits/768a0e0c8b1c4d55d099aff6d98d564dcafbda7c", "html_url": "https://github.com/google/jsonnet/commit/768a0e0c8b1c4d55d099aff6d98d564dcafbda7c"}]}, {"sha": "768a0e0c8b1c4d55d099aff6d98d564dcafbda7c", "commit": {"author": {"name": "John Huffaker", "email": "jhuffaker@box.com", "date": "2017-01-26T04:47:27Z"}, "committer": {"name": "John Huffaker", "email": "jhuffaker@box.com", "date": "2017-01-27T19:44:01Z"}, "message": "Add stdlib md5 function", "tree": {"sha": "681b007edcfa0f5566a6e290942b27ec874cee3b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/681b007edcfa0f5566a6e290942b27ec874cee3b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/768a0e0c8b1c4d55d099aff6d98d564dcafbda7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/768a0e0c8b1c4d55d099aff6d98d564dcafbda7c", "html_url": "https://github.com/google/jsonnet/commit/768a0e0c8b1c4d55d099aff6d98d564dcafbda7c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/768a0e0c8b1c4d55d099aff6d98d564dcafbda7c/comments", "author": {"login": "huggsboson", "id": 3486668, "avatar_url": "https://avatars1.githubusercontent.com/u/3486668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huggsboson", "html_url": "https://github.com/huggsboson", "followers_url": "https://api.github.com/users/huggsboson/followers", "following_url": "https://api.github.com/users/huggsboson/following{/other_user}", "gists_url": "https://api.github.com/users/huggsboson/gists{/gist_id}", "starred_url": "https://api.github.com/users/huggsboson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huggsboson/subscriptions", "organizations_url": "https://api.github.com/users/huggsboson/orgs", "repos_url": "https://api.github.com/users/huggsboson/repos", "events_url": "https://api.github.com/users/huggsboson/events{/privacy}", "received_events_url": "https://api.github.com/users/huggsboson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huggsboson", "id": 3486668, "avatar_url": "https://avatars1.githubusercontent.com/u/3486668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huggsboson", "html_url": "https://github.com/huggsboson", "followers_url": "https://api.github.com/users/huggsboson/followers", "following_url": "https://api.github.com/users/huggsboson/following{/other_user}", "gists_url": "https://api.github.com/users/huggsboson/gists{/gist_id}", "starred_url": "https://api.github.com/users/huggsboson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huggsboson/subscriptions", "organizations_url": "https://api.github.com/users/huggsboson/orgs", "repos_url": "https://api.github.com/users/huggsboson/repos", "events_url": "https://api.github.com/users/huggsboson/events{/privacy}", "received_events_url": "https://api.github.com/users/huggsboson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a26de96ff15cd9f44ea11ebeaf36339553b40235", "url": "https://api.github.com/repos/google/jsonnet/commits/a26de96ff15cd9f44ea11ebeaf36339553b40235", "html_url": "https://github.com/google/jsonnet/commit/a26de96ff15cd9f44ea11ebeaf36339553b40235"}]}, {"sha": "a26de96ff15cd9f44ea11ebeaf36339553b40235", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-23T17:16:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-23T17:16:04Z"}, "message": "Merge pull request #290 from sparkprime/fix_formatter_named_arg_newline\n\nFix function application named arg on new line", "tree": {"sha": "01f2ba998b3e07700e3ea317caac59286c2ce808", "url": "https://api.github.com/repos/google/jsonnet/git/trees/01f2ba998b3e07700e3ea317caac59286c2ce808"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a26de96ff15cd9f44ea11ebeaf36339553b40235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a26de96ff15cd9f44ea11ebeaf36339553b40235", "html_url": "https://github.com/google/jsonnet/commit/a26de96ff15cd9f44ea11ebeaf36339553b40235", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a26de96ff15cd9f44ea11ebeaf36339553b40235/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2e721dbdfcb639c5eed424226675f84e8827200", "url": "https://api.github.com/repos/google/jsonnet/commits/f2e721dbdfcb639c5eed424226675f84e8827200", "html_url": "https://github.com/google/jsonnet/commit/f2e721dbdfcb639c5eed424226675f84e8827200"}, {"sha": "dd761662b4edb806a96b036a1e50fcd3705289ee", "url": "https://api.github.com/repos/google/jsonnet/commits/dd761662b4edb806a96b036a1e50fcd3705289ee", "html_url": "https://github.com/google/jsonnet/commit/dd761662b4edb806a96b036a1e50fcd3705289ee"}]}, {"sha": "f2e721dbdfcb639c5eed424226675f84e8827200", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-23T17:14:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-23T17:14:31Z"}, "message": "Merge pull request #288 from brbbs/master\n\nAdd fmt test for toplevel binary expression", "tree": {"sha": "028975979adef891639c1049fddb370e822b3f2f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/028975979adef891639c1049fddb370e822b3f2f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/f2e721dbdfcb639c5eed424226675f84e8827200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/f2e721dbdfcb639c5eed424226675f84e8827200", "html_url": "https://github.com/google/jsonnet/commit/f2e721dbdfcb639c5eed424226675f84e8827200", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/f2e721dbdfcb639c5eed424226675f84e8827200/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ea5e41276823831ed96349c90d79da2672ed17b", "url": "https://api.github.com/repos/google/jsonnet/commits/2ea5e41276823831ed96349c90d79da2672ed17b", "html_url": "https://github.com/google/jsonnet/commit/2ea5e41276823831ed96349c90d79da2672ed17b"}, {"sha": "1378fa9f2eb563af2eb807b7b123ef9f90d2e0e9", "url": "https://api.github.com/repos/google/jsonnet/commits/1378fa9f2eb563af2eb807b7b123ef9f90d2e0e9", "html_url": "https://github.com/google/jsonnet/commit/1378fa9f2eb563af2eb807b7b123ef9f90d2e0e9"}]}, {"sha": "dd761662b4edb806a96b036a1e50fcd3705289ee", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-23T17:13:33Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-23T17:13:33Z"}, "message": "Fix function application named arg on new line", "tree": {"sha": "73c183d83f38848d38396e03716e25e9a1e626ef", "url": "https://api.github.com/repos/google/jsonnet/git/trees/73c183d83f38848d38396e03716e25e9a1e626ef"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/dd761662b4edb806a96b036a1e50fcd3705289ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/dd761662b4edb806a96b036a1e50fcd3705289ee", "html_url": "https://github.com/google/jsonnet/commit/dd761662b4edb806a96b036a1e50fcd3705289ee", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/dd761662b4edb806a96b036a1e50fcd3705289ee/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ea5e41276823831ed96349c90d79da2672ed17b", "url": "https://api.github.com/repos/google/jsonnet/commits/2ea5e41276823831ed96349c90d79da2672ed17b", "html_url": "https://github.com/google/jsonnet/commit/2ea5e41276823831ed96349c90d79da2672ed17b"}]}, {"sha": "1378fa9f2eb563af2eb807b7b123ef9f90d2e0e9", "commit": {"author": {"name": "Brad Burlage", "email": "bburlage@webs.com", "date": "2017-01-13T16:14:23Z"}, "committer": {"name": "Brad Burlage", "email": "bburlage@webs.com", "date": "2017-01-13T16:14:23Z"}, "message": "Add fmt test for toplevel binary expression", "tree": {"sha": "028975979adef891639c1049fddb370e822b3f2f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/028975979adef891639c1049fddb370e822b3f2f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1378fa9f2eb563af2eb807b7b123ef9f90d2e0e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1378fa9f2eb563af2eb807b7b123ef9f90d2e0e9", "html_url": "https://github.com/google/jsonnet/commit/1378fa9f2eb563af2eb807b7b123ef9f90d2e0e9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1378fa9f2eb563af2eb807b7b123ef9f90d2e0e9/comments", "author": {"login": "brbbs", "id": 18661073, "avatar_url": "https://avatars1.githubusercontent.com/u/18661073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brbbs", "html_url": "https://github.com/brbbs", "followers_url": "https://api.github.com/users/brbbs/followers", "following_url": "https://api.github.com/users/brbbs/following{/other_user}", "gists_url": "https://api.github.com/users/brbbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/brbbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brbbs/subscriptions", "organizations_url": "https://api.github.com/users/brbbs/orgs", "repos_url": "https://api.github.com/users/brbbs/repos", "events_url": "https://api.github.com/users/brbbs/events{/privacy}", "received_events_url": "https://api.github.com/users/brbbs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brbbs", "id": 18661073, "avatar_url": "https://avatars1.githubusercontent.com/u/18661073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brbbs", "html_url": "https://github.com/brbbs", "followers_url": "https://api.github.com/users/brbbs/followers", "following_url": "https://api.github.com/users/brbbs/following{/other_user}", "gists_url": "https://api.github.com/users/brbbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/brbbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brbbs/subscriptions", "organizations_url": "https://api.github.com/users/brbbs/orgs", "repos_url": "https://api.github.com/users/brbbs/repos", "events_url": "https://api.github.com/users/brbbs/events{/privacy}", "received_events_url": "https://api.github.com/users/brbbs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ea5e41276823831ed96349c90d79da2672ed17b", "url": "https://api.github.com/repos/google/jsonnet/commits/2ea5e41276823831ed96349c90d79da2672ed17b", "html_url": "https://github.com/google/jsonnet/commit/2ea5e41276823831ed96349c90d79da2672ed17b"}]}, {"sha": "2ea5e41276823831ed96349c90d79da2672ed17b", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-12T04:31:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-12T04:31:38Z"}, "message": "Merge pull request #287 from sparkprime/test_reindenter\n\nRun fmt tests with -n 4", "tree": {"sha": "3b340f444e80bae140b69905682a334eac9a60db", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3b340f444e80bae140b69905682a334eac9a60db"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2ea5e41276823831ed96349c90d79da2672ed17b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2ea5e41276823831ed96349c90d79da2672ed17b", "html_url": "https://github.com/google/jsonnet/commit/2ea5e41276823831ed96349c90d79da2672ed17b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2ea5e41276823831ed96349c90d79da2672ed17b/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83cd2d8a5da81819b33151f41b4b166b96b10ea4", "url": "https://api.github.com/repos/google/jsonnet/commits/83cd2d8a5da81819b33151f41b4b166b96b10ea4", "html_url": "https://github.com/google/jsonnet/commit/83cd2d8a5da81819b33151f41b4b166b96b10ea4"}, {"sha": "2580d7f5a37e76aacded7cc0d8a9662e63ceebe3", "url": "https://api.github.com/repos/google/jsonnet/commits/2580d7f5a37e76aacded7cc0d8a9662e63ceebe3", "html_url": "https://github.com/google/jsonnet/commit/2580d7f5a37e76aacded7cc0d8a9662e63ceebe3"}]}, {"sha": "2580d7f5a37e76aacded7cc0d8a9662e63ceebe3", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-11T23:22:44Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-12T04:30:15Z"}, "message": "Run fmt tests with -n 4", "tree": {"sha": "3b340f444e80bae140b69905682a334eac9a60db", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3b340f444e80bae140b69905682a334eac9a60db"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2580d7f5a37e76aacded7cc0d8a9662e63ceebe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2580d7f5a37e76aacded7cc0d8a9662e63ceebe3", "html_url": "https://github.com/google/jsonnet/commit/2580d7f5a37e76aacded7cc0d8a9662e63ceebe3", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2580d7f5a37e76aacded7cc0d8a9662e63ceebe3/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83cd2d8a5da81819b33151f41b4b166b96b10ea4", "url": "https://api.github.com/repos/google/jsonnet/commits/83cd2d8a5da81819b33151f41b4b166b96b10ea4", "html_url": "https://github.com/google/jsonnet/commit/83cd2d8a5da81819b33151f41b4b166b96b10ea4"}]}, {"sha": "83cd2d8a5da81819b33151f41b4b166b96b10ea4", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-12T04:29:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-12T04:29:35Z"}, "message": "Merge pull request #286 from sparkprime/fix_slice_formatter\n\nFix #280", "tree": {"sha": "ef94b2a987f0fb7f845c137b5005c09a873ffc61", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ef94b2a987f0fb7f845c137b5005c09a873ffc61"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/83cd2d8a5da81819b33151f41b4b166b96b10ea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/83cd2d8a5da81819b33151f41b4b166b96b10ea4", "html_url": "https://github.com/google/jsonnet/commit/83cd2d8a5da81819b33151f41b4b166b96b10ea4", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/83cd2d8a5da81819b33151f41b4b166b96b10ea4/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "068eaa8a33933e99683816a9b0bbcb8cef94640c", "url": "https://api.github.com/repos/google/jsonnet/commits/068eaa8a33933e99683816a9b0bbcb8cef94640c", "html_url": "https://github.com/google/jsonnet/commit/068eaa8a33933e99683816a9b0bbcb8cef94640c"}, {"sha": "ca00f930949ab05e0a40ca94948e35319e780d7b", "url": "https://api.github.com/repos/google/jsonnet/commits/ca00f930949ab05e0a40ca94948e35319e780d7b", "html_url": "https://github.com/google/jsonnet/commit/ca00f930949ab05e0a40ca94948e35319e780d7b"}]}, {"sha": "ca00f930949ab05e0a40ca94948e35319e780d7b", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-11T23:18:59Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-12T04:21:23Z"}, "message": "Fix #280", "tree": {"sha": "ef94b2a987f0fb7f845c137b5005c09a873ffc61", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ef94b2a987f0fb7f845c137b5005c09a873ffc61"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ca00f930949ab05e0a40ca94948e35319e780d7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ca00f930949ab05e0a40ca94948e35319e780d7b", "html_url": "https://github.com/google/jsonnet/commit/ca00f930949ab05e0a40ca94948e35319e780d7b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ca00f930949ab05e0a40ca94948e35319e780d7b/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "068eaa8a33933e99683816a9b0bbcb8cef94640c", "url": "https://api.github.com/repos/google/jsonnet/commits/068eaa8a33933e99683816a9b0bbcb8cef94640c", "html_url": "https://github.com/google/jsonnet/commit/068eaa8a33933e99683816a9b0bbcb8cef94640c"}]}, {"sha": "068eaa8a33933e99683816a9b0bbcb8cef94640c", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-12T03:26:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-12T03:26:32Z"}, "message": "Merge pull request #285 from sparkprime/fix_assert_format\n\nFix #283", "tree": {"sha": "10df5d1809a5a167cd3dde74034da53f89f9d80c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/10df5d1809a5a167cd3dde74034da53f89f9d80c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/068eaa8a33933e99683816a9b0bbcb8cef94640c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/068eaa8a33933e99683816a9b0bbcb8cef94640c", "html_url": "https://github.com/google/jsonnet/commit/068eaa8a33933e99683816a9b0bbcb8cef94640c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/068eaa8a33933e99683816a9b0bbcb8cef94640c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e525532406c68c8cee5018bb2b6f2fe5921a1d93", "url": "https://api.github.com/repos/google/jsonnet/commits/e525532406c68c8cee5018bb2b6f2fe5921a1d93", "html_url": "https://github.com/google/jsonnet/commit/e525532406c68c8cee5018bb2b6f2fe5921a1d93"}, {"sha": "3b5f6fd9388e00f3c51c885a8017aa9f04881fc7", "url": "https://api.github.com/repos/google/jsonnet/commits/3b5f6fd9388e00f3c51c885a8017aa9f04881fc7", "html_url": "https://github.com/google/jsonnet/commit/3b5f6fd9388e00f3c51c885a8017aa9f04881fc7"}]}, {"sha": "3b5f6fd9388e00f3c51c885a8017aa9f04881fc7", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-12T03:23:37Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-12T03:23:37Z"}, "message": "Fix #283", "tree": {"sha": "10df5d1809a5a167cd3dde74034da53f89f9d80c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/10df5d1809a5a167cd3dde74034da53f89f9d80c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/3b5f6fd9388e00f3c51c885a8017aa9f04881fc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/3b5f6fd9388e00f3c51c885a8017aa9f04881fc7", "html_url": "https://github.com/google/jsonnet/commit/3b5f6fd9388e00f3c51c885a8017aa9f04881fc7", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/3b5f6fd9388e00f3c51c885a8017aa9f04881fc7/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e525532406c68c8cee5018bb2b6f2fe5921a1d93", "url": "https://api.github.com/repos/google/jsonnet/commits/e525532406c68c8cee5018bb2b6f2fe5921a1d93", "html_url": "https://github.com/google/jsonnet/commit/e525532406c68c8cee5018bb2b6f2fe5921a1d93"}]}, {"sha": "e525532406c68c8cee5018bb2b6f2fe5921a1d93", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-11T23:24:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-11T23:24:09Z"}, "message": "Merge pull request #284 from sparkprime/make_tests_pass_fmt\n\nMake tests pass fmt", "tree": {"sha": "55c323927d8c91f5c8f28d45135e66b44c0d1d8f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/55c323927d8c91f5c8f28d45135e66b44c0d1d8f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e525532406c68c8cee5018bb2b6f2fe5921a1d93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e525532406c68c8cee5018bb2b6f2fe5921a1d93", "html_url": "https://github.com/google/jsonnet/commit/e525532406c68c8cee5018bb2b6f2fe5921a1d93", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e525532406c68c8cee5018bb2b6f2fe5921a1d93/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da1720cc136ec6bf110c110b1efeeae4a557d3df", "url": "https://api.github.com/repos/google/jsonnet/commits/da1720cc136ec6bf110c110b1efeeae4a557d3df", "html_url": "https://github.com/google/jsonnet/commit/da1720cc136ec6bf110c110b1efeeae4a557d3df"}, {"sha": "14666dd22a0cee8d265227fabf0c7e361daf2cb0", "url": "https://api.github.com/repos/google/jsonnet/commits/14666dd22a0cee8d265227fabf0c7e361daf2cb0", "html_url": "https://github.com/google/jsonnet/commit/14666dd22a0cee8d265227fabf0c7e361daf2cb0"}]}, {"sha": "14666dd22a0cee8d265227fabf0c7e361daf2cb0", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-11T23:20:53Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-11T23:23:55Z"}, "message": "Fix trivial indenting errors", "tree": {"sha": "55c323927d8c91f5c8f28d45135e66b44c0d1d8f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/55c323927d8c91f5c8f28d45135e66b44c0d1d8f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/14666dd22a0cee8d265227fabf0c7e361daf2cb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/14666dd22a0cee8d265227fabf0c7e361daf2cb0", "html_url": "https://github.com/google/jsonnet/commit/14666dd22a0cee8d265227fabf0c7e361daf2cb0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/14666dd22a0cee8d265227fabf0c7e361daf2cb0/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da1720cc136ec6bf110c110b1efeeae4a557d3df", "url": "https://api.github.com/repos/google/jsonnet/commits/da1720cc136ec6bf110c110b1efeeae4a557d3df", "html_url": "https://github.com/google/jsonnet/commit/da1720cc136ec6bf110c110b1efeeae4a557d3df"}]}, {"sha": "da1720cc136ec6bf110c110b1efeeae4a557d3df", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-11T22:48:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-11T22:48:46Z"}, "message": "Merge pull request #282 from sparkprime/fix_reformatter_verbatim_strings\n\nFix #281", "tree": {"sha": "beebf0ae821e8ce7dcb49bcf747990212cf8fcd2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/beebf0ae821e8ce7dcb49bcf747990212cf8fcd2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/da1720cc136ec6bf110c110b1efeeae4a557d3df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/da1720cc136ec6bf110c110b1efeeae4a557d3df", "html_url": "https://github.com/google/jsonnet/commit/da1720cc136ec6bf110c110b1efeeae4a557d3df", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/da1720cc136ec6bf110c110b1efeeae4a557d3df/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da23977398246874063fdffc3e9caf004d679b2", "url": "https://api.github.com/repos/google/jsonnet/commits/7da23977398246874063fdffc3e9caf004d679b2", "html_url": "https://github.com/google/jsonnet/commit/7da23977398246874063fdffc3e9caf004d679b2"}, {"sha": "8c1ee409695c4e6f4248ecbb11004c1487b48f4f", "url": "https://api.github.com/repos/google/jsonnet/commits/8c1ee409695c4e6f4248ecbb11004c1487b48f4f", "html_url": "https://github.com/google/jsonnet/commit/8c1ee409695c4e6f4248ecbb11004c1487b48f4f"}]}, {"sha": "8c1ee409695c4e6f4248ecbb11004c1487b48f4f", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-11T22:46:54Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-11T22:48:16Z"}, "message": "Fix #281", "tree": {"sha": "beebf0ae821e8ce7dcb49bcf747990212cf8fcd2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/beebf0ae821e8ce7dcb49bcf747990212cf8fcd2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8c1ee409695c4e6f4248ecbb11004c1487b48f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8c1ee409695c4e6f4248ecbb11004c1487b48f4f", "html_url": "https://github.com/google/jsonnet/commit/8c1ee409695c4e6f4248ecbb11004c1487b48f4f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8c1ee409695c4e6f4248ecbb11004c1487b48f4f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da23977398246874063fdffc3e9caf004d679b2", "url": "https://api.github.com/repos/google/jsonnet/commits/7da23977398246874063fdffc3e9caf004d679b2", "html_url": "https://github.com/google/jsonnet/commit/7da23977398246874063fdffc3e9caf004d679b2"}]}, {"sha": "7da23977398246874063fdffc3e9caf004d679b2", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2017-01-05T14:25:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-05T14:25:55Z"}, "message": "Merge pull request #277 from sparkprime/fix_infinite_loop\n\nFix #275", "tree": {"sha": "f99966c18bd0eb5d37d610de132ee583b39e8b1f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f99966c18bd0eb5d37d610de132ee583b39e8b1f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7da23977398246874063fdffc3e9caf004d679b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7da23977398246874063fdffc3e9caf004d679b2", "html_url": "https://github.com/google/jsonnet/commit/7da23977398246874063fdffc3e9caf004d679b2", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7da23977398246874063fdffc3e9caf004d679b2/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "516f68331fa5b5ea70a084daf153acb03ddbea33", "url": "https://api.github.com/repos/google/jsonnet/commits/516f68331fa5b5ea70a084daf153acb03ddbea33", "html_url": "https://github.com/google/jsonnet/commit/516f68331fa5b5ea70a084daf153acb03ddbea33"}, {"sha": "1f59c4766e4ad592f3948131677ff7c13dae04ec", "url": "https://api.github.com/repos/google/jsonnet/commits/1f59c4766e4ad592f3948131677ff7c13dae04ec", "html_url": "https://github.com/google/jsonnet/commit/1f59c4766e4ad592f3948131677ff7c13dae04ec"}]}, {"sha": "1f59c4766e4ad592f3948131677ff7c13dae04ec", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-05T14:14:07Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2017-01-05T14:17:42Z"}, "message": "Fix #275", "tree": {"sha": "0fbc5103b16c13cde8f0914f0a64b5c969aca60f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0fbc5103b16c13cde8f0914f0a64b5c969aca60f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1f59c4766e4ad592f3948131677ff7c13dae04ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1f59c4766e4ad592f3948131677ff7c13dae04ec", "html_url": "https://github.com/google/jsonnet/commit/1f59c4766e4ad592f3948131677ff7c13dae04ec", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1f59c4766e4ad592f3948131677ff7c13dae04ec/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "url": "https://api.github.com/repos/google/jsonnet/commits/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "html_url": "https://github.com/google/jsonnet/commit/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f"}]}, {"sha": "516f68331fa5b5ea70a084daf153acb03ddbea33", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-12-20T01:42:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-20T01:42:02Z"}, "message": "Merge pull request #265 from benley/verbatim-strings\n\nImplement verbatim string literals", "tree": {"sha": "b08ebbd992d0e23a4ad9bac66ee02fce0b291b7a", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b08ebbd992d0e23a4ad9bac66ee02fce0b291b7a"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/516f68331fa5b5ea70a084daf153acb03ddbea33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/516f68331fa5b5ea70a084daf153acb03ddbea33", "html_url": "https://github.com/google/jsonnet/commit/516f68331fa5b5ea70a084daf153acb03ddbea33", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/516f68331fa5b5ea70a084daf153acb03ddbea33/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b0e7957ddd490e46c16af84e046bfcebf6b4d5b", "url": "https://api.github.com/repos/google/jsonnet/commits/4b0e7957ddd490e46c16af84e046bfcebf6b4d5b", "html_url": "https://github.com/google/jsonnet/commit/4b0e7957ddd490e46c16af84e046bfcebf6b4d5b"}, {"sha": "43b18026739dde4ff2c3d02080515cf3d1c7688c", "url": "https://api.github.com/repos/google/jsonnet/commits/43b18026739dde4ff2c3d02080515cf3d1c7688c", "html_url": "https://github.com/google/jsonnet/commit/43b18026739dde4ff2c3d02080515cf3d1c7688c"}]}, {"sha": "4b0e7957ddd490e46c16af84e046bfcebf6b4d5b", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-12-20T01:40:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-20T01:40:24Z"}, "message": "Merge pull request #273 from benley/bashisms\n\nUse /bin/bash shebang since these scripts require it", "tree": {"sha": "1a3d29f0ba555ec4f407b8730734d6f26cefc83f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/1a3d29f0ba555ec4f407b8730734d6f26cefc83f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4b0e7957ddd490e46c16af84e046bfcebf6b4d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4b0e7957ddd490e46c16af84e046bfcebf6b4d5b", "html_url": "https://github.com/google/jsonnet/commit/4b0e7957ddd490e46c16af84e046bfcebf6b4d5b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4b0e7957ddd490e46c16af84e046bfcebf6b4d5b/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "url": "https://api.github.com/repos/google/jsonnet/commits/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "html_url": "https://github.com/google/jsonnet/commit/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f"}, {"sha": "1d56b030c4361fb931c4e9e634546ef2a9500d39", "url": "https://api.github.com/repos/google/jsonnet/commits/1d56b030c4361fb931c4e9e634546ef2a9500d39", "html_url": "https://github.com/google/jsonnet/commit/1d56b030c4361fb931c4e9e634546ef2a9500d39"}]}, {"sha": "1d56b030c4361fb931c4e9e634546ef2a9500d39", "commit": {"author": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-12-19T20:04:43Z"}, "committer": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-12-19T20:05:29Z"}, "message": "Use /bin/bash shebang since these scripts require it", "tree": {"sha": "1a3d29f0ba555ec4f407b8730734d6f26cefc83f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/1a3d29f0ba555ec4f407b8730734d6f26cefc83f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1d56b030c4361fb931c4e9e634546ef2a9500d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1d56b030c4361fb931c4e9e634546ef2a9500d39", "html_url": "https://github.com/google/jsonnet/commit/1d56b030c4361fb931c4e9e634546ef2a9500d39", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1d56b030c4361fb931c4e9e634546ef2a9500d39/comments", "author": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "url": "https://api.github.com/repos/google/jsonnet/commits/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "html_url": "https://github.com/google/jsonnet/commit/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f"}]}, {"sha": "43b18026739dde4ff2c3d02080515cf3d1c7688c", "commit": {"author": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-12-19T19:59:19Z"}, "committer": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-12-19T19:59:19Z"}, "message": "Handle verbatim strings in FixIndentation, tweak comments & docs", "tree": {"sha": "a7b30cf5e58436dcd6dff5ada6e566112f5b6940", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a7b30cf5e58436dcd6dff5ada6e566112f5b6940"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/43b18026739dde4ff2c3d02080515cf3d1c7688c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/43b18026739dde4ff2c3d02080515cf3d1c7688c", "html_url": "https://github.com/google/jsonnet/commit/43b18026739dde4ff2c3d02080515cf3d1c7688c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/43b18026739dde4ff2c3d02080515cf3d1c7688c/comments", "author": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "url": "https://api.github.com/repos/google/jsonnet/commits/8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "html_url": "https://github.com/google/jsonnet/commit/8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416"}]}, {"sha": "72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-12-16T10:22:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-16T10:22:04Z"}, "message": "Merge pull request #272 from sparkprime/fix_minus_dollar\n\nFix #271", "tree": {"sha": "c57ea9854a90f25f2fde056d4460889d604567ac", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c57ea9854a90f25f2fde056d4460889d604567ac"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "html_url": "https://github.com/google/jsonnet/commit/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/72e37f2bb9b37fb8daddd0b981bfdaed25fd6d5f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e2bf0fbf4fe39da2fd46d0b7372d95512af0b39", "url": "https://api.github.com/repos/google/jsonnet/commits/5e2bf0fbf4fe39da2fd46d0b7372d95512af0b39", "html_url": "https://github.com/google/jsonnet/commit/5e2bf0fbf4fe39da2fd46d0b7372d95512af0b39"}, {"sha": "e923ab6a5423f386d243912b9f33eec664326d67", "url": "https://api.github.com/repos/google/jsonnet/commits/e923ab6a5423f386d243912b9f33eec664326d67", "html_url": "https://github.com/google/jsonnet/commit/e923ab6a5423f386d243912b9f33eec664326d67"}]}, {"sha": "e923ab6a5423f386d243912b9f33eec664326d67", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-12-16T10:20:18Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-12-16T10:20:18Z"}, "message": "Fix #271", "tree": {"sha": "c57ea9854a90f25f2fde056d4460889d604567ac", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c57ea9854a90f25f2fde056d4460889d604567ac"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e923ab6a5423f386d243912b9f33eec664326d67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e923ab6a5423f386d243912b9f33eec664326d67", "html_url": "https://github.com/google/jsonnet/commit/e923ab6a5423f386d243912b9f33eec664326d67", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e923ab6a5423f386d243912b9f33eec664326d67/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dfd1053915db462ce84d8480adf20890222e0ae", "url": "https://api.github.com/repos/google/jsonnet/commits/0dfd1053915db462ce84d8480adf20890222e0ae", "html_url": "https://github.com/google/jsonnet/commit/0dfd1053915db462ce84d8480adf20890222e0ae"}]}, {"sha": "5e2bf0fbf4fe39da2fd46d0b7372d95512af0b39", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-12-05T16:47:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-05T16:47:32Z"}, "message": "Merge pull request #268 from sparkprime/fix_argparams\n\nFix #267 argparams", "tree": {"sha": "60948ff678eb8299f9fa1afccb2e9bfee104b293", "url": "https://api.github.com/repos/google/jsonnet/git/trees/60948ff678eb8299f9fa1afccb2e9bfee104b293"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/5e2bf0fbf4fe39da2fd46d0b7372d95512af0b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/5e2bf0fbf4fe39da2fd46d0b7372d95512af0b39", "html_url": "https://github.com/google/jsonnet/commit/5e2bf0fbf4fe39da2fd46d0b7372d95512af0b39", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/5e2bf0fbf4fe39da2fd46d0b7372d95512af0b39/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8db69ed8648ff0b6b647785affe28e7f965d64bb", "url": "https://api.github.com/repos/google/jsonnet/commits/8db69ed8648ff0b6b647785affe28e7f965d64bb", "html_url": "https://github.com/google/jsonnet/commit/8db69ed8648ff0b6b647785affe28e7f965d64bb"}, {"sha": "0dfd1053915db462ce84d8480adf20890222e0ae", "url": "https://api.github.com/repos/google/jsonnet/commits/0dfd1053915db462ce84d8480adf20890222e0ae", "html_url": "https://github.com/google/jsonnet/commit/0dfd1053915db462ce84d8480adf20890222e0ae"}]}, {"sha": "0dfd1053915db462ce84d8480adf20890222e0ae", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-12-05T15:29:15Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-12-05T15:29:15Z"}, "message": "Fix #267 argparams", "tree": {"sha": "60948ff678eb8299f9fa1afccb2e9bfee104b293", "url": "https://api.github.com/repos/google/jsonnet/git/trees/60948ff678eb8299f9fa1afccb2e9bfee104b293"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/0dfd1053915db462ce84d8480adf20890222e0ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/0dfd1053915db462ce84d8480adf20890222e0ae", "html_url": "https://github.com/google/jsonnet/commit/0dfd1053915db462ce84d8480adf20890222e0ae", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/0dfd1053915db462ce84d8480adf20890222e0ae/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8db69ed8648ff0b6b647785affe28e7f965d64bb", "url": "https://api.github.com/repos/google/jsonnet/commits/8db69ed8648ff0b6b647785affe28e7f965d64bb", "html_url": "https://github.com/google/jsonnet/commit/8db69ed8648ff0b6b647785affe28e7f965d64bb"}]}, {"sha": "8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "commit": {"author": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-11-17T09:40:48Z"}, "committer": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-11-26T01:41:11Z"}, "message": "Implement verbatim string literals\n\nFixes #246", "tree": {"sha": "fcb8f301b0e6aa870cac6b0f922f39ed211fc85a", "url": "https://api.github.com/repos/google/jsonnet/git/trees/fcb8f301b0e6aa870cac6b0f922f39ed211fc85a"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "html_url": "https://github.com/google/jsonnet/commit/8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416/comments", "author": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8db69ed8648ff0b6b647785affe28e7f965d64bb", "url": "https://api.github.com/repos/google/jsonnet/commits/8db69ed8648ff0b6b647785affe28e7f965d64bb", "html_url": "https://github.com/google/jsonnet/commit/8db69ed8648ff0b6b647785affe28e7f965d64bb"}]}, {"sha": "8db69ed8648ff0b6b647785affe28e7f965d64bb", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-23T00:25:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-23T00:25:31Z"}, "message": "Merge pull request #264 from sparkprime/reflection_asserts\n\nClarify object asserts not checked during reflection operations", "tree": {"sha": "8d3ad6025d22879565481debb9824c90171c7b09", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8d3ad6025d22879565481debb9824c90171c7b09"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8db69ed8648ff0b6b647785affe28e7f965d64bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8db69ed8648ff0b6b647785affe28e7f965d64bb", "html_url": "https://github.com/google/jsonnet/commit/8db69ed8648ff0b6b647785affe28e7f965d64bb", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8db69ed8648ff0b6b647785affe28e7f965d64bb/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83530f9e65bc5e360f6c59c0beb01ea86d9e40af", "url": "https://api.github.com/repos/google/jsonnet/commits/83530f9e65bc5e360f6c59c0beb01ea86d9e40af", "html_url": "https://github.com/google/jsonnet/commit/83530f9e65bc5e360f6c59c0beb01ea86d9e40af"}, {"sha": "28e2739a3f02786bdc9436af3bdef00cea968cc9", "url": "https://api.github.com/repos/google/jsonnet/commits/28e2739a3f02786bdc9436af3bdef00cea968cc9", "html_url": "https://github.com/google/jsonnet/commit/28e2739a3f02786bdc9436af3bdef00cea968cc9"}]}, {"sha": "28e2739a3f02786bdc9436af3bdef00cea968cc9", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-22T17:45:30Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-22T17:45:30Z"}, "message": "Clarify object asserts not checked during reflection operations", "tree": {"sha": "8d3ad6025d22879565481debb9824c90171c7b09", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8d3ad6025d22879565481debb9824c90171c7b09"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/28e2739a3f02786bdc9436af3bdef00cea968cc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/28e2739a3f02786bdc9436af3bdef00cea968cc9", "html_url": "https://github.com/google/jsonnet/commit/28e2739a3f02786bdc9436af3bdef00cea968cc9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/28e2739a3f02786bdc9436af3bdef00cea968cc9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83530f9e65bc5e360f6c59c0beb01ea86d9e40af", "url": "https://api.github.com/repos/google/jsonnet/commits/83530f9e65bc5e360f6c59c0beb01ea86d9e40af", "html_url": "https://github.com/google/jsonnet/commit/83530f9e65bc5e360f6c59c0beb01ea86d9e40af"}]}, {"sha": "83530f9e65bc5e360f6c59c0beb01ea86d9e40af", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-22T09:12:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-22T09:12:11Z"}, "message": "Merge pull request #263 from sparkprime/fix_super_self_bug\n\nFix #244 super/self in +: desugaring", "tree": {"sha": "5f076f5528de9a6dd227cf8d9d96f10445bc0e04", "url": "https://api.github.com/repos/google/jsonnet/git/trees/5f076f5528de9a6dd227cf8d9d96f10445bc0e04"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/83530f9e65bc5e360f6c59c0beb01ea86d9e40af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/83530f9e65bc5e360f6c59c0beb01ea86d9e40af", "html_url": "https://github.com/google/jsonnet/commit/83530f9e65bc5e360f6c59c0beb01ea86d9e40af", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/83530f9e65bc5e360f6c59c0beb01ea86d9e40af/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6d8d0ffb45ca71954bdca577c06c6620e761905", "url": "https://api.github.com/repos/google/jsonnet/commits/c6d8d0ffb45ca71954bdca577c06c6620e761905", "html_url": "https://github.com/google/jsonnet/commit/c6d8d0ffb45ca71954bdca577c06c6620e761905"}, {"sha": "114a3e7f20de57f11bfb334cc085e7b04bad1cc1", "url": "https://api.github.com/repos/google/jsonnet/commits/114a3e7f20de57f11bfb334cc085e7b04bad1cc1", "html_url": "https://github.com/google/jsonnet/commit/114a3e7f20de57f11bfb334cc085e7b04bad1cc1"}]}, {"sha": "114a3e7f20de57f11bfb334cc085e7b04bad1cc1", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-22T00:28:35Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-22T09:10:50Z"}, "message": "Fix #244 super/self in +: desugaring", "tree": {"sha": "02f9344227b35d58819f44a92e986b7a9b8a6e17", "url": "https://api.github.com/repos/google/jsonnet/git/trees/02f9344227b35d58819f44a92e986b7a9b8a6e17"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/114a3e7f20de57f11bfb334cc085e7b04bad1cc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/114a3e7f20de57f11bfb334cc085e7b04bad1cc1", "html_url": "https://github.com/google/jsonnet/commit/114a3e7f20de57f11bfb334cc085e7b04bad1cc1", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/114a3e7f20de57f11bfb334cc085e7b04bad1cc1/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9b782e0fcf89a3b42e096557643c890db27132", "url": "https://api.github.com/repos/google/jsonnet/commits/de9b782e0fcf89a3b42e096557643c890db27132", "html_url": "https://github.com/google/jsonnet/commit/de9b782e0fcf89a3b42e096557643c890db27132"}]}, {"sha": "c6d8d0ffb45ca71954bdca577c06c6620e761905", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-22T09:08:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-22T09:08:42Z"}, "message": "Merge pull request #262 from sparkprime/fix_obj_desugar\n\nUse outerself/outersuper only when inside an object", "tree": {"sha": "8c112756925ec730ff4e575c78d9672f3fe2e0df", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8c112756925ec730ff4e575c78d9672f3fe2e0df"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c6d8d0ffb45ca71954bdca577c06c6620e761905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c6d8d0ffb45ca71954bdca577c06c6620e761905", "html_url": "https://github.com/google/jsonnet/commit/c6d8d0ffb45ca71954bdca577c06c6620e761905", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c6d8d0ffb45ca71954bdca577c06c6620e761905/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8117945ca3845ebdb2091ea424955a4f3b153818", "url": "https://api.github.com/repos/google/jsonnet/commits/8117945ca3845ebdb2091ea424955a4f3b153818", "html_url": "https://github.com/google/jsonnet/commit/8117945ca3845ebdb2091ea424955a4f3b153818"}, {"sha": "8f3453cc03cfb3118651e0eb96c36b0e4436a1ab", "url": "https://api.github.com/repos/google/jsonnet/commits/8f3453cc03cfb3118651e0eb96c36b0e4436a1ab", "html_url": "https://github.com/google/jsonnet/commit/8f3453cc03cfb3118651e0eb96c36b0e4436a1ab"}]}, {"sha": "8f3453cc03cfb3118651e0eb96c36b0e4436a1ab", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-11T15:15:11Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-22T09:07:00Z"}, "message": "Use outerself/outersuper only when inside an object", "tree": {"sha": "8c112756925ec730ff4e575c78d9672f3fe2e0df", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8c112756925ec730ff4e575c78d9672f3fe2e0df"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8f3453cc03cfb3118651e0eb96c36b0e4436a1ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8f3453cc03cfb3118651e0eb96c36b0e4436a1ab", "html_url": "https://github.com/google/jsonnet/commit/8f3453cc03cfb3118651e0eb96c36b0e4436a1ab", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8f3453cc03cfb3118651e0eb96c36b0e4436a1ab/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8117945ca3845ebdb2091ea424955a4f3b153818", "url": "https://api.github.com/repos/google/jsonnet/commits/8117945ca3845ebdb2091ea424955a4f3b153818", "html_url": "https://github.com/google/jsonnet/commit/8117945ca3845ebdb2091ea424955a4f3b153818"}]}, {"sha": "8117945ca3845ebdb2091ea424955a4f3b153818", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-20T20:05:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-20T20:05:07Z"}, "message": "Merge pull request #259 from benley/fix-bazel-tests\n\nFix Bazel tests", "tree": {"sha": "a66bf6e5a0a3fa67ede1f53af8ae692eca2be133", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a66bf6e5a0a3fa67ede1f53af8ae692eca2be133"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8117945ca3845ebdb2091ea424955a4f3b153818", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8117945ca3845ebdb2091ea424955a4f3b153818", "html_url": "https://github.com/google/jsonnet/commit/8117945ca3845ebdb2091ea424955a4f3b153818", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8117945ca3845ebdb2091ea424955a4f3b153818/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f60c48fa443a48eea4bf7cfacefa1e92e1976bb", "url": "https://api.github.com/repos/google/jsonnet/commits/2f60c48fa443a48eea4bf7cfacefa1e92e1976bb", "html_url": "https://github.com/google/jsonnet/commit/2f60c48fa443a48eea4bf7cfacefa1e92e1976bb"}, {"sha": "941e11723be44c8647107ce43988d5fb2dfd7437", "url": "https://api.github.com/repos/google/jsonnet/commits/941e11723be44c8647107ce43988d5fb2dfd7437", "html_url": "https://github.com/google/jsonnet/commit/941e11723be44c8647107ce43988d5fb2dfd7437"}]}, {"sha": "2f60c48fa443a48eea4bf7cfacefa1e92e1976bb", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-20T19:58:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-20T19:58:11Z"}, "message": "Merge pull request #258 from benley/python-bazel\n\nBazel rules for the python module", "tree": {"sha": "98a2abaeb912a461067755157db6c0f52a0819c7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/98a2abaeb912a461067755157db6c0f52a0819c7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2f60c48fa443a48eea4bf7cfacefa1e92e1976bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2f60c48fa443a48eea4bf7cfacefa1e92e1976bb", "html_url": "https://github.com/google/jsonnet/commit/2f60c48fa443a48eea4bf7cfacefa1e92e1976bb", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2f60c48fa443a48eea4bf7cfacefa1e92e1976bb/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f75d47410e36b14c3d8f5f995ac3d04a52285ace", "url": "https://api.github.com/repos/google/jsonnet/commits/f75d47410e36b14c3d8f5f995ac3d04a52285ace", "html_url": "https://github.com/google/jsonnet/commit/f75d47410e36b14c3d8f5f995ac3d04a52285ace"}, {"sha": "960cdb2d38545e0d9c0faa7161e5823971325ef9", "url": "https://api.github.com/repos/google/jsonnet/commits/960cdb2d38545e0d9c0faa7161e5823971325ef9", "html_url": "https://github.com/google/jsonnet/commit/960cdb2d38545e0d9c0faa7161e5823971325ef9"}]}, {"sha": "941e11723be44c8647107ce43988d5fb2dfd7437", "commit": {"author": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-11-17T09:45:41Z"}, "committer": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-11-17T09:47:03Z"}, "message": "Fix Bazel tests", "tree": {"sha": "72f28420e2d685a58745964c817d0dce155500d2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/72f28420e2d685a58745964c817d0dce155500d2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/941e11723be44c8647107ce43988d5fb2dfd7437", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/941e11723be44c8647107ce43988d5fb2dfd7437", "html_url": "https://github.com/google/jsonnet/commit/941e11723be44c8647107ce43988d5fb2dfd7437", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/941e11723be44c8647107ce43988d5fb2dfd7437/comments", "author": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f75d47410e36b14c3d8f5f995ac3d04a52285ace", "url": "https://api.github.com/repos/google/jsonnet/commits/f75d47410e36b14c3d8f5f995ac3d04a52285ace", "html_url": "https://github.com/google/jsonnet/commit/f75d47410e36b14c3d8f5f995ac3d04a52285ace"}]}, {"sha": "960cdb2d38545e0d9c0faa7161e5823971325ef9", "commit": {"author": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-10-23T10:33:11Z"}, "committer": {"name": "Benjamin Staffin", "email": "bstaffin@fitbit.com", "date": "2016-11-17T07:05:38Z"}, "message": "Bazel rules for the python module\n\nThe python_repository repo rule digs up the local system's Python\nheaders and builds _jsonnet.so with them. Any downstream users of this\nrepo could easily supply a different python location or version as\nneeded.\n\nI also rearranged the Python tests so they could be hooked in with both\nthe setup.py test command and a bazel py_test rule.", "tree": {"sha": "98a2abaeb912a461067755157db6c0f52a0819c7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/98a2abaeb912a461067755157db6c0f52a0819c7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/960cdb2d38545e0d9c0faa7161e5823971325ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/960cdb2d38545e0d9c0faa7161e5823971325ef9", "html_url": "https://github.com/google/jsonnet/commit/960cdb2d38545e0d9c0faa7161e5823971325ef9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/960cdb2d38545e0d9c0faa7161e5823971325ef9/comments", "author": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f75d47410e36b14c3d8f5f995ac3d04a52285ace", "url": "https://api.github.com/repos/google/jsonnet/commits/f75d47410e36b14c3d8f5f995ac3d04a52285ace", "html_url": "https://github.com/google/jsonnet/commit/f75d47410e36b14c3d8f5f995ac3d04a52285ace"}]}, {"sha": "f75d47410e36b14c3d8f5f995ac3d04a52285ace", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-15T05:09:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-15T05:09:08Z"}, "message": "Merge pull request #257 from sparkprime/docs_null_term\n\nFix #256", "tree": {"sha": "c46c6f506ae16948d04588c51b977e6e5631db6f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c46c6f506ae16948d04588c51b977e6e5631db6f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/f75d47410e36b14c3d8f5f995ac3d04a52285ace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/f75d47410e36b14c3d8f5f995ac3d04a52285ace", "html_url": "https://github.com/google/jsonnet/commit/f75d47410e36b14c3d8f5f995ac3d04a52285ace", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/f75d47410e36b14c3d8f5f995ac3d04a52285ace/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9b782e0fcf89a3b42e096557643c890db27132", "url": "https://api.github.com/repos/google/jsonnet/commits/de9b782e0fcf89a3b42e096557643c890db27132", "html_url": "https://github.com/google/jsonnet/commit/de9b782e0fcf89a3b42e096557643c890db27132"}, {"sha": "0971193fbb29c0d70c6c84d9e05e537ce7235a5d", "url": "https://api.github.com/repos/google/jsonnet/commits/0971193fbb29c0d70c6c84d9e05e537ce7235a5d", "html_url": "https://github.com/google/jsonnet/commit/0971193fbb29c0d70c6c84d9e05e537ce7235a5d"}]}, {"sha": "0971193fbb29c0d70c6c84d9e05e537ce7235a5d", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-15T05:08:39Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-15T05:08:39Z"}, "message": "Fix #256", "tree": {"sha": "c46c6f506ae16948d04588c51b977e6e5631db6f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c46c6f506ae16948d04588c51b977e6e5631db6f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/0971193fbb29c0d70c6c84d9e05e537ce7235a5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/0971193fbb29c0d70c6c84d9e05e537ce7235a5d", "html_url": "https://github.com/google/jsonnet/commit/0971193fbb29c0d70c6c84d9e05e537ce7235a5d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/0971193fbb29c0d70c6c84d9e05e537ce7235a5d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9b782e0fcf89a3b42e096557643c890db27132", "url": "https://api.github.com/repos/google/jsonnet/commits/de9b782e0fcf89a3b42e096557643c890db27132", "html_url": "https://github.com/google/jsonnet/commit/de9b782e0fcf89a3b42e096557643c890db27132"}]}, {"sha": "de9b782e0fcf89a3b42e096557643c890db27132", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-11T14:44:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-11T14:44:38Z"}, "message": "Merge pull request #255 from sparkprime/desugar_comps\n\nAdd array/object comprehensions to spec", "tree": {"sha": "746e17ef04ae81bf2ac46f5914ff46c4aa58def2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/746e17ef04ae81bf2ac46f5914ff46c4aa58def2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/de9b782e0fcf89a3b42e096557643c890db27132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/de9b782e0fcf89a3b42e096557643c890db27132", "html_url": "https://github.com/google/jsonnet/commit/de9b782e0fcf89a3b42e096557643c890db27132", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/de9b782e0fcf89a3b42e096557643c890db27132/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3362386192a3afc273d8147ca45db1d6e77a14c5", "url": "https://api.github.com/repos/google/jsonnet/commits/3362386192a3afc273d8147ca45db1d6e77a14c5", "html_url": "https://github.com/google/jsonnet/commit/3362386192a3afc273d8147ca45db1d6e77a14c5"}, {"sha": "ebf243498336058245b68a06c44bfd91d77d9612", "url": "https://api.github.com/repos/google/jsonnet/commits/ebf243498336058245b68a06c44bfd91d77d9612", "html_url": "https://github.com/google/jsonnet/commit/ebf243498336058245b68a06c44bfd91d77d9612"}]}, {"sha": "ebf243498336058245b68a06c44bfd91d77d9612", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-10T23:23:38Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-11T14:44:04Z"}, "message": "Add array/object comprehensions to spec", "tree": {"sha": "746e17ef04ae81bf2ac46f5914ff46c4aa58def2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/746e17ef04ae81bf2ac46f5914ff46c4aa58def2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ebf243498336058245b68a06c44bfd91d77d9612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ebf243498336058245b68a06c44bfd91d77d9612", "html_url": "https://github.com/google/jsonnet/commit/ebf243498336058245b68a06c44bfd91d77d9612", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ebf243498336058245b68a06c44bfd91d77d9612/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3362386192a3afc273d8147ca45db1d6e77a14c5", "url": "https://api.github.com/repos/google/jsonnet/commits/3362386192a3afc273d8147ca45db1d6e77a14c5", "html_url": "https://github.com/google/jsonnet/commit/3362386192a3afc273d8147ca45db1d6e77a14c5"}]}, {"sha": "3362386192a3afc273d8147ca45db1d6e77a14c5", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-04T18:15:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-04T18:15:30Z"}, "message": "Merge pull request #254 from sparkprime/plus_colon_bug\n\nFix +: issue in spec", "tree": {"sha": "a501905f11f57155b14d0dcb5d6f1a53aafd3029", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a501905f11f57155b14d0dcb5d6f1a53aafd3029"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/3362386192a3afc273d8147ca45db1d6e77a14c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/3362386192a3afc273d8147ca45db1d6e77a14c5", "html_url": "https://github.com/google/jsonnet/commit/3362386192a3afc273d8147ca45db1d6e77a14c5", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/3362386192a3afc273d8147ca45db1d6e77a14c5/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "080b83f2ab34dda6ef4b4d5549e53c608696cfe7", "url": "https://api.github.com/repos/google/jsonnet/commits/080b83f2ab34dda6ef4b4d5549e53c608696cfe7", "html_url": "https://github.com/google/jsonnet/commit/080b83f2ab34dda6ef4b4d5549e53c608696cfe7"}, {"sha": "5aed59d0fcc0f13fefae7c2e5a3601047bf8e085", "url": "https://api.github.com/repos/google/jsonnet/commits/5aed59d0fcc0f13fefae7c2e5a3601047bf8e085", "html_url": "https://github.com/google/jsonnet/commit/5aed59d0fcc0f13fefae7c2e5a3601047bf8e085"}]}, {"sha": "5aed59d0fcc0f13fefae7c2e5a3601047bf8e085", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-03T20:19:54Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-03T20:19:54Z"}, "message": "Fix +: issue in spec", "tree": {"sha": "a501905f11f57155b14d0dcb5d6f1a53aafd3029", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a501905f11f57155b14d0dcb5d6f1a53aafd3029"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/5aed59d0fcc0f13fefae7c2e5a3601047bf8e085", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/5aed59d0fcc0f13fefae7c2e5a3601047bf8e085", "html_url": "https://github.com/google/jsonnet/commit/5aed59d0fcc0f13fefae7c2e5a3601047bf8e085", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/5aed59d0fcc0f13fefae7c2e5a3601047bf8e085/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "080b83f2ab34dda6ef4b4d5549e53c608696cfe7", "url": "https://api.github.com/repos/google/jsonnet/commits/080b83f2ab34dda6ef4b4d5549e53c608696cfe7", "html_url": "https://github.com/google/jsonnet/commit/080b83f2ab34dda6ef4b4d5549e53c608696cfe7"}]}, {"sha": "080b83f2ab34dda6ef4b4d5549e53c608696cfe7", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-03T00:27:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-03T00:27:21Z"}, "message": "Merge pull request #253 from sparkprime/error_tostring\n\nError implicitly converts to string", "tree": {"sha": "0925e5f0d1ebaad4318f6f5dad28d3b4d702db6b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0925e5f0d1ebaad4318f6f5dad28d3b4d702db6b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/080b83f2ab34dda6ef4b4d5549e53c608696cfe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/080b83f2ab34dda6ef4b4d5549e53c608696cfe7", "html_url": "https://github.com/google/jsonnet/commit/080b83f2ab34dda6ef4b4d5549e53c608696cfe7", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/080b83f2ab34dda6ef4b4d5549e53c608696cfe7/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "638842d9a837fd119e149cd00c65b91c287473da", "url": "https://api.github.com/repos/google/jsonnet/commits/638842d9a837fd119e149cd00c65b91c287473da", "html_url": "https://github.com/google/jsonnet/commit/638842d9a837fd119e149cd00c65b91c287473da"}, {"sha": "f8a929b5ad6c776f50840de453d0052e3735204c", "url": "https://api.github.com/repos/google/jsonnet/commits/f8a929b5ad6c776f50840de453d0052e3735204c", "html_url": "https://github.com/google/jsonnet/commit/f8a929b5ad6c776f50840de453d0052e3735204c"}]}, {"sha": "f8a929b5ad6c776f50840de453d0052e3735204c", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-26T15:42:45Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-03T00:22:42Z"}, "message": "Error implicitly converts to string", "tree": {"sha": "0925e5f0d1ebaad4318f6f5dad28d3b4d702db6b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0925e5f0d1ebaad4318f6f5dad28d3b4d702db6b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/f8a929b5ad6c776f50840de453d0052e3735204c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/f8a929b5ad6c776f50840de453d0052e3735204c", "html_url": "https://github.com/google/jsonnet/commit/f8a929b5ad6c776f50840de453d0052e3735204c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/f8a929b5ad6c776f50840de453d0052e3735204c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "638842d9a837fd119e149cd00c65b91c287473da", "url": "https://api.github.com/repos/google/jsonnet/commits/638842d9a837fd119e149cd00c65b91c287473da", "html_url": "https://github.com/google/jsonnet/commit/638842d9a837fd119e149cd00c65b91c287473da"}]}, {"sha": "638842d9a837fd119e149cd00c65b91c287473da", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-03T00:20:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-03T00:20:23Z"}, "message": "Merge pull request #252 from sparkprime/html_id\n\nadd ids to all HTML headers", "tree": {"sha": "f4e224b619833f401000744ca88eadc91a9032d2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f4e224b619833f401000744ca88eadc91a9032d2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/638842d9a837fd119e149cd00c65b91c287473da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/638842d9a837fd119e149cd00c65b91c287473da", "html_url": "https://github.com/google/jsonnet/commit/638842d9a837fd119e149cd00c65b91c287473da", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/638842d9a837fd119e149cd00c65b91c287473da/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "450349c192b5027733fcb3cee43c86ef764f7490", "url": "https://api.github.com/repos/google/jsonnet/commits/450349c192b5027733fcb3cee43c86ef764f7490", "html_url": "https://github.com/google/jsonnet/commit/450349c192b5027733fcb3cee43c86ef764f7490"}, {"sha": "bf5536fb112ec2d9485b3f54fd7d42738f7c19db", "url": "https://api.github.com/repos/google/jsonnet/commits/bf5536fb112ec2d9485b3f54fd7d42738f7c19db", "html_url": "https://github.com/google/jsonnet/commit/bf5536fb112ec2d9485b3f54fd7d42738f7c19db"}]}, {"sha": "450349c192b5027733fcb3cee43c86ef764f7490", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-03T00:17:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-03T00:17:05Z"}, "message": "Merge pull request #251 from sparkprime/std_hide\n\nEnsure all std functions are hidden.", "tree": {"sha": "8fda5b5cbae60548fe07a1fdb33414ca7d03ee0c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8fda5b5cbae60548fe07a1fdb33414ca7d03ee0c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/450349c192b5027733fcb3cee43c86ef764f7490", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/450349c192b5027733fcb3cee43c86ef764f7490", "html_url": "https://github.com/google/jsonnet/commit/450349c192b5027733fcb3cee43c86ef764f7490", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/450349c192b5027733fcb3cee43c86ef764f7490/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78da9cb6fd04a388b7d18054ab743f7e99deaff7", "url": "https://api.github.com/repos/google/jsonnet/commits/78da9cb6fd04a388b7d18054ab743f7e99deaff7", "html_url": "https://github.com/google/jsonnet/commit/78da9cb6fd04a388b7d18054ab743f7e99deaff7"}, {"sha": "d8fcb46744a5d98724b5d935e895a171307f0723", "url": "https://api.github.com/repos/google/jsonnet/commits/d8fcb46744a5d98724b5d935e895a171307f0723", "html_url": "https://github.com/google/jsonnet/commit/d8fcb46744a5d98724b5d935e895a171307f0723"}]}, {"sha": "bf5536fb112ec2d9485b3f54fd7d42738f7c19db", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T23:00:55Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T23:00:55Z"}, "message": "add ids to all HTML headers", "tree": {"sha": "4c3ef115eba10e7f2a4fb1146b55274ebdd0ab60", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4c3ef115eba10e7f2a4fb1146b55274ebdd0ab60"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/bf5536fb112ec2d9485b3f54fd7d42738f7c19db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/bf5536fb112ec2d9485b3f54fd7d42738f7c19db", "html_url": "https://github.com/google/jsonnet/commit/bf5536fb112ec2d9485b3f54fd7d42738f7c19db", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/bf5536fb112ec2d9485b3f54fd7d42738f7c19db/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78da9cb6fd04a388b7d18054ab743f7e99deaff7", "url": "https://api.github.com/repos/google/jsonnet/commits/78da9cb6fd04a388b7d18054ab743f7e99deaff7", "html_url": "https://github.com/google/jsonnet/commit/78da9cb6fd04a388b7d18054ab743f7e99deaff7"}]}, {"sha": "d8fcb46744a5d98724b5d935e895a171307f0723", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T22:56:07Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T22:56:07Z"}, "message": "Ensure all std functions are hidden.", "tree": {"sha": "8fda5b5cbae60548fe07a1fdb33414ca7d03ee0c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8fda5b5cbae60548fe07a1fdb33414ca7d03ee0c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d8fcb46744a5d98724b5d935e895a171307f0723", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d8fcb46744a5d98724b5d935e895a171307f0723", "html_url": "https://github.com/google/jsonnet/commit/d8fcb46744a5d98724b5d935e895a171307f0723", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d8fcb46744a5d98724b5d935e895a171307f0723/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78da9cb6fd04a388b7d18054ab743f7e99deaff7", "url": "https://api.github.com/repos/google/jsonnet/commits/78da9cb6fd04a388b7d18054ab743f7e99deaff7", "html_url": "https://github.com/google/jsonnet/commit/78da9cb6fd04a388b7d18054ab743f7e99deaff7"}]}, {"sha": "78da9cb6fd04a388b7d18054ab743f7e99deaff7", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-11-02T04:17:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-02T04:17:45Z"}, "message": "Merge pull request #250 from sparkprime/docs\n\nDocs", "tree": {"sha": "503240d822207b4ad5d79043a715cf697de1359c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/503240d822207b4ad5d79043a715cf697de1359c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/78da9cb6fd04a388b7d18054ab743f7e99deaff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/78da9cb6fd04a388b7d18054ab743f7e99deaff7", "html_url": "https://github.com/google/jsonnet/commit/78da9cb6fd04a388b7d18054ab743f7e99deaff7", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/78da9cb6fd04a388b7d18054ab743f7e99deaff7/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6db9f1167448a8a314a99331086a4fb05230344", "url": "https://api.github.com/repos/google/jsonnet/commits/c6db9f1167448a8a314a99331086a4fb05230344", "html_url": "https://github.com/google/jsonnet/commit/c6db9f1167448a8a314a99331086a4fb05230344"}, {"sha": "6d6a7b371d1f2fc62cf9bbd5d7fb5f4e29662fd2", "url": "https://api.github.com/repos/google/jsonnet/commits/6d6a7b371d1f2fc62cf9bbd5d7fb5f4e29662fd2", "html_url": "https://github.com/google/jsonnet/commit/6d6a7b371d1f2fc62cf9bbd5d7fb5f4e29662fd2"}]}, {"sha": "6d6a7b371d1f2fc62cf9bbd5d7fb5f4e29662fd2", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-09T22:10:54Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T04:14:58Z"}, "message": "Bring spec up-to-date with language additions", "tree": {"sha": "503240d822207b4ad5d79043a715cf697de1359c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/503240d822207b4ad5d79043a715cf697de1359c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/6d6a7b371d1f2fc62cf9bbd5d7fb5f4e29662fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/6d6a7b371d1f2fc62cf9bbd5d7fb5f4e29662fd2", "html_url": "https://github.com/google/jsonnet/commit/6d6a7b371d1f2fc62cf9bbd5d7fb5f4e29662fd2", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/6d6a7b371d1f2fc62cf9bbd5d7fb5f4e29662fd2/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f7d3b70084fd63fe532ef288a2653268a1f8d0d", "url": "https://api.github.com/repos/google/jsonnet/commits/8f7d3b70084fd63fe532ef288a2653268a1f8d0d", "html_url": "https://github.com/google/jsonnet/commit/8f7d3b70084fd63fe532ef288a2653268a1f8d0d"}]}, {"sha": "8f7d3b70084fd63fe532ef288a2653268a1f8d0d", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T15:28:33Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T04:14:58Z"}, "message": "Add lexing details to spec.  Fix #98", "tree": {"sha": "00ecb6e9b35456af15869ac122d1888b01d14e47", "url": "https://api.github.com/repos/google/jsonnet/git/trees/00ecb6e9b35456af15869ac122d1888b01d14e47"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8f7d3b70084fd63fe532ef288a2653268a1f8d0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8f7d3b70084fd63fe532ef288a2653268a1f8d0d", "html_url": "https://github.com/google/jsonnet/commit/8f7d3b70084fd63fe532ef288a2653268a1f8d0d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8f7d3b70084fd63fe532ef288a2653268a1f8d0d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "996797ed559f9020843d26b096d6076e3f02a874", "url": "https://api.github.com/repos/google/jsonnet/commits/996797ed559f9020843d26b096d6076e3f02a874", "html_url": "https://github.com/google/jsonnet/commit/996797ed559f9020843d26b096d6076e3f02a874"}]}, {"sha": "996797ed559f9020843d26b096d6076e3f02a874", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T16:42:38Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T04:14:58Z"}, "message": "Update keyword highlighting", "tree": {"sha": "18a2ca7b3f04a642f95d95c361eec013fc167f2d", "url": "https://api.github.com/repos/google/jsonnet/git/trees/18a2ca7b3f04a642f95d95c361eec013fc167f2d"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/996797ed559f9020843d26b096d6076e3f02a874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/996797ed559f9020843d26b096d6076e3f02a874", "html_url": "https://github.com/google/jsonnet/commit/996797ed559f9020843d26b096d6076e3f02a874", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/996797ed559f9020843d26b096d6076e3f02a874/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6a231d6fdf948c860a3b95b5ef9ad92ddfd4a08", "url": "https://api.github.com/repos/google/jsonnet/commits/d6a231d6fdf948c860a3b95b5ef9ad92ddfd4a08", "html_url": "https://github.com/google/jsonnet/commit/d6a231d6fdf948c860a3b95b5ef9ad92ddfd4a08"}]}, {"sha": "d6a231d6fdf948c860a3b95b5ef9ad92ddfd4a08", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T15:28:07Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T04:14:58Z"}, "message": "Instruct jekyll to watch for changes in the unzipped files.", "tree": {"sha": "9f7faa668ea8ee77adbb0c0eb139370244c2ac2b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9f7faa668ea8ee77adbb0c0eb139370244c2ac2b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d6a231d6fdf948c860a3b95b5ef9ad92ddfd4a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d6a231d6fdf948c860a3b95b5ef9ad92ddfd4a08", "html_url": "https://github.com/google/jsonnet/commit/d6a231d6fdf948c860a3b95b5ef9ad92ddfd4a08", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d6a231d6fdf948c860a3b95b5ef9ad92ddfd4a08/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41f9f80b243853147d6aa0ed1b9c65654af05900", "url": "https://api.github.com/repos/google/jsonnet/commits/41f9f80b243853147d6aa0ed1b9c65654af05900", "html_url": "https://github.com/google/jsonnet/commit/41f9f80b243853147d6aa0ed1b9c65654af05900"}]}, {"sha": "41f9f80b243853147d6aa0ed1b9c65654af05900", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-17T13:29:50Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-11-02T04:14:58Z"}, "message": "Update links to libsonnet", "tree": {"sha": "dd3ef7f8be8a25e0f53fc6460ffdf4d03c4425cc", "url": "https://api.github.com/repos/google/jsonnet/git/trees/dd3ef7f8be8a25e0f53fc6460ffdf4d03c4425cc"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/41f9f80b243853147d6aa0ed1b9c65654af05900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/41f9f80b243853147d6aa0ed1b9c65654af05900", "html_url": "https://github.com/google/jsonnet/commit/41f9f80b243853147d6aa0ed1b9c65654af05900", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/41f9f80b243853147d6aa0ed1b9c65654af05900/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6db9f1167448a8a314a99331086a4fb05230344", "url": "https://api.github.com/repos/google/jsonnet/commits/c6db9f1167448a8a314a99331086a4fb05230344", "html_url": "https://github.com/google/jsonnet/commit/c6db9f1167448a8a314a99331086a4fb05230344"}]}, {"sha": "c6db9f1167448a8a314a99331086a4fb05230344", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-18T17:04:55Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-18T17:04:55Z"}, "message": "Attempt to fix travis", "tree": {"sha": "921724de6964baf9b385a2c39bd5ea7b148095c1", "url": "https://api.github.com/repos/google/jsonnet/git/trees/921724de6964baf9b385a2c39bd5ea7b148095c1"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c6db9f1167448a8a314a99331086a4fb05230344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c6db9f1167448a8a314a99331086a4fb05230344", "html_url": "https://github.com/google/jsonnet/commit/c6db9f1167448a8a314a99331086a4fb05230344", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c6db9f1167448a8a314a99331086a4fb05230344/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f68ed0571026658c71d860a1e23d20da54a8e7a8", "url": "https://api.github.com/repos/google/jsonnet/commits/f68ed0571026658c71d860a1e23d20da54a8e7a8", "html_url": "https://github.com/google/jsonnet/commit/f68ed0571026658c71d860a1e23d20da54a8e7a8"}]}, {"sha": "f68ed0571026658c71d860a1e23d20da54a8e7a8", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-17T16:42:09Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-17T16:42:09Z"}, "message": "Bump version to v0.9.0", "tree": {"sha": "87245a679f56c92b92e3b9e88be8f25272d5646e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/87245a679f56c92b92e3b9e88be8f25272d5646e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/f68ed0571026658c71d860a1e23d20da54a8e7a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/f68ed0571026658c71d860a1e23d20da54a8e7a8", "html_url": "https://github.com/google/jsonnet/commit/f68ed0571026658c71d860a1e23d20da54a8e7a8", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/f68ed0571026658c71d860a1e23d20da54a8e7a8/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3396a3ec649d9ec23f36cae1af079cd33242a9e", "url": "https://api.github.com/repos/google/jsonnet/commits/f3396a3ec649d9ec23f36cae1af079cd33242a9e", "html_url": "https://github.com/google/jsonnet/commit/f3396a3ec649d9ec23f36cae1af079cd33242a9e"}]}, {"sha": "f3396a3ec649d9ec23f36cae1af079cd33242a9e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-10-17T16:26:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-17T16:26:05Z"}, "message": "Merge pull request #241 from sparkprime/import_as_thunk\n\nCache import value via thunk", "tree": {"sha": "f8e1c0483088b80eb756234f8b6c22720d3a5597", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f8e1c0483088b80eb756234f8b6c22720d3a5597"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/f3396a3ec649d9ec23f36cae1af079cd33242a9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/f3396a3ec649d9ec23f36cae1af079cd33242a9e", "html_url": "https://github.com/google/jsonnet/commit/f3396a3ec649d9ec23f36cae1af079cd33242a9e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/f3396a3ec649d9ec23f36cae1af079cd33242a9e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7faa1455f64665999936458f81bae8582846fe5c", "url": "https://api.github.com/repos/google/jsonnet/commits/7faa1455f64665999936458f81bae8582846fe5c", "html_url": "https://github.com/google/jsonnet/commit/7faa1455f64665999936458f81bae8582846fe5c"}, {"sha": "3bbc3033edfe3aec2a163bb1aaa48fdc750a77b6", "url": "https://api.github.com/repos/google/jsonnet/commits/3bbc3033edfe3aec2a163bb1aaa48fdc750a77b6", "html_url": "https://github.com/google/jsonnet/commit/3bbc3033edfe3aec2a163bb1aaa48fdc750a77b6"}]}, {"sha": "7faa1455f64665999936458f81bae8582846fe5c", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-10-05T21:44:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-05T21:44:44Z"}, "message": "Merge pull request #242 from sparkprime/formatter_warnings\n\nFix warnings in formatter.cpp on travis osx", "tree": {"sha": "05c70a96be233b90d8e1f30a059a3c8e1a118a3b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/05c70a96be233b90d8e1f30a059a3c8e1a118a3b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7faa1455f64665999936458f81bae8582846fe5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7faa1455f64665999936458f81bae8582846fe5c", "html_url": "https://github.com/google/jsonnet/commit/7faa1455f64665999936458f81bae8582846fe5c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7faa1455f64665999936458f81bae8582846fe5c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bce0f42847d3e921446267b7b7b8c225a7517f2", "url": "https://api.github.com/repos/google/jsonnet/commits/7bce0f42847d3e921446267b7b7b8c225a7517f2", "html_url": "https://github.com/google/jsonnet/commit/7bce0f42847d3e921446267b7b7b8c225a7517f2"}, {"sha": "9f94774e97965811d3e3b4dc4ceed7be0cc16a23", "url": "https://api.github.com/repos/google/jsonnet/commits/9f94774e97965811d3e3b4dc4ceed7be0cc16a23", "html_url": "https://github.com/google/jsonnet/commit/9f94774e97965811d3e3b4dc4ceed7be0cc16a23"}]}, {"sha": "9f94774e97965811d3e3b4dc4ceed7be0cc16a23", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-05T19:45:16Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-05T19:45:16Z"}, "message": "Fix warnings in formatter.cpp on travis osx", "tree": {"sha": "05c70a96be233b90d8e1f30a059a3c8e1a118a3b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/05c70a96be233b90d8e1f30a059a3c8e1a118a3b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9f94774e97965811d3e3b4dc4ceed7be0cc16a23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9f94774e97965811d3e3b4dc4ceed7be0cc16a23", "html_url": "https://github.com/google/jsonnet/commit/9f94774e97965811d3e3b4dc4ceed7be0cc16a23", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9f94774e97965811d3e3b4dc4ceed7be0cc16a23/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bce0f42847d3e921446267b7b7b8c225a7517f2", "url": "https://api.github.com/repos/google/jsonnet/commits/7bce0f42847d3e921446267b7b7b8c225a7517f2", "html_url": "https://github.com/google/jsonnet/commit/7bce0f42847d3e921446267b7b7b8c225a7517f2"}]}, {"sha": "3bbc3033edfe3aec2a163bb1aaa48fdc750a77b6", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-04T22:19:37Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-04T22:19:37Z"}, "message": "Cache import value via thunk", "tree": {"sha": "afcb45bcf06e69443742aace6d895b70c827d16c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/afcb45bcf06e69443742aace6d895b70c827d16c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/3bbc3033edfe3aec2a163bb1aaa48fdc750a77b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/3bbc3033edfe3aec2a163bb1aaa48fdc750a77b6", "html_url": "https://github.com/google/jsonnet/commit/3bbc3033edfe3aec2a163bb1aaa48fdc750a77b6", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/3bbc3033edfe3aec2a163bb1aaa48fdc750a77b6/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3", "url": "https://api.github.com/repos/google/jsonnet/commits/e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3", "html_url": "https://github.com/google/jsonnet/commit/e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3"}]}, {"sha": "7bce0f42847d3e921446267b7b7b8c225a7517f2", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-10-04T19:19:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-04T19:19:00Z"}, "message": "Merge pull request #240 from sparkprime/cache_imported_ast\n\nImprove performance of repeated same file import", "tree": {"sha": "a56c00d3c83d4c4b201093cfdd90368cf1a7edca", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a56c00d3c83d4c4b201093cfdd90368cf1a7edca"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7bce0f42847d3e921446267b7b7b8c225a7517f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7bce0f42847d3e921446267b7b7b8c225a7517f2", "html_url": "https://github.com/google/jsonnet/commit/7bce0f42847d3e921446267b7b7b8c225a7517f2", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7bce0f42847d3e921446267b7b7b8c225a7517f2/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4296ec522a704d1dfe5e3d04402853d8ed0b20b0", "url": "https://api.github.com/repos/google/jsonnet/commits/4296ec522a704d1dfe5e3d04402853d8ed0b20b0", "html_url": "https://github.com/google/jsonnet/commit/4296ec522a704d1dfe5e3d04402853d8ed0b20b0"}, {"sha": "e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3", "url": "https://api.github.com/repos/google/jsonnet/commits/e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3", "html_url": "https://github.com/google/jsonnet/commit/e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3"}]}, {"sha": "e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-04T18:01:00Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-10-04T18:01:00Z"}, "message": "Improve performance of repeated same file import", "tree": {"sha": "a56c00d3c83d4c4b201093cfdd90368cf1a7edca", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a56c00d3c83d4c4b201093cfdd90368cf1a7edca"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3", "html_url": "https://github.com/google/jsonnet/commit/e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e3f3e8a7a321e16594bd1cd7d5b0661c0f4f54c3/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4296ec522a704d1dfe5e3d04402853d8ed0b20b0", "url": "https://api.github.com/repos/google/jsonnet/commits/4296ec522a704d1dfe5e3d04402853d8ed0b20b0", "html_url": "https://github.com/google/jsonnet/commit/4296ec522a704d1dfe5e3d04402853d8ed0b20b0"}]}, {"sha": "4296ec522a704d1dfe5e3d04402853d8ed0b20b0", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-09-22T13:14:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-22T13:14:38Z"}, "message": "Merge pull request #237 from sparkprime/fix-quote-field\n\nFix #236", "tree": {"sha": "6c665907ef5ccd74138d19f2c853da2b979fb64e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/6c665907ef5ccd74138d19f2c853da2b979fb64e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4296ec522a704d1dfe5e3d04402853d8ed0b20b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4296ec522a704d1dfe5e3d04402853d8ed0b20b0", "html_url": "https://github.com/google/jsonnet/commit/4296ec522a704d1dfe5e3d04402853d8ed0b20b0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4296ec522a704d1dfe5e3d04402853d8ed0b20b0/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "227079272a19d03adf34332e2a0c11906e081894", "url": "https://api.github.com/repos/google/jsonnet/commits/227079272a19d03adf34332e2a0c11906e081894", "html_url": "https://github.com/google/jsonnet/commit/227079272a19d03adf34332e2a0c11906e081894"}, {"sha": "257c889ec674a0ca16cfd3ac1d96a8c650555c4e", "url": "https://api.github.com/repos/google/jsonnet/commits/257c889ec674a0ca16cfd3ac1d96a8c650555c4e", "html_url": "https://github.com/google/jsonnet/commit/257c889ec674a0ca16cfd3ac1d96a8c650555c4e"}]}, {"sha": "257c889ec674a0ca16cfd3ac1d96a8c650555c4e", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-09-21T23:18:44Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-09-21T23:18:44Z"}, "message": "Fix #236", "tree": {"sha": "9a4720080e43ff1979ac31e960fc75df50eb98b4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9a4720080e43ff1979ac31e960fc75df50eb98b4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/257c889ec674a0ca16cfd3ac1d96a8c650555c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/257c889ec674a0ca16cfd3ac1d96a8c650555c4e", "html_url": "https://github.com/google/jsonnet/commit/257c889ec674a0ca16cfd3ac1d96a8c650555c4e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/257c889ec674a0ca16cfd3ac1d96a8c650555c4e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f83c307132d3c25e19fd61b4a28977965668535", "url": "https://api.github.com/repos/google/jsonnet/commits/5f83c307132d3c25e19fd61b4a28977965668535", "html_url": "https://github.com/google/jsonnet/commit/5f83c307132d3c25e19fd61b4a28977965668535"}]}, {"sha": "227079272a19d03adf34332e2a0c11906e081894", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-08-19T22:47:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-19T22:47:52Z"}, "message": "Merge pull request #231 from sparkprime/fmt_closing_brace\n\nFmt closing brace", "tree": {"sha": "39a4c6a859bc0adaa8c25a19f7a9c0c8852256dd", "url": "https://api.github.com/repos/google/jsonnet/git/trees/39a4c6a859bc0adaa8c25a19f7a9c0c8852256dd"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/227079272a19d03adf34332e2a0c11906e081894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/227079272a19d03adf34332e2a0c11906e081894", "html_url": "https://github.com/google/jsonnet/commit/227079272a19d03adf34332e2a0c11906e081894", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/227079272a19d03adf34332e2a0c11906e081894/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f83c307132d3c25e19fd61b4a28977965668535", "url": "https://api.github.com/repos/google/jsonnet/commits/5f83c307132d3c25e19fd61b4a28977965668535", "html_url": "https://github.com/google/jsonnet/commit/5f83c307132d3c25e19fd61b4a28977965668535"}, {"sha": "a9d1ad5b75336dce9c471c203ae0989c681bed3f", "url": "https://api.github.com/repos/google/jsonnet/commits/a9d1ad5b75336dce9c471c203ae0989c681bed3f", "html_url": "https://github.com/google/jsonnet/commit/a9d1ad5b75336dce9c471c203ae0989c681bed3f"}]}, {"sha": "a9d1ad5b75336dce9c471c203ae0989c681bed3f", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-08-19T22:30:45Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-08-19T22:31:52Z"}, "message": "Fix fodder concatenation when moving comma", "tree": {"sha": "39a4c6a859bc0adaa8c25a19f7a9c0c8852256dd", "url": "https://api.github.com/repos/google/jsonnet/git/trees/39a4c6a859bc0adaa8c25a19f7a9c0c8852256dd"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a9d1ad5b75336dce9c471c203ae0989c681bed3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a9d1ad5b75336dce9c471c203ae0989c681bed3f", "html_url": "https://github.com/google/jsonnet/commit/a9d1ad5b75336dce9c471c203ae0989c681bed3f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a9d1ad5b75336dce9c471c203ae0989c681bed3f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3c95e38112937682f52ccd22ef54d7a8ff78f33", "url": "https://api.github.com/repos/google/jsonnet/commits/a3c95e38112937682f52ccd22ef54d7a8ff78f33", "html_url": "https://github.com/google/jsonnet/commit/a3c95e38112937682f52ccd22ef54d7a8ff78f33"}]}, {"sha": "a3c95e38112937682f52ccd22ef54d7a8ff78f33", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-08-19T22:06:40Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-08-19T22:06:40Z"}, "message": "Add test", "tree": {"sha": "a0fd014860909cec9c620e3cb3c4d2e6a70b13a5", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a0fd014860909cec9c620e3cb3c4d2e6a70b13a5"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a3c95e38112937682f52ccd22ef54d7a8ff78f33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a3c95e38112937682f52ccd22ef54d7a8ff78f33", "html_url": "https://github.com/google/jsonnet/commit/a3c95e38112937682f52ccd22ef54d7a8ff78f33", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a3c95e38112937682f52ccd22ef54d7a8ff78f33/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f83c307132d3c25e19fd61b4a28977965668535", "url": "https://api.github.com/repos/google/jsonnet/commits/5f83c307132d3c25e19fd61b4a28977965668535", "html_url": "https://github.com/google/jsonnet/commit/5f83c307132d3c25e19fd61b4a28977965668535"}]}, {"sha": "5f83c307132d3c25e19fd61b4a28977965668535", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-08-16T21:06:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-16T21:06:11Z"}, "message": "Merge pull request #229 from sparkprime/json_to_heap_segfault\n\nPostpone setting filled until content points to valid data.", "tree": {"sha": "dc1bbbc7f9a20f1c846348a490f217623e45cb27", "url": "https://api.github.com/repos/google/jsonnet/git/trees/dc1bbbc7f9a20f1c846348a490f217623e45cb27"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/5f83c307132d3c25e19fd61b4a28977965668535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/5f83c307132d3c25e19fd61b4a28977965668535", "html_url": "https://github.com/google/jsonnet/commit/5f83c307132d3c25e19fd61b4a28977965668535", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/5f83c307132d3c25e19fd61b4a28977965668535/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7415b0bb8e7e54361bdff40d180edbed6808e76f", "url": "https://api.github.com/repos/google/jsonnet/commits/7415b0bb8e7e54361bdff40d180edbed6808e76f", "html_url": "https://github.com/google/jsonnet/commit/7415b0bb8e7e54361bdff40d180edbed6808e76f"}, {"sha": "6ea31d59cc1c7c4fdc1ee3bcc3c0603b212c3955", "url": "https://api.github.com/repos/google/jsonnet/commits/6ea31d59cc1c7c4fdc1ee3bcc3c0603b212c3955", "html_url": "https://github.com/google/jsonnet/commit/6ea31d59cc1c7c4fdc1ee3bcc3c0603b212c3955"}]}, {"sha": "6ea31d59cc1c7c4fdc1ee3bcc3c0603b212c3955", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-08-16T13:26:28Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-08-16T13:26:28Z"}, "message": "Postpone setting filled until content points to valid data.", "tree": {"sha": "1d12ec8efbd0e030f7ad88709246972b6c4255e4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/1d12ec8efbd0e030f7ad88709246972b6c4255e4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/6ea31d59cc1c7c4fdc1ee3bcc3c0603b212c3955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/6ea31d59cc1c7c4fdc1ee3bcc3c0603b212c3955", "html_url": "https://github.com/google/jsonnet/commit/6ea31d59cc1c7c4fdc1ee3bcc3c0603b212c3955", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/6ea31d59cc1c7c4fdc1ee3bcc3c0603b212c3955/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88ad9d30d87663bae01f829735a2e0b01437bd2f", "url": "https://api.github.com/repos/google/jsonnet/commits/88ad9d30d87663bae01f829735a2e0b01437bd2f", "html_url": "https://github.com/google/jsonnet/commit/88ad9d30d87663bae01f829735a2e0b01437bd2f"}]}, {"sha": "7415b0bb8e7e54361bdff40d180edbed6808e76f", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-07-26T17:43:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-26T17:43:51Z"}, "message": "Merge pull request #224 from dastergon/fix_pagination\n\nFix pagination in the 3rd page of the case study", "tree": {"sha": "b299d59f705e7bfa16fd41322438b36a359889b0", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b299d59f705e7bfa16fd41322438b36a359889b0"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7415b0bb8e7e54361bdff40d180edbed6808e76f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7415b0bb8e7e54361bdff40d180edbed6808e76f", "html_url": "https://github.com/google/jsonnet/commit/7415b0bb8e7e54361bdff40d180edbed6808e76f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7415b0bb8e7e54361bdff40d180edbed6808e76f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c820a6f563f0183a64113108ebaedcb357328fd8", "url": "https://api.github.com/repos/google/jsonnet/commits/c820a6f563f0183a64113108ebaedcb357328fd8", "html_url": "https://github.com/google/jsonnet/commit/c820a6f563f0183a64113108ebaedcb357328fd8"}, {"sha": "9c78c3d99de9cd6836437d2a620d7125c08ccac6", "url": "https://api.github.com/repos/google/jsonnet/commits/9c78c3d99de9cd6836437d2a620d7125c08ccac6", "html_url": "https://github.com/google/jsonnet/commit/9c78c3d99de9cd6836437d2a620d7125c08ccac6"}]}, {"sha": "9c78c3d99de9cd6836437d2a620d7125c08ccac6", "commit": {"author": {"name": "Pavlos Ratis", "email": "dastergon@dastergon.gr", "date": "2016-07-26T13:03:37Z"}, "committer": {"name": "Pavlos Ratis", "email": "dastergon@dastergon.gr", "date": "2016-07-26T13:03:37Z"}, "message": "fix pagination in the 3rd page of the case study\n\nThe page enumeration was broken in the third page because\nthere was a leading slash missing in the hyperlinks, and they raised\n404 errors when trying to move backwards.", "tree": {"sha": "b299d59f705e7bfa16fd41322438b36a359889b0", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b299d59f705e7bfa16fd41322438b36a359889b0"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9c78c3d99de9cd6836437d2a620d7125c08ccac6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9c78c3d99de9cd6836437d2a620d7125c08ccac6", "html_url": "https://github.com/google/jsonnet/commit/9c78c3d99de9cd6836437d2a620d7125c08ccac6", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9c78c3d99de9cd6836437d2a620d7125c08ccac6/comments", "author": {"login": "dastergon", "id": 1192342, "avatar_url": "https://avatars0.githubusercontent.com/u/1192342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dastergon", "html_url": "https://github.com/dastergon", "followers_url": "https://api.github.com/users/dastergon/followers", "following_url": "https://api.github.com/users/dastergon/following{/other_user}", "gists_url": "https://api.github.com/users/dastergon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dastergon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dastergon/subscriptions", "organizations_url": "https://api.github.com/users/dastergon/orgs", "repos_url": "https://api.github.com/users/dastergon/repos", "events_url": "https://api.github.com/users/dastergon/events{/privacy}", "received_events_url": "https://api.github.com/users/dastergon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dastergon", "id": 1192342, "avatar_url": "https://avatars0.githubusercontent.com/u/1192342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dastergon", "html_url": "https://github.com/dastergon", "followers_url": "https://api.github.com/users/dastergon/followers", "following_url": "https://api.github.com/users/dastergon/following{/other_user}", "gists_url": "https://api.github.com/users/dastergon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dastergon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dastergon/subscriptions", "organizations_url": "https://api.github.com/users/dastergon/orgs", "repos_url": "https://api.github.com/users/dastergon/repos", "events_url": "https://api.github.com/users/dastergon/events{/privacy}", "received_events_url": "https://api.github.com/users/dastergon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c820a6f563f0183a64113108ebaedcb357328fd8", "url": "https://api.github.com/repos/google/jsonnet/commits/c820a6f563f0183a64113108ebaedcb357328fd8", "html_url": "https://github.com/google/jsonnet/commit/c820a6f563f0183a64113108ebaedcb357328fd8"}]}, {"sha": "c820a6f563f0183a64113108ebaedcb357328fd8", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-07-16T14:26:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-16T14:26:12Z"}, "message": "Merge pull request #218 from Neeke/master\n\nFixed libjsonnet.h href in bindings.html", "tree": {"sha": "a4997fda7051a36946c27263eac88f22fcd7e420", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a4997fda7051a36946c27263eac88f22fcd7e420"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c820a6f563f0183a64113108ebaedcb357328fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c820a6f563f0183a64113108ebaedcb357328fd8", "html_url": "https://github.com/google/jsonnet/commit/c820a6f563f0183a64113108ebaedcb357328fd8", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c820a6f563f0183a64113108ebaedcb357328fd8/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75049638d0d90a3fa20f4f166a428edf1f4c8bea", "url": "https://api.github.com/repos/google/jsonnet/commits/75049638d0d90a3fa20f4f166a428edf1f4c8bea", "html_url": "https://github.com/google/jsonnet/commit/75049638d0d90a3fa20f4f166a428edf1f4c8bea"}, {"sha": "ded20d150db5e701cfa39e08af58dc2ae2ab230c", "url": "https://api.github.com/repos/google/jsonnet/commits/ded20d150db5e701cfa39e08af58dc2ae2ab230c", "html_url": "https://github.com/google/jsonnet/commit/ded20d150db5e701cfa39e08af58dc2ae2ab230c"}]}, {"sha": "ded20d150db5e701cfa39e08af58dc2ae2ab230c", "commit": {"author": {"name": "neeke", "email": "neeke@php.net", "date": "2016-07-16T08:02:30Z"}, "committer": {"name": "neeke", "email": "neeke@php.net", "date": "2016-07-16T08:02:30Z"}, "message": "Reformat html style.", "tree": {"sha": "a4997fda7051a36946c27263eac88f22fcd7e420", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a4997fda7051a36946c27263eac88f22fcd7e420"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ded20d150db5e701cfa39e08af58dc2ae2ab230c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ded20d150db5e701cfa39e08af58dc2ae2ab230c", "html_url": "https://github.com/google/jsonnet/commit/ded20d150db5e701cfa39e08af58dc2ae2ab230c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ded20d150db5e701cfa39e08af58dc2ae2ab230c/comments", "author": {"login": "Neeke", "id": 1913308, "avatar_url": "https://avatars1.githubusercontent.com/u/1913308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neeke", "html_url": "https://github.com/Neeke", "followers_url": "https://api.github.com/users/Neeke/followers", "following_url": "https://api.github.com/users/Neeke/following{/other_user}", "gists_url": "https://api.github.com/users/Neeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neeke/subscriptions", "organizations_url": "https://api.github.com/users/Neeke/orgs", "repos_url": "https://api.github.com/users/Neeke/repos", "events_url": "https://api.github.com/users/Neeke/events{/privacy}", "received_events_url": "https://api.github.com/users/Neeke/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Neeke", "id": 1913308, "avatar_url": "https://avatars1.githubusercontent.com/u/1913308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neeke", "html_url": "https://github.com/Neeke", "followers_url": "https://api.github.com/users/Neeke/followers", "following_url": "https://api.github.com/users/Neeke/following{/other_user}", "gists_url": "https://api.github.com/users/Neeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neeke/subscriptions", "organizations_url": "https://api.github.com/users/Neeke/orgs", "repos_url": "https://api.github.com/users/Neeke/repos", "events_url": "https://api.github.com/users/Neeke/events{/privacy}", "received_events_url": "https://api.github.com/users/Neeke/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39fba3434d0aaf0b54564a3195181a40caffeb03", "url": "https://api.github.com/repos/google/jsonnet/commits/39fba3434d0aaf0b54564a3195181a40caffeb03", "html_url": "https://github.com/google/jsonnet/commit/39fba3434d0aaf0b54564a3195181a40caffeb03"}]}, {"sha": "39fba3434d0aaf0b54564a3195181a40caffeb03", "commit": {"author": {"name": "neeke", "email": "neeke@php.net", "date": "2016-07-16T08:00:14Z"}, "committer": {"name": "neeke", "email": "neeke@php.net", "date": "2016-07-16T08:00:14Z"}, "message": "Fixed libjsonnet.h href in bindings.html", "tree": {"sha": "057317e535e5139dc37b04219fd7adb67f720543", "url": "https://api.github.com/repos/google/jsonnet/git/trees/057317e535e5139dc37b04219fd7adb67f720543"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/39fba3434d0aaf0b54564a3195181a40caffeb03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/39fba3434d0aaf0b54564a3195181a40caffeb03", "html_url": "https://github.com/google/jsonnet/commit/39fba3434d0aaf0b54564a3195181a40caffeb03", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/39fba3434d0aaf0b54564a3195181a40caffeb03/comments", "author": {"login": "Neeke", "id": 1913308, "avatar_url": "https://avatars1.githubusercontent.com/u/1913308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neeke", "html_url": "https://github.com/Neeke", "followers_url": "https://api.github.com/users/Neeke/followers", "following_url": "https://api.github.com/users/Neeke/following{/other_user}", "gists_url": "https://api.github.com/users/Neeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neeke/subscriptions", "organizations_url": "https://api.github.com/users/Neeke/orgs", "repos_url": "https://api.github.com/users/Neeke/repos", "events_url": "https://api.github.com/users/Neeke/events{/privacy}", "received_events_url": "https://api.github.com/users/Neeke/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Neeke", "id": 1913308, "avatar_url": "https://avatars1.githubusercontent.com/u/1913308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neeke", "html_url": "https://github.com/Neeke", "followers_url": "https://api.github.com/users/Neeke/followers", "following_url": "https://api.github.com/users/Neeke/following{/other_user}", "gists_url": "https://api.github.com/users/Neeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neeke/subscriptions", "organizations_url": "https://api.github.com/users/Neeke/orgs", "repos_url": "https://api.github.com/users/Neeke/repos", "events_url": "https://api.github.com/users/Neeke/events{/privacy}", "received_events_url": "https://api.github.com/users/Neeke/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75049638d0d90a3fa20f4f166a428edf1f4c8bea", "url": "https://api.github.com/repos/google/jsonnet/commits/75049638d0d90a3fa20f4f166a428edf1f4c8bea", "html_url": "https://github.com/google/jsonnet/commit/75049638d0d90a3fa20f4f166a428edf1f4c8bea"}]}, {"sha": "75049638d0d90a3fa20f4f166a428edf1f4c8bea", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-07-08T17:48:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-08T17:48:32Z"}, "message": "Merge pull request #215 from sparkprime/fix_native_bool\n\nFix #214 bool returned as number, add test", "tree": {"sha": "9f7fbd51bb6c59f8f7bee553798b0dd66d2655d4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9f7fbd51bb6c59f8f7bee553798b0dd66d2655d4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/75049638d0d90a3fa20f4f166a428edf1f4c8bea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/75049638d0d90a3fa20f4f166a428edf1f4c8bea", "html_url": "https://github.com/google/jsonnet/commit/75049638d0d90a3fa20f4f166a428edf1f4c8bea", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/75049638d0d90a3fa20f4f166a428edf1f4c8bea/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88ad9d30d87663bae01f829735a2e0b01437bd2f", "url": "https://api.github.com/repos/google/jsonnet/commits/88ad9d30d87663bae01f829735a2e0b01437bd2f", "html_url": "https://github.com/google/jsonnet/commit/88ad9d30d87663bae01f829735a2e0b01437bd2f"}, {"sha": "13fa61e5a1adc7df56fc9ac225dfd1627ec7829d", "url": "https://api.github.com/repos/google/jsonnet/commits/13fa61e5a1adc7df56fc9ac225dfd1627ec7829d", "html_url": "https://github.com/google/jsonnet/commit/13fa61e5a1adc7df56fc9ac225dfd1627ec7829d"}]}, {"sha": "13fa61e5a1adc7df56fc9ac225dfd1627ec7829d", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-07-08T16:54:47Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-07-08T16:54:47Z"}, "message": "Fix #214 bool returned as number, add test", "tree": {"sha": "9f7fbd51bb6c59f8f7bee553798b0dd66d2655d4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9f7fbd51bb6c59f8f7bee553798b0dd66d2655d4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/13fa61e5a1adc7df56fc9ac225dfd1627ec7829d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/13fa61e5a1adc7df56fc9ac225dfd1627ec7829d", "html_url": "https://github.com/google/jsonnet/commit/13fa61e5a1adc7df56fc9ac225dfd1627ec7829d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/13fa61e5a1adc7df56fc9ac225dfd1627ec7829d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88ad9d30d87663bae01f829735a2e0b01437bd2f", "url": "https://api.github.com/repos/google/jsonnet/commits/88ad9d30d87663bae01f829735a2e0b01437bd2f", "html_url": "https://github.com/google/jsonnet/commit/88ad9d30d87663bae01f829735a2e0b01437bd2f"}]}, {"sha": "88ad9d30d87663bae01f829735a2e0b01437bd2f", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-07-06T19:34:57Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-07-06T19:34:57Z"}, "message": "Bump version to 0.8.9", "tree": {"sha": "ecd0224cd333c5ee8af69f1471277ee2f2b288f6", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ecd0224cd333c5ee8af69f1471277ee2f2b288f6"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/88ad9d30d87663bae01f829735a2e0b01437bd2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/88ad9d30d87663bae01f829735a2e0b01437bd2f", "html_url": "https://github.com/google/jsonnet/commit/88ad9d30d87663bae01f829735a2e0b01437bd2f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/88ad9d30d87663bae01f829735a2e0b01437bd2f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0542d240b1f3eaf0da7ef68294555a7b146ea149", "url": "https://api.github.com/repos/google/jsonnet/commits/0542d240b1f3eaf0da7ef68294555a7b146ea149", "html_url": "https://github.com/google/jsonnet/commit/0542d240b1f3eaf0da7ef68294555a7b146ea149"}]}, {"sha": "0542d240b1f3eaf0da7ef68294555a7b146ea149", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-07-06T00:55:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-06T00:55:46Z"}, "message": "Merge pull request #213 from andrewmchen/parse-int\n\nadded parseInt to stdlib", "tree": {"sha": "a55975bf20222ad3c5f643bcd04a4d728ea710d4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a55975bf20222ad3c5f643bcd04a4d728ea710d4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/0542d240b1f3eaf0da7ef68294555a7b146ea149", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/0542d240b1f3eaf0da7ef68294555a7b146ea149", "html_url": "https://github.com/google/jsonnet/commit/0542d240b1f3eaf0da7ef68294555a7b146ea149", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/0542d240b1f3eaf0da7ef68294555a7b146ea149/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66ade34c7fdff820b5e5eecc555ba54fa1eccc2c", "url": "https://api.github.com/repos/google/jsonnet/commits/66ade34c7fdff820b5e5eecc555ba54fa1eccc2c", "html_url": "https://github.com/google/jsonnet/commit/66ade34c7fdff820b5e5eecc555ba54fa1eccc2c"}, {"sha": "c12f39d72177c8a0f555d5294585b173cfcc3c6f", "url": "https://api.github.com/repos/google/jsonnet/commits/c12f39d72177c8a0f555d5294585b173cfcc3c6f", "html_url": "https://github.com/google/jsonnet/commit/c12f39d72177c8a0f555d5294585b173cfcc3c6f"}]}, {"sha": "c12f39d72177c8a0f555d5294585b173cfcc3c6f", "commit": {"author": {"name": "Andrew Chen", "email": "andrewchen@databricks.com", "date": "2016-07-05T19:34:45Z"}, "committer": {"name": "Andrew Chen", "email": "andrewchen@databricks.com", "date": "2016-07-05T20:46:12Z"}, "message": "parseint", "tree": {"sha": "a55975bf20222ad3c5f643bcd04a4d728ea710d4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a55975bf20222ad3c5f643bcd04a4d728ea710d4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c12f39d72177c8a0f555d5294585b173cfcc3c6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c12f39d72177c8a0f555d5294585b173cfcc3c6f", "html_url": "https://github.com/google/jsonnet/commit/c12f39d72177c8a0f555d5294585b173cfcc3c6f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c12f39d72177c8a0f555d5294585b173cfcc3c6f/comments", "author": {"login": "andrewmchen", "id": 4492809, "avatar_url": "https://avatars3.githubusercontent.com/u/4492809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewmchen", "html_url": "https://github.com/andrewmchen", "followers_url": "https://api.github.com/users/andrewmchen/followers", "following_url": "https://api.github.com/users/andrewmchen/following{/other_user}", "gists_url": "https://api.github.com/users/andrewmchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewmchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewmchen/subscriptions", "organizations_url": "https://api.github.com/users/andrewmchen/orgs", "repos_url": "https://api.github.com/users/andrewmchen/repos", "events_url": "https://api.github.com/users/andrewmchen/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewmchen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andrewmchen", "id": 4492809, "avatar_url": "https://avatars3.githubusercontent.com/u/4492809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewmchen", "html_url": "https://github.com/andrewmchen", "followers_url": "https://api.github.com/users/andrewmchen/followers", "following_url": "https://api.github.com/users/andrewmchen/following{/other_user}", "gists_url": "https://api.github.com/users/andrewmchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewmchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewmchen/subscriptions", "organizations_url": "https://api.github.com/users/andrewmchen/orgs", "repos_url": "https://api.github.com/users/andrewmchen/repos", "events_url": "https://api.github.com/users/andrewmchen/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewmchen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66ade34c7fdff820b5e5eecc555ba54fa1eccc2c", "url": "https://api.github.com/repos/google/jsonnet/commits/66ade34c7fdff820b5e5eecc555ba54fa1eccc2c", "html_url": "https://github.com/google/jsonnet/commit/66ade34c7fdff820b5e5eecc555ba54fa1eccc2c"}]}, {"sha": "66ade34c7fdff820b5e5eecc555ba54fa1eccc2c", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-06-23T16:26:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-23T16:26:34Z"}, "message": "Merge pull request #209 from sparkprime/fix_single_quote_fmt\n\nFix #197", "tree": {"sha": "ce5d4e8daae02050a87391a3985e7b5b9eb3e8e2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ce5d4e8daae02050a87391a3985e7b5b9eb3e8e2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/66ade34c7fdff820b5e5eecc555ba54fa1eccc2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/66ade34c7fdff820b5e5eecc555ba54fa1eccc2c", "html_url": "https://github.com/google/jsonnet/commit/66ade34c7fdff820b5e5eecc555ba54fa1eccc2c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/66ade34c7fdff820b5e5eecc555ba54fa1eccc2c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a523d7ff7337c809585e959b6c5f4f6f3af0a25d", "url": "https://api.github.com/repos/google/jsonnet/commits/a523d7ff7337c809585e959b6c5f4f6f3af0a25d", "html_url": "https://github.com/google/jsonnet/commit/a523d7ff7337c809585e959b6c5f4f6f3af0a25d"}, {"sha": "bac3d43cece3a6207152bd86c217998d782f230c", "url": "https://api.github.com/repos/google/jsonnet/commits/bac3d43cece3a6207152bd86c217998d782f230c", "html_url": "https://github.com/google/jsonnet/commit/bac3d43cece3a6207152bd86c217998d782f230c"}]}, {"sha": "bac3d43cece3a6207152bd86c217998d782f230c", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-06-23T16:12:40Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-06-23T16:14:37Z"}, "message": "Fix #197", "tree": {"sha": "8da579f64d055b79047c1582484e1d1ff7639ce8", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8da579f64d055b79047c1582484e1d1ff7639ce8"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/bac3d43cece3a6207152bd86c217998d782f230c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/bac3d43cece3a6207152bd86c217998d782f230c", "html_url": "https://github.com/google/jsonnet/commit/bac3d43cece3a6207152bd86c217998d782f230c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/bac3d43cece3a6207152bd86c217998d782f230c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adf169b1e4a4ba170f58b47111ed88552fae42c8", "url": "https://api.github.com/repos/google/jsonnet/commits/adf169b1e4a4ba170f58b47111ed88552fae42c8", "html_url": "https://github.com/google/jsonnet/commit/adf169b1e4a4ba170f58b47111ed88552fae42c8"}]}, {"sha": "a523d7ff7337c809585e959b6c5f4f6f3af0a25d", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-06-23T16:02:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-23T16:02:34Z"}, "message": "Merge pull request #208 from lamuguo/master\n\nFor easily using jsonnet in test.", "tree": {"sha": "905e18b1bba15ac6504b9f0abd23023d9a3699da", "url": "https://api.github.com/repos/google/jsonnet/git/trees/905e18b1bba15ac6504b9f0abd23023d9a3699da"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a523d7ff7337c809585e959b6c5f4f6f3af0a25d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a523d7ff7337c809585e959b6c5f4f6f3af0a25d", "html_url": "https://github.com/google/jsonnet/commit/a523d7ff7337c809585e959b6c5f4f6f3af0a25d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a523d7ff7337c809585e959b6c5f4f6f3af0a25d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adf169b1e4a4ba170f58b47111ed88552fae42c8", "url": "https://api.github.com/repos/google/jsonnet/commits/adf169b1e4a4ba170f58b47111ed88552fae42c8", "html_url": "https://github.com/google/jsonnet/commit/adf169b1e4a4ba170f58b47111ed88552fae42c8"}, {"sha": "bdb4f009611e7806e7f00cf02e35bf3be9227989", "url": "https://api.github.com/repos/google/jsonnet/commits/bdb4f009611e7806e7f00cf02e35bf3be9227989", "html_url": "https://github.com/google/jsonnet/commit/bdb4f009611e7806e7f00cf02e35bf3be9227989"}]}, {"sha": "bdb4f009611e7806e7f00cf02e35bf3be9227989", "commit": {"author": {"name": "Xiaofeng", "email": "lamuguo@gmail.com", "date": "2016-06-23T02:20:07Z"}, "committer": {"name": "Xiaofeng", "email": "lamuguo@gmail.com", "date": "2016-06-23T02:20:07Z"}, "message": "For easily using jsonnet in test", "tree": {"sha": "905e18b1bba15ac6504b9f0abd23023d9a3699da", "url": "https://api.github.com/repos/google/jsonnet/git/trees/905e18b1bba15ac6504b9f0abd23023d9a3699da"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/bdb4f009611e7806e7f00cf02e35bf3be9227989", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/bdb4f009611e7806e7f00cf02e35bf3be9227989", "html_url": "https://github.com/google/jsonnet/commit/bdb4f009611e7806e7f00cf02e35bf3be9227989", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/bdb4f009611e7806e7f00cf02e35bf3be9227989/comments", "author": {"login": "lamuguo", "id": 385712, "avatar_url": "https://avatars3.githubusercontent.com/u/385712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lamuguo", "html_url": "https://github.com/lamuguo", "followers_url": "https://api.github.com/users/lamuguo/followers", "following_url": "https://api.github.com/users/lamuguo/following{/other_user}", "gists_url": "https://api.github.com/users/lamuguo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lamuguo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lamuguo/subscriptions", "organizations_url": "https://api.github.com/users/lamuguo/orgs", "repos_url": "https://api.github.com/users/lamuguo/repos", "events_url": "https://api.github.com/users/lamuguo/events{/privacy}", "received_events_url": "https://api.github.com/users/lamuguo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lamuguo", "id": 385712, "avatar_url": "https://avatars3.githubusercontent.com/u/385712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lamuguo", "html_url": "https://github.com/lamuguo", "followers_url": "https://api.github.com/users/lamuguo/followers", "following_url": "https://api.github.com/users/lamuguo/following{/other_user}", "gists_url": "https://api.github.com/users/lamuguo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lamuguo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lamuguo/subscriptions", "organizations_url": "https://api.github.com/users/lamuguo/orgs", "repos_url": "https://api.github.com/users/lamuguo/repos", "events_url": "https://api.github.com/users/lamuguo/events{/privacy}", "received_events_url": "https://api.github.com/users/lamuguo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adf169b1e4a4ba170f58b47111ed88552fae42c8", "url": "https://api.github.com/repos/google/jsonnet/commits/adf169b1e4a4ba170f58b47111ed88552fae42c8", "html_url": "https://github.com/google/jsonnet/commit/adf169b1e4a4ba170f58b47111ed88552fae42c8"}]}, {"sha": "adf169b1e4a4ba170f58b47111ed88552fae42c8", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-06-03T00:51:26Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-06-03T00:51:26Z"}, "message": "Merge pull request #204 from sparkprime/extensions\n\nReturn arbitrary JSON from native extensions", "tree": {"sha": "5c5de6baa08e127b1e911b3a81c5b8a456738e63", "url": "https://api.github.com/repos/google/jsonnet/git/trees/5c5de6baa08e127b1e911b3a81c5b8a456738e63"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/adf169b1e4a4ba170f58b47111ed88552fae42c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/adf169b1e4a4ba170f58b47111ed88552fae42c8", "html_url": "https://github.com/google/jsonnet/commit/adf169b1e4a4ba170f58b47111ed88552fae42c8", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/adf169b1e4a4ba170f58b47111ed88552fae42c8/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "336111af500a3fdd87690609f1e4a89f6fe2c91c", "url": "https://api.github.com/repos/google/jsonnet/commits/336111af500a3fdd87690609f1e4a89f6fe2c91c", "html_url": "https://github.com/google/jsonnet/commit/336111af500a3fdd87690609f1e4a89f6fe2c91c"}, {"sha": "4ef72cd8d1a34644180e0c226ce40f05eb6832a9", "url": "https://api.github.com/repos/google/jsonnet/commits/4ef72cd8d1a34644180e0c226ce40f05eb6832a9", "html_url": "https://github.com/google/jsonnet/commit/4ef72cd8d1a34644180e0c226ce40f05eb6832a9"}]}, {"sha": "4ef72cd8d1a34644180e0c226ce40f05eb6832a9", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-06-03T00:47:52Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-06-03T00:47:52Z"}, "message": "Fix build on Mac", "tree": {"sha": "5c5de6baa08e127b1e911b3a81c5b8a456738e63", "url": "https://api.github.com/repos/google/jsonnet/git/trees/5c5de6baa08e127b1e911b3a81c5b8a456738e63"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4ef72cd8d1a34644180e0c226ce40f05eb6832a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4ef72cd8d1a34644180e0c226ce40f05eb6832a9", "html_url": "https://github.com/google/jsonnet/commit/4ef72cd8d1a34644180e0c226ce40f05eb6832a9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4ef72cd8d1a34644180e0c226ce40f05eb6832a9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2a01f7d96d5e2a664b2bae904bd94f218dc79da", "url": "https://api.github.com/repos/google/jsonnet/commits/a2a01f7d96d5e2a664b2bae904bd94f218dc79da", "html_url": "https://github.com/google/jsonnet/commit/a2a01f7d96d5e2a664b2bae904bd94f218dc79da"}]}, {"sha": "a2a01f7d96d5e2a664b2bae904bd94f218dc79da", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-06-03T00:31:50Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-06-03T00:31:50Z"}, "message": "Native python extensions can return arbitrary JSON", "tree": {"sha": "a27b54f42ecc0acfd9325b38ca5ef6dd8990c23a", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a27b54f42ecc0acfd9325b38ca5ef6dd8990c23a"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a2a01f7d96d5e2a664b2bae904bd94f218dc79da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a2a01f7d96d5e2a664b2bae904bd94f218dc79da", "html_url": "https://github.com/google/jsonnet/commit/a2a01f7d96d5e2a664b2bae904bd94f218dc79da", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a2a01f7d96d5e2a664b2bae904bd94f218dc79da/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e26f8ab4416f8cdf91171a6e9143785b78863ade", "url": "https://api.github.com/repos/google/jsonnet/commits/e26f8ab4416f8cdf91171a6e9143785b78863ade", "html_url": "https://github.com/google/jsonnet/commit/e26f8ab4416f8cdf91171a6e9143785b78863ade"}]}, {"sha": "e26f8ab4416f8cdf91171a6e9143785b78863ade", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-06-02T05:20:10Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-06-02T05:20:10Z"}, "message": "Return arbitrary json from native extensions", "tree": {"sha": "4ad9b4f89e8e59c261a7ea701ab24ff3162676a6", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4ad9b4f89e8e59c261a7ea701ab24ff3162676a6"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e26f8ab4416f8cdf91171a6e9143785b78863ade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e26f8ab4416f8cdf91171a6e9143785b78863ade", "html_url": "https://github.com/google/jsonnet/commit/e26f8ab4416f8cdf91171a6e9143785b78863ade", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e26f8ab4416f8cdf91171a6e9143785b78863ade/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a", "url": "https://api.github.com/repos/google/jsonnet/commits/c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a", "html_url": "https://github.com/google/jsonnet/commit/c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a"}]}, {"sha": "336111af500a3fdd87690609f1e4a89f6fe2c91c", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-30T16:47:42Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-30T16:47:42Z"}, "message": "Merge pull request #199 from sparkprime/extensions\n\nExtend native functions to all primitive types", "tree": {"sha": "74b06f1121795385aa98223d0ca84c7389c2ccc4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/74b06f1121795385aa98223d0ca84c7389c2ccc4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/336111af500a3fdd87690609f1e4a89f6fe2c91c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/336111af500a3fdd87690609f1e4a89f6fe2c91c", "html_url": "https://github.com/google/jsonnet/commit/336111af500a3fdd87690609f1e4a89f6fe2c91c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/336111af500a3fdd87690609f1e4a89f6fe2c91c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49ea2f4df348a8bcc1c533d3d79454622c0af73f", "url": "https://api.github.com/repos/google/jsonnet/commits/49ea2f4df348a8bcc1c533d3d79454622c0af73f", "html_url": "https://github.com/google/jsonnet/commit/49ea2f4df348a8bcc1c533d3d79454622c0af73f"}, {"sha": "c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a", "url": "https://api.github.com/repos/google/jsonnet/commits/c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a", "html_url": "https://github.com/google/jsonnet/commit/c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a"}]}, {"sha": "c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-29T05:27:01Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-29T05:27:01Z"}, "message": "Extend native functions to all primitive types", "tree": {"sha": "74b06f1121795385aa98223d0ca84c7389c2ccc4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/74b06f1121795385aa98223d0ca84c7389c2ccc4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a", "html_url": "https://github.com/google/jsonnet/commit/c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c205b5d72ca9b2157ea34ffa599c0f389d5a8b0a/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc4d786bece4e5bfbc4250543a774d11463ce6df", "url": "https://api.github.com/repos/google/jsonnet/commits/fc4d786bece4e5bfbc4250543a774d11463ce6df", "html_url": "https://github.com/google/jsonnet/commit/fc4d786bece4e5bfbc4250543a774d11463ce6df"}]}, {"sha": "fc4d786bece4e5bfbc4250543a774d11463ce6df", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-28T20:41:37Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-28T20:41:37Z"}, "message": "demodularize core/BUILD, add missing json.h file", "tree": {"sha": "f943188de3e3bd094da4bbc4587777442bb173a7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f943188de3e3bd094da4bbc4587777442bb173a7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/fc4d786bece4e5bfbc4250543a774d11463ce6df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/fc4d786bece4e5bfbc4250543a774d11463ce6df", "html_url": "https://github.com/google/jsonnet/commit/fc4d786bece4e5bfbc4250543a774d11463ce6df", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/fc4d786bece4e5bfbc4250543a774d11463ce6df/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcbcdf1b68c795bea3acd04cdb31df2285009b0f", "url": "https://api.github.com/repos/google/jsonnet/commits/bcbcdf1b68c795bea3acd04cdb31df2285009b0f", "html_url": "https://github.com/google/jsonnet/commit/bcbcdf1b68c795bea3acd04cdb31df2285009b0f"}]}, {"sha": "49ea2f4df348a8bcc1c533d3d79454622c0af73f", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-28T18:51:06Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-28T18:51:06Z"}, "message": "Merge pull request #198 from sparkprime/extensions\n\nNative Extensions", "tree": {"sha": "911c279bb11b9853c74f8c9f3e2aa3941d19fcba", "url": "https://api.github.com/repos/google/jsonnet/git/trees/911c279bb11b9853c74f8c9f3e2aa3941d19fcba"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/49ea2f4df348a8bcc1c533d3d79454622c0af73f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/49ea2f4df348a8bcc1c533d3d79454622c0af73f", "html_url": "https://github.com/google/jsonnet/commit/49ea2f4df348a8bcc1c533d3d79454622c0af73f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/49ea2f4df348a8bcc1c533d3d79454622c0af73f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c292727b745751924b2829992644592354efa822", "url": "https://api.github.com/repos/google/jsonnet/commits/c292727b745751924b2829992644592354efa822", "html_url": "https://github.com/google/jsonnet/commit/c292727b745751924b2829992644592354efa822"}, {"sha": "bcbcdf1b68c795bea3acd04cdb31df2285009b0f", "url": "https://api.github.com/repos/google/jsonnet/commits/bcbcdf1b68c795bea3acd04cdb31df2285009b0f", "html_url": "https://github.com/google/jsonnet/commit/bcbcdf1b68c795bea3acd04cdb31df2285009b0f"}]}, {"sha": "bcbcdf1b68c795bea3acd04cdb31df2285009b0f", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-28T02:33:41Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-28T18:37:58Z"}, "message": "Add native extensions to Python wrapper", "tree": {"sha": "911c279bb11b9853c74f8c9f3e2aa3941d19fcba", "url": "https://api.github.com/repos/google/jsonnet/git/trees/911c279bb11b9853c74f8c9f3e2aa3941d19fcba"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/bcbcdf1b68c795bea3acd04cdb31df2285009b0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/bcbcdf1b68c795bea3acd04cdb31df2285009b0f", "html_url": "https://github.com/google/jsonnet/commit/bcbcdf1b68c795bea3acd04cdb31df2285009b0f", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/bcbcdf1b68c795bea3acd04cdb31df2285009b0f/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5410c4ae42ec708d3651f6e45782e2d0a814071", "url": "https://api.github.com/repos/google/jsonnet/commits/d5410c4ae42ec708d3651f6e45782e2d0a814071", "html_url": "https://github.com/google/jsonnet/commit/d5410c4ae42ec708d3651f6e45782e2d0a814071"}]}, {"sha": "d5410c4ae42ec708d3651f6e45782e2d0a814071", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-26T03:48:31Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-28T18:37:51Z"}, "message": "Added native functions, fix #108", "tree": {"sha": "4fbac5884c6956286c2605ac9cc80c49547fa7c6", "url": "https://api.github.com/repos/google/jsonnet/git/trees/4fbac5884c6956286c2605ac9cc80c49547fa7c6"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d5410c4ae42ec708d3651f6e45782e2d0a814071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d5410c4ae42ec708d3651f6e45782e2d0a814071", "html_url": "https://github.com/google/jsonnet/commit/d5410c4ae42ec708d3651f6e45782e2d0a814071", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d5410c4ae42ec708d3651f6e45782e2d0a814071/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c292727b745751924b2829992644592354efa822", "url": "https://api.github.com/repos/google/jsonnet/commits/c292727b745751924b2829992644592354efa822", "html_url": "https://github.com/google/jsonnet/commit/c292727b745751924b2829992644592354efa822"}]}, {"sha": "c292727b745751924b2829992644592354efa822", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-24T20:44:02Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-24T20:44:02Z"}, "message": "Merge pull request #194 from sparkprime/fix_format_percent\n\nFix format percent", "tree": {"sha": "7f562ffccbe29038d4cd7e8d17ad8a5335f192f2", "url": "https://api.github.com/repos/google/jsonnet/git/trees/7f562ffccbe29038d4cd7e8d17ad8a5335f192f2"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c292727b745751924b2829992644592354efa822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c292727b745751924b2829992644592354efa822", "html_url": "https://github.com/google/jsonnet/commit/c292727b745751924b2829992644592354efa822", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c292727b745751924b2829992644592354efa822/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c234fe3b96d0d4a8566768843f663046414daaf", "url": "https://api.github.com/repos/google/jsonnet/commits/0c234fe3b96d0d4a8566768843f663046414daaf", "html_url": "https://github.com/google/jsonnet/commit/0c234fe3b96d0d4a8566768843f663046414daaf"}, {"sha": "eecd82e88000ca3c3924d35d954a4ffb30f19a3c", "url": "https://api.github.com/repos/google/jsonnet/commits/eecd82e88000ca3c3924d35d954a4ffb30f19a3c", "html_url": "https://github.com/google/jsonnet/commit/eecd82e88000ca3c3924d35d954a4ffb30f19a3c"}]}, {"sha": "eecd82e88000ca3c3924d35d954a4ffb30f19a3c", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-24T20:42:32Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-24T20:42:32Z"}, "message": "Fix tests (travis test script was broken)", "tree": {"sha": "f474d856c91765872494ae5d16a3325d04e34881", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f474d856c91765872494ae5d16a3325d04e34881"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/eecd82e88000ca3c3924d35d954a4ffb30f19a3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/eecd82e88000ca3c3924d35d954a4ffb30f19a3c", "html_url": "https://github.com/google/jsonnet/commit/eecd82e88000ca3c3924d35d954a4ffb30f19a3c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/eecd82e88000ca3c3924d35d954a4ffb30f19a3c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "202aa40dcd2dbc60423eadad753e87c4be2bac1c", "url": "https://api.github.com/repos/google/jsonnet/commits/202aa40dcd2dbc60423eadad753e87c4be2bac1c", "html_url": "https://github.com/google/jsonnet/commit/202aa40dcd2dbc60423eadad753e87c4be2bac1c"}]}, {"sha": "0c234fe3b96d0d4a8566768843f663046414daaf", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-24T20:39:23Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-24T20:39:23Z"}, "message": "Merge pull request #193 from sparkprime/fix_travis\n\nStop masking failures from earlier tests", "tree": {"sha": "9273f08b04adb9fcb841584049f354b7af020450", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9273f08b04adb9fcb841584049f354b7af020450"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/0c234fe3b96d0d4a8566768843f663046414daaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/0c234fe3b96d0d4a8566768843f663046414daaf", "html_url": "https://github.com/google/jsonnet/commit/0c234fe3b96d0d4a8566768843f663046414daaf", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/0c234fe3b96d0d4a8566768843f663046414daaf/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f28c010202227e41e1d967f40818465feba3f02e", "url": "https://api.github.com/repos/google/jsonnet/commits/f28c010202227e41e1d967f40818465feba3f02e", "html_url": "https://github.com/google/jsonnet/commit/f28c010202227e41e1d967f40818465feba3f02e"}, {"sha": "8f4b737aa63630cad9a191a2d9905a46a3a4fcc1", "url": "https://api.github.com/repos/google/jsonnet/commits/8f4b737aa63630cad9a191a2d9905a46a3a4fcc1", "html_url": "https://github.com/google/jsonnet/commit/8f4b737aa63630cad9a191a2d9905a46a3a4fcc1"}]}, {"sha": "8f4b737aa63630cad9a191a2d9905a46a3a4fcc1", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-24T20:38:48Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-24T20:38:48Z"}, "message": "Stop masking failures from earlier tests", "tree": {"sha": "9273f08b04adb9fcb841584049f354b7af020450", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9273f08b04adb9fcb841584049f354b7af020450"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8f4b737aa63630cad9a191a2d9905a46a3a4fcc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8f4b737aa63630cad9a191a2d9905a46a3a4fcc1", "html_url": "https://github.com/google/jsonnet/commit/8f4b737aa63630cad9a191a2d9905a46a3a4fcc1", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8f4b737aa63630cad9a191a2d9905a46a3a4fcc1/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f28c010202227e41e1d967f40818465feba3f02e", "url": "https://api.github.com/repos/google/jsonnet/commits/f28c010202227e41e1d967f40818465feba3f02e", "html_url": "https://github.com/google/jsonnet/commit/f28c010202227e41e1d967f40818465feba3f02e"}]}, {"sha": "202aa40dcd2dbc60423eadad753e87c4be2bac1c", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-24T20:34:34Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-24T20:34:41Z"}, "message": "Add test for %%", "tree": {"sha": "edaf5b9ad8ec5b5e1a7daf2bbb6aec0ec196f87e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/edaf5b9ad8ec5b5e1a7daf2bbb6aec0ec196f87e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/202aa40dcd2dbc60423eadad753e87c4be2bac1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/202aa40dcd2dbc60423eadad753e87c4be2bac1c", "html_url": "https://github.com/google/jsonnet/commit/202aa40dcd2dbc60423eadad753e87c4be2bac1c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/202aa40dcd2dbc60423eadad753e87c4be2bac1c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f28c010202227e41e1d967f40818465feba3f02e", "url": "https://api.github.com/repos/google/jsonnet/commits/f28c010202227e41e1d967f40818465feba3f02e", "html_url": "https://github.com/google/jsonnet/commit/f28c010202227e41e1d967f40818465feba3f02e"}]}, {"sha": "f28c010202227e41e1d967f40818465feba3f02e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-24T20:29:20Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-24T20:29:20Z"}, "message": "Merge pull request #192 from sparkprime/fix_format_percent\n\nFix #190", "tree": {"sha": "9d658c9ae896d72abb9ea771a3066d8d1efe854e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9d658c9ae896d72abb9ea771a3066d8d1efe854e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/f28c010202227e41e1d967f40818465feba3f02e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/f28c010202227e41e1d967f40818465feba3f02e", "html_url": "https://github.com/google/jsonnet/commit/f28c010202227e41e1d967f40818465feba3f02e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/f28c010202227e41e1d967f40818465feba3f02e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd6ae83007972068e4231d22e8d6dbc7bf7aad44", "url": "https://api.github.com/repos/google/jsonnet/commits/bd6ae83007972068e4231d22e8d6dbc7bf7aad44", "html_url": "https://github.com/google/jsonnet/commit/bd6ae83007972068e4231d22e8d6dbc7bf7aad44"}, {"sha": "45918f400a1a67a045d6d329685c93a45c3e76e4", "url": "https://api.github.com/repos/google/jsonnet/commits/45918f400a1a67a045d6d329685c93a45c3e76e4", "html_url": "https://github.com/google/jsonnet/commit/45918f400a1a67a045d6d329685c93a45c3e76e4"}]}, {"sha": "bd6ae83007972068e4231d22e8d6dbc7bf7aad44", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-24T19:26:42Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-24T19:26:42Z"}, "message": "Merge pull request #191 from guoshimin/manifestJson\n\navoid trailing spaces in manifestJsonEx output", "tree": {"sha": "5bacf3080f85c245fe0004c8ccde6d863bccd11e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/5bacf3080f85c245fe0004c8ccde6d863bccd11e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/bd6ae83007972068e4231d22e8d6dbc7bf7aad44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/bd6ae83007972068e4231d22e8d6dbc7bf7aad44", "html_url": "https://github.com/google/jsonnet/commit/bd6ae83007972068e4231d22e8d6dbc7bf7aad44", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/bd6ae83007972068e4231d22e8d6dbc7bf7aad44/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0e145f4f57be4641226fc177fb9657abb6a5a1d", "url": "https://api.github.com/repos/google/jsonnet/commits/b0e145f4f57be4641226fc177fb9657abb6a5a1d", "html_url": "https://github.com/google/jsonnet/commit/b0e145f4f57be4641226fc177fb9657abb6a5a1d"}, {"sha": "0134a27c6afa185c4f13dcc4b2989daf376ed1c0", "url": "https://api.github.com/repos/google/jsonnet/commits/0134a27c6afa185c4f13dcc4b2989daf376ed1c0", "html_url": "https://github.com/google/jsonnet/commit/0134a27c6afa185c4f13dcc4b2989daf376ed1c0"}]}, {"sha": "45918f400a1a67a045d6d329685c93a45c3e76e4", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-24T17:37:43Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-24T17:37:43Z"}, "message": "Fix #190", "tree": {"sha": "72ec74e50ca3e467f5ffdfe619eacdc302b67203", "url": "https://api.github.com/repos/google/jsonnet/git/trees/72ec74e50ca3e467f5ffdfe619eacdc302b67203"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/45918f400a1a67a045d6d329685c93a45c3e76e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/45918f400a1a67a045d6d329685c93a45c3e76e4", "html_url": "https://github.com/google/jsonnet/commit/45918f400a1a67a045d6d329685c93a45c3e76e4", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/45918f400a1a67a045d6d329685c93a45c3e76e4/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27311349d572a716b02924ff2c7702a1983006b1", "url": "https://api.github.com/repos/google/jsonnet/commits/27311349d572a716b02924ff2c7702a1983006b1", "html_url": "https://github.com/google/jsonnet/commit/27311349d572a716b02924ff2c7702a1983006b1"}]}, {"sha": "0134a27c6afa185c4f13dcc4b2989daf376ed1c0", "commit": {"author": {"name": "Shimin Guo", "email": "shimin@databricks.com", "date": "2016-05-24T12:51:40Z"}, "committer": {"name": "Shimin Guo", "email": "shimin@databricks.com", "date": "2016-05-24T12:51:40Z"}, "message": "avoid trailing spaces in manifestJsonEx output", "tree": {"sha": "5bacf3080f85c245fe0004c8ccde6d863bccd11e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/5bacf3080f85c245fe0004c8ccde6d863bccd11e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/0134a27c6afa185c4f13dcc4b2989daf376ed1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/0134a27c6afa185c4f13dcc4b2989daf376ed1c0", "html_url": "https://github.com/google/jsonnet/commit/0134a27c6afa185c4f13dcc4b2989daf376ed1c0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/0134a27c6afa185c4f13dcc4b2989daf376ed1c0/comments", "author": null, "committer": null, "parents": [{"sha": "b0e145f4f57be4641226fc177fb9657abb6a5a1d", "url": "https://api.github.com/repos/google/jsonnet/commits/b0e145f4f57be4641226fc177fb9657abb6a5a1d", "html_url": "https://github.com/google/jsonnet/commit/b0e145f4f57be4641226fc177fb9657abb6a5a1d"}]}, {"sha": "b0e145f4f57be4641226fc177fb9657abb6a5a1d", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-23T14:47:52Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-23T14:47:52Z"}, "message": "Merge pull request #189 from guoshimin/fixbazel\n\nfix bazel build", "tree": {"sha": "adbbd9e24ce868801084a99b17e844276336f7b7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/adbbd9e24ce868801084a99b17e844276336f7b7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/b0e145f4f57be4641226fc177fb9657abb6a5a1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/b0e145f4f57be4641226fc177fb9657abb6a5a1d", "html_url": "https://github.com/google/jsonnet/commit/b0e145f4f57be4641226fc177fb9657abb6a5a1d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/b0e145f4f57be4641226fc177fb9657abb6a5a1d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf3307e6863c026e9599ee7b67ccb0829688a083", "url": "https://api.github.com/repos/google/jsonnet/commits/cf3307e6863c026e9599ee7b67ccb0829688a083", "html_url": "https://github.com/google/jsonnet/commit/cf3307e6863c026e9599ee7b67ccb0829688a083"}, {"sha": "83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "url": "https://api.github.com/repos/google/jsonnet/commits/83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "html_url": "https://github.com/google/jsonnet/commit/83c7b4ceee0f2a14353ccf75ed024b3c2db22bef"}]}, {"sha": "83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "commit": {"author": {"name": "Shimin Guo", "email": "shimin@databricks.com", "date": "2016-05-21T14:41:39Z"}, "committer": {"name": "Shimin Guo", "email": "shimin@databricks.com", "date": "2016-05-21T14:41:39Z"}, "message": "style fix", "tree": {"sha": "adbbd9e24ce868801084a99b17e844276336f7b7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/adbbd9e24ce868801084a99b17e844276336f7b7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "html_url": "https://github.com/google/jsonnet/commit/83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/83c7b4ceee0f2a14353ccf75ed024b3c2db22bef/comments", "author": null, "committer": null, "parents": [{"sha": "16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "url": "https://api.github.com/repos/google/jsonnet/commits/16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "html_url": "https://github.com/google/jsonnet/commit/16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07"}]}, {"sha": "16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "commit": {"author": {"name": "Shimin Guo", "email": "shimin@databricks.com", "date": "2016-05-20T02:41:01Z"}, "committer": {"name": "Shimin Guo", "email": "shimin@databricks.com", "date": "2016-05-20T08:24:33Z"}, "message": "fix some tests", "tree": {"sha": "5a7e48c3ed288986a6b40b796408033197d1ccb0", "url": "https://api.github.com/repos/google/jsonnet/git/trees/5a7e48c3ed288986a6b40b796408033197d1ccb0"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "html_url": "https://github.com/google/jsonnet/commit/16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07/comments", "author": null, "committer": null, "parents": [{"sha": "04e30d31f6c40a7a2b69821552caf829e0fc2a44", "url": "https://api.github.com/repos/google/jsonnet/commits/04e30d31f6c40a7a2b69821552caf829e0fc2a44", "html_url": "https://github.com/google/jsonnet/commit/04e30d31f6c40a7a2b69821552caf829e0fc2a44"}]}, {"sha": "04e30d31f6c40a7a2b69821552caf829e0fc2a44", "commit": {"author": {"name": "Shimin Guo", "email": "shimin@databricks.com", "date": "2016-05-20T08:17:52Z"}, "committer": {"name": "Shimin Guo", "email": "shimin@databricks.com", "date": "2016-05-20T08:17:52Z"}, "message": "fix bazel build", "tree": {"sha": "3bbd133802cc1e4f31b8749cb1c773ed4d3ec9d8", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3bbd133802cc1e4f31b8749cb1c773ed4d3ec9d8"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/04e30d31f6c40a7a2b69821552caf829e0fc2a44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/04e30d31f6c40a7a2b69821552caf829e0fc2a44", "html_url": "https://github.com/google/jsonnet/commit/04e30d31f6c40a7a2b69821552caf829e0fc2a44", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/04e30d31f6c40a7a2b69821552caf829e0fc2a44/comments", "author": null, "committer": null, "parents": [{"sha": "cf3307e6863c026e9599ee7b67ccb0829688a083", "url": "https://api.github.com/repos/google/jsonnet/commits/cf3307e6863c026e9599ee7b67ccb0829688a083", "html_url": "https://github.com/google/jsonnet/commit/cf3307e6863c026e9599ee7b67ccb0829688a083"}]}, {"sha": "cf3307e6863c026e9599ee7b67ccb0829688a083", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-18T05:36:33Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-18T05:36:33Z"}, "message": "Merge pull request #186 from sparkprime/fix_obj_asserts\n\nFix obj asserts", "tree": {"sha": "a794d6dae74e8298b2380ab86ee0bb751112939c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/a794d6dae74e8298b2380ab86ee0bb751112939c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/cf3307e6863c026e9599ee7b67ccb0829688a083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/cf3307e6863c026e9599ee7b67ccb0829688a083", "html_url": "https://github.com/google/jsonnet/commit/cf3307e6863c026e9599ee7b67ccb0829688a083", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/cf3307e6863c026e9599ee7b67ccb0829688a083/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "670a4b83556b3c83f24137d0f6b7d346b88556f0", "url": "https://api.github.com/repos/google/jsonnet/commits/670a4b83556b3c83f24137d0f6b7d346b88556f0", "html_url": "https://github.com/google/jsonnet/commit/670a4b83556b3c83f24137d0f6b7d346b88556f0"}, {"sha": "8a9a1753d7f64fa88e45f37b4d1ffd9a557e9449", "url": "https://api.github.com/repos/google/jsonnet/commits/8a9a1753d7f64fa88e45f37b4d1ffd9a557e9449", "html_url": "https://github.com/google/jsonnet/commit/8a9a1753d7f64fa88e45f37b4d1ffd9a557e9449"}]}, {"sha": "8a9a1753d7f64fa88e45f37b4d1ffd9a557e9449", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T05:02:10Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T05:30:24Z"}, "message": "Ensure all object asserts are executed, fix #181", "tree": {"sha": "c2952e4252c61112d22526e9e64d35915bed0ac6", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c2952e4252c61112d22526e9e64d35915bed0ac6"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8a9a1753d7f64fa88e45f37b4d1ffd9a557e9449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8a9a1753d7f64fa88e45f37b4d1ffd9a557e9449", "html_url": "https://github.com/google/jsonnet/commit/8a9a1753d7f64fa88e45f37b4d1ffd9a557e9449", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8a9a1753d7f64fa88e45f37b4d1ffd9a557e9449/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "461233f4592ef6e8a511fca55e349abd232f6d6d", "url": "https://api.github.com/repos/google/jsonnet/commits/461233f4592ef6e8a511fca55e349abd232f6d6d", "html_url": "https://github.com/google/jsonnet/commit/461233f4592ef6e8a511fca55e349abd232f6d6d"}]}, {"sha": "670a4b83556b3c83f24137d0f6b7d346b88556f0", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-18T02:33:36Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-18T02:33:36Z"}, "message": "Merge pull request #184 from sparkprime/too_many_params_errors\n\nAdd tests", "tree": {"sha": "da8db2d3d7d2da55d343e4a261387cc4b90b8363", "url": "https://api.github.com/repos/google/jsonnet/git/trees/da8db2d3d7d2da55d343e4a261387cc4b90b8363"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/670a4b83556b3c83f24137d0f6b7d346b88556f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/670a4b83556b3c83f24137d0f6b7d346b88556f0", "html_url": "https://github.com/google/jsonnet/commit/670a4b83556b3c83f24137d0f6b7d346b88556f0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/670a4b83556b3c83f24137d0f6b7d346b88556f0/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27311349d572a716b02924ff2c7702a1983006b1", "url": "https://api.github.com/repos/google/jsonnet/commits/27311349d572a716b02924ff2c7702a1983006b1", "html_url": "https://github.com/google/jsonnet/commit/27311349d572a716b02924ff2c7702a1983006b1"}, {"sha": "1ae338c6c0f2432dd55d515f9c437a34c7964840", "url": "https://api.github.com/repos/google/jsonnet/commits/1ae338c6c0f2432dd55d515f9c437a34c7964840", "html_url": "https://github.com/google/jsonnet/commit/1ae338c6c0f2432dd55d515f9c437a34c7964840"}]}, {"sha": "1ae338c6c0f2432dd55d515f9c437a34c7964840", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T02:29:59Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T02:32:30Z"}, "message": "Add tests", "tree": {"sha": "da8db2d3d7d2da55d343e4a261387cc4b90b8363", "url": "https://api.github.com/repos/google/jsonnet/git/trees/da8db2d3d7d2da55d343e4a261387cc4b90b8363"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1ae338c6c0f2432dd55d515f9c437a34c7964840", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1ae338c6c0f2432dd55d515f9c437a34c7964840", "html_url": "https://github.com/google/jsonnet/commit/1ae338c6c0f2432dd55d515f9c437a34c7964840", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1ae338c6c0f2432dd55d515f9c437a34c7964840/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27311349d572a716b02924ff2c7702a1983006b1", "url": "https://api.github.com/repos/google/jsonnet/commits/27311349d572a716b02924ff2c7702a1983006b1", "html_url": "https://github.com/google/jsonnet/commit/27311349d572a716b02924ff2c7702a1983006b1"}]}, {"sha": "461233f4592ef6e8a511fca55e349abd232f6d6d", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T02:01:57Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T02:21:41Z"}, "message": "Make it easier to read desugared output", "tree": {"sha": "3bdf7c298160fcb15a8d84fe810636d38d7e8cef", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3bdf7c298160fcb15a8d84fe810636d38d7e8cef"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/461233f4592ef6e8a511fca55e349abd232f6d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/461233f4592ef6e8a511fca55e349abd232f6d6d", "html_url": "https://github.com/google/jsonnet/commit/461233f4592ef6e8a511fca55e349abd232f6d6d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/461233f4592ef6e8a511fca55e349abd232f6d6d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27311349d572a716b02924ff2c7702a1983006b1", "url": "https://api.github.com/repos/google/jsonnet/commits/27311349d572a716b02924ff2c7702a1983006b1", "html_url": "https://github.com/google/jsonnet/commit/27311349d572a716b02924ff2c7702a1983006b1"}]}, {"sha": "27311349d572a716b02924ff2c7702a1983006b1", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-18T02:12:38Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-18T02:12:38Z"}, "message": "Merge pull request #183 from sparkprime/fix_too_many_args_segfault\n\nCheck for too many positional params, fix #180", "tree": {"sha": "ff14c5e8441477bd1979c0149253822f5f102f55", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ff14c5e8441477bd1979c0149253822f5f102f55"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/27311349d572a716b02924ff2c7702a1983006b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/27311349d572a716b02924ff2c7702a1983006b1", "html_url": "https://github.com/google/jsonnet/commit/27311349d572a716b02924ff2c7702a1983006b1", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/27311349d572a716b02924ff2c7702a1983006b1/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78f6eb06c77e19179bf5e6f4143bb4d2374dd63d", "url": "https://api.github.com/repos/google/jsonnet/commits/78f6eb06c77e19179bf5e6f4143bb4d2374dd63d", "html_url": "https://github.com/google/jsonnet/commit/78f6eb06c77e19179bf5e6f4143bb4d2374dd63d"}, {"sha": "54e36bb494266904e61feb4e227a2a9b5cc03b18", "url": "https://api.github.com/repos/google/jsonnet/commits/54e36bb494266904e61feb4e227a2a9b5cc03b18", "html_url": "https://github.com/google/jsonnet/commit/54e36bb494266904e61feb4e227a2a9b5cc03b18"}]}, {"sha": "78f6eb06c77e19179bf5e6f4143bb4d2374dd63d", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-18T02:12:07Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-18T02:12:07Z"}, "message": "Merge pull request #182 from sparkprime/fix_tests\n\nUpdate test golden files", "tree": {"sha": "b2dc7dde75e513465bed55ee53d435bb2a78dc70", "url": "https://api.github.com/repos/google/jsonnet/git/trees/b2dc7dde75e513465bed55ee53d435bb2a78dc70"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/78f6eb06c77e19179bf5e6f4143bb4d2374dd63d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/78f6eb06c77e19179bf5e6f4143bb4d2374dd63d", "html_url": "https://github.com/google/jsonnet/commit/78f6eb06c77e19179bf5e6f4143bb4d2374dd63d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/78f6eb06c77e19179bf5e6f4143bb4d2374dd63d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62da175f7561a6bf0a826e9bf7a5a22738188c01", "url": "https://api.github.com/repos/google/jsonnet/commits/62da175f7561a6bf0a826e9bf7a5a22738188c01", "html_url": "https://github.com/google/jsonnet/commit/62da175f7561a6bf0a826e9bf7a5a22738188c01"}, {"sha": "9856be55bf08ddb33d4eb037bb09f7e53b6f256d", "url": "https://api.github.com/repos/google/jsonnet/commits/9856be55bf08ddb33d4eb037bb09f7e53b6f256d", "html_url": "https://github.com/google/jsonnet/commit/9856be55bf08ddb33d4eb037bb09f7e53b6f256d"}]}, {"sha": "9856be55bf08ddb33d4eb037bb09f7e53b6f256d", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T02:03:59Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T02:03:59Z"}, "message": "Update test golden files", "tree": {"sha": "ca0d6d7092a8ccb0226f7b58950fd01ed9e7b947", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ca0d6d7092a8ccb0226f7b58950fd01ed9e7b947"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9856be55bf08ddb33d4eb037bb09f7e53b6f256d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9856be55bf08ddb33d4eb037bb09f7e53b6f256d", "html_url": "https://github.com/google/jsonnet/commit/9856be55bf08ddb33d4eb037bb09f7e53b6f256d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9856be55bf08ddb33d4eb037bb09f7e53b6f256d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0e03263e25a81057beffaced2338d75472c291", "url": "https://api.github.com/repos/google/jsonnet/commits/bb0e03263e25a81057beffaced2338d75472c291", "html_url": "https://github.com/google/jsonnet/commit/bb0e03263e25a81057beffaced2338d75472c291"}]}, {"sha": "54e36bb494266904e61feb4e227a2a9b5cc03b18", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T00:55:11Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-18T00:56:11Z"}, "message": "Check for too many positional params, fix #180", "tree": {"sha": "2a6b12723c46530ce2c8589009b5bf7570842230", "url": "https://api.github.com/repos/google/jsonnet/git/trees/2a6b12723c46530ce2c8589009b5bf7570842230"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/54e36bb494266904e61feb4e227a2a9b5cc03b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/54e36bb494266904e61feb4e227a2a9b5cc03b18", "html_url": "https://github.com/google/jsonnet/commit/54e36bb494266904e61feb4e227a2a9b5cc03b18", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/54e36bb494266904e61feb4e227a2a9b5cc03b18/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0e03263e25a81057beffaced2338d75472c291", "url": "https://api.github.com/repos/google/jsonnet/commits/bb0e03263e25a81057beffaced2338d75472c291", "html_url": "https://github.com/google/jsonnet/commit/bb0e03263e25a81057beffaced2338d75472c291"}]}, {"sha": "62da175f7561a6bf0a826e9bf7a5a22738188c01", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-17T22:15:14Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-17T22:15:14Z"}, "message": "Merge pull request #179 from sparkprime/fix_micromanage\n\nUpdate for Terraform changes, fix logging package", "tree": {"sha": "0ef8abd605b28e5bb4f3b67ff31682f5fd7bdf2e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0ef8abd605b28e5bb4f3b67ff31682f5fd7bdf2e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/62da175f7561a6bf0a826e9bf7a5a22738188c01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/62da175f7561a6bf0a826e9bf7a5a22738188c01", "html_url": "https://github.com/google/jsonnet/commit/62da175f7561a6bf0a826e9bf7a5a22738188c01", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/62da175f7561a6bf0a826e9bf7a5a22738188c01/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0e03263e25a81057beffaced2338d75472c291", "url": "https://api.github.com/repos/google/jsonnet/commits/bb0e03263e25a81057beffaced2338d75472c291", "html_url": "https://github.com/google/jsonnet/commit/bb0e03263e25a81057beffaced2338d75472c291"}, {"sha": "82ac3778151c31b3924a0793d8560f3ae134276b", "url": "https://api.github.com/repos/google/jsonnet/commits/82ac3778151c31b3924a0793d8560f3ae134276b", "html_url": "https://github.com/google/jsonnet/commit/82ac3778151c31b3924a0793d8560f3ae134276b"}]}, {"sha": "82ac3778151c31b3924a0793d8560f3ae134276b", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-16T16:57:47Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-16T16:57:47Z"}, "message": "Update for Terraform changes, fix logging package", "tree": {"sha": "0ef8abd605b28e5bb4f3b67ff31682f5fd7bdf2e", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0ef8abd605b28e5bb4f3b67ff31682f5fd7bdf2e"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/82ac3778151c31b3924a0793d8560f3ae134276b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/82ac3778151c31b3924a0793d8560f3ae134276b", "html_url": "https://github.com/google/jsonnet/commit/82ac3778151c31b3924a0793d8560f3ae134276b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/82ac3778151c31b3924a0793d8560f3ae134276b/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0e03263e25a81057beffaced2338d75472c291", "url": "https://api.github.com/repos/google/jsonnet/commits/bb0e03263e25a81057beffaced2338d75472c291", "html_url": "https://github.com/google/jsonnet/commit/bb0e03263e25a81057beffaced2338d75472c291"}]}, {"sha": "bb0e03263e25a81057beffaced2338d75472c291", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-10T19:33:14Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-10T19:33:14Z"}, "message": "Merge pull request #175 from sparkprime/zerostep\n\nError rather than infinite loop when slice step == 0", "tree": {"sha": "0650c283fd092f41275c0b64c8438a6f736ac328", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0650c283fd092f41275c0b64c8438a6f736ac328"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/bb0e03263e25a81057beffaced2338d75472c291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/bb0e03263e25a81057beffaced2338d75472c291", "html_url": "https://github.com/google/jsonnet/commit/bb0e03263e25a81057beffaced2338d75472c291", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/bb0e03263e25a81057beffaced2338d75472c291/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d0017807392d61ea00a122ab8231aaafbd52a72", "url": "https://api.github.com/repos/google/jsonnet/commits/8d0017807392d61ea00a122ab8231aaafbd52a72", "html_url": "https://github.com/google/jsonnet/commit/8d0017807392d61ea00a122ab8231aaafbd52a72"}, {"sha": "ed91720d98803f4b120c689d2c03f49bd63b714d", "url": "https://api.github.com/repos/google/jsonnet/commits/ed91720d98803f4b120c689d2c03f49bd63b714d", "html_url": "https://github.com/google/jsonnet/commit/ed91720d98803f4b120c689d2c03f49bd63b714d"}]}, {"sha": "8d0017807392d61ea00a122ab8231aaafbd52a72", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-10T17:27:55Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-10T17:27:55Z"}, "message": "Merge pull request #173 from sparkprime/libsonnet\n\nProvide examples for new .libsonnet convention", "tree": {"sha": "3ebc0d9b0c0f0363bbab3f80cf2ade2aa84a9cfc", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3ebc0d9b0c0f0363bbab3f80cf2ade2aa84a9cfc"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8d0017807392d61ea00a122ab8231aaafbd52a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8d0017807392d61ea00a122ab8231aaafbd52a72", "html_url": "https://github.com/google/jsonnet/commit/8d0017807392d61ea00a122ab8231aaafbd52a72", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8d0017807392d61ea00a122ab8231aaafbd52a72/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8b867e403944cb3103c2aa903c7eb9c12203105", "url": "https://api.github.com/repos/google/jsonnet/commits/b8b867e403944cb3103c2aa903c7eb9c12203105", "html_url": "https://github.com/google/jsonnet/commit/b8b867e403944cb3103c2aa903c7eb9c12203105"}, {"sha": "08f9af631927defb70c372e7aac821ff84772657", "url": "https://api.github.com/repos/google/jsonnet/commits/08f9af631927defb70c372e7aac821ff84772657", "html_url": "https://github.com/google/jsonnet/commit/08f9af631927defb70c372e7aac821ff84772657"}]}, {"sha": "ed91720d98803f4b120c689d2c03f49bd63b714d", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-10T13:50:51Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-10T13:50:51Z"}, "message": "Error rather than infinite loop when slice step == 0", "tree": {"sha": "d770957ef7ad5e652a9f102272f60e65e39808b9", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d770957ef7ad5e652a9f102272f60e65e39808b9"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ed91720d98803f4b120c689d2c03f49bd63b714d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ed91720d98803f4b120c689d2c03f49bd63b714d", "html_url": "https://github.com/google/jsonnet/commit/ed91720d98803f4b120c689d2c03f49bd63b714d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ed91720d98803f4b120c689d2c03f49bd63b714d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96560a8b27af51e23d002f84bc08b205788b0a52", "url": "https://api.github.com/repos/google/jsonnet/commits/96560a8b27af51e23d002f84bc08b205788b0a52", "html_url": "https://github.com/google/jsonnet/commit/96560a8b27af51e23d002f84bc08b205788b0a52"}]}, {"sha": "b8b867e403944cb3103c2aa903c7eb9c12203105", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-09T22:21:35Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-05-09T22:21:35Z"}, "message": "Merge pull request #174 from sparkprime/dash\n\nA single - is no-longer treated as an invalid option", "tree": {"sha": "6471c358f9e34c3088151683e6b8e121c92c2bac", "url": "https://api.github.com/repos/google/jsonnet/git/trees/6471c358f9e34c3088151683e6b8e121c92c2bac"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/b8b867e403944cb3103c2aa903c7eb9c12203105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/b8b867e403944cb3103c2aa903c7eb9c12203105", "html_url": "https://github.com/google/jsonnet/commit/b8b867e403944cb3103c2aa903c7eb9c12203105", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/b8b867e403944cb3103c2aa903c7eb9c12203105/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc990ec9628b150f92a928f59562e2d70e705784", "url": "https://api.github.com/repos/google/jsonnet/commits/dc990ec9628b150f92a928f59562e2d70e705784", "html_url": "https://github.com/google/jsonnet/commit/dc990ec9628b150f92a928f59562e2d70e705784"}, {"sha": "edc558c72542c5cb42f6e30cc629d70e9bd7bab9", "url": "https://api.github.com/repos/google/jsonnet/commits/edc558c72542c5cb42f6e30cc629d70e9bd7bab9", "html_url": "https://github.com/google/jsonnet/commit/edc558c72542c5cb42f6e30cc629d70e9bd7bab9"}]}, {"sha": "08f9af631927defb70c372e7aac821ff84772657", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-04T00:21:01Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-05T23:26:16Z"}, "message": "Provide examples for new .libsonnet convention", "tree": {"sha": "7e1039c5a64001ef3ba64b59d294ca6f2af9be47", "url": "https://api.github.com/repos/google/jsonnet/git/trees/7e1039c5a64001ef3ba64b59d294ca6f2af9be47"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/08f9af631927defb70c372e7aac821ff84772657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/08f9af631927defb70c372e7aac821ff84772657", "html_url": "https://github.com/google/jsonnet/commit/08f9af631927defb70c372e7aac821ff84772657", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/08f9af631927defb70c372e7aac821ff84772657/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96560a8b27af51e23d002f84bc08b205788b0a52", "url": "https://api.github.com/repos/google/jsonnet/commits/96560a8b27af51e23d002f84bc08b205788b0a52", "html_url": "https://github.com/google/jsonnet/commit/96560a8b27af51e23d002f84bc08b205788b0a52"}]}, {"sha": "edc558c72542c5cb42f6e30cc629d70e9bd7bab9", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-02T14:48:55Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-05-02T14:48:55Z"}, "message": "A single - is no-longer treated as an invalid option", "tree": {"sha": "bfa90deec97f4844c705f56ee0e280fa1518dbab", "url": "https://api.github.com/repos/google/jsonnet/git/trees/bfa90deec97f4844c705f56ee0e280fa1518dbab"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/edc558c72542c5cb42f6e30cc629d70e9bd7bab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/edc558c72542c5cb42f6e30cc629d70e9bd7bab9", "html_url": "https://github.com/google/jsonnet/commit/edc558c72542c5cb42f6e30cc629d70e9bd7bab9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/edc558c72542c5cb42f6e30cc629d70e9bd7bab9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96560a8b27af51e23d002f84bc08b205788b0a52", "url": "https://api.github.com/repos/google/jsonnet/commits/96560a8b27af51e23d002f84bc08b205788b0a52", "html_url": "https://github.com/google/jsonnet/commit/96560a8b27af51e23d002f84bc08b205788b0a52"}]}, {"sha": "dc990ec9628b150f92a928f59562e2d70e705784", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-29T16:56:13Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-29T16:56:13Z"}, "message": "Merge pull request #171 from sparkprime/fix_keywords\n\nFix #170", "tree": {"sha": "9e20630fd5503147f78bc98395123503625fc670", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9e20630fd5503147f78bc98395123503625fc670"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/dc990ec9628b150f92a928f59562e2d70e705784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/dc990ec9628b150f92a928f59562e2d70e705784", "html_url": "https://github.com/google/jsonnet/commit/dc990ec9628b150f92a928f59562e2d70e705784", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/dc990ec9628b150f92a928f59562e2d70e705784/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96560a8b27af51e23d002f84bc08b205788b0a52", "url": "https://api.github.com/repos/google/jsonnet/commits/96560a8b27af51e23d002f84bc08b205788b0a52", "html_url": "https://github.com/google/jsonnet/commit/96560a8b27af51e23d002f84bc08b205788b0a52"}, {"sha": "a161de153f0024d4dd358bbdd713290a0ed94a50", "url": "https://api.github.com/repos/google/jsonnet/commits/a161de153f0024d4dd358bbdd713290a0ed94a50", "html_url": "https://github.com/google/jsonnet/commit/a161de153f0024d4dd358bbdd713290a0ed94a50"}]}, {"sha": "a161de153f0024d4dd358bbdd713290a0ed94a50", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-29T15:53:38Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-29T15:57:47Z"}, "message": "Fix #170", "tree": {"sha": "9e20630fd5503147f78bc98395123503625fc670", "url": "https://api.github.com/repos/google/jsonnet/git/trees/9e20630fd5503147f78bc98395123503625fc670"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a161de153f0024d4dd358bbdd713290a0ed94a50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a161de153f0024d4dd358bbdd713290a0ed94a50", "html_url": "https://github.com/google/jsonnet/commit/a161de153f0024d4dd358bbdd713290a0ed94a50", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a161de153f0024d4dd358bbdd713290a0ed94a50/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96560a8b27af51e23d002f84bc08b205788b0a52", "url": "https://api.github.com/repos/google/jsonnet/commits/96560a8b27af51e23d002f84bc08b205788b0a52", "html_url": "https://github.com/google/jsonnet/commit/96560a8b27af51e23d002f84bc08b205788b0a52"}]}, {"sha": "96560a8b27af51e23d002f84bc08b205788b0a52", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-26T05:47:07Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-26T05:47:07Z"}, "message": "Merge pull request #169 from sparkprime/python\n\nPlumb tla (and ext code) into Python", "tree": {"sha": "c64918662040bc7098f64cefcb916aac1e4df657", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c64918662040bc7098f64cefcb916aac1e4df657"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/96560a8b27af51e23d002f84bc08b205788b0a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/96560a8b27af51e23d002f84bc08b205788b0a52", "html_url": "https://github.com/google/jsonnet/commit/96560a8b27af51e23d002f84bc08b205788b0a52", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/96560a8b27af51e23d002f84bc08b205788b0a52/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57c26896e4873008967fff5afacdc57913998422", "url": "https://api.github.com/repos/google/jsonnet/commits/57c26896e4873008967fff5afacdc57913998422", "html_url": "https://github.com/google/jsonnet/commit/57c26896e4873008967fff5afacdc57913998422"}, {"sha": "938f9bcc5d9d6ab13e03d6c700a5476dfe14f3e5", "url": "https://api.github.com/repos/google/jsonnet/commits/938f9bcc5d9d6ab13e03d6c700a5476dfe14f3e5", "html_url": "https://github.com/google/jsonnet/commit/938f9bcc5d9d6ab13e03d6c700a5476dfe14f3e5"}]}, {"sha": "938f9bcc5d9d6ab13e03d6c700a5476dfe14f3e5", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T05:32:57Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T05:43:17Z"}, "message": "Strip v from version", "tree": {"sha": "c64918662040bc7098f64cefcb916aac1e4df657", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c64918662040bc7098f64cefcb916aac1e4df657"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/938f9bcc5d9d6ab13e03d6c700a5476dfe14f3e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/938f9bcc5d9d6ab13e03d6c700a5476dfe14f3e5", "html_url": "https://github.com/google/jsonnet/commit/938f9bcc5d9d6ab13e03d6c700a5476dfe14f3e5", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/938f9bcc5d9d6ab13e03d6c700a5476dfe14f3e5/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ca6c683199d166d9ea62a337c415e6ee126a5a", "url": "https://api.github.com/repos/google/jsonnet/commits/63ca6c683199d166d9ea62a337c415e6ee126a5a", "html_url": "https://github.com/google/jsonnet/commit/63ca6c683199d166d9ea62a337c415e6ee126a5a"}]}, {"sha": "63ca6c683199d166d9ea62a337c415e6ee126a5a", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T05:25:31Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T05:42:08Z"}, "message": "Add Python testing to travis", "tree": {"sha": "0518eaf257b0bc534a8e1b122ac191d1a1648f98", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0518eaf257b0bc534a8e1b122ac191d1a1648f98"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/63ca6c683199d166d9ea62a337c415e6ee126a5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/63ca6c683199d166d9ea62a337c415e6ee126a5a", "html_url": "https://github.com/google/jsonnet/commit/63ca6c683199d166d9ea62a337c415e6ee126a5a", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/63ca6c683199d166d9ea62a337c415e6ee126a5a/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cc2135f4a70251330f45e065e14fe72f9edd611", "url": "https://api.github.com/repos/google/jsonnet/commits/7cc2135f4a70251330f45e065e14fe72f9edd611", "html_url": "https://github.com/google/jsonnet/commit/7cc2135f4a70251330f45e065e14fe72f9edd611"}]}, {"sha": "7cc2135f4a70251330f45e065e14fe72f9edd611", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T05:05:44Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T05:06:15Z"}, "message": "Plumb tla (and ext code) into Python", "tree": {"sha": "8eae73cd2382bcb331fe3d53df12c6593130c83c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/8eae73cd2382bcb331fe3d53df12c6593130c83c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/7cc2135f4a70251330f45e065e14fe72f9edd611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/7cc2135f4a70251330f45e065e14fe72f9edd611", "html_url": "https://github.com/google/jsonnet/commit/7cc2135f4a70251330f45e065e14fe72f9edd611", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/7cc2135f4a70251330f45e065e14fe72f9edd611/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57c26896e4873008967fff5afacdc57913998422", "url": "https://api.github.com/repos/google/jsonnet/commits/57c26896e4873008967fff5afacdc57913998422", "html_url": "https://github.com/google/jsonnet/commit/57c26896e4873008967fff5afacdc57913998422"}]}, {"sha": "57c26896e4873008967fff5afacdc57913998422", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-26T01:46:04Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-26T01:46:04Z"}, "message": "Merge pull request #168 from sparkprime/comma_fodder\n\nFix comma fodder attributed to wrong AST", "tree": {"sha": "226af89cafc9a0b2bd6c9d3ce678aedac43e0a5a", "url": "https://api.github.com/repos/google/jsonnet/git/trees/226af89cafc9a0b2bd6c9d3ce678aedac43e0a5a"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/57c26896e4873008967fff5afacdc57913998422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/57c26896e4873008967fff5afacdc57913998422", "html_url": "https://github.com/google/jsonnet/commit/57c26896e4873008967fff5afacdc57913998422", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/57c26896e4873008967fff5afacdc57913998422/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82c55cb544f18b051810b6fa7174a314f1955aee", "url": "https://api.github.com/repos/google/jsonnet/commits/82c55cb544f18b051810b6fa7174a314f1955aee", "html_url": "https://github.com/google/jsonnet/commit/82c55cb544f18b051810b6fa7174a314f1955aee"}, {"sha": "d3744941333fbc9fadb89e2233980280f8881aec", "url": "https://api.github.com/repos/google/jsonnet/commits/d3744941333fbc9fadb89e2233980280f8881aec", "html_url": "https://github.com/google/jsonnet/commit/d3744941333fbc9fadb89e2233980280f8881aec"}]}, {"sha": "d3744941333fbc9fadb89e2233980280f8881aec", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T01:33:48Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T01:43:31Z"}, "message": "Fix comma fodder attributed to wrong AST", "tree": {"sha": "c816202ee5d0cb3ba8c962a13880a42a5760c91b", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c816202ee5d0cb3ba8c962a13880a42a5760c91b"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/d3744941333fbc9fadb89e2233980280f8881aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/d3744941333fbc9fadb89e2233980280f8881aec", "html_url": "https://github.com/google/jsonnet/commit/d3744941333fbc9fadb89e2233980280f8881aec", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/d3744941333fbc9fadb89e2233980280f8881aec/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "url": "https://api.github.com/repos/google/jsonnet/commits/140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "html_url": "https://github.com/google/jsonnet/commit/140d65fab8ccbeae34ff7da560a676ba07fe1cc5"}]}, {"sha": "82c55cb544f18b051810b6fa7174a314f1955aee", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-26T01:34:23Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-26T01:34:23Z"}, "message": "Merge pull request #167 from sparkprime/old_cli_args\n\nAdd back deprecated command-line args as aliases of new ones", "tree": {"sha": "55928b2a6614a4f4710a178bf2584b103664ec9c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/55928b2a6614a4f4710a178bf2584b103664ec9c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/82c55cb544f18b051810b6fa7174a314f1955aee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/82c55cb544f18b051810b6fa7174a314f1955aee", "html_url": "https://github.com/google/jsonnet/commit/82c55cb544f18b051810b6fa7174a314f1955aee", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/82c55cb544f18b051810b6fa7174a314f1955aee/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "url": "https://api.github.com/repos/google/jsonnet/commits/140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "html_url": "https://github.com/google/jsonnet/commit/140d65fab8ccbeae34ff7da560a676ba07fe1cc5"}, {"sha": "b4c40b79603683e1f73450cdd742a9a42e7d6b86", "url": "https://api.github.com/repos/google/jsonnet/commits/b4c40b79603683e1f73450cdd742a9a42e7d6b86", "html_url": "https://github.com/google/jsonnet/commit/b4c40b79603683e1f73450cdd742a9a42e7d6b86"}]}, {"sha": "b4c40b79603683e1f73450cdd742a9a42e7d6b86", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T01:24:28Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T01:24:28Z"}, "message": "Fix --help and tweak command-line flags", "tree": {"sha": "55928b2a6614a4f4710a178bf2584b103664ec9c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/55928b2a6614a4f4710a178bf2584b103664ec9c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/b4c40b79603683e1f73450cdd742a9a42e7d6b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/b4c40b79603683e1f73450cdd742a9a42e7d6b86", "html_url": "https://github.com/google/jsonnet/commit/b4c40b79603683e1f73450cdd742a9a42e7d6b86", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/b4c40b79603683e1f73450cdd742a9a42e7d6b86/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35389b06984f4b31f9773a8a0e4483cdf397d2f3", "url": "https://api.github.com/repos/google/jsonnet/commits/35389b06984f4b31f9773a8a0e4483cdf397d2f3", "html_url": "https://github.com/google/jsonnet/commit/35389b06984f4b31f9773a8a0e4483cdf397d2f3"}]}, {"sha": "35389b06984f4b31f9773a8a0e4483cdf397d2f3", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T01:16:10Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T01:16:10Z"}, "message": "Add back deprecated command-line args as aliases of new ones", "tree": {"sha": "d80d8f994bf2ce169d3e8f14e6a5371baa825bbc", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d80d8f994bf2ce169d3e8f14e6a5371baa825bbc"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/35389b06984f4b31f9773a8a0e4483cdf397d2f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/35389b06984f4b31f9773a8a0e4483cdf397d2f3", "html_url": "https://github.com/google/jsonnet/commit/35389b06984f4b31f9773a8a0e4483cdf397d2f3", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/35389b06984f4b31f9773a8a0e4483cdf397d2f3/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "url": "https://api.github.com/repos/google/jsonnet/commits/140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "html_url": "https://github.com/google/jsonnet/commit/140d65fab8ccbeae34ff7da560a676ba07fe1cc5"}]}, {"sha": "140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-26T01:07:18Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-26T01:07:18Z"}, "message": "Merge pull request #166 from sparkprime/func_tests\n\nMore tests for named params / default args", "tree": {"sha": "dbf2b3fe21ebd13d11ff32d591675cf73eea5b2c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/dbf2b3fe21ebd13d11ff32d591675cf73eea5b2c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "html_url": "https://github.com/google/jsonnet/commit/140d65fab8ccbeae34ff7da560a676ba07fe1cc5", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/140d65fab8ccbeae34ff7da560a676ba07fe1cc5/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c806e1bd3b502564899fe974d107bffc01fcb62", "url": "https://api.github.com/repos/google/jsonnet/commits/2c806e1bd3b502564899fe974d107bffc01fcb62", "html_url": "https://github.com/google/jsonnet/commit/2c806e1bd3b502564899fe974d107bffc01fcb62"}, {"sha": "19730128f225734bd350006e1b3fc764120a6439", "url": "https://api.github.com/repos/google/jsonnet/commits/19730128f225734bd350006e1b3fc764120a6439", "html_url": "https://github.com/google/jsonnet/commit/19730128f225734bd350006e1b3fc764120a6439"}]}, {"sha": "19730128f225734bd350006e1b3fc764120a6439", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T00:33:12Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-26T00:50:39Z"}, "message": "More tests for named params / default args", "tree": {"sha": "dbf2b3fe21ebd13d11ff32d591675cf73eea5b2c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/dbf2b3fe21ebd13d11ff32d591675cf73eea5b2c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/19730128f225734bd350006e1b3fc764120a6439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/19730128f225734bd350006e1b3fc764120a6439", "html_url": "https://github.com/google/jsonnet/commit/19730128f225734bd350006e1b3fc764120a6439", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/19730128f225734bd350006e1b3fc764120a6439/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c806e1bd3b502564899fe974d107bffc01fcb62", "url": "https://api.github.com/repos/google/jsonnet/commits/2c806e1bd3b502564899fe974d107bffc01fcb62", "html_url": "https://github.com/google/jsonnet/commit/2c806e1bd3b502564899fe974d107bffc01fcb62"}]}, {"sha": "2c806e1bd3b502564899fe974d107bffc01fcb62", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-25T23:54:06Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-25T23:54:06Z"}, "message": "Merge pull request #164 from sparkprime/better_functions\n\nBetter functions", "tree": {"sha": "0cc7493eb0da779134af42e685f3c6e81c803d36", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0cc7493eb0da779134af42e685f3c6e81c803d36"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2c806e1bd3b502564899fe974d107bffc01fcb62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2c806e1bd3b502564899fe974d107bffc01fcb62", "html_url": "https://github.com/google/jsonnet/commit/2c806e1bd3b502564899fe974d107bffc01fcb62", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2c806e1bd3b502564899fe974d107bffc01fcb62/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "216a95b8f4e039d7ac8f47716b8ca28c0247e308", "url": "https://api.github.com/repos/google/jsonnet/commits/216a95b8f4e039d7ac8f47716b8ca28c0247e308", "html_url": "https://github.com/google/jsonnet/commit/216a95b8f4e039d7ac8f47716b8ca28c0247e308"}, {"sha": "333a4ab1500edb7327cddb3e646d80210e2da3db", "url": "https://api.github.com/repos/google/jsonnet/commits/333a4ab1500edb7327cddb3e646d80210e2da3db", "html_url": "https://github.com/google/jsonnet/commit/333a4ab1500edb7327cddb3e646d80210e2da3db"}]}, {"sha": "333a4ab1500edb7327cddb3e646d80210e2da3db", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-25T21:28:51Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-25T22:59:37Z"}, "message": "Add support for TLAs in jsonnet commandline tool", "tree": {"sha": "0cc7493eb0da779134af42e685f3c6e81c803d36", "url": "https://api.github.com/repos/google/jsonnet/git/trees/0cc7493eb0da779134af42e685f3c6e81c803d36"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/333a4ab1500edb7327cddb3e646d80210e2da3db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/333a4ab1500edb7327cddb3e646d80210e2da3db", "html_url": "https://github.com/google/jsonnet/commit/333a4ab1500edb7327cddb3e646d80210e2da3db", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/333a4ab1500edb7327cddb3e646d80210e2da3db/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90aa20718304c3141bb0b8ddfb8b86e9c0ed54ba", "url": "https://api.github.com/repos/google/jsonnet/commits/90aa20718304c3141bb0b8ddfb8b86e9c0ed54ba", "html_url": "https://github.com/google/jsonnet/commit/90aa20718304c3141bb0b8ddfb8b86e9c0ed54ba"}]}, {"sha": "90aa20718304c3141bb0b8ddfb8b86e9c0ed54ba", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-25T21:44:38Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-25T22:59:34Z"}, "message": "Implement named params, default args, tlas", "tree": {"sha": "3e5fad9f6d11cdf74a60b9d36c69b413c9a5b8c4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/3e5fad9f6d11cdf74a60b9d36c69b413c9a5b8c4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/90aa20718304c3141bb0b8ddfb8b86e9c0ed54ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/90aa20718304c3141bb0b8ddfb8b86e9c0ed54ba", "html_url": "https://github.com/google/jsonnet/commit/90aa20718304c3141bb0b8ddfb8b86e9c0ed54ba", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/90aa20718304c3141bb0b8ddfb8b86e9c0ed54ba/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "216a95b8f4e039d7ac8f47716b8ca28c0247e308", "url": "https://api.github.com/repos/google/jsonnet/commits/216a95b8f4e039d7ac8f47716b8ca28c0247e308", "html_url": "https://github.com/google/jsonnet/commit/216a95b8f4e039d7ac8f47716b8ca28c0247e308"}]}, {"sha": "216a95b8f4e039d7ac8f47716b8ca28c0247e308", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-25T22:35:33Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-25T22:35:33Z"}, "message": "Merge pull request #165 from sparkprime/underflow\n\nFix another underflow in strip_ws", "tree": {"sha": "f0b8cf768c38bf78dc9e408abb9f6c84c2c56303", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f0b8cf768c38bf78dc9e408abb9f6c84c2c56303"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/216a95b8f4e039d7ac8f47716b8ca28c0247e308", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/216a95b8f4e039d7ac8f47716b8ca28c0247e308", "html_url": "https://github.com/google/jsonnet/commit/216a95b8f4e039d7ac8f47716b8ca28c0247e308", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/216a95b8f4e039d7ac8f47716b8ca28c0247e308/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c", "url": "https://api.github.com/repos/google/jsonnet/commits/ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c", "html_url": "https://github.com/google/jsonnet/commit/ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c"}, {"sha": "a513d6a405584a90233541279ed459e8bc4f4b80", "url": "https://api.github.com/repos/google/jsonnet/commits/a513d6a405584a90233541279ed459e8bc4f4b80", "html_url": "https://github.com/google/jsonnet/commit/a513d6a405584a90233541279ed459e8bc4f4b80"}]}, {"sha": "a513d6a405584a90233541279ed459e8bc4f4b80", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-25T22:22:51Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-25T22:22:51Z"}, "message": "Fix another underflow in strip_ws", "tree": {"sha": "f0b8cf768c38bf78dc9e408abb9f6c84c2c56303", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f0b8cf768c38bf78dc9e408abb9f6c84c2c56303"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a513d6a405584a90233541279ed459e8bc4f4b80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a513d6a405584a90233541279ed459e8bc4f4b80", "html_url": "https://github.com/google/jsonnet/commit/a513d6a405584a90233541279ed459e8bc4f4b80", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a513d6a405584a90233541279ed459e8bc4f4b80/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c", "url": "https://api.github.com/repos/google/jsonnet/commits/ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c", "html_url": "https://github.com/google/jsonnet/commit/ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c"}]}, {"sha": "ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-22T21:17:16Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-22T21:17:16Z"}, "message": "Merge pull request #162 from sparkprime/overloads\n\nEnable -Woverloaded-virtual and fix resulting warnings", "tree": {"sha": "46ef7cf69bab7533815cb95aaae882557edf7ece", "url": "https://api.github.com/repos/google/jsonnet/git/trees/46ef7cf69bab7533815cb95aaae882557edf7ece"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c", "html_url": "https://github.com/google/jsonnet/commit/ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/ef3fef86820c0ffcb6ee3df93eb27ddb1ee36c1c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8025a01c1be16ee27b29e1e7a48dbebf70db4d20", "url": "https://api.github.com/repos/google/jsonnet/commits/8025a01c1be16ee27b29e1e7a48dbebf70db4d20", "html_url": "https://github.com/google/jsonnet/commit/8025a01c1be16ee27b29e1e7a48dbebf70db4d20"}, {"sha": "a1bda24ea2a9d45d74fe3857d4c690894317bc87", "url": "https://api.github.com/repos/google/jsonnet/commits/a1bda24ea2a9d45d74fe3857d4c690894317bc87", "html_url": "https://github.com/google/jsonnet/commit/a1bda24ea2a9d45d74fe3857d4c690894317bc87"}]}, {"sha": "a1bda24ea2a9d45d74fe3857d4c690894317bc87", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-22T18:32:14Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-22T18:32:14Z"}, "message": "Enable -Woverloaded-virtual and fix resulting warnings", "tree": {"sha": "46ef7cf69bab7533815cb95aaae882557edf7ece", "url": "https://api.github.com/repos/google/jsonnet/git/trees/46ef7cf69bab7533815cb95aaae882557edf7ece"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a1bda24ea2a9d45d74fe3857d4c690894317bc87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a1bda24ea2a9d45d74fe3857d4c690894317bc87", "html_url": "https://github.com/google/jsonnet/commit/a1bda24ea2a9d45d74fe3857d4c690894317bc87", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a1bda24ea2a9d45d74fe3857d4c690894317bc87/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8025a01c1be16ee27b29e1e7a48dbebf70db4d20", "url": "https://api.github.com/repos/google/jsonnet/commits/8025a01c1be16ee27b29e1e7a48dbebf70db4d20", "html_url": "https://github.com/google/jsonnet/commit/8025a01c1be16ee27b29e1e7a48dbebf70db4d20"}]}, {"sha": "8025a01c1be16ee27b29e1e7a48dbebf70db4d20", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-07T23:26:59Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-07T23:26:59Z"}, "message": "Update README.md", "tree": {"sha": "28a1c448d4121672d2ae71913dc8b00e7620fba4", "url": "https://api.github.com/repos/google/jsonnet/git/trees/28a1c448d4121672d2ae71913dc8b00e7620fba4"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/8025a01c1be16ee27b29e1e7a48dbebf70db4d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/8025a01c1be16ee27b29e1e7a48dbebf70db4d20", "html_url": "https://github.com/google/jsonnet/commit/8025a01c1be16ee27b29e1e7a48dbebf70db4d20", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/8025a01c1be16ee27b29e1e7a48dbebf70db4d20/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "332c748f3565b6769a3d8e34c559f7067079117d", "url": "https://api.github.com/repos/google/jsonnet/commits/332c748f3565b6769a3d8e34c559f7067079117d", "html_url": "https://github.com/google/jsonnet/commit/332c748f3565b6769a3d8e34c559f7067079117d"}]}, {"sha": "332c748f3565b6769a3d8e34c559f7067079117d", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-07T23:24:32Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-07T23:24:32Z"}, "message": "Update JsonnetValue.java\n\nRemove unnecessary comment.", "tree": {"sha": "326e19342df4effdf3ec9dda8e8ed615bb70c283", "url": "https://api.github.com/repos/google/jsonnet/git/trees/326e19342df4effdf3ec9dda8e8ed615bb70c283"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/332c748f3565b6769a3d8e34c559f7067079117d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/332c748f3565b6769a3d8e34c559f7067079117d", "html_url": "https://github.com/google/jsonnet/commit/332c748f3565b6769a3d8e34c559f7067079117d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/332c748f3565b6769a3d8e34c559f7067079117d/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2663d7199d4657d603f28a814a07d23b0c3951", "url": "https://api.github.com/repos/google/jsonnet/commits/6c2663d7199d4657d603f28a814a07d23b0c3951", "html_url": "https://github.com/google/jsonnet/commit/6c2663d7199d4657d603f28a814a07d23b0c3951"}]}, {"sha": "6c2663d7199d4657d603f28a814a07d23b0c3951", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-07T23:18:43Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-07T23:18:43Z"}, "message": "Merge pull request #161 from sparkprime/java_comparison\n\nJava comparison", "tree": {"sha": "c1bd4511c6d839f9ed0bd3d9c37c685403795dce", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c1bd4511c6d839f9ed0bd3d9c37c685403795dce"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/6c2663d7199d4657d603f28a814a07d23b0c3951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/6c2663d7199d4657d603f28a814a07d23b0c3951", "html_url": "https://github.com/google/jsonnet/commit/6c2663d7199d4657d603f28a814a07d23b0c3951", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/6c2663d7199d4657d603f28a814a07d23b0c3951/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56a91d4182a812f4f64b8bf6c4d2ac96b6e819df", "url": "https://api.github.com/repos/google/jsonnet/commits/56a91d4182a812f4f64b8bf6c4d2ac96b6e819df", "html_url": "https://github.com/google/jsonnet/commit/56a91d4182a812f4f64b8bf6c4d2ac96b6e819df"}, {"sha": "1f61ac350dd8b221f1d73c2a3937740c907054f0", "url": "https://api.github.com/repos/google/jsonnet/commits/1f61ac350dd8b221f1d73c2a3937740c907054f0", "html_url": "https://github.com/google/jsonnet/commit/1f61ac350dd8b221f1d73c2a3937740c907054f0"}]}, {"sha": "1f61ac350dd8b221f1d73c2a3937740c907054f0", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-07T23:16:16Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-07T23:17:17Z"}, "message": "Java comparison", "tree": {"sha": "c028a5217985aede7a40fc70de4cff941e09183c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c028a5217985aede7a40fc70de4cff941e09183c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1f61ac350dd8b221f1d73c2a3937740c907054f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1f61ac350dd8b221f1d73c2a3937740c907054f0", "html_url": "https://github.com/google/jsonnet/commit/1f61ac350dd8b221f1d73c2a3937740c907054f0", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1f61ac350dd8b221f1d73c2a3937740c907054f0/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e660c55b4a35a1ebd85370e0f162838a862e2465", "url": "https://api.github.com/repos/google/jsonnet/commits/e660c55b4a35a1ebd85370e0f162838a862e2465", "html_url": "https://github.com/google/jsonnet/commit/e660c55b4a35a1ebd85370e0f162838a862e2465"}]}, {"sha": "56a91d4182a812f4f64b8bf6c4d2ac96b6e819df", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-06T02:32:31Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-06T02:32:31Z"}, "message": "Merge pull request #160 from sparkprime/manifest_json\n\nAdd std.manifestJson manifestJsonEx and manifestYamlStream", "tree": {"sha": "d4f6150769606af43df4f5e04df0713a0cf07906", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d4f6150769606af43df4f5e04df0713a0cf07906"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/56a91d4182a812f4f64b8bf6c4d2ac96b6e819df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/56a91d4182a812f4f64b8bf6c4d2ac96b6e819df", "html_url": "https://github.com/google/jsonnet/commit/56a91d4182a812f4f64b8bf6c4d2ac96b6e819df", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/56a91d4182a812f4f64b8bf6c4d2ac96b6e819df/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e660c55b4a35a1ebd85370e0f162838a862e2465", "url": "https://api.github.com/repos/google/jsonnet/commits/e660c55b4a35a1ebd85370e0f162838a862e2465", "html_url": "https://github.com/google/jsonnet/commit/e660c55b4a35a1ebd85370e0f162838a862e2465"}, {"sha": "9fc4c1983a33b7668941caaf104c88d6f00d1ae1", "url": "https://api.github.com/repos/google/jsonnet/commits/9fc4c1983a33b7668941caaf104c88d6f00d1ae1", "html_url": "https://github.com/google/jsonnet/commit/9fc4c1983a33b7668941caaf104c88d6f00d1ae1"}]}, {"sha": "9fc4c1983a33b7668941caaf104c88d6f00d1ae1", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-03-09T04:38:51Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-06T02:01:39Z"}, "message": "Add std.manifestJson manifestJsonEx and manifestYamlStream", "tree": {"sha": "d4f6150769606af43df4f5e04df0713a0cf07906", "url": "https://api.github.com/repos/google/jsonnet/git/trees/d4f6150769606af43df4f5e04df0713a0cf07906"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/9fc4c1983a33b7668941caaf104c88d6f00d1ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/9fc4c1983a33b7668941caaf104c88d6f00d1ae1", "html_url": "https://github.com/google/jsonnet/commit/9fc4c1983a33b7668941caaf104c88d6f00d1ae1", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/9fc4c1983a33b7668941caaf104c88d6f00d1ae1/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e660c55b4a35a1ebd85370e0f162838a862e2465", "url": "https://api.github.com/repos/google/jsonnet/commits/e660c55b4a35a1ebd85370e0f162838a862e2465", "html_url": "https://github.com/google/jsonnet/commit/e660c55b4a35a1ebd85370e0f162838a862e2465"}]}, {"sha": "e660c55b4a35a1ebd85370e0f162838a862e2465", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-06T01:55:57Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-06T01:55:57Z"}, "message": "Merge pull request #159 from sparkprime/text_block_escaping\n\nFix bug where escaping was still performed in text blocks", "tree": {"sha": "034e640e656fa70fc83389969d433d66cac7f0b7", "url": "https://api.github.com/repos/google/jsonnet/git/trees/034e640e656fa70fc83389969d433d66cac7f0b7"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/e660c55b4a35a1ebd85370e0f162838a862e2465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/e660c55b4a35a1ebd85370e0f162838a862e2465", "html_url": "https://github.com/google/jsonnet/commit/e660c55b4a35a1ebd85370e0f162838a862e2465", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/e660c55b4a35a1ebd85370e0f162838a862e2465/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4871195883146b598afe4a1324be70810ccdb72e", "url": "https://api.github.com/repos/google/jsonnet/commits/4871195883146b598afe4a1324be70810ccdb72e", "html_url": "https://github.com/google/jsonnet/commit/4871195883146b598afe4a1324be70810ccdb72e"}, {"sha": "2bdad69fc3ff982c91eaedd18809a399c3f91c5b", "url": "https://api.github.com/repos/google/jsonnet/commits/2bdad69fc3ff982c91eaedd18809a399c3f91c5b", "html_url": "https://github.com/google/jsonnet/commit/2bdad69fc3ff982c91eaedd18809a399c3f91c5b"}]}, {"sha": "2bdad69fc3ff982c91eaedd18809a399c3f91c5b", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-06T01:49:57Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-06T01:52:12Z"}, "message": "Fix bug where escaping was still performed in text blocks", "tree": {"sha": "e396aa97d6980eff87363fe246dc35e5536e4c73", "url": "https://api.github.com/repos/google/jsonnet/git/trees/e396aa97d6980eff87363fe246dc35e5536e4c73"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/2bdad69fc3ff982c91eaedd18809a399c3f91c5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/2bdad69fc3ff982c91eaedd18809a399c3f91c5b", "html_url": "https://github.com/google/jsonnet/commit/2bdad69fc3ff982c91eaedd18809a399c3f91c5b", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/2bdad69fc3ff982c91eaedd18809a399c3f91c5b/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16524a00d0574b3fed8711bba84b25c6bed7b2ce", "url": "https://api.github.com/repos/google/jsonnet/commits/16524a00d0574b3fed8711bba84b25c6bed7b2ce", "html_url": "https://github.com/google/jsonnet/commit/16524a00d0574b3fed8711bba84b25c6bed7b2ce"}]}, {"sha": "4871195883146b598afe4a1324be70810ccdb72e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-04T23:28:06Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-04T23:28:06Z"}, "message": "Merge pull request #158 from igorpeshansky/fix-logging-agent-url\n\nUpdate to the latest logging install script URL.", "tree": {"sha": "efe32cc74648d335ddfe964286ed829703ca224d", "url": "https://api.github.com/repos/google/jsonnet/git/trees/efe32cc74648d335ddfe964286ed829703ca224d"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/4871195883146b598afe4a1324be70810ccdb72e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/4871195883146b598afe4a1324be70810ccdb72e", "html_url": "https://github.com/google/jsonnet/commit/4871195883146b598afe4a1324be70810ccdb72e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/4871195883146b598afe4a1324be70810ccdb72e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72c67a157e7a4e31d6247b09eaf211dfde96607e", "url": "https://api.github.com/repos/google/jsonnet/commits/72c67a157e7a4e31d6247b09eaf211dfde96607e", "html_url": "https://github.com/google/jsonnet/commit/72c67a157e7a4e31d6247b09eaf211dfde96607e"}, {"sha": "0faf4c16fff0016112e126a6bdf34d09fff4835d", "url": "https://api.github.com/repos/google/jsonnet/commits/0faf4c16fff0016112e126a6bdf34d09fff4835d", "html_url": "https://github.com/google/jsonnet/commit/0faf4c16fff0016112e126a6bdf34d09fff4835d"}]}, {"sha": "0faf4c16fff0016112e126a6bdf34d09fff4835d", "commit": {"author": {"name": "Igor Peshansky", "email": "igorp@google.com", "date": "2016-04-04T21:52:40Z"}, "committer": {"name": "Igor Peshansky", "email": "igorpeshansky@github.com", "date": "2016-04-04T21:58:17Z"}, "message": "Update to the latest logging install script URL.", "tree": {"sha": "efe32cc74648d335ddfe964286ed829703ca224d", "url": "https://api.github.com/repos/google/jsonnet/git/trees/efe32cc74648d335ddfe964286ed829703ca224d"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/0faf4c16fff0016112e126a6bdf34d09fff4835d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/0faf4c16fff0016112e126a6bdf34d09fff4835d", "html_url": "https://github.com/google/jsonnet/commit/0faf4c16fff0016112e126a6bdf34d09fff4835d", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/0faf4c16fff0016112e126a6bdf34d09fff4835d/comments", "author": {"login": "igorpeshansky", "id": 7594381, "avatar_url": "https://avatars1.githubusercontent.com/u/7594381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorpeshansky", "html_url": "https://github.com/igorpeshansky", "followers_url": "https://api.github.com/users/igorpeshansky/followers", "following_url": "https://api.github.com/users/igorpeshansky/following{/other_user}", "gists_url": "https://api.github.com/users/igorpeshansky/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorpeshansky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorpeshansky/subscriptions", "organizations_url": "https://api.github.com/users/igorpeshansky/orgs", "repos_url": "https://api.github.com/users/igorpeshansky/repos", "events_url": "https://api.github.com/users/igorpeshansky/events{/privacy}", "received_events_url": "https://api.github.com/users/igorpeshansky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "igorpeshansky", "id": 7594381, "avatar_url": "https://avatars1.githubusercontent.com/u/7594381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorpeshansky", "html_url": "https://github.com/igorpeshansky", "followers_url": "https://api.github.com/users/igorpeshansky/followers", "following_url": "https://api.github.com/users/igorpeshansky/following{/other_user}", "gists_url": "https://api.github.com/users/igorpeshansky/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorpeshansky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorpeshansky/subscriptions", "organizations_url": "https://api.github.com/users/igorpeshansky/orgs", "repos_url": "https://api.github.com/users/igorpeshansky/repos", "events_url": "https://api.github.com/users/igorpeshansky/events{/privacy}", "received_events_url": "https://api.github.com/users/igorpeshansky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72c67a157e7a4e31d6247b09eaf211dfde96607e", "url": "https://api.github.com/repos/google/jsonnet/commits/72c67a157e7a4e31d6247b09eaf211dfde96607e", "html_url": "https://github.com/google/jsonnet/commit/72c67a157e7a4e31d6247b09eaf211dfde96607e"}]}, {"sha": "72c67a157e7a4e31d6247b09eaf211dfde96607e", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-04T00:20:43Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-04T00:20:43Z"}, "message": "Merge pull request #157 from sparkprime/cleanup_object_fields\n\nCleanup object fields", "tree": {"sha": "f5c4047fa05b2360506f4fe9a0867fce34baf09c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f5c4047fa05b2360506f4fe9a0867fce34baf09c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/72c67a157e7a4e31d6247b09eaf211dfde96607e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/72c67a157e7a4e31d6247b09eaf211dfde96607e", "html_url": "https://github.com/google/jsonnet/commit/72c67a157e7a4e31d6247b09eaf211dfde96607e", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/72c67a157e7a4e31d6247b09eaf211dfde96607e/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16524a00d0574b3fed8711bba84b25c6bed7b2ce", "url": "https://api.github.com/repos/google/jsonnet/commits/16524a00d0574b3fed8711bba84b25c6bed7b2ce", "html_url": "https://github.com/google/jsonnet/commit/16524a00d0574b3fed8711bba84b25c6bed7b2ce"}, {"sha": "c4113fa6b475f9ca6a7266d87935453f28dcfee9", "url": "https://api.github.com/repos/google/jsonnet/commits/c4113fa6b475f9ca6a7266d87935453f28dcfee9", "html_url": "https://github.com/google/jsonnet/commit/c4113fa6b475f9ca6a7266d87935453f28dcfee9"}]}, {"sha": "c4113fa6b475f9ca6a7266d87935453f28dcfee9", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-03T17:26:33Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-03T17:26:33Z"}, "message": "More cleanup of objectFields (stuff not needed since super restriction)", "tree": {"sha": "f5c4047fa05b2360506f4fe9a0867fce34baf09c", "url": "https://api.github.com/repos/google/jsonnet/git/trees/f5c4047fa05b2360506f4fe9a0867fce34baf09c"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/c4113fa6b475f9ca6a7266d87935453f28dcfee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/c4113fa6b475f9ca6a7266d87935453f28dcfee9", "html_url": "https://github.com/google/jsonnet/commit/c4113fa6b475f9ca6a7266d87935453f28dcfee9", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/c4113fa6b475f9ca6a7266d87935453f28dcfee9/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b3571b60fa5dba9fc1053e869a786648ca8444c", "url": "https://api.github.com/repos/google/jsonnet/commits/1b3571b60fa5dba9fc1053e869a786648ca8444c", "html_url": "https://github.com/google/jsonnet/commit/1b3571b60fa5dba9fc1053e869a786648ca8444c"}]}, {"sha": "1b3571b60fa5dba9fc1053e869a786648ca8444c", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-03T17:18:39Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-03T17:18:39Z"}, "message": "Simplify objectFields code", "tree": {"sha": "ba174a8bd8ed8c2afc03c7e8af55958df61fba7f", "url": "https://api.github.com/repos/google/jsonnet/git/trees/ba174a8bd8ed8c2afc03c7e8af55958df61fba7f"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/1b3571b60fa5dba9fc1053e869a786648ca8444c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/1b3571b60fa5dba9fc1053e869a786648ca8444c", "html_url": "https://github.com/google/jsonnet/commit/1b3571b60fa5dba9fc1053e869a786648ca8444c", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/1b3571b60fa5dba9fc1053e869a786648ca8444c/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16524a00d0574b3fed8711bba84b25c6bed7b2ce", "url": "https://api.github.com/repos/google/jsonnet/commits/16524a00d0574b3fed8711bba84b25c6bed7b2ce", "html_url": "https://github.com/google/jsonnet/commit/16524a00d0574b3fed8711bba84b25c6bed7b2ce"}]}, {"sha": "16524a00d0574b3fed8711bba84b25c6bed7b2ce", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-03T17:10:51Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-03T17:10:51Z"}, "message": "Merge pull request #156 from sparkprime/cleanup_find_object\n\nCLEANUP: Remove unnecessary params from findObject", "tree": {"sha": "6e977c140a1991089cd8a0e22ea511179ba1bc90", "url": "https://api.github.com/repos/google/jsonnet/git/trees/6e977c140a1991089cd8a0e22ea511179ba1bc90"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/16524a00d0574b3fed8711bba84b25c6bed7b2ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/16524a00d0574b3fed8711bba84b25c6bed7b2ce", "html_url": "https://github.com/google/jsonnet/commit/16524a00d0574b3fed8711bba84b25c6bed7b2ce", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/16524a00d0574b3fed8711bba84b25c6bed7b2ce/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a62a717aba72381b06c45628a0b59c5b00b9f931", "url": "https://api.github.com/repos/google/jsonnet/commits/a62a717aba72381b06c45628a0b59c5b00b9f931", "html_url": "https://github.com/google/jsonnet/commit/a62a717aba72381b06c45628a0b59c5b00b9f931"}, {"sha": "28e874e9226c40561ce42aa17a1a9ac849d12a96", "url": "https://api.github.com/repos/google/jsonnet/commits/28e874e9226c40561ce42aa17a1a9ac849d12a96", "html_url": "https://github.com/google/jsonnet/commit/28e874e9226c40561ce42aa17a1a9ac849d12a96"}]}, {"sha": "28e874e9226c40561ce42aa17a1a9ac849d12a96", "commit": {"author": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-03T16:54:34Z"}, "committer": {"name": "Dave Cunningham", "email": "dcunnin@google.com", "date": "2016-04-03T16:54:34Z"}, "message": "CLEANUP: Remove unnecessary params from findObject", "tree": {"sha": "6e977c140a1991089cd8a0e22ea511179ba1bc90", "url": "https://api.github.com/repos/google/jsonnet/git/trees/6e977c140a1991089cd8a0e22ea511179ba1bc90"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/28e874e9226c40561ce42aa17a1a9ac849d12a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/28e874e9226c40561ce42aa17a1a9ac849d12a96", "html_url": "https://github.com/google/jsonnet/commit/28e874e9226c40561ce42aa17a1a9ac849d12a96", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/28e874e9226c40561ce42aa17a1a9ac849d12a96/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a62a717aba72381b06c45628a0b59c5b00b9f931", "url": "https://api.github.com/repos/google/jsonnet/commits/a62a717aba72381b06c45628a0b59c5b00b9f931", "html_url": "https://github.com/google/jsonnet/commit/a62a717aba72381b06c45628a0b59c5b00b9f931"}]}, {"sha": "a62a717aba72381b06c45628a0b59c5b00b9f931", "commit": {"author": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-03T00:46:33Z"}, "committer": {"name": "Dave Cunningham", "email": "sparkprime@gmail.com", "date": "2016-04-03T00:46:33Z"}, "message": "Merge pull request #155 from sparkprime/var_original\n\nRemove unused var.original field.", "tree": {"sha": "c419d255b897fefcd19f6b921cc083c6514204ad", "url": "https://api.github.com/repos/google/jsonnet/git/trees/c419d255b897fefcd19f6b921cc083c6514204ad"}, "url": "https://api.github.com/repos/google/jsonnet/git/commits/a62a717aba72381b06c45628a0b59c5b00b9f931", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/jsonnet/commits/a62a717aba72381b06c45628a0b59c5b00b9f931", "html_url": "https://github.com/google/jsonnet/commit/a62a717aba72381b06c45628a0b59c5b00b9f931", "comments_url": "https://api.github.com/repos/google/jsonnet/commits/a62a717aba72381b06c45628a0b59c5b00b9f931/comments", "author": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c644563be2efbb776dac787864ef1902d24d6677", "url": "https://api.github.com/repos/google/jsonnet/commits/c644563be2efbb776dac787864ef1902d24d6677", "html_url": "https://github.com/google/jsonnet/commit/c644563be2efbb776dac787864ef1902d24d6677"}, {"sha": "9fe8d6707bab507cbda6696e6f09b4769c327d21", "url": "https://api.github.com/repos/google/jsonnet/commits/9fe8d6707bab507cbda6696e6f09b4769c327d21", "html_url": "https://github.com/google/jsonnet/commit/9fe8d6707bab507cbda6696e6f09b4769c327d21"}]}], "pull_requests": [{"url": "https://api.github.com/repos/google/jsonnet/pulls/111", "id": 60625844, "html_url": "https://github.com/google/jsonnet/pull/111", "diff_url": "https://github.com/google/jsonnet/pull/111.diff", "patch_url": "https://github.com/google/jsonnet/pull/111.patch", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/111", "number": 111, "state": "open", "locked": false, "title": "RFC: implement unit testing framework", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "Supports tests of type function, and \"table tests\". Output looks like:\n\n```\nRunning tests/arith_bool.jsonnet...\n--- PASS 'Test !'\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n--- PASS 'Test !='\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n--- PASS 'Test &&'\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n--- PASS 'Test =='\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n--- PASS 'Test if'\n        pass    'case 0'\n        pass    'case 1'\n--- PASS 'Test no implicit conversions'\n        pass    'case 0'\n        pass    'case 1'\n--- PASS 'Test shortcut semantics'\n        pass    'case 0'\n        pass    'case 1'\n--- PASS 'Test ||'\n        pass    'case 0'\n        pass    'case 1'\n        pass    'case 2'\n        pass    'case 3'\n\nRunning tests/merge.jsonnet...\n--- PASS 'Test std.mergePatch'\n        pass    'case 0'\n        pass    'case 1'\n        pass    'override with null'\n        pass    'case 3'\n        pass    'case 4'\n        pass    'case 5'\n        pass    'case 6'\n        pass    'case 7'\n        pass    'case 8'\n        pass    'case 9'\n        pass    'case 10'\n        pass    'case 11'\n        pass    'case 12'\n        pass    'case 13'\n\nOK\n```\n", "created_at": "2016-02-25T05:00:57Z", "updated_at": "2016-03-02T10:13:44Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "47820d1d3ecd29120a37392b7cd84565657c2cf3", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/google/jsonnet/pulls/111/commits", "review_comments_url": "https://api.github.com/repos/google/jsonnet/pulls/111/comments", "review_comment_url": "https://api.github.com/repos/google/jsonnet/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/google/jsonnet/issues/111/comments", "statuses_url": "https://api.github.com/repos/google/jsonnet/statuses/69192189687f0c5aa84b59b1923329db9f87970c", "head": {"label": "mikedanese:unit", "ref": "unit", "sha": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "repo": {"id": 49243731, "name": "jsonnet", "full_name": "mikedanese/jsonnet", "owner": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/mikedanese/jsonnet", "description": "Jsonnet - The data templating language", "fork": true, "url": "https://api.github.com/repos/mikedanese/jsonnet", "forks_url": "https://api.github.com/repos/mikedanese/jsonnet/forks", "keys_url": "https://api.github.com/repos/mikedanese/jsonnet/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mikedanese/jsonnet/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mikedanese/jsonnet/teams", "hooks_url": "https://api.github.com/repos/mikedanese/jsonnet/hooks", "issue_events_url": "https://api.github.com/repos/mikedanese/jsonnet/issues/events{/number}", "events_url": "https://api.github.com/repos/mikedanese/jsonnet/events", "assignees_url": "https://api.github.com/repos/mikedanese/jsonnet/assignees{/user}", "branches_url": "https://api.github.com/repos/mikedanese/jsonnet/branches{/branch}", "tags_url": "https://api.github.com/repos/mikedanese/jsonnet/tags", "blobs_url": "https://api.github.com/repos/mikedanese/jsonnet/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mikedanese/jsonnet/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mikedanese/jsonnet/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mikedanese/jsonnet/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mikedanese/jsonnet/statuses/{sha}", "languages_url": "https://api.github.com/repos/mikedanese/jsonnet/languages", "stargazers_url": "https://api.github.com/repos/mikedanese/jsonnet/stargazers", "contributors_url": "https://api.github.com/repos/mikedanese/jsonnet/contributors", "subscribers_url": "https://api.github.com/repos/mikedanese/jsonnet/subscribers", "subscription_url": "https://api.github.com/repos/mikedanese/jsonnet/subscription", "commits_url": "https://api.github.com/repos/mikedanese/jsonnet/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mikedanese/jsonnet/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mikedanese/jsonnet/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mikedanese/jsonnet/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mikedanese/jsonnet/contents/{+path}", "compare_url": "https://api.github.com/repos/mikedanese/jsonnet/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mikedanese/jsonnet/merges", "archive_url": "https://api.github.com/repos/mikedanese/jsonnet/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mikedanese/jsonnet/downloads", "issues_url": "https://api.github.com/repos/mikedanese/jsonnet/issues{/number}", "pulls_url": "https://api.github.com/repos/mikedanese/jsonnet/pulls{/number}", "milestones_url": "https://api.github.com/repos/mikedanese/jsonnet/milestones{/number}", "notifications_url": "https://api.github.com/repos/mikedanese/jsonnet/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mikedanese/jsonnet/labels{/name}", "releases_url": "https://api.github.com/repos/mikedanese/jsonnet/releases{/id}", "deployments_url": "https://api.github.com/repos/mikedanese/jsonnet/deployments", "created_at": "2016-01-08T02:20:31Z", "updated_at": "2016-02-17T18:31:20Z", "pushed_at": "2016-03-22T21:45:56Z", "git_url": "git://github.com/mikedanese/jsonnet.git", "ssh_url": "git@github.com:mikedanese/jsonnet.git", "clone_url": "https://github.com/mikedanese/jsonnet.git", "svn_url": "https://github.com/mikedanese/jsonnet", "homepage": "http://jsonnet.org", "size": 14619, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "google:master", "ref": "master", "sha": "709da7fe2284bf9330e915a948a1ea1f49973823", "user": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 22527161, "name": "jsonnet", "full_name": "google/jsonnet", "owner": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/google/jsonnet", "description": "Jsonnet - The data templating language", "fork": false, "url": "https://api.github.com/repos/google/jsonnet", "forks_url": "https://api.github.com/repos/google/jsonnet/forks", "keys_url": "https://api.github.com/repos/google/jsonnet/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/jsonnet/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/jsonnet/teams", "hooks_url": "https://api.github.com/repos/google/jsonnet/hooks", "issue_events_url": "https://api.github.com/repos/google/jsonnet/issues/events{/number}", "events_url": "https://api.github.com/repos/google/jsonnet/events", "assignees_url": "https://api.github.com/repos/google/jsonnet/assignees{/user}", "branches_url": "https://api.github.com/repos/google/jsonnet/branches{/branch}", "tags_url": "https://api.github.com/repos/google/jsonnet/tags", "blobs_url": "https://api.github.com/repos/google/jsonnet/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/jsonnet/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/jsonnet/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/jsonnet/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/jsonnet/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/jsonnet/languages", "stargazers_url": "https://api.github.com/repos/google/jsonnet/stargazers", "contributors_url": "https://api.github.com/repos/google/jsonnet/contributors", "subscribers_url": "https://api.github.com/repos/google/jsonnet/subscribers", "subscription_url": "https://api.github.com/repos/google/jsonnet/subscription", "commits_url": "https://api.github.com/repos/google/jsonnet/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/jsonnet/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/jsonnet/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/jsonnet/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/jsonnet/contents/{+path}", "compare_url": "https://api.github.com/repos/google/jsonnet/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/jsonnet/merges", "archive_url": "https://api.github.com/repos/google/jsonnet/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/jsonnet/downloads", "issues_url": "https://api.github.com/repos/google/jsonnet/issues{/number}", "pulls_url": "https://api.github.com/repos/google/jsonnet/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/jsonnet/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/jsonnet/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/jsonnet/labels{/name}", "releases_url": "https://api.github.com/repos/google/jsonnet/releases{/id}", "deployments_url": "https://api.github.com/repos/google/jsonnet/deployments", "created_at": "2014-08-01T20:29:12Z", "updated_at": "2018-01-22T18:45:05Z", "pushed_at": "2018-01-20T15:58:47Z", "git_url": "git://github.com/google/jsonnet.git", "ssh_url": "git@github.com:google/jsonnet.git", "clone_url": "https://github.com/google/jsonnet.git", "svn_url": "https://github.com/google/jsonnet", "homepage": "http://jsonnet.org", "size": 19831, "stargazers_count": 1042, "watchers_count": 1042, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": true, "forks_count": 138, "mirror_url": null, "archived": false, "open_issues_count": 96, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0"}, "forks": 138, "open_issues": 96, "watchers": 1042, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}, "html": {"href": "https://github.com/google/jsonnet/pull/111"}, "issue": {"href": "https://api.github.com/repos/google/jsonnet/issues/111"}, "comments": {"href": "https://api.github.com/repos/google/jsonnet/issues/111/comments"}, "review_comments": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111/comments"}, "review_comment": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111/commits"}, "statuses": {"href": "https://api.github.com/repos/google/jsonnet/statuses/69192189687f0c5aa84b59b1923329db9f87970c"}}, "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/google/jsonnet/issues/comments/53116438", "html_url": "https://github.com/google/jsonnet/issues/7#issuecomment-53116438", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/7", "id": 53116438, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-22T20:30:29Z", "updated_at": "2014-08-22T20:30:29Z", "author_association": "MEMBER", "body": "Optimization is implicit for now.  We may revisit this later, e.g. define a tail keyword and put it on the end of a function call.  This could also implicitly force the arguments of the function, making code easier to write.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/53116438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/54082032", "html_url": "https://github.com/google/jsonnet/issues/16#issuecomment-54082032", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/16", "id": 54082032, "user": {"login": "nikolay", "id": 2882, "avatar_url": "https://avatars2.githubusercontent.com/u/2882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolay", "html_url": "https://github.com/nikolay", "followers_url": "https://api.github.com/users/nikolay/followers", "following_url": "https://api.github.com/users/nikolay/following{/other_user}", "gists_url": "https://api.github.com/users/nikolay/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolay/subscriptions", "organizations_url": "https://api.github.com/users/nikolay/orgs", "repos_url": "https://api.github.com/users/nikolay/repos", "events_url": "https://api.github.com/users/nikolay/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolay/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-01T17:52:11Z", "updated_at": "2014-09-01T17:52:11Z", "author_association": "NONE", "body": "It's fixed now, but I it still doesn't compile:\n\n```\n$ make\nc++ -g -O3 -Wall -Wextra -pedantic -std=c++0x  jsonnet.cpp lexer.cpp parser.cpp static_analysis.cpp vm.cpp libjsonnet.cpp -o jsonnet\nc++: warning: couldn't understand kern.osversion '14.0.0\nparser.cpp:822:1: error: zero-size array 'STD_CODE'\n };\n ^\nmake: *** [jsonnet] Error 1\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/54082032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/54084339", "html_url": "https://github.com/google/jsonnet/issues/16#issuecomment-54084339", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/16", "id": 54084339, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-01T18:35:48Z", "updated_at": "2014-09-01T18:35:48Z", "author_association": "MEMBER", "body": "Closing as per conclusion of parallel discussion on google groups.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/54084339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/54086304", "html_url": "https://github.com/google/jsonnet/issues/16#issuecomment-54086304", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/16", "id": 54086304, "user": {"login": "nikolay", "id": 2882, "avatar_url": "https://avatars2.githubusercontent.com/u/2882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolay", "html_url": "https://github.com/nikolay", "followers_url": "https://api.github.com/users/nikolay/followers", "following_url": "https://api.github.com/users/nikolay/following{/other_user}", "gists_url": "https://api.github.com/users/nikolay/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolay/subscriptions", "organizations_url": "https://api.github.com/users/nikolay/orgs", "repos_url": "https://api.github.com/users/nikolay/repos", "events_url": "https://api.github.com/users/nikolay/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolay/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-01T19:14:46Z", "updated_at": "2014-09-01T19:14:46Z", "author_association": "NONE", "body": "Thanks, @sparkprime! Can't wait to start playing with this. I have to deal with huge monolithic JSON files for AWS CloudFormation, so, I developed my own Pythonic extension of it, but Jsonnet can definitely do that and a lot more, so, once I have something accomplished, I will post examples to popularize Jsonnet!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/54086304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/54087158", "html_url": "https://github.com/google/jsonnet/issues/16#issuecomment-54087158", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/16", "id": 54087158, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-01T19:32:24Z", "updated_at": "2014-09-01T19:32:24Z", "author_association": "MEMBER", "body": "Sounds great!  Do post your findings on the Google group :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/54087158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/56136521", "html_url": "https://github.com/google/jsonnet/issues/17#issuecomment-56136521", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/17", "id": 56136521, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-19T05:25:07Z", "updated_at": "2014-09-19T05:25:07Z", "author_association": "MEMBER", "body": "Ideally we would use libreadline, but would need an #ifdef for windows, and I'm not sure whether it'd work out-of-the-box on OSX.\n\nOn the plus side, this doesn't affect libjsonnet.so.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/56136521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/57722145", "html_url": "https://github.com/google/jsonnet/issues/17#issuecomment-57722145", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/17", "id": 57722145, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-02T22:52:10Z", "updated_at": "2014-10-02T22:52:10Z", "author_association": "MEMBER", "body": "Thinking more about this, the only thing I know how to provide is the ability to execute complete programs on each line, i.e. the only benefit over using jsonnet -i 'foo' is avoiding typing jsonnet -i ''\n\nImperative languages like Scala have an easier time because they have this notion of intermediate state.\n\nAnd in contrast with Haskell, Jsonnet does not have the notion of top-level declarations, it is not possible to parse just \"local x = 4\";\n\nSo given all that, do you still think it's worth it?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/57722145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/57801875", "html_url": "https://github.com/google/jsonnet/issues/17#issuecomment-57801875", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/17", "id": 57801875, "user": {"login": "mbrukman", "id": 4074659, "avatar_url": "https://avatars2.githubusercontent.com/u/4074659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrukman", "html_url": "https://github.com/mbrukman", "followers_url": "https://api.github.com/users/mbrukman/followers", "following_url": "https://api.github.com/users/mbrukman/following{/other_user}", "gists_url": "https://api.github.com/users/mbrukman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrukman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrukman/subscriptions", "organizations_url": "https://api.github.com/users/mbrukman/orgs", "repos_url": "https://api.github.com/users/mbrukman/repos", "events_url": "https://api.github.com/users/mbrukman/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrukman/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-03T14:17:21Z", "updated_at": "2014-10-03T14:17:21Z", "author_association": "MEMBER", "body": "Jsonnet REPL _should_ be more featureful than the standard language itself, because it would make it more useful for experimentation and learning the language. I believe both Scala and Haskell REPLs allow you to do more than what the languages themselves provide.\n\nI agree, however, that it's a non-trivial project. As a first step, providing the same functionality as `jsonnet -i` would still be useful because not having to retype that (or press \"up\" and erase the previous command) would be quite useful to get a handle on the syntax.\n\nLater on, allowing the addition of top-level bindings would be an additional useful feature; I suspect as soon as there's a REPL, this will be the first feature request. :-)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/57801875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/62776285", "html_url": "https://github.com/google/jsonnet/pull/22#issuecomment-62776285", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/22", "id": 62776285, "user": {"login": "teeler", "id": 45395, "avatar_url": "https://avatars3.githubusercontent.com/u/45395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teeler", "html_url": "https://github.com/teeler", "followers_url": "https://api.github.com/users/teeler/followers", "following_url": "https://api.github.com/users/teeler/following{/other_user}", "gists_url": "https://api.github.com/users/teeler/gists{/gist_id}", "starred_url": "https://api.github.com/users/teeler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teeler/subscriptions", "organizations_url": "https://api.github.com/users/teeler/orgs", "repos_url": "https://api.github.com/users/teeler/repos", "events_url": "https://api.github.com/users/teeler/events{/privacy}", "received_events_url": "https://api.github.com/users/teeler/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-12T19:17:49Z", "updated_at": "2014-11-12T19:17:49Z", "author_association": "NONE", "body": "Oh i did break it..I thought this was already failing, looking.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/62776285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/62846691", "html_url": "https://github.com/google/jsonnet/pull/22#issuecomment-62846691", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/22", "id": 62846691, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-13T06:14:45Z", "updated_at": "2014-11-13T06:14:45Z", "author_association": "MEMBER", "body": "It looks like this is still failing, on gcc because of parser.cpp:621:18: error: expected identifier before \u2018[\u2019 token\n\nand on clang because of \n\nparser.cpp:621:19: error: clang::fallthrough attribute is only allowed on empty\n      statements\n                [[clang::fallthrough]]\n                  ^\nparser.cpp:621:39: note: did you forget ';'?\n                [[clang::fallthrough]]\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/62846691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/63310910", "html_url": "https://github.com/google/jsonnet/pull/22#issuecomment-63310910", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/22", "id": 63310910, "user": {"login": "teeler", "id": 45395, "avatar_url": "https://avatars3.githubusercontent.com/u/45395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teeler", "html_url": "https://github.com/teeler", "followers_url": "https://api.github.com/users/teeler/followers", "following_url": "https://api.github.com/users/teeler/following{/other_user}", "gists_url": "https://api.github.com/users/teeler/gists{/gist_id}", "starred_url": "https://api.github.com/users/teeler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teeler/subscriptions", "organizations_url": "https://api.github.com/users/teeler/orgs", "repos_url": "https://api.github.com/users/teeler/repos", "events_url": "https://api.github.com/users/teeler/events{/privacy}", "received_events_url": "https://api.github.com/users/teeler/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-17T14:23:14Z", "updated_at": "2014-11-17T14:23:14Z", "author_association": "NONE", "body": "Closing this for now until I can find a better way.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/63310910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/64052921", "html_url": "https://github.com/google/jsonnet/issues/26#issuecomment-64052921", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/26", "id": 64052921, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-21T23:12:49Z", "updated_at": "2014-11-21T23:12:49Z", "author_association": "MEMBER", "body": "Cool!  Did you change any of the code or is it just directory structure & build files?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/64052921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/64066711", "html_url": "https://github.com/google/jsonnet/issues/26#issuecomment-64066711", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/26", "id": 64066711, "user": {"login": "tyler-elric", "id": 2780202, "avatar_url": "https://avatars2.githubusercontent.com/u/2780202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tyler-elric", "html_url": "https://github.com/tyler-elric", "followers_url": "https://api.github.com/users/tyler-elric/followers", "following_url": "https://api.github.com/users/tyler-elric/following{/other_user}", "gists_url": "https://api.github.com/users/tyler-elric/gists{/gist_id}", "starred_url": "https://api.github.com/users/tyler-elric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tyler-elric/subscriptions", "organizations_url": "https://api.github.com/users/tyler-elric/orgs", "repos_url": "https://api.github.com/users/tyler-elric/repos", "events_url": "https://api.github.com/users/tyler-elric/events{/privacy}", "received_events_url": "https://api.github.com/users/tyler-elric/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-22T03:23:43Z", "updated_at": "2014-11-22T03:23:43Z", "author_association": "NONE", "body": "If I remember correctly, the only source file I changed was _jsonnet.c which I changed from 2.x compatibility to 3.x compatibility ( rather than using #defines for both ).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/64066711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/67575024", "html_url": "https://github.com/google/jsonnet/pull/22#issuecomment-67575024", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/22", "id": 67575024, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T23:23:58Z", "updated_at": "2014-12-18T23:23:58Z", "author_association": "MEMBER", "body": "This is all now in trunk.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/67575024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/73459943", "html_url": "https://github.com/google/jsonnet/issues/18#issuecomment-73459943", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/18", "id": 73459943, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-02-09T05:38:45Z", "updated_at": "2015-02-09T05:38:45Z", "author_association": "MEMBER", "body": "Fixed by prior referenced commit\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/73459943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76598244", "html_url": "https://github.com/google/jsonnet/pull/36#issuecomment-76598244", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/36", "id": 76598244, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-01T14:11:17Z", "updated_at": "2015-03-01T14:11:17Z", "author_association": "MEMBER", "body": "Those are doxygen constructs, although I've never actually run it through doxygen.  There are some more in state.h as well.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76598244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76598300", "html_url": "https://github.com/google/jsonnet/pull/36#issuecomment-76598300", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/36", "id": 76598300, "user": {"login": "loverszhaokai", "id": 2187242, "avatar_url": "https://avatars2.githubusercontent.com/u/2187242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loverszhaokai", "html_url": "https://github.com/loverszhaokai", "followers_url": "https://api.github.com/users/loverszhaokai/followers", "following_url": "https://api.github.com/users/loverszhaokai/following{/other_user}", "gists_url": "https://api.github.com/users/loverszhaokai/gists{/gist_id}", "starred_url": "https://api.github.com/users/loverszhaokai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loverszhaokai/subscriptions", "organizations_url": "https://api.github.com/users/loverszhaokai/orgs", "repos_url": "https://api.github.com/users/loverszhaokai/repos", "events_url": "https://api.github.com/users/loverszhaokai/events{/privacy}", "received_events_url": "https://api.github.com/users/loverszhaokai/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-01T14:12:25Z", "updated_at": "2015-03-01T14:12:25Z", "author_association": "CONTRIBUTOR", "body": "Get it.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76598300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76598987", "html_url": "https://github.com/google/jsonnet/pull/35#issuecomment-76598987", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/35", "id": 76598987, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-01T14:28:04Z", "updated_at": "2015-03-01T14:28:04Z", "author_association": "MEMBER", "body": "Oh, I almost forgot, can I ask you to retroactively sign either the individual or corporate (as appropriate) contributor license agreements http://google.github.io/jsonnet/doc/contributing.html\n\nthanks\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76598987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76599260", "html_url": "https://github.com/google/jsonnet/pull/35#issuecomment-76599260", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/35", "id": 76599260, "user": {"login": "loverszhaokai", "id": 2187242, "avatar_url": "https://avatars2.githubusercontent.com/u/2187242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loverszhaokai", "html_url": "https://github.com/loverszhaokai", "followers_url": "https://api.github.com/users/loverszhaokai/followers", "following_url": "https://api.github.com/users/loverszhaokai/following{/other_user}", "gists_url": "https://api.github.com/users/loverszhaokai/gists{/gist_id}", "starred_url": "https://api.github.com/users/loverszhaokai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loverszhaokai/subscriptions", "organizations_url": "https://api.github.com/users/loverszhaokai/orgs", "repos_url": "https://api.github.com/users/loverszhaokai/repos", "events_url": "https://api.github.com/users/loverszhaokai/events{/privacy}", "received_events_url": "https://api.github.com/users/loverszhaokai/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-01T14:34:30Z", "updated_at": "2015-03-01T14:34:30Z", "author_association": "CONTRIBUTOR", "body": "Hi sparkprime, I already signed \"Google Individual Contributor License Agreement\".\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76599260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76600702", "html_url": "https://github.com/google/jsonnet/pull/35#issuecomment-76600702", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/35", "id": 76600702, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-01T15:09:43Z", "updated_at": "2015-03-01T15:09:43Z", "author_association": "MEMBER", "body": "Perfect, thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76600702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76600913", "html_url": "https://github.com/google/jsonnet/pull/37#issuecomment-76600913", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/37", "id": 76600913, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-01T15:15:26Z", "updated_at": "2015-03-01T15:15:26Z", "author_association": "MEMBER", "body": "So the current documented behavior is for this case is the filename defaults to stdin.  That may not be particularly useful but it is documented as doing that :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76600913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76601005", "html_url": "https://github.com/google/jsonnet/pull/37#issuecomment-76601005", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/37", "id": 76601005, "user": {"login": "loverszhaokai", "id": 2187242, "avatar_url": "https://avatars2.githubusercontent.com/u/2187242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loverszhaokai", "html_url": "https://github.com/loverszhaokai", "followers_url": "https://api.github.com/users/loverszhaokai/followers", "following_url": "https://api.github.com/users/loverszhaokai/following{/other_user}", "gists_url": "https://api.github.com/users/loverszhaokai/gists{/gist_id}", "starred_url": "https://api.github.com/users/loverszhaokai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loverszhaokai/subscriptions", "organizations_url": "https://api.github.com/users/loverszhaokai/orgs", "repos_url": "https://api.github.com/users/loverszhaokai/repos", "events_url": "https://api.github.com/users/loverszhaokai/events{/privacy}", "received_events_url": "https://api.github.com/users/loverszhaokai/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-01T15:17:55Z", "updated_at": "2015-03-01T15:17:55Z", "author_association": "CONTRIBUTOR", "body": "OK, it maybe better handled in the future.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76601005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76603910", "html_url": "https://github.com/google/jsonnet/pull/37#issuecomment-76603910", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/37", "id": 76603910, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-01T15:59:31Z", "updated_at": "2015-03-01T15:59:31Z", "author_association": "MEMBER", "body": "https://github.com/google/jsonnet/commit/41c11d09a7d7c7b4c07a144946ab3672494721dd\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76603910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76762232", "html_url": "https://github.com/google/jsonnet/issues/39#issuecomment-76762232", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/39", "id": 76762232, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-02T17:53:21Z", "updated_at": "2015-03-02T17:53:21Z", "author_association": "MEMBER", "body": "It'd be interesting to see how much code coverage is obtained by running the test suite.  There are definitely some holes, especially with different ways of using the C/Python APIs.\n\nI think since the test suite is pretty fast, it is ok as long as there is good coverage.  However, there are probably some things that are hard to get good coverage for, and unit tests would be good for that.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76762232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76849421", "html_url": "https://github.com/google/jsonnet/issues/39#issuecomment-76849421", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/39", "id": 76849421, "user": {"login": "loverszhaokai", "id": 2187242, "avatar_url": "https://avatars2.githubusercontent.com/u/2187242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loverszhaokai", "html_url": "https://github.com/loverszhaokai", "followers_url": "https://api.github.com/users/loverszhaokai/followers", "following_url": "https://api.github.com/users/loverszhaokai/following{/other_user}", "gists_url": "https://api.github.com/users/loverszhaokai/gists{/gist_id}", "starred_url": "https://api.github.com/users/loverszhaokai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loverszhaokai/subscriptions", "organizations_url": "https://api.github.com/users/loverszhaokai/orgs", "repos_url": "https://api.github.com/users/loverszhaokai/repos", "events_url": "https://api.github.com/users/loverszhaokai/events{/privacy}", "received_events_url": "https://api.github.com/users/loverszhaokai/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-02T23:21:37Z", "updated_at": "2015-03-02T23:21:37Z", "author_association": "CONTRIBUTOR", "body": "Yes! Currently the test suites is the system test. So unit test is also needed by now.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/76849421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78360382", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-78360382", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 78360382, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-11T20:11:21Z", "updated_at": "2015-03-11T20:11:21Z", "author_association": "MEMBER", "body": "Being able to install Jsonnet's python bindings with just pip install jsonnet sounds awesome.\n\nCan we set it up so only stable releases get uploaded?  I'll cut a new one right now, it's been a while.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78360382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78395797", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-78395797", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 78395797, "user": {"login": "PaulFurtado", "id": 704936, "avatar_url": "https://avatars1.githubusercontent.com/u/704936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulFurtado", "html_url": "https://github.com/PaulFurtado", "followers_url": "https://api.github.com/users/PaulFurtado/followers", "following_url": "https://api.github.com/users/PaulFurtado/following{/other_user}", "gists_url": "https://api.github.com/users/PaulFurtado/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulFurtado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulFurtado/subscriptions", "organizations_url": "https://api.github.com/users/PaulFurtado/orgs", "repos_url": "https://api.github.com/users/PaulFurtado/repos", "events_url": "https://api.github.com/users/PaulFurtado/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulFurtado/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-11T23:32:14Z", "updated_at": "2015-03-11T23:32:14Z", "author_association": "CONTRIBUTOR", "body": "This setup.py is able to build fine, however my company's internal pypi server was rejecting it (returning 500 errors without an error message). I'm going to take a look and see if it's the setup.py's fault or the server's fault before we merge this.\n\nAs for telling travis to only upload stable builds to pypi, travis has an option for uploading to pypi for only tagged commits instead of all commits (however, this is still an issue if you tag commits which are unstable). I think their intention is that you would have a \"stable\" branch which only has stable tags on it. Note that it's also not all that inconvenient to upload to pypi manually - if you have a .pypirc, it's as easy as running one command.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78395797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78427046", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-78427046", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 78427046, "user": {"login": "PaulFurtado", "id": 704936, "avatar_url": "https://avatars1.githubusercontent.com/u/704936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulFurtado", "html_url": "https://github.com/PaulFurtado", "followers_url": "https://api.github.com/users/PaulFurtado/followers", "following_url": "https://api.github.com/users/PaulFurtado/following{/other_user}", "gists_url": "https://api.github.com/users/PaulFurtado/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulFurtado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulFurtado/subscriptions", "organizations_url": "https://api.github.com/users/PaulFurtado/orgs", "repos_url": "https://api.github.com/users/PaulFurtado/repos", "events_url": "https://api.github.com/users/PaulFurtado/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulFurtado/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-12T05:42:22Z", "updated_at": "2015-03-12T05:42:22Z", "author_association": "CONTRIBUTOR", "body": "Just updated the PR with fixes that allow it to actually work with PyPi:\n- The package needed to be called \"jsonnet\" instead of \"_jsonnet\". That means you install it with \"pip install jsonnet\" but you still use it via \"import _jsonnet\"\n- Added a MANIFEST.in which puts the entire directory into the distribution - previously distutiles was only adding the files in JSONNET_SOURCES\n\nI also added you as the author.\nI tested this against a local pypi-server with all of the defaults.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78427046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78429601", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-78429601", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 78429601, "user": {"login": "PaulFurtado", "id": 704936, "avatar_url": "https://avatars1.githubusercontent.com/u/704936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulFurtado", "html_url": "https://github.com/PaulFurtado", "followers_url": "https://api.github.com/users/PaulFurtado/followers", "following_url": "https://api.github.com/users/PaulFurtado/following{/other_user}", "gists_url": "https://api.github.com/users/PaulFurtado/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulFurtado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulFurtado/subscriptions", "organizations_url": "https://api.github.com/users/PaulFurtado/orgs", "repos_url": "https://api.github.com/users/PaulFurtado/repos", "events_url": "https://api.github.com/users/PaulFurtado/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulFurtado/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-12T06:19:21Z", "updated_at": "2015-03-12T06:19:21Z", "author_association": "CONTRIBUTOR", "body": "Also put a test version of it called \"paul-jsonnet\" into pypi to test that it works with the official pypi. You can try it out with: \n\n```\npip install paul-jsonnet\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78429601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78706447", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-78706447", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 78706447, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-13T00:07:21Z", "updated_at": "2015-03-13T00:07:21Z", "author_association": "MEMBER", "body": "It worked for me, but I had to use --pre.  Presumably this is because I appended -beta to all the versions.  I did that because I misunderstood semantic versioning at the time :).  If I do a new release with just v0.8.1 do you think it would fix it?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/78706447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/88662133", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-88662133", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 88662133, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-01T23:20:53Z", "updated_at": "2015-04-01T23:20:53Z", "author_association": "MEMBER", "body": "I'd love that.  How hard is it?  Is it just a case of identifying some keywords and regular expressions?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/88662133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95375247", "html_url": "https://github.com/google/jsonnet/issues/45#issuecomment-95375247", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/45", "id": 95375247, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-23T00:33:03Z", "updated_at": "2015-04-23T00:33:03Z", "author_association": "MEMBER", "body": "This is probably not that hard to implement as a syntax sugar.  But the benefit of string interpolation is somewhat watered down by the existing support for Python string formatting:\n\n```\nlocal total = 37; \nThe total is %g (%02g with tax)\" % [total, total*1.05]\n```\n\nand the named version:\n\n```\nlocal o = {total: 37, withTax: 1.05*self.total};\n\"The total is %(total)g (%(withTax)02g with tax)\" % o\n```\n\nwhich both yield:\n\n\"The total is 37 (38.85 with tax)\"\n\nWith your proposal, you would also be able to do the somewhat similar-looking:\n\n```\nlocal total = 37;\n`The total is ${total} (${\"%02g\" % (total*1.05)} with tax)`\n```\n\nWhich would be desugared to\n\n```\nlocal total = 37;\n(\"The total is \" + total + \" (\" + \"%02g\" % (total*1.05) + \" with tax)\")\n```\n\nWith that in mind, how badly do you still want it? :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95375247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95381637", "html_url": "https://github.com/google/jsonnet/issues/47#issuecomment-95381637", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/47", "id": 95381637, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-23T01:23:32Z", "updated_at": "2015-04-23T01:23:32Z", "author_association": "MEMBER", "body": "I think you need #2 to get the behavior you're looking for?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95381637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95397593", "html_url": "https://github.com/google/jsonnet/issues/47#issuecomment-95397593", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/47", "id": 95397593, "user": {"login": "dhaffey", "id": 145389, "avatar_url": "https://avatars0.githubusercontent.com/u/145389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhaffey", "html_url": "https://github.com/dhaffey", "followers_url": "https://api.github.com/users/dhaffey/followers", "following_url": "https://api.github.com/users/dhaffey/following{/other_user}", "gists_url": "https://api.github.com/users/dhaffey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhaffey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhaffey/subscriptions", "organizations_url": "https://api.github.com/users/dhaffey/orgs", "repos_url": "https://api.github.com/users/dhaffey/repos", "events_url": "https://api.github.com/users/dhaffey/events{/privacy}", "received_events_url": "https://api.github.com/users/dhaffey/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-23T02:36:39Z", "updated_at": "2015-04-23T02:36:39Z", "author_association": "NONE", "body": "The spec mentioned \"floating-point arithmetic\", so I'd already assumed IEEE doubles. It's more an issue of consistently handling special float values and avoiding invalid JSON output (eg, \"1 / 0\" sensibly produces an error rather than manifesting \"inf\").\n\nSwitching to arbitrary-precision rationals would certainly do the trick. Though std.sin and friends may get a little trickier to implement :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95397593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95401256", "html_url": "https://github.com/google/jsonnet/issues/47#issuecomment-95401256", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/47", "id": 95401256, "user": {"login": "dhaffey", "id": 145389, "avatar_url": "https://avatars0.githubusercontent.com/u/145389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhaffey", "html_url": "https://github.com/dhaffey", "followers_url": "https://api.github.com/users/dhaffey/followers", "following_url": "https://api.github.com/users/dhaffey/following{/other_user}", "gists_url": "https://api.github.com/users/dhaffey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhaffey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhaffey/subscriptions", "organizations_url": "https://api.github.com/users/dhaffey/orgs", "repos_url": "https://api.github.com/users/dhaffey/repos", "events_url": "https://api.github.com/users/dhaffey/events{/privacy}", "received_events_url": "https://api.github.com/users/dhaffey/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-23T02:50:30Z", "updated_at": "2015-04-23T02:50:30Z", "author_association": "NONE", "body": "On a related note:\n\n```\n$ jsonnet -e 1e309\ninf\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95401256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95416651", "html_url": "https://github.com/google/jsonnet/issues/47#issuecomment-95416651", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/47", "id": 95416651, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-23T03:48:31Z", "updated_at": "2015-04-23T03:48:31Z", "author_association": "MEMBER", "body": "Ah yes, I had forgotten that JSON does not allow these values.  So the question is, should they generate errors whenever they appear as immediate values (fail fast) or should there only be an error if they reach manifestation time.  It seems to me that the latter behavior will be quite annoying.  The NaN / inf will propagate through values and it will be hard to know where it originally came from.  I can't think of any compelling use cases for allowing NaN and inf in a config language.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95416651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95684176", "html_url": "https://github.com/google/jsonnet/issues/47#issuecomment-95684176", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/47", "id": 95684176, "user": {"login": "dhaffey", "id": 145389, "avatar_url": "https://avatars0.githubusercontent.com/u/145389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhaffey", "html_url": "https://github.com/dhaffey", "followers_url": "https://api.github.com/users/dhaffey/followers", "following_url": "https://api.github.com/users/dhaffey/following{/other_user}", "gists_url": "https://api.github.com/users/dhaffey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhaffey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhaffey/subscriptions", "organizations_url": "https://api.github.com/users/dhaffey/orgs", "repos_url": "https://api.github.com/users/dhaffey/repos", "events_url": "https://api.github.com/users/dhaffey/events{/privacy}", "received_events_url": "https://api.github.com/users/dhaffey/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-23T18:52:14Z", "updated_at": "2015-04-23T18:52:14Z", "author_association": "NONE", "body": "+1 for failing fast. NaN is an atrocity, and the best argument I can think of for allowing an intermediate inf is that it's occasionally convenient as an initial value in algorithms like computing a minimum. Not very compelling.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95684176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95709870", "html_url": "https://github.com/google/jsonnet/issues/45#issuecomment-95709870", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/45", "id": 95709870, "user": {"login": "intervalia", "id": 1587937, "avatar_url": "https://avatars3.githubusercontent.com/u/1587937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intervalia", "html_url": "https://github.com/intervalia", "followers_url": "https://api.github.com/users/intervalia/followers", "following_url": "https://api.github.com/users/intervalia/following{/other_user}", "gists_url": "https://api.github.com/users/intervalia/gists{/gist_id}", "starred_url": "https://api.github.com/users/intervalia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intervalia/subscriptions", "organizations_url": "https://api.github.com/users/intervalia/orgs", "repos_url": "https://api.github.com/users/intervalia/repos", "events_url": "https://api.github.com/users/intervalia/events{/privacy}", "received_events_url": "https://api.github.com/users/intervalia/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-23T20:24:14Z", "updated_at": "2015-04-23T20:24:14Z", "author_association": "NONE", "body": "The main reason I would like to see the back-tick is because I sometimes I move code from a JS file into a JSON file and I hate that I need to undo the ES6 coolness.\n\nIt would just be nice to have but not needed.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/95709870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/96479330", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-96479330", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 96479330, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-27T02:48:02Z", "updated_at": "2015-04-27T02:48:02Z", "author_association": "MEMBER", "body": "I just added a syntax file that works for atom.  I understand that is the first step on this process.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/96479330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97246513", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-97246513", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 97246513, "user": {"login": "dgarstang", "id": 2925359, "avatar_url": "https://avatars1.githubusercontent.com/u/2925359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgarstang", "html_url": "https://github.com/dgarstang", "followers_url": "https://api.github.com/users/dgarstang/followers", "following_url": "https://api.github.com/users/dgarstang/following{/other_user}", "gists_url": "https://api.github.com/users/dgarstang/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgarstang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgarstang/subscriptions", "organizations_url": "https://api.github.com/users/dgarstang/orgs", "repos_url": "https://api.github.com/users/dgarstang/repos", "events_url": "https://api.github.com/users/dgarstang/events{/privacy}", "received_events_url": "https://api.github.com/users/dgarstang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-28T22:39:15Z", "updated_at": "2015-04-28T22:39:15Z", "author_association": "NONE", "body": "Doesn't work for me, on a Mac.\n\n```\n(venv2)[chef=prod] Douglass-MacBook-Pro:git doug$ pip install paul-jsonnet --pre\nDownloading/unpacking paul-jsonnet\n  Downloading paul-jsonnet-v0.6.0-beta.tar.gz (1.6MB): 1.6MB downloaded\n  Running setup.py (path:/private/var/folders/qn/sdwwlm7s4zq7mg3535279h240000gn/T/pip_build_doug/paul-jsonnet/setup.py) egg_info for package paul-jsonnet\n\nInstalling collected packages: paul-jsonnet\n  Running setup.py install for paul-jsonnet\n    make: `std.jsonnet.h' is up to date.\n    building '_jsonnet' extension\n    cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c libjsonnet.cpp -o build/temp.macosx-10.9-intel-2.7/libjsonnet.o -std=c++0x\n    cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c lexer.cpp -o build/temp.macosx-10.9-intel-2.7/lexer.o -std=c++0x\n    cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c parser.cpp -o build/temp.macosx-10.9-intel-2.7/parser.o -std=c++0x\n    cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c static_analysis.cpp -o build/temp.macosx-10.9-intel-2.7/static_analysis.o -std=c++0x\n    cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c vm.cpp -o build/temp.macosx-10.9-intel-2.7/vm.o -std=c++0x\n    vm.cpp:203:20: warning: implicit conversion loses integer precision: 'size_type' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\n                return stack.size();\n                ~~~~~~ ^~~~~~~~~~~~\n    vm.cpp:209:36: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]\n                for (int i=stack.size()-1 ; i>=0 ; --i) {\n                         ~ ~~~~~~~~~~~~^~\n    vm.cpp:301:36: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]\n                for (int i=stack.size()-1 ; i>=0 ; --i) {\n                         ~ ~~~~~~~~~~~~^~\n    vm.cpp:322:36: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]\n                for (int i=stack.size()-1 ; i>=0 ; --i) {\n                         ~ ~~~~~~~~~~~~^~\n    vm.cpp:360:30: warning: unused variable 'bind' [-Wunused-variable]\n                for (const auto &bind : up_values) {\n                                 ^\n    vm.cpp:370:37: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]\n                for (int i=stack.size() - 1 ; i>=0 ; --i) {\n                         ~ ~~~~~~~~~~~~~^~~\n    vm.cpp:1419:54: warning: implicit conversion loses integer precision: 'const unsigned long' to 'unsigned int' [-Wshorten-64-to-32]\n                                unsigned builtin = func->builtin;\n                                         ~~~~~~~   ~~~~~~^~~~~~~\n    7 warnings generated.\n    vm.cpp:360:30: warning: unused variable 'bind' [-Wunused-variable]\n                for (const auto &bind : up_values) {\n                                 ^\n    1 warning generated.\n    cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c _jsonnet.c -o build/temp.macosx-10.9-intel-2.7/_jsonnet.o -std=c++0x\n    error: invalid argument '-std=c++0x' not allowed with 'C/ObjC'\n    error: command 'cc' failed with exit status 1\n    Complete output from command /usr/bin/python -c \"import setuptools, tokenize;__file__='/private/var/folders/qn/sdwwlm7s4zq7mg3535279h240000gn/T/pip_build_doug/paul-jsonnet/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/qn/sdwwlm7s4zq7mg3535279h240000gn/T/pip-Egrdcg-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n\nrunning build\n\nmake: `std.jsonnet.h' is up to date.\n\nrunning build_ext\n\nbuilding '_jsonnet' extension\n\ncreating build\n\ncreating build/temp.macosx-10.9-intel-2.7\n\ncc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c libjsonnet.cpp -o build/temp.macosx-10.9-intel-2.7/libjsonnet.o -std=c++0x\n\ncc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c lexer.cpp -o build/temp.macosx-10.9-intel-2.7/lexer.o -std=c++0x\n\ncc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c parser.cpp -o build/temp.macosx-10.9-intel-2.7/parser.o -std=c++0x\n\ncc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c static_analysis.cpp -o build/temp.macosx-10.9-intel-2.7/static_analysis.o -std=c++0x\n\ncc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c vm.cpp -o build/temp.macosx-10.9-intel-2.7/vm.o -std=c++0x\n\nvm.cpp:203:20: warning: implicit conversion loses integer precision: 'size_type' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\n\n            return stack.size();\n\n            ~~~~~~ ^~~~~~~~~~~~\n\nvm.cpp:209:36: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]\n\n            for (int i=stack.size()-1 ; i>=0 ; --i) {\n\n                     ~ ~~~~~~~~~~~~^~\n\nvm.cpp:301:36: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]\n\n            for (int i=stack.size()-1 ; i>=0 ; --i) {\n\n                     ~ ~~~~~~~~~~~~^~\n\nvm.cpp:322:36: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]\n\n            for (int i=stack.size()-1 ; i>=0 ; --i) {\n\n                     ~ ~~~~~~~~~~~~^~\n\nvm.cpp:360:30: warning: unused variable 'bind' [-Wunused-variable]\n\n            for (const auto &bind : up_values) {\n\n                             ^\n\nvm.cpp:370:37: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]\n\n            for (int i=stack.size() - 1 ; i>=0 ; --i) {\n\n                     ~ ~~~~~~~~~~~~~^~~\n\nvm.cpp:1419:54: warning: implicit conversion loses integer precision: 'const unsigned long' to 'unsigned int' [-Wshorten-64-to-32]\n\n                            unsigned builtin = func->builtin;\n\n                                     ~~~~~~~   ~~~~~~^~~~~~~\n\n7 warnings generated.\n\nvm.cpp:360:30: warning: unused variable 'bind' [-Wunused-variable]\n\n            for (const auto &bind : up_values) {\n\n                             ^\n\n1 warning generated.\n\ncc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c _jsonnet.c -o build/temp.macosx-10.9-intel-2.7/_jsonnet.o -std=c++0x\n\nerror: invalid argument '-std=c++0x' not allowed with 'C/ObjC'\n\nerror: command 'cc' failed with exit status 1\n\n----------------------------------------\nCleaning up...\nCommand /usr/bin/python -c \"import setuptools, tokenize;__file__='/private/var/folders/qn/sdwwlm7s4zq7mg3535279h240000gn/T/pip_build_doug/paul-jsonnet/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/qn/sdwwlm7s4zq7mg3535279h240000gn/T/pip-Egrdcg-record/install-record.txt --single-version-externally-managed --compile failed with error code 1 in /private/var/folders/qn/sdwwlm7s4zq7mg3535279h240000gn/T/pip_build_doug/paul-jsonnet\nStoring debug log for failure in /var/folders/qn/sdwwlm7s4zq7mg3535279h240000gn/T/tmpPwS2Lf\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97246513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97540893", "html_url": "https://github.com/google/jsonnet/issues/48#issuecomment-97540893", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/48", "id": 97540893, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-29T18:58:15Z", "updated_at": "2015-04-29T18:58:15Z", "author_association": "MEMBER", "body": "Thanks for the heads up.  Jsonnet differs in being a full programming language, and therefore has a lot more features beyond comments.  That is why it needs more code :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97540893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97557481", "html_url": "https://github.com/google/jsonnet/pull/41#issuecomment-97557481", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/41", "id": 97557481, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-29T19:43:24Z", "updated_at": "2015-04-29T19:43:24Z", "author_association": "MEMBER", "body": "@loverszhaokai Hi, I've just remembered I need you to sign the contributor license agreement, either https://cla.developers.google.com/about/google-individual or https://cla.developers.google.com/about/google-corporate -- it's a legal requirement from Google (common for big companies working in the open source community).  I'll have to retract your changes if I cannot get your signature.  If you've already signed it, please let me know.  Sorry for the trouble!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97557481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97557637", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-97557637", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 97557637, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-29T19:44:15Z", "updated_at": "2015-04-29T19:44:15Z", "author_association": "MEMBER", "body": "@PaulFurtado Sorry I forgot about this.  I'm going to merge, but first I need you to sign the contributor license agreement, either https://cla.developers.google.com/about/google-individual or https://cla.developers.google.com/about/google-corporate -- it's a legal requirement from Google (common for big companies working in the open source community).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97557637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97558058", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-97558058", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 97558058, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-29T19:46:31Z", "updated_at": "2015-04-29T19:46:31Z", "author_association": "MEMBER", "body": "@dgarstang Thanks for the report -- I'll try this out on latest HEAD and see if any issue remains.  From a quick glance at the Makefile I can't see -std=c++0x being passed to $CC so I think it will work now.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97558058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97610782", "html_url": "https://github.com/google/jsonnet/pull/41#issuecomment-97610782", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/41", "id": 97610782, "user": {"login": "loverszhaokai", "id": 2187242, "avatar_url": "https://avatars2.githubusercontent.com/u/2187242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loverszhaokai", "html_url": "https://github.com/loverszhaokai", "followers_url": "https://api.github.com/users/loverszhaokai/followers", "following_url": "https://api.github.com/users/loverszhaokai/following{/other_user}", "gists_url": "https://api.github.com/users/loverszhaokai/gists{/gist_id}", "starred_url": "https://api.github.com/users/loverszhaokai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loverszhaokai/subscriptions", "organizations_url": "https://api.github.com/users/loverszhaokai/orgs", "repos_url": "https://api.github.com/users/loverszhaokai/repos", "events_url": "https://api.github.com/users/loverszhaokai/events{/privacy}", "received_events_url": "https://api.github.com/users/loverszhaokai/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-29T23:07:00Z", "updated_at": "2015-04-29T23:07:00Z", "author_association": "CONTRIBUTOR", "body": "@sparkprime \n\nI have signed.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97610782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97629548", "html_url": "https://github.com/google/jsonnet/issues/48#issuecomment-97629548", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/48", "id": 97629548, "user": {"login": "spmbt", "id": 905413, "avatar_url": "https://avatars3.githubusercontent.com/u/905413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spmbt", "html_url": "https://github.com/spmbt", "followers_url": "https://api.github.com/users/spmbt/followers", "following_url": "https://api.github.com/users/spmbt/following{/other_user}", "gists_url": "https://api.github.com/users/spmbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/spmbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spmbt/subscriptions", "organizations_url": "https://api.github.com/users/spmbt/orgs", "repos_url": "https://api.github.com/users/spmbt/repos", "events_url": "https://api.github.com/users/spmbt/events{/privacy}", "received_events_url": "https://api.github.com/users/spmbt/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-30T01:38:14Z", "updated_at": "2015-04-30T01:38:14Z", "author_association": "NONE", "body": "Of course, we are understand it. But one more language and technology is not always is good :) For example, Yaml has a lot of rules, and this leads to the fact that many developers use  subset of features. JSON: we had 1 simple technology. Jsonnet - 1 complex and 1 preprocessor language for static calculations.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97629548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97664888", "html_url": "https://github.com/google/jsonnet/pull/41#issuecomment-97664888", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/41", "id": 97664888, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-30T05:18:40Z", "updated_at": "2015-04-30T05:18:40Z", "author_association": "MEMBER", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/97664888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/98063058", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-98063058", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 98063058, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-01T07:20:35Z", "updated_at": "2015-05-01T07:20:35Z", "author_association": "MEMBER", "body": "FYI apparently GitHub's policy is that there needs to be a few hundred samples before they would be willing to accept a patch to Linguist. [Bazel's](https://github.com/google/bazel/issues/72) [pull request](https://github.com/github/linguist/pull/2348) was unfortunately rejected for the time being for this reason.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/98063058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/98377306", "html_url": "https://github.com/google/jsonnet/issues/49#issuecomment-98377306", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/49", "id": 98377306, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-02T16:43:40Z", "updated_at": "2015-05-02T16:43:40Z", "author_association": "MEMBER", "body": "Good catch.  I'm adding explicit checks for importing the empty strings and directories.  But you can still import \".\" which I can't detect is a directory in standard C++.  So I'll just turn the IO error into a Jsonnet runtime error:\n\n$ jsonnet -e 'import \"\"'\nRUNTIME ERROR: Couldn't open import \"\": The empty string is not a valid filename\n        <cmdline>:1:1-9\n$ jsonnet -e 'import \".\"'\nRUNTIME ERROR: Couldn't open import \".\": basic_filebuf::underflow error reading the file\n        <cmdline>:1:1-10\n$ jsonnet -e 'import \"/\"'\nRUNTIME ERROR: Couldn't open import \"/\": Attempted to import a directory\n        <cmdline>:1:1-10\n\nHopefully that's good enough.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/98377306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99905676", "html_url": "https://github.com/google/jsonnet/issues/50#issuecomment-99905676", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/50", "id": 99905676, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T15:15:52Z", "updated_at": "2015-05-07T15:15:52Z", "author_association": "MEMBER", "body": "So those files are not part of the API -- the only thing you need to include is lbijsonnet.h which currently has no header guards on account of only containing declarations that can be re-declared without errors.  If I need to add header guards I'll use LIBJSONNET_H.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99905676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99908519", "html_url": "https://github.com/google/jsonnet/issues/52#issuecomment-99908519", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/52", "id": 99908519, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T15:23:30Z", "updated_at": "2015-05-07T15:23:30Z", "author_association": "MEMBER", "body": "That sounds reasonable.  Given libjsonnet.so is a C wrapper around C++, it should also catch all the std exceptions and give a catchall exception handler for anything else that might happen.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99908519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99915072", "html_url": "https://github.com/google/jsonnet/issues/50#issuecomment-99915072", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/50", "id": 99915072, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T15:41:00Z", "updated_at": "2015-05-07T15:41:00Z", "author_association": "MEMBER", "body": "I'll just add JSONNET_ to all the others though, it's not like it'll cost us anything.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99915072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99915159", "html_url": "https://github.com/google/jsonnet/issues/51#issuecomment-99915159", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/51", "id": 99915159, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T15:41:10Z", "updated_at": "2015-05-07T15:41:10Z", "author_association": "MEMBER", "body": "Yes that's needed.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99915159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99922260", "html_url": "https://github.com/google/jsonnet/issues/51#issuecomment-99922260", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/51", "id": 99922260, "user": {"login": "elfring", "id": 660477, "avatar_url": "https://avatars1.githubusercontent.com/u/660477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elfring", "html_url": "https://github.com/elfring", "followers_url": "https://api.github.com/users/elfring/followers", "following_url": "https://api.github.com/users/elfring/following{/other_user}", "gists_url": "https://api.github.com/users/elfring/gists{/gist_id}", "starred_url": "https://api.github.com/users/elfring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elfring/subscriptions", "organizations_url": "https://api.github.com/users/elfring/orgs", "repos_url": "https://api.github.com/users/elfring/repos", "events_url": "https://api.github.com/users/elfring/events{/privacy}", "received_events_url": "https://api.github.com/users/elfring/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T16:01:42Z", "updated_at": "2015-05-07T16:01:42Z", "author_association": "NONE", "body": "I suggest to avoid [ignorance of return values](https://cwe.mitre.org/data/definitions/252.html) a bit more.\n\nAre you interested to apply [aspect-oriented software development](http://aspectc.org/)?\nHow do you think about to encapsulate error detection and corresponding exception handling as [a reusable aspect](http://en.wikipedia.org/wiki/Aspect_%28computer_programming%29) in your software?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/99922260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100012915", "html_url": "https://github.com/google/jsonnet/issues/50#issuecomment-100012915", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/50", "id": 100012915, "user": {"login": "elfring", "id": 660477, "avatar_url": "https://avatars1.githubusercontent.com/u/660477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elfring", "html_url": "https://github.com/elfring", "followers_url": "https://api.github.com/users/elfring/followers", "following_url": "https://api.github.com/users/elfring/following{/other_user}", "gists_url": "https://api.github.com/users/elfring/gists{/gist_id}", "starred_url": "https://api.github.com/users/elfring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elfring/subscriptions", "organizations_url": "https://api.github.com/users/elfring/orgs", "repos_url": "https://api.github.com/users/elfring/repos", "events_url": "https://api.github.com/users/elfring/events{/privacy}", "received_events_url": "https://api.github.com/users/elfring/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T20:43:11Z", "updated_at": "2015-05-07T20:43:11Z", "author_association": "NONE", "body": "Thanks for [your improvement of include guards](https://github.com/google/jsonnet/commit/1269a2681b211d92135785026a1a6fcf2cafa2ca).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100012915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100036140", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-100036140", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 100036140, "user": {"login": "PaulFurtado", "id": 704936, "avatar_url": "https://avatars1.githubusercontent.com/u/704936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulFurtado", "html_url": "https://github.com/PaulFurtado", "followers_url": "https://api.github.com/users/PaulFurtado/followers", "following_url": "https://api.github.com/users/PaulFurtado/following{/other_user}", "gists_url": "https://api.github.com/users/PaulFurtado/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulFurtado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulFurtado/subscriptions", "organizations_url": "https://api.github.com/users/PaulFurtado/orgs", "repos_url": "https://api.github.com/users/PaulFurtado/repos", "events_url": "https://api.github.com/users/PaulFurtado/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulFurtado/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T22:16:25Z", "updated_at": "2015-05-07T22:16:25Z", "author_association": "CONTRIBUTOR", "body": "@sparkprime Sorry for the delay, I just submitted the CLA, thanks\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100036140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100037544", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-100037544", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 100037544, "user": {"login": "PaulFurtado", "id": 704936, "avatar_url": "https://avatars1.githubusercontent.com/u/704936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulFurtado", "html_url": "https://github.com/PaulFurtado", "followers_url": "https://api.github.com/users/PaulFurtado/followers", "following_url": "https://api.github.com/users/PaulFurtado/following{/other_user}", "gists_url": "https://api.github.com/users/PaulFurtado/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulFurtado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulFurtado/subscriptions", "organizations_url": "https://api.github.com/users/PaulFurtado/orgs", "repos_url": "https://api.github.com/users/PaulFurtado/repos", "events_url": "https://api.github.com/users/PaulFurtado/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulFurtado/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T22:24:57Z", "updated_at": "2015-05-07T22:24:57Z", "author_association": "CONTRIBUTOR", "body": "Yes, it fails to compile on OS X. My friend gave me his macbook for 20 minutes to debug it, but I couldn't figure out what compile flags I needed to make it work, even running `make _jsonnet.so` fails. I think the issue is that jsonnet links against python (which I believe is c99), but also uses c++11 and for some reason clang doesn't like mixing them. I think this issue is related: https://support.enthought.com/hc/en-us/articles/204469410-OS-X-GCC-Clang-and-Cython-in-10-9-Mavericks\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100037544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100045107", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-100045107", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 100045107, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-07T23:19:06Z", "updated_at": "2015-05-07T23:19:06Z", "author_association": "MEMBER", "body": "So I got my colleague to try make _jsonnet.so on his 10.9.5 mac and it worked OK.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100045107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100116711", "html_url": "https://github.com/google/jsonnet/issues/52#issuecomment-100116711", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/52", "id": 100116711, "user": {"login": "elfring", "id": 660477, "avatar_url": "https://avatars1.githubusercontent.com/u/660477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elfring", "html_url": "https://github.com/elfring", "followers_url": "https://api.github.com/users/elfring/followers", "following_url": "https://api.github.com/users/elfring/following{/other_user}", "gists_url": "https://api.github.com/users/elfring/gists{/gist_id}", "starred_url": "https://api.github.com/users/elfring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elfring/subscriptions", "organizations_url": "https://api.github.com/users/elfring/orgs", "repos_url": "https://api.github.com/users/elfring/repos", "events_url": "https://api.github.com/users/elfring/events{/privacy}", "received_events_url": "https://api.github.com/users/elfring/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-08T06:30:10Z", "updated_at": "2015-05-08T06:30:10Z", "author_association": "NONE", "body": "Thanks for [your source code improvement](https://github.com/google/jsonnet/commit/8b785cf5b4755b40a7326c837b2c4e42979224a0).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100116711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100116850", "html_url": "https://github.com/google/jsonnet/issues/51#issuecomment-100116850", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/51", "id": 100116850, "user": {"login": "elfring", "id": 660477, "avatar_url": "https://avatars1.githubusercontent.com/u/660477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elfring", "html_url": "https://github.com/elfring", "followers_url": "https://api.github.com/users/elfring/followers", "following_url": "https://api.github.com/users/elfring/following{/other_user}", "gists_url": "https://api.github.com/users/elfring/gists{/gist_id}", "starred_url": "https://api.github.com/users/elfring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elfring/subscriptions", "organizations_url": "https://api.github.com/users/elfring/orgs", "repos_url": "https://api.github.com/users/elfring/repos", "events_url": "https://api.github.com/users/elfring/events{/privacy}", "received_events_url": "https://api.github.com/users/elfring/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-08T06:31:46Z", "updated_at": "2015-05-08T06:31:46Z", "author_association": "NONE", "body": "Thanks for [your small source code improvement](https://github.com/google/jsonnet/commit/2b83ce57a10de7b7c302b9754d70cbf1206b97c6).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/100116850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/104555094", "html_url": "https://github.com/google/jsonnet/issues/53#issuecomment-104555094", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/53", "id": 104555094, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-05-22T07:50:32Z", "updated_at": "2015-05-22T07:50:32Z", "author_association": "MEMBER", "body": "It would be great to add a [Bazel](http://bazel.io) BUILD file as well.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/104555094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107667469", "html_url": "https://github.com/google/jsonnet/issues/58#issuecomment-107667469", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/58", "id": 107667469, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-01T18:44:11Z", "updated_at": "2015-06-01T18:44:11Z", "author_association": "MEMBER", "body": "Very cool.  I should maintain a list of these integrations on the website.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107667469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107667640", "html_url": "https://github.com/google/jsonnet/issues/58#issuecomment-107667640", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/58", "id": 107667640, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-01T18:44:49Z", "updated_at": "2015-06-01T18:44:49Z", "author_association": "MEMBER", "body": "By the way if you call it JsonNet as opposed to Jsonnet, people will be more likely to confuse it with JSON.NET which is a different project.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107667640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107672417", "html_url": "https://github.com/google/jsonnet/issues/58#issuecomment-107672417", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/58", "id": 107672417, "user": {"login": "Neeke", "id": 1913308, "avatar_url": "https://avatars1.githubusercontent.com/u/1913308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neeke", "html_url": "https://github.com/Neeke", "followers_url": "https://api.github.com/users/Neeke/followers", "following_url": "https://api.github.com/users/Neeke/following{/other_user}", "gists_url": "https://api.github.com/users/Neeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neeke/subscriptions", "organizations_url": "https://api.github.com/users/Neeke/orgs", "repos_url": "https://api.github.com/users/Neeke/repos", "events_url": "https://api.github.com/users/Neeke/events{/privacy}", "received_events_url": "https://api.github.com/users/Neeke/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-01T19:03:11Z", "updated_at": "2015-06-01T19:03:11Z", "author_association": "CONTRIBUTOR", "body": "all right, it will be named JsonNet-PHP.\nIt's ok?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107672417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107672722", "html_url": "https://github.com/google/jsonnet/issues/58#issuecomment-107672722", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/58", "id": 107672722, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-01T19:04:39Z", "updated_at": "2015-06-01T19:04:39Z", "author_association": "MEMBER", "body": "How about Jsonnet-PHP :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107672722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107673345", "html_url": "https://github.com/google/jsonnet/issues/58#issuecomment-107673345", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/58", "id": 107673345, "user": {"login": "Neeke", "id": 1913308, "avatar_url": "https://avatars1.githubusercontent.com/u/1913308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neeke", "html_url": "https://github.com/Neeke", "followers_url": "https://api.github.com/users/Neeke/followers", "following_url": "https://api.github.com/users/Neeke/following{/other_user}", "gists_url": "https://api.github.com/users/Neeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neeke/subscriptions", "organizations_url": "https://api.github.com/users/Neeke/orgs", "repos_url": "https://api.github.com/users/Neeke/repos", "events_url": "https://api.github.com/users/Neeke/events{/privacy}", "received_events_url": "https://api.github.com/users/Neeke/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-01T19:07:11Z", "updated_at": "2015-06-01T19:07:11Z", "author_association": "CONTRIBUTOR", "body": "yeah, cool.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107673345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107676788", "html_url": "https://github.com/google/jsonnet/issues/58#issuecomment-107676788", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/58", "id": 107676788, "user": {"login": "Neeke", "id": 1913308, "avatar_url": "https://avatars1.githubusercontent.com/u/1913308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neeke", "html_url": "https://github.com/Neeke", "followers_url": "https://api.github.com/users/Neeke/followers", "following_url": "https://api.github.com/users/Neeke/following{/other_user}", "gists_url": "https://api.github.com/users/Neeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neeke/subscriptions", "organizations_url": "https://api.github.com/users/Neeke/orgs", "repos_url": "https://api.github.com/users/Neeke/repos", "events_url": "https://api.github.com/users/Neeke/events{/privacy}", "received_events_url": "https://api.github.com/users/Neeke/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-01T19:21:44Z", "updated_at": "2015-06-01T19:21:44Z", "author_association": "CONTRIBUTOR", "body": "Hi, done.\n\nhttps://github.com/Neeke/Jsonnet-PHP\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107676788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107686357", "html_url": "https://github.com/google/jsonnet/pull/42#issuecomment-107686357", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/42", "id": 107686357, "user": {"login": "dgarstang", "id": 2925359, "avatar_url": "https://avatars1.githubusercontent.com/u/2925359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgarstang", "html_url": "https://github.com/dgarstang", "followers_url": "https://api.github.com/users/dgarstang/followers", "following_url": "https://api.github.com/users/dgarstang/following{/other_user}", "gists_url": "https://api.github.com/users/dgarstang/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgarstang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgarstang/subscriptions", "organizations_url": "https://api.github.com/users/dgarstang/orgs", "repos_url": "https://api.github.com/users/dgarstang/repos", "events_url": "https://api.github.com/users/dgarstang/events{/privacy}", "received_events_url": "https://api.github.com/users/dgarstang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-01T19:56:30Z", "updated_at": "2015-06-01T19:56:30Z", "author_association": "NONE", "body": "David,\n\nThanks. Doesn't work for me tho...\n\ncc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os\n-pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX\n-DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv\n-Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe\n-I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7\n-c _jsonnet.c -o build/temp.macosx-10.9-intel-2.7/_jsonnet.o -std=c++0x\nerror: invalid argument '-std=c++0x' not allowed with 'C/ObjC'\nerror: command 'cc' failed with exit status 1\n\nDoug.\n\nOn Mon, Jun 1, 2015 at 12:42 PM, Dave Cunningham notifications@github.com\nwrote:\n\n> Merged #42 https://github.com/google/jsonnet/pull/42.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/pull/42#event-319295717.\n\n## \n\nRegards,\n\nDouglas Garstang\nhttp://www.linkedin.com/in/garstang\nEmail: doug.garstang@gmail.com\nCell: +1-805-340-5627\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/107686357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/108177072", "html_url": "https://github.com/google/jsonnet/issues/58#issuecomment-108177072", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/58", "id": 108177072, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-06-03T03:23:55Z", "updated_at": "2015-06-03T03:23:55Z", "author_association": "MEMBER", "body": "Thanks.\n\nI have created a list of these 3rd party integrations here https://google.github.io/jsonnet/doc/bindings.html\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/108177072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134655282", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-134655282", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 134655282, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-25T16:12:30Z", "updated_at": "2015-08-25T16:13:09Z", "author_association": "MEMBER", "body": "I thought about it.  The cost is that it is much harder to statically analyze the Jsonnet (e.g. to find out what Jsonnet files are affected by a given library refactoring, and running them to ensure they emit the same JSON).  I wasn't sure how valuable the ability to compute imports would be, so err'd on the side of caution.\n\nI'd like to know more about your use case so I can think about the tradeoff.\n\nPreviously, I have done things like:\n\n```\nlocal whatever = {\n    a: import \"whatever_a.jsonnet\",\n    b: import \"whatever_b.jsonnet\",\n    c: import \"whatever_c.jsonnet\",\n};\n```\n\nAnd then you can reference it dynamically just with whatever[my_var].  So at least the expansion is done in one place.  And of course generating such a thing in a separate file is very easy :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134655282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134706236", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-134706236", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 134706236, "user": {"login": "davidreuss", "id": 6885, "avatar_url": "https://avatars0.githubusercontent.com/u/6885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidreuss", "html_url": "https://github.com/davidreuss", "followers_url": "https://api.github.com/users/davidreuss/followers", "following_url": "https://api.github.com/users/davidreuss/following{/other_user}", "gists_url": "https://api.github.com/users/davidreuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidreuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidreuss/subscriptions", "organizations_url": "https://api.github.com/users/davidreuss/orgs", "repos_url": "https://api.github.com/users/davidreuss/repos", "events_url": "https://api.github.com/users/davidreuss/events{/privacy}", "received_events_url": "https://api.github.com/users/davidreuss/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-25T19:17:18Z", "updated_at": "2015-08-25T19:17:18Z", "author_association": "NONE", "body": "I guess that makes sense, haven't thought about just importing all known into a local, and referencing that.\n\nFor my current use-case i have some dynamically generated structure (like a always changing inventory), where i use ja\u00f8sonnwt to augment / expand that further.\n\nTo include this properly i now have a script which generates the JSON, and invokes jsonnet so it's using stdin as code.\n\nSomething like:\n\n```\ndata=$(...)\necho 'import \"script.jsonnet\" + '$data'' | jsonnet -e -\n```\n\nBut maybe i need to rethink how i do this.\n\nI've toyed with just changing the import library path for scripts as well, but that feels clunky too.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134706236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134831145", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-134831145", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 134831145, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-26T04:49:20Z", "updated_at": "2015-08-26T04:49:20Z", "author_association": "MEMBER", "body": "Can't you write your generated data to a json file with a static filename and then import that from script.jsonnet?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134831145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134833382", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-134833382", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 134833382, "user": {"login": "davidreuss", "id": 6885, "avatar_url": "https://avatars0.githubusercontent.com/u/6885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidreuss", "html_url": "https://github.com/davidreuss", "followers_url": "https://api.github.com/users/davidreuss/followers", "following_url": "https://api.github.com/users/davidreuss/following{/other_user}", "gists_url": "https://api.github.com/users/davidreuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidreuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidreuss/subscriptions", "organizations_url": "https://api.github.com/users/davidreuss/orgs", "repos_url": "https://api.github.com/users/davidreuss/repos", "events_url": "https://api.github.com/users/davidreuss/events{/privacy}", "received_events_url": "https://api.github.com/users/davidreuss/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-26T05:15:58Z", "updated_at": "2015-08-26T05:15:58Z", "author_association": "NONE", "body": "Yes, i could - but i wanted to know if there was a nifty solution to avoid managing temporary files. My usecase is in an automated context, so i'd love to svoid copying too much around.\n\nBut i think with some import path juggling, that it could probably work okay :)\n\nSent from my iPhone\n\n> On 26/08/2015, at 06.49, Dave Cunningham notifications@github.com wrote:\n> \n> Can't you write your generated data to a json file with a static filename and then import that from script.jsonnet?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134833382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134836251", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-134836251", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 134836251, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-26T05:38:29Z", "updated_at": "2015-08-26T05:38:29Z", "author_association": "MEMBER", "body": "Brain dump of crazy ideas:\n\n1) import \"/dev/stdin\"\n\n2) add a feature\n\nlocal foo = importexec [\"echo\", \"{\\\"x\\\": 1}\"];\nfoo.x\n\nyielding 1, but this would only process JSON\n\n3) write a JSON parser in Jsonnet (yes, this is possible)\n\nlocal foo = std.parseJson(std.extVar(\"DATA\"));\n\nthen run jsonnet with -V DATA=\"$data\"  (or use an environment variable and -E)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134836251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134847424", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-134847424", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 134847424, "user": {"login": "davidreuss", "id": 6885, "avatar_url": "https://avatars0.githubusercontent.com/u/6885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidreuss", "html_url": "https://github.com/davidreuss", "followers_url": "https://api.github.com/users/davidreuss/followers", "following_url": "https://api.github.com/users/davidreuss/following{/other_user}", "gists_url": "https://api.github.com/users/davidreuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidreuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidreuss/subscriptions", "organizations_url": "https://api.github.com/users/davidreuss/orgs", "repos_url": "https://api.github.com/users/davidreuss/repos", "events_url": "https://api.github.com/users/davidreuss/events{/privacy}", "received_events_url": "https://api.github.com/users/davidreuss/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-26T06:05:15Z", "updated_at": "2015-08-26T06:05:15Z", "author_association": "NONE", "body": "If importing /dev/stdin works then that would solve it, but that would just feel pretty wrong.\n\nI'm in total agreement regarding static configuration, and i'd also expect configuration to not change during the execution of jsonnet, even if reading from say a URL.\n\nWriting a JSON parser could indeed be a solution. I like the importexec solution as well, but i guess it depends on how much you want jsonnet to be able to handle itself, and what should be left to other tooling.\n\n> On 26/08/2015, at 07.38, Dave Cunningham notifications@github.com wrote:\n> \n> Brain dump of crazy ideas:\n> \n> 1) import \"/dev/stdin\"\n> \n> 2) add a feature\n> \n> local foo = importexec [\"echo\", \"{\\\"x\\\": 1}\"];\n> foo.x\n> \n> yielding 1, but this would only process JSON\n> \n> 3) write a JSON parser in Jsonnet (yes, this is possible)\n> \n> local foo = std.parseJson(std.extVar(\"DATA\"));\n> \n> then run jsonnet with -V DATA=\"$data\" (or use an environment variable and -E)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/134847424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/135084929", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-135084929", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 135084929, "user": {"login": "oconnorr", "id": 8388126, "avatar_url": "https://avatars3.githubusercontent.com/u/8388126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnorr", "html_url": "https://github.com/oconnorr", "followers_url": "https://api.github.com/users/oconnorr/followers", "following_url": "https://api.github.com/users/oconnorr/following{/other_user}", "gists_url": "https://api.github.com/users/oconnorr/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnorr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnorr/subscriptions", "organizations_url": "https://api.github.com/users/oconnorr/orgs", "repos_url": "https://api.github.com/users/oconnorr/repos", "events_url": "https://api.github.com/users/oconnorr/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnorr/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-26T16:18:44Z", "updated_at": "2015-08-26T16:20:00Z", "author_association": "CONTRIBUTOR", "body": "For what it's worth, nix-instantiate supports `--arg <name> <value>` and `--argstr <name> <value>` command line arguments.  In this case the file containing a Nix expression is expected to be a function, and it passes that function a record of name value pairs collected from the command line.  `--argstr` is the same as `--arg` except that `<value>` is always a string (rather than an arbitrary expression) and the string doesn't have to be quoted (with shell escaped quotes).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/135084929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/135913271", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-135913271", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 135913271, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-08-28T23:33:48Z", "updated_at": "2015-08-28T23:33:48Z", "author_association": "MEMBER", "body": "What I can do is:\n\n1) add a -R name=value where value is arbitrary jsonnet code (like --arg in Nix)\n2) internally, std.extVar will behave the same if the var was defined with -V, otherwise if it was defined with -R it will actually execute the string in the current VM and return the value as a runtime object.\n\nIf you need to know the dependencies of the jsonnet execution, you need to add on any dependencies from code you pass in with -R to whatever the dependencies are in the actual jsonnet files, but this is natural and not hard.\n\nOn the other hand I could do a full std.eval function so you could just do std.eval(std.getenv()) and keep using -V.  But this would mean the code would be impossible to statically analyse for dependencies.  It would also mean the code in the file decides whether the variable contains code or string, instead of the user at the commandline.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/135913271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/136948991", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-136948991", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 136948991, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-02T06:25:31Z", "updated_at": "2015-09-02T06:25:31Z", "author_association": "MEMBER", "body": "Ok, implemented that: https://github.com/google/jsonnet/commit/0299d84a5aa4c35c346125fa6ac31a14d6a923ff\n\n@davidreuss you should be able to do something like this now:\n\ndata=$(...)\nexport data\njsonnet --code-env data script.jsonnet\n\nand then script.jsonnet can do std.extVar(\"data\") which will yield the json struct\n\nPlease let me know if that works out for you :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/136948991/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/136982363", "html_url": "https://github.com/google/jsonnet/issues/62#issuecomment-136982363", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/62", "id": 136982363, "user": {"login": "davidreuss", "id": 6885, "avatar_url": "https://avatars0.githubusercontent.com/u/6885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidreuss", "html_url": "https://github.com/davidreuss", "followers_url": "https://api.github.com/users/davidreuss/followers", "following_url": "https://api.github.com/users/davidreuss/following{/other_user}", "gists_url": "https://api.github.com/users/davidreuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidreuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidreuss/subscriptions", "organizations_url": "https://api.github.com/users/davidreuss/orgs", "repos_url": "https://api.github.com/users/davidreuss/repos", "events_url": "https://api.github.com/users/davidreuss/events{/privacy}", "received_events_url": "https://api.github.com/users/davidreuss/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-02T08:59:00Z", "updated_at": "2015-09-02T08:59:00Z", "author_association": "NONE", "body": "Oh, wow -- thanks, that's really helpful, thanks a lot. :+1: \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/136982363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/138962585", "html_url": "https://github.com/google/jsonnet/issues/64#issuecomment-138962585", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/64", "id": 138962585, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-09T16:23:45Z", "updated_at": "2015-09-09T16:23:45Z", "author_association": "MEMBER", "body": "Yes this should be pretty easy and Java is noticeably missing from the list of 3rd party language bindings.\n\nLong term it'd be great to rewrite the whole thing in haxe so we can get straightforward pure implementations in every language but that is probably at least 2 weeks of fulltime work and that kind of effort would probably be better spent elsewhere.  JNI bindings would be < 1 day as the C API is pretty straightforward.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/138962585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139001413", "html_url": "https://github.com/google/jsonnet/issues/64#issuecomment-139001413", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/64", "id": 139001413, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-09T18:38:24Z", "updated_at": "2015-09-09T18:38:24Z", "author_association": "MEMBER", "body": "Sounds good to me. Mind if I go ahead and take this?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139001413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139045045", "html_url": "https://github.com/google/jsonnet/issues/64#issuecomment-139045045", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/64", "id": 139045045, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-09T21:03:50Z", "updated_at": "2015-09-09T21:03:50Z", "author_association": "MEMBER", "body": "Go for it :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139045045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139798470", "html_url": "https://github.com/google/jsonnet/pull/68#issuecomment-139798470", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/68", "id": 139798470, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-12T17:21:12Z", "updated_at": "2015-09-12T17:21:12Z", "author_association": "MEMBER", "body": "Is it possible to re-use -o for this?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139798470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139798482", "html_url": "https://github.com/google/jsonnet/pull/68#issuecomment-139798482", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/68", "id": 139798482, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-12T17:21:26Z", "updated_at": "2015-09-12T17:21:26Z", "author_association": "MEMBER", "body": "Actually I guess the list of files output should go to -o\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139798482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139816207", "html_url": "https://github.com/google/jsonnet/pull/68#issuecomment-139816207", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/68", "id": 139816207, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-12T20:16:34Z", "updated_at": "2015-09-12T20:16:34Z", "author_association": "MEMBER", "body": "I am not sure whether using `-o` for this is better. In general, using `-o` when outputting a single file allows one to rename the output file to something other than the default. However, for multiple file output, the basenames of the files cannot be changed, and the only thing that can be easily changed is which directory the files are written to. I know that adding yet another flag is not ideal, but I think simply setting a directory for multiple file output is easier to do than listing all the output files on `-o`.\n\nAnother option would be to have `-m` take the output directory an optional argument. What do you think?\n\nBy the way, I am not sure what is causing the CI failures. I am unable to reproduce locally using `make test`.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139816207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139899404", "html_url": "https://github.com/google/jsonnet/pull/68#issuecomment-139899404", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/68", "id": 139899404, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-13T17:52:34Z", "updated_at": "2015-09-13T17:52:34Z", "author_association": "MEMBER", "body": "I am OK with changing -m\nOn Sep 12, 2015 1:16 PM, \"David Z. Chen\" notifications@github.com wrote:\n\n> I am not sure whether using -o for this is better. In general, using -o\n> when outputting a single file allows one to rename the output file to\n> something other than the default. However, for multiple file output, the\n> basenames of the files cannot be changed, and the only thing that can be\n> easily changed is which directory the files are written to. I know that\n> adding yet another flag is not ideal, but I think simply setting a\n> directory for multiple file output is easier to do than listing all the\n> output files on -o.\n> \n> Another option would be to have -m take the output directory an optional\n> argument. What do you think?\n> \n> By the way, I am not sure what is causing the CI failures. I am unable to\n> reproduce locally using make test.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/pull/68#issuecomment-139816207.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139899404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139962752", "html_url": "https://github.com/google/jsonnet/pull/68#issuecomment-139962752", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/68", "id": 139962752, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-14T05:16:13Z", "updated_at": "2015-09-14T05:16:13Z", "author_association": "MEMBER", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/139962752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140239135", "html_url": "https://github.com/google/jsonnet/pull/68#issuecomment-140239135", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/68", "id": 140239135, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-15T00:15:35Z", "updated_at": "2015-09-15T00:15:35Z", "author_association": "MEMBER", "body": "Resolved merge conflicts.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140239135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140654255", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140654255", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140654255, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-16T07:26:03Z", "updated_at": "2015-09-16T07:26:03Z", "author_association": "MEMBER", "body": "Here is the latest Jsonnet usage in GitHub: https://github.com/search?utf8=\u2713&q=extension%3Ajsonnet+NOT+nothack&type=Code&ref=searchresults\n\nWith over 300 files, we should now be meeting GitHub's criteria for adding Jsonnet to Linguist.\n\nI have created a patch to Linguist that I will run through the proper channels before sending the PR. In the meantime, according to the [Linguist CONTRIBUTING.md](https://github.com/github/linguist/blob/master/CONTRIBUTING.md), the grammar must be in its own repository since it will be included by Linguist as a Git submodule.\n\nWe will need to move the language-jsonnet Atom syntax package you added into its own repository before we can submit the PR to Linguist.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140654255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140876413", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140876413", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140876413, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-16T20:21:59Z", "updated_at": "2015-09-16T20:21:59Z", "author_association": "MEMBER", "body": "It says in there that it needs to be hundreds of repos, not hundreds of files.  I think we only have 10 repos or so so maybe we can't do this yet.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140876413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140930438", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140930438", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140930438, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T00:11:57Z", "updated_at": "2015-09-17T00:12:23Z", "author_association": "MEMBER", "body": "Though from github/linguist#2348:\n\n> We normally require hundreds of samples before adding support for an extension\n\nI'd be fine with waiting until we have some more usage before sending a PR.\n\nIn comparison, there are [546 .capnp files](https://github.com/search?p=3&q=extension%3Acapnp+NOT+nothack&ref=searchresults&type=Code&utf8=%E2%9C%93), though  these files are spread out over more repos, and capnp was added along with a bunch of other languages in bulk in github/linguist#1714.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140930438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140940269", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140940269", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140940269, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T01:36:18Z", "updated_at": "2015-09-17T01:36:18Z", "author_association": "MEMBER", "body": "Ok in that case perhaps we should try.  It would definitely be useful.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140940269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140940866", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140940866", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140940866, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T01:42:28Z", "updated_at": "2015-09-17T01:42:28Z", "author_association": "MEMBER", "body": "Any idea how we would maintain the syntax highlighting after the fact?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140940866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140953245", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140953245", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140953245, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T03:01:30Z", "updated_at": "2015-09-17T03:01:30Z", "author_association": "MEMBER", "body": "Are you referring to the language-jsonnet repo that contains the Atom syntax files?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140953245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140955635", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140955635", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140955635, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T03:08:47Z", "updated_at": "2015-09-17T03:08:47Z", "author_association": "MEMBER", "body": "Yeah if we pushed changes to that would it all just work, or would we have to open a ticket to get it brought in.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140955635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140973410", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140973410", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140973410, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T05:32:07Z", "updated_at": "2015-09-17T19:47:48Z", "author_association": "MEMBER", "body": "Yes, we just need to move the contents of language-jsonnet into the repo. Then, in my PR for Linguist, I just add the repo to .gitmodules: https://github.com/davidzchen/linguist/commit/51f65422bc2fae4dec78ef39d715e4144cfa0680\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140973410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140976603", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140976603", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140976603, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T05:56:12Z", "updated_at": "2015-09-17T05:56:12Z", "author_association": "MEMBER", "body": "By the way, do you have a preference for the color to use for Jsonnet in GitHub repository language stats?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140976603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140979145", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-140979145", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 140979145, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T06:21:31Z", "updated_at": "2015-09-17T06:21:31Z", "author_association": "MEMBER", "body": "Not really.  Is there any kind of system you know of that other languages\nuse?\n\nOn Thu, Sep 17, 2015 at 1:56 AM, David Z. Chen notifications@github.com\nwrote:\n\n> By the way, do you have a preference for the color to use for Jsonnet in\n> GitHub repository language stats?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/issues/43#issuecomment-140976603.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/140979145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/141017722", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-141017722", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 141017722, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T09:05:37Z", "updated_at": "2015-09-17T09:05:37Z", "author_association": "MEMBER", "body": "Not in particular. It's usually pretty arbitrary, though some languages pick colors that match their logo color. Here's a sample of some of the colors used by different languages: https://github.com/ozh/github-colors\n\nI'm currently using `#00BCD4` (cyan) in my patch.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/141017722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/141161172", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-141161172", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 141161172, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T17:34:08Z", "updated_at": "2015-09-17T17:34:08Z", "author_association": "MEMBER", "body": "The website is #402010 maybe we should use that.\n\nOn Thu, Sep 17, 2015 at 5:05 AM, David Z. Chen notifications@github.com\nwrote:\n\n> Not in particular. It's usually pretty arbitrary, though some languages\n> pick colors that match their logo color. Here's a sample of some of the\n> colors used by different languages: https://github.com/ozh/github-colors\n> \n> I'm currently using #00BCD4 (cyan) in my patch.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/issues/43#issuecomment-141017722.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/141161172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/141205753", "html_url": "https://github.com/google/jsonnet/issues/43#issuecomment-141205753", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/43", "id": 141205753, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-17T19:47:19Z", "updated_at": "2015-09-17T19:47:19Z", "author_association": "MEMBER", "body": "Sounds good to me.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/141205753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/141956136", "html_url": "https://github.com/google/jsonnet/issues/72#issuecomment-141956136", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/72", "id": 141956136, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-21T12:24:37Z", "updated_at": "2015-09-21T12:24:37Z", "author_association": "MEMBER", "body": "Related to #45 \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/141956136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144505508", "html_url": "https://github.com/google/jsonnet/pull/75#issuecomment-144505508", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/75", "id": 144505508, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-30T18:51:24Z", "updated_at": "2015-09-30T18:51:24Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144505508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144515008", "html_url": "https://github.com/google/jsonnet/pull/74#issuecomment-144515008", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/74", "id": 144515008, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-09-30T19:29:48Z", "updated_at": "2015-09-30T19:29:48Z", "author_association": "MEMBER", "body": "Rebased and resolved merge conflicts.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144515008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144860394", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-144860394", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 144860394, "user": {"login": "johnboiles", "id": 218876, "avatar_url": "https://avatars3.githubusercontent.com/u/218876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnboiles", "html_url": "https://github.com/johnboiles", "followers_url": "https://api.github.com/users/johnboiles/followers", "following_url": "https://api.github.com/users/johnboiles/following{/other_user}", "gists_url": "https://api.github.com/users/johnboiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnboiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnboiles/subscriptions", "organizations_url": "https://api.github.com/users/johnboiles/orgs", "repos_url": "https://api.github.com/users/johnboiles/repos", "events_url": "https://api.github.com/users/johnboiles/events{/privacy}", "received_events_url": "https://api.github.com/users/johnboiles/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-01T21:52:34Z", "updated_at": "2015-10-01T21:52:34Z", "author_association": "NONE", "body": "This would be great. How painful did this change look to be? I might be able to contribute if it's not huge.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144860394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144929506", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-144929506", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 144929506, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-02T05:38:48Z", "updated_at": "2015-10-02T05:38:48Z", "author_association": "MEMBER", "body": "My plan was to avoid having a dependency on ICU -- store everything\ninternally as wstring and assume that wchar is a unicode codepoint.  Then\nwe just need to tweak the lexer to parse utf8 in string literals and the\nstring output function to render it back as utf8.  It shouldn't be too hard\nas I left some placeholders and TODOs in there.  You're very welcome to\nhave a try at it.\n\nI suggest 1) modifying the internal string representation in state.h 2)\nmodifying the output code to encode utf8 and testing it with std.char(x)\nfor x > 127 and 3) modifying the lexer to parse utf8. It would be possible\nto run all tests and commit upstream at each intermediate point.\n\nThis would be great. How painful did this change look to be? I might be\nable to contribute if it's not huge.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/google/jsonnet/issues/1#issuecomment-144860394.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144929506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144937757", "html_url": "https://github.com/google/jsonnet/pull/74#issuecomment-144937757", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/74", "id": 144937757, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-02T06:53:48Z", "updated_at": "2015-10-02T06:53:48Z", "author_association": "MEMBER", "body": "Thanks.  I'm in favor of this but I need to understand better what you've actually done here.  We should talk about it face to face next week.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144937757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144976420", "html_url": "https://github.com/google/jsonnet/pull/74#issuecomment-144976420", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/74", "id": 144976420, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-02T09:42:54Z", "updated_at": "2015-10-02T09:42:54Z", "author_association": "MEMBER", "body": "Sounds good to me.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/144976420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/145117916", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-145117916", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 145117916, "user": {"login": "johnboiles", "id": 218876, "avatar_url": "https://avatars3.githubusercontent.com/u/218876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnboiles", "html_url": "https://github.com/johnboiles", "followers_url": "https://api.github.com/users/johnboiles/followers", "following_url": "https://api.github.com/users/johnboiles/following{/other_user}", "gists_url": "https://api.github.com/users/johnboiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnboiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnboiles/subscriptions", "organizations_url": "https://api.github.com/users/johnboiles/orgs", "repos_url": "https://api.github.com/users/johnboiles/repos", "events_url": "https://api.github.com/users/johnboiles/events{/privacy}", "received_events_url": "https://api.github.com/users/johnboiles/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-02T18:34:46Z", "updated_at": "2015-10-02T18:34:46Z", "author_association": "NONE", "body": "Great, thanks for the info @sparkprime. I'll update here if I get a chance to try it; I need more emoji in my json :beers:\n\nI really love Jsonnet BTW. My team is using it along with ApiDoc to create API documentation that doubles as a mock API server for developing apps against APIs that aren't finished yet.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/145117916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/145364892", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-145364892", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 145364892, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-04T16:39:35Z", "updated_at": "2015-10-04T16:44:24Z", "author_association": "MEMBER", "body": "Glad you like it!\n\nI did some reading and it seems wstring is not what we want because it has UTF16 behavior on windows.  So we probably need to do something like\n\n```\ntypedef std::basic_string<char32_t> JsonnetString;\n```\n\nwith functions to convert from UTF8-encoded std::string to that and back.\n\nThere are a bunch of places where the HeapString internal representation leaks out into other places as well, e.g. field names, std.extVar() keys, filenames (from std.thisFile) etc.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/145364892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/146068540", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-146068540", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 146068540, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-07T03:24:55Z", "updated_at": "2015-10-07T03:24:55Z", "author_association": "MEMBER", "body": "@hotdog929 you may be interested\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/146068540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/147222891", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-147222891", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 147222891, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-11T17:21:47Z", "updated_at": "2015-10-11T17:21:47Z", "author_association": "MEMBER", "body": "I'm going to have a go at this because I think it's probably harder / more work than I originally thought.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/147222891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/147246517", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-147246517", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 147246517, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-11T21:17:49Z", "updated_at": "2015-10-11T21:17:49Z", "author_association": "MEMBER", "body": "That was a productive 4 hours ;)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/147246517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/147252066", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-147252066", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 147252066, "user": {"login": "johnboiles", "id": 218876, "avatar_url": "https://avatars3.githubusercontent.com/u/218876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnboiles", "html_url": "https://github.com/johnboiles", "followers_url": "https://api.github.com/users/johnboiles/followers", "following_url": "https://api.github.com/users/johnboiles/following{/other_user}", "gists_url": "https://api.github.com/users/johnboiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnboiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnboiles/subscriptions", "organizations_url": "https://api.github.com/users/johnboiles/orgs", "repos_url": "https://api.github.com/users/johnboiles/repos", "events_url": "https://api.github.com/users/johnboiles/events{/privacy}", "received_events_url": "https://api.github.com/users/johnboiles/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-11T22:37:24Z", "updated_at": "2015-10-11T22:37:24Z", "author_association": "NONE", "body": "Wow @sparkprime, way to kill it!!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/147252066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/147259546", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-147259546", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 147259546, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-12T00:12:21Z", "updated_at": "2015-10-12T00:12:21Z", "author_association": "MEMBER", "body": "Nice! :D\n\nPerhaps I should also add a `jsonnet_test` Bazel rule since it is possible to write tests in Jsonnet, such as the [`unicode.jsonnet`](https://github.com/google/jsonnet/blob/master/test_suite/unicode.jsonnet) test you just added. :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/147259546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/148305382", "html_url": "https://github.com/google/jsonnet/issues/71#issuecomment-148305382", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/71", "id": 148305382, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-15T07:34:20Z", "updated_at": "2015-10-15T08:25:27Z", "author_association": "MEMBER", "body": "I opened this because it would give me a better idea of what the Java API should look like (see #64).\n\nA few ideas I had in mind for the C++ API are:\n- Simpler interface for returning output strings for `_multi` APIs, such as `std::vector<std::string>`.\n- Using `std::function` for the import callback\n- Using `std::string` instead of `char*`\n\nHere is what I have so far: https://github.com/davidzchen/jsonnet/blob/cpp/cpp/jsonnet.h\n\nCurrently, this is just a wrapper around the libjsonnet C API. In the future, it might be nice to refactor some of the implementation details in `libjsonnet.c` for evaluating Jsonnet files/snippets and move them into the core C++ implementation.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/148305382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149396820", "html_url": "https://github.com/google/jsonnet/pull/76#issuecomment-149396820", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/76", "id": 149396820, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-20T01:39:30Z", "updated_at": "2015-10-20T01:39:30Z", "author_association": "MEMBER", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149396820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149646577", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-149646577", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 149646577, "user": {"login": "johnboiles", "id": 218876, "avatar_url": "https://avatars3.githubusercontent.com/u/218876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnboiles", "html_url": "https://github.com/johnboiles", "followers_url": "https://api.github.com/users/johnboiles/followers", "following_url": "https://api.github.com/users/johnboiles/following{/other_user}", "gists_url": "https://api.github.com/users/johnboiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnboiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnboiles/subscriptions", "organizations_url": "https://api.github.com/users/johnboiles/orgs", "repos_url": "https://api.github.com/users/johnboiles/repos", "events_url": "https://api.github.com/users/johnboiles/events{/privacy}", "received_events_url": "https://api.github.com/users/johnboiles/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-20T17:52:29Z", "updated_at": "2015-10-20T17:52:29Z", "author_association": "NONE", "body": "Looks like normal unicode characters (like `\u201c` `\u201d` `\u2018` `\u2019` etc) are working fine, but longer sequences for emoji (like \ud83d\ude80 -- \"\\xF0\\x9F\\x9A\\x80\") always become the sequence \"\\xEF\\xBF\\xBD\\xEF\\xBF\\xBD\\xEF\\xBF\\xBD\\xEF\\xBF\\xBD\"\n\nI'm suspicious of the encode_utf8 method, but I'm struggling to understand what all the bit masking and shifting is doing.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149646577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149649664", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-149649664", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 149649664, "user": {"login": "johnboiles", "id": 218876, "avatar_url": "https://avatars3.githubusercontent.com/u/218876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnboiles", "html_url": "https://github.com/johnboiles", "followers_url": "https://api.github.com/users/johnboiles/followers", "following_url": "https://api.github.com/users/johnboiles/following{/other_user}", "gists_url": "https://api.github.com/users/johnboiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnboiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnboiles/subscriptions", "organizations_url": "https://api.github.com/users/johnboiles/orgs", "repos_url": "https://api.github.com/users/johnboiles/repos", "events_url": "https://api.github.com/users/johnboiles/events{/privacy}", "received_events_url": "https://api.github.com/users/johnboiles/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-20T18:04:39Z", "updated_at": "2015-10-20T18:04:39Z", "author_association": "NONE", "body": "I think I have a fix, looks like a typo on [this line](https://github.com/google/jsonnet/commit/fef77da26fc9d66b8a6a8ae1be5390f5eea0e8ce#diff-5f70800c4203dccbe3b4db3f1bdd2193R99):\n\n```\n} else if ((c0 & 0xF8) == 0xF) { //11110zzz 10zzyyyy 10yyyyxx 10xxxxxx\n```\n\nChanging that to the following seems more right\n\n```\n} else if ((c0 & 0xF8) == 0xF0) { //11110zzz 10zzyyyy 10yyyyxx 10xxxxxx\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149649664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149659656", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-149659656", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 149659656, "user": {"login": "johnboiles", "id": 218876, "avatar_url": "https://avatars3.githubusercontent.com/u/218876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnboiles", "html_url": "https://github.com/johnboiles", "followers_url": "https://api.github.com/users/johnboiles/followers", "following_url": "https://api.github.com/users/johnboiles/following{/other_user}", "gists_url": "https://api.github.com/users/johnboiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnboiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnboiles/subscriptions", "organizations_url": "https://api.github.com/users/johnboiles/orgs", "repos_url": "https://api.github.com/users/johnboiles/repos", "events_url": "https://api.github.com/users/johnboiles/events{/privacy}", "received_events_url": "https://api.github.com/users/johnboiles/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-20T18:37:50Z", "updated_at": "2015-10-20T18:37:50Z", "author_association": "NONE", "body": "Submitted a fix as #78.\n\nI didn't see an easy way to test this as the `\\u` escape sequence only supports 4 hex digit escape sequences (ie up to character code 0xFFFF). So adding this is invalid:\n\n```\nstd.assertEqual(\"\\u1F680\", \"\ud83d\ude80\") &&\n```\n\nOne solution for testing could be to add support for the [ECMAScript6 code point escapes](https://mathiasbynens.be/notes/javascript-escapes#unicode-code-point) (like `\\u{1F680}`).\n\nIf you have another idea for testing, I'd love to hear it!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149659656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149682231", "html_url": "https://github.com/google/jsonnet/pull/78#issuecomment-149682231", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/78", "id": 149682231, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-20T19:52:44Z", "updated_at": "2015-10-20T19:52:44Z", "author_association": "MEMBER", "body": "I changed the repo under your feet but I added your change in ad3c6cfe2cebb9d87406325f26b5594a1455c982\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149682231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149683371", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-149683371", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 149683371, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-20T19:57:52Z", "updated_at": "2015-10-20T19:57:52Z", "author_association": "MEMBER", "body": "Thanks for tracking this down!\n\nI suppose you can do things like \"\ud83d\ude80\ud83d\ude80\ud83d\ude80\"[1] which should == \"\ud83d\ude80\".\n\n\\u{XXX} should be a no-brainer though, it could be added in the lexer quite easily.\n\nI have been worried for a long time about the limitation of \\u and whether it's necessary to support e.g. things like this as well https://bugs.launchpad.net/zorba/+bug/1024448\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149683371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149703626", "html_url": "https://github.com/google/jsonnet/pull/78#issuecomment-149703626", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/78", "id": 149703626, "user": {"login": "johnboiles", "id": 218876, "avatar_url": "https://avatars3.githubusercontent.com/u/218876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnboiles", "html_url": "https://github.com/johnboiles", "followers_url": "https://api.github.com/users/johnboiles/followers", "following_url": "https://api.github.com/users/johnboiles/following{/other_user}", "gists_url": "https://api.github.com/users/johnboiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnboiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnboiles/subscriptions", "organizations_url": "https://api.github.com/users/johnboiles/orgs", "repos_url": "https://api.github.com/users/johnboiles/repos", "events_url": "https://api.github.com/users/johnboiles/events{/privacy}", "received_events_url": "https://api.github.com/users/johnboiles/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-20T21:08:10Z", "updated_at": "2015-10-20T21:08:10Z", "author_association": "NONE", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149703626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149739148", "html_url": "https://github.com/google/jsonnet/issues/1#issuecomment-149739148", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/1", "id": 149739148, "user": {"login": "johnboiles", "id": 218876, "avatar_url": "https://avatars3.githubusercontent.com/u/218876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnboiles", "html_url": "https://github.com/johnboiles", "followers_url": "https://api.github.com/users/johnboiles/followers", "following_url": "https://api.github.com/users/johnboiles/following{/other_user}", "gists_url": "https://api.github.com/users/johnboiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnboiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnboiles/subscriptions", "organizations_url": "https://api.github.com/users/johnboiles/orgs", "repos_url": "https://api.github.com/users/johnboiles/repos", "events_url": "https://api.github.com/users/johnboiles/events{/privacy}", "received_events_url": "https://api.github.com/users/johnboiles/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-20T23:59:40Z", "updated_at": "2015-10-20T23:59:40Z", "author_association": "NONE", "body": "No problem! It was enlightening to learn more about the inner workings of unicode\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/149739148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/151594613", "html_url": "https://github.com/google/jsonnet/issues/81#issuecomment-151594613", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/81", "id": 151594613, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-27T18:13:10Z", "updated_at": "2015-10-27T18:13:10Z", "author_association": "MEMBER", "body": "Missed a file in the setup.py, should be fixed now\n\nsudo pip install jsonnet --upgrade\n\nOn Tue, Oct 27, 2015 at 2:02 PM dgarstang notifications@github.com wrote:\n\n> Currently getting this:\n> \n> (venv)root@default-vagrant:~# python\n> Python 2.7.6 (default, Jun 22 2015, 17:58:13)\n> [GCC 4.8.2] on linux2\n> Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n> \n> > > > import _jsonnet\n> > > > Traceback (most recent call last):\n> > > >   File \"<stdin>\", line 1, in <module>\n> > > > ImportError: /root/venv/local/lib/python2.7/site-packages/_jsonnet.so: undefined symbol: _Z15jsonnet_desugarP9AllocatorRP3AST\n> \n> Latest refresh of Ubuntu 14.04.\n> \n> Doug\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/issues/81.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/151594613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/151603450", "html_url": "https://github.com/google/jsonnet/issues/81#issuecomment-151603450", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/81", "id": 151603450, "user": {"login": "dgarstang", "id": 2925359, "avatar_url": "https://avatars1.githubusercontent.com/u/2925359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgarstang", "html_url": "https://github.com/dgarstang", "followers_url": "https://api.github.com/users/dgarstang/followers", "following_url": "https://api.github.com/users/dgarstang/following{/other_user}", "gists_url": "https://api.github.com/users/dgarstang/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgarstang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgarstang/subscriptions", "organizations_url": "https://api.github.com/users/dgarstang/orgs", "repos_url": "https://api.github.com/users/dgarstang/repos", "events_url": "https://api.github.com/users/dgarstang/events{/privacy}", "received_events_url": "https://api.github.com/users/dgarstang/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-27T18:34:58Z", "updated_at": "2015-10-27T18:34:58Z", "author_association": "NONE", "body": "Thanks David. I probably shouldn't have been building from the master branch anyway. I just tried v0.8.4 and seem to have the same issue. I guess, even though you've fixed it in the master branch, I'd prefer to pull from a specific release to not have this happen again. Any ideas?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/151603450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/151603940", "html_url": "https://github.com/google/jsonnet/issues/81#issuecomment-151603940", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/81", "id": 151603940, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-27T18:36:51Z", "updated_at": "2015-10-27T18:36:51Z", "author_association": "MEMBER", "body": "In fact the release was broken but I just pushed a new one to pip to fix\nit.  Since it seems you prefer to build from setup.py, I'll create a new\ntag on github with this fix.\n\nOn Tue, Oct 27, 2015 at 2:35 PM dgarstang notifications@github.com wrote:\n\n> Thanks David. I probably shouldn't have been building from the master\n> branch anyway. I just tried v0.8.4 and seem to have the same issue. I\n> guess, even though you've fixed it in the master branch, I'd prefer to pull\n> from a specific release to not have this happen again. Any ideas?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/issues/81#issuecomment-151603450.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/151603940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/151607021", "html_url": "https://github.com/google/jsonnet/issues/81#issuecomment-151607021", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/81", "id": 151607021, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-27T18:46:44Z", "updated_at": "2015-10-27T18:46:44Z", "author_association": "MEMBER", "body": "Fixed in 0a15204876feec2f810a281e24cc346848984bfe\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/151607021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/152266438", "html_url": "https://github.com/google/jsonnet/issues/73#issuecomment-152266438", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/73", "id": 152266438, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-29T17:58:19Z", "updated_at": "2015-10-29T17:58:19Z", "author_association": "MEMBER", "body": "Vague plan for this:\n\n1) Move all syntax desugaring out of the parser into a separate class.  That allows more-or-less pretty printing the original AST (although without comments / original whitespace).\n\n2) Adjust lexer to preserve comments and whitespace.  This allows pretty printing exactly in the original form.  There may be some shortcuts here, if we don't mind dropping comments in various places in the source code.\n\n3) This is where is gets vague: My thinking is we can discard / overwrite almost all whitespace, but we must keep all comments (although we may reformat the content of the comment).  Comments also should stay on the end of a line if that's where they were put.  Double and single empty lines should be preserved, but any more than that can be squashed.  Line breaking is quite a challenge.  We should change the code to take advantage of the syntax sugars where possible.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/152266438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/152267211", "html_url": "https://github.com/google/jsonnet/issues/73#issuecomment-152267211", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/73", "id": 152267211, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-10-29T18:00:51Z", "updated_at": "2015-10-29T18:00:51Z", "author_association": "MEMBER", "body": "Before starting on 3 I really need to take some time to examine go fmt, pyformat and other popular things of this kind.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/152267211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/158678202", "html_url": "https://github.com/google/jsonnet/issues/82#issuecomment-158678202", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/82", "id": 158678202, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-21T20:09:09Z", "updated_at": "2015-11-21T20:09:09Z", "author_association": "MEMBER", "body": "Good point, and probably a one-line fix :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/158678202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/161172382", "html_url": "https://github.com/google/jsonnet/pull/84#issuecomment-161172382", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/84", "id": 161172382, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-02T03:49:11Z", "updated_at": "2015-12-02T03:49:11Z", "author_association": "MEMBER", "body": "Thanks for the fix\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/161172382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163095256", "html_url": "https://github.com/google/jsonnet/issues/53#issuecomment-163095256", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/53", "id": 163095256, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-09T03:38:25Z", "updated_at": "2015-12-09T03:38:25Z", "author_association": "CONTRIBUTOR", "body": "autotools is such a weird thing to set up, but I've gotten a decent start on it now.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163095256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163096279", "html_url": "https://github.com/google/jsonnet/issues/53#issuecomment-163096279", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/53", "id": 163096279, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-09T03:49:13Z", "updated_at": "2015-12-09T03:49:13Z", "author_association": "MEMBER", "body": "I've studiously avoided autotools for 2 decades but I suppose I won't get away with it anymore ;)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163096279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163115064", "html_url": "https://github.com/google/jsonnet/issues/53#issuecomment-163115064", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/53", "id": 163115064, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-09T05:28:53Z", "updated_at": "2015-12-09T05:28:53Z", "author_association": "CONTRIBUTOR", "body": "At least it ought to be fairly low-maintenance once it's set up :-)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163115064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163462037", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-163462037", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 163462037, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T01:57:29Z", "updated_at": "2015-12-10T01:57:29Z", "author_association": "MEMBER", "body": "Does the autoconf stuff you're working on need this or replace this?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163462037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163465503", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-163465503", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 163465503, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T02:23:13Z", "updated_at": "2015-12-10T02:23:13Z", "author_association": "CONTRIBUTOR", "body": "It would replace this.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163465503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163465677", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-163465677", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 163465677, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T02:24:36Z", "updated_at": "2015-12-10T02:24:47Z", "author_association": "CONTRIBUTOR", "body": "I have the autotools stuff working now, but haven't worked out how to get the tests back into it yet.  Almost there.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163465677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163473758", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-163473758", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 163473758, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T03:25:39Z", "updated_at": "2015-12-10T03:25:39Z", "author_association": "MEMBER", "body": "Just wondering, what is the motivation for choosing Autotools over CMake?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163473758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163476118", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-163476118", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 163476118, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T03:30:44Z", "updated_at": "2015-12-10T03:30:44Z", "author_association": "CONTRIBUTOR", "body": "To be completely honest I didn't give that a lot of consideration; it's just because I've used autotools a bit in the past and it seems like the universal lowest-common-denominator build system.  Personally I'd prefer to use Bazel, but having a generic `./configure;make;make install` build method would be good for user adoption and distro packaging and such.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163476118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163476787", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-163476787", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 163476787, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T03:32:24Z", "updated_at": "2015-12-10T03:32:24Z", "author_association": "CONTRIBUTOR", "body": "libtool does make the autotools build pretty slick though; it correctly builds shared libraries with pkgconfig metadata on linux, macos, and probably a bunch of other platforms without further fiddling.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163476787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163479440", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-163479440", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 163479440, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T03:54:33Z", "updated_at": "2015-12-10T03:54:33Z", "author_association": "MEMBER", "body": "cmake does build visual studio files which might be useful.  However last time I tried to build Jsonnet on msvc, it crashed the compiler...  So probably best for people to use g++ on windows for now.\n\nDitto on bazel -- it's nice but I think we'll need the fallback and then we'll have to maintain both and that would be a pain.\n\nI have fixed the integration tests btw, merge master to get that.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163479440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163666822", "html_url": "https://github.com/google/jsonnet/issues/81#issuecomment-163666822", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/81", "id": 163666822, "user": {"login": "cristicbz", "id": 801328, "avatar_url": "https://avatars2.githubusercontent.com/u/801328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristicbz", "html_url": "https://github.com/cristicbz", "followers_url": "https://api.github.com/users/cristicbz/followers", "following_url": "https://api.github.com/users/cristicbz/following{/other_user}", "gists_url": "https://api.github.com/users/cristicbz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristicbz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristicbz/subscriptions", "organizations_url": "https://api.github.com/users/cristicbz/orgs", "repos_url": "https://api.github.com/users/cristicbz/repos", "events_url": "https://api.github.com/users/cristicbz/events{/privacy}", "received_events_url": "https://api.github.com/users/cristicbz/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T15:51:11Z", "updated_at": "2015-12-10T15:51:11Z", "author_association": "NONE", "body": "@sparkprime This doesn't seem to be fixed in pip. Doing `pip install jsonnet` installs 0.8.4, which breaks in the way described in the original issue.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163666822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163713849", "html_url": "https://github.com/google/jsonnet/issues/81#issuecomment-163713849", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/81", "id": 163713849, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T18:44:20Z", "updated_at": "2015-12-10T18:44:20Z", "author_association": "MEMBER", "body": "I verified, will do a new release to fix this.\n\nOn Thu, Dec 10, 2015 at 10:51 AM Cristi Cobzarenco notifications@github.com\nwrote:\n\n> @sparkprime https://github.com/sparkprime This doesn't seem to be fixed\n> in pip. Doing pip install jsonnet installs 0.8.4, which breaks in the way\n> described in the original issue.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/issues/81#issuecomment-163666822.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/163713849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164112156", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-164112156", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 164112156, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-12T05:29:08Z", "updated_at": "2015-12-12T05:29:08Z", "author_association": "MEMBER", "body": "Just remembered that we do actually have a bazel BUILD file now... :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164112156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164138726", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-164138726", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 164138726, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-12T10:50:50Z", "updated_at": "2015-12-12T10:50:50Z", "author_association": "CONTRIBUTOR", "body": "I'll get back to the autotools project in a few days, I think.  Might also try doing it with cmake to see how that goes.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164138726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164194881", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-164194881", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 164194881, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-12T21:22:40Z", "updated_at": "2015-12-12T21:22:40Z", "author_association": "MEMBER", "body": "The irony is Jsonnet is a great tool for describing builds :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164194881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164196093", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-164196093", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 164196093, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-12T21:45:30Z", "updated_at": "2015-12-12T21:45:30Z", "author_association": "CONTRIBUTOR", "body": "Heh, in that case [Repobuild](https://github.com/chrisvana/repobuild) might be an appealing build system!  (I'm not being serious, but you may find it amusing: it's like bazel, but uses JSON instead of a python-like dsl)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164196093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164366147", "html_url": "https://github.com/google/jsonnet/pull/85#issuecomment-164366147", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/85", "id": 164366147, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-14T07:21:45Z", "updated_at": "2015-12-14T07:21:45Z", "author_association": "MEMBER", "body": "From Repobuild's README:\n\n> Similar to Google's BUILD file system of old (gconfig + make)\n\nNow that's a bit of old history. :)\n\nSimilarly, Kythe also had its own custom [Campfire](https://github.com/google/kythe/blob/75b9fc4ec6e85bd0c30c89ae9474444003aa62f9/buildtools/CAMPFIRE) build system, which was also similar to BUILD but used JSON, before they fully switched to Bazel.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164366147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164920840", "html_url": "https://github.com/google/jsonnet/pull/74#issuecomment-164920840", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/74", "id": 164920840, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-15T22:43:31Z", "updated_at": "2015-12-15T22:43:31Z", "author_association": "MEMBER", "body": "I have rebased this patch and added pages to redirect users visiting the pages at the old URL to the new locations for the pages. I have all the pages locally.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164920840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164947845", "html_url": "https://github.com/google/jsonnet/pull/74#issuecomment-164947845", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/74", "id": 164947845, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-16T00:50:16Z", "updated_at": "2015-12-16T00:50:16Z", "author_association": "MEMBER", "body": "This is all good, you should merge it when you're comfortable doing so\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/164947845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/167317250", "html_url": "https://github.com/google/jsonnet/pull/89#issuecomment-167317250", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/89", "id": 167317250, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-26T11:08:46Z", "updated_at": "2015-12-26T11:08:46Z", "author_association": "MEMBER", "body": "I think it should be b = (o(f) = (\\false, _))\n\nWe also need to add rules for the versions of the reflection calls that ignore the hidden status at some point.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/167317250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/167830491", "html_url": "https://github.com/google/jsonnet/pull/89#issuecomment-167830491", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/89", "id": 167830491, "user": {"login": "oconnorr", "id": 8388126, "avatar_url": "https://avatars3.githubusercontent.com/u/8388126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnorr", "html_url": "https://github.com/oconnorr", "followers_url": "https://api.github.com/users/oconnorr/followers", "following_url": "https://api.github.com/users/oconnorr/following{/other_user}", "gists_url": "https://api.github.com/users/oconnorr/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnorr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnorr/subscriptions", "organizations_url": "https://api.github.com/users/oconnorr/orgs", "repos_url": "https://api.github.com/users/oconnorr/repos", "events_url": "https://api.github.com/users/oconnorr/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnorr/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-29T17:00:39Z", "updated_at": "2015-12-30T17:29:11Z", "author_association": "CONTRIBUTOR", "body": "According to the spec the o function has type String \u21c0 (Hidden \u00d7 Core) and Hidden = { :, ::, ::: }.  In particular false isn't a member of the type Hidden, so (o(f) = (\\false, _)) doesn't even make sense.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/167830491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/167964178", "html_url": "https://github.com/google/jsonnet/pull/89#issuecomment-167964178", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/89", "id": 167964178, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-30T09:16:45Z", "updated_at": "2015-12-30T09:16:45Z", "author_association": "MEMBER", "body": "You're right, it should be o(f) = (h, _) where h != ::\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/167964178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/169974826", "html_url": "https://github.com/google/jsonnet/pull/91#issuecomment-169974826", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/91", "id": 169974826, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T11:45:44Z", "updated_at": "2016-01-08T11:45:44Z", "author_association": "MEMBER", "body": "Thanks.  It'd be good to have a regression test for building with bazel.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/169974826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/169982119", "html_url": "https://github.com/google/jsonnet/pull/91#issuecomment-169982119", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/91", "id": 169982119, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T12:09:55Z", "updated_at": "2016-01-08T12:09:55Z", "author_association": "MEMBER", "body": "And setup.py for that matter...\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/169982119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/169994152", "html_url": "https://github.com/google/jsonnet/issues/90#issuecomment-169994152", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/90", "id": 169994152, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T12:59:12Z", "updated_at": "2016-01-08T12:59:12Z", "author_association": "MEMBER", "body": "Yeah this seems like a good idea.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/169994152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170118539", "html_url": "https://github.com/google/jsonnet/issues/96#issuecomment-170118539", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/96", "id": 170118539, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T20:40:48Z", "updated_at": "2016-01-08T20:40:48Z", "author_association": "MEMBER", "body": "Since this is a lazy language, the second a in \n\nlocal a = a && true;\n\nis actually referring recursively to the a that is being defined on the same line, so the infinite loop is expected behavior.\n\nYou can of course write one that terminates:\n\nlocal x = false && x\n\nIn this case the shortcut semantics for && prevents the x from being recursively evaluated.\n\nThis is the same as e.g. Haskell.  In fact I think even in C you can do int x = x + 1 although it's undefined behavior because rather than being a recursive definition, you're reading x before it's been initialized.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170118539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170119772", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-170119772", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 170119772, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T20:47:31Z", "updated_at": "2016-01-08T20:47:31Z", "author_association": "MEMBER", "body": "Try this on for size:\n\n```\n    merge(target, patch)::\n        if std.type(patch) == \"object\" then \n\n            local target_fields =\n                if std.type(target) == \"object\" then std.objectFields(target) else [];\n\n            local null_fields = [k for k in std.objectFields(patch) if patch[k] == null];\n            local both_fields = std.setUnion(target_fields, std.objectFields(patch));\n            {\n                [k]:\n                    if !std.objectHas(patch, k) then\n                        target[k]\n                    else if !std.objectHas(target, k) then\n                        patch[k]\n                    else\n                        util.merge(target[k], patch[k])\n                for k in std.setDiff(both_fields, null_fields)\n            }\n        else\n            patch\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170119772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170120364", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-170120364", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 170120364, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T20:50:39Z", "updated_at": "2016-01-08T20:50:39Z", "author_association": "MEMBER", "body": "Also, the reason you have some failing test cases is because you've changed std.jsonnet and the line numbers in the \"golden\" stacktraces for unrelated tests no-longer align.  To fix that, use refresh_golden.sh to rewrite the \"golden\" files with the new content (and sanity check with git diff).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170120364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170120780", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-170120780", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 170120780, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T20:52:50Z", "updated_at": "2016-01-08T20:52:50Z", "author_association": "MEMBER", "body": "Maybe this should be called mergePatch, and it really calls out for the diff equivalent as well, although not necessarily in this PR.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170120780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170124302", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-170124302", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 170124302, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T21:10:24Z", "updated_at": "2016-01-08T21:10:24Z", "author_association": "MEMBER", "body": "It looks like 7396 is the better RFC as it obsoletes 7386\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170124302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170142169", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-170142169", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 170142169, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T22:11:44Z", "updated_at": "2016-01-08T22:11:44Z", "author_association": "MEMBER", "body": "It looks like the pseudocode algorithm for applying a patch did not change between the three RFC revisions so the difference must be in the http parts.\n\nNice! this seems to work:\n\n```\n    merge(target, patch)::\n        if std.type(patch) == \"object\" then \n            local target_object =\n                if std.type(target) == \"object\" then target else {};\n\n            local target_fields =\n                if std.type(target_object) == \"object\" then std.objectFields(target_object) else [];\n\n            local null_fields = [k for k in std.objectFields(patch) if patch[k] == null];\n            local both_fields = std.setUnion(target_fields, std.objectFields(patch));\n\n            {\n                [k]:\n                    if !std.objectHas(patch, k) then\n                        target_object[k]\n                    else if !std.objectHas(target_object, k) then\n                        patch[k]\n                    else\n                        std.merge(target_object[k], patch[k]) tailstrict\n                for k in std.setDiff(both_fields, null_fields)\n            }\n        else\n            patch,\n```\n\nIt fixes all extra nulls except for the one in the last test case.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170142169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170150154", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-170150154", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 170150154, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T22:54:40Z", "updated_at": "2016-01-08T22:54:40Z", "author_association": "MEMBER", "body": "I think it will work with this as the inner block:\n\n```\n                    if !std.objectHas(patch, k) then\n                        target[k]\n                    else if !std.objectHas(target, k) then\n                        std.merge(null, patch[k])\n                    else\n                        std.merge(target[k], patch[k])\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170150154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170158924", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-170158924", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 170158924, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T23:50:20Z", "updated_at": "2016-01-08T23:50:20Z", "author_association": "MEMBER", "body": "I think that is equivalent since std.merge(null, patch[k]) evaluates to patch[k](always hits the else). The problem is with the else return patch branch. To conform to the spec we would have to walk the patch object and strip out all explictly null fields.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170158924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170159637", "html_url": "https://github.com/google/jsonnet/issues/96#issuecomment-170159637", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/96", "id": 170159637, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-08T23:55:34Z", "updated_at": "2016-01-08T23:55:34Z", "author_association": "MEMBER", "body": "I see that it is interpreted as a declaration and not a reassignment which is strange from my naive perspective as it seems like the language then must allow redecleration within a scope just not recursive decleration.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170159637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170182187", "html_url": "https://github.com/google/jsonnet/issues/83#issuecomment-170182187", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/83", "id": 170182187, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-09T02:24:48Z", "updated_at": "2016-01-09T02:24:48Z", "author_association": "MEMBER", "body": "Also adding a \"grammar\" to https://github.com/github/linguist would give syntax highlighting in github file view.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170182187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170211500", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-170211500", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 170211500, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-09T09:01:29Z", "updated_at": "2016-01-09T09:01:29Z", "author_association": "MEMBER", "body": "Nah std.merge(null, patch[k]) is recursive into patch[k]\n\nstd.merge(x, null) evaluates to null though\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170211500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170441822", "html_url": "https://github.com/google/jsonnet/issues/83#issuecomment-170441822", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/83", "id": 170441822, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-11T06:12:15Z", "updated_at": "2016-01-11T06:12:15Z", "author_association": "MEMBER", "body": "#23 tracks adding Jsonnet support to Linguist, and we sent a pull request github/linguist#2653, but at the time, there were not enough Jsonnet files in GitHub repositories.\n\nPerhaps we should revisit that PR in the near future.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/170441822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171014748", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-171014748", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 171014748, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-12T18:56:18Z", "updated_at": "2016-01-12T18:56:18Z", "author_association": "MEMBER", "body": "Ok I gotcha. I've updated the patch.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171014748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171119683", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-171119683", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 171119683, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-13T01:10:30Z", "updated_at": "2016-01-13T01:10:30Z", "author_association": "MEMBER", "body": "Looks like error.equality_function.jsonnet.golden needs updating\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171119683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171466401", "html_url": "https://github.com/google/jsonnet/issues/21#issuecomment-171466401", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/21", "id": 171466401, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-13T23:06:34Z", "updated_at": "2016-01-13T23:06:34Z", "author_association": "MEMBER", "body": "@oconnorr \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171466401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171469673", "html_url": "https://github.com/google/jsonnet/issues/21#issuecomment-171469673", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/21", "id": 171469673, "user": {"login": "oconnorr", "id": 8388126, "avatar_url": "https://avatars3.githubusercontent.com/u/8388126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnorr", "html_url": "https://github.com/oconnorr", "followers_url": "https://api.github.com/users/oconnorr/followers", "following_url": "https://api.github.com/users/oconnorr/following{/other_user}", "gists_url": "https://api.github.com/users/oconnorr/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnorr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnorr/subscriptions", "organizations_url": "https://api.github.com/users/oconnorr/orgs", "repos_url": "https://api.github.com/users/oconnorr/repos", "events_url": "https://api.github.com/users/oconnorr/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnorr/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-13T23:22:12Z", "updated_at": "2016-01-13T23:23:04Z", "author_association": "CONTRIBUTOR", "body": "Do you want the Jsonnet output to be dependent on or independent of the contents of the Olson time zone database that happens to be installed on the local system?\n\nIf independent, then you cannot do date/time conversions based on time zone (you are restricted to using UTC offsets), but you could write it in Jsonnet.\n\nIf dependent, then Jsonnet isn't hermetic and some operations need to be built-in.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171469673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171539777", "html_url": "https://github.com/google/jsonnet/pull/95#issuecomment-171539777", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/95", "id": 171539777, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-14T06:01:58Z", "updated_at": "2016-01-14T06:01:58Z", "author_association": "MEMBER", "body": "@sparkprime addressed comments and build is all green\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/171539777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173029285", "html_url": "https://github.com/google/jsonnet/issues/21#issuecomment-173029285", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/21", "id": 173029285, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-20T00:05:31Z", "updated_at": "2016-01-20T00:05:31Z", "author_association": "MEMBER", "body": "I can't remember who initially suggested this or what they wanted it for.  But, yes I think it would have to be UTC and static offsets only, otherwise it would no-longer be hermetic.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173029285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173687918", "html_url": "https://github.com/google/jsonnet/issues/72#issuecomment-173687918", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/72", "id": 173687918, "user": {"login": "jbeda", "id": 37310, "avatar_url": "https://avatars2.githubusercontent.com/u/37310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeda", "html_url": "https://github.com/jbeda", "followers_url": "https://api.github.com/users/jbeda/followers", "following_url": "https://api.github.com/users/jbeda/following{/other_user}", "gists_url": "https://api.github.com/users/jbeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeda/subscriptions", "organizations_url": "https://api.github.com/users/jbeda/orgs", "repos_url": "https://api.github.com/users/jbeda/repos", "events_url": "https://api.github.com/users/jbeda/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeda/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-21T19:46:07Z", "updated_at": "2016-01-21T19:46:07Z", "author_association": "CONTRIBUTOR", "body": "Looking at the lexer, it looks like this is supported but undocumented.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173687918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173774725", "html_url": "https://github.com/google/jsonnet/issues/72#issuecomment-173774725", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/72", "id": 173774725, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-22T01:50:55Z", "updated_at": "2016-01-22T01:50:55Z", "author_association": "MEMBER", "body": "Hmm yes it looks like I got partially through implementing it and then forgot about it.  I'll finish off the implementation, close this, and then work on the docs.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173774725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173775560", "html_url": "https://github.com/google/jsonnet/issues/72#issuecomment-173775560", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/72", "id": 173775560, "user": {"login": "jbeda", "id": 37310, "avatar_url": "https://avatars2.githubusercontent.com/u/37310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeda", "html_url": "https://github.com/jbeda", "followers_url": "https://api.github.com/users/jbeda/followers", "following_url": "https://api.github.com/users/jbeda/following{/other_user}", "gists_url": "https://api.github.com/users/jbeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeda/subscriptions", "organizations_url": "https://api.github.com/users/jbeda/orgs", "repos_url": "https://api.github.com/users/jbeda/repos", "events_url": "https://api.github.com/users/jbeda/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeda/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-22T01:57:16Z", "updated_at": "2016-01-22T01:57:16Z", "author_association": "CONTRIBUTOR", "body": "No hurries on my part.  I'm just working from the lexer on up and haven't hit the unimplemented parts yet.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173775560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173827285", "html_url": "https://github.com/google/jsonnet/issues/21#issuecomment-173827285", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/21", "id": 173827285, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-22T06:48:22Z", "updated_at": "2016-01-22T06:48:22Z", "author_association": "MEMBER", "body": "Could we make use of [cctz](https://github.com/google/cctz) for this?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173827285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173941587", "html_url": "https://github.com/google/jsonnet/issues/21#issuecomment-173941587", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/21", "id": 173941587, "user": {"login": "oconnorr", "id": 8388126, "avatar_url": "https://avatars3.githubusercontent.com/u/8388126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnorr", "html_url": "https://github.com/oconnorr", "followers_url": "https://api.github.com/users/oconnorr/followers", "following_url": "https://api.github.com/users/oconnorr/following{/other_user}", "gists_url": "https://api.github.com/users/oconnorr/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnorr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnorr/subscriptions", "organizations_url": "https://api.github.com/users/oconnorr/orgs", "repos_url": "https://api.github.com/users/oconnorr/repos", "events_url": "https://api.github.com/users/oconnorr/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnorr/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-22T14:56:33Z", "updated_at": "2016-01-22T14:56:33Z", "author_association": "CONTRIBUTOR", "body": "Using cctz, or any other tool for dealing with civil time, would make Jsonnet output dependent on the contents of /usr/share/zoneinfo whose content varies from machine to machine and from month to month.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/173941587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180063220", "html_url": "https://github.com/google/jsonnet/issues/100#issuecomment-180063220", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/100", "id": 180063220, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T21:38:13Z", "updated_at": "2016-02-04T21:38:13Z", "author_association": "MEMBER", "body": "Also weird:\n\n``` javascript\n{\n    identity(obj)::\n        function(obj) obj,\n\n    addOne(obj):\n        obj + 1,\n\n    bind(func1, func2)::\n        function(obj) func2(func1(obj)),\n\n    \"1\": self.bind(self.identity, self.addOne)(1),\n    \"2\": self.bind(self.addOne, self.identity)(1),\n}\n```\n\ncase 1 gives:\n\n```\nRUNTIME ERROR: Binary operator + requires matching types, got function and double.\n        libmonad.jsonnet:6:9-14 function <func2>\n        libmonad.jsonnet:9:23-39        function <anonymous>\n        libmonad.jsonnet:11:10-49       object <anonymous>\n        During manifestation\n```\n\ncase 2 gives:\n\n```\nRUNTIME ERROR: Couldn't manifest function in JSON output.\n        libmonad.jsonnet:(1:1)-(16:1)   object <anonymous>\n        During manifestation\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180063220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180077782", "html_url": "https://github.com/google/jsonnet/issues/100#issuecomment-180077782", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/100", "id": 180077782, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T22:23:27Z", "updated_at": "2016-02-04T22:23:27Z", "author_association": "MEMBER", "body": "Why\n\n```\n    identity(obj)::\n        function(obj) obj,\n```\n\nand not\n\n```\n    identity(obj):: obj\n```\n\nor\n\n```\n    identity::\n        function(obj) obj,\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180077782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180079352", "html_url": "https://github.com/google/jsonnet/issues/100#issuecomment-180079352", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/100", "id": 180079352, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T22:28:07Z", "updated_at": "2016-02-04T22:28:07Z", "author_association": "MEMBER", "body": "ya that's definitely what I meant. thanks. Both of these still return an error\n\n``` javascript\n{\n    identity(obj)::\n        obj,\n\n    addOne(obj):\n        obj + 1,\n\n    bind1(func1, func2)::\n        function(obj) func2(func1(obj)),\n\n    bind2(func1, func2)::\n        function(obj)\n            local tmp1 = func1(obj);\n            local tmp2 = func2(tmp1);\n            tmp2,\n\n    \"1\": self.bind1(self.identity, self.addOne)(1),\n    \"2\": self.bind2(self.identity, self.addOne)(1),\n}\n```\n\nError:\n\n```\nRUNTIME ERROR: Couldn't manifest function in JSON output.\n        libmonad.jsonnet:(1:1)-(16:1)   object <anonymous>\n        During manifestation\n```\n\nIs that correct?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180079352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180081947", "html_url": "https://github.com/google/jsonnet/issues/100#issuecomment-180081947", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/100", "id": 180081947, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T22:33:00Z", "updated_at": "2016-02-04T22:33:00Z", "author_association": "MEMBER", "body": "and a third:\n\n``` javascript\n...\n    \"3\": self.bind2(self.identity, self.addOne)(1)(1),\n}\n```\n\ncalling what the previous error said was a function, results in:\n\n```\nRUNTIME ERROR: Only functions can be called, got double\n        libmonad.jsonnet:19:10-53       object <anonymous>\n        During manifestation\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180081947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180083464", "html_url": "https://github.com/google/jsonnet/issues/100#issuecomment-180083464", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/100", "id": 180083464, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T22:37:04Z", "updated_at": "2016-02-04T22:37:04Z", "author_association": "MEMBER", "body": "You only have one colon on addOne, but in this case the stacktrace is bad as it did not point you at addOne.  I'll look into that quickly...\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180083464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180087308", "html_url": "https://github.com/google/jsonnet/issues/100#issuecomment-180087308", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/100", "id": 180087308, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T22:45:30Z", "updated_at": "2016-02-04T22:45:30Z", "author_association": "MEMBER", "body": "Awesome! Works great. Thanks for the extra pair of eyes.\n\n``` console\n$ cat libmonad.jsonnet \n{\n    identity(obj)::\n        obj,\n\n    addOne(obj)::\n        obj + 1,\n\n    bind1(func1, func2)::\n        function(obj) func2(func1(obj)),\n\n    bind2(func1, func2)::\n        function(obj)\n            local tmp1 = func1(obj);\n            local tmp2 = func2(tmp1);\n            tmp2,\n\n    \"1\": self.bind1(self.identity, self.addOne)(1),\n    \"2\": self.bind1(self.addOne, self.identity)(1),\n    \"3\": self.bind2(self.identity, self.addOne)(1),\n    \"4\": self.bind2(self.addOne, self.identity)(1),\n}\n$ jsonnet libmonad.jsonnet\n{\n   \"1\": 2,\n   \"2\": 2,\n   \"3\": 2,\n   \"4\": 2\n}\n```\n\nSo the error was coming from trying to serialize addOne where it was declared since it wasn't marked private...\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180087308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180097054", "html_url": "https://github.com/google/jsonnet/issues/100#issuecomment-180097054", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/100", "id": 180097054, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T23:11:35Z", "updated_at": "2016-02-04T23:11:35Z", "author_association": "MEMBER", "body": "s/private/hidden :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180097054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180097747", "html_url": "https://github.com/google/jsonnet/issues/100#issuecomment-180097747", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/100", "id": 180097747, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T23:15:05Z", "updated_at": "2016-02-04T23:15:05Z", "author_association": "MEMBER", "body": "I just committed a fix for the stacktrace, it now refers to the line containing the obj + 1 which is not exactly perfect, but other than pointing to the (obj) tokens at which I don't currently record location information, it's the best I can do.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/180097747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/181537461", "html_url": "https://github.com/google/jsonnet/issues/101#issuecomment-181537461", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/101", "id": 181537461, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-08T19:47:44Z", "updated_at": "2016-02-08T19:49:14Z", "author_association": "MEMBER", "body": "I added parsing support here:\n\nhttps://github.com/google/jsonnet/commit/26bb52e7d7b9d6d842168cdd1fbcf4fa39e9f8e5\n\nI'm deciding whether this should be implemented in the vm or desugarring\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/181537461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/183702601", "html_url": "https://github.com/google/jsonnet/issues/103#issuecomment-183702601", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/103", "id": 183702601, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-13T16:55:03Z", "updated_at": "2016-02-13T16:55:03Z", "author_association": "MEMBER", "body": "Calling in @oconnorr for Nix fact checking purposes :)\n\nFirstly I hesitate to add anything more to that page that isn't 1) completely objective 2) absolutely verifiably true.  Most comparison of programming languages tends towards rationalizations of deep-seated ideologies and is not usually very productive.  And of course the aim is not to bash Nix but to draw attention to the differences in a balanced way.  But that said, maybe we could add more discussion on the page.\n\nThe languages are similar in that they're elegant, small, powerful, lazy, and have referential transparency.  However the OOP semantics in Jsonnet completely changes the way programs are typically written.  The laziness in Jsonnet is actually under-emphasized whereas in Nix it is essential for getting things done.\n\nYou're right you can build OOP on top of Nix as a library, and we even did that in the early days of Jsonnet as we were considering compiling Jsonnet to Nix.  @oconnorr packaged that up and released it somewhere.  But that's not a perfect user experience and is more interesting as an exercise than a soild foundation.  Also, Jsonnet supports mixins and we never built that on Nix.  I'm not certain it's feasible although I would not be surprised if it was.  I've had a lot of experience with OOP frameworks on top of other languages (C, Lua, Javascript) but they never feel natural, they have a tendency to be very complex (in a manner that is not hidden when debugging / looking at stack traces, and you have to be disciplined to use them.\n\nThe other thing is being JSON-based.  It's not just the syntax, there are big design compromises in Jsonnet in order to be an extension of JSON, e.g. supporting only doubles and not distinguishing between maps and objects.  Another design goal was to be familiar to Javascript and Python programmers.  We only deviated from this if we had a good reason.  Nix has a functional \"look and feel\" and will appeal to functional programmers far more than Python programmers.  On the other hand if you squint a bit, Jsonnet doesn't look so different from Python code (although obviously the semantics are very different).  No matter how much you squint, Nix does not look like Python.\n\nThe heritage of Jsonnet goes back a long time within Google and unfortunately there is not a lot of public information I can share with you. You might be interested in http://alexandria.tue.nl/extra1/afstversl/wsk-i/bokharouss2008.pdf but I would not call that an authoritative document.  OOP is an attractive paradigm for config because of the tendency to derive configs for different environments, locations, or purposes from \"master\" templates with the ability to override arbitrary details.  And hermiticity is required for repeatability, which when combined with all the structured data manipulation going on, leads one towards a functional language that also has OOP as a core component.  Nix is clearly underpinned by similar philosophies but the evolution is separate and the end result is quite different.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/183702601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/183767456", "html_url": "https://github.com/google/jsonnet/issues/103#issuecomment-183767456", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/103", "id": 183767456, "user": {"login": "roconnor", "id": 852967, "avatar_url": "https://avatars3.githubusercontent.com/u/852967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roconnor", "html_url": "https://github.com/roconnor", "followers_url": "https://api.github.com/users/roconnor/followers", "following_url": "https://api.github.com/users/roconnor/following{/other_user}", "gists_url": "https://api.github.com/users/roconnor/gists{/gist_id}", "starred_url": "https://api.github.com/users/roconnor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roconnor/subscriptions", "organizations_url": "https://api.github.com/users/roconnor/orgs", "repos_url": "https://api.github.com/users/roconnor/repos", "events_url": "https://api.github.com/users/roconnor/events{/privacy}", "received_events_url": "https://api.github.com/users/roconnor/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-13T22:51:06Z", "updated_at": "2016-02-13T22:51:06Z", "author_association": "COLLABORATOR", "body": "I feel some of reasons for Jsonnet inlcude\n- Divorcing Nix the language from Nix the build system is slightly tricky.\n- Being a strict superset of JSON makes migrating existing JSON configurations easy and comfortable\n- Lots of programmers like OO semantics even though they are terrible.  At least configuration management is one of the few situations where using OO programming is actually useful.  Even Nixpkgs uses OO semantics, even if they fake them in a purely functional language.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/183767456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/183776346", "html_url": "https://github.com/google/jsonnet/issues/103#issuecomment-183776346", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/103", "id": 183776346, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-14T00:04:20Z", "updated_at": "2016-02-14T00:04:20Z", "author_association": "NONE", "body": "Those arguments all make a lot of sense. I appreciate you both writing them out for me, and think that a more profound acknowledgment of the similarities to Nix, and the deliberate decision to make jsonnet in spite of those, would add a lot of value to the comparisons page. When I first saw it, my reaction was \"one of these is waaaaay more similar than the others, but the discussion of the differences feels superficial\". I imagine others who already know Nix might have similar reactions.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/183776346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/183981497", "html_url": "https://github.com/google/jsonnet/issues/103#issuecomment-183981497", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/103", "id": 183981497, "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-14T21:35:18Z", "updated_at": "2016-02-14T21:35:35Z", "author_association": "CONTRIBUTOR", "body": "Is there code shared anywhere for that earlier nix-based jsonnet implementation?  I wouldn't expect it to be up to the current spec or anything, I just think it would be interesting to read over.\n\nAlso I'm particularly fascinated by that paper about GCLViewer; I had no idea that there was anything publicly released that discussed GCL!  I have been contemplating trying to implement something similar for jsonnet, but at the moment I'm not entirely sure where to begin with such a project.  \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/183981497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/184024420", "html_url": "https://github.com/google/jsonnet/issues/103#issuecomment-184024420", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/103", "id": 184024420, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-15T01:58:53Z", "updated_at": "2016-02-15T01:58:53Z", "author_association": "MEMBER", "body": "No it never got past the stage of assessing feasibility.  In fact the main thing that killed it was lack of floating point, which wouldn't really work with JSON.  The OO library is out there somewhere, @roconnor can tell you where :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/184024420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185422593", "html_url": "https://github.com/google/jsonnet/pull/106#issuecomment-185422593", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/106", "id": 185422593, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-17T21:46:47Z", "updated_at": "2016-02-17T21:46:47Z", "author_association": "MEMBER", "body": "Just pushed support for `[:4]` and `[4:]` notations\n\n``` console\n$  jsonnet git:(slice) \u2717 cat exp.jsonnet \nlocal arr = std.range(0, 10);\n{\n    foo: arr[5:7],\n    bar: arr[:7],\n    baz: arr[5:],\n}\n$  jsonnet git:(slice) \u2717 ./jsonnet exp.jsonnet \n{\n   \"bar\": [\n      0,\n      1,\n      2,\n      3,\n      4,\n      5,\n      6\n   ],\n   \"baz\": [\n      5,\n      6,\n      7,\n      8,\n      9,\n      10\n   ],\n   \"foo\": [\n      5,\n      6\n   ]\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185422593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185427593", "html_url": "https://github.com/google/jsonnet/pull/106#issuecomment-185427593", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/106", "id": 185427593, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-17T22:02:28Z", "updated_at": "2016-02-17T22:02:28Z", "author_association": "MEMBER", "body": "This doesn't support step parameter yet.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185427593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185804837", "html_url": "https://github.com/google/jsonnet/issues/107#issuecomment-185804837", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/107", "id": 185804837, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-18T16:35:02Z", "updated_at": "2016-02-18T16:35:02Z", "author_association": "MEMBER", "body": "Hard in Jsonnet, easy as a builtin, but the trick is to make sure every language that someone might want to implement Jsonnet in (and therefore have to provide an implementation for each of the builtins) has a native regular expression library with exactly the same regex syntax and semantics.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185804837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185885743", "html_url": "https://github.com/google/jsonnet/issues/107#issuecomment-185885743", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/107", "id": 185885743, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-18T19:41:52Z", "updated_at": "2016-02-18T19:41:52Z", "author_association": "MEMBER", "body": "PCRE seems to be implemented in many languages. Perhaps it would be better to implement this as a native extension (#108) to the language and not part of the core.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185885743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185890945", "html_url": "https://github.com/google/jsonnet/issues/107#issuecomment-185890945", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/107", "id": 185890945, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-18T19:59:07Z", "updated_at": "2016-02-18T19:59:07Z", "author_association": "MEMBER", "body": "Does it support unicode typically?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185890945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185891677", "html_url": "https://github.com/google/jsonnet/issues/108#issuecomment-185891677", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/108", "id": 185891677, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-18T20:01:00Z", "updated_at": "2016-02-18T20:01:00Z", "author_association": "MEMBER", "body": "That's very specific to the implementation language (C++).\n\nBut we could do is something like\nstd.builtin(\"foo\")\nand require the application code linking the jsonnet library to provide callbacks (just like we already allow import callbacks for doing I/O).\n\nThere is already an AST node for builtins, but it is only introduced during desugaring, it is not part of the actual syntax of the language.  We could make it part of the actual syntax and allow adding more builtins as well.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/185891677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/186659837", "html_url": "https://github.com/google/jsonnet/pull/106#issuecomment-186659837", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/106", "id": 186659837, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-20T18:01:20Z", "updated_at": "2016-02-20T18:01:20Z", "author_association": "MEMBER", "body": "Good work!  Sorry it took me a few days to get around to reviewing it.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/186659837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/187338263", "html_url": "https://github.com/google/jsonnet/pull/106#issuecomment-187338263", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/106", "id": 187338263, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-22T19:35:13Z", "updated_at": "2016-02-22T19:35:13Z", "author_association": "MEMBER", "body": "Ok, I need to implement the python behavior in std.slice now.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/187338263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/187956147", "html_url": "https://github.com/google/jsonnet/issues/104#issuecomment-187956147", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/104", "id": 187956147, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-23T23:05:55Z", "updated_at": "2016-02-23T23:05:55Z", "author_association": "MEMBER", "body": "ugh, need a better way of doing this\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/187956147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/187996024", "html_url": "https://github.com/google/jsonnet/pull/106#issuecomment-187996024", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/106", "id": 187996024, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-24T01:06:46Z", "updated_at": "2016-02-24T01:06:46Z", "author_association": "MEMBER", "body": "I've implemented python behavior for all positive value (index, end, step) inputs. I think it's reasonable to support negative inputs later on.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/187996024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/188035482", "html_url": "https://github.com/google/jsonnet/pull/106#issuecomment-188035482", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/106", "id": 188035482, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-24T03:05:12Z", "updated_at": "2016-02-24T03:05:12Z", "author_association": "MEMBER", "body": "@sparkprime addressed all review comments.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/188035482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/189560660", "html_url": "https://github.com/google/jsonnet/issues/112#issuecomment-189560660", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/112", "id": 189560660, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-27T02:43:37Z", "updated_at": "2016-02-27T02:43:37Z", "author_association": "MEMBER", "body": "Heh, looks like I accidentally fixed this in my reformatter branch.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/189560660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/189562964", "html_url": "https://github.com/google/jsonnet/issues/112#issuecomment-189562964", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/112", "id": 189562964, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-27T02:52:26Z", "updated_at": "2016-02-27T02:52:26Z", "author_association": "MEMBER", "body": "Yeah there's code to reset it in the branch here \nhttps://github.com/google/jsonnet/blob/fmt/core/parser.cpp#L582\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/189562964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/189573313", "html_url": "https://github.com/google/jsonnet/pull/111#issuecomment-189573313", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/111", "id": 189573313, "user": {"login": "akazakov", "id": 47600, "avatar_url": "https://avatars1.githubusercontent.com/u/47600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akazakov", "html_url": "https://github.com/akazakov", "followers_url": "https://api.github.com/users/akazakov/followers", "following_url": "https://api.github.com/users/akazakov/following{/other_user}", "gists_url": "https://api.github.com/users/akazakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/akazakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akazakov/subscriptions", "organizations_url": "https://api.github.com/users/akazakov/orgs", "repos_url": "https://api.github.com/users/akazakov/repos", "events_url": "https://api.github.com/users/akazakov/events{/privacy}", "received_events_url": "https://api.github.com/users/akazakov/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-27T03:57:21Z", "updated_at": "2016-02-27T03:57:21Z", "author_association": "NONE", "body": ":shipit: :+1: \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/189573313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/190367453", "html_url": "https://github.com/google/jsonnet/pull/111#issuecomment-190367453", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/111", "id": 190367453, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-29T20:19:34Z", "updated_at": "2016-02-29T20:19:34Z", "author_association": "MEMBER", "body": "Tests can also be written as functions. e.g. these are valid:\n\n``` python\nlocal expect = (import \"stdlib/truth.jsonnet\").expect;\nlocal expectations = (import \"stdlib/truth.jsonnet\").expectations;\n\n{\n    \"Test test function passing\": function()\n        local a = 1 + 2;\n        expectations([\n            expect()\n                .that(a)\n                .hasType(\"number\"),\n            expect()\n                .that(a)\n                .isEqualTo(3),\n        ]),\n\n    \"Test test function failing\"():\n        local a = 1 + 2;\n        expect()\n            .that(a)\n            .isEqualTo(4),\n}\n```\n\nOne huge drawback with this approach is that it's still impossible to test routines that throw exceptions\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/190367453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/190367968", "html_url": "https://github.com/google/jsonnet/pull/111#issuecomment-190367968", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/111", "id": 190367968, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-29T20:20:39Z", "updated_at": "2016-02-29T20:20:39Z", "author_association": "MEMBER", "body": "This is definitely interesting.  In the case of the arith_bools it has more than tripled in size.  Ideally there would have been a reduction in size.  For the sake of argument, maybe it could look like this:\n\n```\n{\n    \"Test !\": unit.SimpleInputOutput {\n        cases: [\n            self.Case(!false, true),\n            self.Case(!true, false),\n            ...\n        ]\n    }\n}\n```\n\nI also think we should try to use this framework for something more \"real\".  How about your Kubernetes stuff?  If not, there is a whole bunch of abstract templates in micromanage we can use.\n\nI think there's a big win for unit testing library abstractions (whether mixins or functions) that check that they can be instantiated into either something specific, or at least into something that has a set of expected properties.  It would help document their interfaces as well as allowing refactoring with confidence.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/190367968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/190832663", "html_url": "https://github.com/google/jsonnet/issues/115#issuecomment-190832663", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/115", "id": 190832663, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-01T17:56:43Z", "updated_at": "2016-03-01T17:56:43Z", "author_association": "MEMBER", "body": "FIxed\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/190832663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191044469", "html_url": "https://github.com/google/jsonnet/pull/117#issuecomment-191044469", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/117", "id": 191044469, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-02T03:56:31Z", "updated_at": "2016-03-02T03:56:31Z", "author_association": "MEMBER", "body": "My comment would be that it seems like a lot of change (and modifies very internal components). Unlike multi this could be implemented in a couple lines of jsonnet and -S:\n\n```\n{\n    yamlStream(arr)::\n        std.foldl(function(old, obj) old + \"---\\n%s\\n...\\n\" % [obj], arr, \"\"),\n}\n```\n\nThe requirement seems very similar to the requirement to output .ini, but the implementation and api is quite different.\n\nI'll call a \"finalizer\" a single final function that get's called on the output of a jsonnet program. I've seen three use cases for \"finalizers\" so far:\n1. yamlStream\n2. manifestIni\n3. truth.run (the unit testing main).\n\nI'm sure there will be more. Is it worth it or possible to design a reasonable and generic API for finalizers? That said, if the api existed, it would be easy to move the cli API over to it and even the c API deprecating the functions added here.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191044469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191168714", "html_url": "https://github.com/google/jsonnet/pull/117#issuecomment-191168714", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/117", "id": 191168714, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-02T10:08:47Z", "updated_at": "2016-03-02T10:08:47Z", "author_association": "MEMBER", "body": "What is the use case for this?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191168714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191537642", "html_url": "https://github.com/google/jsonnet/pull/117#issuecomment-191537642", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/117", "id": 191537642, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-03T02:01:42Z", "updated_at": "2016-03-03T02:01:42Z", "author_association": "MEMBER", "body": "@davidzchen The use case is basically Kubernetes.  But the YAML stream format is a standard.\n\n@mikedanese Good point, this could at least be implemented in the desugarer and by enabling -S with -y.\n\nWhat you're calling a finalizer is exactly what I've been calling manifestation though I think.  It's a final step that converts a value to a string.  OK the semantics actually says convert a Jsonnet value to a JSON value by forcing thunks, bindings objects, and stripping hidden fields.  But It could just as easily say \"call the std.manifestJson function and get a string\".\n\nSo should we be able to specify a jsonnet file on the commandline and that would define the manifestation function?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191537642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191538465", "html_url": "https://github.com/google/jsonnet/pull/117#issuecomment-191538465", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/117", "id": 191538465, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-03T02:04:45Z", "updated_at": "2016-03-03T02:04:55Z", "author_association": "MEMBER", "body": "```\njsonnet --manifest=std.manifestJson -e \"{}\"  # Also the default.\n{}\n```\n\n```\n$ jsonnet --manifest=3 -e \"{}\"\n3\n```\n\n```\n$ jsonnet --manifest=std.manifestYamlStream -e '[{}, {}]'\n---\n{}\n---\n{}\n...\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191538465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191541826", "html_url": "https://github.com/google/jsonnet/pull/117#issuecomment-191541826", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/117", "id": 191541826, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-03T02:10:48Z", "updated_at": "2016-03-03T02:10:48Z", "author_association": "MEMBER", "body": "So you desugar jsonnet --manifest=M -e E to M(E)\nThis is an error if it doesn't return a string and the string is not escaped in any way.\n\nThe old -S behavior is now --manifest=function(x)x\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/191541826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/192562197", "html_url": "https://github.com/google/jsonnet/issues/119#issuecomment-192562197", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/119", "id": 192562197, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-05T03:37:28Z", "updated_at": "2016-03-05T03:37:28Z", "author_association": "MEMBER", "body": "So you're not really asking to omit the function keyword, right?  You're asking for a way to write the following in half as much space:\n\n```\nlocal func(T)\n    local a = T.a, b = T.b, c = T.c;\n    a + b + c;\nfunc({ a: 1, b: 2, c: 3 })\n```\n\nOne thing I've realized recently is that people want to use functions a lot more than expected.  And in the design they are pretty rudimentary (compared to other languages), with not much sugar to encourage conciseness.\n\nI did for a while flirt with the idea of allowing func{ a: 1, b: 2, c: 3 } as in Lua.  But in Jsonnet that makes it quite hard to see whether func is indeed a func or in fact an object being extended.  So I think the parens have to stay.\n\nOne option is to add something like Python named variables and kwargs\n\n```\nlocal func(a, b, c)\n    a + b + c;\nfunc(a=1, b=2, c=3)\n```\n\n```\nfunc(**{ a: 1, b: 2, c: 3 })\n```\n\n\"Borrow from Python\" has been a good default in other areas.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/192562197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/192730572", "html_url": "https://github.com/google/jsonnet/issues/119#issuecomment-192730572", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/119", "id": 192730572, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-05T20:39:57Z", "updated_at": "2016-03-05T20:39:57Z", "author_association": "MEMBER", "body": "@oconnorr as the word \"nix\" was mentioned\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/192730572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/192902310", "html_url": "https://github.com/google/jsonnet/pull/117#issuecomment-192902310", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/117", "id": 192902310, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-06T14:51:27Z", "updated_at": "2016-03-06T14:51:27Z", "author_association": "MEMBER", "body": "Here's a challenge with this though:  If you do \n\n```\nlocal X = {\n    a: 1,\n    b: 3/self.a,\n};\n\n{\n    A: X {\n        a: 1,\n    },\n    B: X {\n        a: 0,\n    },\n    C: X {\n        a: 2,\n    },\n}\n```\n\nThen you get\n\n```\nRUNTIME ERROR: Division by zero.\n        test.jsonnet:3:8-15     object <X>\n        test.jsonnet:(10:8)-(12:5)      object <anonymous>\n        During manifestation\n```\n\nWhich has the very useful piece of contextual information test.jsonnet:(10:8)-(12:5) that lets us know where we instantiated the bad X from.\n\nHowever if you use std.manifestJson (which I just wrote), you get:\n\n```\ndcunnin@tyrion:~$ jsonnet -eS 'std.manifestJson(import \"test.jsonnet\")'\nRUNTIME ERROR: Division by zero.\n        test.jsonnet:3:8-15     object <anonymous>\n        std.jsonnet:744:50-53   thunk <v>\n        std.jsonnet:720:16      thunk <a>\n        std.jsonnet:954:29      thunk <x>\n        std.jsonnet:954:20-30   thunk <ta>\n        std.jsonnet:956:33-34   thunk <a>\n        std.jsonnet:956:13-39   function <anonymous>\n        std.jsonnet:720:16-24   function <aux>\n        std.jsonnet:744:46-84   thunk <array_element>\n        std.jsonnet:148:21-26   thunk <a>\n        ...\n        std.jsonnet:954:20-30   thunk <ta>\n        std.jsonnet:956:33-34   thunk <a>\n        std.jsonnet:956:13-39   function <anonymous>\n        std.jsonnet:148:21-34   function <aux>\n        std.jsonnet:153:17-62   function <aux>\n        std.jsonnet:157:13-33   function <anonymous>\n        std.jsonnet:747:17-35   function <aux>\n        std.jsonnet:748:9-26    function <anonymous>\n        std.jsonnet:716:27-59   function <anonymous>\n        <cmdline>:1:1-39\n```\n\nWhich lacks that information.\n\nThis problem already existing with std.manifestPython of course but JSON is the common case here.\n\nSome solutions:\n\n1) Proceed with PR as is (at least for now)\n\n2) Make std.manifestJson a builtin that calls the current manifestation code (this is a bit different to just std.toString(v) because it escapes a string at the top level and also introduces newlines and indenting).\n\n3) Allow catching the error and adding contextual information to it at each recursion point.  This also makes it possible to unit test libraries that are intended to fail.  Then the error would look like\nRUNTIME ERROR: Division by zero while manifesting $.B.b\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/192902310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/192927781", "html_url": "https://github.com/google/jsonnet/pull/117#issuecomment-192927781", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/117", "id": 192927781, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-06T16:33:31Z", "updated_at": "2016-03-06T16:33:31Z", "author_association": "MEMBER", "body": "Catching and rethrowing would have to preserve the stack trace as well, so there's some design work there.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/192927781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193343700", "html_url": "https://github.com/google/jsonnet/issues/119#issuecomment-193343700", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/119", "id": 193343700, "user": {"login": "oconnorr", "id": 8388126, "avatar_url": "https://avatars3.githubusercontent.com/u/8388126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnorr", "html_url": "https://github.com/oconnorr", "followers_url": "https://api.github.com/users/oconnorr/followers", "following_url": "https://api.github.com/users/oconnorr/following{/other_user}", "gists_url": "https://api.github.com/users/oconnorr/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnorr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnorr/subscriptions", "organizations_url": "https://api.github.com/users/oconnorr/orgs", "repos_url": "https://api.github.com/users/oconnorr/repos", "events_url": "https://api.github.com/users/oconnorr/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnorr/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-07T16:56:46Z", "updated_at": "2016-03-07T16:56:46Z", "author_association": "CONTRIBUTOR", "body": "I think pattern matching is a great thing, but there are some design choices to be made.\n\nNix has a moderately complex syntax for pattern matching on tuples\n\n{ foo({ a, b }) = a + b }\n\nDoes foo require an object whose set of fields is exactly a and b, or does it always slice an accept any object with at least a and b fields?  Nix supports both with special syntax for the second case.\n\nIs the binding lazy so that even if the parameter doesn't have one of the fields, if that field is never used in the computation then maybe that is okay?\n\nNix also has this ? syntax in the pattern which fills in fields with default values in case the parameter is missing the named field.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193343700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193358150", "html_url": "https://github.com/google/jsonnet/issues/119#issuecomment-193358150", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/119", "id": 193358150, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-07T17:24:35Z", "updated_at": "2016-03-07T17:24:35Z", "author_association": "NONE", "body": "@sparkprime yeah, not looking to omit the fairly heavyweight function keyword (although I would love that too :smile:). I'm fine with the python splat operator, but with the considerations @oconnorr raises. The only thing I could see us losing from treating it as a splat, rather than an explicit dict, is the sort of thing we do fairly often which is to peel a couple of arguments (possibly with defaults) out of a dict being passed in, but also passing the dict through wholesale to another call.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193358150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193404366", "html_url": "https://github.com/google/jsonnet/issues/119#issuecomment-193404366", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/119", "id": 193404366, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-07T19:18:10Z", "updated_at": "2016-03-07T19:18:10Z", "author_association": "MEMBER", "body": "How do you do that (peel off and pass the whole dict through) in Nix?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193404366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193404891", "html_url": "https://github.com/google/jsonnet/issues/119#issuecomment-193404891", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/119", "id": 193404891, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-07T19:19:11Z", "updated_at": "2016-03-07T19:19:31Z", "author_association": "NONE", "body": "oh, sorry.\n\n``` nix\n{\n  foo = { bar, baz, ... }@foo: doSomethingWith [ bar baz ] (someOtherFunction foo);\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193404891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193512521", "html_url": "https://github.com/google/jsonnet/issues/72#issuecomment-193512521", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/72", "id": 193512521, "user": {"login": "devth", "id": 86107, "avatar_url": "https://avatars1.githubusercontent.com/u/86107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devth", "html_url": "https://github.com/devth", "followers_url": "https://api.github.com/users/devth/followers", "following_url": "https://api.github.com/users/devth/following{/other_user}", "gists_url": "https://api.github.com/users/devth/gists{/gist_id}", "starred_url": "https://api.github.com/users/devth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devth/subscriptions", "organizations_url": "https://api.github.com/users/devth/orgs", "repos_url": "https://api.github.com/users/devth/repos", "events_url": "https://api.github.com/users/devth/events{/privacy}", "received_events_url": "https://api.github.com/users/devth/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-07T23:54:30Z", "updated_at": "2016-03-07T23:54:30Z", "author_association": "CONTRIBUTOR", "body": "Would be great to get this released :+1: \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193512521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193577401", "html_url": "https://github.com/google/jsonnet/issues/120#issuecomment-193577401", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/120", "id": 193577401, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-08T02:58:06Z", "updated_at": "2016-03-08T02:58:06Z", "author_association": "MEMBER", "body": "Doing what you did on the Go side is probably good enough: \"Expected an identifier but got a complex expression\"\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193577401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193896359", "html_url": "https://github.com/google/jsonnet/issues/121#issuecomment-193896359", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/121", "id": 193896359, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-08T18:10:16Z", "updated_at": "2016-03-08T18:10:16Z", "author_association": "MEMBER", "body": "Probably the code is doing x[i] for i in std.range(0, std.length({a: \"foo\"})} and length of an object is the number of keys.  Best thing to do right now is to put an explicit check in that it's an array and not an object.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193896359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193988558", "html_url": "https://github.com/google/jsonnet/issues/113#issuecomment-193988558", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/113", "id": 193988558, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-08T22:09:40Z", "updated_at": "2016-03-08T22:09:40Z", "author_association": "MEMBER", "body": "To recap from the offline discussion, @oconnorr brought up the point that having negative indices often results in error-prone code and that it would be better to not support them. I think that is a valid point and am also in favor in not adding negative indices.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193988558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193997590", "html_url": "https://github.com/google/jsonnet/issues/123#issuecomment-193997590", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/123", "id": 193997590, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-08T22:27:28Z", "updated_at": "2016-03-08T22:27:28Z", "author_association": "MEMBER", "body": "@oconnorr @mikedanese @davidzchen \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/193997590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/194146233", "html_url": "https://github.com/google/jsonnet/issues/109#issuecomment-194146233", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/109", "id": 194146233, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-09T07:11:16Z", "updated_at": "2016-03-09T07:11:16Z", "author_association": "MEMBER", "body": "On debian/ubuntu I think having a ppa is an advantage, although pip install jsonnet works pretty well for the Python case.  I don't know much about mac.  Is homebrew sufficient?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/194146233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/194585199", "html_url": "https://github.com/google/jsonnet/issues/109#issuecomment-194585199", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/109", "id": 194585199, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-10T00:19:43Z", "updated_at": "2016-03-10T00:19:43Z", "author_association": "MEMBER", "body": "For mac, I think homebrew is sufficient until somebody requests macports.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/194585199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/195159283", "html_url": "https://github.com/google/jsonnet/issues/109#issuecomment-195159283", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/109", "id": 195159283, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-11T03:16:06Z", "updated_at": "2016-03-11T03:16:06Z", "author_association": "MEMBER", "body": "It looks easy to update: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/jsonnet.rb\n\nKubernetes distributes (mostly?) static binaries for various architecture {windows,darwin,linux}x{i386,x86_64} of kubectl from the github release page. https://github.com/kubernetes/kubernetes/releases\n\nI like static binary distribution because it works when all else fails.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/195159283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/195693902", "html_url": "https://github.com/google/jsonnet/issues/113#issuecomment-195693902", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/113", "id": 195693902, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-12T08:02:23Z", "updated_at": "2016-03-12T08:02:23Z", "author_association": "MEMBER", "body": "Yep, let's leave them unsupported as we can simply do\n\nlocal x = arr; x[length(x) - 1]\n\nor\n\n(function(x)x[length(x) - 1])(arr)\n\nto represent\n\narr[-1]\n\nAlthough it's more chars, it's not often that you need to use negative indexes whereas index arithmetic errors can happen anywhere.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/195693902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196058378", "html_url": "https://github.com/google/jsonnet/issues/127#issuecomment-196058378", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/127", "id": 196058378, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-13T21:49:09Z", "updated_at": "2016-03-13T21:49:09Z", "author_association": "MEMBER", "body": "```\nlocal foo = f(bar),\n      bar = g(foo);\n```\n\nI advise using the other syntax unless you actually need mutual recursion, though.  That way it's clear when it's happening / not happening.  This is something the formatter will probably enforce in future.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196058378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196061454", "html_url": "https://github.com/google/jsonnet/issues/128#issuecomment-196061454", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/128", "id": 196061454, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-13T22:04:16Z", "updated_at": "2016-03-13T22:04:16Z", "author_association": "MEMBER", "body": "In HEAD this is already a bit better, as that hex error was already spotted and fixed.\n\nSTATIC ERROR: test.jsonnet:3:15-20: Expected an identifier but got a complex expression.\n\nWhat's happening is it's parsed up to:\n\n```\nlocal id(x) = x;\nlocal obj = {\n  x: whoa, id(self.x)\n```\n\nAnd interpreting it as an attempt to write something like:\n\n```\nlocal id(x) = x;\nlocal obj = {\n  x: whoa,\n  id(self.x): 3,\n}\n```\n\nExcept you can't put self.x as a function param, only identifiers are allowed, so that's the error it gave you.  In the following case, it parses a bit further and gives a different error:\n\n```\nlocal id(x) = x;\nlocal obj = {\n  x: whoa, id(x)\n};\nobj\n```\n\nSTATIC ERROR: test.jsonnet:4:1: Expected token OPERATOR but got \"}\"\n\nThe OPERATOR it was looking for should have been one of : :: ::: +: +:: +::: but the error message unfortunately does not say this.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196061454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196079856", "html_url": "https://github.com/google/jsonnet/issues/127#issuecomment-196079856", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/127", "id": 196079856, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-13T23:13:22Z", "updated_at": "2016-03-13T23:13:22Z", "author_association": "NONE", "body": "Makes sense, thanks!\nOn Sun, Mar 13, 2016 at 19:12 Dave Cunningham notifications@github.com\nwrote:\n\n> Closed #127 https://github.com/google/jsonnet/issues/127.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/issues/127#event-588034623.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196079856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196348602", "html_url": "https://github.com/google/jsonnet/issues/128#issuecomment-196348602", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/128", "id": 196348602, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-14T14:52:11Z", "updated_at": "2016-03-14T14:52:11Z", "author_association": "NONE", "body": "Oh, so the error message is coming from the _parser_? I assumed by the text that it had parsed successfully and that the issue came from a later stage.\n\nIf it's the parser, I'm still a little confused: how is it taking `id(self.x)` as the beginning of a KV mapping production when there is no colon?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196348602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196351024", "html_url": "https://github.com/google/jsonnet/issues/128#issuecomment-196351024", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/128", "id": 196351024, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-14T14:57:09Z", "updated_at": "2016-03-14T14:57:51Z", "author_association": "NONE", "body": "```\nSTATIC ERROR: test.jsonnet:4:1: Expected token OPERATOR but got \"}\"\n```\n\nThat new error looks far more like what I'd expect to see here (ideally with the meaning of `OPERATOR` as you say). Closing, but still curious what changed in the parser if you feel like writing it out.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196351024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196599211", "html_url": "https://github.com/google/jsonnet/issues/122#issuecomment-196599211", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/122", "id": 196599211, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-15T01:29:57Z", "updated_at": "2016-03-15T01:29:57Z", "author_association": "MEMBER", "body": "One thought about this:\n\nCurrently, we support both Python-style comments (`#`) and C/C++/JavaScript-style comments (`//` and `/* */`). While Jsonnet is a superset of JSON, which derives from JavaScript, we also borrow from Python quite a lot.\n\nHowever, inline documentation in Python documentation generators is very different than those for languages with C-family syntaxes. For example, Python docstrings use a special string literal `\"\"\"` (see [epydoc documentation](http://epydoc.sourceforge.net/manual-docstring.html)). On the other hand, inline documentation for C-family languages and JavaScript use special syntax within comments (see [Doxygen](https://www.stack.nl/~dimitri/doxygen/manual/docblocks.html) and [various JavaScript documentation generators](http://www.fusioncharts.com/blog/2013/12/jsdoc-vs-yuidoc-vs-doxx-vs-docco-choosing-a-javascript-documentation-generator/)).\n\nJsonnet has its own block string syntax (`|||`) similar to Python's multi-line string literal. However, from what I understand, that might not be very suitable for inline documentation. Comments seem to be the better approach, and since we are already storing comments in the AST, generating documentation from them should be relatively straightforward.\n\nIf we are generating documentation from comments, I propose that we adopt an existing syntax, such as the following which is one of the most common used by JavaScript, Java, and many C++ projects:\n\n```\n{\n  /**\n   * Returns whether the string a is prefixed by the string b.\n   *\n   * @param a The input string.\n   * @param b The prefix.\n   * @return true if string a is prefixed by the string b or false otherwise.\n   */\n  startsWith(a, b):\n    if std.length(a) < std.length(b) then\n      false\n    else\n      std.substr(a, 0, std.length(b)) == b,\n}\n```\n\nOn a similar note, I am also thinking that it would be better to only support either Python-style or C/C++-style comments rather than both in order to keep the language as simple and code as consistently as possible, but that can be a separate discussion.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196599211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196752148", "html_url": "https://github.com/google/jsonnet/pull/77#issuecomment-196752148", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/77", "id": 196752148, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-15T10:07:52Z", "updated_at": "2016-03-15T10:07:52Z", "author_association": "MEMBER", "body": "This PR is ready for review. I have just added some unit tests for the C++ API.\n\nSince the `jsonnet_jpaths_add` API has been added, and the primary use case of the import callback has been to add directories to the import path, I am leaving out the import callback from this API for now.\n\nCurrently, the C++ API is a simple wrapper around the C APIs. This is not ideal since Jsonnet itself is implemented in C++. It would be better to refactor common logic out of libjsonnet.c and expose both C and C++ APIs. This way, we would able to also expose classes such as [FmtOpts](https://github.com/google/jsonnet/blob/master/core/formatter.h) in the C++ API, which would be more suitable than having separate methods for setting each formatter option.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/196752148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197026361", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197026361", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197026361, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-15T21:25:33Z", "updated_at": "2016-03-15T21:25:33Z", "author_association": "NONE", "body": "The simplest way to do this in a general way:\n\n`jsonnet -e foo.jsonnet --exec \"function (expr) expr(5, 8)\"`\n\nThe semantics being that the `--exec` parameter is a function that gets passed the expression loaded from the file you specified on the command line.\n\nToday's `jsonnet -e foo.jsonnet` would be equivalent to `jsonnet -e foo.jsonnet --exec \"function (x) x\"`.\n\nCommand-line CPS!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197026361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197135425", "html_url": "https://github.com/google/jsonnet/issues/129#issuecomment-197135425", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/129", "id": 197135425, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:27:28Z", "updated_at": "2016-03-16T03:27:28Z", "author_association": "MEMBER", "body": "Having more than one such syntax would be weird, and removing the existing one would break compatibility, so I think this ship has sailed now.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197135425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197136773", "html_url": "https://github.com/google/jsonnet/issues/129#issuecomment-197136773", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/129", "id": 197136773, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:30:44Z", "updated_at": "2016-03-16T03:30:44Z", "author_association": "NONE", "body": "What would be weird about it? I can't see much downside other than a sense of desugaring cleanliness/redundancy. \n\nScala basically has two syntaxes for lambdas. Although now that I mention it, I don't really like the other one :smile: \n\nA broader question: do you consider jsonnet to be roughly \"set in stone\" at this point? I assumed that the 0. leading version number meant you were still open to significant change, but might be reading too much into that.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197136773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197136882", "html_url": "https://github.com/google/jsonnet/issues/130#issuecomment-197136882", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/130", "id": 197136882, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:31:02Z", "updated_at": "2016-03-16T03:31:02Z", "author_association": "MEMBER", "body": "Yes, this is a great idea and something I've had in the back of my mind for a while.  You can sort of debug with error right now -- error foo will print out foo, but will also block execution.\n\nOne concern is how many implementation hacks this would expose.  For example, at the moment, object-level locals are re-evaluated whenever you read a field of the object (as they are desugared into every field).  They are not cached like regular thunks.  This will give surprising output!  However it is probably still useful.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197136882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197137307", "html_url": "https://github.com/google/jsonnet/issues/130#issuecomment-197137307", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/130", "id": 197137307, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:32:58Z", "updated_at": "2016-03-16T03:32:58Z", "author_association": "NONE", "body": "Hah, didn't realize that. Yeah, I don't think anyone will be expecting particularly sensible properties around the output, other than it somehow representing what the VM is doing.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197137307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197138287", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197138287", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197138287, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:37:35Z", "updated_at": "2016-03-16T03:37:35Z", "author_association": "MEMBER", "body": "Agree that std.extVar is global state and a blunt instrument.  I have thought the same thing -- that we might allow people to write configs that are functions, and then the bound variables would not be visible throughout.\n\n--exec already exists as an alias of -e\n\nWhy not have some --local-var command that binds a variable implicitly at the top level, like std is bound implicitly?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197138287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197139753", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197139753", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197139753, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:45:48Z", "updated_at": "2016-03-16T03:45:48Z", "author_association": "NONE", "body": "My main motivation is for jsonnet files that I want to be able to invoke in isolation and import from other files. If I make a top-level function, I can pass in what I want from the command line, and also pass in what I want from another file.\n\nWith `extVar` and your `--local-var` solution, I can't.\n\nThere is a bit of precedent for this discussion, FWIW. In nixpkgs, pretty much every \"package\" is a top-level function from its dependencies (and other flags) to a \"buildable thing\". We then import that function and pass in its dependencies, basically hooking everything up together a bit like a dependency injection framework might do.\n\nHowever, people (understandably) get a bit sick of writing some parameter names three times: once in the package call-site, once in the list of parameters for the package, and again wherever it's used inside the package expression. This led to an experimental \"import with scope\" primitive being added to the language called `scopedImport`, which basically behaves like `import` except it lets you pass along a scope while importing.\n\nWe haven't really adopted it much because people feel uneasy about magic variables appearing out of nowhere, without being declared as explicit dependencies somewhere prominent. But there are still proponents of it, and I think people are still experimenting with sensible ways to use it.\n\nBasically, for composability's sake, if you do the `--local-var` solution, I'd really like some sort of accompanying primop that has the same effect in code. In the absence of a REPL and debugger, I quite enjoy being able to take individual jsonnet files that I would normally be importing, and evaluate them independently (I wrote a simple python wrapper that does that right now) to see how they behave.\n\nDoes that make sense? Sorry for the wall of text.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197139753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197139815", "html_url": "https://github.com/google/jsonnet/issues/129#issuecomment-197139815", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/129", "id": 197139815, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:45:59Z", "updated_at": "2016-03-16T03:45:59Z", "author_association": "MEMBER", "body": "Backwards compatible changes are fine at any time as long as I like the cost / benefit ratio :)\n\nThe cost is complexity -- in people making their own implementations, and complexity to learn / document the language.\n\nIn this case the complexity is not much but the benefit is not so much either.  You could sway my opinion on that if you showed me some real configs that would have real benefits from such a feature.\n\nBefore 1.0 even backwards incompatible changes are OK but there would have to be a really good reason.  Like after launch (2014 time) I changed the meaning of : -- that was a significant change.  Such a change now, when we have many users would be unthinkable.  However a few months ago I removed the use of super in contexts other than super.f and super['f'].  I also required import \"foo\".f to have parens like (import \"foo\").f.  And a few weeks ago, I required :: to be adjacent, not allowing : /\\* */ : (for example).  But these were cases where I judged (admittedly without much evidence) that probably nobody would be affected, so the benefits outweighed the cost.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197139815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197140133", "html_url": "https://github.com/google/jsonnet/issues/130#issuecomment-197140133", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/130", "id": 197140133, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:46:58Z", "updated_at": "2016-03-16T03:46:58Z", "author_association": "MEMBER", "body": "It is trivial to add a new builtin that prints str and returns x.  I'm not saying that would be the best way to provide this feature, but it would give you something to play with if you wanted to do that.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197140133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197140668", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197140668", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197140668, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:52:33Z", "updated_at": "2016-03-16T03:52:33Z", "author_association": "MEMBER", "body": "@oconnorr it's the n word again\n\nThere is a really old issue to add a REPL.  I'm not sure how that would work / how to implement it, but it sounds like a good idea.\n\nIf there was a REPL, would you still want this?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197140668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197140706", "html_url": "https://github.com/google/jsonnet/issues/129#issuecomment-197140706", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/129", "id": 197140706, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:53:04Z", "updated_at": "2016-03-16T03:53:04Z", "author_association": "NONE", "body": "Ah, I see. The only benefit, as I see it, is the ability to do far more \"conventional FP\" stuff. As soon as I started doing nontrivial things with jsonnet, I basically wrote a big swath of higher-order functions over objects (think of them as dictionaries, I guess) because I was getting frustrated with object comprehensions and needed to be able to manipulate mappings in ways that don't translate nicely to comprehensions (was also getting sick of seeing `objectFields` all over my code :smile:). What this means in practice is that I have lots of HOFs with lots of `function (foo) someexpr` in them and I find the `function` part fairly distracting. Definitely not a \"slam dunk\" argument, but in general I like to err on the side of \"make it as easy as possible to factor common patterns out\" and doing that today requires a decent amount of the word `function` appearing in my code.\n\nHaving said all that, it's a syntactic issue and is nowhere close to a dealbreaker. It would just simplify a certain coding style, is all.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197140706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197140824", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197140824", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197140824, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:54:31Z", "updated_at": "2016-03-16T03:54:31Z", "author_association": "NONE", "body": "If the REPL gave me the equivalent of `scopedImport` with your `--local-var` option, I'd be fine without it. Hell, I'm fine with it today (my python shim is 5 lines), but it would be nice to not need anything else.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197140824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197141024", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197141024", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197141024, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:55:16Z", "updated_at": "2016-03-16T03:55:16Z", "author_association": "MEMBER", "body": "Can you paste your python shim (just curious)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197141024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197141047", "html_url": "https://github.com/google/jsonnet/issues/130#issuecomment-197141047", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/130", "id": 197141047, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:55:19Z", "updated_at": "2016-03-16T03:55:19Z", "author_association": "NONE", "body": "I've been meaning to poke around the code for a while. I'll see if I can scrounge together some time one of these days and hack at it, if you don't get sick of waiting for me before that :smile: \n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197141047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197141523", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197141523", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197141523, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T03:56:32Z", "updated_at": "2016-03-16T03:56:32Z", "author_association": "NONE", "body": "Sure (turns out I lied about the lines)!\n\n``` python\nimport _jsonnet\nimport json\n\ndef import_jsonnet(path, **kwargs):\n    jsonnet_str = '''\n        local args = %s;\n        local fun = import \"%s\";\n        fun(args)\n    ''' % (json.dumps(kwargs), path)\n    json_str = _jsonnet.evaluate_snippet(\"(dyn)\", jsonnet_str)\n    return json.loads(json_str)\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197141523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197142126", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197142126", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197142126, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T04:00:56Z", "updated_at": "2016-03-16T04:00:56Z", "author_association": "MEMBER", "body": "Cute :)\n\nYeah the fact that files designed for --local-var cannot be otherwise imported is pretty weird.  That's probably not a good direction to go in.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197142126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197142228", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197142228", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197142228, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T04:02:02Z", "updated_at": "2016-03-16T04:02:02Z", "author_association": "MEMBER", "body": "I think the commandline interface gets a lot nicer if you only allow one arg, like in that python file.  People are free to pass in a JSON object.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197142228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197142570", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197142570", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197142570, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T04:03:21Z", "updated_at": "2016-03-16T04:03:21Z", "author_association": "NONE", "body": "Yeah, definitely. That was actually part of the motivation for my #119, since I'm basically doing that all over the place because of this snippet.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197142570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197142630", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-197142630", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 197142630, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T04:03:41Z", "updated_at": "2016-03-16T04:03:41Z", "author_association": "NONE", "body": "(although obviously if we had a splat operator we wouldn't have to choose)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197142630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197160395", "html_url": "https://github.com/google/jsonnet/issues/130#issuecomment-197160395", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/130", "id": 197160395, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T05:32:28Z", "updated_at": "2016-03-16T05:32:28Z", "author_association": "MEMBER", "body": "To save some time -- you need to add another builtin to jsonnet_builtin_decl in desugarer.cpp then modify vm.cpp to add the corresponding case to the inner interpreter loop\n\n```\n                 case FRAME_BUILTIN_FORCE_THUNKS: {\n```\n\nand I apologize for the hairiness of that code :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197160395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197162404", "html_url": "https://github.com/google/jsonnet/issues/129#issuecomment-197162404", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/129", "id": 197162404, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T05:41:09Z", "updated_at": "2016-03-16T05:41:09Z", "author_association": "MEMBER", "body": "What's the output of bc -l <<< \"$(sed 's/function/L/g' < myfile.jsonnet | wc -c) / $(wc -c < myfile.jsonnet)\"\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197162404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197163458", "html_url": "https://github.com/google/jsonnet/issues/129#issuecomment-197163458", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/129", "id": 197163458, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T05:44:38Z", "updated_at": "2016-03-16T05:44:38Z", "author_association": "MEMBER", "body": "FWIW the requirement to use std.objectFields in object comprehensions was an opinion born out of conservatism so it could easily be challenged by sufficient evidence that this is actually a bad idea :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197163458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197165571", "html_url": "https://github.com/google/jsonnet/issues/125#issuecomment-197165571", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/125", "id": 197165571, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T05:57:57Z", "updated_at": "2016-03-16T05:57:57Z", "author_association": "MEMBER", "body": "Obvious question is do we want to add extra dependencies?  I did use getopt in some previous projects and I found it rather obtuse.  That's just my opinion though.\n\nBy how much would it make the code cleaner?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197165571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197195716", "html_url": "https://github.com/google/jsonnet/pull/77#issuecomment-197195716", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/77", "id": 197195716, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T07:27:54Z", "updated_at": "2016-03-16T07:27:54Z", "author_association": "MEMBER", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197195716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197328988", "html_url": "https://github.com/google/jsonnet/issues/129#issuecomment-197328988", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/129", "id": 197328988, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T13:28:21Z", "updated_at": "2016-03-16T13:28:21Z", "author_association": "NONE", "body": "Okay, so I'm probably overstating the severity somewhat! but this file is also currently mostly \"data\", along with a few functions to process it:\n\n```\n$ bc -l <<< \"$(sed 's/function/L/g' < whoa.jsonnet | wc -c) / $(wc -c < whoa.jsonnet)\"\n.98033891957681864993\n```\n\nTo put it differently, it's 30 instances of the word `function` in a 200ish-line file. Not oppressive, but not my favorite either!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197328988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197668628", "html_url": "https://github.com/google/jsonnet/issues/122#issuecomment-197668628", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/122", "id": 197668628, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-17T02:59:03Z", "updated_at": "2016-03-17T02:59:03Z", "author_association": "MEMBER", "body": "Yeah the javadoc style I think is what we want.  I guess we'll document files, whatever the top-level object is, and if the top-level object is an object then all of the fields of that object (recursively if they are objects and so on).\n\nI have a feeling documentation is mainly important for the public API of a file so documenting locals would not be necessary.  I.e., you can put comments on them, but they wouldn't make it into generated HTML.\n\nThe benefit of having all 3 comment types is easier copy-pastability from various languages whose syntax significantly overlaps with Jsonnet.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/197668628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/198096891", "html_url": "https://github.com/google/jsonnet/issues/122#issuecomment-198096891", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/122", "id": 198096891, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-17T21:45:36Z", "updated_at": "2016-03-17T21:45:36Z", "author_association": "MEMBER", "body": "Agreed. Generating documentation only makes sense for public APIs, such as the functions provided by the Jsonnet stdlib.\n\nCan you elaborate on the copy-pastability use case? Is this mainly for transitioning from other configuration languages to Jsonnet?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/198096891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/198639584", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-198639584", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 198639584, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-19T05:37:59Z", "updated_at": "2016-03-19T05:37:59Z", "author_association": "MEMBER", "body": "@mikedanese would this help with your k-on-k stuff?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/198639584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199412457", "html_url": "https://github.com/google/jsonnet/pull/132#issuecomment-199412457", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/132", "id": 199412457, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-21T18:22:31Z", "updated_at": "2016-03-21T18:22:31Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199412457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199414096", "html_url": "https://github.com/google/jsonnet/pull/133#issuecomment-199414096", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/133", "id": 199414096, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-21T18:25:58Z", "updated_at": "2016-03-21T18:25:58Z", "author_association": "MEMBER", "body": "Otherwise LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199414096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199480216", "html_url": "https://github.com/google/jsonnet/pull/133#issuecomment-199480216", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/133", "id": 199480216, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-21T20:55:19Z", "updated_at": "2016-03-21T20:55:19Z", "author_association": "MEMBER", "body": "Rebased and addressed review comments.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199480216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199490676", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-199490676", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 199490676, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-21T21:16:53Z", "updated_at": "2016-03-21T21:17:10Z", "author_association": "MEMBER", "body": "If I understand what is proposed, I think that the top level function would be useful for implementing the unit testing framework, yaml stream, a k8s object templater, etc... It makes the (input -> function -> output) flow a little bit cleaner. Is this generalizable to a custom manifestation/finalizers?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199490676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199539161", "html_url": "https://github.com/google/jsonnet/issues/128#issuecomment-199539161", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/128", "id": 199539161, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-21T23:44:17Z", "updated_at": "2016-03-21T23:44:17Z", "author_association": "MEMBER", "body": "When the parser hits id(self.x) it knows it is in object scope, so it will try to parse the \"key\" which can be of the form id(e, e, e, ...) where e are arbitrary expressions, and then it looks for the colons.  But it checks the e's are actually just identifiers.  Why not just parse id(x, y, z) -- this is just an artifact of the implementaiton -- re-using some code that parses lists of expressions separated by commas, which are used in arrays as well.  So the error could still be better if that code was rewritten instead of re-used.  Then you'd get an error like \"expected identifier but got self\" or similar.\n\nThe change in the parser was to stop printing out the 'e' in the case that e was not an identifier.  Because there is no ostream<< operator for ASTs, it just printed the pointer.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199539161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199539373", "html_url": "https://github.com/google/jsonnet/issues/128#issuecomment-199539373", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/128", "id": 199539373, "user": {"login": "copumpkin", "id": 2623, "avatar_url": "https://avatars1.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-21T23:45:29Z", "updated_at": "2016-03-21T23:45:29Z", "author_association": "NONE", "body": "Thanks, makes sense!\nOn Mon, Mar 21, 2016 at 19:44 Dave Cunningham notifications@github.com\nwrote:\n\n> When the parser hits id(self.x) it knows it is in object scope, so it will\n> try to parse the \"key\" which can be of the form id(e, e, e, ...) where e\n> are arbitrary expressions, and then it looks for the colons. But it checks\n> the e's are actually just identifiers. Why not just parse id(x, y, z) --\n> this is just an artifact of the implementaiton -- re-using some code that\n> parses lists of expressions separated by commas, which are used in arrays\n> as well. So the error could still be better if that code was rewritten\n> instead of re-used. Then you'd get an error like \"expected identifier but\n> got self\" or similar.\n> \n> The change in the parser was to stop printing out the 'e' in the case that\n> e was not an identifier. Because there is no ostream<< operator for ASTs,\n> it just printed the pointer.\n> \n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/jsonnet/issues/128#issuecomment-199539161\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199539373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199539569", "html_url": "https://github.com/google/jsonnet/issues/134#issuecomment-199539569", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/134", "id": 199539569, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-21T23:46:37Z", "updated_at": "2016-03-21T23:46:37Z", "author_association": "MEMBER", "body": "Just adding some notes here:\n\nThis code was overly complicated so I simplified it, and this avoided the problem.  But the underlying problem still remains, and code that is legitimately complex may trigger it in future.\n\nThe problem is we force thunk e in the case of f(e) tailstrict, but if e is an array or a std.makeArray or similar, then its elements are not currently forced.\n\nOne solution is to have a std.makeArrayStrict call that will make an array and force the thunks.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199539569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199554902", "html_url": "https://github.com/google/jsonnet/issues/131#issuecomment-199554902", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/131", "id": 199554902, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T00:21:39Z", "updated_at": "2016-03-22T00:21:39Z", "author_association": "MEMBER", "body": "It's sorta related to that but a bit different.  With the manifest stuff, the function is the manifester, which you add onto the config.  With the original proposal here, the config becomes a function, and the extra code on the side calls that function.\n\nMore generally, I was wondering how you'd feel about replacing std.extVar with some top level function and threading through the variable?  Would that improve your scripts?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199554902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199643648", "html_url": "https://github.com/google/jsonnet/pull/136#issuecomment-199643648", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/136", "id": 199643648, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T05:26:25Z", "updated_at": "2016-03-22T05:26:25Z", "author_association": "MEMBER", "body": "Doh, I just cut a release! :)  No matter, we'll get this fixed (waiting for dzc to comment on that) and then do a follow-up release.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199643648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199728318", "html_url": "https://github.com/google/jsonnet/pull/136#issuecomment-199728318", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/136", "id": 199728318, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T10:00:08Z", "updated_at": "2016-03-22T10:00:08Z", "author_association": "MEMBER", "body": "This PR looks good but what's odd is that `bazel build //cmd:jsonnet` works fine for me with Bazel at HEAD (as in Bazel HEAD). Which version of Bazel are you running and on which OS?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199728318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199874339", "html_url": "https://github.com/google/jsonnet/pull/136#issuecomment-199874339", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/136", "id": 199874339, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T15:47:07Z", "updated_at": "2016-03-22T15:47:07Z", "author_association": "MEMBER", "body": "I'm running the most recent release. It looks like std.jsonnet.h is not included in the sandbox.\n\n``` console\n$ bazel version\nBuild label: 0.2.0\nBuild target: bazel-out/local_linux-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Tue Feb 23 13:08:29 2016 (1456232909)\nBuild timestamp: 1456232909\nBuild timestamp as int: 1456232909\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 15.10\nRelease:        15.10\nCodename:       wily\n$ uname -a\nLinux ubuntu 4.2.0-30-generic #36-Ubuntu SMP Fri Feb 26 00:58:07 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n```\n\nlooking at the previous rule, it seems like it should have worked...\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199874339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199878975", "html_url": "https://github.com/google/jsonnet/pull/136#issuecomment-199878975", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/136", "id": 199878975, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T15:56:12Z", "updated_at": "2016-03-22T15:56:12Z", "author_association": "MEMBER", "body": "I also had this on my work laptop:\n\n```\n$ bazel version\nBuild label: 0.1.2\nBuild target: bazel-out/local_linux-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel-main_deploy.jar\nBuild time: Fri Dec 4 23:13:21 2015 (1449270801)\nBuild timestamp: 1449270801\nBuild timestamp as int: 1449270801\n```\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199878975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199879362", "html_url": "https://github.com/google/jsonnet/pull/136#issuecomment-199879362", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/136", "id": 199879362, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T15:57:02Z", "updated_at": "2016-03-22T15:57:02Z", "author_association": "MEMBER", "body": "@davidzchen did you try on a fresh clone?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/199879362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200012836", "html_url": "https://github.com/google/jsonnet/pull/136#issuecomment-200012836", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/136", "id": 200012836, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T20:40:15Z", "updated_at": "2016-03-22T20:40:15Z", "author_association": "MEMBER", "body": "Interesting. This reproduces on Linux but not on OS X. Let's go ahead and merge these changes. I'll try to isolate a test case and send a bug report to Bazel.\n\nLGTM\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200012836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200036400", "html_url": "https://github.com/google/jsonnet/pull/136#issuecomment-200036400", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/136", "id": 200036400, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T21:25:24Z", "updated_at": "2016-03-22T21:25:24Z", "author_association": "MEMBER", "body": "We could really use a travis rule for bazel builds :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200036400/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200038662", "html_url": "https://github.com/google/jsonnet/pull/136#issuecomment-200038662", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/136", "id": 200038662, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T21:32:02Z", "updated_at": "2016-03-22T21:32:02Z", "author_association": "MEMBER", "body": "I'll set that up :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200038662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200534106", "html_url": "https://github.com/google/jsonnet/pull/138#issuecomment-200534106", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/138", "id": 200534106, "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-23T20:35:03Z", "updated_at": "2016-03-23T20:35:03Z", "author_association": "MEMBER", "body": "have we discussed standardizing on a .clang-format before?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200534106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200591890", "html_url": "https://github.com/google/jsonnet/pull/138#issuecomment-200591890", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/138", "id": 200591890, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-24T00:12:52Z", "updated_at": "2016-03-24T00:12:52Z", "author_association": "MEMBER", "body": "I don't think we have, but I also think it is a good idea to standardize on an established style guide and `.clang-format`, especially since we are getting more contributors. I think we should consider adopting the Google C++ Style Guide to both be consistent with most Google open source projects.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200591890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200592091", "html_url": "https://github.com/google/jsonnet/pull/138#issuecomment-200592091", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/138", "id": 200592091, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-24T00:14:18Z", "updated_at": "2016-03-24T00:14:18Z", "author_association": "MEMBER", "body": "Nope, the Google C++ style guide is terrible.  However I am definitely in favor of codifying the existing style and fixing any inconsistencies within.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200592091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200592139", "html_url": "https://github.com/google/jsonnet/pull/138#issuecomment-200592139", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/138", "id": 200592139, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-24T00:14:37Z", "updated_at": "2016-03-24T00:16:41Z", "author_association": "MEMBER", "body": "Why do you say that it is terrible? Another option is the [LLVM style guide](http://llvm.org/docs/CodingStandards.html), which is in fact quite similar.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200592139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200593229", "html_url": "https://github.com/google/jsonnet/pull/138#issuecomment-200593229", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/138", "id": 200593229, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-24T00:19:33Z", "updated_at": "2016-03-24T00:19:33Z", "author_association": "MEMBER", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200593229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200593633", "html_url": "https://github.com/google/jsonnet/pull/138#issuecomment-200593633", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/138", "id": 200593633, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-24T00:22:11Z", "updated_at": "2016-03-24T00:22:11Z", "author_association": "MEMBER", "body": "A good rant on the style guide here: https://www.linkedin.com/pulse/20140503193653-3046051-why-google-style-guide-for-c-is-a-deal-breaker\n\nI cut my teeth on Ogre graphics engine and Bullet physics engine, so the style I use is similar to theirs.  It's also similar to the code I wrote at IBM for the X10 project.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200593633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200596314", "html_url": "https://github.com/google/jsonnet/pull/138#issuecomment-200596314", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/138", "id": 200596314, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-24T00:31:19Z", "updated_at": "2016-03-24T00:31:19Z", "author_association": "MEMBER", "body": "Yes, I have seen the rant, and I do not 100% agree with it. For example, it mentions that disallowing multiple inheritance is 100% a deal breaker, but I am not convinced that multiple inheritance is a \"strength\" in practice except for multiple interface inheritance.\n\nIn any case, let's move this discussion to a separate bug. I've opened #139 to discuss this.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200596314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200598894", "html_url": "https://github.com/google/jsonnet/issues/139#issuecomment-200598894", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/139", "id": 200598894, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-24T00:42:44Z", "updated_at": "2016-03-24T00:42:44Z", "author_association": "MEMBER", "body": "To add some more comments about [Sergey Zubkov's rant](https://www.linkedin.com/pulse/20140503193653-3046051-why-google-style-guide-for-c-is-a-deal-breaker): we should also note that the Google Style Guide is constantly being revised, and as Sergey himself pointed out, with the recent revisions, many of the \"deal breakers\" he listed no longer applies:\n\n> 9/21/14 update: Public style guide was updated from 3.274 to 4.45, losing two of the points I strongly disagreed with.\n> \n> 9/26/15 update: Public style guide was updated from 4.45 to 4.177, losing four more points, including the std::forward ban, the I/O streams ban and the operator overloading ban - although the pros for operator overloading still fail to mention most of the reasons it is required.\n> \n> 1/17/16 update: Public style guide was updated to an unversioned \"current\" on 1/6/16, relaxing the default parameter prohibition but suddenly banning ref-qualifiers as \"obscure\".\n\nCurrently, the key areas where the conventions used by Jsonnet differ from the Google Style Guide that are not formatting-related are:\n1. Use of exceptions\n2. Use of mutable references in function arguments.\n\nFeel free to correct me if there are additional fundamental differences.\n\nI am ambivalent about (1) and would be fine with keeping exceptions since removing them would be non-trivial. For (2), I think the Google style guide has merit and that is better to make it clear whether a function argument is mutable. This is the same reason why Microsoft implemented [SAL annotations](https://msdn.microsoft.com/en-us/library/hh916383.aspx).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/200598894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201333496", "html_url": "https://github.com/google/jsonnet/issues/137#issuecomment-201333496", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/137", "id": 201333496, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-25T15:30:35Z", "updated_at": "2016-03-25T15:30:35Z", "author_association": "MEMBER", "body": "I couldn't figure out how to run two separate things in travis, do we just do them sequentially?\n\nOnce you've done this I volunteer to do the same thing for setup.py :)\n\nThis will mean I don't have to manually test this stuff when I make releases, which should speed stuff up a lot.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201333496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201354565", "html_url": "https://github.com/google/jsonnet/issues/139#issuecomment-201354565", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/139", "id": 201354565, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-25T16:33:19Z", "updated_at": "2016-03-25T16:33:19Z", "author_association": "MEMBER", "body": "When you have exceptions you often need RAII, which used to be used to assist the GC but isn't any more I think (except in STL containers and such).  I'm probably using unique_ptr or something like that in there somewhere as well.\n\nThe \"no exceptions\" rule in Google is born out of having too much old code and doesn't apply here.  Removing exceptions from the code would lead to a lot of boilerplate error propagation, which IMO outweighs the supposed benefits.\n\nAt any rate I think we should stick to basic visual style like whitespace and naming conventions and not opinionated stuff like \"exceptions are bad mmk\"\n\nI don't feel that strongly about mutable references in function arguments, although I don't buy the argument in favor of them at all.  The function signature is always immediately available (unlike some languages), and in the case of foo(x) I have to know whether x is a pointer (unless we also use hungarian notation like p_x), so it's not apparent just from looking at the call with no context that it cannot write to a param.  In general the effect of a function can be arbitrary so this very thin convention doesn't buy me much.  I've also was never surprised by a non-const & despite writing probably about 200kloc of C++ over the last 10 years. SAL annotations are a real \"effects system\" and much more powerful.  They're probably too bureaucratic for our purposes.  If we were writing / validating drivers it'd be different, and MS also has some cool tech for that.\n\nWhen it comes to function / variable names, I use:\n- ALL_CAPS for top-level constants / macros (all top-level things should be constant)\n- camelCase for member functions & variables\n- CamelCase for class names, enumerations, typedefs, etc\n- under_score for symbols that aren't scoped in a class, i.e. global functions, stack variables\n- single letter capitals for template params\n\nBasically that's a classic K&R-like C style but extended to C++ in a java-like fashion, to distinguish between OO and procedural styles.  So there's a lot of high-level information encoded in the names (but not hungarian notation).  I've never liked the \"everything is an object\" concept that underpins Java, so I use procedural style unless objects are a natural fit.\n\nWhitespace:\n- `{` on the next line for functions but nothing else (K&R style)\n- 4 spaces for indentation (no tabs, ever)\n- 100 char line max\n- no indentation for namespaces (your recent change)\n- comments on the same line separated by 2 spaces\n\nMisc:\n- use (void) if the function takes no params (throwback to C I know, but I find it more readable, and we have some C code here as well anyway)\n- prefer (void) unused_param; instead of just dropping the name, because the name is usually valuable information\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201354565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201356264", "html_url": "https://github.com/google/jsonnet/issues/141#issuecomment-201356264", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/141", "id": 201356264, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-25T16:36:46Z", "updated_at": "2016-03-25T16:36:46Z", "author_association": "MEMBER", "body": "@jbeda probably has some thoughts on this.\n\nAll this SGTM and I don't mind using bazel for this.  It is kinda a barrier to entry for people wanting to make changes and run the tests locally, but there aren't that many such people and it's not that hard to install it (unless you're on a Google Linux machine, ironically).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201356264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201502120", "html_url": "https://github.com/google/jsonnet/issues/141#issuecomment-201502120", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/141", "id": 201502120, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-25T21:05:54Z", "updated_at": "2016-03-25T21:05:54Z", "author_association": "MEMBER", "body": "Are you referring to making changes to the tests themselves? We can also add build rules to the test suite so that you can just run the test suite with e.g. the jsonnet binary installed on your system.\n\nIf you want to test changes to both the test suite and to jsonnet simultaneously, then you can change the `git_repository` workspace rule to a `local_repository`. Ideally, it would be great to just pass a command line flag to the `bazel` command, but I don't think workspace rules are configurable and it would be good to file a good feature request for this to Bazel.\n\nLet's discuss offline to sort out the issues you're having with installing Bazel on your Goobuntu machine. FWIW, I think it is due to the fact that installing binaries to system directories without using apt-get is generally discouraged, but now that we have a Homebrew recipe for Bazel, you should be able to install that using Linuxbrew.\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201502120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201722660", "html_url": "https://github.com/google/jsonnet/issues/139#issuecomment-201722660", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/139", "id": 201722660, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-26T07:17:32Z", "updated_at": "2016-03-26T07:19:27Z", "author_association": "MEMBER", "body": "The [latest version of the style guide](https://google.github.io/styleguide/cppguide.html) does not say anything about forbidding RAII. I only see one mention of RAII and it is in a line that states that, as you said, exception safety requires RAII. In fact, there is definitely commonly-used Google C++ code that makes use of RAII, such as [Mutex](https://github.com/tensorflow/tensorflow/blob/df2ea2c8fb6fc2a653843ec521adb52305f1679f/tensorflow/core/platform/default/mutex.h).\n\nAs mentioned above, I agree that getting rid of exceptions in Jsonnet would not be worthwhile. FWIW, the reason why the the exception ban itself exists was due to actual bugs in the C++ compiler in the past. That said, in general, I am not convinced that exceptions in a non-GC language such as C++ is a good idea in general. There are [plenty](http://www.joelonsoftware.com/items/2003/10/13.html) [of](http://mortoray.com/2012/04/02/everything-wrong-with-exceptions/) [reasons](http://www.shanekirk.com/2015/06/c-exceptions-the-good-the-bad-and-the-ugly/) [why](http://stackoverflow.com/questions/1736146/why-is-exception-handling-bad) exceptions in C++ are not a good idea and why new static-typed languages such as [Go](https://golang.org/doc/faq#exceptions) and [Rust](https://doc.rust-lang.org/book/error-handling.html) have decided against using exceptions.\n\nOne thing I should clarify is that the Google style guide's rule against using mutable references in function arguments is to make it clear at the _call site_ whether an argument is mutable or not. This is why the style guide points out that the problem with mutable references is that \"they have value syntax but pointer semantics.\" There are some proposed solutions that I can point you to offline for allowing mutable references but at the same time still making the mutability explicit at the call site.\n\nIn any case, these are my suggestions and my explanation for why I prefer the Google style guide. One of the main points I am trying to make is that we should not be so quick to dismiss a particular style as \"terrible,\" especially since the style guide in its current form is still the product of a decade's worth of experience and battle-testing. Having used the style guide on a daily basis in my job, I can definitely appreciate the merits and reasoning behind the style guide. Finally, given that the Google C++ style guide is the one used for projects such as MapReduce, BigTable, Colossus, TensorFlow, as well as many other parts of the most advanced search stack in the world, I think it is safe to say that it is not such a terrible style guide after all. :)\n\nOf course, as the creator of Jsonnet, you certainly have the final say, and I respect and support the decision that you make.\n\nI've opened separate bugs to write the style guide doc (#142) and add a .clang-format (#143).\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201722660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201909809", "html_url": "https://github.com/google/jsonnet/pull/140#issuecomment-201909809", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/140", "id": 201909809, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-26T18:34:46Z", "updated_at": "2016-03-26T18:34:46Z", "author_association": "MEMBER", "body": "LGTM, thanks for updating the style as well :)\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201909809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201909911", "html_url": "https://github.com/google/jsonnet/issues/143#issuecomment-201909911", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/143", "id": 201909911, "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-26T18:36:33Z", "updated_at": "2016-03-26T18:36:45Z", "author_association": "MEMBER", "body": "I'd be OK with minimally changing the style if .clang-format is not able to enforce the way it currently is, so we should do this first, and then document the resulting state.\n\nPresumably, it'll be possible to do run the C++ reformatter over the whole code base and update it, if that is the case?\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201909911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201911608", "html_url": "https://github.com/google/jsonnet/pull/140#issuecomment-201911608", "issue_url": "https://api.github.com/repos/google/jsonnet/issues/140", "id": 201911608, "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-26T18:56:34Z", "updated_at": "2016-03-26T18:56:34Z", "author_association": "MEMBER", "body": "No problem!\n", "reactions": {"url": "https://api.github.com/repos/google/jsonnet/issues/comments/201911608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/49598278", "pull_request_review_id": null, "id": 49598278, "diff_hunk": "@@ -0,0 +1 @@\n+true", "path": "test_suite/merge.jsonnet.golden", "position": null, "original_position": 1, "commit_id": "9d8d8a8e17a877bf88bab558535d29b82cca04fb", "original_commit_id": "81642a8a9c78b6675cbe18845f2f3833458b68ee", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Absence of a .golden file means it should expect it to output just true, so you can delete this file.\n", "created_at": "2016-01-13T14:47:29Z", "updated_at": "2016-01-13T18:05:34Z", "html_url": "https://github.com/google/jsonnet/pull/95#discussion_r49598278", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/95", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/49598278"}, "html": {"href": "https://github.com/google/jsonnet/pull/95#discussion_r49598278"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/95"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/49598278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554170", "pull_request_review_id": null, "id": 53554170, "diff_hunk": "@@ -317,6 +318,15 @@ struct Index : public AST {\n     { }\n };\n \n+struct Slice : public AST {", "path": "core/ast.h", "position": null, "original_position": 12, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Is there an advantage to having this as a separate AST if it can only be used inside the [ ] of an Index AST?\n", "created_at": "2016-02-20T17:44:25Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53554170", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554170"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53554170"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554183", "pull_request_review_id": null, "id": 53554183, "diff_hunk": "@@ -317,6 +318,15 @@ struct Index : public AST {\n     { }\n };\n \n+struct Slice : public AST {", "path": "core/ast.h", "position": null, "original_position": 12, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Basically you could extend Index to add the last and step ASTs which are null if they're not provided.\n", "created_at": "2016-02-20T17:45:26Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53554183", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554183"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53554183"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554214", "pull_request_review_id": null, "id": 53554214, "diff_hunk": "@@ -1186,9 +1186,42 @@ namespace {\n \n                     Token op = pop();\n                     if (op.kind == Token::BRACKET_L) {\n-                        AST *index = parse(MAX_PRECEDENCE);\n+                        const int max = 2;\n+                        bool isSlice = true;", "path": "core/parser.cpp", "position": null, "original_position": 6, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "The coding convention here is that locals on the stack follow the C style of foo_bar whereas fields of classes use fooBar.  While I'm at it, macros and constants are FOO_BAR.\n", "created_at": "2016-02-20T17:47:49Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53554214", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554214"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53554214"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554262", "pull_request_review_id": null, "id": 53554262, "diff_hunk": "@@ -1186,9 +1186,42 @@ namespace {\n \n                     Token op = pop();\n                     if (op.kind == Token::BRACKET_L) {\n-                        AST *index = parse(MAX_PRECEDENCE);\n+                        const int max = 2;\n+                        bool isSlice = true;\n+                        AST *first = nullptr;\n+                        AST *last = nullptr;\n+\n+                        for (int i = 0; i < max; i++) {", "path": "core/parser.cpp", "position": null, "original_position": 10, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I think this code would be simplified by unrolling the loop and folding the constant i values in.  You could handle the breaks by nesting ifs.\n", "created_at": "2016-02-20T17:51:01Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53554262", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554262"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53554262"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554363", "pull_request_review_id": null, "id": 53554363, "diff_hunk": "@@ -0,0 +1,3 @@\n+local arr = std.range(0, 5);\n+\n+arr[0:10]", "path": "test_suite/error.slice_out_of_bounds.sugar.jsonnet", "position": null, "original_position": 3, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "We should exactly replicate the semantics of Python\n\n```\n>>> range(0, 5)[0:10]\n[0, 1, 2, 3, 4]\n```\n\nAlso supporting negative numbers.  This can all be implemented in std.slice() :)\n", "created_at": "2016-02-20T17:56:18Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53554363", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554363"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53554363"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554437", "pull_request_review_id": null, "id": 53554437, "diff_hunk": "@@ -0,0 +1,37 @@\n+local arr = std.range(0, 5);\n+local a = 2;\n+local b = 4;\n+\n+local cases = [\n+    {\n+        input:  arr[2:4],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[:4],\n+        output: [ 0, 1, 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:],\n+        output: [ 2, 3, 4, 5 ],\n+    },\n+    {\n+        input:  arr[:],\n+        output: arr,\n+    },\n+    {\n+        input:  arr[a:b],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[a:b+1],\n+        output: [ 2, 3, 4 ],\n+    },\n+];\n+\n+std.foldl(", "path": "test_suite/slice.sugar.jsonnet", "position": null, "original_position": 32, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "It'd be an interesting project to design a unit testing framework for Jsonnet.\n", "created_at": "2016-02-20T17:59:13Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53554437", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554437"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53554437"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554509", "pull_request_review_id": null, "id": 53554509, "diff_hunk": "@@ -88,6 +88,9 @@ limitations under the License.\n     range(from, to)::\n         std.makeArray(to - from + 1, function(i) i + from),\n \n+    slice(arr, from, to)::\n+        std.makeArray(to - from, function(i) arr[i + from]),", "path": "stdlib/std.jsonnet", "position": null, "original_position": 5, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "This should also work on strings and fail explicitly if arr is not a string or array type.  There is already str.substr but its semantics aren't right (see comment below).  So we should deprecate str.substr() and use this instead.\n", "created_at": "2016-02-20T18:03:57Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53554509", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554509"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53554509"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554618", "pull_request_review_id": null, "id": 53554618, "diff_hunk": "@@ -1186,9 +1186,42 @@ namespace {\n \n                     Token op = pop();\n                     if (op.kind == Token::BRACKET_L) {\n-                        AST *index = parse(MAX_PRECEDENCE);\n+                        const int max = 2;\n+                        bool isSlice = true;\n+                        AST *first = nullptr;\n+                        AST *last = nullptr;\n+\n+                        for (int i = 0; i < max; i++) {", "path": "core/parser.cpp", "position": null, "original_position": 10, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Ideally the code should read like the BNF:\n\n```\ne ::= ...\n    | e '[' e [ ':' [ e ] [ ':' [ e ] ] ] ']'\n    | e '['     ':' [ e ] [ ':' [ e ] ]   ']'\n```\n\nI think that's the right syntax anyway :)\n\nedit: Actually that was wrong but I updated it.\n", "created_at": "2016-02-20T18:10:02Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53554618", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554618"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53554618"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53554618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678562", "pull_request_review_id": null, "id": 53678562, "diff_hunk": "@@ -0,0 +1,3 @@\n+local arr = std.range(0, 5);\n+\n+arr[0:10]", "path": "test_suite/error.slice_out_of_bounds.sugar.jsonnet", "position": null, "original_position": 3, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "Python slicing seems crazy complex: \n\nhttps://github.com/rfk/pypy/blob/master/pypy/objspace/std/listobject.py#L1362-L1382\n\nI'll look into duplicating the behavior exactly into std.slice()\n", "created_at": "2016-02-22T19:32:45Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53678562", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678562"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53678562"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678611", "pull_request_review_id": null, "id": 53678611, "diff_hunk": "@@ -317,6 +318,15 @@ struct Index : public AST {\n     { }\n };\n \n+struct Slice : public AST {", "path": "core/ast.h", "position": null, "original_position": 12, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2016-02-22T19:33:05Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53678611", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678611"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53678611"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678633", "pull_request_review_id": null, "id": 53678633, "diff_hunk": "@@ -1186,9 +1186,42 @@ namespace {\n \n                     Token op = pop();\n                     if (op.kind == Token::BRACKET_L) {\n-                        AST *index = parse(MAX_PRECEDENCE);\n+                        const int max = 2;\n+                        bool isSlice = true;", "path": "core/parser.cpp", "position": null, "original_position": 6, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2016-02-22T19:33:14Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53678633", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678633"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53678633"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678786", "pull_request_review_id": null, "id": 53678786, "diff_hunk": "@@ -1186,9 +1186,42 @@ namespace {\n \n                     Token op = pop();\n                     if (op.kind == Token::BRACKET_L) {\n-                        AST *index = parse(MAX_PRECEDENCE);\n+                        const int max = 2;\n+                        bool isSlice = true;\n+                        AST *first = nullptr;\n+                        AST *last = nullptr;\n+\n+                        for (int i = 0; i < max; i++) {", "path": "core/parser.cpp", "position": null, "original_position": 10, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "Unrolled.\n", "created_at": "2016-02-22T19:34:08Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53678786", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678786"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53678786"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678875", "pull_request_review_id": null, "id": 53678875, "diff_hunk": "@@ -0,0 +1,37 @@\n+local arr = std.range(0, 5);\n+local a = 2;\n+local b = 4;\n+\n+local cases = [\n+    {\n+        input:  arr[2:4],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[:4],\n+        output: [ 0, 1, 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:],\n+        output: [ 2, 3, 4, 5 ],\n+    },\n+    {\n+        input:  arr[:],\n+        output: arr,\n+    },\n+    {\n+        input:  arr[a:b],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[a:b+1],\n+        output: [ 2, 3, 4 ],\n+    },\n+];\n+\n+std.foldl(", "path": "test_suite/slice.sugar.jsonnet", "position": null, "original_position": 32, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "2ac596bc4e15052b4f22d2d651d304761384ba5a", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "too bad JUnit is taken :)\n", "created_at": "2016-02-22T19:34:47Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53678875", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678875"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53678875"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53678875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53880217", "pull_request_review_id": null, "id": 53880217, "diff_hunk": "@@ -0,0 +1,106 @@\n+local arr = std.range(0, 5);\n+local str = \"012345\";\n+local a = 2;\n+local b = 4;\n+\n+local arrCases = [\n+    {\n+        input:  arr[2:4],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:4:1],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[:4],\n+        output: [ 0, 1, 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:],\n+        output: [ 2, 3, 4, 5 ],\n+    },\n+    {\n+        input:  arr[:],\n+        output: arr,\n+    },\n+    {\n+        input:  arr[:1000],\n+        output: arr,\n+    },\n+    //{\n+    //    input:  arr[::],\n+    //    output: arr,\n+    //},", "path": "test_suite/slice.sugar.jsonnet", "position": null, "original_position": 34, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "30e41f663c184acec25b223509e1520e0fd3476b", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "@sparkprime This is breaking with:\n\n```\nFAIL (exit code): slice.sugar.jsonnet\nThis run's output:\nSTATIC ERROR: slice.sugar.jsonnet:32:21-22: Not a unary operator: ::\n```\n\nI'll investigate what is going on but it's not immediately obvious to me.\n", "created_at": "2016-02-24T01:13:14Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53880217", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53880217"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53880217"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53880217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53880369", "pull_request_review_id": null, "id": 53880369, "diff_hunk": "@@ -88,6 +88,35 @@ limitations under the License.\n     range(from, to)::\n         std.makeArray(to - from + 1, function(i) i + from),\n \n+    slice(indexable, index, end, step)::\n+        if index < 0 || end < 0 || step < 0 then\n+            error(\"got [%s:%s:%s] but negative index, end, and steps are not implemented\" % [index, end, step] )\n+        else if std.type(indexable) == \"string\" || std.type(indexable) == \"array\" then\n+            local invar =\n+                // loop invariant\n+                {\n+                    indexable: indexable,\n+                    end: end,\n+                    step: step,\n+                    length: std.length(indexable),\n+                    type: std.type(indexable)\n+                };\n+            local build =", "path": "stdlib/std.jsonnet", "position": null, "original_position": 17, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "30e41f663c184acec25b223509e1520e0fd3476b", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "local build(slice, cur) = \n", "created_at": "2016-02-24T01:15:06Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53880369", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53880369"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53880369"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53880369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881231", "pull_request_review_id": null, "id": 53881231, "diff_hunk": "@@ -0,0 +1,106 @@\n+local arr = std.range(0, 5);\n+local str = \"012345\";\n+local a = 2;\n+local b = 4;\n+\n+local arrCases = [\n+    {\n+        input:  arr[2:4],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:4:1],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[:4],\n+        output: [ 0, 1, 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:],\n+        output: [ 2, 3, 4, 5 ],\n+    },\n+    {\n+        input:  arr[:],\n+        output: arr,\n+    },\n+    {\n+        input:  arr[:1000],\n+        output: arr,\n+    },\n+    //{\n+    //    input:  arr[::],\n+    //    output: arr,\n+    //},", "path": "test_suite/slice.sugar.jsonnet", "position": null, "original_position": 34, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "30e41f663c184acec25b223509e1520e0fd3476b", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Oh this is bad unfortunately -- { x:: 3 } is lexed as the single token ::\n", "created_at": "2016-02-24T01:25:36Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53881231", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881231"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53881231"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881311", "pull_request_review_id": null, "id": 53881311, "diff_hunk": "@@ -0,0 +1,106 @@\n+local arr = std.range(0, 5);\n+local str = \"012345\";\n+local a = 2;\n+local b = 4;\n+\n+local arrCases = [\n+    {\n+        input:  arr[2:4],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:4:1],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[:4],\n+        output: [ 0, 1, 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:],\n+        output: [ 2, 3, 4, 5 ],\n+    },\n+    {\n+        input:  arr[:],\n+        output: arr,\n+    },\n+    {\n+        input:  arr[:1000],\n+        output: arr,\n+    },\n+    //{\n+    //    input:  arr[::],\n+    //    output: arr,\n+    //},", "path": "test_suite/slice.sugar.jsonnet", "position": null, "original_position": 34, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "30e41f663c184acec25b223509e1520e0fd3476b", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I guess you can change the parser to check for that, a bit like C++ does with\n\n```\nC<vector<int>>\n```\n", "created_at": "2016-02-24T01:26:29Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53881311", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881311"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53881311"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881833", "pull_request_review_id": null, "id": 53881833, "diff_hunk": "@@ -511,13 +511,47 @@ class Desugarer {\n             // Nothing to do.\n \n         } else if (auto *ast = dynamic_cast<Index*>(ast_)) {\n-            desugar(ast->target, obj_level);\n-            if (ast->id != nullptr) {\n-                assert(ast->index == nullptr);\n-                ast->index = str(ast->id->name);\n-                ast->id = nullptr;\n+            if (ast->isSlice) {\n+                if (ast->end != nullptr) {\n+                    desugar(ast->end, obj_level);\n+                } else {\n+                    ast->end = length(ast->target);", "path": "core/desugaring.cpp", "position": null, "original_position": 31, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "b6b1531fb0f4f515703675a7bfade136b5facc77", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "If you desugared them to null, you could test for null in std.slice and implement the full semantics that way\n", "created_at": "2016-02-24T01:32:50Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53881833", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881833"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53881833"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53881833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53882133", "pull_request_review_id": null, "id": 53882133, "diff_hunk": "@@ -511,13 +511,47 @@ class Desugarer {\n             // Nothing to do.\n \n         } else if (auto *ast = dynamic_cast<Index*>(ast_)) {\n-            desugar(ast->target, obj_level);\n-            if (ast->id != nullptr) {\n-                assert(ast->index == nullptr);\n-                ast->index = str(ast->id->name);\n-                ast->id = nullptr;\n+            if (ast->isSlice) {\n+                if (ast->end != nullptr) {\n+                    desugar(ast->end, obj_level);\n+                } else {\n+                    ast->end = length(ast->target);", "path": "core/desugaring.cpp", "position": null, "original_position": 31, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "b6b1531fb0f4f515703675a7bfade136b5facc77", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "```\n>>> [1,2,3][None:None:None]\n[1, 2, 3]\n```\n\nIn fact this is mandatory for python compatibility :)\n", "created_at": "2016-02-24T01:36:09Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53882133", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53882133"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53882133"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53882133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53882736", "pull_request_review_id": null, "id": 53882736, "diff_hunk": "@@ -0,0 +1,106 @@\n+local arr = std.range(0, 5);\n+local str = \"012345\";\n+local a = 2;\n+local b = 4;\n+\n+local arrCases = [\n+    {\n+        input:  arr[2:4],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:4:1],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[:4],\n+        output: [ 0, 1, 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:],\n+        output: [ 2, 3, 4, 5 ],\n+    },\n+    {\n+        input:  arr[:],\n+        output: arr,\n+    },\n+    {\n+        input:  arr[:1000],\n+        output: arr,\n+    },\n+    //{\n+    //    input:  arr[::],\n+    //    output: arr,\n+    //},", "path": "test_suite/slice.sugar.jsonnet", "position": null, "original_position": 34, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "30e41f663c184acec25b223509e1520e0fd3476b", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "A workaround is also to do [ : : ]\n", "created_at": "2016-02-24T01:43:55Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53882736", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53882736"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53882736"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53882736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53888120", "pull_request_review_id": null, "id": 53888120, "diff_hunk": "@@ -0,0 +1,106 @@\n+local arr = std.range(0, 5);\n+local str = \"012345\";\n+local a = 2;\n+local b = 4;\n+\n+local arrCases = [\n+    {\n+        input:  arr[2:4],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:4:1],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[:4],\n+        output: [ 0, 1, 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:],\n+        output: [ 2, 3, 4, 5 ],\n+    },\n+    {\n+        input:  arr[:],\n+        output: arr,\n+    },\n+    {\n+        input:  arr[:1000],\n+        output: arr,\n+    },\n+    //{\n+    //    input:  arr[::],\n+    //    output: arr,\n+    //},", "path": "test_suite/slice.sugar.jsonnet", "position": null, "original_position": 34, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "30e41f663c184acec25b223509e1520e0fd3476b", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "Ok, fixed with https://github.com/mikedanese/jsonnet/blob/slice/core/parser.cpp#L1201-L1208 and enabled the test.\n", "created_at": "2016-02-24T03:03:50Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53888120", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53888120"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53888120"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53888120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53888309", "pull_request_review_id": null, "id": 53888309, "diff_hunk": "@@ -0,0 +1,106 @@\n+local arr = std.range(0, 5);\n+local str = \"012345\";\n+local a = 2;\n+local b = 4;\n+\n+local arrCases = [\n+    {\n+        input:  arr[2:4],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:4:1],\n+        output: [ 2, 3 ],\n+    },\n+    {\n+        input:  arr[:4],\n+        output: [ 0, 1, 2, 3 ],\n+    },\n+    {\n+        input:  arr[2:],\n+        output: [ 2, 3, 4, 5 ],\n+    },\n+    {\n+        input:  arr[:],\n+        output: arr,\n+    },\n+    {\n+        input:  arr[:1000],\n+        output: arr,\n+    },\n+    //{\n+    //    input:  arr[::],\n+    //    output: arr,\n+    //},", "path": "test_suite/slice.sugar.jsonnet", "position": null, "original_position": 34, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "30e41f663c184acec25b223509e1520e0fd3476b", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "I can do it without push() but it requires a whole nother branch which feels gross\n", "created_at": "2016-02-24T03:07:03Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53888309", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53888309"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53888309"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53888309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53889411", "pull_request_review_id": null, "id": 53889411, "diff_hunk": "@@ -88,6 +88,41 @@ limitations under the License.\n     range(from, to)::\n         std.makeArray(to - from + 1, function(i) i + from),\n \n+    slice(indexable, index, end, step)::\n+        if (index != null && index < 0) || (end != null && end < 0) || (step != null && step < 0) then\n+            error(\"got [%s:%s:%s] but negative index, end, and steps are not implemented\" % [index, end, step] )\n+        else if std.type(indexable) != \"string\" && std.type(indexable) != \"array\" then\n+            error(\"std.slice accepts a string or an array, but got: %s\" % std.type(indexable))\n+        else\n+            local invar =\n+                // loop invariant with defaults applied\n+                {\n+                    indexable: indexable,\n+                    index:\n+                        if index == null then 0\n+                        else index,\n+                    end:\n+                        if end == null then std.length(indexable)\n+                        else end,\n+                    step:\n+                        if step == null then 1\n+                        else step,\n+                    length: std.length(indexable),\n+                    type: std.type(indexable)\n+                };\n+            local build(slice, cur) =\n+                if cur >= invar.end || cur >= invar.length then\n+                    slice\n+                else\n+                    build(\n+                        if invar.type == \"string\" then\n+                            slice + invar.indexable[cur]\n+                        else\n+                            slice + [ invar.indexable[cur] ],\n+                        cur + invar.step\n+                    ) tailstrict;", "path": "stdlib/std.jsonnet", "position": 36, "original_position": 36, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "9754fa980f08f0560b9846fc04a24029cc8ed004", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "O(n^2) :( but would rather optimize this in the vm for array concatinations where one side is not used again.\n\n``` console\n$ jsonnet git:(slice): cat exp.jsonnet \nstd.range(0, std.extVar(\"vars\").count)[2:100000000000:2]\n$ jsonnet git:(slice): time ./jsonnet --code-var vars='{\"count\": 1000}' exp.jsonnet > /dev/null \n./jsonnet --code-var vars='{\"count\": 1000}' exp.jsonnet > /dev/null  0.25s user 0.00s system 99% cpu 0.258 total\n$ jsonnet git:(slice): time ./jsonnet --code-var vars='{\"count\": 10000}' exp.jsonnet > /dev/null                                                                                             \n./jsonnet --code-var vars='{\"count\": 10000}' exp.jsonnet > /dev/null  1.98s user 0.01s system 99% cpu 1.990 total\n$ jsonnet git:(slice): time ./jsonnet --code-var vars='{\"count\": 100000}' exp.jsonnet > /dev/null\n./jsonnet --code-var vars='{\"count\": 100000}' exp.jsonnet > /dev/null  46.23s user 0.30s system 99% cpu 46.594 total\n```\n", "created_at": "2016-02-24T03:27:32Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53889411", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53889411"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53889411"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53889411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53962210", "pull_request_review_id": null, "id": 53962210, "diff_hunk": "@@ -88,6 +88,41 @@ limitations under the License.\n     range(from, to)::\n         std.makeArray(to - from + 1, function(i) i + from),\n \n+    slice(indexable, index, end, step)::\n+        if (index != null && index < 0) || (end != null && end < 0) || (step != null && step < 0) then\n+            error(\"got [%s:%s:%s] but negative index, end, and steps are not implemented\" % [index, end, step] )\n+        else if std.type(indexable) != \"string\" && std.type(indexable) != \"array\" then\n+            error(\"std.slice accepts a string or an array, but got: %s\" % std.type(indexable))\n+        else\n+            local invar =\n+                // loop invariant with defaults applied\n+                {\n+                    indexable: indexable,\n+                    index:\n+                        if index == null then 0\n+                        else index,\n+                    end:\n+                        if end == null then std.length(indexable)\n+                        else end,\n+                    step:\n+                        if step == null then 1\n+                        else step,\n+                    length: std.length(indexable),\n+                    type: std.type(indexable)\n+                };\n+            local build(slice, cur) =\n+                if cur >= invar.end || cur >= invar.length then\n+                    slice\n+                else\n+                    build(\n+                        if invar.type == \"string\" then\n+                            slice + invar.indexable[cur]\n+                        else\n+                            slice + [ invar.indexable[cur] ],\n+                        cur + invar.step\n+                    ) tailstrict;", "path": "stdlib/std.jsonnet", "position": 36, "original_position": 36, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "9754fa980f08f0560b9846fc04a24029cc8ed004", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Yes I am not sure how to solve this.  There are various instances of it throughout the code.\n\nThe Python approach is to make std.join O(n) and then do everything in terms of that.\n\nCurrently std.join is O(n^2) and making it O(n) would mean making it native.\n\nThere may be a better way though.\n", "created_at": "2016-02-24T16:12:39Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53962210", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53962210"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53962210"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53962210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53976958", "pull_request_review_id": null, "id": 53976958, "diff_hunk": "@@ -88,6 +88,41 @@ limitations under the License.\n     range(from, to)::\n         std.makeArray(to - from + 1, function(i) i + from),\n \n+    slice(indexable, index, end, step)::\n+        if (index != null && index < 0) || (end != null && end < 0) || (step != null && step < 0) then\n+            error(\"got [%s:%s:%s] but negative index, end, and steps are not implemented\" % [index, end, step] )\n+        else if std.type(indexable) != \"string\" && std.type(indexable) != \"array\" then\n+            error(\"std.slice accepts a string or an array, but got: %s\" % std.type(indexable))\n+        else\n+            local invar =\n+                // loop invariant with defaults applied\n+                {\n+                    indexable: indexable,\n+                    index:\n+                        if index == null then 0\n+                        else index,\n+                    end:\n+                        if end == null then std.length(indexable)\n+                        else end,\n+                    step:\n+                        if step == null then 1\n+                        else step,\n+                    length: std.length(indexable),\n+                    type: std.type(indexable)\n+                };\n+            local build(slice, cur) =\n+                if cur >= invar.end || cur >= invar.length then\n+                    slice\n+                else\n+                    build(\n+                        if invar.type == \"string\" then\n+                            slice + invar.indexable[cur]\n+                        else\n+                            slice + [ invar.indexable[cur] ],\n+                        cur + invar.step\n+                    ) tailstrict;", "path": "stdlib/std.jsonnet", "position": 36, "original_position": 36, "commit_id": "ed6a951c355bd58b38f45e66cdfbec2ae2130d6d", "original_commit_id": "9754fa980f08f0560b9846fc04a24029cc8ed004", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "I'm curious about implementing the internal representation with a persistent data structure. Arrays could still be copy on write minus the deep copy.\n", "created_at": "2016-02-24T17:48:21Z", "updated_at": "2016-02-25T02:03:29Z", "html_url": "https://github.com/google/jsonnet/pull/106#discussion_r53976958", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/53976958"}, "html": {"href": "https://github.com/google/jsonnet/pull/106#discussion_r53976958"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/106"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/53976958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54327634", "pull_request_review_id": null, "id": 54327634, "diff_hunk": "@@ -0,0 +1,139 @@\n+/*\n+Test:\n+    {\n+        name: string,required\n+        cases: object[],optional\n+        // if cases is not null\n+        evalute(case):: (object -> CaseResult)", "path": "stdlib/testing.jsonnet", "position": 7, "original_position": 7, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "akazakov", "id": 47600, "avatar_url": "https://avatars1.githubusercontent.com/u/47600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akazakov", "html_url": "https://github.com/akazakov", "followers_url": "https://api.github.com/users/akazakov/followers", "following_url": "https://api.github.com/users/akazakov/following{/other_user}", "gists_url": "https://api.github.com/users/akazakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/akazakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akazakov/subscriptions", "organizations_url": "https://api.github.com/users/akazakov/orgs", "repos_url": "https://api.github.com/users/akazakov/repos", "events_url": "https://api.github.com/users/akazakov/events{/privacy}", "received_events_url": "https://api.github.com/users/akazakov/received_events", "type": "User", "site_admin": false}, "body": "typo: evaluate\nsame 2 lines down\n", "created_at": "2016-02-27T04:00:28Z", "updated_at": "2016-02-27T04:00:28Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54327634", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54327634"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54327634"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54327634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54377358", "pull_request_review_id": null, "id": 54377358, "diff_hunk": "@@ -0,0 +1,103 @@\n+/*\n+Copyright 2016 Google Inc. All rights reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+\n+# These cases are shamelessly lifted from", "path": "tests/merge.jsonnet", "position": 17, "original_position": 17, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Nit: Is there a reason why we're using `#` comments rather than `//` comments here? :)\n", "created_at": "2016-02-29T07:54:23Z", "updated_at": "2016-02-29T07:54:23Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54377358", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54377358"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54377358"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54377358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54377413", "pull_request_review_id": null, "id": 54377413, "diff_hunk": "@@ -0,0 +1,77 @@\n+{\n+\n+\n+    expect()::\n+        self,\n+\n+    that(subject)::\n+        if std.objectHas(self, \"subject\") then\n+            error(\"subject cannot be set twice\")\n+        else\n+            self + { subject: subject },\n+\n+\n+    // returns the first string representing a failed expecatation or returns\n+    // null if no assertions failed.\n+    expectations(arr)::\n+        std.foldl(\n+            function(cur, result)\n+                if cur != null then\n+                    cur\n+                else\n+                    if result != null then\n+                        result,\n+            arr,\n+            null,\n+        ),\n+\n+    fatalFailures: false,\n+\n+    fatal()::\n+        self + { fatalFailures: true},\n+\n+    fail(message)::\n+        if self.fatalFailures then\n+            error(message)\n+        else\n+            message,\n+\n+    local fail = self.fail,\n+\n+    named(name)::\n+        if std.objectHas(self, \"name\") then\n+            error(\"name cannot be set twice\")\n+        else\n+            self + { name: name },\n+\n+\n+    // propositions\n+\n+    hasType(object)::\n+        if std.type(self.subject) != object then\n+            fail(\"expected '%s' to be of type '%s' but was of type '%s'\" % [ self.subject, object, std.type(self.subject) ]),", "path": "stdlib/truth.jsonnet", "position": 52, "original_position": 52, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Nit: @sparkprime - Do we have a recommended line length limit? AFAIU, the line length we're using for the C++ code is 100 characters.\n", "created_at": "2016-02-29T07:55:38Z", "updated_at": "2016-02-29T07:55:38Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54377413", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54377413"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54377413"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54377413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54457505", "pull_request_review_id": null, "id": 54457505, "diff_hunk": "@@ -0,0 +1,77 @@\n+{\n+\n+\n+    expect()::\n+        self,\n+\n+    that(subject)::\n+        if std.objectHas(self, \"subject\") then\n+            error(\"subject cannot be set twice\")\n+        else\n+            self + { subject: subject },\n+\n+\n+    // returns the first string representing a failed expecatation or returns\n+    // null if no assertions failed.\n+    expectations(arr)::\n+        std.foldl(\n+            function(cur, result)\n+                if cur != null then\n+                    cur\n+                else\n+                    if result != null then\n+                        result,\n+            arr,\n+            null,\n+        ),\n+\n+    fatalFailures: false,\n+\n+    fatal()::\n+        self + { fatalFailures: true},\n+\n+    fail(message)::\n+        if self.fatalFailures then\n+            error(message)\n+        else\n+            message,\n+\n+    local fail = self.fail,\n+\n+    named(name)::\n+        if std.objectHas(self, \"name\") then\n+            error(\"name cannot be set twice\")\n+        else\n+            self + { name: name },\n+\n+\n+    // propositions\n+\n+    hasType(object)::\n+        if std.type(self.subject) != object then\n+            fail(\"expected '%s' to be of type '%s' but was of type '%s'\" % [ self.subject, object, std.type(self.subject) ]),", "path": "stdlib/truth.jsonnet", "position": 52, "original_position": 52, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "The rest of the Jsonnet code in the repo uses 4 and 100.  It may be time to write a style guide.\n", "created_at": "2016-02-29T18:53:20Z", "updated_at": "2016-02-29T18:53:20Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54457505", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54457505"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54457505"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54457505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54468580", "pull_request_review_id": null, "id": 54468580, "diff_hunk": "@@ -0,0 +1,35 @@\n+#! /bin/bash\n+\n+set -o pipefail\n+set -o nounset\n+set -o errexit\n+\n+red=\"$(tput setaf 1)\"\n+green=\"$(tput setaf 2)\"\n+reset=\"$(tput sgr0)\"\n+\n+failed=0\n+for jsonnet_test in $(ls tests/*.jsonnet); do\n+  echo \"${green}Running ${jsonnet_test}...${reset}\"\n+  ./jsonnet \\\n+    --code-file \"tests=${jsonnet_test}\" \\", "path": "run_tests.sh", "position": 15, "original_position": 15, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "This will cause the stacktrace to refer to extvar:tests rather than the name of the file.  But perhaps this is something that should be fixed elsewhere.\n", "created_at": "2016-02-29T20:04:19Z", "updated_at": "2016-02-29T20:04:19Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54468580", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54468580"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54468580"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54468580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54468764", "pull_request_review_id": null, "id": 54468764, "diff_hunk": "@@ -0,0 +1,35 @@\n+#! /bin/bash\n+\n+set -o pipefail\n+set -o nounset\n+set -o errexit\n+\n+red=\"$(tput setaf 1)\"\n+green=\"$(tput setaf 2)\"\n+reset=\"$(tput sgr0)\"\n+\n+failed=0\n+for jsonnet_test in $(ls tests/*.jsonnet); do\n+  echo \"${green}Running ${jsonnet_test}...${reset}\"\n+  ./jsonnet \\\n+    --code-file \"tests=${jsonnet_test}\" \\\n+    --exec \\\n+    --string \\\n+    'local testing = import \"stdlib/testing.jsonnet\"; testing.run(std.extVar(\"tests\"))' \\", "path": "run_tests.sh", "position": 18, "original_position": 18, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "You could also --exec 'import \"'\"${jsonnet_test}\"'\"'\nThat would fix the filename thing.\n", "created_at": "2016-02-29T20:05:20Z", "updated_at": "2016-02-29T20:05:20Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54468764", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54468764"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54468764"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54468764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54469070", "pull_request_review_id": null, "id": 54469070, "diff_hunk": "@@ -0,0 +1,170 @@\n+/*\n+Copyright 2015 Google Inc. All rights reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+\n+local expect = (import \"stdlib/truth.jsonnet\").expect;\n+\n+\n+local evaluate(case) =", "path": "tests/arith_bool.jsonnet", "position": 20, "original_position": 20, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I would be inclined to use a superclass here and save the evaluate: evaluate on subsequent lines.\n", "created_at": "2016-02-29T20:07:18Z", "updated_at": "2016-02-29T20:07:18Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54469070", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54469070"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54469070"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54469070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54469249", "pull_request_review_id": null, "id": 54469249, "diff_hunk": "@@ -0,0 +1,103 @@\n+/*\n+Copyright 2016 Google Inc. All rights reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+\n+# These cases are shamelessly lifted from", "path": "tests/merge.jsonnet", "position": 17, "original_position": 17, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I think we should probably use # instead of // to save one character.  However I don't feel very strongly about it.\n", "created_at": "2016-02-29T20:08:26Z", "updated_at": "2016-02-29T20:08:26Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54469249", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54469249"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54469249"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54469249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54472348", "pull_request_review_id": null, "id": 54472348, "diff_hunk": "@@ -0,0 +1,35 @@\n+#! /bin/bash\n+\n+set -o pipefail\n+set -o nounset\n+set -o errexit\n+\n+red=\"$(tput setaf 1)\"\n+green=\"$(tput setaf 2)\"\n+reset=\"$(tput sgr0)\"\n+\n+failed=0\n+for jsonnet_test in $(ls tests/*.jsonnet); do\n+  echo \"${green}Running ${jsonnet_test}...${reset}\"\n+  ./jsonnet \\\n+    --code-file \"tests=${jsonnet_test}\" \\\n+    --exec \\\n+    --string \\\n+    'local testing = import \"stdlib/testing.jsonnet\"; testing.run(std.extVar(\"tests\"))' \\", "path": "run_tests.sh", "position": 18, "original_position": 18, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "It's also not unthinkable to have some jsonnet test foo.jsonnet command.\n", "created_at": "2016-02-29T20:29:07Z", "updated_at": "2016-02-29T20:29:07Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54472348", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54472348"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54472348"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54472348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54519866", "pull_request_review_id": null, "id": 54519866, "diff_hunk": "@@ -49,6 +49,14 @@ local arrCases = [\n         output: arr,\n     },\n     {\n+        input: arr[1::],", "path": "test_suite/slice.sugar.jsonnet", "position": 4, "original_position": 4, "commit_id": "af1491bbf167410e298d566c01033ab56050298c", "original_commit_id": "54bb3a3d962aa98685391195e9bd8a98cea3aa84", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "It's not possible to run the formatter on these tests as it denatures the test.\n", "created_at": "2016-03-01T03:52:59Z", "updated_at": "2016-03-01T04:04:16Z", "html_url": "https://github.com/google/jsonnet/pull/116#discussion_r54519866", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54519866"}, "html": {"href": "https://github.com/google/jsonnet/pull/116#discussion_r54519866"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/116"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54519866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54519961", "pull_request_review_id": null, "id": 54519961, "diff_hunk": "@@ -49,6 +49,14 @@ local arrCases = [\n         output: arr,\n     },\n     {\n+        input: arr[1::],", "path": "test_suite/slice.sugar.jsonnet", "position": 4, "original_position": 4, "commit_id": "af1491bbf167410e298d566c01033ab56050298c", "original_commit_id": "54bb3a3d962aa98685391195e9bd8a98cea3aa84", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Yeah there are several cases of that already, they should have a .fmt.golden file to hold the output of formatting those files (because they do not format to themselves).  If I accidentally broke the test, please fix it ;)\n", "created_at": "2016-03-01T03:55:18Z", "updated_at": "2016-03-01T04:04:16Z", "html_url": "https://github.com/google/jsonnet/pull/116#discussion_r54519961", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54519961"}, "html": {"href": "https://github.com/google/jsonnet/pull/116#discussion_r54519961"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/116"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54519961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54520027", "pull_request_review_id": null, "id": 54520027, "diff_hunk": "@@ -49,6 +49,14 @@ local arrCases = [\n         output: arr,\n     },\n     {\n+        input: arr[1::],", "path": "test_suite/slice.sugar.jsonnet", "position": 4, "original_position": 4, "commit_id": "af1491bbf167410e298d566c01033ab56050298c", "original_commit_id": "54bb3a3d962aa98685391195e9bd8a98cea3aa84", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "You'll want to run ./refresh_fmt_golden.sh on this one.\n", "created_at": "2016-03-01T03:56:43Z", "updated_at": "2016-03-01T04:04:16Z", "html_url": "https://github.com/google/jsonnet/pull/116#discussion_r54520027", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54520027"}, "html": {"href": "https://github.com/google/jsonnet/pull/116#discussion_r54520027"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/116"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54520027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54520450", "pull_request_review_id": null, "id": 54520450, "diff_hunk": "@@ -49,6 +49,14 @@ local arrCases = [\n         output: arr,\n     },\n     {\n+        input: arr[1::],", "path": "test_suite/slice.sugar.jsonnet", "position": 4, "original_position": 4, "commit_id": "af1491bbf167410e298d566c01033ab56050298c", "original_commit_id": "54bb3a3d962aa98685391195e9bd8a98cea3aa84", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "Ah ok. Updated .fmt.golden. It looks like you made some changes but manually reverted anything that would have modified the tests so lgtm.\n https://github.com/google/jsonnet/commit/17c59acbfd455e42ab6bae0e5517157be4bf0b90#diff-5dd5fae04796372f66a075da6ff11ffc\n", "created_at": "2016-03-01T04:04:58Z", "updated_at": "2016-03-01T04:04:58Z", "html_url": "https://github.com/google/jsonnet/pull/116#discussion_r54520450", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54520450"}, "html": {"href": "https://github.com/google/jsonnet/pull/116#discussion_r54520450"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/116"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54520450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703316", "pull_request_review_id": null, "id": 54703316, "diff_hunk": "@@ -0,0 +1,103 @@\n+/*\n+Copyright 2016 Google Inc. All rights reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+\n+# These cases are shamelessly lifted from", "path": "tests/merge.jsonnet", "position": 17, "original_position": 17, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "I think we should stick with `//` and `/* */` to be consistent with JavaScript comments since Jsonnet is a superset of JSON, and saving characters isn't really a concern for us.\n", "created_at": "2016-03-02T10:10:51Z", "updated_at": "2016-03-02T10:11:33Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54703316", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703316"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54703316"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703530", "pull_request_review_id": null, "id": 54703530, "diff_hunk": "@@ -0,0 +1,77 @@\n+{\n+\n+\n+    expect()::\n+        self,\n+\n+    that(subject)::\n+        if std.objectHas(self, \"subject\") then\n+            error(\"subject cannot be set twice\")\n+        else\n+            self + { subject: subject },\n+\n+\n+    // returns the first string representing a failed expecatation or returns\n+    // null if no assertions failed.\n+    expectations(arr)::\n+        std.foldl(\n+            function(cur, result)\n+                if cur != null then\n+                    cur\n+                else\n+                    if result != null then\n+                        result,\n+            arr,\n+            null,\n+        ),\n+\n+    fatalFailures: false,\n+\n+    fatal()::\n+        self + { fatalFailures: true},\n+\n+    fail(message)::\n+        if self.fatalFailures then\n+            error(message)\n+        else\n+            message,\n+\n+    local fail = self.fail,\n+\n+    named(name)::\n+        if std.objectHas(self, \"name\") then\n+            error(\"name cannot be set twice\")\n+        else\n+            self + { name: name },\n+\n+\n+    // propositions\n+\n+    hasType(object)::\n+        if std.type(self.subject) != object then\n+            fail(\"expected '%s' to be of type '%s' but was of type '%s'\" % [ self.subject, object, std.type(self.subject) ]),", "path": "stdlib/truth.jsonnet", "position": 52, "original_position": 52, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Agreed. I've opened #118 to discuss a style guide.\n", "created_at": "2016-03-02T10:12:34Z", "updated_at": "2016-03-02T10:12:34Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54703530", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703530"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54703530"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703657", "pull_request_review_id": null, "id": 54703657, "diff_hunk": "@@ -0,0 +1,35 @@\n+#! /bin/bash\n+\n+set -o pipefail\n+set -o nounset\n+set -o errexit\n+\n+red=\"$(tput setaf 1)\"\n+green=\"$(tput setaf 2)\"\n+reset=\"$(tput sgr0)\"\n+\n+failed=0\n+for jsonnet_test in $(ls tests/*.jsonnet); do\n+  echo \"${green}Running ${jsonnet_test}...${reset}\"\n+  ./jsonnet \\\n+    --code-file \"tests=${jsonnet_test}\" \\\n+    --exec \\\n+    --string \\\n+    'local testing = import \"stdlib/testing.jsonnet\"; testing.run(std.extVar(\"tests\"))' \\", "path": "run_tests.sh", "position": 18, "original_position": 18, "commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "original_commit_id": "69192189687f0c5aa84b59b1923329db9f87970c", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "It seems that we are doing a fair amount of special-casing for the purposes of running tests, such as adding the `--code-file` flag, etc. Is there a reason why we cannot evaluate Jsonnet files with tests the same we evaluate any other Jsonnet file?\n", "created_at": "2016-03-02T10:13:44Z", "updated_at": "2016-03-02T10:13:44Z", "html_url": "https://github.com/google/jsonnet/pull/111#discussion_r54703657", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703657"}, "html": {"href": "https://github.com/google/jsonnet/pull/111#discussion_r54703657"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/54703657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/42468636", "pull_request_review_id": null, "id": 42468636, "diff_hunk": "@@ -48,16 +48,25 @@ LIB_SRC = \\\n \tcore/parser.cpp \\\n \tcore/static_analysis.cpp \\\n \tcore/vm.cpp\n+\n LIB_OBJ = $(LIB_SRC:.cpp=.o)\n \n+LIB_CPP_SRC = \\\n+\t$(LIB_SRC) \\\n+\tcpp/jsonnet.cc\n+\n+LIB_CPP_OBJ = $(LIB_CPP_SRC:.cpp=.o)\n+\n ALL = \\\n \tjsonnet \\\n \tlibjsonnet.so \\\n+\tlibjsonnet-cpp.so \\", "path": "Makefile", "position": null, "original_position": 16, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "1b0d0aa0f66a722c0f1a78bddb9379c317d8c2f6", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "For some reason, running `make` only builds `jsonnet` but not the `.so` libraries, even though the `so`'s are under `ALL`.\n", "created_at": "2015-10-20T08:38:42Z", "updated_at": "2016-03-15T10:02:00Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r42468636", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/42468636"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r42468636"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/42468636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/42468961", "pull_request_review_id": null, "id": 42468961, "diff_hunk": "@@ -0,0 +1,132 @@\n+// Copyright 2015 Google Inc. All rights reserved.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"cpp/jsonnet.h\"\n+\n+namespace jsonnet {\n+\n+Jsonnet::Jsonnet() {}\n+Jsonnet::~Jsonnet() {\n+  if (vm_ != nullptr) {\n+    ::jsonnet_destroy(vm_);\n+  }\n+}\n+\n+bool Jsonnet::Init() {\n+  vm_ = static_cast<struct JsonnetVm*>(::jsonnet_make());\n+  return vm_ != nullptr;\n+}\n+\n+void Jsonnet::SetMaxStack(uint32_t depth) {\n+  ::jsonnet_max_stack(vm_, static_cast<unsigned>(depth));\n+}\n+\n+void Jsonnet::SetGcMinObjects(uint32_t objects) {\n+  ::jsonnet_gc_min_objects(vm_, static_cast<unsigned>(objects));\n+}\n+\n+void Jsonnet::SetGcGrowthTrigger(double growth) {\n+  ::jsonnet_gc_growth_trigger(vm_, growth);\n+}\n+\n+void Jsonnet::SetStringOutput(bool string_output) {\n+  ::jsonnet_string_output(vm_, string_output);\n+}\n+\n+void Jsonnet::SetDebugAst(bool debug_ast) {\n+  ::jsonnet_debug_ast(vm_, static_cast<int>(debug_ast));\n+}\n+\n+void Jsonnet::SetMaxTrace(uint32_t lines) {\n+  ::jsonnet_max_trace(vm_, static_cast<unsigned>(lines));\n+}\n+\n+void Jsonnet::BindExtVar(const std::string& key, const std::string& value) {\n+  ::jsonnet_ext_var(vm_, key.c_str(), value.c_str());\n+}\n+\n+void Jsonnet::BindExtCodeVar(const std::string& key,\n+                             const std::string& value) {\n+  ::jsonnet_ext_code(vm_, key.c_str(), value.c_str());\n+}\n+\n+bool Jsonnet::EvaluateFile(const std::string& filename, std::string* output) {\n+  if (output == nullptr) {\n+    return false;\n+  }\n+  int error = 0;\n+  const char* jsonnet_output =\n+      ::jsonnet_evaluate_file(vm_, filename.c_str(), &error);\n+  output->assign(jsonnet_output);\n+  return error == 0;\n+}\n+\n+bool Jsonnet::EvaluateSnippet(const std::string& filename,\n+                              const std::string& snippet,\n+                              std::string* output) {\n+  if (output == nullptr) {\n+    return false;\n+  }\n+  int error = 0;\n+  const char* jsonnet_output = ::jsonnet_evaluate_snippet(\n+      vm_, filename.c_str(), snippet.c_str(), &error);\n+  output->assign(jsonnet_output);\n+  return error == 0;\n+}\n+\n+namespace {\n+void ParseMultiOutput(const char* jsonnet_output,\n+                      std::map<std::string, std::string>* outputs) {\n+  for (const char* c = jsonnet_output; *c != '\\0'; ) {\n+    const char *filename = c;\n+    const char *c2 = c;\n+    while (*c2 != '\\0') ++c2;\n+    ++c2;\n+    const char *json = c2;\n+    while (*c2 != '\\0') ++c2;\n+    ++c2;\n+    c = c2;\n+    outputs->insert(std::make_pair(filename, json));\n+  }\n+}\n+}  // namespace\n+\n+bool Jsonnet::EvaluateFileMulti(", "path": "cpp/jsonnet.cc", "position": null, "original_position": 105, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "1b0d0aa0f66a722c0f1a78bddb9379c317d8c2f6", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "The error condition is not handled correctly for the multi APIs since I am returning a `map<string, string>` for the output parameter and thus the error message now gets parsed into a key in the map. I see two options:\n1. Have a separate parameter for returning the error message\n2. Stash the error message in a class member and expose a `GetLastError` method for returning the error message.\n\nWhat do you think?\n", "created_at": "2015-10-20T08:42:22Z", "updated_at": "2016-03-15T10:02:00Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r42468961", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/42468961"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r42468961"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/42468961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/42469008", "pull_request_review_id": null, "id": 42469008, "diff_hunk": "@@ -0,0 +1,161 @@\n+// Copyright 2015 Google Inc. All rights reserved.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//    http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#ifndef CPP_JSONNET_H_\n+#define CPP_JSONNET_H_\n+\n+#include <functional>\n+#include <cstring>\n+#include <map>\n+\n+extern \"C\" {\n+  #include \"core/libjsonnet.h\"\n+}\n+\n+namespace jsonnet {\n+\n+template <typename C>", "path": "cpp/jsonnet.h", "position": null, "original_position": 28, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "1b0d0aa0f66a722c0f1a78bddb9379c317d8c2f6", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "I need to add some documentation and an example for this.\n", "created_at": "2015-10-20T08:42:54Z", "updated_at": "2016-03-15T10:02:00Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r42469008", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/42469008"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r42469008"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/42469008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/42574379", "pull_request_review_id": null, "id": 42574379, "diff_hunk": "@@ -48,16 +48,25 @@ LIB_SRC = \\\n \tcore/parser.cpp \\\n \tcore/static_analysis.cpp \\\n \tcore/vm.cpp\n+\n LIB_OBJ = $(LIB_SRC:.cpp=.o)\n \n+LIB_CPP_SRC = \\\n+\t$(LIB_SRC) \\\n+\tcpp/jsonnet.cc\n+\n+LIB_CPP_OBJ = $(LIB_CPP_SRC:.cpp=.o)\n+\n ALL = \\\n \tjsonnet \\\n \tlibjsonnet.so \\\n+\tlibjsonnet-cpp.so \\", "path": "Makefile", "position": null, "original_position": 16, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "1b0d0aa0f66a722c0f1a78bddb9379c317d8c2f6", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "This is expected. Running `make all` builds the `.so`'s.\n", "created_at": "2015-10-21T01:15:46Z", "updated_at": "2016-03-15T10:02:00Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r42574379", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/42574379"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r42574379"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/42574379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284516", "pull_request_review_id": null, "id": 56284516, "diff_hunk": "@@ -8,7 +8,7 @@ filegroup(\n genrule(\n     name = \"gen-std-jsonnet-h\",\n     srcs = [\"stdlib/std.jsonnet\"],\n-    outs = [\"core/std.jsonnet.h\"],\n+    outs = [\"std.jsonnet.h\"],", "path": "BUILD", "position": 5, "original_position": 5, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Seems unrelated to this PR :)\n", "created_at": "2016-03-16T05:47:09Z", "updated_at": "2016-03-16T05:47:09Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56284516", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284516"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56284516"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284644", "pull_request_review_id": null, "id": 56284644, "diff_hunk": "@@ -38,17 +39,24 @@ cc_library(\n         \"core/string_utils.h\",\n         \"core/unicode.h\",\n         \"core/vm.h\",\n-        \"include/libjsonnet.h\",\n+    ],\n+    deps = [\n+        \"//include:libjsonnet\",", "path": "BUILD", "position": 31, "original_position": 31, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Apologies that I haven't RTFM but how does this work?  Does it take the libjsonnet cc_library rule and use the \nonly the \"includes\" param from it?\n", "created_at": "2016-03-16T05:50:19Z", "updated_at": "2016-03-16T05:50:19Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56284644", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284644"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56284644"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284687", "pull_request_review_id": null, "id": 56284687, "diff_hunk": "@@ -0,0 +1,16 @@\n+new_http_archive(", "path": "WORKSPACE", "position": 1, "original_position": 1, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "What's all this? :)\n", "created_at": "2016-03-16T05:51:12Z", "updated_at": "2016-03-16T05:51:12Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56284687", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284687"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56284687"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284885", "pull_request_review_id": null, "id": 56284885, "diff_hunk": "@@ -38,17 +39,24 @@ cc_library(\n         \"core/string_utils.h\",\n         \"core/unicode.h\",\n         \"core/vm.h\",\n-        \"include/libjsonnet.h\",\n+    ],\n+    deps = [\n+        \"//include:libjsonnet\",", "path": "BUILD", "position": 31, "original_position": 31, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "...nevermind I just found include/BUILD\n", "created_at": "2016-03-16T05:55:33Z", "updated_at": "2016-03-16T05:55:33Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56284885", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284885"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56284885"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56284885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286191", "pull_request_review_id": null, "id": 56286191, "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright 2015 Google Inc. All rights reserved.", "path": "cpp/libjsonnet++.cc", "position": 1, "original_position": 1, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Would this make sense as a header only library?\n", "created_at": "2016-03-16T06:20:42Z", "updated_at": "2016-03-16T06:20:42Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56286191", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286191"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56286191"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286897", "pull_request_review_id": null, "id": 56286897, "diff_hunk": "@@ -8,7 +8,7 @@ filegroup(\n genrule(\n     name = \"gen-std-jsonnet-h\",\n     srcs = [\"stdlib/std.jsonnet\"],\n-    outs = [\"core/std.jsonnet.h\"],\n+    outs = [\"std.jsonnet.h\"],", "path": "BUILD", "position": 5, "original_position": 5, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "I was getting an Bazel build error about being unable to find the generated header file:\n\n```\n\u276f\u276f\u276f bazel build //:jsonnet-common\nINFO: Found 1 target...\nERROR: /Volumes/Ocean/Projects/google/jsonnet/BUILD:17:1: undeclared inclusion(s) in rule '//:jsonnet-common':\nthis rule is missing dependency declarations for the following files included by 'core/desugarer.cpp':\n  'bazel-out/local_darwin-fastbuild/genfiles/std.jsonnet.h'.\nTarget //:jsonnet-common failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 1.457s, Critical Path: 1.29s\n```\n\nThis might be a bug in the C/C++ rules related to using the `includes` attribute while looking for a header file in the genfiles tree. Changing the genrule to output the file in the current package rather than `core/` worked.\n", "created_at": "2016-03-16T06:32:43Z", "updated_at": "2016-03-16T06:32:43Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56286897", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286897"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56286897"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286929", "pull_request_review_id": null, "id": 56286929, "diff_hunk": "@@ -38,17 +39,24 @@ cc_library(\n         \"core/string_utils.h\",\n         \"core/unicode.h\",\n         \"core/vm.h\",\n-        \"include/libjsonnet.h\",\n+    ],\n+    deps = [\n+        \"//include:libjsonnet\",", "path": "BUILD", "position": 31, "original_position": 31, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "No worries. Yeah, `//include:libjsonnet` refers to the `:libjsonnet` target in `include/`.\n", "created_at": "2016-03-16T06:33:24Z", "updated_at": "2016-03-16T06:33:24Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56286929", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286929"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56286929"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56286929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56287008", "pull_request_review_id": null, "id": 56287008, "diff_hunk": "@@ -0,0 +1,16 @@\n+new_http_archive(", "path": "WORKSPACE", "position": 1, "original_position": 1, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "This downloads the gmock archive so that we can use it for the unit tests. This is similar to CMake's [ExternalProject](https://cmake.org/cmake/help/v3.0/module/ExternalProject.html) mechanism but friendlier. :)\n\nHere's the documentation for [`new_http_archive`](http://bazel.io/docs/be/workspace.html#new_http_archive).\n", "created_at": "2016-03-16T06:35:01Z", "updated_at": "2016-03-16T06:35:01Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56287008", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56287008"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56287008"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56287008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56287371", "pull_request_review_id": null, "id": 56287371, "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright 2015 Google Inc. All rights reserved.", "path": "cpp/libjsonnet++.cc", "position": 1, "original_position": 1, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "What do you mean? Are you referring to the `cc_library` rules under `include/`? The problem is that since the target for `cpp/libjsonnet++.cc` are in `cpp/BUILD`, directly adding `../include/libjsonnet++.h` would cross package boundaries, and Bazel would complain. The way to include headers in a separate package is to add a `cc_library` rule for the header and then add that rule to `deps`.\n", "created_at": "2016-03-16T06:41:19Z", "updated_at": "2016-03-16T06:41:19Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56287371", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56287371"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56287371"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56287371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56290205", "pull_request_review_id": null, "id": 56290205, "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright 2015 Google Inc. All rights reserved.", "path": "cpp/libjsonnet++.cc", "position": 1, "original_position": 1, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I noticed it did not include many new headers, so if it (libjsonnet++) were a header only library, it would not need a new build target and would be much simpler.  No need to do it in this PR but it's worth considering.\n", "created_at": "2016-03-16T07:17:42Z", "updated_at": "2016-03-16T07:17:42Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56290205", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56290205"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56290205"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56290205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56290916", "pull_request_review_id": null, "id": 56290916, "diff_hunk": "@@ -8,7 +8,7 @@ filegroup(\n genrule(\n     name = \"gen-std-jsonnet-h\",\n     srcs = [\"stdlib/std.jsonnet\"],\n-    outs = [\"core/std.jsonnet.h\"],\n+    outs = [\"std.jsonnet.h\"],", "path": "BUILD", "position": 5, "original_position": 5, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Ok as long as it works, no need for it to be the same location as the makefile for example.\n", "created_at": "2016-03-16T07:27:38Z", "updated_at": "2016-03-16T07:27:38Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56290916", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56290916"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56290916"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56290916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56291547", "pull_request_review_id": null, "id": 56291547, "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright 2015 Google Inc. All rights reserved.", "path": "cpp/libjsonnet++.cc", "position": 1, "original_position": 1, "commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "original_commit_id": "0ac9e699b9f6e3a1b47c9498db2f065401043439", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "I see what you mean. Makes sense. Also, if we end up refactoring libjsonnet.cpp and exposing both a C and C++ APIs, then that will essentially be the case.\n", "created_at": "2016-03-16T07:34:15Z", "updated_at": "2016-03-16T07:34:15Z", "html_url": "https://github.com/google/jsonnet/pull/77#discussion_r56291547", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/77", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56291547"}, "html": {"href": "https://github.com/google/jsonnet/pull/77#discussion_r56291547"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/77"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56291547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56871582", "pull_request_review_id": null, "id": 56871582, "diff_hunk": "@@ -91,14 +94,21 @@ struct StaticError {\n       : location(location), msg(msg)\n     {\n     }\n+\n+    std::string ToString() const", "path": "core/static_error.h", "position": null, "original_position": 15, "commit_id": "d0f5afa6efea72c4b0e13b34c8ef89b36c380c1f", "original_commit_id": "61114c887a17864a47d76054e570e6f2df270226", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "toString is used elsewhere\n", "created_at": "2016-03-21T18:24:49Z", "updated_at": "2016-03-21T20:54:50Z", "html_url": "https://github.com/google/jsonnet/pull/133#discussion_r56871582", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/133", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56871582"}, "html": {"href": "https://github.com/google/jsonnet/pull/133#discussion_r56871582"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/133"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56871582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56917262", "pull_request_review_id": null, "id": 56917262, "diff_hunk": "@@ -321,25 +321,20 @@ limitations under the License.\n                 };\n \n         // Parse a format string (containing none or more % format tags).\n-        local parse_codes(str, i, out) = \n+        local parse_codes(str, i, out, cur) =\n             if i >= std.length(str) then\n-                out\n+                out + [cur]\n             else\n                 local c = str[i];\n                 if c == \"%\" then\n                     local r = parse_code(str, i + 1);\n-                    parse_codes(str, r.i, out+[r.code]) tailstrict\n+                    parse_codes(str, r.i, out+[cur, r.code], \"\") tailstrict\n                 else\n                     local last = out[std.length(out)-1];\n                     local append = std.length(out) > 0 && std.type(last) == \"string\";", "path": "stdlib/std.jsonnet", "position": 17, "original_position": 17, "commit_id": "57ac5eb57d55c912dbb871679ca839d1513e4802", "original_commit_id": "57ac5eb57d55c912dbb871679ca839d1513e4802", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "This variable seems no longer used\n", "created_at": "2016-03-21T23:49:00Z", "updated_at": "2016-03-21T23:49:00Z", "html_url": "https://github.com/google/jsonnet/pull/135#discussion_r56917262", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/135", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56917262"}, "html": {"href": "https://github.com/google/jsonnet/pull/135#discussion_r56917262"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/135"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56917262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56919939", "pull_request_review_id": null, "id": 56919939, "diff_hunk": "@@ -321,25 +321,20 @@ limitations under the License.\n                 };\n \n         // Parse a format string (containing none or more % format tags).\n-        local parse_codes(str, i, out) = \n+        local parse_codes(str, i, out, cur) =\n             if i >= std.length(str) then\n-                out\n+                out + [cur]\n             else\n                 local c = str[i];\n                 if c == \"%\" then\n                     local r = parse_code(str, i + 1);\n-                    parse_codes(str, r.i, out+[r.code]) tailstrict\n+                    parse_codes(str, r.i, out+[cur, r.code], \"\") tailstrict\n                 else\n                     local last = out[std.length(out)-1];\n                     local append = std.length(out) > 0 && std.type(last) == \"string\";", "path": "stdlib/std.jsonnet", "position": 17, "original_position": 17, "commit_id": "57ac5eb57d55c912dbb871679ca839d1513e4802", "original_commit_id": "57ac5eb57d55c912dbb871679ca839d1513e4802", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Thanks, fixed in a separate commit\n", "created_at": "2016-03-22T00:17:56Z", "updated_at": "2016-03-22T00:17:56Z", "html_url": "https://github.com/google/jsonnet/pull/135#discussion_r56919939", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/135", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/56919939"}, "html": {"href": "https://github.com/google/jsonnet/pull/135#discussion_r56919939"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/135"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/56919939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/57258704", "pull_request_review_id": null, "id": 57258704, "diff_hunk": "@@ -19,415 +19,415 @@ limitations under the License.\n \n namespace {\n \n-    /** Mark & sweep: advanced by 1 each GC cycle.\n-     */\n-    typedef unsigned char GarbageCollectionMark;\n-\n-    /** Supertype of everything that is allocated on the heap.\n-     */\n-    struct HeapEntity {\n-        GarbageCollectionMark mark;\n-        virtual ~HeapEntity() { }\n+/** Mark & sweep: advanced by 1 each GC cycle.\n+ */\n+typedef unsigned char GarbageCollectionMark;\n+\n+/** Supertype of everything that is allocated on the heap.\n+ */\n+struct HeapEntity {\n+    GarbageCollectionMark mark;\n+    virtual ~HeapEntity() { }\n+};\n+\n+/** Tagged union of all values.\n+ *\n+ * Primitives (<= 8 bytes) are copied by value.  Otherwise a pointer to a HeapEntity is used.\n+ */\n+struct Value {\n+    enum Type {\n+        NULL_TYPE = 0x0,  // Unfortunately NULL is a macro in C.\n+        BOOLEAN = 0x1,\n+        DOUBLE = 0x2,\n+\n+        ARRAY = 0x10,\n+        FUNCTION = 0x11,\n+        OBJECT = 0x12,\n+        STRING = 0x13\n     };\n-\n-    /** Tagged union of all values.\n-     *\n-     * Primitives (<= 8 bytes) are copied by value.  Otherwise a pointer to a HeapEntity is used.\n-     */\n-    struct Value {\n-        enum Type {\n-            NULL_TYPE = 0x0,  // Unfortunately NULL is a macro in C.\n-            BOOLEAN = 0x1,\n-            DOUBLE = 0x2,\n-\n-            ARRAY = 0x10,\n-            FUNCTION = 0x11,\n-            OBJECT = 0x12,\n-            STRING = 0x13\n-        };\n-        Type t;\n-        union {\n-            HeapEntity *h;\n-            double d;\n-            bool b;\n-        } v;\n-        bool isHeap(void) const\n-        {\n-            return t & 0x10;\n-        }\n-    };\n-\n-    /** Convert the type into a string, for error messages. */\n-    std::string type_str(Value::Type t)\n+    Type t;\n+    union {\n+        HeapEntity *h;\n+        double d;\n+        bool b;\n+    } v;\n+    bool isHeap(void) const\n     {\n-        switch (t) {\n-            case Value::NULL_TYPE: return \"null\";\n-            case Value::BOOLEAN: return \"boolean\";\n-            case Value::DOUBLE: return \"double\";\n-            case Value::ARRAY: return \"array\";\n-            case Value::FUNCTION: return \"function\";\n-            case Value::OBJECT: return \"object\";\n-            case Value::STRING: return \"string\";\n-            default:\n-            std::cerr << \"INTERNAL ERROR: Unknown type: \" << t << std::endl;\n-            std::abort();\n-            return \"\";  // Quiet, compiler.\n-        }\n+        return t & 0x10;\n     }\n-\n-    /** Convert the value's type into a string, for error messages. */\n-    std::string type_str(const Value &v)\n-    {\n-        return type_str(v.t);\n+};\n+\n+/** Convert the type into a string, for error messages. */\n+std::string type_str(Value::Type t)\n+{\n+    switch (t) {\n+        case Value::NULL_TYPE: return \"null\";\n+        case Value::BOOLEAN: return \"boolean\";\n+        case Value::DOUBLE: return \"double\";\n+        case Value::ARRAY: return \"array\";\n+        case Value::FUNCTION: return \"function\";\n+        case Value::OBJECT: return \"object\";\n+        case Value::STRING: return \"string\";\n+        default:\n+        std::cerr << \"INTERNAL ERROR: Unknown type: \" << t << std::endl;\n+        std::abort();\n+        return \"\";  // Quiet, compiler.\n     }\n+}\n \n-    struct HeapThunk;\n-\n-    /** Stores the values bound to variables.\n-     *\n-     * Each nested local statement, function call, and field access has its own binding frame to\n-     * give the values for the local variable, function parameters, or upValues.\n-     */\n-    typedef std::map<const Identifier*, HeapThunk*> BindingFrame;\n+/** Convert the value's type into a string, for error messages. */\n+std::string type_str(const Value &v)\n+{\n+    return type_str(v.t);\n+}\n \n-    /** Supertype of all objects.  Types of Value::OBJECT will point at these.  */\n-    struct HeapObject : public HeapEntity {\n-    };\n+struct HeapThunk;\n \n-    /** Hold an unevaluated expression.  This implements lazy semantics.\n-     */\n-    struct HeapThunk : public HeapEntity {\n-        /** Whether or not the thunk was forced. */\n-        bool filled;\n+/** Stores the values bound to variables.\n+ *\n+ * Each nested local statement, function call, and field access has its own binding frame to\n+ * give the values for the local variable, function parameters, or upValues.\n+ */\n+typedef std::map<const Identifier*, HeapThunk*> BindingFrame;\n \n-        /** The result when the thunk was forced, if filled == true. */\n-        Value content;\n+/** Supertype of all objects.  Types of Value::OBJECT will point at these.  */\n+struct HeapObject : public HeapEntity {\n+};\n \n-        /** Used in error tracebacks. */\n-        const Identifier *name;\n+/** Hold an unevaluated expression.  This implements lazy semantics.\n+ */\n+struct HeapThunk : public HeapEntity {\n+    /** Whether or not the thunk was forced. */\n+    bool filled;\n \n-        /** The captured environment.\n-         *\n-         * Note, this is non-const because we have to add cyclic references to it.\n-         */\n-        BindingFrame upValues;\n+    /** The result when the thunk was forced, if filled == true. */\n+    Value content;\n \n-        /** The captured self variable, or nullptr if there was none.  \\see CallFrame. */\n-        HeapObject *self;\n+    /** Used in error tracebacks. */", "path": "core/state.h", "position": 172, "original_position": 172, "commit_id": "48424030719a76da5194a009cca287b8b1c7a739", "original_commit_id": "48424030719a76da5194a009cca287b8b1c7a739", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Looks like Github diffing is broken here?\n", "created_at": "2016-03-24T00:16:25Z", "updated_at": "2016-03-24T00:16:25Z", "html_url": "https://github.com/google/jsonnet/pull/138#discussion_r57258704", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/138", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/57258704"}, "html": {"href": "https://github.com/google/jsonnet/pull/138#discussion_r57258704"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/138"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/57258704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/57258772", "pull_request_review_id": null, "id": 57258772, "diff_hunk": "@@ -19,415 +19,415 @@ limitations under the License.\n \n namespace {\n \n-    /** Mark & sweep: advanced by 1 each GC cycle.\n-     */\n-    typedef unsigned char GarbageCollectionMark;\n-\n-    /** Supertype of everything that is allocated on the heap.\n-     */\n-    struct HeapEntity {\n-        GarbageCollectionMark mark;\n-        virtual ~HeapEntity() { }\n+/** Mark & sweep: advanced by 1 each GC cycle.\n+ */\n+typedef unsigned char GarbageCollectionMark;\n+\n+/** Supertype of everything that is allocated on the heap.\n+ */\n+struct HeapEntity {\n+    GarbageCollectionMark mark;\n+    virtual ~HeapEntity() { }\n+};\n+\n+/** Tagged union of all values.\n+ *\n+ * Primitives (<= 8 bytes) are copied by value.  Otherwise a pointer to a HeapEntity is used.\n+ */\n+struct Value {\n+    enum Type {\n+        NULL_TYPE = 0x0,  // Unfortunately NULL is a macro in C.\n+        BOOLEAN = 0x1,\n+        DOUBLE = 0x2,\n+\n+        ARRAY = 0x10,\n+        FUNCTION = 0x11,\n+        OBJECT = 0x12,\n+        STRING = 0x13\n     };\n-\n-    /** Tagged union of all values.\n-     *\n-     * Primitives (<= 8 bytes) are copied by value.  Otherwise a pointer to a HeapEntity is used.\n-     */\n-    struct Value {\n-        enum Type {\n-            NULL_TYPE = 0x0,  // Unfortunately NULL is a macro in C.\n-            BOOLEAN = 0x1,\n-            DOUBLE = 0x2,\n-\n-            ARRAY = 0x10,\n-            FUNCTION = 0x11,\n-            OBJECT = 0x12,\n-            STRING = 0x13\n-        };\n-        Type t;\n-        union {\n-            HeapEntity *h;\n-            double d;\n-            bool b;\n-        } v;\n-        bool isHeap(void) const\n-        {\n-            return t & 0x10;\n-        }\n-    };\n-\n-    /** Convert the type into a string, for error messages. */\n-    std::string type_str(Value::Type t)\n+    Type t;\n+    union {\n+        HeapEntity *h;\n+        double d;\n+        bool b;\n+    } v;\n+    bool isHeap(void) const\n     {\n-        switch (t) {\n-            case Value::NULL_TYPE: return \"null\";\n-            case Value::BOOLEAN: return \"boolean\";\n-            case Value::DOUBLE: return \"double\";\n-            case Value::ARRAY: return \"array\";\n-            case Value::FUNCTION: return \"function\";\n-            case Value::OBJECT: return \"object\";\n-            case Value::STRING: return \"string\";\n-            default:\n-            std::cerr << \"INTERNAL ERROR: Unknown type: \" << t << std::endl;\n-            std::abort();\n-            return \"\";  // Quiet, compiler.\n-        }\n+        return t & 0x10;\n     }\n-\n-    /** Convert the value's type into a string, for error messages. */\n-    std::string type_str(const Value &v)\n-    {\n-        return type_str(v.t);\n+};\n+\n+/** Convert the type into a string, for error messages. */\n+std::string type_str(Value::Type t)\n+{\n+    switch (t) {\n+        case Value::NULL_TYPE: return \"null\";\n+        case Value::BOOLEAN: return \"boolean\";\n+        case Value::DOUBLE: return \"double\";\n+        case Value::ARRAY: return \"array\";\n+        case Value::FUNCTION: return \"function\";\n+        case Value::OBJECT: return \"object\";\n+        case Value::STRING: return \"string\";\n+        default:\n+        std::cerr << \"INTERNAL ERROR: Unknown type: \" << t << std::endl;\n+        std::abort();\n+        return \"\";  // Quiet, compiler.\n     }\n+}\n \n-    struct HeapThunk;\n-\n-    /** Stores the values bound to variables.\n-     *\n-     * Each nested local statement, function call, and field access has its own binding frame to\n-     * give the values for the local variable, function parameters, or upValues.\n-     */\n-    typedef std::map<const Identifier*, HeapThunk*> BindingFrame;\n+/** Convert the value's type into a string, for error messages. */\n+std::string type_str(const Value &v)\n+{\n+    return type_str(v.t);\n+}\n \n-    /** Supertype of all objects.  Types of Value::OBJECT will point at these.  */\n-    struct HeapObject : public HeapEntity {\n-    };\n+struct HeapThunk;\n \n-    /** Hold an unevaluated expression.  This implements lazy semantics.\n-     */\n-    struct HeapThunk : public HeapEntity {\n-        /** Whether or not the thunk was forced. */\n-        bool filled;\n+/** Stores the values bound to variables.\n+ *\n+ * Each nested local statement, function call, and field access has its own binding frame to\n+ * give the values for the local variable, function parameters, or upValues.\n+ */\n+typedef std::map<const Identifier*, HeapThunk*> BindingFrame;\n \n-        /** The result when the thunk was forced, if filled == true. */\n-        Value content;\n+/** Supertype of all objects.  Types of Value::OBJECT will point at these.  */\n+struct HeapObject : public HeapEntity {\n+};\n \n-        /** Used in error tracebacks. */\n-        const Identifier *name;\n+/** Hold an unevaluated expression.  This implements lazy semantics.\n+ */\n+struct HeapThunk : public HeapEntity {\n+    /** Whether or not the thunk was forced. */\n+    bool filled;\n \n-        /** The captured environment.\n-         *\n-         * Note, this is non-const because we have to add cyclic references to it.\n-         */\n-        BindingFrame upValues;\n+    /** The result when the thunk was forced, if filled == true. */\n+    Value content;\n \n-        /** The captured self variable, or nullptr if there was none.  \\see CallFrame. */\n-        HeapObject *self;\n+    /** Used in error tracebacks. */", "path": "core/state.h", "position": 172, "original_position": 172, "commit_id": "48424030719a76da5194a009cca287b8b1c7a739", "original_commit_id": "48424030719a76da5194a009cca287b8b1c7a739", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Yes, looks that way. This patch is purely whitespace changes only aside from the additions of the `// namespace` comments to the closing braces for the namespaces.\n", "created_at": "2016-03-24T00:17:25Z", "updated_at": "2016-03-24T00:17:25Z", "html_url": "https://github.com/google/jsonnet/pull/138#discussion_r57258772", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/138", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/57258772"}, "html": {"href": "https://github.com/google/jsonnet/pull/138#discussion_r57258772"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/138"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/57258772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64106384", "pull_request_review_id": null, "id": 64106384, "diff_hunk": "@@ -9,26 +9,26 @@ jsonnet_to_json_test(\n     name = \"example_test\",\n     src = \"example.jsonnet\",\n     golden = \"example_golden.json\",\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",\n )\n \n jsonnet_to_json_test(\n     name = \"importing_test\",\n     src = \"importing.jsonnet\",\n     golden = \"importing_golden.json\",\n     imports = [\".\"],\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",\n )\n \n jsonnet_to_json_test(\n     name = \"invalid_test\",\n     src = \"invalid.jsonnet\",\n     golden = \"invalid.out\",\n     error = 1,\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",", "path": "cpp/testdata/BUILD", "position": 29, "original_position": 29, "commit_id": "83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "original_commit_id": "16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Come to think of it, I think we can remove the `std` attribute since the stdlib is baked into the jsonnet binary. @sparkprime is this correct?\n", "created_at": "2016-05-20T20:57:59Z", "updated_at": "2016-05-21T14:41:41Z", "html_url": "https://github.com/google/jsonnet/pull/189#discussion_r64106384", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/189", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/64106384"}, "html": {"href": "https://github.com/google/jsonnet/pull/189#discussion_r64106384"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/189"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64106384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64106428", "pull_request_review_id": null, "id": 64106428, "diff_hunk": "@@ -1,5 +1,10 @@\n package(default_visibility = [\"//visibility:public\"])\n \n+filegroup(\n+  name = \"stdlib\",", "path": "stdlib/BUILD", "position": null, "original_position": 4, "commit_id": "83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "original_commit_id": "16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Nit(BUILD convention): Indent 4 spaces\n", "created_at": "2016-05-20T20:58:19Z", "updated_at": "2016-05-21T14:41:41Z", "html_url": "https://github.com/google/jsonnet/pull/189#discussion_r64106428", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/189", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/64106428"}, "html": {"href": "https://github.com/google/jsonnet/pull/189#discussion_r64106428"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/189"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64106428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64135390", "pull_request_review_id": null, "id": 64135390, "diff_hunk": "@@ -9,26 +9,26 @@ jsonnet_to_json_test(\n     name = \"example_test\",\n     src = \"example.jsonnet\",\n     golden = \"example_golden.json\",\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",\n )\n \n jsonnet_to_json_test(\n     name = \"importing_test\",\n     src = \"importing.jsonnet\",\n     golden = \"importing_golden.json\",\n     imports = [\".\"],\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",\n )\n \n jsonnet_to_json_test(\n     name = \"invalid_test\",\n     src = \"invalid.jsonnet\",\n     golden = \"invalid.out\",\n     error = 1,\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",", "path": "cpp/testdata/BUILD", "position": 29, "original_position": 29, "commit_id": "83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "original_commit_id": "16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "user": {"login": "guoshimin", "id": 11787293, "avatar_url": "https://avatars2.githubusercontent.com/u/11787293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoshimin", "html_url": "https://github.com/guoshimin", "followers_url": "https://api.github.com/users/guoshimin/followers", "following_url": "https://api.github.com/users/guoshimin/following{/other_user}", "gists_url": "https://api.github.com/users/guoshimin/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoshimin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoshimin/subscriptions", "organizations_url": "https://api.github.com/users/guoshimin/orgs", "repos_url": "https://api.github.com/users/guoshimin/repos", "events_url": "https://api.github.com/users/guoshimin/events{/privacy}", "received_events_url": "https://api.github.com/users/guoshimin/received_events", "type": "User", "site_admin": false}, "body": "You may be right that it's unnecessary, but the jsonnet_to_json_test rule defined in the bazel repo has a default value for std, which is simply wrong for these targets.\n", "created_at": "2016-05-21T14:41:10Z", "updated_at": "2016-05-21T14:41:41Z", "html_url": "https://github.com/google/jsonnet/pull/189#discussion_r64135390", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/189", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/64135390"}, "html": {"href": "https://github.com/google/jsonnet/pull/189#discussion_r64135390"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/189"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64135390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64135395", "pull_request_review_id": null, "id": 64135395, "diff_hunk": "@@ -1,5 +1,10 @@\n package(default_visibility = [\"//visibility:public\"])\n \n+filegroup(\n+  name = \"stdlib\",", "path": "stdlib/BUILD", "position": null, "original_position": 4, "commit_id": "83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "original_commit_id": "16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "user": {"login": "guoshimin", "id": 11787293, "avatar_url": "https://avatars2.githubusercontent.com/u/11787293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoshimin", "html_url": "https://github.com/guoshimin", "followers_url": "https://api.github.com/users/guoshimin/followers", "following_url": "https://api.github.com/users/guoshimin/following{/other_user}", "gists_url": "https://api.github.com/users/guoshimin/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoshimin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoshimin/subscriptions", "organizations_url": "https://api.github.com/users/guoshimin/orgs", "repos_url": "https://api.github.com/users/guoshimin/repos", "events_url": "https://api.github.com/users/guoshimin/events{/privacy}", "received_events_url": "https://api.github.com/users/guoshimin/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2016-05-21T14:41:44Z", "updated_at": "2016-05-21T14:41:44Z", "html_url": "https://github.com/google/jsonnet/pull/189#discussion_r64135395", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/189", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/64135395"}, "html": {"href": "https://github.com/google/jsonnet/pull/189#discussion_r64135395"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/189"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64135395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64235338", "pull_request_review_id": null, "id": 64235338, "diff_hunk": "@@ -9,26 +9,26 @@ jsonnet_to_json_test(\n     name = \"example_test\",\n     src = \"example.jsonnet\",\n     golden = \"example_golden.json\",\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",\n )\n \n jsonnet_to_json_test(\n     name = \"importing_test\",\n     src = \"importing.jsonnet\",\n     golden = \"importing_golden.json\",\n     imports = [\".\"],\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",\n )\n \n jsonnet_to_json_test(\n     name = \"invalid_test\",\n     src = \"invalid.jsonnet\",\n     golden = \"invalid.out\",\n     error = 1,\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",", "path": "cpp/testdata/BUILD", "position": 29, "original_position": 29, "commit_id": "83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "original_commit_id": "16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I think David's right but we can fix it some other time\n", "created_at": "2016-05-23T14:47:20Z", "updated_at": "2016-05-23T14:47:20Z", "html_url": "https://github.com/google/jsonnet/pull/189#discussion_r64235338", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/189", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/64235338"}, "html": {"href": "https://github.com/google/jsonnet/pull/189#discussion_r64235338"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/189"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64235338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64299655", "pull_request_review_id": null, "id": 64299655, "diff_hunk": "@@ -9,26 +9,26 @@ jsonnet_to_json_test(\n     name = \"example_test\",\n     src = \"example.jsonnet\",\n     golden = \"example_golden.json\",\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",\n )\n \n jsonnet_to_json_test(\n     name = \"importing_test\",\n     src = \"importing.jsonnet\",\n     golden = \"importing_golden.json\",\n     imports = [\".\"],\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",\n )\n \n jsonnet_to_json_test(\n     name = \"invalid_test\",\n     src = \"invalid.jsonnet\",\n     golden = \"invalid.out\",\n     error = 1,\n-    jsonnet = \"//:jsonnet\",\n-    std = \"//:std\",\n+    jsonnet = \"//cmd:jsonnet\",\n+    std = \"//stdlib\",", "path": "cpp/testdata/BUILD", "position": 29, "original_position": 29, "commit_id": "83c7b4ceee0f2a14353ccf75ed024b3c2db22bef", "original_commit_id": "16429cfc8cf2771f5cd6771e8ba8bfdc0af31f07", "user": {"login": "davidzchen", "id": 5283042, "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Agreed. I will remove the `std` attribute from the Bazel Jsonnet rules in a separate change.\n", "created_at": "2016-05-23T22:23:22Z", "updated_at": "2016-05-23T22:23:22Z", "html_url": "https://github.com/google/jsonnet/pull/189#discussion_r64299655", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/189", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/64299655"}, "html": {"href": "https://github.com/google/jsonnet/pull/189#discussion_r64299655"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/189"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/64299655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/66806314", "pull_request_review_id": null, "id": 66806314, "diff_hunk": "@@ -0,0 +1,12 @@\n+FROM ubuntu:latest\n+\n+WORKDIR /opt\n+\n+RUN apt-get update && \\\n+    apt-get install -y git build-essential autoconf libtool make\n+\n+# Install protoc", "path": "Dockerfile", "position": null, "original_position": 8, "commit_id": "bdb4f009611e7806e7f00cf02e35bf3be9227989", "original_commit_id": "502521fa4a6743d472d38b13b3d774b0a1b517a7", "user": {"login": "mikedanese", "id": 1787169, "avatar_url": "https://avatars3.githubusercontent.com/u/1787169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedanese", "html_url": "https://github.com/mikedanese", "followers_url": "https://api.github.com/users/mikedanese/followers", "following_url": "https://api.github.com/users/mikedanese/following{/other_user}", "gists_url": "https://api.github.com/users/mikedanese/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedanese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedanese/subscriptions", "organizations_url": "https://api.github.com/users/mikedanese/orgs", "repos_url": "https://api.github.com/users/mikedanese/repos", "events_url": "https://api.github.com/users/mikedanese/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedanese/received_events", "type": "User", "site_admin": false}, "body": "protoc?\n", "created_at": "2016-06-13T14:56:15Z", "updated_at": "2016-06-23T02:20:39Z", "html_url": "https://github.com/google/jsonnet/pull/208#discussion_r66806314", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/208", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/66806314"}, "html": {"href": "https://github.com/google/jsonnet/pull/208#discussion_r66806314"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/208"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/66806314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/66898584", "pull_request_review_id": null, "id": 66898584, "diff_hunk": "@@ -0,0 +1,12 @@\n+FROM ubuntu:latest\n+\n+WORKDIR /opt\n+\n+RUN apt-get update && \\\n+    apt-get install -y git build-essential autoconf libtool make\n+\n+# Install protoc", "path": "Dockerfile", "position": null, "original_position": 8, "commit_id": "bdb4f009611e7806e7f00cf02e35bf3be9227989", "original_commit_id": "502521fa4a6743d472d38b13b3d774b0a1b517a7", "user": {"login": "lamuguo", "id": 385712, "avatar_url": "https://avatars3.githubusercontent.com/u/385712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lamuguo", "html_url": "https://github.com/lamuguo", "followers_url": "https://api.github.com/users/lamuguo/followers", "following_url": "https://api.github.com/users/lamuguo/following{/other_user}", "gists_url": "https://api.github.com/users/lamuguo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lamuguo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lamuguo/subscriptions", "organizations_url": "https://api.github.com/users/lamuguo/orgs", "repos_url": "https://api.github.com/users/lamuguo/repos", "events_url": "https://api.github.com/users/lamuguo/events{/privacy}", "received_events_url": "https://api.github.com/users/lamuguo/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2016-06-14T01:52:59Z", "updated_at": "2016-06-23T02:20:39Z", "html_url": "https://github.com/google/jsonnet/pull/208#discussion_r66898584", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/208", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/66898584"}, "html": {"href": "https://github.com/google/jsonnet/pull/208#discussion_r66898584"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/208"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/66898584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604140", "pull_request_review_id": 7257308, "id": 86604140, "diff_hunk": "@@ -2,6 +2,47 @@\n \n [![Build Status](https://travis-ci.org/google/jsonnet.svg?branch=master)](https://travis-ci.org/google/jsonnet)\n \n-Website: http://jsonnet.org\n+For an introduction to Jsonnet and documentation,\n+[visit our website](http://jsonnet.org).\n \n-Discussion Forum: https://groups.google.com/forum/#!forum/jsonnet\n+Visit our [discussion forum](https://groups.google.com/forum/#!forum/jsonnet).\n+\n+## Building Jsonnet\n+\n+The GCC C++ (g++) compiler is required to build Jsonnet.", "path": "README.md", "position": null, "original_position": 13, "commit_id": "f132ae752f85846cebb6375d094ed3e4fdb547d9", "original_commit_id": "5f74e10ab1f4d6d61125a347b2b2014c74e52b9e", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "clang is also supported\n", "created_at": "2016-11-04T18:16:14Z", "updated_at": "2016-11-04T21:14:32Z", "html_url": "https://github.com/google/jsonnet/pull/247#discussion_r86604140", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/247", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604140"}, "html": {"href": "https://github.com/google/jsonnet/pull/247#discussion_r86604140"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604179", "pull_request_review_id": 7257308, "id": 86604179, "diff_hunk": "@@ -2,6 +2,47 @@\n \n [![Build Status](https://travis-ci.org/google/jsonnet.svg?branch=master)](https://travis-ci.org/google/jsonnet)\n \n-Website: http://jsonnet.org\n+For an introduction to Jsonnet and documentation,\n+[visit our website](http://jsonnet.org).\n \n-Discussion Forum: https://groups.google.com/forum/#!forum/jsonnet\n+Visit our [discussion forum](https://groups.google.com/forum/#!forum/jsonnet).\n+\n+## Building Jsonnet\n+\n+The GCC C++ (g++) compiler is required to build Jsonnet.\n+\n+### Makefile\n+\n+To build jsonnet, run:\n+\n+```\n+make -j", "path": "README.md", "position": null, "original_position": 20, "commit_id": "f132ae752f85846cebb6375d094ed3e4fdb547d9", "original_commit_id": "5f74e10ab1f4d6d61125a347b2b2014c74e52b9e", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "We should probably guard this with a -j 8 or something :)\n", "created_at": "2016-11-04T18:16:26Z", "updated_at": "2016-11-04T21:14:32Z", "html_url": "https://github.com/google/jsonnet/pull/247#discussion_r86604179", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/247", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604179"}, "html": {"href": "https://github.com/google/jsonnet/pull/247#discussion_r86604179"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604242", "pull_request_review_id": 7257308, "id": 86604242, "diff_hunk": "@@ -2,6 +2,47 @@\n \n [![Build Status](https://travis-ci.org/google/jsonnet.svg?branch=master)](https://travis-ci.org/google/jsonnet)\n \n-Website: http://jsonnet.org\n+For an introduction to Jsonnet and documentation,\n+[visit our website](http://jsonnet.org).\n \n-Discussion Forum: https://groups.google.com/forum/#!forum/jsonnet\n+Visit our [discussion forum](https://groups.google.com/forum/#!forum/jsonnet).\n+\n+## Building Jsonnet\n+\n+The GCC C++ (g++) compiler is required to build Jsonnet.\n+\n+### Makefile\n+\n+To build jsonnet, run:\n+\n+```\n+make -j\n+```\n+\n+To run the output binary, run:\n+\n+```\n+./jsonnet\n+```\n+\n+### Bazel\n+\n+Bazel builds are also supported.\n+[Install Bazel](https://www.bazel.io/versions/master/docs/install.html) if it is\n+not installed already. Then, run the following command to build:\n+\n+```\n+bazel build //cmd:jsonnet", "path": "README.md", "position": null, "original_position": 36, "commit_id": "f132ae752f85846cebb6375d094ed3e4fdb547d9", "original_commit_id": "5f74e10ab1f4d6d61125a347b2b2014c74e52b9e", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "We should put an optimization flag in I think?  @davidzchen \n", "created_at": "2016-11-04T18:16:48Z", "updated_at": "2016-11-04T21:14:32Z", "html_url": "https://github.com/google/jsonnet/pull/247#discussion_r86604242", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/247", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604242"}, "html": {"href": "https://github.com/google/jsonnet/pull/247#discussion_r86604242"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86604242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86618026", "pull_request_review_id": 7270867, "id": 86618026, "diff_hunk": "@@ -2,6 +2,47 @@\n \n [![Build Status](https://travis-ci.org/google/jsonnet.svg?branch=master)](https://travis-ci.org/google/jsonnet)\n \n-Website: http://jsonnet.org\n+For an introduction to Jsonnet and documentation,\n+[visit our website](http://jsonnet.org).\n \n-Discussion Forum: https://groups.google.com/forum/#!forum/jsonnet\n+Visit our [discussion forum](https://groups.google.com/forum/#!forum/jsonnet).\n+\n+## Building Jsonnet\n+\n+The GCC C++ (g++) compiler is required to build Jsonnet.\n+\n+### Makefile\n+\n+To build jsonnet, run:\n+\n+```\n+make -j", "path": "README.md", "position": null, "original_position": 20, "commit_id": "f132ae752f85846cebb6375d094ed3e4fdb547d9", "original_commit_id": "5f74e10ab1f4d6d61125a347b2b2014c74e52b9e", "user": {"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}, "body": "I removed it. Doesn't take THAT long to build.\n", "created_at": "2016-11-04T19:37:22Z", "updated_at": "2016-11-04T21:14:32Z", "html_url": "https://github.com/google/jsonnet/pull/247#discussion_r86618026", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/247", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/86618026"}, "html": {"href": "https://github.com/google/jsonnet/pull/247#discussion_r86618026"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86618026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 86604179}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86635118", "pull_request_review_id": 7287195, "id": 86635118, "diff_hunk": "@@ -2,6 +2,47 @@\n \n [![Build Status](https://travis-ci.org/google/jsonnet.svg?branch=master)](https://travis-ci.org/google/jsonnet)\n \n-Website: http://jsonnet.org\n+For an introduction to Jsonnet and documentation,\n+[visit our website](http://jsonnet.org).\n \n-Discussion Forum: https://groups.google.com/forum/#!forum/jsonnet\n+Visit our [discussion forum](https://groups.google.com/forum/#!forum/jsonnet).\n+\n+## Building Jsonnet\n+\n+The GCC C++ (g++) compiler is required to build Jsonnet.", "path": "README.md", "position": null, "original_position": 13, "commit_id": "f132ae752f85846cebb6375d094ed3e4fdb547d9", "original_commit_id": "5f74e10ab1f4d6d61125a347b2b2014c74e52b9e", "user": {"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2016-11-04T21:23:52Z", "updated_at": "2016-11-04T21:23:52Z", "html_url": "https://github.com/google/jsonnet/pull/247#discussion_r86635118", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/247", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/86635118"}, "html": {"href": "https://github.com/google/jsonnet/pull/247#discussion_r86635118"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86635118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 86604140}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86635146", "pull_request_review_id": 7287224, "id": 86635146, "diff_hunk": "@@ -2,6 +2,47 @@\n \n [![Build Status](https://travis-ci.org/google/jsonnet.svg?branch=master)](https://travis-ci.org/google/jsonnet)\n \n-Website: http://jsonnet.org\n+For an introduction to Jsonnet and documentation,\n+[visit our website](http://jsonnet.org).\n \n-Discussion Forum: https://groups.google.com/forum/#!forum/jsonnet\n+Visit our [discussion forum](https://groups.google.com/forum/#!forum/jsonnet).\n+\n+## Building Jsonnet\n+\n+The GCC C++ (g++) compiler is required to build Jsonnet.\n+\n+### Makefile\n+\n+To build jsonnet, run:\n+\n+```\n+make -j\n+```\n+\n+To run the output binary, run:\n+\n+```\n+./jsonnet\n+```\n+\n+### Bazel\n+\n+Bazel builds are also supported.\n+[Install Bazel](https://www.bazel.io/versions/master/docs/install.html) if it is\n+not installed already. Then, run the following command to build:\n+\n+```\n+bazel build //cmd:jsonnet", "path": "README.md", "position": null, "original_position": 36, "commit_id": "f132ae752f85846cebb6375d094ed3e4fdb547d9", "original_commit_id": "5f74e10ab1f4d6d61125a347b2b2014c74e52b9e", "user": {"login": "spencels", "id": 5388888, "avatar_url": "https://avatars0.githubusercontent.com/u/5388888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencels", "html_url": "https://github.com/spencels", "followers_url": "https://api.github.com/users/spencels/followers", "following_url": "https://api.github.com/users/spencels/following{/other_user}", "gists_url": "https://api.github.com/users/spencels/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencels/subscriptions", "organizations_url": "https://api.github.com/users/spencels/orgs", "repos_url": "https://api.github.com/users/spencels/repos", "events_url": "https://api.github.com/users/spencels/events{/privacy}", "received_events_url": "https://api.github.com/users/spencels/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2016-11-04T21:24:02Z", "updated_at": "2016-11-04T21:24:02Z", "html_url": "https://github.com/google/jsonnet/pull/247#discussion_r86635146", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/247", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/86635146"}, "html": {"href": "https://github.com/google/jsonnet/pull/247#discussion_r86635146"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/247"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/86635146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 86604242}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849128", "pull_request_review_id": 10381215, "id": 89849128, "diff_hunk": "@@ -464,6 +464,30 @@ class Unparser {\n                     }\n                 }\n                 o << ast->blockTermIndent << \"|||\";\n+            } else if (ast->tokenKind == LiteralString::VERBATIM_DOUBLE) {\n+                o << \"@\\\"\";\n+                for (const char32_t *cp = ast->value.c_str() ; *cp != U'\\0' ; ++cp) {\n+                    if (*cp == U'\"') {\n+                        o << \"\\\"\\\"\";\n+                    } else {\n+                        std::string utf8;\n+                        encode_utf8(*cp, utf8);\n+                        o << utf8;\n+                    }\n+                }\n+                o << \"\\\"\";\n+            } else if (ast->tokenKind == LiteralString::VERBATIM_SINGLE) {", "path": "core/formatter.cpp", "position": 25, "original_position": 16, "commit_id": "43b18026739dde4ff2c3d02080515cf3d1c7688c", "original_commit_id": "8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "There's one other case to handle these, and that's in the FixIndentation pass.  It's exactly the same, except you increment the column counter rather than writing to the the stream.  So you'll still have to loop over ast->value and either add 2 or 1 depending no whether it's a quote.", "created_at": "2016-11-28T18:39:31Z", "updated_at": "2016-12-19T20:01:03Z", "html_url": "https://github.com/google/jsonnet/pull/265#discussion_r89849128", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/265", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849128"}, "html": {"href": "https://github.com/google/jsonnet/pull/265#discussion_r89849128"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/265"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849627", "pull_request_review_id": 10381215, "id": 89849627, "diff_hunk": "@@ -507,6 +507,38 @@ Tokens jsonnet_lex(const std::string &filename, const char *input)\n             }\n             break;\n \n+            // Verbatim string literals.\n+            case '@': {\n+                c++;\n+                if (*c != '\"' && *c != '\\'') {\n+                    std::stringstream ss;\n+                    ss << \"Couldn't lex verbatim string, junk after '@': \" << *c;\n+                    throw StaticError(filename, begin, ss.str());\n+                }\n+                const char quot = *c;\n+                c++;  // Advance beyond the opening quote.\n+                for (; ; ++c) {\n+                    if (*c == '\\0')  {\n+                        throw StaticError(filename, begin, \"Unterminated verbatim string\");\n+                    }\n+                    if (*c == quot) {\n+                        if (*(c+1) == quot) {", "path": "core/lexer.cpp", "position": 33, "original_position": 19, "commit_id": "43b18026739dde4ff2c3d02080515cf3d1c7688c", "original_commit_id": "8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Can you add a comment explaining that the '' and \"\" quoting is interpreted here, unlike the non-verbatim strings where it is done later by jsonnet_string_unescape.  This is OK in this case because no information is lost by resolving the repeated quote into a single quote, so we can go back to the original form in the formatter.", "created_at": "2016-11-28T18:41:42Z", "updated_at": "2016-12-19T20:01:03Z", "html_url": "https://github.com/google/jsonnet/pull/265#discussion_r89849627", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/265", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849627"}, "html": {"href": "https://github.com/google/jsonnet/pull/265#discussion_r89849627"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/265"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849710", "pull_request_review_id": 10381215, "id": 89849710, "diff_hunk": "@@ -123,13 +123,17 @@ <h2 id=\"lexing\">Lexing</h2>\n <li><i>number</i>: As defined by <a href=\"http://json.org/\">JSON</a> but without the leading\n minus.</li>\n \n-<li><i>string</i>: Which can have three quoting forms:\n+<li><i>string</i>: Which can have five quoting forms:\n \n <ul>\n <li>Double-quoted, beginning with <code>\"</code> and ending with the first subsequent non-quoted\n <code>\"</code> </li>\n <li>Single-quoted, beginning with <code>'</code> and ending with the first subsequent non-quoted\n <code>'</code> </li>\n+<li>Double-quoted verbatim, beginning with <code>@\"</code> and ending with the first subsequent", "path": "doc/language/spec.html", "position": 12, "original_position": 12, "commit_id": "43b18026739dde4ff2c3d02080515cf3d1c7688c", "original_commit_id": "8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "You should probably say \"non-quoted\" again here, although the quoting scheme is different, it's still a quoting scheme.", "created_at": "2016-11-28T18:42:05Z", "updated_at": "2016-12-19T20:01:03Z", "html_url": "https://github.com/google/jsonnet/pull/265#discussion_r89849710", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/265", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849710"}, "html": {"href": "https://github.com/google/jsonnet/pull/265#discussion_r89849710"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/265"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/89849710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108329", "pull_request_review_id": 13630352, "id": 93108329, "diff_hunk": "@@ -507,6 +507,38 @@ Tokens jsonnet_lex(const std::string &filename, const char *input)\n             }\n             break;\n \n+            // Verbatim string literals.\n+            case '@': {\n+                c++;\n+                if (*c != '\"' && *c != '\\'') {\n+                    std::stringstream ss;\n+                    ss << \"Couldn't lex verbatim string, junk after '@': \" << *c;\n+                    throw StaticError(filename, begin, ss.str());\n+                }\n+                const char quot = *c;\n+                c++;  // Advance beyond the opening quote.\n+                for (; ; ++c) {\n+                    if (*c == '\\0')  {\n+                        throw StaticError(filename, begin, \"Unterminated verbatim string\");\n+                    }\n+                    if (*c == quot) {\n+                        if (*(c+1) == quot) {", "path": "core/lexer.cpp", "position": 33, "original_position": 19, "commit_id": "43b18026739dde4ff2c3d02080515cf3d1c7688c", "original_commit_id": "8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "body": "Done; pretty much used your verbiage verbatim.  (ha! verbatim! ... I'll show myself out)", "created_at": "2016-12-19T20:02:28Z", "updated_at": "2016-12-19T20:02:28Z", "html_url": "https://github.com/google/jsonnet/pull/265#discussion_r93108329", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/265", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108329"}, "html": {"href": "https://github.com/google/jsonnet/pull/265#discussion_r93108329"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/265"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 89849627}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108343", "pull_request_review_id": 13630369, "id": 93108343, "diff_hunk": "@@ -123,13 +123,17 @@ <h2 id=\"lexing\">Lexing</h2>\n <li><i>number</i>: As defined by <a href=\"http://json.org/\">JSON</a> but without the leading\n minus.</li>\n \n-<li><i>string</i>: Which can have three quoting forms:\n+<li><i>string</i>: Which can have five quoting forms:\n \n <ul>\n <li>Double-quoted, beginning with <code>\"</code> and ending with the first subsequent non-quoted\n <code>\"</code> </li>\n <li>Single-quoted, beginning with <code>'</code> and ending with the first subsequent non-quoted\n <code>'</code> </li>\n+<li>Double-quoted verbatim, beginning with <code>@\"</code> and ending with the first subsequent", "path": "doc/language/spec.html", "position": 12, "original_position": 12, "commit_id": "43b18026739dde4ff2c3d02080515cf3d1c7688c", "original_commit_id": "8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2016-12-19T20:02:34Z", "updated_at": "2016-12-19T20:02:35Z", "html_url": "https://github.com/google/jsonnet/pull/265#discussion_r93108343", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/265", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108343"}, "html": {"href": "https://github.com/google/jsonnet/pull/265#discussion_r93108343"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/265"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 89849710}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108412", "pull_request_review_id": 13630450, "id": 93108412, "diff_hunk": "@@ -464,6 +464,30 @@ class Unparser {\n                     }\n                 }\n                 o << ast->blockTermIndent << \"|||\";\n+            } else if (ast->tokenKind == LiteralString::VERBATIM_DOUBLE) {\n+                o << \"@\\\"\";\n+                for (const char32_t *cp = ast->value.c_str() ; *cp != U'\\0' ; ++cp) {\n+                    if (*cp == U'\"') {\n+                        o << \"\\\"\\\"\";\n+                    } else {\n+                        std::string utf8;\n+                        encode_utf8(*cp, utf8);\n+                        o << utf8;\n+                    }\n+                }\n+                o << \"\\\"\";\n+            } else if (ast->tokenKind == LiteralString::VERBATIM_SINGLE) {", "path": "core/formatter.cpp", "position": 25, "original_position": 16, "commit_id": "43b18026739dde4ff2c3d02080515cf3d1c7688c", "original_commit_id": "8a6b970fcc99cdaf84f0ae15d0ce58a40b88a416", "user": {"login": "benley", "id": 1432730, "avatar_url": "https://avatars1.githubusercontent.com/u/1432730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benley", "html_url": "https://github.com/benley", "followers_url": "https://api.github.com/users/benley/followers", "following_url": "https://api.github.com/users/benley/following{/other_user}", "gists_url": "https://api.github.com/users/benley/gists{/gist_id}", "starred_url": "https://api.github.com/users/benley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benley/subscriptions", "organizations_url": "https://api.github.com/users/benley/orgs", "repos_url": "https://api.github.com/users/benley/repos", "events_url": "https://api.github.com/users/benley/events{/privacy}", "received_events_url": "https://api.github.com/users/benley/received_events", "type": "User", "site_admin": false}, "body": "Done, I think.", "created_at": "2016-12-19T20:03:01Z", "updated_at": "2016-12-19T20:03:02Z", "html_url": "https://github.com/google/jsonnet/pull/265#discussion_r93108412", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/265", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108412"}, "html": {"href": "https://github.com/google/jsonnet/pull/265#discussion_r93108412"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/265"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/93108412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 89849128}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121475365", "pull_request_review_id": 43506794, "id": 121475365, "diff_hunk": "@@ -310,14 +317,21 @@ class Desugarer {\n                     expr = alloc.make<Var>(expr->location, expr->openFodder, newSelf);\n                 } else if (auto *super_index = dynamic_cast<SuperIndex*>(expr)) {\n                     StringStream ss;\n-                    ss << \"$outer_super\" << (counter++);\n+                    ss << \"$outer_super_index\" << (counter++);", "path": "core/desugarer.cpp", "position": null, "original_position": 26, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "hausdorff", "id": 1409156, "avatar_url": "https://avatars1.githubusercontent.com/u/1409156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hausdorff", "html_url": "https://github.com/hausdorff", "followers_url": "https://api.github.com/users/hausdorff/followers", "following_url": "https://api.github.com/users/hausdorff/following{/other_user}", "gists_url": "https://api.github.com/users/hausdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hausdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hausdorff/subscriptions", "organizations_url": "https://api.github.com/users/hausdorff/orgs", "repos_url": "https://api.github.com/users/hausdorff/repos", "events_url": "https://api.github.com/users/hausdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/hausdorff/received_events", "type": "User", "site_admin": false}, "body": "I've noticed we sometimes use `U\"...\"` and sometimes not. For example, `U\"$outer_self\"` above, and `$\"outer_super_index\"` here. It's not super clear to me when we should do one or the other. Is `StringStream` outputting `const char32_t`?", "created_at": "2017-06-12T17:28:08Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121475365", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121475365"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121475365"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121475365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121478320", "pull_request_review_id": 43506794, "id": 121478320, "diff_hunk": "@@ -331,14 +345,38 @@ class Desugarer {\n             if (!field.superSugar) continue;\n             // We have to bind self/super from expr1 outside the class, as we copy the expression\n             // into the field body.\n-            AST *index = field.expr1;\n             // Clone it so that we maintain the AST as a tree.\n-            ClonePass(*alloc).expr(index);\n+            AST *index = clone(field.expr1);\n             // This will remove self/super.\n             SubstituteSelfSuper(this, super_vars, counter).expr(index);\n-            AST *super_f = make<SuperIndex>(field.expr1->location, EF, EF, index, EF, nullptr);\n-            field.expr2 = make<Binary>(ast->location, EF, super_f, EF, BOP_PLUS, field.expr2);\n-            field.superSugar = false;\n+            if (true) {", "path": "core/desugarer.cpp", "position": null, "original_position": 57, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "hausdorff", "id": 1409156, "avatar_url": "https://avatars1.githubusercontent.com/u/1409156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hausdorff", "html_url": "https://github.com/hausdorff", "followers_url": "https://api.github.com/users/hausdorff/followers", "following_url": "https://api.github.com/users/hausdorff/following{/other_user}", "gists_url": "https://api.github.com/users/hausdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hausdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hausdorff/subscriptions", "organizations_url": "https://api.github.com/users/hausdorff/orgs", "repos_url": "https://api.github.com/users/hausdorff/repos", "events_url": "https://api.github.com/users/hausdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/hausdorff/received_events", "type": "User", "site_admin": false}, "body": "Hmm, I think you did not mean for `if (true)` to make it in here? :)\r\n\r\nAnyway, I just want to make sure my understanding of this code is corrrect. It looks like the `else` clause doesn't work when the rhs is a `Value::STRING`. After a quick perusal of the code, it looks like this (and I am not an expert) is because `{} + \"\"` is not a `HeapExtendedObject` (?? I think ??), so the `countLeaves(self)` immediately returns `1`, which is the same value in this case as the `offset`, so we fail and report that there is no `super` object. So it seems like the `true` branch of this conditional is just making it so that both the lhs and rhs of the operator are objects, which makes it a `HeapExtendedObject`, which causes it to terminate correctly.\r\n\r\nIf (_if!_) this understanding is correct, I do wonder if this is precisely how the VM should work. It might be worth changing the interpreter to match the intuition that the `else` branch should work, or else it might lead to subtle errors later.", "created_at": "2017-06-12T17:40:08Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121478320", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121478320"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121478320"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121478320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121535874", "pull_request_review_id": 43506794, "id": 121535874, "diff_hunk": "@@ -424,3 +440,10 @@ void ClonePass::expr(AST *&ast_)\n \n     CompilerPass::expr(ast_);\n }\n+\n+AST *clone_ast(Allocator &alloc, AST *ast)", "path": "core/pass.cpp", "position": 49, "original_position": 49, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "hausdorff", "id": 1409156, "avatar_url": "https://avatars1.githubusercontent.com/u/1409156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hausdorff", "html_url": "https://github.com/hausdorff", "followers_url": "https://api.github.com/users/hausdorff/followers", "following_url": "https://api.github.com/users/hausdorff/following{/other_user}", "gists_url": "https://api.github.com/users/hausdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hausdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hausdorff/subscriptions", "organizations_url": "https://api.github.com/users/hausdorff/orgs", "repos_url": "https://api.github.com/users/hausdorff/repos", "events_url": "https://api.github.com/users/hausdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/hausdorff/received_events", "type": "User", "site_admin": false}, "body": "Just for my education: is there any particular reason to replace the use of `ClonePass` with `clone_ast`? Just because it looks better? Because we like not having class defs in headers?", "created_at": "2017-06-12T21:49:49Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121535874", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121535874"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121535874"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121535874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121537189", "pull_request_review_id": 43506794, "id": 121537189, "diff_hunk": "@@ -1839,16 +1849,49 @@ class Interpreter {\n                             goto replaceframe;\n                         }\n                     }\n-                    // Equality can be used when the types don't match.\n                     switch (ast.op) {\n+                        // Equality can be used when the types don't match.\n                         case BOP_MANIFEST_EQUAL:\n                         std::cerr << \"INTERNAL ERROR: Equals not desugared\" << std::endl;\n                         abort();\n \n+                        // Equality can be used when the types don't match.\n                         case BOP_MANIFEST_UNEQUAL:\n                         std::cerr << \"INTERNAL ERROR: Notequals not desugared\" << std::endl;\n                         abort();\n \n+                        // e in e\n+                        case BOP_IN: {\n+                            if (lhs.t != Value::STRING) {\n+                                throw makeError(ast.location,\n+                                                \"The left hand side of the 'in' operator should be \"\n+                                                \"a string,  got \" + type_str(lhs));\n+                            }\n+                            auto *field = static_cast<HeapString*>(lhs.v.h);\n+                            switch (rhs.t) {\n+                                case Value::ARRAY: {\n+                                    auto *arr = static_cast<HeapArray*>(rhs.v.h);\n+                                    // TODO(dcunnin): Implement this.", "path": "core/vm.cpp", "position": null, "original_position": 58, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "hausdorff", "id": 1409156, "avatar_url": "https://avatars1.githubusercontent.com/u/1409156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hausdorff", "html_url": "https://github.com/hausdorff", "followers_url": "https://api.github.com/users/hausdorff/followers", "following_url": "https://api.github.com/users/hausdorff/following{/other_user}", "gists_url": "https://api.github.com/users/hausdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hausdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hausdorff/subscriptions", "organizations_url": "https://api.github.com/users/hausdorff/orgs", "repos_url": "https://api.github.com/users/hausdorff/repos", "events_url": "https://api.github.com/users/hausdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/hausdorff/received_events", "type": "User", "site_admin": false}, "body": "I think I mentioned this, but my opinion is that checking `x in [...]` makes it fairly easy to create un-performant code. I personally would rather make this more obvious by being super explicit, _e.g._, with a library function (say, `std.find`, or something). Also, since you can't tell the type statically, it seems like desugaring it to a function call would probably be ungainly.", "created_at": "2017-06-12T21:56:52Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121537189", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121537189"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121537189"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121537189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121543819", "pull_request_review_id": 43506794, "id": 121543819, "diff_hunk": "@@ -1839,16 +1849,49 @@ class Interpreter {\n                             goto replaceframe;\n                         }\n                     }\n-                    // Equality can be used when the types don't match.\n                     switch (ast.op) {\n+                        // Equality can be used when the types don't match.\n                         case BOP_MANIFEST_EQUAL:\n                         std::cerr << \"INTERNAL ERROR: Equals not desugared\" << std::endl;\n                         abort();\n \n+                        // Equality can be used when the types don't match.\n                         case BOP_MANIFEST_UNEQUAL:\n                         std::cerr << \"INTERNAL ERROR: Notequals not desugared\" << std::endl;\n                         abort();\n \n+                        // e in e\n+                        case BOP_IN: {\n+                            if (lhs.t != Value::STRING) {\n+                                throw makeError(ast.location,\n+                                                \"The left hand side of the 'in' operator should be \"\n+                                                \"a string,  got \" + type_str(lhs));\n+                            }\n+                            auto *field = static_cast<HeapString*>(lhs.v.h);\n+                            switch (rhs.t) {\n+                                case Value::ARRAY: {\n+                                    auto *arr = static_cast<HeapArray*>(rhs.v.h);\n+                                    // TODO(dcunnin): Implement this.\n+                                    (void) arr;\n+                                    throw makeError(ast.location, \"e in [...] not implemented yet.\");\n+                                } break;\n+\n+                                case Value::OBJECT: {\n+                                    auto *obj = static_cast<HeapObject*>(rhs.v.h);\n+                                    auto *fid = alloc->makeIdentifier(field->value);\n+                                    unsigned unused_found_at = 0;\n+                                    bool in = findObject(fid, obj, 0, unused_found_at);\n+                                    scratch = makeBoolean(in);\n+                                } break;\n+  \n+                                default:\n+                                throw makeError(ast.location,", "path": "core/vm.cpp", "position": 73, "original_position": 72, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "hausdorff", "id": 1409156, "avatar_url": "https://avatars1.githubusercontent.com/u/1409156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hausdorff", "html_url": "https://github.com/hausdorff", "followers_url": "https://api.github.com/users/hausdorff/followers", "following_url": "https://api.github.com/users/hausdorff/following{/other_user}", "gists_url": "https://api.github.com/users/hausdorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/hausdorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hausdorff/subscriptions", "organizations_url": "https://api.github.com/users/hausdorff/orgs", "repos_url": "https://api.github.com/users/hausdorff/repos", "events_url": "https://api.github.com/users/hausdorff/events{/privacy}", "received_events_url": "https://api.github.com/users/hausdorff/received_events", "type": "User", "site_admin": false}, "body": "If we support `Value::ARRAY`, we might also consider supporting `Value::STRING`, though we'd have to figure out what the semantics of that are (substring perhaps, so that `\"foo\"` \\in `\"bazfoobar\"`).", "created_at": "2017-06-12T22:36:41Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121543819", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121543819"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121543819"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121543819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121692779", "pull_request_review_id": 43739604, "id": 121692779, "diff_hunk": "@@ -310,14 +317,21 @@ class Desugarer {\n                     expr = alloc.make<Var>(expr->location, expr->openFodder, newSelf);\n                 } else if (auto *super_index = dynamic_cast<SuperIndex*>(expr)) {\n                     StringStream ss;\n-                    ss << \"$outer_super\" << (counter++);\n+                    ss << \"$outer_super_index\" << (counter++);", "path": "core/desugarer.cpp", "position": null, "original_position": 26, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Yeah String and StringStream are both char32_t.  We should probably rename them to UStringStream and UString or something.\r\n\r\nAll internal string processing is in that format, however the I/O, i.e. lexing and manifesting are in UTF-8.  So there we convert between std::string and String with explicit encode/decode functions.  Also, the Identifier object used in parameters and variables (as in the case you called out here) is also stored in UTF-8 because it is limited to [a-zA-Z_][_a-zA-Z0-9]*.  They're also interned.  Both are arbitrary decisions.\r\n\r\nFinally, the field names as stored in the HeapObject are Identifiers (even though they can be arbitrary strings).  This technically can lead to a high-level memory leak, because being interned, they are never free'd and the set of field names is not statically bound.  This doesn't cause a probably in practice, but we probably want to fix it in the Go version.\r\n", "created_at": "2017-06-13T14:22:43Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121692779", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121692779"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121692779"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121692779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 121475365}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121705543", "pull_request_review_id": 43754033, "id": 121705543, "diff_hunk": "@@ -331,14 +345,38 @@ class Desugarer {\n             if (!field.superSugar) continue;\n             // We have to bind self/super from expr1 outside the class, as we copy the expression\n             // into the field body.\n-            AST *index = field.expr1;\n             // Clone it so that we maintain the AST as a tree.\n-            ClonePass(*alloc).expr(index);\n+            AST *index = clone(field.expr1);\n             // This will remove self/super.\n             SubstituteSelfSuper(this, super_vars, counter).expr(index);\n-            AST *super_f = make<SuperIndex>(field.expr1->location, EF, EF, index, EF, nullptr);\n-            field.expr2 = make<Binary>(ast->location, EF, super_f, EF, BOP_PLUS, field.expr2);\n-            field.superSugar = false;\n+            if (true) {", "path": "core/desugarer.cpp", "position": null, "original_position": 57, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Yeah this was a temporary experiment.  For `e+: e'`, The true branch is\r\n\r\n```\r\n[e]: (if e in super then super[e] else std.zero(std.type(e')) + e'\r\n```\r\n\r\nThe false branch is\r\n\r\n```\r\n[e]: if e in super then super[e] + e' else e'\r\n```\r\n\r\nThis relates to our semantic discussion:  The two branches are equivalent in a world where `e in super` never fails.  So going forward I'll use the false branch because it's simpler.  The difference is that in the true branch, + is involved in both the two conditional cases.  For mixins `Inner = { g+: { x: 3 } }` and `Outer = { f+: Inner }` in the desugaring of Outer we have `e' = Inner`.\r\n\r\nIn the false branch this would mean Outer is desugared to `After = { f: if \"f\" in super then super.f + Inner else Inner }`.  The result of that desugaring is that `{ } + After` would be an error because `Inner` cannot stand by itself (the \"g\" in super throws an error).\r\n\r\nIn the true branch the result of `{ } + After` not Inner standing alone but `std.zero(std.type(Inner)) + Inner`, which is `{ } + Inner` which means by induction it will work for all nestings.\r\n\r\nHowever all of this is academic now since we agreed on the permissive super :)\r\n\r\nRegarding your description of your understanding, both versions work with strings.  `{} + \"\"` will do an implicit string conversion of the `{}` and indeed create a \"{}\" string rather than a HeapExtendedObject.  However `{} + \"\"` only occurs in a case like `{ f: {} } + {f+: \"\"}` which for both cases should yield `{ f: \"{}\" }`, which is correct.  In vm.cpp `countLeaves(self)` is only ever used when self has been taken from the stack, so it is always some sort of HeapObject  (A HeapString is not a HeapObject, as the base type of all garbage collected things is HeapEntity).  The else branch in countLeaves is just looking for other HeapObjects, i.e. HeapLeafObject (they have a common supertype).\r\n\r\nThanks for taking the time to figure out what you did, we really need more people to be confident in this code.", "created_at": "2017-06-13T15:04:01Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121705543", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121705543"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121705543"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121705543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 121478320}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121706362", "pull_request_review_id": 43754984, "id": 121706362, "diff_hunk": "@@ -424,3 +440,10 @@ void ClonePass::expr(AST *&ast_)\n \n     CompilerPass::expr(ast_);\n }\n+\n+AST *clone_ast(Allocator &alloc, AST *ast)", "path": "core/pass.cpp", "position": 49, "original_position": 49, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Just so it is easier to call it.  I realized we would probably be calling it quite a lot, and don't want to discourage cloning the subtree, because if the tree becomes a dag it leads to subtle bugs, whereas unnecessarily cloning is pretty harmless (slightly more static memory use).\r\n", "created_at": "2017-06-13T15:06:49Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121706362", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121706362"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121706362"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121706362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 121535874}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121717189", "pull_request_review_id": 43767220, "id": 121717189, "diff_hunk": "@@ -1839,16 +1849,49 @@ class Interpreter {\n                             goto replaceframe;\n                         }\n                     }\n-                    // Equality can be used when the types don't match.\n                     switch (ast.op) {\n+                        // Equality can be used when the types don't match.\n                         case BOP_MANIFEST_EQUAL:\n                         std::cerr << \"INTERNAL ERROR: Equals not desugared\" << std::endl;\n                         abort();\n \n+                        // Equality can be used when the types don't match.\n                         case BOP_MANIFEST_UNEQUAL:\n                         std::cerr << \"INTERNAL ERROR: Notequals not desugared\" << std::endl;\n                         abort();\n \n+                        // e in e\n+                        case BOP_IN: {\n+                            if (lhs.t != Value::STRING) {\n+                                throw makeError(ast.location,\n+                                                \"The left hand side of the 'in' operator should be \"\n+                                                \"a string,  got \" + type_str(lhs));\n+                            }\n+                            auto *field = static_cast<HeapString*>(lhs.v.h);\n+                            switch (rhs.t) {\n+                                case Value::ARRAY: {\n+                                    auto *arr = static_cast<HeapArray*>(rhs.v.h);\n+                                    // TODO(dcunnin): Implement this.", "path": "core/vm.cpp", "position": null, "original_position": 58, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Yeah I remember you making that argument before.  I wouldn't consider having `x in [...]` except that we already have it in the array and object comprehensions (as they're the same syntax as Python).  In that case it's obviously O(n) though.\r\n\r\nAnother complication is we're representing sets as arrays (sets are a library that makes sorted arrays).  In that case `e in my_set` would be O(n) instead of O(log n) which is even more confusing.\r\n\r\nThat could be fixed by having sets as a first class value, which can be done backwards-compatible as long as `std.type(my_set)` is \"array\".  However that may be even more confusing :)\r\n\r\nI think there's enough doubt to keep `e in arr` out for the moment at least.", "created_at": "2017-06-13T15:43:19Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121717189", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121717189"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121717189"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121717189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 121537189}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121717570", "pull_request_review_id": 43767678, "id": 121717570, "diff_hunk": "@@ -1839,16 +1849,49 @@ class Interpreter {\n                             goto replaceframe;\n                         }\n                     }\n-                    // Equality can be used when the types don't match.\n                     switch (ast.op) {\n+                        // Equality can be used when the types don't match.\n                         case BOP_MANIFEST_EQUAL:\n                         std::cerr << \"INTERNAL ERROR: Equals not desugared\" << std::endl;\n                         abort();\n \n+                        // Equality can be used when the types don't match.\n                         case BOP_MANIFEST_UNEQUAL:\n                         std::cerr << \"INTERNAL ERROR: Notequals not desugared\" << std::endl;\n                         abort();\n \n+                        // e in e\n+                        case BOP_IN: {\n+                            if (lhs.t != Value::STRING) {\n+                                throw makeError(ast.location,\n+                                                \"The left hand side of the 'in' operator should be \"\n+                                                \"a string,  got \" + type_str(lhs));\n+                            }\n+                            auto *field = static_cast<HeapString*>(lhs.v.h);\n+                            switch (rhs.t) {\n+                                case Value::ARRAY: {\n+                                    auto *arr = static_cast<HeapArray*>(rhs.v.h);\n+                                    // TODO(dcunnin): Implement this.\n+                                    (void) arr;\n+                                    throw makeError(ast.location, \"e in [...] not implemented yet.\");\n+                                } break;\n+\n+                                case Value::OBJECT: {\n+                                    auto *obj = static_cast<HeapObject*>(rhs.v.h);\n+                                    auto *fid = alloc->makeIdentifier(field->value);\n+                                    unsigned unused_found_at = 0;\n+                                    bool in = findObject(fid, obj, 0, unused_found_at);\n+                                    scratch = makeBoolean(in);\n+                                } break;\n+  \n+                                default:\n+                                throw makeError(ast.location,", "path": "core/vm.cpp", "position": 73, "original_position": 72, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I checked Python, it's annoying in that [1, 2, 3] is not in [0, 1, 2, 3, 4] but \"123\" is in \"01234\".  So let's punt string as well.", "created_at": "2017-06-13T15:44:37Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121717570", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121717570"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121717570"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121717570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 121543819}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121725201", "pull_request_review_id": 43776085, "id": 121725201, "diff_hunk": "@@ -310,14 +317,21 @@ class Desugarer {\n                     expr = alloc.make<Var>(expr->location, expr->openFodder, newSelf);\n                 } else if (auto *super_index = dynamic_cast<SuperIndex*>(expr)) {\n                     StringStream ss;\n-                    ss << \"$outer_super\" << (counter++);\n+                    ss << \"$outer_super_index\" << (counter++);", "path": "core/desugarer.cpp", "position": null, "original_position": 26, "commit_id": "c84a64f39b4eaf0660e093c1b1f5bf4b9f00b447", "original_commit_id": "bffda7ec8bd1d80d3d927594d6e44c3a1faef4a1", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Oh looks like I lied:  Identifiers are UTF32 which is why it uses StringStream in this case.  However the literals should also be UTF32 and I'm not sure why the compiler didn't complain here.  I guess because << is more permissive than std::base_string's + operator.  I will fix the literals.", "created_at": "2017-06-13T16:12:23Z", "updated_at": "2017-06-21T02:04:56Z", "html_url": "https://github.com/google/jsonnet/pull/318#discussion_r121725201", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/318", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/121725201"}, "html": {"href": "https://github.com/google/jsonnet/pull/318#discussion_r121725201"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/318"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/121725201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 121475365}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127342808", "pull_request_review_id": 49918928, "id": 127342808, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {\n     if (config->filenameIsCode) {\n-        *input = config->inputFile;\n-        config->inputFile = \"<cmdline>\";\n+        *input = config->inputFiles[index];\n+        config->inputFiles[index] = \"<cmdline>\"; // side effect!\n     } else {\n-        // Input file \"-\" tell Jsonnet to read stdin.\n-        if (config->inputFile == \"-\") {\n-            config->inputFile = \"<stdin>\";\n+        // Input file \"-\" tells Jsonnet to read stdin.\n+        if (config->inputFiles[index] == \"-\") {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 86, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Is it possible to provide multiple files, and have one of them in the middle be stdin? ", "created_at": "2017-07-13T21:57:42Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127342808", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127342808"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127342808"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127342808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343015", "pull_request_review_id": 49918928, "id": 127343015, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {\n     if (config->filenameIsCode) {\n-        *input = config->inputFile;\n-        config->inputFile = \"<cmdline>\";\n+        *input = config->inputFiles[index];\n+        config->inputFiles[index] = \"<cmdline>\"; // side effect!", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 80, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Please elaborate on what you mean by \"side effect\"", "created_at": "2017-07-13T21:58:50Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127343015", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343015"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127343015"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343130", "pull_request_review_id": 49918928, "id": 127343130, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 73, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Description should probably reflect the change in functionality you introduced.", "created_at": "2017-07-13T21:59:29Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127343130", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343130"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127343130"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343264", "pull_request_review_id": 49918928, "id": 127343264, "diff_hunk": "@@ -618,27 +628,29 @@ int main(int argc, const char **argv)\n             return EXIT_FAILURE;\n         }\n \n-        // Read input files.\n-        std::string input;\n-        if (!read_input(&config, &input)) {\n-            jsonnet_destroy(vm);\n-            return EXIT_FAILURE;\n-        }\n-\n         // Evaluate input Jsonnet and handle any errors from Jsonnet VM.\n         int error;\n         char *output;\n         switch (config.cmd) {\n             case EVAL: {\n+                assert(config.inputFiles.size() == 1);", "path": "cmd/jsonnet.cpp", "position": 179, "original_position": 125, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "I could be reading this wrong, but if `inputFiles` is empty the above check you guard with that \"ERROR: Already specified\" message won't catch a malformed userinput of 0 files.", "created_at": "2017-07-13T22:00:19Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127343264", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343264"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127343264"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127343264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127344417", "pull_request_review_id": 49918928, "id": 127344417, "diff_hunk": "@@ -673,38 +685,76 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 165, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "I realize you copied this restriction from the existing code, but why does it exist @sparkprime? Seems useful to pipe files through the formatter rather than modify them in place.", "created_at": "2017-07-13T22:06:51Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127344417", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127344417"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127344417"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127344417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345066", "pull_request_review_id": 49918928, "id": 127345066, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 75, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Why did you introduce `index` as a parameter? I only see this function called [here](https://github.com/google/jsonnet/pull/324/files#diff-cbfdcc436b29a37aa318778257ca6871R640) and [here](https://github.com/google/jsonnet/pull/324/files#diff-cbfdcc436b29a37aa318778257ca6871R743), each time with `0` as `index`.", "created_at": "2017-07-13T22:11:04Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127345066", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345066"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127345066"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345363", "pull_request_review_id": 49918928, "id": 127345363, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {\n     if (config->filenameIsCode) {\n-        *input = config->inputFile;\n-        config->inputFile = \"<cmdline>\";\n+        *input = config->inputFiles[index];\n+        config->inputFiles[index] = \"<cmdline>\"; // side effect!\n     } else {\n-        // Input file \"-\" tell Jsonnet to read stdin.\n-        if (config->inputFile == \"-\") {\n-            config->inputFile = \"<stdin>\";\n+        // Input file \"-\" tells Jsonnet to read stdin.\n+        if (config->inputFiles[index] == \"-\") {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 86, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Looking below I guess not - this block of code reads like it could, but I think once we figure out what to do with the constant `index` parameter this won't be a problem.", "created_at": "2017-07-13T22:12:48Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127345363", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345363"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127345363"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127342808}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345937", "pull_request_review_id": 49918928, "id": 127345937, "diff_hunk": "@@ -673,38 +685,76 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {\n+                                std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                            if (config.filenameIsCode) {\n+                                std::cerr << \"ERROR: Cannot use --in-place with --exec\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                        }\n+\n+                        std::string input;\n+                        if (!read_input_contents(inputFile, &input)) {\n+                            jsonnet_destroy(vm);\n+                            return EXIT_FAILURE;\n+                        }\n+\n+                        output = jsonnet_fmt_snippet(vm, inputFile.c_str(), input.c_str(), &error);\n+\n+                        if (error) {", "path": "cmd/jsonnet.cpp", "position": 244, "original_position": 185, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "It'd be nice if jsonnet didn't modify files until it was sure it could correctly format all of them. WDYT @sparkprime?", "created_at": "2017-07-13T22:16:22Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127345937", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345937"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127345937"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127345937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127346206", "pull_request_review_id": 49918928, "id": 127346206, "diff_hunk": "@@ -673,38 +685,76 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {\n+                                std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                            if (config.filenameIsCode) {\n+                                std::cerr << \"ERROR: Cannot use --in-place with --exec\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                        }\n+\n+                        std::string input;\n+                        if (!read_input_contents(inputFile, &input)) {\n+                            jsonnet_destroy(vm);\n+                            return EXIT_FAILURE;\n+                        }\n+\n+                        output = jsonnet_fmt_snippet(vm, inputFile.c_str(), input.c_str(), &error);\n+\n+                        if (error) {\n+                            std::cerr << output;\n+                            std::cerr.flush();\n+                            jsonnet_realloc(vm, output, 0);\n+                            jsonnet_destroy(vm);\n+                            return EXIT_FAILURE;\n+                        }\n+\n+                        if (config.fmtTest) {\n+                            // Check the output matches the input.\n+                            bool ok = output == input;\n+                            jsonnet_realloc(vm, output, 0);\n+                            jsonnet_destroy(vm);\n+                            return ok ? EXIT_SUCCESS : 2;\n+                        } else {\n+                            // Write output Jsonnet.\n+                            bool successful = write_output_file(output, output_file);\n+                            jsonnet_realloc(vm, output, 0);\n+                            if (!successful) {\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                        }\n                     }\n-                    if (config.filenameIsCode) {\n-                        std::cerr << \"ERROR: Cannot use --in-place with --exec\" << std::endl;\n+                } else {\n+                    assert(config.inputFiles.size() == 1);\n+                    // Read input file.\n+                    std::string input;\n+                    if (!read_input(&config, 0, &input)) {\n                         jsonnet_destroy(vm);\n                         return EXIT_FAILURE;\n                     }\n-                    output_file = config.inputFile;\n-                }\n \n-                output = jsonnet_fmt_snippet(vm, config.inputFile.c_str(), input.c_str(), &error);\n+                    output = jsonnet_fmt_snippet(vm, config.inputFiles[0].c_str(), input.c_str(), &error);\n \n-                if (error) {\n-                    std::cerr << output;\n-                    std::cerr.flush();\n-                    jsonnet_realloc(vm, output, 0);\n-                    jsonnet_destroy(vm);\n-                    return EXIT_FAILURE;\n-                }\n-\n-                if (config.fmtTest) {\n-                    // Check the output matches the input.\n-                    bool ok = output == input;\n-                    jsonnet_realloc(vm, output, 0);\n-                    jsonnet_destroy(vm);\n-                    return ok ? EXIT_SUCCESS : 2;\n+                    if (error) {\n+                        std::cerr << output;\n+                        std::cerr.flush();", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 241, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "STDERR is unbuffered, I don't think this is needed: https://linux.die.net/man/3/stderr", "created_at": "2017-07-13T22:18:03Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127346206", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127346206"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127346206"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127346206/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127346430", "pull_request_review_id": 49918928, "id": 127346430, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 58, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "In other places the convention seems to be to write errors with `std:cerr`, any reason to use `perror` instead here?", "created_at": "2017-07-13T22:19:25Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127346430", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127346430"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127346430"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127346430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127358611", "pull_request_review_id": 49936076, "id": 127358611, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 58, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Well, it was like that before, I have no idea. Probably b/c that was shorter than using strerror and then cerr. @sparkprime? ", "created_at": "2017-07-13T23:48:43Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127358611", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127358611"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127358611"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127358611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127346430}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127359630", "pull_request_review_id": 49937172, "id": 127359630, "diff_hunk": "@@ -618,27 +628,29 @@ int main(int argc, const char **argv)\n             return EXIT_FAILURE;\n         }\n \n-        // Read input files.\n-        std::string input;\n-        if (!read_input(&config, &input)) {\n-            jsonnet_destroy(vm);\n-            return EXIT_FAILURE;\n-        }\n-\n         // Evaluate input Jsonnet and handle any errors from Jsonnet VM.\n         int error;\n         char *output;\n         switch (config.cmd) {\n             case EVAL: {\n+                assert(config.inputFiles.size() == 1);", "path": "cmd/jsonnet.cpp", "position": 179, "original_position": 125, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "There is a check for that just above the one for \"ERROR: Already specified\".  I didn't need to touch it.", "created_at": "2017-07-13T23:57:29Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127359630", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127359630"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127359630"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127359630/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127343264}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127362084", "pull_request_review_id": 49939684, "id": 127362084, "diff_hunk": "@@ -673,38 +685,76 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 165, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "> Seems useful to pipe files through the formatter rather than modify them in place.\r\n\r\nOf course. It's only preventing specifying the input as \"-\" when changing the files in place (see the `if` above). It's still possible to do `jsonnet fmt - < somefile > output_file`, it only prevents `jsonnet fmt --in-place -` which doesn't make any sense.\r\n\r\n", "created_at": "2017-07-14T00:19:37Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127362084", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127362084"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127362084"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127362084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127344417}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127365643", "pull_request_review_id": 49943357, "id": 127365643, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 75, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "The idea was that this function shouldn't care which of the many specified files it reads, but yes it ends up being used only when there is exactly one file.", "created_at": "2017-07-14T00:53:16Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127365643", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127365643"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127365643"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127365643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127345066}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127366542", "pull_request_review_id": 49944324, "id": 127366542, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {\n     if (config->filenameIsCode) {\n-        *input = config->inputFile;\n-        config->inputFile = \"<cmdline>\";\n+        *input = config->inputFiles[index];\n+        config->inputFiles[index] = \"<cmdline>\"; // side effect!", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 80, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "It's in the function named read_input, so I would expect getting and returning the contents to be the purpose of this function. But in addition to that, in special cases it changes the filename to sth else.", "created_at": "2017-07-14T01:03:13Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127366542", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127366542"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127366542"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127366542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127343015}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127366610", "pull_request_review_id": 49944386, "id": 127366610, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {\n     if (config->filenameIsCode) {\n-        *input = config->inputFile;\n-        config->inputFile = \"<cmdline>\";\n+        *input = config->inputFiles[index];\n+        config->inputFiles[index] = \"<cmdline>\"; // side effect!\n     } else {\n-        // Input file \"-\" tell Jsonnet to read stdin.\n-        if (config->inputFile == \"-\") {\n-            config->inputFile = \"<stdin>\";\n+        // Input file \"-\" tells Jsonnet to read stdin.\n+        if (config->inputFiles[index] == \"-\") {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 86, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Yes and no. Anyway you made me realize that there is a subtle regression - it's impossible now to use --test with stdin (it will treat it as a filename). I'll fix it.", "created_at": "2017-07-14T01:03:49Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127366610", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127366610"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127366610"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127366610/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127342808}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127367270", "pull_request_review_id": 49945084, "id": 127367270, "diff_hunk": "@@ -673,38 +685,76 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {\n+                                std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                            if (config.filenameIsCode) {\n+                                std::cerr << \"ERROR: Cannot use --in-place with --exec\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                        }\n+\n+                        std::string input;\n+                        if (!read_input_contents(inputFile, &input)) {\n+                            jsonnet_destroy(vm);\n+                            return EXIT_FAILURE;\n+                        }\n+\n+                        output = jsonnet_fmt_snippet(vm, inputFile.c_str(), input.c_str(), &error);\n+\n+                        if (error) {", "path": "cmd/jsonnet.cpp", "position": 244, "original_position": 185, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "I see two ways to approach this:\r\na) Process everything as we do know, but keep the results in memory and write all of them at once afterwards.\r\nb) Just do the initial validation on all files (check that they exist, that stdin is not used with -i, maybe that they can be opened in case permissions are wrong).\r\n\r\nOf course, even with a), it's still possible that only some of them will be updated if something bad happens (file removed, permissions changed, process killed). ", "created_at": "2017-07-14T01:11:06Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127367270", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127367270"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127367270"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127367270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127345937}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448682", "pull_request_review_id": 50036778, "id": 127448682, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 75, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "It might be neater to take a pointer to the input file you're going to read then, unless you think there is an imminent use case for taking `index` that's not shown yet", "created_at": "2017-07-14T12:48:28Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127448682", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448682"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127448682"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127345066}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448783", "pull_request_review_id": 50036887, "id": 127448783, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {\n     if (config->filenameIsCode) {\n-        *input = config->inputFile;\n-        config->inputFile = \"<cmdline>\";\n+        *input = config->inputFiles[index];\n+        config->inputFiles[index] = \"<cmdline>\"; // side effect!", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 80, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Thanks, could you add this to the comment description?", "created_at": "2017-07-14T12:49:04Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127448783", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448783"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127448783"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127343015}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448843", "pull_request_review_id": 50036943, "id": 127448843, "diff_hunk": "@@ -455,44 +456,53 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n+    }\n+    config->inputFiles = remaining_args;\n+    return true;\n+}\n+\n+static bool read_input_contents(std::string filename, std::string *input) {\n+    std::ifstream f;\n+    f.open(filename);\n+    if (!f.good()) {\n+        std::string msg = \"Opening input file: \" + filename;\n+        perror(msg.c_str());\n+        return false;\n+    }\n+    input->assign(std::istreambuf_iterator<char>(f),\n+                  std::istreambuf_iterator<char>());\n+    if (!f.good()) {\n+        std::string msg = \"Reading input file: \" + filename;\n+        perror(msg.c_str());\n         return false;\n     }\n-    config->inputFile = filename;\n     return true;\n }\n \n /** Reads Jsonnet code from the input file or stdin into the input buffer. */\n-static bool read_input(JsonnetConfig* config, std::string* input) {\n+static bool read_input(JsonnetConfig* config, int index, std::string* input) {\n     if (config->filenameIsCode) {\n-        *input = config->inputFile;\n-        config->inputFile = \"<cmdline>\";\n+        *input = config->inputFiles[index];\n+        config->inputFiles[index] = \"<cmdline>\"; // side effect!\n     } else {\n-        // Input file \"-\" tell Jsonnet to read stdin.\n-        if (config->inputFile == \"-\") {\n-            config->inputFile = \"<stdin>\";\n+        // Input file \"-\" tells Jsonnet to read stdin.\n+        if (config->inputFiles[index] == \"-\") {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 86, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Good catch", "created_at": "2017-07-14T12:49:24Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127448843", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448843"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127448843"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127342808}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448932", "pull_request_review_id": 50037056, "id": 127448932, "diff_hunk": "@@ -673,38 +685,76 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 165, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Ah I see, thanks", "created_at": "2017-07-14T12:49:57Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127448932", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448932"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127448932"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127448932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127344417}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127449067", "pull_request_review_id": 50037228, "id": 127449067, "diff_hunk": "@@ -673,38 +685,76 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {\n+                                std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                            if (config.filenameIsCode) {\n+                                std::cerr << \"ERROR: Cannot use --in-place with --exec\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                        }\n+\n+                        std::string input;\n+                        if (!read_input_contents(inputFile, &input)) {\n+                            jsonnet_destroy(vm);\n+                            return EXIT_FAILURE;\n+                        }\n+\n+                        output = jsonnet_fmt_snippet(vm, inputFile.c_str(), input.c_str(), &error);\n+\n+                        if (error) {", "path": "cmd/jsonnet.cpp", "position": 244, "original_position": 185, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Yeah this is a little tricky, and might just be overkill. Curious to see what @sparkprime thinks", "created_at": "2017-07-14T12:50:57Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127449067", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127449067"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127449067"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127449067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127345937}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127722270", "pull_request_review_id": 50335212, "id": 127722270, "diff_hunk": "@@ -455,49 +456,73 @@ static bool process_args(int argc,\n         return false;\n     }\n \n-    std::string filename = remaining_args[0];\n-    if (remaining_args.size() > 1) {\n-        std::cerr << \"ERROR: Already specified \" << want\n-                  << \" as \\\"\" << filename << \"\\\"\\n\"\n-                  << std::endl;\n-        usage(std::cerr);\n-        return false;\n+    bool multiple_files_allowed = config->cmd == FMT &&\n+                                  (config->fmtTest || config->fmtInPlace);\n+    if (!multiple_files_allowed) {\n+        std::string filename = remaining_args[0];\n+        if (remaining_args.size() > 1) {\n+            std::cerr << \"ERROR: Already specified \" << want\n+                      << \" as \\\"\" << filename << \"\\\"\\n\"\n+                      << std::endl;\n+            usage(std::cerr);\n+            return false;\n+        }\n     }\n-    config->inputFile = filename;\n+    config->inputFiles = remaining_args;\n     return true;\n }\n \n+\n /** Reads Jsonnet code from the input file or stdin into the input buffer. */", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 57, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "c5c6858ce956ffe3d13e0d0f7dae8d3a7c26f7ac", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Can you update the comment - the code does not care what is in the file.", "created_at": "2017-07-17T14:25:23Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127722270", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127722270"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127722270"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127722270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127724855", "pull_request_review_id": 50335212, "id": 127724855, "diff_hunk": "@@ -673,38 +685,76 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {\n+                                std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                            if (config.filenameIsCode) {\n+                                std::cerr << \"ERROR: Cannot use --in-place with --exec\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                        }\n+\n+                        std::string input;\n+                        if (!read_input_contents(inputFile, &input)) {\n+                            jsonnet_destroy(vm);\n+                            return EXIT_FAILURE;\n+                        }\n+\n+                        output = jsonnet_fmt_snippet(vm, inputFile.c_str(), input.c_str(), &error);\n+\n+                        if (error) {", "path": "cmd/jsonnet.cpp", "position": 244, "original_position": 185, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "fdab9f0c17e1c0f5eac268bdc38182eb2c9b61c9", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I think it's fine to write out one at a time.", "created_at": "2017-07-17T14:34:15Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127724855", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127724855"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127724855"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127724855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 127345937}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127725408", "pull_request_review_id": 50335212, "id": 127725408, "diff_hunk": "@@ -673,38 +699,75 @@ int main(int argc, const char **argv)\n \n             case FMT: {\n                 std::string output_file = config.outputFile;\n-                if (config.fmtInPlace) {\n-                    if (config.inputFile == \"-\") {\n-                        std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n-                        jsonnet_destroy(vm);\n-                        return EXIT_FAILURE;\n+\n+                if (config.fmtInPlace || config.fmtTest) {\n+                    assert(config.inputFiles.size() >= 1);\n+                    for (std::string &inputFile: config.inputFiles) {\n+                        if (config.fmtInPlace) {\n+                            output_file = inputFile;\n+\n+                            if (inputFile == \"-\") {\n+                                std::cerr << \"ERROR: Cannot use --in-place with stdin\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                            if (config.filenameIsCode) {\n+                                std::cerr << \"ERROR: Cannot use --in-place with --exec\" << std::endl;\n+                                jsonnet_destroy(vm);\n+                                return EXIT_FAILURE;\n+                            }\n+                        }\n+\n+                        std::string input;\n+                        if (!read_input(&config, &inputFile, &input)) {\n+                            jsonnet_destroy(vm);\n+                            return EXIT_FAILURE;\n+                        }\n+\n+                        output = jsonnet_fmt_snippet(vm, inputFile.c_str(), input.c_str(), &error);\n+\n+                        if (error) {\n+                            std::cerr << output;\n+                            jsonnet_realloc(vm, output, 0);\n+                            jsonnet_destroy(vm);\n+                            return EXIT_FAILURE;\n+                        }\n+\n+                        if (config.fmtTest) {\n+                            // Check the output matches the input.\n+                            bool ok = output == input;\n+                            jsonnet_realloc(vm, output, 0);\n+                            if (!ok) {\n+                                return 2;", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 227, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "c5c6858ce956ffe3d13e0d0f7dae8d3a7c26f7ac", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Don't we need to destroy the vm here?", "created_at": "2017-07-17T14:36:11Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127725408", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127725408"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127725408"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127725408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127731274", "pull_request_review_id": 50335212, "id": 127731274, "diff_hunk": "@@ -110,8 +110,8 @@ void usage(std::ostream &o)\n     o << \"  -h / --help             This message\\n\";", "path": "cmd/jsonnet.cpp", "position": 17, "original_position": 1, "commit_id": "c52761c868c86a0b616189983f6842dfa18193c4", "original_commit_id": "c5c6858ce956ffe3d13e0d0f7dae8d3a7c26f7ac", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Can you change the help message to better promote the ability to use multiple filenames (I also tweaked some of the text here):\r\n\r\n```\r\nGeneral commandline:\r\njsonnet [<cmd>] {<option>} { <filename> }\r\nNote: <cmd> defaults to \"eval\".\r\n```\r\n\r\n```\r\nThe eval command:\r\njsonnet eval {<option>} <filename>\r\nNote: Only one filename is supported\r\n```\r\n\r\n```\r\nThe fmt command:\r\njsonnet fmt {<option>} { <filename> }\r\nNote: Some options do not support multiple filenames.\r\n```\r\n\r\nAnd then remove the line `Note: Multiple filenames can be provided at once when using -i or --test options.`\r\n", "created_at": "2017-07-17T14:56:30Z", "updated_at": "2017-07-17T18:04:23Z", "html_url": "https://github.com/google/jsonnet/pull/324#discussion_r127731274", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/127731274"}, "html": {"href": "https://github.com/google/jsonnet/pull/324#discussion_r127731274"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/324"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/127731274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129294637", "pull_request_review_id": 52051572, "id": 129294637, "diff_hunk": "@@ -0,0 +1,56 @@\n+#!/bin/bash\n+\n+# Copyright 2015 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+source \"tests.source\"\n+\n+# Enable next line to test the garbage collector\n+#PARAMS=\"--gc-min-objects 1 --gc-growth-trigger 1\"\n+\n+# Enable next line for a slow and thorough test\n+#VALGRIND=\"valgrind -q\"\n+\n+#VERBOSE=true\n+\n+for TEST in *.jsonnet ../examples/*.jsonnet ../examples/terraform/*.jsonnet ../benchmarks/*.jsonnet ../gc_stress/*.jsonnet ; do\n+\n+    FMT_FILE=\"$TEST\"\n+    ORIG_OUTPUT=\"$(cat $TEST)\"\n+    GOLDEN_OUTPUT=\"${ORIG_OUTPUT}\"\n+    GOLDEN_KIND=\"PLAIN\"\n+\n+    if [ -r \"$TEST.fmt.golden\" ] ; then\n+        GOLDEN_OUTPUT=$(cat \"$TEST.fmt.golden\")\n+        FMT_FILE=\"$TEST.fmt.golden\"\n+    fi\n+\n+    if [ $(echo \"$TEST\" | cut -b 1-12) == \"error.parse.\" ] ; then\n+        continue  # No point testing these", "path": "test_suite/run_fmt_idempotence_tests.sh", "position": 40, "original_position": 40, "commit_id": "1da05d57cf075a798018dcd3afff31da43b84b60", "original_commit_id": "1da05d57cf075a798018dcd3afff31da43b84b60", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Maybe it's worth testing that no regression in parsing/import formatting gets introduced that causes these to misbehave?", "created_at": "2017-07-25T12:52:36Z", "updated_at": "2017-07-25T12:52:36Z", "html_url": "https://github.com/google/jsonnet/pull/329#discussion_r129294637", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/329", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129294637"}, "html": {"href": "https://github.com/google/jsonnet/pull/329#discussion_r129294637"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/329"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129294637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129319291", "pull_request_review_id": 52079436, "id": 129319291, "diff_hunk": "@@ -0,0 +1,56 @@\n+#!/bin/bash\n+\n+# Copyright 2015 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+source \"tests.source\"\n+\n+# Enable next line to test the garbage collector\n+#PARAMS=\"--gc-min-objects 1 --gc-growth-trigger 1\"\n+\n+# Enable next line for a slow and thorough test\n+#VALGRIND=\"valgrind -q\"\n+\n+#VERBOSE=true\n+\n+for TEST in *.jsonnet ../examples/*.jsonnet ../examples/terraform/*.jsonnet ../benchmarks/*.jsonnet ../gc_stress/*.jsonnet ; do\n+\n+    FMT_FILE=\"$TEST\"\n+    ORIG_OUTPUT=\"$(cat $TEST)\"\n+    GOLDEN_OUTPUT=\"${ORIG_OUTPUT}\"\n+    GOLDEN_KIND=\"PLAIN\"\n+\n+    if [ -r \"$TEST.fmt.golden\" ] ; then\n+        GOLDEN_OUTPUT=$(cat \"$TEST.fmt.golden\")\n+        FMT_FILE=\"$TEST.fmt.golden\"\n+    fi\n+\n+    if [ $(echo \"$TEST\" | cut -b 1-12) == \"error.parse.\" ] ; then\n+        continue  # No point testing these", "path": "test_suite/run_fmt_idempotence_tests.sh", "position": 40, "original_position": 40, "commit_id": "1da05d57cf075a798018dcd3afff31da43b84b60", "original_commit_id": "1da05d57cf075a798018dcd3afff31da43b84b60", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "We don't get to format `error.parse.*` at all (formatting happens after parsing), so there is no interaction with the formatter. And we check that the error is what we expect in run_tests.sh. So I think we're covered here.\r\n\r\nUnless what you meant is running golden files and verifying that the output matches the output of original files. That could help with things like variable shadowing in imports:\r\n```\r\nlocal b = import \"b.jsonnet\";\r\nlocal a = import \"a.jsonnet\";\r\nlocal b = import \"a.jsonnet\";\r\n```\r\nBut I guess that would be another script. ", "created_at": "2017-07-25T14:22:02Z", "updated_at": "2017-07-25T14:22:02Z", "html_url": "https://github.com/google/jsonnet/pull/329#discussion_r129319291", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/329", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129319291"}, "html": {"href": "https://github.com/google/jsonnet/pull/329#discussion_r129319291"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/329"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129319291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 129294637}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128350564", "pull_request_review_id": 51022908, "id": 128350564, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {", "path": "core/formatter.cpp", "position": null, "original_position": 176, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "What's your target line width? Comments seem to adhere to 80, these are a little over", "created_at": "2017-07-19T19:58:02Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128350564", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128350564"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128350564"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128350564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128350989", "pull_request_review_id": 51022908, "id": 128350989, "diff_hunk": "@@ -594,6 +595,26 @@ class Unparser {\n  * The rest of this file contains transformations on the ASTs before unparsing. *\n  ********************************************************************************/\n \n+/** As a.push_back(elem) but preserves constraints.", "path": "core/formatter.cpp", "position": null, "original_position": 12, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Can you extend the comment to explain \"constraints\"?", "created_at": "2017-07-19T20:00:06Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128350989", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128350989"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128350989"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128350989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128352231", "pull_request_review_id": 51022908, "id": 128352231, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);\n+\n+        ImportElems newImports = extractImportElems(local, commentAfter);\n+        imports.insert(imports.end(), newImports.begin(), newImports.end());\n+\n+        if (groupBoundaryAfter(local)) {\n+            sortGroup(imports);\n+\n+            Fodder afterGroup = imports.back().afterFodder;\n+            ensureCleanNewline(beforeNextFodder);\n+            auto nextOpenFodder = concat_fodder(\n+                afterGroup,\n+                beforeNextFodder\n+            );\n+\n+            // Process the code after the current group:\n+            AST *bodyAfterGroup;\n+            Local *next = goodLocalOrNull(local->body);\n+            if (next) {\n+                // Another group of imports\n+                ImportElems nextImports;\n+                bodyAfterGroup = toplevelImport(next, nextImports, nextOpenFodder);\n+            } else {\n+                // Something else\n+                bodyAfterGroup = local->body;\n+                open_fodder(bodyAfterGroup) = nextOpenFodder;\n+            }\n+\n+            return buildGroupAST(imports, bodyAfterGroup, groupOpenFodder);\n+        } else {\n+            assert(beforeNextFodder.empty());\n+            return toplevelImport(dynamic_cast<Local*>(local->body), imports, groupOpenFodder);\n+        }\n+    }\n+\n+    void file(AST *&body)\n+    {\n+        ImportElems imports;\n+        Local *local = goodLocalOrNull(body);\n+        if (local) {\n+            body = toplevelImport(local, imports, open_fodder(local));\n+        }\n+    }\n+};\n \n std::string jsonnet_fmt(AST *ast, Fodder &final_fodder, const FmtOpts &opts)\n {\n     Allocator alloc;\n \n     // Passes to enforce style on the AST.\n+    if (opts.sortImports)", "path": "core/formatter.cpp", "position": 322, "original_position": 288, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Little nit, but I think here it's generally recommended to include braces for one line if-statements (I could be wrong)", "created_at": "2017-07-19T20:05:20Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128352231", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128352231"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128352231"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128352231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128357176", "pull_request_review_id": 51022908, "id": 128357176, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {", "path": "core/formatter.cpp", "position": null, "original_position": 208, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "This doesn't modify the input `local` contents, right? The current name kind-of suggests that it does - maybe `groupBoundaryStartsAfter` sounds more like you're asking a question rather than asking it to group a boundary.", "created_at": "2017-07-19T20:25:33Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128357176", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128357176"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128357176"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128357176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128357589", "pull_request_review_id": 51022908, "id": 128357589, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);", "path": "core/formatter.cpp", "position": null, "original_position": 238, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "What if you have multiple comments? e.g \r\n\r\n```\r\nlocal foo = \"b.jsonnet\"; /* comment1 */ /* comment2 */\r\n```", "created_at": "2017-07-19T20:27:13Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128357589", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128357589"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128357589"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128357589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128358286", "pull_request_review_id": 51022908, "id": 128358286, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);\n+\n+        ImportElems newImports = extractImportElems(local, commentAfter);\n+        imports.insert(imports.end(), newImports.begin(), newImports.end());\n+\n+        if (groupBoundaryAfter(local)) {\n+            sortGroup(imports);\n+\n+            Fodder afterGroup = imports.back().afterFodder;\n+            ensureCleanNewline(beforeNextFodder);\n+            auto nextOpenFodder = concat_fodder(\n+                afterGroup,\n+                beforeNextFodder\n+            );\n+\n+            // Process the code after the current group:\n+            AST *bodyAfterGroup;\n+            Local *next = goodLocalOrNull(local->body);\n+            if (next) {\n+                // Another group of imports\n+                ImportElems nextImports;\n+                bodyAfterGroup = toplevelImport(next, nextImports, nextOpenFodder);\n+            } else {\n+                // Something else\n+                bodyAfterGroup = local->body;\n+                open_fodder(bodyAfterGroup) = nextOpenFodder;\n+            }\n+\n+            return buildGroupAST(imports, bodyAfterGroup, groupOpenFodder);\n+        } else {\n+            assert(beforeNextFodder.empty());\n+            return toplevelImport(dynamic_cast<Local*>(local->body), imports, groupOpenFodder);\n+        }\n+    }\n+\n+    void file(AST *&body)", "path": "core/formatter.cpp", "position": 307, "original_position": 273, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Looks like other class methods have the brace on the same line as the method declaration", "created_at": "2017-07-19T20:29:51Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128358286", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128358286"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128358286"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128358286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128359534", "pull_request_review_id": 51022908, "id": 128359534, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.", "path": "core/formatter.cpp", "position": null, "original_position": 159, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Nice", "created_at": "2017-07-19T20:34:51Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128359534", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128359534"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128359534"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128359534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128360813", "pull_request_review_id": 51034149, "id": 128360813, "diff_hunk": "@@ -594,6 +595,26 @@ class Unparser {\n  * The rest of this file contains transformations on the ASTs before unparsing. *\n  ********************************************************************************/\n \n+/** As a.push_back(elem) but preserves constraints.", "path": "core/formatter.cpp", "position": null, "original_position": 12, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "It's the same as in the function below, I am referring to it in \"See concat_fodder\". It's short, so maybe duplicating it won't be so bad. Or maybe there is a better place to put these constraints?", "created_at": "2017-07-19T20:40:00Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128360813", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128360813"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128360813"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128360813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128350989}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128361140", "pull_request_review_id": 51034518, "id": 128361140, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {", "path": "core/formatter.cpp", "position": null, "original_position": 176, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Well, existing code often goes over 80, so I didn't worry about it very much. @sparkprime?", "created_at": "2017-07-19T20:41:14Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128361140", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128361140"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128361140"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128361140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128350564}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128363372", "pull_request_review_id": 51036969, "id": 128363372, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);", "path": "core/formatter.cpp", "position": null, "original_position": 238, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Maybe commentAfter is not the best name. Any suggestions? It contains all comments until the end of the line. In case a comment goes beyond the end of the line it's also a part of commentAfter. However if there are some blank lines afterwards, they go to beforeNextFodder.\r\n\r\nExample: \r\n```\r\nlocal foo = 'a.jsonnet'; /* blah blah*/ /* blah blah\r\nblah blah\r\n\r\n*/\r\n\r\n// something else\r\n\r\n{}\r\n```\r\ncommentAfter =\r\n```\r\n/* blah blah*/ /* blah blah\r\nblah blah\r\n\r\n*/\r\n```\r\nbeforeNextFodder ==\r\n```\r\n\r\n// something else\r\n\r\n```", "created_at": "2017-07-19T20:50:22Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128363372", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128363372"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128363372"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128363372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128357589}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128364883", "pull_request_review_id": 51038651, "id": 128364883, "diff_hunk": "@@ -594,6 +595,26 @@ class Unparser {\n  * The rest of this file contains transformations on the ASTs before unparsing. *\n  ********************************************************************************/\n \n+/** As a.push_back(elem) but preserves constraints.", "path": "core/formatter.cpp", "position": null, "original_position": 12, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Ah if its in the surrounding code I'd leave it as is", "created_at": "2017-07-19T20:56:33Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128364883", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128364883"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128364883"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128364883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128350989}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128364886", "pull_request_review_id": 51038658, "id": 128364886, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {", "path": "core/formatter.cpp", "position": null, "original_position": 208, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Well, it's not the boundary that starts :-). So maybe just `groupEndsAfter`? ", "created_at": "2017-07-19T20:56:34Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128364886", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128364886"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128364886"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128364886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128357176}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365467", "pull_request_review_id": 51039282, "id": 128365467, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);", "path": "core/formatter.cpp", "position": null, "original_position": 238, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Ah nice - I guess the name is a little tricky, maybe `adjacentCommentFodder`?", "created_at": "2017-07-19T20:58:56Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128365467", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365467"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128365467"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365467/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128357589}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365653", "pull_request_review_id": 51039505, "id": 128365653, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);\n+\n+        ImportElems newImports = extractImportElems(local, commentAfter);\n+        imports.insert(imports.end(), newImports.begin(), newImports.end());\n+\n+        if (groupBoundaryAfter(local)) {\n+            sortGroup(imports);\n+\n+            Fodder afterGroup = imports.back().afterFodder;\n+            ensureCleanNewline(beforeNextFodder);\n+            auto nextOpenFodder = concat_fodder(\n+                afterGroup,\n+                beforeNextFodder\n+            );\n+\n+            // Process the code after the current group:\n+            AST *bodyAfterGroup;\n+            Local *next = goodLocalOrNull(local->body);\n+            if (next) {\n+                // Another group of imports\n+                ImportElems nextImports;\n+                bodyAfterGroup = toplevelImport(next, nextImports, nextOpenFodder);\n+            } else {\n+                // Something else\n+                bodyAfterGroup = local->body;\n+                open_fodder(bodyAfterGroup) = nextOpenFodder;\n+            }\n+\n+            return buildGroupAST(imports, bodyAfterGroup, groupOpenFodder);\n+        } else {\n+            assert(beforeNextFodder.empty());\n+            return toplevelImport(dynamic_cast<Local*>(local->body), imports, groupOpenFodder);\n+        }\n+    }\n+\n+    void file(AST *&body)\n+    {\n+        ImportElems imports;\n+        Local *local = goodLocalOrNull(body);\n+        if (local) {\n+            body = toplevelImport(local, imports, open_fodder(local));\n+        }\n+    }\n+};\n \n std::string jsonnet_fmt(AST *ast, Fodder &final_fodder, const FmtOpts &opts)\n {\n     Allocator alloc;\n \n     // Passes to enforce style on the AST.\n+    if (opts.sortImports)", "path": "core/formatter.cpp", "position": 322, "original_position": 288, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": ":+1:, I like to always put braces. However similar code in this function doesn't use them. @sparkprime?", "created_at": "2017-07-19T20:59:50Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128365653", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365653"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128365653"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128352231}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365955", "pull_request_review_id": 51039846, "id": 128365955, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {", "path": "core/formatter.cpp", "position": null, "original_position": 208, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Sounds good to me", "created_at": "2017-07-19T21:01:12Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128365955", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365955"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128365955"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128365955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128357176}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128367727", "pull_request_review_id": 51041845, "id": 128367727, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);\n+\n+        ImportElems newImports = extractImportElems(local, commentAfter);\n+        imports.insert(imports.end(), newImports.begin(), newImports.end());\n+\n+        if (groupBoundaryAfter(local)) {\n+            sortGroup(imports);\n+\n+            Fodder afterGroup = imports.back().afterFodder;\n+            ensureCleanNewline(beforeNextFodder);\n+            auto nextOpenFodder = concat_fodder(\n+                afterGroup,\n+                beforeNextFodder\n+            );\n+\n+            // Process the code after the current group:\n+            AST *bodyAfterGroup;\n+            Local *next = goodLocalOrNull(local->body);\n+            if (next) {\n+                // Another group of imports\n+                ImportElems nextImports;\n+                bodyAfterGroup = toplevelImport(next, nextImports, nextOpenFodder);\n+            } else {\n+                // Something else\n+                bodyAfterGroup = local->body;\n+                open_fodder(bodyAfterGroup) = nextOpenFodder;\n+            }\n+\n+            return buildGroupAST(imports, bodyAfterGroup, groupOpenFodder);\n+        } else {\n+            assert(beforeNextFodder.empty());\n+            return toplevelImport(dynamic_cast<Local*>(local->body), imports, groupOpenFodder);\n+        }\n+    }\n+\n+    void file(AST *&body)", "path": "core/formatter.cpp", "position": 307, "original_position": 273, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Most (but not all) methods in this file have it on a new line, so I'll convert to that. Maybe I should try running clang-format over the whole code (not this change ofc) and maybe I can add it to automatic tests so that we have it always consistent.", "created_at": "2017-07-19T21:08:57Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128367727", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128367727"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128367727"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128367727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128358286}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128369015", "pull_request_review_id": 51043292, "id": 128369015, "diff_hunk": "@@ -56,7 +56,11 @@ static inline std::ostream &operator<<(std::ostream &o, const FodderElement &f)\n {\n     switch (f.kind) {\n         case FodderElement::LINE_END:\n-        o << \"END(\" << f.blanks << \", \" << f.indent << \", \" << f.comment[0] << \")\";\n+        o << \"END(\" << f.blanks << \", \" << f.indent;\n+        if (!f.comment.empty()) {\n+            o << \", \" << f.comment[0];\n+        };", "path": "core/lexer.h", "position": null, "original_position": 8, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "stray semicolon", "created_at": "2017-07-19T21:14:36Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128369015", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128369015"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128369015"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128369015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128494578", "pull_request_review_id": 51178675, "id": 128494578, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);\n+\n+        ImportElems newImports = extractImportElems(local, commentAfter);\n+        imports.insert(imports.end(), newImports.begin(), newImports.end());\n+\n+        if (groupBoundaryAfter(local)) {\n+            sortGroup(imports);\n+\n+            Fodder afterGroup = imports.back().afterFodder;\n+            ensureCleanNewline(beforeNextFodder);\n+            auto nextOpenFodder = concat_fodder(\n+                afterGroup,\n+                beforeNextFodder\n+            );\n+\n+            // Process the code after the current group:\n+            AST *bodyAfterGroup;\n+            Local *next = goodLocalOrNull(local->body);\n+            if (next) {\n+                // Another group of imports\n+                ImportElems nextImports;\n+                bodyAfterGroup = toplevelImport(next, nextImports, nextOpenFodder);\n+            } else {\n+                // Something else\n+                bodyAfterGroup = local->body;\n+                open_fodder(bodyAfterGroup) = nextOpenFodder;\n+            }\n+\n+            return buildGroupAST(imports, bodyAfterGroup, groupOpenFodder);\n+        } else {\n+            assert(beforeNextFodder.empty());\n+            return toplevelImport(dynamic_cast<Local*>(local->body), imports, groupOpenFodder);\n+        }\n+    }\n+\n+    void file(AST *&body)", "path": "core/formatter.cpp", "position": 307, "original_position": 273, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Good idea", "created_at": "2017-07-20T11:57:49Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128494578", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128494578"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128494578"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128494578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128358286}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128542022", "pull_request_review_id": 51232269, "id": 128542022, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);\n+\n+        ImportElems newImports = extractImportElems(local, commentAfter);\n+        imports.insert(imports.end(), newImports.begin(), newImports.end());\n+\n+        if (groupBoundaryAfter(local)) {\n+            sortGroup(imports);\n+\n+            Fodder afterGroup = imports.back().afterFodder;\n+            ensureCleanNewline(beforeNextFodder);\n+            auto nextOpenFodder = concat_fodder(\n+                afterGroup,\n+                beforeNextFodder\n+            );\n+\n+            // Process the code after the current group:\n+            AST *bodyAfterGroup;\n+            Local *next = goodLocalOrNull(local->body);\n+            if (next) {\n+                // Another group of imports\n+                ImportElems nextImports;\n+                bodyAfterGroup = toplevelImport(next, nextImports, nextOpenFodder);\n+            } else {\n+                // Something else\n+                bodyAfterGroup = local->body;\n+                open_fodder(bodyAfterGroup) = nextOpenFodder;\n+            }\n+\n+            return buildGroupAST(imports, bodyAfterGroup, groupOpenFodder);\n+        } else {\n+            assert(beforeNextFodder.empty());\n+            return toplevelImport(dynamic_cast<Local*>(local->body), imports, groupOpenFodder);\n+        }\n+    }\n+\n+    void file(AST *&body)", "path": "core/formatter.cpp", "position": 307, "original_position": 273, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Done, i.e. it's consistent with the rest of the file now.", "created_at": "2017-07-20T15:05:11Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128542022", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128542022"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128542022"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128542022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128358286}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593148", "pull_request_review_id": 51288725, "id": 128593148, "diff_hunk": "@@ -60,6 +60,101 @@ enum ASTType {\n     AST_VAR\n };\n \n+static inline std::string ASTTypeToString(ASTType type) {\n+    switch(type) {\n+        case AST_APPLY:\n+        return \"AST_APPLY\";\n+        break;", "path": "core/ast.h", "position": null, "original_position": 8, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "the breaks are redundant because of the return, and then it'll look nice on one line per case (and be easily sortable too)", "created_at": "2017-07-20T18:21:16Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128593148", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593148"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128593148"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593290", "pull_request_review_id": 51288725, "id": 128593290, "diff_hunk": "@@ -60,6 +60,101 @@ enum ASTType {\n     AST_VAR\n };\n \n+static inline std::string ASTTypeToString(ASTType type) {\n+    switch(type) {\n+        case AST_APPLY:\n+        return \"AST_APPLY\";\n+        break;\n+        case AST_ARRAY:\n+        return \"AST_ARRAY\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION:\n+        return \"AST_ARRAY_COMPREHENSION\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION_SIMPLE:\n+        return \"AST_ARRAY_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_ASSERT:\n+        return \"AST_ASSERT\";\n+        break;\n+        case AST_BINARY:\n+        return \"AST_BINARY\";\n+        break;\n+        case AST_BUILTIN_FUNCTION:\n+        return \"AST_BUILTIN_FUNCTION\";\n+        break;\n+        case AST_CONDITIONAL:\n+        return \"AST_CONDITIONAL\";\n+        break;\n+        case AST_DESUGARED_OBJECT:\n+        return \"AST_DESUGARED_OBJECT\";\n+        break;\n+        case AST_DOLLAR:\n+        return \"AST_DOLLAR\";\n+        break;\n+        case AST_ERROR:\n+        return \"AST_ERROR\";\n+        break;\n+        case AST_FUNCTION:\n+        return \"AST_FUNCTION\";\n+        break;\n+        case AST_IMPORT:\n+        return \"AST_IMPORT\";\n+        break;\n+        case AST_IMPORTSTR:\n+        return \"AST_IMPORTSTR\";\n+        break;\n+        case AST_INDEX:\n+        return \"AST_INDEX\";\n+        break;\n+        case AST_IN_SUPER:\n+        return \"AST_IN_SUPER\";\n+        break;\n+        case AST_LITERAL_BOOLEAN:\n+        return \"AST_LITERAL_BOOLEAN\";\n+        break;\n+        case AST_LITERAL_NULL:\n+        return \"AST_LITERAL_NULL\";\n+        break;\n+        case AST_LITERAL_NUMBER:\n+        return \"AST_LITERAL_NUMBER\";\n+        break;\n+        case AST_LITERAL_STRING:\n+        return \"AST_LITERAL_STRING\";\n+        break;\n+        case AST_LOCAL:\n+        return \"AST_LOCAL\";\n+        break;\n+        case AST_OBJECT:\n+        return \"AST_OBJECT\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION:\n+        return \"AST_OBJECT_COMPREHENSION\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION_SIMPLE:\n+        return \"AST_OBJECT_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_PARENS:\n+        return \"AST_PARENS\";\n+        break;\n+        case AST_SELF:\n+        return \"AST_SELF\";\n+        break;\n+        case AST_SUPER_INDEX:\n+        return \"AST_SUPER_INDEX\";\n+        break;\n+        case AST_UNARY:\n+        return \"AST_UNARY\";\n+        break;\n+        case AST_VAR:\n+        return \"AST_VAR\";\n+        break;\n+        default:\n+        assert(false && \"Unknown AST type\");", "path": "core/ast.h", "position": null, "original_position": 94, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "std::cerr << \"Unknown AST type\" << std::endl;\r\nabort()", "created_at": "2017-07-20T18:21:54Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128593290", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593290"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128593290"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593437", "pull_request_review_id": 51288725, "id": 128593437, "diff_hunk": "@@ -60,6 +60,101 @@ enum ASTType {\n     AST_VAR\n };\n \n+static inline std::string ASTTypeToString(ASTType type) {\n+    switch(type) {\n+        case AST_APPLY:\n+        return \"AST_APPLY\";\n+        break;\n+        case AST_ARRAY:\n+        return \"AST_ARRAY\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION:\n+        return \"AST_ARRAY_COMPREHENSION\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION_SIMPLE:\n+        return \"AST_ARRAY_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_ASSERT:\n+        return \"AST_ASSERT\";\n+        break;\n+        case AST_BINARY:\n+        return \"AST_BINARY\";\n+        break;\n+        case AST_BUILTIN_FUNCTION:\n+        return \"AST_BUILTIN_FUNCTION\";\n+        break;\n+        case AST_CONDITIONAL:\n+        return \"AST_CONDITIONAL\";\n+        break;\n+        case AST_DESUGARED_OBJECT:\n+        return \"AST_DESUGARED_OBJECT\";\n+        break;\n+        case AST_DOLLAR:\n+        return \"AST_DOLLAR\";\n+        break;\n+        case AST_ERROR:\n+        return \"AST_ERROR\";\n+        break;\n+        case AST_FUNCTION:\n+        return \"AST_FUNCTION\";\n+        break;\n+        case AST_IMPORT:\n+        return \"AST_IMPORT\";\n+        break;\n+        case AST_IMPORTSTR:\n+        return \"AST_IMPORTSTR\";\n+        break;\n+        case AST_INDEX:\n+        return \"AST_INDEX\";\n+        break;\n+        case AST_IN_SUPER:\n+        return \"AST_IN_SUPER\";\n+        break;\n+        case AST_LITERAL_BOOLEAN:\n+        return \"AST_LITERAL_BOOLEAN\";\n+        break;\n+        case AST_LITERAL_NULL:\n+        return \"AST_LITERAL_NULL\";\n+        break;\n+        case AST_LITERAL_NUMBER:\n+        return \"AST_LITERAL_NUMBER\";\n+        break;\n+        case AST_LITERAL_STRING:\n+        return \"AST_LITERAL_STRING\";\n+        break;\n+        case AST_LOCAL:\n+        return \"AST_LOCAL\";\n+        break;\n+        case AST_OBJECT:\n+        return \"AST_OBJECT\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION:\n+        return \"AST_OBJECT_COMPREHENSION\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION_SIMPLE:\n+        return \"AST_OBJECT_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_PARENS:\n+        return \"AST_PARENS\";\n+        break;\n+        case AST_SELF:\n+        return \"AST_SELF\";\n+        break;\n+        case AST_SUPER_INDEX:\n+        return \"AST_SUPER_INDEX\";\n+        break;\n+        case AST_UNARY:\n+        return \"AST_UNARY\";\n+        break;\n+        case AST_VAR:\n+        return \"AST_VAR\";\n+        break;\n+        default:\n+        assert(false && \"Unknown AST type\");", "path": "core/ast.h", "position": null, "original_position": 94, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "(because ??? is no more useful than an abort and harder to debug where it came from)", "created_at": "2017-07-20T18:22:33Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128593437", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593437"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128593437"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128593437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128593290}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128632954", "pull_request_review_id": 51288725, "id": 128632954, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n \n-// TODO(dcunnin): Add pass to alphabeticize top level imports.\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems) {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();\n+    }\n+\n+    /// Check if the import group ends after this local\n+    bool groupBoundaryAfter(Local *local) {\n+        Local *next = goodLocalOrNull(local->body);\n+        if (!next) {\n+            return true;\n+        }\n+\n+        bool newlineReached = false;\n+        for (const auto &fodderElem: open_fodder(next)) {\n+            if (newlineReached || fodderElem.blanks > 0) {\n+                return true;\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                newlineReached = true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ensureCleanNewline(Fodder &fodder) {\n+        if (fodder.size() == 0 || fodder.back().kind == FodderElement::Kind::INTERSTITIAL) {\n+            fodder.push_back(FodderElement(FodderElement::Kind::LINE_END, 0, 0, {}));\n+        }\n+    }\n+\n+    AST *toplevelImport(Local *local, ImportElems &imports, const Fodder &groupOpenFodder) {\n+        assert(isGoodLocal(local));\n+\n+        Fodder commentAfter, beforeNextFodder;\n+        std::tie(commentAfter, beforeNextFodder) = splitOpenFodder(local->body);\n+\n+        ensureCleanNewline(commentAfter);\n+\n+        ImportElems newImports = extractImportElems(local, commentAfter);\n+        imports.insert(imports.end(), newImports.begin(), newImports.end());\n+\n+        if (groupBoundaryAfter(local)) {\n+            sortGroup(imports);\n+\n+            Fodder afterGroup = imports.back().afterFodder;\n+            ensureCleanNewline(beforeNextFodder);\n+            auto nextOpenFodder = concat_fodder(\n+                afterGroup,\n+                beforeNextFodder\n+            );\n+\n+            // Process the code after the current group:\n+            AST *bodyAfterGroup;\n+            Local *next = goodLocalOrNull(local->body);\n+            if (next) {\n+                // Another group of imports\n+                ImportElems nextImports;\n+                bodyAfterGroup = toplevelImport(next, nextImports, nextOpenFodder);\n+            } else {\n+                // Something else\n+                bodyAfterGroup = local->body;\n+                open_fodder(bodyAfterGroup) = nextOpenFodder;\n+            }\n+\n+            return buildGroupAST(imports, bodyAfterGroup, groupOpenFodder);\n+        } else {\n+            assert(beforeNextFodder.empty());\n+            return toplevelImport(dynamic_cast<Local*>(local->body), imports, groupOpenFodder);\n+        }\n+    }\n+\n+    void file(AST *&body)\n+    {\n+        ImportElems imports;\n+        Local *local = goodLocalOrNull(body);\n+        if (local) {\n+            body = toplevelImport(local, imports, open_fodder(local));\n+        }\n+    }\n+};\n \n std::string jsonnet_fmt(AST *ast, Fodder &final_fodder, const FmtOpts &opts)\n {\n     Allocator alloc;\n \n     // Passes to enforce style on the AST.\n+    if (opts.sortImports)", "path": "core/formatter.cpp", "position": 322, "original_position": 288, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I don't think it makes a significant difference either way", "created_at": "2017-07-20T21:15:59Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128632954", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128632954"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128632954"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128632954/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128352231}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128798566", "pull_request_review_id": 51288725, "id": 128798566, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.", "path": "core/formatter.cpp", "position": null, "original_position": 123, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "\"and what\" (missing word)", "created_at": "2017-07-21T15:58:47Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128798566", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128798566"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128798566"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128798566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128801545", "pull_request_review_id": 51288725, "id": 128801545, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;", "path": "core/formatter.cpp", "position": null, "original_position": 148, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Can you add a comment to the effect of \"Associate blank lines with the subsequent fodder\".", "created_at": "2017-07-21T16:13:33Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128801545", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128801545"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128801545"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128801545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128828994", "pull_request_review_id": 51549387, "id": 128828994, "diff_hunk": "@@ -1724,16 +1733,233 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import) {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local) {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr) {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr) {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports) {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after) {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n \n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder) {", "path": "core/formatter.cpp", "position": null, "original_position": 176, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "0ec5b3b74b9da471625f6f48e60029f3a5c6370b", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Ok, I got the answer. It's 100 columns.", "created_at": "2017-07-21T18:22:34Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128828994", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128828994"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128828994"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128828994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128350564}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897500", "pull_request_review_id": 51288725, "id": 128897500, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {", "path": "core/formatter.cpp", "position": 107, "original_position": 105, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "You probably also want to check functionSugar == false", "created_at": "2017-07-22T14:07:53Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128897500", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897500"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128897500"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897522", "pull_request_review_id": 51288725, "id": 128897522, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here", "path": "core/formatter.cpp", "position": null, "original_position": 126, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "since this is generic code, it's probably best if the example just refers to prev_token and token", "created_at": "2017-07-22T14:09:40Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128897522", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897522"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128897522"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897823", "pull_request_review_id": 51288725, "id": 128897823, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)", "path": "core/formatter.cpp", "position": null, "original_position": 78, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Can you add a comment saying what is in afterFodder and what constraints exist on the bind.", "created_at": "2017-07-22T14:28:32Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128897823", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897823"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128897823"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897849", "pull_request_review_id": 51288725, "id": 128897849, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)", "path": "core/formatter.cpp", "position": null, "original_position": 78, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "And that the key is the filename being imported", "created_at": "2017-07-22T14:30:17Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128897849", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897849"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128897849"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128897849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128897823}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128902654", "pull_request_review_id": 51288725, "id": 128902654, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)", "path": "core/formatter.cpp", "position": null, "original_position": 134, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Since you only use expr to get the fodder, may as well pass in the fodder and call this splitFodder.  Then the description becomes:\r\n\r\nSplit fodder after the first new line / paragraph fodder, leaving blank lines after the newline in the second half.\r\n\r\nThe two returned fodders can be concatenated using concat_fodder to get the original fodder.\r\n\r\nIf that's not what it's doing, please help me fix my understanding :)", "created_at": "2017-07-22T18:41:16Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128902654", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128902654"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128902654"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128902654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128902958", "pull_request_review_id": 51288725, "id": 128902958, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());", "path": "core/formatter.cpp", "position": null, "original_position": 149, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Assertion does not always hold:  (please add this test case to the suite)\r\n\r\n```\r\nlocal b = import \"b.jsonnet\";\r\n/* foo */\r\n\r\n/* bar */\r\nlocal a = import \"a.jsonnet\";\r\n3\r\n```\r\n\r\n```\r\njsonnet: core/formatter.cpp:1821: std::pair<std::vector<FodderElement>, std::vector<FodderElement> > SortImports::splitOpenFodder(AST*): Assertion `beforeThis.empty()' failed.\r\n```\r\n\r\nI guess you want:\r\n```\r\nif (fodderElem.kind != FodderElement::Kind::INTERSTITIAL && !inSecondPart) {\r\n```", "created_at": "2017-07-22T19:01:00Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128902958", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128902958"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128902958"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128902958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128906096", "pull_request_review_id": 51288725, "id": 128906096, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)\n+    {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n+\n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder)\n+    {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,", "path": "core/formatter.cpp", "position": null, "original_position": 199, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Seems like you could just put {*import.bind} here.", "created_at": "2017-07-22T22:20:31Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128906096", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128906096"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128906096"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128906096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128906339", "pull_request_review_id": 51288725, "id": 128906339, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)\n+    {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n+\n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder)\n+    {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n+\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems)\n+    {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();", "path": "core/formatter.cpp", "position": null, "original_position": 214, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "std::unique only recognizes consecutive duplicated elements.  I think you want to make idents a std::set and test whether idents.size() < elems.size()\r\n\r\nPlease add a test case:\r\n```\r\nlocal b = import \"b.jsonnet\";\r\nlocal a = import \"a.jsonnet\";\r\nlocal b = import \"a.jsonnet\";\r\n```", "created_at": "2017-07-22T22:34:09Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128906339", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128906339"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128906339"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128906339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907309", "pull_request_review_id": 51288725, "id": 128907309, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)", "path": "core/formatter.cpp", "position": null, "original_position": 173, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "This is currently not good behavior:\r\n\r\n```\r\nlocal b = import \"b.jsonnet\",  # B comment.\r\n      a = import \"a.jsonnet\";  # A comment.\r\na + b \r\n```\r\n\r\nformats to\r\n\r\n```\r\nlocal  # B comment.\r\n      a = import \"a.jsonnet\";\r\nlocal b = import \"b.jsonnet\";  # A comment.\r\na + b\r\n```\r\n\r\nand if they're sorted to start with:\r\n\r\n```\r\nlocal a = import \"a.jsonnet\",  # A comment.\r\n      b = import \"b.jsonnet\";  # B comment.\r\na + b\r\n```\r\n\r\nyou get:\r\n\r\n```\r\nlocal a = import \"a.jsonnet\";  # B comment.\r\nlocal  # A comment.\r\n      b = import \"b.jsonnet\";\r\na + b\r\n```\r\n\r\n\r\n\r\nFirstly I think \"after\" (which is called adjacent in the caller, and that is a better name) needs to be applied to the last one, not the first one.\r\n\r\nSecondly the opening fodder of the bind (which is varFodder I think) needs to be used as \"adjacent\" for the previous bind.\r\n\r\nSince this is quite complicated, and of dubious value, maybe it's better to exclude these kinds of locals (binds.size() > 1) from isGoodLocal.  I'll leave it up to you to decide what to do.", "created_at": "2017-07-22T23:50:00Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128907309", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907309"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128907309"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907369", "pull_request_review_id": 51288725, "id": 128907369, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)\n+    {\n+        ImportElems result;", "path": "core/formatter.cpp", "position": null, "original_position": 175, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Can you also add a comment saying that the opening fodder of local is lost, and is presumed to be preserved somewhere else.", "created_at": "2017-07-22T23:56:31Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r128907369", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907369"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r128907369"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129076709", "pull_request_review_id": 51813857, "id": 129076709, "diff_hunk": "@@ -60,6 +60,101 @@ enum ASTType {\n     AST_VAR\n };\n \n+static inline std::string ASTTypeToString(ASTType type) {\n+    switch(type) {\n+        case AST_APPLY:\n+        return \"AST_APPLY\";\n+        break;\n+        case AST_ARRAY:\n+        return \"AST_ARRAY\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION:\n+        return \"AST_ARRAY_COMPREHENSION\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION_SIMPLE:\n+        return \"AST_ARRAY_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_ASSERT:\n+        return \"AST_ASSERT\";\n+        break;\n+        case AST_BINARY:\n+        return \"AST_BINARY\";\n+        break;\n+        case AST_BUILTIN_FUNCTION:\n+        return \"AST_BUILTIN_FUNCTION\";\n+        break;\n+        case AST_CONDITIONAL:\n+        return \"AST_CONDITIONAL\";\n+        break;\n+        case AST_DESUGARED_OBJECT:\n+        return \"AST_DESUGARED_OBJECT\";\n+        break;\n+        case AST_DOLLAR:\n+        return \"AST_DOLLAR\";\n+        break;\n+        case AST_ERROR:\n+        return \"AST_ERROR\";\n+        break;\n+        case AST_FUNCTION:\n+        return \"AST_FUNCTION\";\n+        break;\n+        case AST_IMPORT:\n+        return \"AST_IMPORT\";\n+        break;\n+        case AST_IMPORTSTR:\n+        return \"AST_IMPORTSTR\";\n+        break;\n+        case AST_INDEX:\n+        return \"AST_INDEX\";\n+        break;\n+        case AST_IN_SUPER:\n+        return \"AST_IN_SUPER\";\n+        break;\n+        case AST_LITERAL_BOOLEAN:\n+        return \"AST_LITERAL_BOOLEAN\";\n+        break;\n+        case AST_LITERAL_NULL:\n+        return \"AST_LITERAL_NULL\";\n+        break;\n+        case AST_LITERAL_NUMBER:\n+        return \"AST_LITERAL_NUMBER\";\n+        break;\n+        case AST_LITERAL_STRING:\n+        return \"AST_LITERAL_STRING\";\n+        break;\n+        case AST_LOCAL:\n+        return \"AST_LOCAL\";\n+        break;\n+        case AST_OBJECT:\n+        return \"AST_OBJECT\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION:\n+        return \"AST_OBJECT_COMPREHENSION\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION_SIMPLE:\n+        return \"AST_OBJECT_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_PARENS:\n+        return \"AST_PARENS\";\n+        break;\n+        case AST_SELF:\n+        return \"AST_SELF\";\n+        break;\n+        case AST_SUPER_INDEX:\n+        return \"AST_SUPER_INDEX\";\n+        break;\n+        case AST_UNARY:\n+        return \"AST_UNARY\";\n+        break;\n+        case AST_VAR:\n+        return \"AST_VAR\";\n+        break;\n+        default:\n+        assert(false && \"Unknown AST type\");", "path": "core/ast.h", "position": null, "original_position": 94, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Well, \"???\" was there just to make the compiler happy. There's an `assert(false && \"err msg\")` just above it, doing pretty much the same thing as your proposition.\r\n\r\nNext time I'll add a comment `// never reached` or sth like that to the `return` statement, but here the compiler is smart enough not to issue a warning about not returning if I just remove `return \"???\"` (probably b/c it can check that all cases are covered). \r\n\r\nPlease let me know if you think that:\r\n```\r\nstd::cerr << \"Unknown AST type\" << std::endl;\r\nabort();\r\n```\r\nis better than:\r\n```\r\nassert(false && \"Unknown AST type\");\r\n```", "created_at": "2017-07-24T15:54:33Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129076709", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129076709"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129076709"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129076709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128593290}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129086549", "pull_request_review_id": 51824713, "id": 129086549, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)\n+    {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n+\n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder)\n+    {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,\n+                body\n+            );\n+            body = local;\n+        }\n+\n+        return body;\n+    }\n \n+    bool duplicatedVariables(const ImportElems &elems)\n+    {\n+        std::vector<UString> idents;\n+        for (const auto &elem: elems) {\n+            idents.push_back(elem.bind->var->name);\n+        }\n+        return std::unique(idents.begin(), idents.end()) != idents.end();", "path": "core/formatter.cpp", "position": null, "original_position": 214, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Argh, I forgot to sort it. :/ I believe `sort` + `unique` is faster, so I default to it, even though it's (as I have demonstrated) a little bug-prone. But yeah, I think set solution is more readable, I'll change to that. ", "created_at": "2017-07-24T16:31:14Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129086549", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129086549"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129086549"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129086549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128906339}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129087507", "pull_request_review_id": 51825726, "id": 129087507, "diff_hunk": "@@ -60,6 +60,101 @@ enum ASTType {\n     AST_VAR\n };\n \n+static inline std::string ASTTypeToString(ASTType type) {\n+    switch(type) {\n+        case AST_APPLY:\n+        return \"AST_APPLY\";\n+        break;", "path": "core/ast.h", "position": null, "original_position": 8, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "done", "created_at": "2017-07-24T16:34:58Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129087507", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129087507"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129087507"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129087507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128593148}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129092498", "pull_request_review_id": 51831151, "id": 129092498, "diff_hunk": "@@ -60,6 +60,101 @@ enum ASTType {\n     AST_VAR\n };\n \n+static inline std::string ASTTypeToString(ASTType type) {\n+    switch(type) {\n+        case AST_APPLY:\n+        return \"AST_APPLY\";\n+        break;\n+        case AST_ARRAY:\n+        return \"AST_ARRAY\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION:\n+        return \"AST_ARRAY_COMPREHENSION\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION_SIMPLE:\n+        return \"AST_ARRAY_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_ASSERT:\n+        return \"AST_ASSERT\";\n+        break;\n+        case AST_BINARY:\n+        return \"AST_BINARY\";\n+        break;\n+        case AST_BUILTIN_FUNCTION:\n+        return \"AST_BUILTIN_FUNCTION\";\n+        break;\n+        case AST_CONDITIONAL:\n+        return \"AST_CONDITIONAL\";\n+        break;\n+        case AST_DESUGARED_OBJECT:\n+        return \"AST_DESUGARED_OBJECT\";\n+        break;\n+        case AST_DOLLAR:\n+        return \"AST_DOLLAR\";\n+        break;\n+        case AST_ERROR:\n+        return \"AST_ERROR\";\n+        break;\n+        case AST_FUNCTION:\n+        return \"AST_FUNCTION\";\n+        break;\n+        case AST_IMPORT:\n+        return \"AST_IMPORT\";\n+        break;\n+        case AST_IMPORTSTR:\n+        return \"AST_IMPORTSTR\";\n+        break;\n+        case AST_INDEX:\n+        return \"AST_INDEX\";\n+        break;\n+        case AST_IN_SUPER:\n+        return \"AST_IN_SUPER\";\n+        break;\n+        case AST_LITERAL_BOOLEAN:\n+        return \"AST_LITERAL_BOOLEAN\";\n+        break;\n+        case AST_LITERAL_NULL:\n+        return \"AST_LITERAL_NULL\";\n+        break;\n+        case AST_LITERAL_NUMBER:\n+        return \"AST_LITERAL_NUMBER\";\n+        break;\n+        case AST_LITERAL_STRING:\n+        return \"AST_LITERAL_STRING\";\n+        break;\n+        case AST_LOCAL:\n+        return \"AST_LOCAL\";\n+        break;\n+        case AST_OBJECT:\n+        return \"AST_OBJECT\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION:\n+        return \"AST_OBJECT_COMPREHENSION\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION_SIMPLE:\n+        return \"AST_OBJECT_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_PARENS:\n+        return \"AST_PARENS\";\n+        break;\n+        case AST_SELF:\n+        return \"AST_SELF\";\n+        break;\n+        case AST_SUPER_INDEX:\n+        return \"AST_SUPER_INDEX\";\n+        break;\n+        case AST_UNARY:\n+        return \"AST_UNARY\";\n+        break;\n+        case AST_VAR:\n+        return \"AST_VAR\";\n+        break;\n+        default:\n+        assert(false && \"Unknown AST type\");", "path": "core/ast.h", "position": null, "original_position": 94, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "It is better because the asserts can be disabled, and most people expect that to not change the behavior of the code.", "created_at": "2017-07-24T16:55:13Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129092498", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129092498"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129092498"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129092498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128593290}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129094767", "pull_request_review_id": 51833570, "id": 129094767, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)", "path": "core/formatter.cpp", "position": null, "original_position": 173, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Done, i.e. I have fixed it. I may add some more tests.\r\n\r\nBTW I see some real value in it - in discoverability/UX. Otherwise the first-time user may assume that import sorting doesn't work or that it requires some additional setup and never change the style (how would they know that they need to use one-local-per-import?).", "created_at": "2017-07-24T17:04:37Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129094767", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129094767"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129094767"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129094767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128907309}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129105050", "pull_request_review_id": 51844429, "id": 129105050, "diff_hunk": "@@ -60,6 +60,101 @@ enum ASTType {\n     AST_VAR\n };\n \n+static inline std::string ASTTypeToString(ASTType type) {\n+    switch(type) {\n+        case AST_APPLY:\n+        return \"AST_APPLY\";\n+        break;\n+        case AST_ARRAY:\n+        return \"AST_ARRAY\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION:\n+        return \"AST_ARRAY_COMPREHENSION\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION_SIMPLE:\n+        return \"AST_ARRAY_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_ASSERT:\n+        return \"AST_ASSERT\";\n+        break;\n+        case AST_BINARY:\n+        return \"AST_BINARY\";\n+        break;\n+        case AST_BUILTIN_FUNCTION:\n+        return \"AST_BUILTIN_FUNCTION\";\n+        break;\n+        case AST_CONDITIONAL:\n+        return \"AST_CONDITIONAL\";\n+        break;\n+        case AST_DESUGARED_OBJECT:\n+        return \"AST_DESUGARED_OBJECT\";\n+        break;\n+        case AST_DOLLAR:\n+        return \"AST_DOLLAR\";\n+        break;\n+        case AST_ERROR:\n+        return \"AST_ERROR\";\n+        break;\n+        case AST_FUNCTION:\n+        return \"AST_FUNCTION\";\n+        break;\n+        case AST_IMPORT:\n+        return \"AST_IMPORT\";\n+        break;\n+        case AST_IMPORTSTR:\n+        return \"AST_IMPORTSTR\";\n+        break;\n+        case AST_INDEX:\n+        return \"AST_INDEX\";\n+        break;\n+        case AST_IN_SUPER:\n+        return \"AST_IN_SUPER\";\n+        break;\n+        case AST_LITERAL_BOOLEAN:\n+        return \"AST_LITERAL_BOOLEAN\";\n+        break;\n+        case AST_LITERAL_NULL:\n+        return \"AST_LITERAL_NULL\";\n+        break;\n+        case AST_LITERAL_NUMBER:\n+        return \"AST_LITERAL_NUMBER\";\n+        break;\n+        case AST_LITERAL_STRING:\n+        return \"AST_LITERAL_STRING\";\n+        break;\n+        case AST_LOCAL:\n+        return \"AST_LOCAL\";\n+        break;\n+        case AST_OBJECT:\n+        return \"AST_OBJECT\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION:\n+        return \"AST_OBJECT_COMPREHENSION\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION_SIMPLE:\n+        return \"AST_OBJECT_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_PARENS:\n+        return \"AST_PARENS\";\n+        break;\n+        case AST_SELF:\n+        return \"AST_SELF\";\n+        break;\n+        case AST_SUPER_INDEX:\n+        return \"AST_SUPER_INDEX\";\n+        break;\n+        case AST_UNARY:\n+        return \"AST_UNARY\";\n+        break;\n+        case AST_VAR:\n+        return \"AST_VAR\";\n+        break;\n+        default:\n+        assert(false && \"Unknown AST type\");", "path": "core/ast.h", "position": null, "original_position": 94, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Actually can't you just remove the default case entirely?", "created_at": "2017-07-24T17:44:11Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129105050", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129105050"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129105050"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129105050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128593290}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129110385", "pull_request_review_id": 51850192, "id": 129110385, "diff_hunk": "@@ -60,6 +60,101 @@ enum ASTType {\n     AST_VAR\n };\n \n+static inline std::string ASTTypeToString(ASTType type) {\n+    switch(type) {\n+        case AST_APPLY:\n+        return \"AST_APPLY\";\n+        break;\n+        case AST_ARRAY:\n+        return \"AST_ARRAY\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION:\n+        return \"AST_ARRAY_COMPREHENSION\";\n+        break;\n+        case AST_ARRAY_COMPREHENSION_SIMPLE:\n+        return \"AST_ARRAY_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_ASSERT:\n+        return \"AST_ASSERT\";\n+        break;\n+        case AST_BINARY:\n+        return \"AST_BINARY\";\n+        break;\n+        case AST_BUILTIN_FUNCTION:\n+        return \"AST_BUILTIN_FUNCTION\";\n+        break;\n+        case AST_CONDITIONAL:\n+        return \"AST_CONDITIONAL\";\n+        break;\n+        case AST_DESUGARED_OBJECT:\n+        return \"AST_DESUGARED_OBJECT\";\n+        break;\n+        case AST_DOLLAR:\n+        return \"AST_DOLLAR\";\n+        break;\n+        case AST_ERROR:\n+        return \"AST_ERROR\";\n+        break;\n+        case AST_FUNCTION:\n+        return \"AST_FUNCTION\";\n+        break;\n+        case AST_IMPORT:\n+        return \"AST_IMPORT\";\n+        break;\n+        case AST_IMPORTSTR:\n+        return \"AST_IMPORTSTR\";\n+        break;\n+        case AST_INDEX:\n+        return \"AST_INDEX\";\n+        break;\n+        case AST_IN_SUPER:\n+        return \"AST_IN_SUPER\";\n+        break;\n+        case AST_LITERAL_BOOLEAN:\n+        return \"AST_LITERAL_BOOLEAN\";\n+        break;\n+        case AST_LITERAL_NULL:\n+        return \"AST_LITERAL_NULL\";\n+        break;\n+        case AST_LITERAL_NUMBER:\n+        return \"AST_LITERAL_NUMBER\";\n+        break;\n+        case AST_LITERAL_STRING:\n+        return \"AST_LITERAL_STRING\";\n+        break;\n+        case AST_LOCAL:\n+        return \"AST_LOCAL\";\n+        break;\n+        case AST_OBJECT:\n+        return \"AST_OBJECT\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION:\n+        return \"AST_OBJECT_COMPREHENSION\";\n+        break;\n+        case AST_OBJECT_COMPREHENSION_SIMPLE:\n+        return \"AST_OBJECT_COMPREHENSION_SIMPLE\";\n+        break;\n+        case AST_PARENS:\n+        return \"AST_PARENS\";\n+        break;\n+        case AST_SELF:\n+        return \"AST_SELF\";\n+        break;\n+        case AST_SUPER_INDEX:\n+        return \"AST_SUPER_INDEX\";\n+        break;\n+        case AST_UNARY:\n+        return \"AST_UNARY\";\n+        break;\n+        case AST_VAR:\n+        return \"AST_VAR\";\n+        break;\n+        default:\n+        assert(false && \"Unknown AST type\");", "path": "core/ast.h", "position": null, "original_position": 94, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "done", "created_at": "2017-07-24T18:04:32Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129110385", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129110385"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129110385"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129110385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128593290}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129110652", "pull_request_review_id": 51850494, "id": 129110652, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {", "path": "core/formatter.cpp", "position": 107, "original_position": 105, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "done (+ test)", "created_at": "2017-07-24T18:05:41Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129110652", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129110652"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129110652"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129110652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128897500}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129116398", "pull_request_review_id": 51856646, "id": 129116398, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)", "path": "core/formatter.cpp", "position": null, "original_position": 78, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "done", "created_at": "2017-07-24T18:27:35Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129116398", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129116398"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129116398"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129116398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128897823}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129119127", "pull_request_review_id": 51859682, "id": 129119127, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)", "path": "core/formatter.cpp", "position": null, "original_position": 78, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "done", "created_at": "2017-07-24T18:38:48Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129119127", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129119127"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129119127"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129119127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128897823}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129120718", "pull_request_review_id": 51861433, "id": 129120718, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());", "path": "core/formatter.cpp", "position": null, "original_position": 149, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "good catch, fixed", "created_at": "2017-07-24T18:45:10Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129120718", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129120718"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129120718"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129120718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128902958}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129121235", "pull_request_review_id": 51862054, "id": 129121235, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)\n+    {\n+        ImportElems result;\n+        for (auto &bind: local->binds) {\n+            Import *import = dynamic_cast<Import*>(bind.body);\n+            assert(import != nullptr);\n+            result.emplace_back(sortingKey(import), after, &bind);\n+            after = {FodderElement(FodderElement::Kind::LINE_END, 0, 0, {})};\n+        }\n+        return result;\n+    }\n+\n+    AST *buildGroupAST(ImportElems &imports, AST *body, const Fodder &groupOpenFodder)\n+    {\n+        for (int i = imports.size() - 1; i >= 0; --i) {\n+            auto &import = imports[i];\n+            Fodder fodder;\n+            if (i == 0) {\n+                fodder = groupOpenFodder;\n+            } else {\n+                fodder = imports[i - 1].afterFodder;\n+            }\n+            Local::Binds binds({*import.bind});\n+            auto *local = alloc.make<Local>(\n+                LocationRange(),\n+                fodder,\n+                binds,", "path": "core/formatter.cpp", "position": null, "original_position": 199, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "No, I can't. But a separate variable is unnecessary.", "created_at": "2017-07-24T18:47:14Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129121235", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129121235"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129121235"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129121235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128906096}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129121826", "pull_request_review_id": 51862746, "id": 129121826, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)\n+    {\n+        ImportElems result;", "path": "core/formatter.cpp", "position": null, "original_position": 175, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "I have changed the function to just take the binds, instead of whole local, so now it should be obvious.", "created_at": "2017-07-24T18:49:37Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129121826", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129121826"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129121826"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129121826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128907369}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129124162", "pull_request_review_id": 51865253, "id": 129124162, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.", "path": "core/formatter.cpp", "position": null, "original_position": 123, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "done (there are major changes to this comment)", "created_at": "2017-07-24T18:58:01Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129124162", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129124162"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129124162"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129124162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128798566}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129124637", "pull_request_review_id": 51865794, "id": 129124637, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here", "path": "core/formatter.cpp", "position": null, "original_position": 126, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Done. I went with prev_token, next_token.", "created_at": "2017-07-24T18:59:54Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129124637", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129124637"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129124637"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129124637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128897522}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129125422", "pull_request_review_id": 51866654, "id": 129125422, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)", "path": "core/formatter.cpp", "position": null, "original_position": 134, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2017-07-24T19:03:10Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129125422", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129125422"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129125422"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129125422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128902654}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129125701", "pull_request_review_id": 51866957, "id": 129125701, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;", "path": "core/formatter.cpp", "position": null, "original_position": 148, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "done", "created_at": "2017-07-24T19:04:23Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129125701", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129125701"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129125701"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129125701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128801545}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129144994", "pull_request_review_id": 51888472, "id": 129144994, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)", "path": "core/formatter.cpp", "position": null, "original_position": 173, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "eh, there are still some weird cases:\r\n```\r\nlocal /* bbb */ b = import \"b.jsonnet\",  # B comment.\r\n      /* aaa\r\n         aaa\r\n         aaa */ a = import \"a.jsonnet\";  # A comment.\r\n```\r\nor\r\n```\r\nlocal b = import \"b.jsonnet\",  /* BBB */ /* B comment.\r\n      bbb\r\n      bbb\r\n      bbb */ a = import \"a.jsonnet\";  # A comment.\r\n```", "created_at": "2017-07-24T20:29:54Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129144994", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129144994"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129144994"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129144994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128907309}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129360452", "pull_request_review_id": 52125526, "id": 129360452, "diff_hunk": "@@ -1724,16 +1734,245 @@ class FixIndentation {\n     }\n };\n \n+/** Sort top-level imports.\n+ *\n+ * Top-level imports are `local x = import 'xxx.jsonnet` expressions\n+ * that go before anything else in the file (more precisely all such imports\n+ * that are either the root of AST or a direct child (body) of a top-level\n+ * import.\n+ *\n+ * Grouping of imports is preserved. Groups of imports are separated by blank\n+ * lines or lines containing comments.\n+ */\n+class SortImports {\n+    /// Internal representation of an import\n+    struct ImportElem {\n+        ImportElem(UString key, Fodder afterFodder, Local::Bind *bind)\n+          : key(key), afterFodder(afterFodder), bind(bind) { }\n+        UString key;\n+        Fodder afterFodder;\n+        Local::Bind *bind;\n+        bool operator<(const ImportElem &elem) const {\n+            return key < elem.key;\n+        }\n+    };\n+\n+    typedef std::vector<ImportElem> ImportElems;\n+\n+    Allocator &alloc;\n+\n+    public:\n+    SortImports(Allocator &alloc) : alloc(alloc) { }\n+\n+    /// Get the value by which the imports should be sorted.\n+    /// The imports are sorted by UTF-32 codepoints without case folding\n+    UString sortingKey(Import *import)\n+    {\n+        return import->file->value;\n+    }\n+\n+    /// Check if `local` expression is used for importing,\n+    bool isGoodLocal(Local *local)\n+    {\n+        for (const auto &bind: local->binds) {\n+            if (bind.body->type != AST_IMPORT) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    Local *goodLocalOrNull(AST *expr)\n+    {\n+        if (auto *local = dynamic_cast<Local*>(expr)) {\n+            return isGoodLocal(local) ? local : nullptr;\n+        } else {\n+            return nullptr;\n+        }\n+    }\n+\n+    /** Split openFodder into what logically belongs to the previous AST node\n+     * what belongs to the current AST node.\n+     *\n+     * Example:\n+     * local x = import \"xxx.jsonnet\"; // Importing stuff here\n+     *\n+     * // blah blah\n+     * {}\n+     *\n+     * In such case \"// Importing  stuff here\\n\" part of the fodder belongs\n+     * to the `local` and the rest to the {}.\n+     */\n+    std::pair<Fodder, Fodder> splitOpenFodder(AST *expr)\n+    {\n+        const Fodder &fodder = open_fodder(expr);\n+        Fodder afterPrev, beforeThis;\n+        bool inSecondPart = false;\n+        for (const auto &fodderElem: fodder) {\n+            if (inSecondPart) {\n+                fodder_push_back(beforeThis, fodderElem);\n+            } else {\n+                afterPrev.push_back(fodderElem);\n+            }\n+            if (fodderElem.kind != FodderElement::Kind::INTERSTITIAL) {\n+                inSecondPart = true;\n+                if (fodderElem.blanks > 0) {\n+                    afterPrev.back().blanks = 0;\n+                    assert(beforeThis.empty());\n+                    beforeThis.emplace_back(\n+                        FodderElement::Kind::LINE_END,\n+                        fodderElem.blanks,\n+                        fodderElem.indent,\n+                        std::vector<std::string>()\n+                    );\n+                }\n+            }\n+        }\n+        return {afterPrev, beforeThis};\n+    }\n+\n+    void sortGroup(ImportElems &imports)\n+    {\n+        // We don't want to change behaviour in such case:\n+        // local foo = \"b.jsonnet\";\n+        // local foo = \"a.jsonnet\";\n+        // So we don't change the order when there are shadowed variables.\n+        if (!duplicatedVariables(imports)) {\n+            std::sort(imports.begin(), imports.end());\n+        }\n+    }\n+\n+    ImportElems extractImportElems(Local *local, Fodder after)", "path": "core/formatter.cpp", "position": null, "original_position": 173, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "ec66e3b132023c9463ea7a93486b8db2c172bf6c", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Ok, that's due to paragraph handling. Now the clean line invariant should be preserved. The output is still a little weird, but the input was too.", "created_at": "2017-07-25T16:44:42Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129360452", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129360452"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129360452"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129360452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128907309}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129468468", "pull_request_review_id": 52243654, "id": 129468468, "diff_hunk": "@@ -113,13 +117,76 @@ static inline std::ostream &operator<<(std::ostream &o, const FodderElement &f)\n \n /** A sequence of fodder elements, typically between two tokens.\n  *\n- * A LINE_END is not allowed to follow a PARAGRAPH or a LINE_END.  This can be represented by\n+ * A LINE_END is not allowed to follow a PARAGRAPH or a LINE_END. This can be represented by\n  * replacing the indent of the prior fodder and increasing the number of blank lines if necessary.\n  * If there was a comment, it can be represented by changing the LINE_END to a paragraph containing\n  * the same single comment string.\n+ *\n+ * There must be a LINE_END or a PARAGRAPH before a PARAGRAPH.", "path": "core/lexer.h", "position": 23, "original_position": 23, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "e3920498a82da3b59dd8b80d4819e4c8b0882639", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Didn't we decide this wasn't necessary?", "created_at": "2017-07-26T02:08:44Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129468468", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129468468"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129468468"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129468468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129610389", "pull_request_review_id": 52402382, "id": 129610389, "diff_hunk": "@@ -113,13 +117,76 @@ static inline std::ostream &operator<<(std::ostream &o, const FodderElement &f)\n \n /** A sequence of fodder elements, typically between two tokens.\n  *\n- * A LINE_END is not allowed to follow a PARAGRAPH or a LINE_END.  This can be represented by\n+ * A LINE_END is not allowed to follow a PARAGRAPH or a LINE_END. This can be represented by\n  * replacing the indent of the prior fodder and increasing the number of blank lines if necessary.\n  * If there was a comment, it can be represented by changing the LINE_END to a paragraph containing\n  * the same single comment string.\n+ *\n+ * There must be a LINE_END or a PARAGRAPH before a PARAGRAPH.", "path": "core/lexer.h", "position": 23, "original_position": 23, "commit_id": "2903a6a1d9fb3629d62a5f077da02075a7d99c63", "original_commit_id": "e3920498a82da3b59dd8b80d4819e4c8b0882639", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "I think that actually this is a good thing after all.\r\n\r\nSome reasons starting paragraphs on a clean line is a good thing (I think you've mentioned most of them in our discussion):\r\n* Having paragraphs starting mid-line is a weird input and boundary case for all the passes that touch fodders and newlines. It's more \"hygienic\" to eliminate these cases completely.\r\n* We don't allow paragraphs to end mid-line (which is a very good thing, as it would lead to even weirder cases and it would prevent clean conversion to single-line comments). So symmetry here is nice.\r\n* I have randomly asked some people and apparently no one can think of a reason why someone would want to have paragraphs starting mid-line in their code.\r\n\r\nSome reasons why the current representation is reasonable (compared to e.g. treating the line before as part of the paragraph):\r\n* How to otherwise represent the line comment that can go in the line before? Keeping it in a paragraph is very ugly (it effectively gets rid of the invariant + allows mixing comment styles within a paragraph). Some rule like \"PARAGRAPH starts with an endline unless there is LINE_END before it\" is better, but still a little confusing.\r\n* Why not just another pass? Because having these newlines affects other passes, for example FixIndentation and SortImports . So we want to keep this as invariant at all times and not just when we're done. \r\n* Some existing code depends on it. There's a good chance some bugs would be introduced while changing it. I'm not really convinced that the alternatives I can think of now are actually better so keeping things as they are seems like a reasonable default. Especially since this PR is about something else.", "created_at": "2017-07-26T15:39:40Z", "updated_at": "2017-07-26T15:54:01Z", "html_url": "https://github.com/google/jsonnet/pull/325#discussion_r129610389", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129610389"}, "html": {"href": "https://github.com/google/jsonnet/pull/325#discussion_r129610389"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/325"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129610389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 129468468}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130364930", "pull_request_review_id": 53231229, "id": 130364930, "diff_hunk": "@@ -18,9 +18,36 @@\n EXECUTED=0\n FAILED=0\n \n-# Display successful as well as failed tests (useful if they are slow).\n-VERBOSE=false\n+# Display additional information such as successful tests (useful if they are slow).\n+VERBOSE=\"${VERBOSE:-false}\"\n \n+separator() {\n+    echo -e \"\\n-----------------------------\\n\"\n+}\n+\n+get_temp_dir() {\n+    if [ -z \"$TMP_DIR\" ]; then\n+        # Simplest and most portable way I could find.\n+        TMP_DIR=\"`python2 -c \"import tempfile; print(tempfile.mkdtemp(prefix='jsonnet_'))\"`\"", "path": "test_suite/tests.source", "position": null, "original_position": 16, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Did you consider something along the lines of\r\n\r\n```\r\nTMP_DIR=$(mktemp -d jsonnet_XXXX)\r\n```", "created_at": "2017-07-31T14:17:24Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130364930", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130364930"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130364930"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130364930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130365509", "pull_request_review_id": 53231229, "id": 130365509, "diff_hunk": "@@ -963,6 +963,280 @@ class PrettyFieldNames : public FmtPass {\n     }\n };\n \n+/// Add newlines inside complex structures (arrays, objects etc.).\n+///\n+/// The main principle is that a structure can either be:\n+/// * expanded and contain newlines in all the designated places\n+/// * unexpanded and not contain any newlines in any of designated places.\n+///\n+/// It only looks shallowly at the AST nodes, so there may be some newlines deeper that\n+/// don't affect expanding. For example:\n+/// [{\n+///     'a': 'b',\n+///     'c': 'd',\n+/// }]\n+/// The outer array can be unexpanded, because there are no newlines between\n+class FixNewlines: public FmtPass {\n+    using FmtPass::visit;\n+\n+    bool shouldExpand(const Array *array)\n+    {\n+        for (const auto &elem: array->elements) {\n+            if (countNewlines(open_fodder(elem.expr)) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(array->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(Array *array)\n+    {\n+        for (auto &elem: array->elements) {\n+            ensureCleanNewline(open_fodder(elem.expr));\n+        }\n+        ensureCleanNewline(array->closeFodder);\n+    }\n+\n+    Fodder &objectFieldOpenFodder(ObjectField &field)\n+    {\n+        if (field.kind == ObjectField::Kind::FIELD_STR) {\n+            return field.expr1->openFodder;\n+        }\n+        return field.fodder1;\n+    }\n+\n+    bool shouldExpand(Object *object)\n+    {\n+        for (auto &field: object->fields) {\n+            if (countNewlines(objectFieldOpenFodder(field)) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(object->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(Object *object)\n+    {\n+        for (auto &field: object->fields) {\n+            ensureCleanNewline(objectFieldOpenFodder(field));\n+        }\n+        ensureCleanNewline(object->closeFodder);\n+    }\n+\n+    bool shouldExpand(Local *local)\n+    {\n+        for (auto &bind: local->binds) {\n+            if (countNewlines(bind.varFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void expand(Local *local)\n+    {\n+        bool first = true;\n+        for (auto &bind: local->binds) {\n+            if (!first) {\n+                ensureCleanNewline(bind.varFodder);\n+            }\n+            first = false;\n+        }\n+    }\n+\n+    bool shouldExpand(ArrayComprehension *comp)\n+    {\n+        if (countNewlines(open_fodder(comp->body)) > 0) {\n+            return true;\n+        }\n+        for (auto &spec: comp->specs) {\n+            if (countNewlines(spec.openFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(comp->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(ArrayComprehension *comp)\n+    {\n+        ensureCleanNewline(open_fodder(comp->body));\n+        for (auto &spec: comp->specs) {\n+            ensureCleanNewline(spec.openFodder);\n+        }\n+        ensureCleanNewline(comp->closeFodder);\n+    }\n+\n+    bool shouldExpand(ObjectComprehension *comp)\n+    {\n+        for (auto &field: comp->fields) {\n+            if (countNewlines(objectFieldOpenFodder(field)) > 0) {\n+                return true;\n+            }\n+        }\n+        for (auto &spec: comp->specs) {\n+            if (countNewlines(spec.openFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(comp->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(ObjectComprehension *comp)\n+    {\n+        for (auto &field: comp->fields) {\n+            ensureCleanNewline(objectFieldOpenFodder(field));\n+        }\n+        for (auto &spec: comp->specs) {\n+            ensureCleanNewline(spec.openFodder);\n+        }\n+        ensureCleanNewline(comp->closeFodder);\n+    }\n+\n+    bool shouldExpand(Parens *parens)\n+    {\n+        return countNewlines(open_fodder(parens->expr)) > 0\n+            || countNewlines(parens->closeFodder) > 0;\n+    }\n+\n+    void expand(Parens *parens)\n+    {\n+        ensureCleanNewline(open_fodder(parens->expr));\n+        ensureCleanNewline(parens->closeFodder);\n+    }\n+\n+    Fodder &argParamOpenFodder(ArgParam &param)\n+    {\n+        if (param.id != nullptr) {\n+            return param.idFodder;\n+        } else if (param.expr != nullptr) {\n+            return open_fodder(param.expr);\n+        } else {\n+            std::cerr << \"Invalid ArgParam\" << std::endl;\n+            abort();\n+        }\n+    }\n+\n+    // Example:\n+    // f(1, 2,\n+    //   3)\n+    // Should be expanded to:\n+    // f(1,\n+    //   2,\n+    //   3)\n+    bool shouldExpandBetween(ArgParams &params)\n+    {\n+        bool first = true;\n+        for (auto &param: params) {\n+            if (!first && countNewlines(argParamOpenFodder(param)) > 0) {\n+                return true;\n+            }\n+            first = false;\n+        }\n+        return false;\n+    }\n+\n+    void expandBetween(ArgParams &params)\n+    {\n+        bool first = true;\n+        for (auto &param: params) {\n+            if (!first) {\n+                ensureCleanNewline(argParamOpenFodder(param));\n+            }\n+            first = false;\n+        }\n+    }\n+\n+    // Example:\n+    // very_long_function_on_a_long_line_so_arguments_dont_fit_on_the_same_line(\n+    //     1, 2, 3)\n+    // Should be expanded to:\n+    // very_long_function_on_a_long_line_so_arguments_dont_fit_on_the_same_line(", "path": "core/formatter.cpp", "position": null, "original_position": 203, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "I'm not familiar with the other formatting passes, but are any considerations taken for line length? Reading the code here it seems the expansion happens when args are already on another line, not if function is too long.", "created_at": "2017-07-31T14:19:18Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130365509", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130365509"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130365509"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130365509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130365810", "pull_request_review_id": 53231229, "id": 130365810, "diff_hunk": "@@ -963,6 +963,280 @@ class PrettyFieldNames : public FmtPass {\n     }\n };\n \n+/// Add newlines inside complex structures (arrays, objects etc.).\n+///\n+/// The main principle is that a structure can either be:\n+/// * expanded and contain newlines in all the designated places\n+/// * unexpanded and not contain any newlines in any of designated places.\n+///\n+/// It only looks shallowly at the AST nodes, so there may be some newlines deeper that\n+/// don't affect expanding. For example:\n+/// [{\n+///     'a': 'b',\n+///     'c': 'd',\n+/// }]\n+/// The outer array can be unexpanded, because there are no newlines between\n+class FixNewlines: public FmtPass {\n+    using FmtPass::visit;\n+\n+    bool shouldExpand(const Array *array)\n+    {\n+        for (const auto &elem: array->elements) {\n+            if (countNewlines(open_fodder(elem.expr)) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(array->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(Array *array)\n+    {\n+        for (auto &elem: array->elements) {\n+            ensureCleanNewline(open_fodder(elem.expr));\n+        }\n+        ensureCleanNewline(array->closeFodder);\n+    }\n+\n+    Fodder &objectFieldOpenFodder(ObjectField &field)\n+    {\n+        if (field.kind == ObjectField::Kind::FIELD_STR) {\n+            return field.expr1->openFodder;\n+        }\n+        return field.fodder1;\n+    }\n+\n+    bool shouldExpand(Object *object)\n+    {\n+        for (auto &field: object->fields) {\n+            if (countNewlines(objectFieldOpenFodder(field)) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(object->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(Object *object)\n+    {\n+        for (auto &field: object->fields) {\n+            ensureCleanNewline(objectFieldOpenFodder(field));\n+        }\n+        ensureCleanNewline(object->closeFodder);\n+    }\n+\n+    bool shouldExpand(Local *local)\n+    {\n+        for (auto &bind: local->binds) {\n+            if (countNewlines(bind.varFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void expand(Local *local)\n+    {\n+        bool first = true;\n+        for (auto &bind: local->binds) {\n+            if (!first) {\n+                ensureCleanNewline(bind.varFodder);\n+            }\n+            first = false;\n+        }\n+    }\n+\n+    bool shouldExpand(ArrayComprehension *comp)\n+    {\n+        if (countNewlines(open_fodder(comp->body)) > 0) {\n+            return true;\n+        }\n+        for (auto &spec: comp->specs) {\n+            if (countNewlines(spec.openFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(comp->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(ArrayComprehension *comp)\n+    {\n+        ensureCleanNewline(open_fodder(comp->body));\n+        for (auto &spec: comp->specs) {\n+            ensureCleanNewline(spec.openFodder);\n+        }\n+        ensureCleanNewline(comp->closeFodder);\n+    }\n+\n+    bool shouldExpand(ObjectComprehension *comp)\n+    {\n+        for (auto &field: comp->fields) {\n+            if (countNewlines(objectFieldOpenFodder(field)) > 0) {\n+                return true;\n+            }\n+        }\n+        for (auto &spec: comp->specs) {\n+            if (countNewlines(spec.openFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(comp->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(ObjectComprehension *comp)\n+    {\n+        for (auto &field: comp->fields) {\n+            ensureCleanNewline(objectFieldOpenFodder(field));\n+        }\n+        for (auto &spec: comp->specs) {\n+            ensureCleanNewline(spec.openFodder);\n+        }\n+        ensureCleanNewline(comp->closeFodder);\n+    }\n+\n+    bool shouldExpand(Parens *parens)\n+    {\n+        return countNewlines(open_fodder(parens->expr)) > 0\n+            || countNewlines(parens->closeFodder) > 0;\n+    }\n+\n+    void expand(Parens *parens)\n+    {\n+        ensureCleanNewline(open_fodder(parens->expr));\n+        ensureCleanNewline(parens->closeFodder);\n+    }\n+\n+    Fodder &argParamOpenFodder(ArgParam &param)\n+    {\n+        if (param.id != nullptr) {\n+            return param.idFodder;\n+        } else if (param.expr != nullptr) {\n+            return open_fodder(param.expr);\n+        } else {\n+            std::cerr << \"Invalid ArgParam\" << std::endl;\n+            abort();\n+        }\n+    }\n+\n+    // Example:\n+    // f(1, 2,\n+    //   3)\n+    // Should be expanded to:\n+    // f(1,\n+    //   2,\n+    //   3)", "path": "core/formatter.cpp", "position": 176, "original_position": 175, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Shouldn't the closing paren live on a new line to match the [below style](https://github.com/google/jsonnet/pull/334/files#diff-7171b03fc4ff999fe62969d7161eba37R1168)? Or is that handled separately?  ", "created_at": "2017-07-31T14:20:18Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130365810", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130365810"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130365810"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130365810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130372325", "pull_request_review_id": 53239455, "id": 130372325, "diff_hunk": "@@ -18,9 +18,36 @@\n EXECUTED=0\n FAILED=0\n \n-# Display successful as well as failed tests (useful if they are slow).\n-VERBOSE=false\n+# Display additional information such as successful tests (useful if they are slow).\n+VERBOSE=\"${VERBOSE:-false}\"\n \n+separator() {\n+    echo -e \"\\n-----------------------------\\n\"\n+}\n+\n+get_temp_dir() {\n+    if [ -z \"$TMP_DIR\" ]; then\n+        # Simplest and most portable way I could find.\n+        TMP_DIR=\"`python2 -c \"import tempfile; print(tempfile.mkdtemp(prefix='jsonnet_'))\"`\"", "path": "test_suite/tests.source", "position": null, "original_position": 16, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Yes. There are portability problems. OS X and GNU versions of `mktemp` need different arguments. Invoking Python seems much cleaner to me than trying to autodetect the version or trying the other version if it fails (the latter is the top answer here https://unix.stackexchange.com/questions/30091/fix-or-alternative-for-mktemp-in-os-x).", "created_at": "2017-07-31T14:42:43Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130372325", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130372325"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130372325"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130372325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 130364930}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130373495", "pull_request_review_id": 53240828, "id": 130373495, "diff_hunk": "@@ -963,6 +963,280 @@ class PrettyFieldNames : public FmtPass {\n     }\n };\n \n+/// Add newlines inside complex structures (arrays, objects etc.).\n+///\n+/// The main principle is that a structure can either be:\n+/// * expanded and contain newlines in all the designated places\n+/// * unexpanded and not contain any newlines in any of designated places.\n+///\n+/// It only looks shallowly at the AST nodes, so there may be some newlines deeper that\n+/// don't affect expanding. For example:\n+/// [{\n+///     'a': 'b',\n+///     'c': 'd',\n+/// }]\n+/// The outer array can be unexpanded, because there are no newlines between\n+class FixNewlines: public FmtPass {\n+    using FmtPass::visit;\n+\n+    bool shouldExpand(const Array *array)\n+    {\n+        for (const auto &elem: array->elements) {\n+            if (countNewlines(open_fodder(elem.expr)) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(array->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(Array *array)\n+    {\n+        for (auto &elem: array->elements) {\n+            ensureCleanNewline(open_fodder(elem.expr));\n+        }\n+        ensureCleanNewline(array->closeFodder);\n+    }\n+\n+    Fodder &objectFieldOpenFodder(ObjectField &field)\n+    {\n+        if (field.kind == ObjectField::Kind::FIELD_STR) {\n+            return field.expr1->openFodder;\n+        }\n+        return field.fodder1;\n+    }\n+\n+    bool shouldExpand(Object *object)\n+    {\n+        for (auto &field: object->fields) {\n+            if (countNewlines(objectFieldOpenFodder(field)) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(object->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(Object *object)\n+    {\n+        for (auto &field: object->fields) {\n+            ensureCleanNewline(objectFieldOpenFodder(field));\n+        }\n+        ensureCleanNewline(object->closeFodder);\n+    }\n+\n+    bool shouldExpand(Local *local)\n+    {\n+        for (auto &bind: local->binds) {\n+            if (countNewlines(bind.varFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void expand(Local *local)\n+    {\n+        bool first = true;\n+        for (auto &bind: local->binds) {\n+            if (!first) {\n+                ensureCleanNewline(bind.varFodder);\n+            }\n+            first = false;\n+        }\n+    }\n+\n+    bool shouldExpand(ArrayComprehension *comp)\n+    {\n+        if (countNewlines(open_fodder(comp->body)) > 0) {\n+            return true;\n+        }\n+        for (auto &spec: comp->specs) {\n+            if (countNewlines(spec.openFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(comp->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(ArrayComprehension *comp)\n+    {\n+        ensureCleanNewline(open_fodder(comp->body));\n+        for (auto &spec: comp->specs) {\n+            ensureCleanNewline(spec.openFodder);\n+        }\n+        ensureCleanNewline(comp->closeFodder);\n+    }\n+\n+    bool shouldExpand(ObjectComprehension *comp)\n+    {\n+        for (auto &field: comp->fields) {\n+            if (countNewlines(objectFieldOpenFodder(field)) > 0) {\n+                return true;\n+            }\n+        }\n+        for (auto &spec: comp->specs) {\n+            if (countNewlines(spec.openFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(comp->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(ObjectComprehension *comp)\n+    {\n+        for (auto &field: comp->fields) {\n+            ensureCleanNewline(objectFieldOpenFodder(field));\n+        }\n+        for (auto &spec: comp->specs) {\n+            ensureCleanNewline(spec.openFodder);\n+        }\n+        ensureCleanNewline(comp->closeFodder);\n+    }\n+\n+    bool shouldExpand(Parens *parens)\n+    {\n+        return countNewlines(open_fodder(parens->expr)) > 0\n+            || countNewlines(parens->closeFodder) > 0;\n+    }\n+\n+    void expand(Parens *parens)\n+    {\n+        ensureCleanNewline(open_fodder(parens->expr));\n+        ensureCleanNewline(parens->closeFodder);\n+    }\n+\n+    Fodder &argParamOpenFodder(ArgParam &param)\n+    {\n+        if (param.id != nullptr) {\n+            return param.idFodder;\n+        } else if (param.expr != nullptr) {\n+            return open_fodder(param.expr);\n+        } else {\n+            std::cerr << \"Invalid ArgParam\" << std::endl;\n+            abort();\n+        }\n+    }\n+\n+    // Example:\n+    // f(1, 2,\n+    //   3)\n+    // Should be expanded to:\n+    // f(1,\n+    //   2,\n+    //   3)", "path": "core/formatter.cpp", "position": 176, "original_position": 175, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "The point of this comment was to explain what this particular function does, expandBetween as opposed to expandNearParens (both operate on ArgParams). \r\n\r\nBut still no, it wouldn't be touched by the other one (it would if there was a newline before 1 or after 3).", "created_at": "2017-07-31T14:46:46Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130373495", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130373495"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130373495"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130373495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 130365810}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130373669", "pull_request_review_id": 53241040, "id": 130373669, "diff_hunk": "@@ -963,6 +963,280 @@ class PrettyFieldNames : public FmtPass {\n     }\n };\n \n+/// Add newlines inside complex structures (arrays, objects etc.).\n+///\n+/// The main principle is that a structure can either be:\n+/// * expanded and contain newlines in all the designated places\n+/// * unexpanded and not contain any newlines in any of designated places.\n+///\n+/// It only looks shallowly at the AST nodes, so there may be some newlines deeper that\n+/// don't affect expanding. For example:\n+/// [{\n+///     'a': 'b',\n+///     'c': 'd',\n+/// }]\n+/// The outer array can be unexpanded, because there are no newlines between\n+class FixNewlines: public FmtPass {\n+    using FmtPass::visit;\n+\n+    bool shouldExpand(const Array *array)\n+    {\n+        for (const auto &elem: array->elements) {\n+            if (countNewlines(open_fodder(elem.expr)) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(array->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(Array *array)\n+    {\n+        for (auto &elem: array->elements) {\n+            ensureCleanNewline(open_fodder(elem.expr));\n+        }\n+        ensureCleanNewline(array->closeFodder);\n+    }\n+\n+    Fodder &objectFieldOpenFodder(ObjectField &field)\n+    {\n+        if (field.kind == ObjectField::Kind::FIELD_STR) {\n+            return field.expr1->openFodder;\n+        }\n+        return field.fodder1;\n+    }\n+\n+    bool shouldExpand(Object *object)\n+    {\n+        for (auto &field: object->fields) {\n+            if (countNewlines(objectFieldOpenFodder(field)) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(object->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(Object *object)\n+    {\n+        for (auto &field: object->fields) {\n+            ensureCleanNewline(objectFieldOpenFodder(field));\n+        }\n+        ensureCleanNewline(object->closeFodder);\n+    }\n+\n+    bool shouldExpand(Local *local)\n+    {\n+        for (auto &bind: local->binds) {\n+            if (countNewlines(bind.varFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void expand(Local *local)\n+    {\n+        bool first = true;\n+        for (auto &bind: local->binds) {\n+            if (!first) {\n+                ensureCleanNewline(bind.varFodder);\n+            }\n+            first = false;\n+        }\n+    }\n+\n+    bool shouldExpand(ArrayComprehension *comp)\n+    {\n+        if (countNewlines(open_fodder(comp->body)) > 0) {\n+            return true;\n+        }\n+        for (auto &spec: comp->specs) {\n+            if (countNewlines(spec.openFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(comp->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(ArrayComprehension *comp)\n+    {\n+        ensureCleanNewline(open_fodder(comp->body));\n+        for (auto &spec: comp->specs) {\n+            ensureCleanNewline(spec.openFodder);\n+        }\n+        ensureCleanNewline(comp->closeFodder);\n+    }\n+\n+    bool shouldExpand(ObjectComprehension *comp)\n+    {\n+        for (auto &field: comp->fields) {\n+            if (countNewlines(objectFieldOpenFodder(field)) > 0) {\n+                return true;\n+            }\n+        }\n+        for (auto &spec: comp->specs) {\n+            if (countNewlines(spec.openFodder) > 0) {\n+                return true;\n+            }\n+        }\n+        if (countNewlines(comp->closeFodder) > 0) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void expand(ObjectComprehension *comp)\n+    {\n+        for (auto &field: comp->fields) {\n+            ensureCleanNewline(objectFieldOpenFodder(field));\n+        }\n+        for (auto &spec: comp->specs) {\n+            ensureCleanNewline(spec.openFodder);\n+        }\n+        ensureCleanNewline(comp->closeFodder);\n+    }\n+\n+    bool shouldExpand(Parens *parens)\n+    {\n+        return countNewlines(open_fodder(parens->expr)) > 0\n+            || countNewlines(parens->closeFodder) > 0;\n+    }\n+\n+    void expand(Parens *parens)\n+    {\n+        ensureCleanNewline(open_fodder(parens->expr));\n+        ensureCleanNewline(parens->closeFodder);\n+    }\n+\n+    Fodder &argParamOpenFodder(ArgParam &param)\n+    {\n+        if (param.id != nullptr) {\n+            return param.idFodder;\n+        } else if (param.expr != nullptr) {\n+            return open_fodder(param.expr);\n+        } else {\n+            std::cerr << \"Invalid ArgParam\" << std::endl;\n+            abort();\n+        }\n+    }\n+\n+    // Example:\n+    // f(1, 2,\n+    //   3)\n+    // Should be expanded to:\n+    // f(1,\n+    //   2,\n+    //   3)\n+    bool shouldExpandBetween(ArgParams &params)\n+    {\n+        bool first = true;\n+        for (auto &param: params) {\n+            if (!first && countNewlines(argParamOpenFodder(param)) > 0) {\n+                return true;\n+            }\n+            first = false;\n+        }\n+        return false;\n+    }\n+\n+    void expandBetween(ArgParams &params)\n+    {\n+        bool first = true;\n+        for (auto &param: params) {\n+            if (!first) {\n+                ensureCleanNewline(argParamOpenFodder(param));\n+            }\n+            first = false;\n+        }\n+    }\n+\n+    // Example:\n+    // very_long_function_on_a_long_line_so_arguments_dont_fit_on_the_same_line(\n+    //     1, 2, 3)\n+    // Should be expanded to:\n+    // very_long_function_on_a_long_line_so_arguments_dont_fit_on_the_same_line(", "path": "core/formatter.cpp", "position": null, "original_position": 203, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "No, it doesn't take the length into account. The name was only an example situation when someone would format it this way (as opposed to keeping arguments on the same line). Hmmm... but I can see how it can be confusing. Maybe it's better to change it to something generic.", "created_at": "2017-07-31T14:47:18Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130373669", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130373669"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130373669"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130373669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 130365509}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130391247", "pull_request_review_id": 53260872, "id": 130391247, "diff_hunk": "@@ -0,0 +1,48 @@\n+// See: https://github.com/google/jsonnet/issues/299\n+{\n+    someOther():: 42,\n+    collCorrect1: [{\n+        name: \"Good\",\n+    }],\n+    collCorrect2: [{\n+        name: \"Bad\",\n+    }, self.someOther(),\n+    ],\n+    collCorrect2a: [{\n+        name: \"Bad\",\n+    }, self.someOther(),],\n+    collCorrect2b: [\n+        {\n+        name: \"Bad\",\n+        }, self.someOther(),],\n+    collCorrect2c: [\n+        {\n+        name: \"Bad\",\n+        }, self.someOther(),],", "path": "test_suite/formatting_braces2.jsonnet", "position": null, "original_position": 21, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "452a24c6cbfd2a0d7cb5ea749df8855cda534d12", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "looks like 2c is the same as 2b", "created_at": "2017-07-31T15:48:45Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130391247", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130391247"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130391247"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130391247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130420378", "pull_request_review_id": 53294474, "id": 130420378, "diff_hunk": "@@ -963,6 +963,280 @@ class PrettyFieldNames : public FmtPass {\n     }\n };\n \n+/// Add newlines inside complex structures (arrays, objects etc.).\n+///\n+/// The main principle is that a structure can either be:\n+/// * expanded and contain newlines in all the designated places\n+/// * unexpanded and not contain any newlines in any of designated places.\n+///\n+/// It only looks shallowly at the AST nodes, so there may be some newlines deeper that\n+/// don't affect expanding. For example:\n+/// [{\n+///     'a': 'b',\n+///     'c': 'd',\n+/// }]\n+/// The outer array can be unexpanded, because there are no newlines between", "path": "core/formatter.cpp", "position": null, "original_position": 16, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "4904e8be2deedfb230a884b37d134fdb073a8641", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Incomplete sentence", "created_at": "2017-07-31T18:16:24Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130420378", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130420378"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130420378"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130420378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130494499", "pull_request_review_id": 53375294, "id": 130494499, "diff_hunk": "@@ -963,6 +963,280 @@ class PrettyFieldNames : public FmtPass {\n     }\n };\n \n+/// Add newlines inside complex structures (arrays, objects etc.).\n+///\n+/// The main principle is that a structure can either be:\n+/// * expanded and contain newlines in all the designated places\n+/// * unexpanded and not contain any newlines in any of designated places.", "path": "core/formatter.cpp", "position": null, "original_position": 8, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "4904e8be2deedfb230a884b37d134fdb073a8641", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Slightly more concise description:\r\n\r\n/// * unexpanded and contain newlines in none of the designated places.\r\n", "created_at": "2017-08-01T00:20:03Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130494499", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130494499"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130494499"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130494499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130676216", "pull_request_review_id": 53578288, "id": 130676216, "diff_hunk": "@@ -963,6 +963,280 @@ class PrettyFieldNames : public FmtPass {\n     }\n };\n \n+/// Add newlines inside complex structures (arrays, objects etc.).\n+///\n+/// The main principle is that a structure can either be:\n+/// * expanded and contain newlines in all the designated places\n+/// * unexpanded and not contain any newlines in any of designated places.", "path": "core/formatter.cpp", "position": null, "original_position": 8, "commit_id": "fb952b0bbc876f381c7b13f06811f36de67725b3", "original_commit_id": "4904e8be2deedfb230a884b37d134fdb073a8641", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "done", "created_at": "2017-08-01T17:40:06Z", "updated_at": "2017-08-01T17:41:15Z", "html_url": "https://github.com/google/jsonnet/pull/334#discussion_r130676216", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/334", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/130676216"}, "html": {"href": "https://github.com/google/jsonnet/pull/334#discussion_r130676216"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/334"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/130676216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 130494499}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128575893", "pull_request_review_id": 51269573, "id": 128575893, "diff_hunk": "@@ -101,6 +101,9 @@ test: jsonnet libjsonnet.so libjsonnet_test_snippet libjsonnet_test_file\n \tcd test_suite ; ./run_tests.sh\n \tcd test_suite ; ./run_fmt_tests.sh\n \n+reformat:", "path": "Makefile", "position": null, "original_position": 4, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "`all` should probably depend on this.\r\n\r\nalso I think you should declare this as [`.PHONY`](https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html)", "created_at": "2017-07-20T17:12:01Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128575893", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128575893"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128575893"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128575893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128576007", "pull_request_review_id": 51269573, "id": 128576007, "diff_hunk": "@@ -31,44 +31,45 @@ static void append(IdSet &r, const IdSet &s)\n /** Statically analyse the given ast.\n  *\n  * \\param ast_ The AST.\n- * \\param in_object Whether or not ast_ is within the lexical scope of an object AST.\n- * \\param vars The variables defined within lexical scope of ast_.\n- * \\returns The free variables in ast_.\n+ * \\param in_object Whether or not ast_ is within the lexical scope of an object\n+ * AST. \\param vars The variables defined within lexical scope of ast_. \\returns", "path": "core/static_analysis.cpp", "position": null, "original_position": 19, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "This kind of doc reformatting seems wrong", "created_at": "2017-07-20T17:12:34Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128576007", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128576007"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128576007"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128576007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128576121", "pull_request_review_id": 51269573, "id": 128576121, "diff_hunk": "@@ -0,0 +1,108 @@\n+---\n+Language:        Cpp\n+# BasedOnStyle:  Google", "path": ".clang-format", "position": null, "original_position": 3, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "lwander", "id": 4874941, "avatar_url": "https://avatars3.githubusercontent.com/u/4874941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwander", "html_url": "https://github.com/lwander", "followers_url": "https://api.github.com/users/lwander/followers", "following_url": "https://api.github.com/users/lwander/following{/other_user}", "gists_url": "https://api.github.com/users/lwander/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwander/subscriptions", "organizations_url": "https://api.github.com/users/lwander/orgs", "repos_url": "https://api.github.com/users/lwander/repos", "events_url": "https://api.github.com/users/lwander/events{/privacy}", "received_events_url": "https://api.github.com/users/lwander/received_events", "type": "User", "site_admin": false}, "body": "Why commented out?", "created_at": "2017-07-20T17:13:06Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128576121", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128576121"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128576121"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128576121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128582577", "pull_request_review_id": 51276740, "id": 128582577, "diff_hunk": "@@ -31,44 +31,45 @@ static void append(IdSet &r, const IdSet &s)\n /** Statically analyse the given ast.\n  *\n  * \\param ast_ The AST.\n- * \\param in_object Whether or not ast_ is within the lexical scope of an object AST.\n- * \\param vars The variables defined within lexical scope of ast_.\n- * \\returns The free variables in ast_.\n+ * \\param in_object Whether or not ast_ is within the lexical scope of an object\n+ * AST. \\param vars The variables defined within lexical scope of ast_. \\returns", "path": "core/static_analysis.cpp", "position": null, "original_position": 19, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "I think I can fix it through CommentPragma option, thanks for noticing", "created_at": "2017-07-20T17:37:17Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128582577", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128582577"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128582577"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128582577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128576007}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128584051", "pull_request_review_id": 51278381, "id": 128584051, "diff_hunk": "@@ -101,6 +101,9 @@ test: jsonnet libjsonnet.so libjsonnet_test_snippet libjsonnet_test_file\n \tcd test_suite ; ./run_tests.sh\n \tcd test_suite ; ./run_fmt_tests.sh\n \n+reformat:", "path": "Makefile", "position": null, "original_position": 4, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "I'm worried that reformatting on every build (== adding to `all`) may be annoying. \r\n\r\n:+1: for `.PHONY` I forgot about it. \r\n\r\nAlso I guess I'll add a separate `test-formatting` target for use in TravisCI etc.\r\n", "created_at": "2017-07-20T17:43:42Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128584051", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128584051"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128584051"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128584051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128575893}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128584782", "pull_request_review_id": 51279255, "id": 128584782, "diff_hunk": "@@ -0,0 +1,108 @@\n+---\n+Language:        Cpp\n+# BasedOnStyle:  Google", "path": ".clang-format", "position": null, "original_position": 3, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "The real reason is that it was autogenerated this way. But I guess I can either remove it completely or leave it active. I'll take another look at this config.", "created_at": "2017-07-20T17:46:22Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128584782", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128584782"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128584782"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128584782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128576121}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128621197", "pull_request_review_id": 51319241, "id": 128621197, "diff_hunk": "@@ -0,0 +1,108 @@\n+---\n+Language:        Cpp\n+# BasedOnStyle:  Google\n+AccessModifierOffset: -1\n+AlignAfterOpenBracket: Align\n+AlignConsecutiveAssignments: false\n+AlignConsecutiveDeclarations: false\n+AlignEscapedNewlines: Left\n+AlignOperands:   true\n+AlignTrailingComments: true\n+AllowAllParametersOfDeclarationOnNextLine: true\n+AllowShortBlocksOnASingleLine: false\n+AllowShortCaseLabelsOnASingleLine: false\n+AllowShortFunctionsOnASingleLine: Empty\n+AllowShortIfStatementsOnASingleLine: false\n+AllowShortLoopsOnASingleLine: false\n+AlwaysBreakAfterDefinitionReturnType: None\n+AlwaysBreakAfterReturnType: None\n+AlwaysBreakBeforeMultilineStrings: true\n+AlwaysBreakTemplateDeclarations: true\n+BinPackArguments: false\n+BinPackParameters: true\n+BraceWrapping:\n+  AfterClass:      false\n+  AfterControlStatement: false\n+  AfterEnum:       false\n+  AfterFunction:   false\n+  AfterNamespace:  false\n+  AfterObjCDeclaration: false\n+  AfterStruct:     false\n+  AfterUnion:      false\n+  BeforeCatch:     false\n+  BeforeElse:      false\n+  IndentBraces:    false\n+  SplitEmptyFunction: true\n+  SplitEmptyRecord: true\n+  SplitEmptyNamespace: true\n+BreakBeforeBinaryOperators: None\n+BreakBeforeBraces: Linux\n+BreakBeforeInheritanceComma: false\n+BreakBeforeTernaryOperators: true\n+BreakConstructorInitializersBeforeComma: false\n+BreakConstructorInitializers: BeforeColon\n+BreakAfterJavaFieldAnnotations: false\n+BreakStringLiterals: true\n+ColumnLimit:     80\n+CommentPragmas:  '^ IWYU pragma:'\n+CompactNamespaces: false\n+ConstructorInitializerAllOnOneLineOrOnePerLine: true\n+ConstructorInitializerIndentWidth: 4\n+ContinuationIndentWidth: 4\n+Cpp11BracedListStyle: true\n+DerivePointerAlignment: true\n+DisableFormat:   false\n+ExperimentalAutoDetectBinPacking: false\n+FixNamespaceComments: true\n+ForEachMacros:\n+  - foreach\n+  - Q_FOREACH\n+  - BOOST_FOREACH\n+IncludeCategories:\n+  - Regex:           '^<.*\\.h>'\n+    Priority:        1\n+  - Regex:           '^<.*'\n+    Priority:        2\n+  - Regex:           '.*'\n+    Priority:        3\n+IncludeIsMainRegex: '([-_](test|unittest))?$'\n+IndentCaseLabels: true\n+IndentWidth:     4\n+IndentWrappedFunctionNames: false\n+JavaScriptQuotes: Leave\n+JavaScriptWrapImports: true\n+KeepEmptyLinesAtTheStartOfBlocks: false\n+MacroBlockBegin: ''\n+MacroBlockEnd:   ''\n+MaxEmptyLinesToKeep: 1\n+NamespaceIndentation: None\n+ObjCBlockIndentWidth: 2\n+ObjCSpaceAfterProperty: false\n+ObjCSpaceBeforeProtocolList: false\n+PenaltyBreakAssignment: 2\n+PenaltyBreakBeforeFirstCallParameter: 1\n+PenaltyBreakComment: 300\n+PenaltyBreakFirstLessLess: 120\n+PenaltyBreakString: 1000\n+PenaltyExcessCharacter: 1000000\n+PenaltyReturnTypeOnItsOwnLine: 200\n+PointerAlignment: Left\n+ReflowComments:  true\n+SortIncludes:    true\n+SortUsingDeclarations: true\n+SpaceAfterCStyleCast: false\n+SpaceAfterTemplateKeyword: true\n+SpaceBeforeAssignmentOperators: true\n+SpaceBeforeParens: ControlStatements\n+SpaceInEmptyParentheses: false\n+SpacesBeforeTrailingComments: 2\n+SpacesInAngles:  false\n+SpacesInContainerLiterals: true\n+SpacesInCStyleCastParentheses: false\n+SpacesInParentheses: false\n+SpacesInSquareBrackets: false\n+Standard:        Auto\n+TabWidth:        8", "path": ".clang-format", "position": 82, "original_position": 105, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Should this be 4?", "created_at": "2017-07-20T20:22:14Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128621197", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128621197"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128621197"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128621197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128631738", "pull_request_review_id": 51331241, "id": 128631738, "diff_hunk": "@@ -0,0 +1,108 @@\n+---\n+Language:        Cpp\n+# BasedOnStyle:  Google\n+AccessModifierOffset: -1\n+AlignAfterOpenBracket: Align\n+AlignConsecutiveAssignments: false\n+AlignConsecutiveDeclarations: false\n+AlignEscapedNewlines: Left\n+AlignOperands:   true\n+AlignTrailingComments: true\n+AllowAllParametersOfDeclarationOnNextLine: true\n+AllowShortBlocksOnASingleLine: false\n+AllowShortCaseLabelsOnASingleLine: false\n+AllowShortFunctionsOnASingleLine: Empty\n+AllowShortIfStatementsOnASingleLine: false\n+AllowShortLoopsOnASingleLine: false\n+AlwaysBreakAfterDefinitionReturnType: None\n+AlwaysBreakAfterReturnType: None\n+AlwaysBreakBeforeMultilineStrings: true\n+AlwaysBreakTemplateDeclarations: true\n+BinPackArguments: false\n+BinPackParameters: true\n+BraceWrapping:\n+  AfterClass:      false\n+  AfterControlStatement: false\n+  AfterEnum:       false\n+  AfterFunction:   false\n+  AfterNamespace:  false\n+  AfterObjCDeclaration: false\n+  AfterStruct:     false\n+  AfterUnion:      false\n+  BeforeCatch:     false\n+  BeforeElse:      false\n+  IndentBraces:    false\n+  SplitEmptyFunction: true\n+  SplitEmptyRecord: true\n+  SplitEmptyNamespace: true\n+BreakBeforeBinaryOperators: None\n+BreakBeforeBraces: Linux\n+BreakBeforeInheritanceComma: false\n+BreakBeforeTernaryOperators: true\n+BreakConstructorInitializersBeforeComma: false\n+BreakConstructorInitializers: BeforeColon\n+BreakAfterJavaFieldAnnotations: false\n+BreakStringLiterals: true\n+ColumnLimit:     80\n+CommentPragmas:  '^ IWYU pragma:'\n+CompactNamespaces: false\n+ConstructorInitializerAllOnOneLineOrOnePerLine: true\n+ConstructorInitializerIndentWidth: 4\n+ContinuationIndentWidth: 4\n+Cpp11BracedListStyle: true\n+DerivePointerAlignment: true\n+DisableFormat:   false\n+ExperimentalAutoDetectBinPacking: false\n+FixNamespaceComments: true\n+ForEachMacros:\n+  - foreach\n+  - Q_FOREACH\n+  - BOOST_FOREACH\n+IncludeCategories:\n+  - Regex:           '^<.*\\.h>'\n+    Priority:        1\n+  - Regex:           '^<.*'\n+    Priority:        2\n+  - Regex:           '.*'\n+    Priority:        3\n+IncludeIsMainRegex: '([-_](test|unittest))?$'\n+IndentCaseLabels: true\n+IndentWidth:     4\n+IndentWrappedFunctionNames: false\n+JavaScriptQuotes: Leave\n+JavaScriptWrapImports: true\n+KeepEmptyLinesAtTheStartOfBlocks: false\n+MacroBlockBegin: ''\n+MacroBlockEnd:   ''\n+MaxEmptyLinesToKeep: 1\n+NamespaceIndentation: None\n+ObjCBlockIndentWidth: 2\n+ObjCSpaceAfterProperty: false\n+ObjCSpaceBeforeProtocolList: false\n+PenaltyBreakAssignment: 2\n+PenaltyBreakBeforeFirstCallParameter: 1\n+PenaltyBreakComment: 300\n+PenaltyBreakFirstLessLess: 120\n+PenaltyBreakString: 1000\n+PenaltyExcessCharacter: 1000000\n+PenaltyReturnTypeOnItsOwnLine: 200\n+PointerAlignment: Left\n+ReflowComments:  true\n+SortIncludes:    true\n+SortUsingDeclarations: true\n+SpaceAfterCStyleCast: false\n+SpaceAfterTemplateKeyword: true\n+SpaceBeforeAssignmentOperators: true\n+SpaceBeforeParens: ControlStatements\n+SpaceInEmptyParentheses: false\n+SpacesBeforeTrailingComments: 2\n+SpacesInAngles:  false\n+SpacesInContainerLiterals: true\n+SpacesInCStyleCastParentheses: false\n+SpacesInParentheses: false\n+SpacesInSquareBrackets: false\n+Standard:        Auto\n+TabWidth:        8", "path": ".clang-format", "position": 82, "original_position": 105, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "No, this is not the indentation, but how we interpret actual tab characters (we change them to this many spaces then). For example Google style, that I started with, uses 8 here, even though the Indentation is only 2 chars wide.", "created_at": "2017-07-20T21:10:27Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128631738", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128631738"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128631738"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128631738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128621197}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128633546", "pull_request_review_id": 51333267, "id": 128633546, "diff_hunk": "@@ -101,6 +101,9 @@ test: jsonnet libjsonnet.so libjsonnet_test_snippet libjsonnet_test_file\n \tcd test_suite ; ./run_tests.sh\n \tcd test_suite ; ./run_fmt_tests.sh\n \n+reformat:", "path": "Makefile", "position": null, "original_position": 4, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "`test-formatting` added, .`.PHONY` added\r\n\r\nMy concern with `all` is not really valid, there is a separate default target. But still I interpret `all` as `build all` as it doesn't run tests etc., so I think reformatting doesn't really belong there. @sparkprime?", "created_at": "2017-07-20T21:18:58Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128633546", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128633546"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128633546"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128633546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128575893}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128832611", "pull_request_review_id": 51553415, "id": 128832611, "diff_hunk": "@@ -101,6 +101,9 @@ test: jsonnet libjsonnet.so libjsonnet_test_snippet libjsonnet_test_file\n \tcd test_suite ; ./run_tests.sh\n \tcd test_suite ; ./run_fmt_tests.sh\n \n+reformat:", "path": "Makefile", "position": null, "original_position": 4, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "ba086d93d2ee37b6769fee7a8b3d1674c5a40267", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I don't think make all should change source code.  However it can run the test-formatting.", "created_at": "2017-07-21T18:37:38Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128832611", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128832611"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128832611"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128832611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128575893}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834395", "pull_request_review_id": 51555433, "id": 128834395, "diff_hunk": "@@ -56,14 +56,14 @@ static inline std::ostream &operator<<(std::ostream &o, const FodderElement &f)\n {\n     switch (f.kind) {\n         case FodderElement::LINE_END:\n-        o << \"END(\" << f.blanks << \", \" << f.indent << \", \" << f.comment[0] << \")\";\n-        break;\n+            o << \"END(\" << f.blanks << \", \" << f.indent << \", \" << f.comment[0] << \")\";", "path": "core/lexer.h", "position": null, "original_position": 36, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I have a moderate preference for keeping them on the same line, because they're essentially just indirect goto labels.  However if there's no supported option in clang for that then I can live with it.", "created_at": "2017-07-21T18:45:18Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128834395", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834395"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128834395"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834484", "pull_request_review_id": 51555534, "id": 128834484, "diff_hunk": "@@ -144,66 +144,109 @@ struct Token {\n      */\n     std::string stringBlockTermIndent;\n \n-    UString data32(void) { return decode_utf8(data); }\n+    UString data32(void)\n+    {\n+        return decode_utf8(data);\n+    }\n \n     LocationRange location;\n \n     Token(Kind kind, const Fodder &fodder, const std::string &data,\n           const std::string &string_block_indent, const std::string &string_block_term_indent,\n           const LocationRange &location)\n-      : kind(kind), fodder(fodder), data(data), stringBlockIndent(string_block_indent),\n-        stringBlockTermIndent(string_block_term_indent), location(location)\n-    { }\n+        : kind(kind),\n+          fodder(fodder),\n+          data(data),\n+          stringBlockIndent(string_block_indent),\n+          stringBlockTermIndent(string_block_term_indent),\n+          location(location)\n+    {\n+    }\n \n-    Token(Kind kind, const std::string &data=\"\")\n-        : kind(kind), data(data) { }\n+    Token(Kind kind, const std::string &data = \"\") : kind(kind), data(data) {}\n \n     static const char *toString(Kind v)\n     {\n         switch (v) {\n-            case BRACE_L: return \"\\\"{\\\"\";\n-            case BRACE_R: return \"\\\"}\\\"\";\n-            case BRACKET_L: return \"\\\"[\\\"\";\n-            case BRACKET_R: return \"\\\"]\\\"\";\n-            case COMMA: return \"\\\",\\\"\";\n-            case DOLLAR: return \"\\\"$\\\"\";\n-            case DOT: return \"\\\".\\\"\";\n-\n-            case PAREN_L: return \"\\\"(\\\"\";\n-            case PAREN_R: return \"\\\")\\\"\";\n-            case SEMICOLON: return \"\\\";\\\"\";\n-\n-            case IDENTIFIER: return \"IDENTIFIER\";\n-            case NUMBER: return \"NUMBER\";\n-            case OPERATOR: return \"OPERATOR\";\n-            case STRING_SINGLE: return \"STRING_SINGLE\";\n-            case STRING_DOUBLE: return \"STRING_DOUBLE\";\n-            case VERBATIM_STRING_SINGLE: return \"VERBATIM_STRING_SINGLE\";\n-            case VERBATIM_STRING_DOUBLE: return \"VERBATIM_STRING_DOUBLE\";\n-            case STRING_BLOCK: return \"STRING_BLOCK\";\n-\n-            case ASSERT: return \"assert\";\n-            case ELSE: return \"else\";\n-            case ERROR: return \"error\";\n-            case FALSE: return \"false\";\n-            case FOR: return \"for\";\n-            case FUNCTION: return \"function\";\n-            case IF: return \"if\";\n-            case IMPORT: return \"import\";\n-            case IMPORTSTR: return \"importstr\";\n-            case IN: return \"in\";\n-            case LOCAL: return \"local\";\n-            case NULL_LIT: return \"null\";\n-            case SELF: return \"self\";\n-            case SUPER: return \"super\";\n-            case TAILSTRICT: return \"tailstrict\";\n-            case THEN: return \"then\";\n-            case TRUE: return \"true\";\n-\n-            case END_OF_FILE: return \"end of file\";\n+            case BRACE_L:", "path": "core/lexer.h", "position": null, "original_position": 125, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Any way to encourage it to put the return on the same line?  This is less readable than before.", "created_at": "2017-07-21T18:45:43Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128834484", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834484"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128834484"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834720", "pull_request_review_id": 51555779, "id": 128834720, "diff_hunk": "@@ -19,20 +19,17 @@ limitations under the License.\n #include <list>\n #include \"gtest/gtest.h\"\n \n-namespace {\n-\n-void testLex(const char* name,\n-             const char* input,\n-             const std::list<Token>& tokens,\n+namespace", "path": "core/lexer_test.cpp", "position": null, "original_position": 9, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I've never seen anyone put the { after a namespace before", "created_at": "2017-07-21T18:46:43Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128834720", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834720"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128834720"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834802", "pull_request_review_id": 51555854, "id": 128834802, "diff_hunk": "@@ -19,20 +19,17 @@ limitations under the License.\n #include <list>\n #include \"gtest/gtest.h\"\n \n-namespace {\n-\n-void testLex(const char* name,\n-             const char* input,\n-             const std::list<Token>& tokens,\n+namespace", "path": "core/lexer_test.cpp", "position": null, "original_position": 9, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "(on the line after)", "created_at": "2017-07-21T18:47:03Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128834802", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834802"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128834802"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128834720}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834863", "pull_request_review_id": 51555924, "id": 128834863, "diff_hunk": "@@ -56,14 +56,14 @@ static inline std::ostream &operator<<(std::ostream &o, const FodderElement &f)\n {\n     switch (f.kind) {\n         case FodderElement::LINE_END:\n-        o << \"END(\" << f.blanks << \", \" << f.indent << \", \" << f.comment[0] << \")\";\n-        break;\n+            o << \"END(\" << f.blanks << \", \" << f.indent << \", \" << f.comment[0] << \")\";", "path": "core/lexer.h", "position": null, "original_position": 36, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "I checked that and I couldn't find anything to control that.", "created_at": "2017-07-21T18:47:16Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128834863", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834863"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128834863"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128834863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128834395}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835548", "pull_request_review_id": 51556457, "id": 128835548, "diff_hunk": "@@ -144,66 +144,109 @@ struct Token {\n      */\n     std::string stringBlockTermIndent;\n \n-    UString data32(void) { return decode_utf8(data); }\n+    UString data32(void)\n+    {\n+        return decode_utf8(data);\n+    }\n \n     LocationRange location;\n \n     Token(Kind kind, const Fodder &fodder, const std::string &data,\n           const std::string &string_block_indent, const std::string &string_block_term_indent,\n           const LocationRange &location)\n-      : kind(kind), fodder(fodder), data(data), stringBlockIndent(string_block_indent),\n-        stringBlockTermIndent(string_block_term_indent), location(location)\n-    { }\n+        : kind(kind),\n+          fodder(fodder),\n+          data(data),\n+          stringBlockIndent(string_block_indent),\n+          stringBlockTermIndent(string_block_term_indent),\n+          location(location)\n+    {\n+    }\n \n-    Token(Kind kind, const std::string &data=\"\")\n-        : kind(kind), data(data) { }\n+    Token(Kind kind, const std::string &data = \"\") : kind(kind), data(data) {}\n \n     static const char *toString(Kind v)\n     {\n         switch (v) {\n-            case BRACE_L: return \"\\\"{\\\"\";\n-            case BRACE_R: return \"\\\"}\\\"\";\n-            case BRACKET_L: return \"\\\"[\\\"\";\n-            case BRACKET_R: return \"\\\"]\\\"\";\n-            case COMMA: return \"\\\",\\\"\";\n-            case DOLLAR: return \"\\\"$\\\"\";\n-            case DOT: return \"\\\".\\\"\";\n-\n-            case PAREN_L: return \"\\\"(\\\"\";\n-            case PAREN_R: return \"\\\")\\\"\";\n-            case SEMICOLON: return \"\\\";\\\"\";\n-\n-            case IDENTIFIER: return \"IDENTIFIER\";\n-            case NUMBER: return \"NUMBER\";\n-            case OPERATOR: return \"OPERATOR\";\n-            case STRING_SINGLE: return \"STRING_SINGLE\";\n-            case STRING_DOUBLE: return \"STRING_DOUBLE\";\n-            case VERBATIM_STRING_SINGLE: return \"VERBATIM_STRING_SINGLE\";\n-            case VERBATIM_STRING_DOUBLE: return \"VERBATIM_STRING_DOUBLE\";\n-            case STRING_BLOCK: return \"STRING_BLOCK\";\n-\n-            case ASSERT: return \"assert\";\n-            case ELSE: return \"else\";\n-            case ERROR: return \"error\";\n-            case FALSE: return \"false\";\n-            case FOR: return \"for\";\n-            case FUNCTION: return \"function\";\n-            case IF: return \"if\";\n-            case IMPORT: return \"import\";\n-            case IMPORTSTR: return \"importstr\";\n-            case IN: return \"in\";\n-            case LOCAL: return \"local\";\n-            case NULL_LIT: return \"null\";\n-            case SELF: return \"self\";\n-            case SUPER: return \"super\";\n-            case TAILSTRICT: return \"tailstrict\";\n-            case THEN: return \"then\";\n-            case TRUE: return \"true\";\n-\n-            case END_OF_FILE: return \"end of file\";\n+            case BRACE_L:", "path": "core/lexer.h", "position": null, "original_position": 125, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Yes I experimented with that, I think there were fewer changes if I set it this way, but I might be wrong. Anyway, I'll change it. ", "created_at": "2017-07-21T18:49:15Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128835548", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835548"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128835548"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128834484}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835599", "pull_request_review_id": 51556502, "id": 128835599, "diff_hunk": "@@ -261,13 +264,17 @@ static char *default_import_callback(void *ctx, const char *dir, const char *fil\n }\n \n #define TRY try {\n-#define CATCH(func) \\\n-    } catch (const std::bad_alloc &) {\\\n-        memory_panic(); \\\n-    } catch (const std::exception &e) {\\\n-        std::cerr << \"Something went wrong during \" func \", please report this: \" \\\n-                  << e.what() << std::endl; \\\n-        abort(); \\\n+#define CATCH(func)                                                                           \\\n+    }                                                                                         \\\n+    catch (const std::bad_alloc &)                                                            \\", "path": "core/libjsonnet.cpp", "position": 199, "original_position": 199, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I think try { } catch should have the same rules as if { } else { }", "created_at": "2017-07-21T18:49:27Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128835599", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835599"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128835599"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835731", "pull_request_review_id": 51556645, "id": 128835731, "diff_hunk": "@@ -277,16 +284,14 @@ const char *jsonnet_version(void)\n \n JsonnetVm *jsonnet_make(void)\n {\n-    TRY\n-    return new JsonnetVm();\n+    TRY return new JsonnetVm();", "path": "core/libjsonnet.cpp", "position": null, "original_position": 217, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "uh-oh.", "created_at": "2017-07-21T18:50:02Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128835731", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835731"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128835731"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128835731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836011", "pull_request_review_id": 51556928, "id": 128836011, "diff_hunk": "@@ -277,16 +284,14 @@ const char *jsonnet_version(void)\n \n JsonnetVm *jsonnet_make(void)\n {\n-    TRY\n-    return new JsonnetVm();\n+    TRY return new JsonnetVm();", "path": "core/libjsonnet.cpp", "position": null, "original_position": 217, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "we could change this to\r\n```\r\nTRY {\r\n    return new JsonnetVm();\r\n} CATCH(\"jsonnet_make\")\r\n```\r\n\r\nIt'll probably behavior better then.", "created_at": "2017-07-21T18:51:08Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128836011", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836011"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128836011"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128835731}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836120", "pull_request_review_id": 51557053, "id": 128836120, "diff_hunk": "@@ -277,16 +284,14 @@ const char *jsonnet_version(void)\n \n JsonnetVm *jsonnet_make(void)\n {\n-    TRY\n-    return new JsonnetVm();\n+    TRY return new JsonnetVm();", "path": "core/libjsonnet.cpp", "position": null, "original_position": 217, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "(move the { } out of the macro, that is)", "created_at": "2017-07-21T18:51:35Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128836120", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836120"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128836120"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128835731}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836348", "pull_request_review_id": 51557268, "id": 128836348, "diff_hunk": "@@ -434,44 +440,40 @@ static char *jsonnet_fmt_snippet_aux(JsonnetVm *vm, const char *filename, const\n         *error = true;\n         return from_string(vm, ss.str());\n     }\n-\n }\n \n char *jsonnet_fmt_file(JsonnetVm *vm, const char *filename, int *error)\n {\n-    TRY\n-        std::ifstream f;\n-        f.open(filename);\n-        if (!f.good()) {\n-            std::stringstream ss;\n-            ss << \"Opening input file: \" << filename << \": \" << strerror(errno);\n-            *error = true;\n-            return from_string(vm, ss.str());\n-        }\n-        std::string input;\n-        input.assign(std::istreambuf_iterator<char>(f),\n-                     std::istreambuf_iterator<char>());\n+    TRY std::ifstream f;", "path": "core/libjsonnet.cpp", "position": null, "original_position": 283, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "TRY { would fix this indentation too", "created_at": "2017-07-21T18:52:18Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128836348", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836348"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128836348"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128836348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128842834", "pull_request_review_id": 51564691, "id": 128842834, "diff_hunk": "@@ -261,13 +264,17 @@ static char *default_import_callback(void *ctx, const char *dir, const char *fil\n }\n \n #define TRY try {\n-#define CATCH(func) \\\n-    } catch (const std::bad_alloc &) {\\\n-        memory_panic(); \\\n-    } catch (const std::exception &e) {\\\n-        std::cerr << \"Something went wrong during \" func \", please report this: \" \\\n-                  << e.what() << std::endl; \\\n-        abort(); \\\n+#define CATCH(func)                                                                           \\\n+    }                                                                                         \\\n+    catch (const std::bad_alloc &)                                                            \\", "path": "core/libjsonnet.cpp", "position": 199, "original_position": 199, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "It does. But here we have crazy macros, so it gets a little confused.", "created_at": "2017-07-21T19:25:38Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128842834", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128842834"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128842834"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128842834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128835599}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128843576", "pull_request_review_id": 51565469, "id": 128843576, "diff_hunk": "@@ -277,16 +284,14 @@ const char *jsonnet_version(void)\n \n JsonnetVm *jsonnet_make(void)\n {\n-    TRY\n-    return new JsonnetVm();\n+    TRY return new JsonnetVm();", "path": "core/libjsonnet.cpp", "position": null, "original_position": 217, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "35f3438caaf47e194a36532158a70150065af578", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "I was able to tell clang-format that TRY ... CATCH is a block (as it is, no changes to the macro).", "created_at": "2017-07-21T19:29:15Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128843576", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128843576"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128843576"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128843576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128835731}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907623", "pull_request_review_id": 51633134, "id": 128907623, "diff_hunk": "@@ -277,26 +275,26 @@ static bool process_args(int argc,\n                     dir += '/';\n                 }\n                 jsonnet_jpath_add(vm, dir.c_str());\n-            // TODO(dcunnin): Remove deprecated --var, --env and -E\n-            } else if (arg == \"-V\" || arg == \"--ext-str\"\n-                       || arg == \"--var\" || arg == \"--env\" || arg == \"-E\") {\n+                // TODO(dcunnin): Remove deprecated --var, --env and -E", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 121, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "bbacfd74c0275e08ccdf37ad4b8f3eed88d8101d", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Maybe we should do this: #327", "created_at": "2017-07-23T00:32:46Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128907623", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907623"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128907623"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907640", "pull_request_review_id": 51633149, "id": 128907640, "diff_hunk": "@@ -71,32 +70,29 @@ static void lex_ws(const char *&c, unsigned &new_lines, unsigned &indent, const\n     for (; *c != '\\0' && (*c == ' ' || *c == '\\n' || *c == '\\t' || *c == '\\r'); c++) {\n         switch (*c) {\n             case '\\r':\n-            // Ignore.\n-            break;\n+                // Ignore.\n+                break;\n \n             case '\\n':\n-            indent = 0;\n-            new_lines++;\n-            line_number++;\n-            line_start = c + 1;\n-            break;\n+                indent = 0;\n+                new_lines++;\n+                line_number++;\n+                line_start = c + 1;\n+                break;\n \n             case ' ':\n-            indent += 1;\n-            break;\n+                indent += 1;\n+                break;\n \n             // This only works for \\t at the beginning of lines, but we strip it everywhere else\n             // anyway.  The only case where this will cause a problem is spaces followed by \\t\n             // at the beginning of a line.  However that is rare, ill-advised, and if re-indentation\n             // is enabled it will be fixed later.\n-            case '\\t':\n-            indent += 8;\n-            break;\n+            case '\\t': indent += 8; break;", "path": "core/lexer.cpp", "position": 72, "original_position": 72, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "bbacfd74c0275e08ccdf37ad4b8f3eed88d8101d", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "weird that it put it on the one line for this case but not the '  ' case above", "created_at": "2017-07-23T00:34:11Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128907640", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907640"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128907640"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907665", "pull_request_review_id": 51633177, "id": 128907665, "diff_hunk": "@@ -208,137 +214,163 @@ std::string lex_number(const char *&c, const std::string &filename, const Locati\n     while (true) {\n         switch (state) {\n             case BEGIN:\n-            switch (*c) {\n-                case '0':\n-                state = AFTER_ZERO;\n-                break;\n-\n-                case '1': case '2': case '3': case '4':\n-                case '5': case '6': case '7': case '8': case '9':\n-                state = AFTER_ONE_TO_NINE;\n+                switch (*c) {\n+                    case '0': state = AFTER_ZERO; break;\n+\n+                    case '1':\n+                    case '2':\n+                    case '3':\n+                    case '4':\n+                    case '5':\n+                    case '6':\n+                    case '7':\n+                    case '8':\n+                    case '9': state = AFTER_ONE_TO_NINE; break;\n+\n+                    default: throw StaticError(filename, begin, \"Couldn't lex number\");\n+                }\n                 break;\n \n-                default:\n-                throw StaticError(filename, begin, \"Couldn't lex number\");\n-            }\n-            break;\n-\n             case AFTER_ZERO:\n-            switch (*c) {\n-                case '.':\n-                state = AFTER_DOT;\n-                break;\n-\n-                case 'e': case 'E':\n-                state = AFTER_E;\n-                break;\n+                switch (*c) {\n+                    case '.': state = AFTER_DOT; break;\n \n-                default:\n-                goto end;\n-            }\n-            break;\n-\n-            case AFTER_ONE_TO_NINE:\n-            switch (*c) {\n-                case '.':\n-                state = AFTER_DOT;\n-                break;\n+                    case 'e':\n+                    case 'E': state = AFTER_E; break;\n \n-                case 'e': case 'E':\n-                state = AFTER_E;\n+                    default: goto end;\n+                }\n                 break;\n \n-                case '0': case '1': case '2': case '3': case '4':\n-                case '5': case '6': case '7': case '8': case '9':\n-                state = AFTER_ONE_TO_NINE;\n+            case AFTER_ONE_TO_NINE:\n+                switch (*c) {\n+                    case '.': state = AFTER_DOT; break;\n+\n+                    case 'e':\n+                    case 'E': state = AFTER_E; break;\n+\n+                    case '0':\n+                    case '1':\n+                    case '2':\n+                    case '3':\n+                    case '4':\n+                    case '5':\n+                    case '6':\n+                    case '7':\n+                    case '8':\n+                    case '9': state = AFTER_ONE_TO_NINE; break;\n+\n+                    default: goto end;\n+                }\n                 break;\n \n-                default:\n-                goto end;\n-            }\n-            break;\n-\n             case AFTER_DOT:\n-            switch (*c) {\n-                case '0': case '1': case '2': case '3': case '4':\n-                case '5': case '6': case '7': case '8': case '9':\n-                state = AFTER_DIGIT;\n-                break;\n-\n-                default: {\n-                    std::stringstream ss;\n-                    ss << \"Couldn't lex number, junk after decimal point: \" << *c;\n-                    throw StaticError(filename, begin, ss.str());\n+                switch (*c) {\n+                    case '0':\n+                    case '1':\n+                    case '2':\n+                    case '3':\n+                    case '4':\n+                    case '5':\n+                    case '6':\n+                    case '7':\n+                    case '8':\n+                    case '9': state = AFTER_DIGIT; break;\n+\n+                    default: {\n+                        std::stringstream ss;\n+                        ss << \"Couldn't lex number, junk after decimal point: \" << *c;\n+                        throw StaticError(filename, begin, ss.str());\n+                    }\n                 }\n-            }\n-            break;\n-\n-            case AFTER_DIGIT:\n-            switch (*c) {\n-                case 'e': case 'E':\n-                state = AFTER_E;\n                 break;\n \n-                case '0': case '1': case '2': case '3': case '4':\n-                case '5': case '6': case '7': case '8': case '9':\n-                state = AFTER_DIGIT;\n+            case AFTER_DIGIT:\n+                switch (*c) {\n+                    case 'e':\n+                    case 'E': state = AFTER_E; break;\n+\n+                    case '0':\n+                    case '1':\n+                    case '2':\n+                    case '3':\n+                    case '4':\n+                    case '5':\n+                    case '6':\n+                    case '7':\n+                    case '8':\n+                    case '9': state = AFTER_DIGIT; break;", "path": "core/lexer.cpp", "position": 235, "original_position": 269, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "bbacfd74c0275e08ccdf37ad4b8f3eed88d8101d", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Any way to get it to binpack the cases?", "created_at": "2017-07-23T00:36:23Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r128907665", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907665"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r128907665"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/128907665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129048478", "pull_request_review_id": 51782770, "id": 129048478, "diff_hunk": "@@ -71,32 +70,29 @@ static void lex_ws(const char *&c, unsigned &new_lines, unsigned &indent, const\n     for (; *c != '\\0' && (*c == ' ' || *c == '\\n' || *c == '\\t' || *c == '\\r'); c++) {\n         switch (*c) {\n             case '\\r':\n-            // Ignore.\n-            break;\n+                // Ignore.\n+                break;\n \n             case '\\n':\n-            indent = 0;\n-            new_lines++;\n-            line_number++;\n-            line_start = c + 1;\n-            break;\n+                indent = 0;\n+                new_lines++;\n+                line_number++;\n+                line_start = c + 1;\n+                break;\n \n             case ' ':\n-            indent += 1;\n-            break;\n+                indent += 1;\n+                break;\n \n             // This only works for \\t at the beginning of lines, but we strip it everywhere else\n             // anyway.  The only case where this will cause a problem is spaces followed by \\t\n             // at the beginning of a line.  However that is rare, ill-advised, and if re-indentation\n             // is enabled it will be fixed later.\n-            case '\\t':\n-            indent += 8;\n-            break;\n+            case '\\t': indent += 8; break;", "path": "core/lexer.cpp", "position": 72, "original_position": 72, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "bbacfd74c0275e08ccdf37ad4b8f3eed88d8101d", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "`clang-format` can sometimes produce weird results. Some quick experimentation shows that the reason why the `' '` case is not put in one line is the comment below it. But I have no idea why.", "created_at": "2017-07-24T14:19:36Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r129048478", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129048478"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r129048478"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129048478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128907640}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129050008", "pull_request_review_id": 51784485, "id": 129050008, "diff_hunk": "@@ -208,137 +214,163 @@ std::string lex_number(const char *&c, const std::string &filename, const Locati\n     while (true) {\n         switch (state) {\n             case BEGIN:\n-            switch (*c) {\n-                case '0':\n-                state = AFTER_ZERO;\n-                break;\n-\n-                case '1': case '2': case '3': case '4':\n-                case '5': case '6': case '7': case '8': case '9':\n-                state = AFTER_ONE_TO_NINE;\n+                switch (*c) {\n+                    case '0': state = AFTER_ZERO; break;\n+\n+                    case '1':\n+                    case '2':\n+                    case '3':\n+                    case '4':\n+                    case '5':\n+                    case '6':\n+                    case '7':\n+                    case '8':\n+                    case '9': state = AFTER_ONE_TO_NINE; break;\n+\n+                    default: throw StaticError(filename, begin, \"Couldn't lex number\");\n+                }\n                 break;\n \n-                default:\n-                throw StaticError(filename, begin, \"Couldn't lex number\");\n-            }\n-            break;\n-\n             case AFTER_ZERO:\n-            switch (*c) {\n-                case '.':\n-                state = AFTER_DOT;\n-                break;\n-\n-                case 'e': case 'E':\n-                state = AFTER_E;\n-                break;\n+                switch (*c) {\n+                    case '.': state = AFTER_DOT; break;\n \n-                default:\n-                goto end;\n-            }\n-            break;\n-\n-            case AFTER_ONE_TO_NINE:\n-            switch (*c) {\n-                case '.':\n-                state = AFTER_DOT;\n-                break;\n+                    case 'e':\n+                    case 'E': state = AFTER_E; break;\n \n-                case 'e': case 'E':\n-                state = AFTER_E;\n+                    default: goto end;\n+                }\n                 break;\n \n-                case '0': case '1': case '2': case '3': case '4':\n-                case '5': case '6': case '7': case '8': case '9':\n-                state = AFTER_ONE_TO_NINE;\n+            case AFTER_ONE_TO_NINE:\n+                switch (*c) {\n+                    case '.': state = AFTER_DOT; break;\n+\n+                    case 'e':\n+                    case 'E': state = AFTER_E; break;\n+\n+                    case '0':\n+                    case '1':\n+                    case '2':\n+                    case '3':\n+                    case '4':\n+                    case '5':\n+                    case '6':\n+                    case '7':\n+                    case '8':\n+                    case '9': state = AFTER_ONE_TO_NINE; break;\n+\n+                    default: goto end;\n+                }\n                 break;\n \n-                default:\n-                goto end;\n-            }\n-            break;\n-\n             case AFTER_DOT:\n-            switch (*c) {\n-                case '0': case '1': case '2': case '3': case '4':\n-                case '5': case '6': case '7': case '8': case '9':\n-                state = AFTER_DIGIT;\n-                break;\n-\n-                default: {\n-                    std::stringstream ss;\n-                    ss << \"Couldn't lex number, junk after decimal point: \" << *c;\n-                    throw StaticError(filename, begin, ss.str());\n+                switch (*c) {\n+                    case '0':\n+                    case '1':\n+                    case '2':\n+                    case '3':\n+                    case '4':\n+                    case '5':\n+                    case '6':\n+                    case '7':\n+                    case '8':\n+                    case '9': state = AFTER_DIGIT; break;\n+\n+                    default: {\n+                        std::stringstream ss;\n+                        ss << \"Couldn't lex number, junk after decimal point: \" << *c;\n+                        throw StaticError(filename, begin, ss.str());\n+                    }\n                 }\n-            }\n-            break;\n-\n-            case AFTER_DIGIT:\n-            switch (*c) {\n-                case 'e': case 'E':\n-                state = AFTER_E;\n                 break;\n \n-                case '0': case '1': case '2': case '3': case '4':\n-                case '5': case '6': case '7': case '8': case '9':\n-                state = AFTER_DIGIT;\n+            case AFTER_DIGIT:\n+                switch (*c) {\n+                    case 'e':\n+                    case 'E': state = AFTER_E; break;\n+\n+                    case '0':\n+                    case '1':\n+                    case '2':\n+                    case '3':\n+                    case '4':\n+                    case '5':\n+                    case '6':\n+                    case '7':\n+                    case '8':\n+                    case '9': state = AFTER_DIGIT; break;", "path": "core/lexer.cpp", "position": 235, "original_position": 269, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "bbacfd74c0275e08ccdf37ad4b8f3eed88d8101d", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "I can't find any.\r\n", "created_at": "2017-07-24T14:24:44Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r129050008", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129050008"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r129050008"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129050008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128907665}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129051763", "pull_request_review_id": 51786475, "id": 129051763, "diff_hunk": "@@ -277,26 +275,26 @@ static bool process_args(int argc,\n                     dir += '/';\n                 }\n                 jsonnet_jpath_add(vm, dir.c_str());\n-            // TODO(dcunnin): Remove deprecated --var, --env and -E\n-            } else if (arg == \"-V\" || arg == \"--ext-str\"\n-                       || arg == \"--var\" || arg == \"--env\" || arg == \"-E\") {\n+                // TODO(dcunnin): Remove deprecated --var, --env and -E", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 121, "commit_id": "9f5697c3d752172128f895bbd0977552aeef04ff", "original_commit_id": "bbacfd74c0275e08ccdf37ad4b8f3eed88d8101d", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Yes, that will help.", "created_at": "2017-07-24T14:30:29Z", "updated_at": "2017-08-02T15:30:53Z", "html_url": "https://github.com/google/jsonnet/pull/326#discussion_r129051763", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/326", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/129051763"}, "html": {"href": "https://github.com/google/jsonnet/pull/326#discussion_r129051763"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/326"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/129051763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 128907623}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133060425", "pull_request_review_id": 56202318, "id": 133060425, "diff_hunk": "@@ -138,7 +138,8 @@ <h2 id=\"lexing\">Lexing</h2>\n first subsequent line that does not begin with <i>W</i>, and it is an error if this line does not\n contain some optional whitespace followed by <code>|||</code>.  The content of the string is the\n concatenation of all the lines that began with <i>W</i> but with that prefix stripped.  The line\n-ending style in the file is preserved in the string.</li>\n+ending style in the file is preserved in the string.  This form cannot be used in", "path": "doc/language/spec.html", "position": 5, "original_position": 5, "commit_id": "dc7798e661b82dc47aaf10325351784986a17a01", "original_commit_id": "9a19c6b07a88432d18ec4b6301e2ddd762bab66d", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "A test for that would be nice.", "created_at": "2017-08-14T21:01:04Z", "updated_at": "2017-08-15T17:17:34Z", "html_url": "https://github.com/google/jsonnet/pull/342#discussion_r133060425", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/342", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/133060425"}, "html": {"href": "https://github.com/google/jsonnet/pull/342#discussion_r133060425"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/342"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133060425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133060442", "pull_request_review_id": 56202339, "id": 133060442, "diff_hunk": "@@ -432,21 +432,21 @@ struct Function : public AST {\n     }\n };\n \n-struct LiteralString;\n-\n /** Represents import \"file\". */\n struct Import : public AST {\n-    LiteralString *file;\n-    Import(const LocationRange &lr, const Fodder &open_fodder, LiteralString *file)\n+    // Must be a LiteralString.", "path": "core/ast.h", "position": null, "original_position": 10, "commit_id": "dc7798e661b82dc47aaf10325351784986a17a01", "original_commit_id": "9a19c6b07a88432d18ec4b6301e2ddd762bab66d", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Then why not keep it *LiteralString?\r\n\r\n(Also it doesn't compile on Travis and I think it's because of that).", "created_at": "2017-08-14T21:01:11Z", "updated_at": "2017-08-15T17:17:34Z", "html_url": "https://github.com/google/jsonnet/pull/342#discussion_r133060442", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/342", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/133060442"}, "html": {"href": "https://github.com/google/jsonnet/pull/342#discussion_r133060442"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/342"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133060442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100367", "pull_request_review_id": 56244817, "id": 133100367, "diff_hunk": "@@ -432,21 +432,21 @@ struct Function : public AST {\n     }\n };\n \n-struct LiteralString;\n-\n /** Represents import \"file\". */\n struct Import : public AST {\n-    LiteralString *file;\n-    Import(const LocationRange &lr, const Fodder &open_fodder, LiteralString *file)\n+    // Must be a LiteralString.", "path": "core/ast.h", "position": null, "original_position": 10, "commit_id": "dc7798e661b82dc47aaf10325351784986a17a01", "original_commit_id": "9a19c6b07a88432d18ec4b6301e2ddd762bab66d", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Because the desugarer visitor allows editing the AST *&, so everything has to be an AST *.", "created_at": "2017-08-15T01:22:54Z", "updated_at": "2017-08-15T17:17:34Z", "html_url": "https://github.com/google/jsonnet/pull/342#discussion_r133100367", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/342", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100367"}, "html": {"href": "https://github.com/google/jsonnet/pull/342#discussion_r133100367"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/342"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 133060442}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100384", "pull_request_review_id": 56244834, "id": 133100384, "diff_hunk": "@@ -432,21 +432,21 @@ struct Function : public AST {\n     }\n };\n \n-struct LiteralString;\n-\n /** Represents import \"file\". */\n struct Import : public AST {\n-    LiteralString *file;\n-    Import(const LocationRange &lr, const Fodder &open_fodder, LiteralString *file)\n+    // Must be a LiteralString.", "path": "core/ast.h", "position": null, "original_position": 10, "commit_id": "dc7798e661b82dc47aaf10325351784986a17a01", "original_commit_id": "9a19c6b07a88432d18ec4b6301e2ddd762bab66d", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "True of CompilerPass too, actually.", "created_at": "2017-08-15T01:23:05Z", "updated_at": "2017-08-15T17:17:34Z", "html_url": "https://github.com/google/jsonnet/pull/342#discussion_r133100384", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/342", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100384"}, "html": {"href": "https://github.com/google/jsonnet/pull/342#discussion_r133100384"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/342"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 133060442}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100546", "pull_request_review_id": 56244977, "id": 133100546, "diff_hunk": "@@ -138,7 +138,8 @@ <h2 id=\"lexing\">Lexing</h2>\n first subsequent line that does not begin with <i>W</i>, and it is an error if this line does not\n contain some optional whitespace followed by <code>|||</code>.  The content of the string is the\n concatenation of all the lines that began with <i>W</i> but with that prefix stripped.  The line\n-ending style in the file is preserved in the string.</li>\n+ending style in the file is preserved in the string.  This form cannot be used in", "path": "doc/language/spec.html", "position": 5, "original_position": 5, "commit_id": "dc7798e661b82dc47aaf10325351784986a17a01", "original_commit_id": "9a19c6b07a88432d18ec4b6301e2ddd762bab66d", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2017-08-15T01:24:48Z", "updated_at": "2017-08-15T17:17:34Z", "html_url": "https://github.com/google/jsonnet/pull/342#discussion_r133100546", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/342", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100546"}, "html": {"href": "https://github.com/google/jsonnet/pull/342#discussion_r133100546"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/342"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133100546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 133060425}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133103316", "pull_request_review_id": 56247935, "id": 133103316, "diff_hunk": "@@ -432,21 +432,21 @@ struct Function : public AST {\n     }\n };\n \n-struct LiteralString;\n-\n /** Represents import \"file\". */\n struct Import : public AST {\n-    LiteralString *file;\n-    Import(const LocationRange &lr, const Fodder &open_fodder, LiteralString *file)\n+    // Must be a LiteralString.", "path": "core/ast.h", "position": null, "original_position": 10, "commit_id": "dc7798e661b82dc47aaf10325351784986a17a01", "original_commit_id": "9a19c6b07a88432d18ec4b6301e2ddd762bab66d", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "well, yes, but it can be handled while keeping `Import::file` a `*LiteralString`. Instead of:\r\n```\r\ndesugar(ast->file, obj_level);\r\n```\r\nyou could:\r\n```\r\nAST *file = ast->file;\r\ndesugar(file, obj_level);\r\nast->file = dynamic_cast<LiteralString *>(file);\r\n```\r\nAnd it may be better, because:\r\na) It's more explicit - it clearly states that it needs to be LiteralString, but in this case desugarer could potentially put something else there.\r\nb) In general a little bit nicer data structures and a little more code within some functions is better than the other way around, imo. ", "created_at": "2017-08-15T01:54:34Z", "updated_at": "2017-08-15T17:17:34Z", "html_url": "https://github.com/google/jsonnet/pull/342#discussion_r133103316", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/342", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/133103316"}, "html": {"href": "https://github.com/google/jsonnet/pull/342#discussion_r133103316"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/342"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/133103316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 133060442}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/103289004", "pull_request_review_id": 24071049, "id": 103289004, "diff_hunk": "@@ -0,0 +1,67 @@\n+# libjsonnet\n+\n+# Remember to update Bazel and Makefile builds when updating this list! ", "path": "core/CMakeLists.txt", "position": 3, "original_position": 3, "commit_id": "41a895a68245f21315f1bae4c5340f16c2be3526", "original_commit_id": "f72cbdd99fd220fbe94b9714a78caa1b34cb429c", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "and MANIFEST.in and setup.py :(", "created_at": "2017-02-27T19:23:45Z", "updated_at": "2017-10-06T05:31:14Z", "html_url": "https://github.com/google/jsonnet/pull/303#discussion_r103289004", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/303", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/103289004"}, "html": {"href": "https://github.com/google/jsonnet/pull/303#discussion_r103289004"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/303"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/103289004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147980273", "pull_request_review_id": 73150905, "id": 147980273, "diff_hunk": "@@ -0,0 +1,210 @@\n+#!/bin/bash\n+\n+# Copyright 2015 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+DIR=\"$(dirname $0)\"\n+\n+# Global counters\n+EXECUTED=0\n+FAILED=0\n+\n+\n+JSONNET_BIN=\"${JSONNET_BIN:-../jsonnet}\"\n+\n+# Display additional information such as successful tests (useful if they are slow).\n+VERBOSE=\"${VERBOSE:-false}\"\n+\n+separator() {\n+    echo -e \"\\n-----------------------------\\n\"\n+}\n+\n+\n+check_file() {\n+    TEST=\"$1\"\n+    RESULT_FILENAME=\"$2\"\n+    GOLDEN_FILENAME=\"$3\"\n+    if [ \"$(< $RESULT_FILENAME)\" != \"$(< $GOLDEN_FILENAME)\" ] ; then\n+        FAILED=$((FAILED + 1))\n+        if [ -z \"$SUMMARY_ONLY\" ]; then\n+            echo -e \"\\e[31;1mFAIL\\e[0m \\e[1m(stdout mismatch)\\e[0m: \\e[36m$TEST\\e[0m\"\n+            echo \"Result output:\"\n+            cat \"$RESULT_FILENAME\"\n+            echo \"Expected output:\"\n+            cat \"$GOLDEN_FILENAME\"\n+            echo \"Diff:\"\n+            # Using git diff for pretty format and pretty colors\n+            git --no-pager diff \"$RESULT_FILENAME\" \"$GOLDEN_FILENAME\"\n+            # The output is often quite long, let's repeat the filename once more\n+            # to avoid wasting time on looking for it\n+            echo -e \"\\nTEST ABOVE: \\e[36m$TEST\\033[0m\"\n+            separator\n+        fi\n+        return 1\n+    fi\n+}\n+\n+do_test() {\n+    TEST=\"$1\"\n+    EXPECTED_EXIT_CODE=\"$2\"\n+    shift 2\n+\n+    STDIN=\"${TEST}.stdin\"\n+    GOLDEN_STDOUT=\"${TEST}.golden.stdout\"\n+    GOLDEN_STDERR=\"${TEST}.golden.stderr\"\n+\n+    OUT_DIR=\"out/${TEST}\" \n+    STDOUT=\"${OUT_DIR}/stdout\"\n+    STDERR=\"${OUT_DIR}/stderr\"\n+\n+    if [ ! -r \"${STDIN}\" ] ; then\n+        STDIN=\"/dev/null\"\n+    fi\n+\n+    if [ ! -r \"${GOLDEN_STDOUT}\" ] ; then\n+        GOLDEN_STDOUT=\"/dev/null\"\n+    fi\n+\n+    if [ ! -r \"${GOLDEN_STDERR}\" ] ; then\n+        GOLDEN_STDERR=\"/dev/null\"\n+    fi\n+\n+\n+    mkdir -p \"${OUT_DIR}\"\n+    \"${JSONNET_BIN}\" \"$@\" >\"${STDOUT}\" 2>\"${OUT_DIR}/stderr\" <\"${STDIN}\"\n+    TEST_EXIT_CODE=\"$?\"\n+    EXECUTED=$((EXECUTED + 1))\n+\n+    if [ \"$TEST_EXIT_CODE\" -ne \"$EXPECTED_EXIT_CODE\" ] ; then\n+        FAILED=$((FAILED + 1))\n+        if [ -z \"$SUMMARY_ONLY\" ]; then\n+            echo -e \"\\e[31;1mFAIL\\e[0m \\e[1m(exit code)\\e[0m: \\e[36m$TEST\\e[0m\"\n+            echo \"This run's stdout:\"\n+            cat \"$STDOUT\"\n+            echo \"This run's stderr:\"\n+            cat \"$STDERR\"\n+            echo \"Actual exit code $TEST_EXIT_CODE, expected $EXPECTED_EXIT_CODE\"\n+            separator\n+        fi\n+        return 1\n+    fi\n+\n+    if ! check_file \"${TEST}\" \"${STDOUT}\" \"${GOLDEN_STDOUT}\"; then\n+        return 1\n+    fi\n+    \n+    if ! check_file \"${TEST}\" \"${STDERR}\" \"${GOLDEN_STDERR}\"; then\n+        return 1\n+    fi\n+}\n+\n+pushd \"${DIR}\"\n+\n+rm -rf out\n+\n+# And now the tests:\n+\n+# do_test <name> <exit_code> <args...>\n+\n+# Only check_file additional files if the test otherwise succeded, to avoid double-counting\n+# failures.  All tests must write into out/$NAME/ and nowhere else.\n+\n+do_test \"no_args\" 1", "path": "test_cmd/run_cmd_tests.sh", "position": 32, "original_position": 123, "commit_id": "b197fecb1432bf26c710b2fbaefc89752a99667e", "original_commit_id": "7922af88ba9fbce51c9875f79ac3b81500bde732", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Can we extract the `do_test` part to a separate file? It will be easier to inspect them and add new ones without all of the machinery around them. ", "created_at": "2017-10-31T12:43:26Z", "updated_at": "2017-11-04T03:14:31Z", "html_url": "https://github.com/google/jsonnet/pull/401#discussion_r147980273", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/401", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/147980273"}, "html": {"href": "https://github.com/google/jsonnet/pull/401#discussion_r147980273"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/401"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147980273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147814386", "pull_request_review_id": 72963681, "id": 147814386, "diff_hunk": "@@ -0,0 +1,5493 @@\n+{\n+    text: std.join(',', [", "path": "perf_tests/large_string_join.jsonnet", "position": null, "original_position": 2, "commit_id": "d79931f96ad0263831b3d472a974e26f0c34bfb0", "original_commit_id": "ec517be5fc6612c0b78f519d969be5a6d2547b43", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Can we avoid having thousands of lines here? Navigating this is pretty annoying...", "created_at": "2017-10-30T19:48:19Z", "updated_at": "2017-11-04T06:05:37Z", "html_url": "https://github.com/google/jsonnet/pull/399#discussion_r147814386", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/399", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/147814386"}, "html": {"href": "https://github.com/google/jsonnet/pull/399#discussion_r147814386"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/399"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147814386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147835600", "pull_request_review_id": 72988189, "id": 147835600, "diff_hunk": "@@ -0,0 +1,5493 @@\n+{\n+    text: std.join(',', [", "path": "perf_tests/large_string_join.jsonnet", "position": null, "original_position": 2, "commit_id": "d79931f96ad0263831b3d472a974e26f0c34bfb0", "original_commit_id": "ec517be5fc6612c0b78f519d969be5a6d2547b43", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "you mean do `std.join(',', std.makeArray(n, function() 'x'))` ?\r\n\r\nsure although it'd be interesting to see how performance differs between the two.", "created_at": "2017-10-30T21:09:11Z", "updated_at": "2017-11-04T06:05:37Z", "html_url": "https://github.com/google/jsonnet/pull/399#discussion_r147835600", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/399", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/147835600"}, "html": {"href": "https://github.com/google/jsonnet/pull/399#discussion_r147835600"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/399"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147835600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 147814386}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147836422", "pull_request_review_id": 72989118, "id": 147836422, "diff_hunk": "@@ -0,0 +1,5493 @@\n+{\n+    text: std.join(',', [", "path": "perf_tests/large_string_join.jsonnet", "position": null, "original_position": 2, "commit_id": "d79931f96ad0263831b3d472a974e26f0c34bfb0", "original_commit_id": "ec517be5fc6612c0b78f519d969be5a6d2547b43", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "you made some benchmarks as well, right?\r\n\r\nI'd like to have realistic ones if possible.", "created_at": "2017-10-30T21:12:38Z", "updated_at": "2017-11-04T06:05:37Z", "html_url": "https://github.com/google/jsonnet/pull/399#discussion_r147836422", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/399", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/147836422"}, "html": {"href": "https://github.com/google/jsonnet/pull/399#discussion_r147836422"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/399"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147836422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 147814386}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147840080", "pull_request_review_id": 72993191, "id": 147840080, "diff_hunk": "@@ -0,0 +1,5493 @@\n+{\n+    text: std.join(',', [", "path": "perf_tests/large_string_join.jsonnet", "position": null, "original_position": 2, "commit_id": "d79931f96ad0263831b3d472a974e26f0c34bfb0", "original_commit_id": "ec517be5fc6612c0b78f519d969be5a6d2547b43", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "Yeah, something like that.\r\n\r\nFor truly realistic examples a corpus of real code would be the best, probably.", "created_at": "2017-10-30T21:27:33Z", "updated_at": "2017-11-04T06:05:37Z", "html_url": "https://github.com/google/jsonnet/pull/399#discussion_r147840080", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/399", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/147840080"}, "html": {"href": "https://github.com/google/jsonnet/pull/399#discussion_r147840080"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/399"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/147840080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 147814386}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/154520048", "pull_request_review_id": 80697637, "id": 154520048, "diff_hunk": "@@ -126,7 +128,8 @@ struct AST {\n     virtual ~AST(void) {}\n };\n \n-typedef std::vector<AST *> ASTs;\n+#include <list>", "path": "core/ast.h", "position": null, "original_position": 21, "commit_id": "45811604cebe5a2bb762cc9f6e0a2096c64972dd", "original_commit_id": "762a1372c956724a24481ddb2d64976b2b02baf4", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "Please move to top of file", "created_at": "2017-12-03T10:35:08Z", "updated_at": "2017-12-03T19:47:24Z", "html_url": "https://github.com/google/jsonnet/pull/416#discussion_r154520048", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/416", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/154520048"}, "html": {"href": "https://github.com/google/jsonnet/pull/416#discussion_r154520048"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/416"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/154520048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/154521888", "pull_request_review_id": 80699497, "id": 154521888, "diff_hunk": "@@ -282,70 +282,50 @@ void CompilerPass::visit(Unary *ast)\n     expr(ast->expr);\n }\n \n+#define VISIT(var,astType,astClass) \\\n+   case astType: { \\\n+     assert(dynamic_cast<astClass *>(var)); \\\n+     auto *ast = static_cast<astClass *>(var); \\\n+     visit(ast); \\\n+   } break\n+\n void CompilerPass::visitExpr(AST *&ast_)\n {\n-    if (auto *ast = dynamic_cast<Apply *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<ApplyBrace *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Array *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<ArrayComprehension *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Assert *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Binary *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<BuiltinFunction *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Conditional *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Dollar *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Error *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Function *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Import *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Importstr *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<InSuper *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Index *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Local *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<LiteralBoolean *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<LiteralNumber *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<LiteralString *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<LiteralNull *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Object *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<DesugaredObject *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<ObjectComprehension *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<ObjectComprehensionSimple *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Parens *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Self *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<SuperIndex *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Unary *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Var *>(ast_)) {\n-        visit(ast);\n-\n-    } else {\n-        std::cerr << \"INTERNAL ERROR: Unknown AST: \" << ast_ << std::endl;\n-        std::abort();\n+    switch(ast_->type) {\n+        VISIT(ast_, AST_APPLY, Apply);\n+        VISIT(ast_, AST_APPLY_BRACE, ApplyBrace);\n+        VISIT(ast_, AST_ARRAY, Array);\n+        VISIT(ast_, AST_ARRAY_COMPREHENSION, ArrayComprehension);\n+        // VISIT(ast_, AST_ARRAY_COMPREHENSION, ArrayComprehensionSimple);", "path": "core/pass.cpp", "position": 80, "original_position": 80, "commit_id": "45811604cebe5a2bb762cc9f6e0a2096c64972dd", "original_commit_id": "762a1372c956724a24481ddb2d64976b2b02baf4", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "What's happening here?", "created_at": "2017-12-03T12:03:01Z", "updated_at": "2017-12-03T19:47:24Z", "html_url": "https://github.com/google/jsonnet/pull/416#discussion_r154521888", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/416", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/154521888"}, "html": {"href": "https://github.com/google/jsonnet/pull/416#discussion_r154521888"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/416"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/154521888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/154665085", "pull_request_review_id": 80860034, "id": 154665085, "diff_hunk": "@@ -282,70 +282,50 @@ void CompilerPass::visit(Unary *ast)\n     expr(ast->expr);\n }\n \n+#define VISIT(var,astType,astClass) \\\n+   case astType: { \\\n+     assert(dynamic_cast<astClass *>(var)); \\\n+     auto *ast = static_cast<astClass *>(var); \\\n+     visit(ast); \\\n+   } break\n+\n void CompilerPass::visitExpr(AST *&ast_)\n {\n-    if (auto *ast = dynamic_cast<Apply *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<ApplyBrace *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Array *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<ArrayComprehension *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Assert *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Binary *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<BuiltinFunction *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Conditional *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Dollar *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Error *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Function *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Import *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Importstr *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<InSuper *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Index *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Local *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<LiteralBoolean *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<LiteralNumber *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<LiteralString *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<LiteralNull *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Object *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<DesugaredObject *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<ObjectComprehension *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<ObjectComprehensionSimple *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Parens *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Self *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<SuperIndex *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Unary *>(ast_)) {\n-        visit(ast);\n-    } else if (auto *ast = dynamic_cast<Var *>(ast_)) {\n-        visit(ast);\n-\n-    } else {\n-        std::cerr << \"INTERNAL ERROR: Unknown AST: \" << ast_ << std::endl;\n-        std::abort();\n+    switch(ast_->type) {\n+        VISIT(ast_, AST_APPLY, Apply);\n+        VISIT(ast_, AST_APPLY_BRACE, ApplyBrace);\n+        VISIT(ast_, AST_ARRAY, Array);\n+        VISIT(ast_, AST_ARRAY_COMPREHENSION, ArrayComprehension);\n+        // VISIT(ast_, AST_ARRAY_COMPREHENSION, ArrayComprehensionSimple);", "path": "core/pass.cpp", "position": 80, "original_position": 80, "commit_id": "45811604cebe5a2bb762cc9f6e0a2096c64972dd", "original_commit_id": "762a1372c956724a24481ddb2d64976b2b02baf4", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "I think all these passes run before desugaring, so there should not be any ArrayComprehensionSimple.  That could change in future of course.", "created_at": "2017-12-04T14:38:48Z", "updated_at": "2017-12-04T14:38:48Z", "html_url": "https://github.com/google/jsonnet/pull/416#discussion_r154665085", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/416", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/154665085"}, "html": {"href": "https://github.com/google/jsonnet/pull/416#discussion_r154665085"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/416"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/154665085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 154521888}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/156164780", "pull_request_review_id": 82598385, "id": 156164780, "diff_hunk": "@@ -126,7 +128,8 @@ struct AST {\n     virtual ~AST(void) {}\n };\n \n-typedef std::vector<AST *> ASTs;\n+#include <list>\n+typedef std::list<AST *> ASTs;", "path": "core/ast.h", "position": null, "original_position": 22, "commit_id": "45811604cebe5a2bb762cc9f6e0a2096c64972dd", "original_commit_id": "762a1372c956724a24481ddb2d64976b2b02baf4", "user": {"login": "marcelocantos", "id": 215143, "avatar_url": "https://avatars3.githubusercontent.com/u/215143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelocantos", "html_url": "https://github.com/marcelocantos", "followers_url": "https://api.github.com/users/marcelocantos/followers", "following_url": "https://api.github.com/users/marcelocantos/following{/other_user}", "gists_url": "https://api.github.com/users/marcelocantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelocantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelocantos/subscriptions", "organizations_url": "https://api.github.com/users/marcelocantos/orgs", "repos_url": "https://api.github.com/users/marcelocantos/repos", "events_url": "https://api.github.com/users/marcelocantos/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelocantos/received_events", "type": "User", "site_admin": false}, "body": "I'm skeptical that `std::list` will improve anything. It requires more mallocs and consumes more memory than `std::vector`.", "created_at": "2017-12-11T18:53:01Z", "updated_at": "2017-12-11T18:53:21Z", "html_url": "https://github.com/google/jsonnet/pull/416#discussion_r156164780", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/416", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/156164780"}, "html": {"href": "https://github.com/google/jsonnet/pull/416#discussion_r156164780"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/416"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/156164780/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/155121840", "pull_request_review_id": 81388443, "id": 155121840, "diff_hunk": "@@ -691,6 +704,24 @@ int main(int argc, const char **argv)\n     try {\n         JsonnetVm *vm = jsonnet_make();\n         JsonnetConfig config;\n+        const char *jsonnet_path_env = getenv(\"JSONNET_PATH\");\n+        if (jsonnet_path_env != nullptr) {\n+            std::list<std::string> jpath;\n+            char *input = strdup(jsonnet_path_env);\n+            do {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 51, "commit_id": "e1c1b2d1d56304f0e957252c87c1b3cd4d66c874", "original_commit_id": "248fff3748d108274447ea267430ba743c6cfcaf", "user": {"login": "sbarzowski", "id": 683828, "avatar_url": "https://avatars2.githubusercontent.com/u/683828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbarzowski", "html_url": "https://github.com/sbarzowski", "followers_url": "https://api.github.com/users/sbarzowski/followers", "following_url": "https://api.github.com/users/sbarzowski/following{/other_user}", "gists_url": "https://api.github.com/users/sbarzowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbarzowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbarzowski/subscriptions", "organizations_url": "https://api.github.com/users/sbarzowski/orgs", "repos_url": "https://api.github.com/users/sbarzowski/repos", "events_url": "https://api.github.com/users/sbarzowski/events{/privacy}", "received_events_url": "https://api.github.com/users/sbarzowski/received_events", "type": "User", "site_admin": false}, "body": "nit: Getting the list of paths out of JSONNET_PATH asks for being a separate function.", "created_at": "2017-12-06T00:59:43Z", "updated_at": "2017-12-12T04:08:07Z", "html_url": "https://github.com/google/jsonnet/pull/417#discussion_r155121840", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/417", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/155121840"}, "html": {"href": "https://github.com/google/jsonnet/pull/417#discussion_r155121840"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/417"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/155121840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994404", "pull_request_review_id": 82400047, "id": 155994404, "diff_hunk": "@@ -707,17 +708,11 @@ int main(int argc, const char **argv)\n         const char *jsonnet_path_env = getenv(\"JSONNET_PATH\");\n         if (jsonnet_path_env != nullptr) {\n             std::list<std::string> jpath;\n-            char *input = strdup(jsonnet_path_env);\n-            do {\n-                const char *path = strtok(input, const_cast<char*>(PATH_SEP));\n-                input = nullptr;\n-                if (path != nullptr) {\n-                    jpath.push_front(path);\n-                } else {\n-                    break;\n-                }\n-            } while (true);\n-            free(input);\n+            std::stringstream ss(jsonnet_path_env);", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 35, "commit_id": "e1c1b2d1d56304f0e957252c87c1b3cd4d66c874", "original_commit_id": "3adbdd72fc719f65f4f28839fd09aabd329b3336", "user": {"login": "marcelocantos", "id": 215143, "avatar_url": "https://avatars3.githubusercontent.com/u/215143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelocantos", "html_url": "https://github.com/marcelocantos", "followers_url": "https://api.github.com/users/marcelocantos/followers", "following_url": "https://api.github.com/users/marcelocantos/following{/other_user}", "gists_url": "https://api.github.com/users/marcelocantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelocantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelocantos/subscriptions", "organizations_url": "https://api.github.com/users/marcelocantos/orgs", "repos_url": "https://api.github.com/users/marcelocantos/repos", "events_url": "https://api.github.com/users/marcelocantos/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelocantos/received_events", "type": "User", "site_admin": false}, "body": "Use `std::ostringstream oss(\u2026);` instead.", "created_at": "2017-12-11T06:56:13Z", "updated_at": "2017-12-12T04:08:07Z", "html_url": "https://github.com/google/jsonnet/pull/417#discussion_r155994404", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/417", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994404"}, "html": {"href": "https://github.com/google/jsonnet/pull/417#discussion_r155994404"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/417"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994549", "pull_request_review_id": 82400224, "id": 155994549, "diff_hunk": "@@ -707,17 +708,11 @@ int main(int argc, const char **argv)\n         const char *jsonnet_path_env = getenv(\"JSONNET_PATH\");\n         if (jsonnet_path_env != nullptr) {\n             std::list<std::string> jpath;\n-            char *input = strdup(jsonnet_path_env);\n-            do {\n-                const char *path = strtok(input, const_cast<char*>(PATH_SEP));\n-                input = nullptr;\n-                if (path != nullptr) {\n-                    jpath.push_front(path);\n-                } else {\n-                    break;\n-                }\n-            } while (true);\n-            free(input);\n+            std::stringstream ss(jsonnet_path_env);\n+            std::string path;\n+            while (std::getline(ss, path, PATH_SEP)) {\n+                jpath.push_front(path);\n+            }\n             for (const std::string &path : jpath) {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 40, "commit_id": "e1c1b2d1d56304f0e957252c87c1b3cd4d66c874", "original_commit_id": "3adbdd72fc719f65f4f28839fd09aabd329b3336", "user": {"login": "marcelocantos", "id": 215143, "avatar_url": "https://avatars3.githubusercontent.com/u/215143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelocantos", "html_url": "https://github.com/marcelocantos", "followers_url": "https://api.github.com/users/marcelocantos/followers", "following_url": "https://api.github.com/users/marcelocantos/following{/other_user}", "gists_url": "https://api.github.com/users/marcelocantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelocantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelocantos/subscriptions", "organizations_url": "https://api.github.com/users/marcelocantos/orgs", "repos_url": "https://api.github.com/users/marcelocantos/repos", "events_url": "https://api.github.com/users/marcelocantos/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelocantos/received_events", "type": "User", "site_admin": false}, "body": "Fold the two loops into one for good measure.", "created_at": "2017-12-11T06:57:49Z", "updated_at": "2017-12-12T04:08:07Z", "html_url": "https://github.com/google/jsonnet/pull/417#discussion_r155994549", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/417", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994549"}, "html": {"href": "https://github.com/google/jsonnet/pull/417#discussion_r155994549"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/417"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994669", "pull_request_review_id": 82400224, "id": 155994669, "diff_hunk": "@@ -707,17 +708,11 @@ int main(int argc, const char **argv)\n         const char *jsonnet_path_env = getenv(\"JSONNET_PATH\");\n         if (jsonnet_path_env != nullptr) {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 22, "commit_id": "e1c1b2d1d56304f0e957252c87c1b3cd4d66c874", "original_commit_id": "3adbdd72fc719f65f4f28839fd09aabd329b3336", "user": {"login": "marcelocantos", "id": 215143, "avatar_url": "https://avatars3.githubusercontent.com/u/215143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelocantos", "html_url": "https://github.com/marcelocantos", "followers_url": "https://api.github.com/users/marcelocantos/followers", "following_url": "https://api.github.com/users/marcelocantos/following{/other_user}", "gists_url": "https://api.github.com/users/marcelocantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelocantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelocantos/subscriptions", "organizations_url": "https://api.github.com/users/marcelocantos/orgs", "repos_url": "https://api.github.com/users/marcelocantos/repos", "events_url": "https://api.github.com/users/marcelocantos/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelocantos/received_events", "type": "User", "site_admin": false}, "body": "Suggest: `if (const char *jsonnet_path_env = getenv(\"JSONNET_PATH\") {`", "created_at": "2017-12-11T06:59:04Z", "updated_at": "2017-12-12T04:08:07Z", "html_url": "https://github.com/google/jsonnet/pull/417#discussion_r155994669", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/417", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994669"}, "html": {"href": "https://github.com/google/jsonnet/pull/417#discussion_r155994669"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/417"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/155994669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/156267367", "pull_request_review_id": 82715472, "id": 156267367, "diff_hunk": "@@ -707,17 +708,11 @@ int main(int argc, const char **argv)\n         const char *jsonnet_path_env = getenv(\"JSONNET_PATH\");\n         if (jsonnet_path_env != nullptr) {\n             std::list<std::string> jpath;\n-            char *input = strdup(jsonnet_path_env);\n-            do {\n-                const char *path = strtok(input, const_cast<char*>(PATH_SEP));\n-                input = nullptr;\n-                if (path != nullptr) {\n-                    jpath.push_front(path);\n-                } else {\n-                    break;\n-                }\n-            } while (true);\n-            free(input);\n+            std::stringstream ss(jsonnet_path_env);\n+            std::string path;\n+            while (std::getline(ss, path, PATH_SEP)) {\n+                jpath.push_front(path);\n+            }\n             for (const std::string &path : jpath) {", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 40, "commit_id": "e1c1b2d1d56304f0e957252c87c1b3cd4d66c874", "original_commit_id": "3adbdd72fc719f65f4f28839fd09aabd329b3336", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "It's like that to reverse the order.", "created_at": "2017-12-12T04:04:51Z", "updated_at": "2017-12-12T04:08:07Z", "html_url": "https://github.com/google/jsonnet/pull/417#discussion_r156267367", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/417", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/156267367"}, "html": {"href": "https://github.com/google/jsonnet/pull/417#discussion_r156267367"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/417"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/156267367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 155994549}, {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/156267501", "pull_request_review_id": 82715632, "id": 156267501, "diff_hunk": "@@ -707,17 +708,11 @@ int main(int argc, const char **argv)\n         const char *jsonnet_path_env = getenv(\"JSONNET_PATH\");\n         if (jsonnet_path_env != nullptr) {\n             std::list<std::string> jpath;\n-            char *input = strdup(jsonnet_path_env);\n-            do {\n-                const char *path = strtok(input, const_cast<char*>(PATH_SEP));\n-                input = nullptr;\n-                if (path != nullptr) {\n-                    jpath.push_front(path);\n-                } else {\n-                    break;\n-                }\n-            } while (true);\n-            free(input);\n+            std::stringstream ss(jsonnet_path_env);", "path": "cmd/jsonnet.cpp", "position": null, "original_position": 35, "commit_id": "e1c1b2d1d56304f0e957252c87c1b3cd4d66c874", "original_commit_id": "3adbdd72fc719f65f4f28839fd09aabd329b3336", "user": {"login": "sparkprime", "id": 168158, "avatar_url": "https://avatars0.githubusercontent.com/u/168158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkprime", "html_url": "https://github.com/sparkprime", "followers_url": "https://api.github.com/users/sparkprime/followers", "following_url": "https://api.github.com/users/sparkprime/following{/other_user}", "gists_url": "https://api.github.com/users/sparkprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkprime/subscriptions", "organizations_url": "https://api.github.com/users/sparkprime/orgs", "repos_url": "https://api.github.com/users/sparkprime/repos", "events_url": "https://api.github.com/users/sparkprime/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkprime/received_events", "type": "User", "site_admin": false}, "body": "actually `istringstream` but yes, good point :)", "created_at": "2017-12-12T04:06:33Z", "updated_at": "2017-12-12T04:08:07Z", "html_url": "https://github.com/google/jsonnet/pull/417#discussion_r156267501", "pull_request_url": "https://api.github.com/repos/google/jsonnet/pulls/417", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/jsonnet/pulls/comments/156267501"}, "html": {"href": "https://github.com/google/jsonnet/pull/417#discussion_r156267501"}, "pull_request": {"href": "https://api.github.com/repos/google/jsonnet/pulls/417"}}, "reactions": {"url": "https://api.github.com/repos/google/jsonnet/pulls/comments/156267501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "in_reply_to_id": 155994404}]}}}